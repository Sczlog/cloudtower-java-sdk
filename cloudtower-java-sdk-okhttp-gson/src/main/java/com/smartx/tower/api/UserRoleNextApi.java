/*
 * Tower SDK API
 * cloudtower operation API and SDK
 *
 * The version of the OpenAPI document: 1.7.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.smartx.tower.api;

import com.smartx.tower.ApiCallback;
import com.smartx.tower.ApiClient;
import com.smartx.tower.ApiException;
import com.smartx.tower.ApiResponse;
import com.smartx.tower.Configuration;
import com.smartx.tower.Pair;
import com.smartx.tower.ProgressRequestBody;
import com.smartx.tower.ProgressResponseBody;

import com.google.gson.reflect.TypeToken;

import java.io.IOException;


import com.smartx.tower.model.GetUserRoleNextsConnectionRequestBody;
import com.smartx.tower.model.GetUserRoleNextsRequestBody;
import com.smartx.tower.model.RoleCreationParams;
import com.smartx.tower.model.RoleDeletionParams;
import com.smartx.tower.model.RoleUpdationParams;
import com.smartx.tower.model.UserRoleNext;
import com.smartx.tower.model.UserRoleNextConnection;
import com.smartx.tower.model.WithTaskDeleteRole;
import com.smartx.tower.model.WithTaskUserRoleNext;

import java.lang.reflect.Type;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

public class UserRoleNextApi {
    private ApiClient localVarApiClient;

    public UserRoleNextApi() {
        this(Configuration.getDefaultApiClient());
    }

    public UserRoleNextApi(ApiClient apiClient) {
        this.localVarApiClient = apiClient;
    }

    public ApiClient getApiClient() {
        return localVarApiClient;
    }

    public void setApiClient(ApiClient apiClient) {
        this.localVarApiClient = apiClient;
    }

    /**
     * Build call for createRole
     * @param contentLanguage  (required)
     * @param roleCreationParams  (required)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Ok </td><td>  -  </td></tr>
        <tr><td> 400 </td><td>  </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call createRoleCall(String contentLanguage, List<RoleCreationParams> roleCreationParams, final ApiCallback _callback) throws ApiException {
        Object localVarPostBody = roleCreationParams;

        // create path and map variables
        String localVarPath = "/create-role";

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        if (contentLanguage != null) {
            localVarHeaderParams.put("content-language", localVarApiClient.parameterToString(contentLanguage));
        }

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
            "application/json"
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        localVarHeaderParams.put("Content-Type", localVarContentType);

        String[] localVarAuthNames = new String[] { "Authorization" };
        return localVarApiClient.buildCall(localVarPath, "POST", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call createRoleValidateBeforeCall(String contentLanguage, List<RoleCreationParams> roleCreationParams, final ApiCallback _callback) throws ApiException {
        
        // verify the required parameter 'contentLanguage' is set
        if (contentLanguage == null) {
            throw new ApiException("Missing the required parameter 'contentLanguage' when calling createRole(Async)");
        }
        
        // verify the required parameter 'roleCreationParams' is set
        if (roleCreationParams == null) {
            throw new ApiException("Missing the required parameter 'roleCreationParams' when calling createRole(Async)");
        }
        

        okhttp3.Call localVarCall = createRoleCall(contentLanguage, roleCreationParams, _callback);
        return localVarCall;

    }

    /**
     * 
     * 
     * @param contentLanguage  (required)
     * @param roleCreationParams  (required)
     * @return List&lt;WithTaskUserRoleNext&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Ok </td><td>  -  </td></tr>
        <tr><td> 400 </td><td>  </td><td>  -  </td></tr>
     </table>
     */
    public List<WithTaskUserRoleNext> createRole(String contentLanguage, List<RoleCreationParams> roleCreationParams) throws ApiException {
        ApiResponse<List<WithTaskUserRoleNext>> localVarResp = createRoleWithHttpInfo(contentLanguage, roleCreationParams);
        return localVarResp.getData();
    }

    /**
     * 
     * 
     * @param contentLanguage  (required)
     * @param roleCreationParams  (required)
     * @return ApiResponse&lt;List&lt;WithTaskUserRoleNext&gt;&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Ok </td><td>  -  </td></tr>
        <tr><td> 400 </td><td>  </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<List<WithTaskUserRoleNext>> createRoleWithHttpInfo(String contentLanguage, List<RoleCreationParams> roleCreationParams) throws ApiException {
        okhttp3.Call localVarCall = createRoleValidateBeforeCall(contentLanguage, roleCreationParams, null);
        Type localVarReturnType = new TypeToken<List<WithTaskUserRoleNext>>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     *  (asynchronously)
     * 
     * @param contentLanguage  (required)
     * @param roleCreationParams  (required)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Ok </td><td>  -  </td></tr>
        <tr><td> 400 </td><td>  </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call createRoleAsync(String contentLanguage, List<RoleCreationParams> roleCreationParams, final ApiCallback<List<WithTaskUserRoleNext>> _callback) throws ApiException {

        okhttp3.Call localVarCall = createRoleValidateBeforeCall(contentLanguage, roleCreationParams, _callback);
        Type localVarReturnType = new TypeToken<List<WithTaskUserRoleNext>>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for deleteRole
     * @param contentLanguage  (required)
     * @param roleDeletionParams  (required)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Ok </td><td>  -  </td></tr>
        <tr><td> 400 </td><td>  </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call deleteRoleCall(String contentLanguage, RoleDeletionParams roleDeletionParams, final ApiCallback _callback) throws ApiException {
        Object localVarPostBody = roleDeletionParams;

        // create path and map variables
        String localVarPath = "/delete-role";

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        if (contentLanguage != null) {
            localVarHeaderParams.put("content-language", localVarApiClient.parameterToString(contentLanguage));
        }

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
            "application/json"
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        localVarHeaderParams.put("Content-Type", localVarContentType);

        String[] localVarAuthNames = new String[] { "Authorization" };
        return localVarApiClient.buildCall(localVarPath, "POST", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call deleteRoleValidateBeforeCall(String contentLanguage, RoleDeletionParams roleDeletionParams, final ApiCallback _callback) throws ApiException {
        
        // verify the required parameter 'contentLanguage' is set
        if (contentLanguage == null) {
            throw new ApiException("Missing the required parameter 'contentLanguage' when calling deleteRole(Async)");
        }
        
        // verify the required parameter 'roleDeletionParams' is set
        if (roleDeletionParams == null) {
            throw new ApiException("Missing the required parameter 'roleDeletionParams' when calling deleteRole(Async)");
        }
        

        okhttp3.Call localVarCall = deleteRoleCall(contentLanguage, roleDeletionParams, _callback);
        return localVarCall;

    }

    /**
     * 
     * 
     * @param contentLanguage  (required)
     * @param roleDeletionParams  (required)
     * @return List&lt;WithTaskDeleteRole&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Ok </td><td>  -  </td></tr>
        <tr><td> 400 </td><td>  </td><td>  -  </td></tr>
     </table>
     */
    public List<WithTaskDeleteRole> deleteRole(String contentLanguage, RoleDeletionParams roleDeletionParams) throws ApiException {
        ApiResponse<List<WithTaskDeleteRole>> localVarResp = deleteRoleWithHttpInfo(contentLanguage, roleDeletionParams);
        return localVarResp.getData();
    }

    /**
     * 
     * 
     * @param contentLanguage  (required)
     * @param roleDeletionParams  (required)
     * @return ApiResponse&lt;List&lt;WithTaskDeleteRole&gt;&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Ok </td><td>  -  </td></tr>
        <tr><td> 400 </td><td>  </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<List<WithTaskDeleteRole>> deleteRoleWithHttpInfo(String contentLanguage, RoleDeletionParams roleDeletionParams) throws ApiException {
        okhttp3.Call localVarCall = deleteRoleValidateBeforeCall(contentLanguage, roleDeletionParams, null);
        Type localVarReturnType = new TypeToken<List<WithTaskDeleteRole>>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     *  (asynchronously)
     * 
     * @param contentLanguage  (required)
     * @param roleDeletionParams  (required)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Ok </td><td>  -  </td></tr>
        <tr><td> 400 </td><td>  </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call deleteRoleAsync(String contentLanguage, RoleDeletionParams roleDeletionParams, final ApiCallback<List<WithTaskDeleteRole>> _callback) throws ApiException {

        okhttp3.Call localVarCall = deleteRoleValidateBeforeCall(contentLanguage, roleDeletionParams, _callback);
        Type localVarReturnType = new TypeToken<List<WithTaskDeleteRole>>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for getUserRoleNexts
     * @param contentLanguage  (required)
     * @param getUserRoleNextsRequestBody  (required)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Ok </td><td>  -  </td></tr>
        <tr><td> 400 </td><td>  </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call getUserRoleNextsCall(String contentLanguage, GetUserRoleNextsRequestBody getUserRoleNextsRequestBody, final ApiCallback _callback) throws ApiException {
        Object localVarPostBody = getUserRoleNextsRequestBody;

        // create path and map variables
        String localVarPath = "/get-user-role-nexts";

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        if (contentLanguage != null) {
            localVarHeaderParams.put("content-language", localVarApiClient.parameterToString(contentLanguage));
        }

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
            "application/json"
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        localVarHeaderParams.put("Content-Type", localVarContentType);

        String[] localVarAuthNames = new String[] { "Authorization" };
        return localVarApiClient.buildCall(localVarPath, "POST", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call getUserRoleNextsValidateBeforeCall(String contentLanguage, GetUserRoleNextsRequestBody getUserRoleNextsRequestBody, final ApiCallback _callback) throws ApiException {
        
        // verify the required parameter 'contentLanguage' is set
        if (contentLanguage == null) {
            throw new ApiException("Missing the required parameter 'contentLanguage' when calling getUserRoleNexts(Async)");
        }
        
        // verify the required parameter 'getUserRoleNextsRequestBody' is set
        if (getUserRoleNextsRequestBody == null) {
            throw new ApiException("Missing the required parameter 'getUserRoleNextsRequestBody' when calling getUserRoleNexts(Async)");
        }
        

        okhttp3.Call localVarCall = getUserRoleNextsCall(contentLanguage, getUserRoleNextsRequestBody, _callback);
        return localVarCall;

    }

    /**
     * 
     * 
     * @param contentLanguage  (required)
     * @param getUserRoleNextsRequestBody  (required)
     * @return List&lt;UserRoleNext&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Ok </td><td>  -  </td></tr>
        <tr><td> 400 </td><td>  </td><td>  -  </td></tr>
     </table>
     */
    public List<UserRoleNext> getUserRoleNexts(String contentLanguage, GetUserRoleNextsRequestBody getUserRoleNextsRequestBody) throws ApiException {
        ApiResponse<List<UserRoleNext>> localVarResp = getUserRoleNextsWithHttpInfo(contentLanguage, getUserRoleNextsRequestBody);
        return localVarResp.getData();
    }

    /**
     * 
     * 
     * @param contentLanguage  (required)
     * @param getUserRoleNextsRequestBody  (required)
     * @return ApiResponse&lt;List&lt;UserRoleNext&gt;&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Ok </td><td>  -  </td></tr>
        <tr><td> 400 </td><td>  </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<List<UserRoleNext>> getUserRoleNextsWithHttpInfo(String contentLanguage, GetUserRoleNextsRequestBody getUserRoleNextsRequestBody) throws ApiException {
        okhttp3.Call localVarCall = getUserRoleNextsValidateBeforeCall(contentLanguage, getUserRoleNextsRequestBody, null);
        Type localVarReturnType = new TypeToken<List<UserRoleNext>>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     *  (asynchronously)
     * 
     * @param contentLanguage  (required)
     * @param getUserRoleNextsRequestBody  (required)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Ok </td><td>  -  </td></tr>
        <tr><td> 400 </td><td>  </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call getUserRoleNextsAsync(String contentLanguage, GetUserRoleNextsRequestBody getUserRoleNextsRequestBody, final ApiCallback<List<UserRoleNext>> _callback) throws ApiException {

        okhttp3.Call localVarCall = getUserRoleNextsValidateBeforeCall(contentLanguage, getUserRoleNextsRequestBody, _callback);
        Type localVarReturnType = new TypeToken<List<UserRoleNext>>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for getUserRoleNextsConnection
     * @param contentLanguage  (required)
     * @param getUserRoleNextsConnectionRequestBody  (required)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Ok </td><td>  -  </td></tr>
        <tr><td> 400 </td><td>  </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call getUserRoleNextsConnectionCall(String contentLanguage, GetUserRoleNextsConnectionRequestBody getUserRoleNextsConnectionRequestBody, final ApiCallback _callback) throws ApiException {
        Object localVarPostBody = getUserRoleNextsConnectionRequestBody;

        // create path and map variables
        String localVarPath = "/get-user-role-nexts-connection";

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        if (contentLanguage != null) {
            localVarHeaderParams.put("content-language", localVarApiClient.parameterToString(contentLanguage));
        }

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
            "application/json"
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        localVarHeaderParams.put("Content-Type", localVarContentType);

        String[] localVarAuthNames = new String[] { "Authorization" };
        return localVarApiClient.buildCall(localVarPath, "POST", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call getUserRoleNextsConnectionValidateBeforeCall(String contentLanguage, GetUserRoleNextsConnectionRequestBody getUserRoleNextsConnectionRequestBody, final ApiCallback _callback) throws ApiException {
        
        // verify the required parameter 'contentLanguage' is set
        if (contentLanguage == null) {
            throw new ApiException("Missing the required parameter 'contentLanguage' when calling getUserRoleNextsConnection(Async)");
        }
        
        // verify the required parameter 'getUserRoleNextsConnectionRequestBody' is set
        if (getUserRoleNextsConnectionRequestBody == null) {
            throw new ApiException("Missing the required parameter 'getUserRoleNextsConnectionRequestBody' when calling getUserRoleNextsConnection(Async)");
        }
        

        okhttp3.Call localVarCall = getUserRoleNextsConnectionCall(contentLanguage, getUserRoleNextsConnectionRequestBody, _callback);
        return localVarCall;

    }

    /**
     * 
     * 
     * @param contentLanguage  (required)
     * @param getUserRoleNextsConnectionRequestBody  (required)
     * @return UserRoleNextConnection
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Ok </td><td>  -  </td></tr>
        <tr><td> 400 </td><td>  </td><td>  -  </td></tr>
     </table>
     */
    public UserRoleNextConnection getUserRoleNextsConnection(String contentLanguage, GetUserRoleNextsConnectionRequestBody getUserRoleNextsConnectionRequestBody) throws ApiException {
        ApiResponse<UserRoleNextConnection> localVarResp = getUserRoleNextsConnectionWithHttpInfo(contentLanguage, getUserRoleNextsConnectionRequestBody);
        return localVarResp.getData();
    }

    /**
     * 
     * 
     * @param contentLanguage  (required)
     * @param getUserRoleNextsConnectionRequestBody  (required)
     * @return ApiResponse&lt;UserRoleNextConnection&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Ok </td><td>  -  </td></tr>
        <tr><td> 400 </td><td>  </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<UserRoleNextConnection> getUserRoleNextsConnectionWithHttpInfo(String contentLanguage, GetUserRoleNextsConnectionRequestBody getUserRoleNextsConnectionRequestBody) throws ApiException {
        okhttp3.Call localVarCall = getUserRoleNextsConnectionValidateBeforeCall(contentLanguage, getUserRoleNextsConnectionRequestBody, null);
        Type localVarReturnType = new TypeToken<UserRoleNextConnection>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     *  (asynchronously)
     * 
     * @param contentLanguage  (required)
     * @param getUserRoleNextsConnectionRequestBody  (required)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Ok </td><td>  -  </td></tr>
        <tr><td> 400 </td><td>  </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call getUserRoleNextsConnectionAsync(String contentLanguage, GetUserRoleNextsConnectionRequestBody getUserRoleNextsConnectionRequestBody, final ApiCallback<UserRoleNextConnection> _callback) throws ApiException {

        okhttp3.Call localVarCall = getUserRoleNextsConnectionValidateBeforeCall(contentLanguage, getUserRoleNextsConnectionRequestBody, _callback);
        Type localVarReturnType = new TypeToken<UserRoleNextConnection>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for updateRole
     * @param contentLanguage  (required)
     * @param roleUpdationParams  (required)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Ok </td><td>  -  </td></tr>
        <tr><td> 400 </td><td>  </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call updateRoleCall(String contentLanguage, RoleUpdationParams roleUpdationParams, final ApiCallback _callback) throws ApiException {
        Object localVarPostBody = roleUpdationParams;

        // create path and map variables
        String localVarPath = "/update-role";

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        if (contentLanguage != null) {
            localVarHeaderParams.put("content-language", localVarApiClient.parameterToString(contentLanguage));
        }

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
            "application/json"
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        localVarHeaderParams.put("Content-Type", localVarContentType);

        String[] localVarAuthNames = new String[] { "Authorization" };
        return localVarApiClient.buildCall(localVarPath, "POST", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call updateRoleValidateBeforeCall(String contentLanguage, RoleUpdationParams roleUpdationParams, final ApiCallback _callback) throws ApiException {
        
        // verify the required parameter 'contentLanguage' is set
        if (contentLanguage == null) {
            throw new ApiException("Missing the required parameter 'contentLanguage' when calling updateRole(Async)");
        }
        
        // verify the required parameter 'roleUpdationParams' is set
        if (roleUpdationParams == null) {
            throw new ApiException("Missing the required parameter 'roleUpdationParams' when calling updateRole(Async)");
        }
        

        okhttp3.Call localVarCall = updateRoleCall(contentLanguage, roleUpdationParams, _callback);
        return localVarCall;

    }

    /**
     * 
     * 
     * @param contentLanguage  (required)
     * @param roleUpdationParams  (required)
     * @return List&lt;WithTaskUserRoleNext&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Ok </td><td>  -  </td></tr>
        <tr><td> 400 </td><td>  </td><td>  -  </td></tr>
     </table>
     */
    public List<WithTaskUserRoleNext> updateRole(String contentLanguage, RoleUpdationParams roleUpdationParams) throws ApiException {
        ApiResponse<List<WithTaskUserRoleNext>> localVarResp = updateRoleWithHttpInfo(contentLanguage, roleUpdationParams);
        return localVarResp.getData();
    }

    /**
     * 
     * 
     * @param contentLanguage  (required)
     * @param roleUpdationParams  (required)
     * @return ApiResponse&lt;List&lt;WithTaskUserRoleNext&gt;&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Ok </td><td>  -  </td></tr>
        <tr><td> 400 </td><td>  </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<List<WithTaskUserRoleNext>> updateRoleWithHttpInfo(String contentLanguage, RoleUpdationParams roleUpdationParams) throws ApiException {
        okhttp3.Call localVarCall = updateRoleValidateBeforeCall(contentLanguage, roleUpdationParams, null);
        Type localVarReturnType = new TypeToken<List<WithTaskUserRoleNext>>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     *  (asynchronously)
     * 
     * @param contentLanguage  (required)
     * @param roleUpdationParams  (required)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Ok </td><td>  -  </td></tr>
        <tr><td> 400 </td><td>  </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call updateRoleAsync(String contentLanguage, RoleUpdationParams roleUpdationParams, final ApiCallback<List<WithTaskUserRoleNext>> _callback) throws ApiException {

        okhttp3.Call localVarCall = updateRoleValidateBeforeCall(contentLanguage, roleUpdationParams, _callback);
        Type localVarReturnType = new TypeToken<List<WithTaskUserRoleNext>>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
}
