/*
 * Tower SDK API
 * cloudtower operation API and SDK
 *
 * The version of the OpenAPI document: 1.7.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.smartx.tower.model;

import java.util.Objects;
import java.util.Arrays;
import java.util.Map;
import java.util.HashMap;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import com.smartx.tower.model.ClusterWhereInput;
import com.smartx.tower.model.ContentLibraryImageWhereInput;
import com.smartx.tower.model.EntityAsyncStatus;
import com.smartx.tower.model.LabelWhereInput;
import com.smartx.tower.model.VmDiskWhereInput;
import com.smartx.tower.model.VmSnapshotWhereInput;
import com.smartx.tower.model.VmTemplateWhereInput;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.util.ArrayList;
import java.util.List;
import org.openapitools.jackson.nullable.JsonNullable;
import com.fasterxml.jackson.annotation.JsonIgnore;
import org.openapitools.jackson.nullable.JsonNullable;
import java.util.NoSuchElementException;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;


/**
 * ElfImageWhereInput
 */
@JsonPropertyOrder({
  ElfImageWhereInput.JSON_PROPERTY_A_N_D,
  ElfImageWhereInput.JSON_PROPERTY_CLUSTER,
  ElfImageWhereInput.JSON_PROPERTY_CONTENT_LIBRARY_IMAGE,
  ElfImageWhereInput.JSON_PROPERTY_DESCRIPTION,
  ElfImageWhereInput.JSON_PROPERTY_DESCRIPTION_CONTAINS,
  ElfImageWhereInput.JSON_PROPERTY_DESCRIPTION_ENDS_WITH,
  ElfImageWhereInput.JSON_PROPERTY_DESCRIPTION_GT,
  ElfImageWhereInput.JSON_PROPERTY_DESCRIPTION_GTE,
  ElfImageWhereInput.JSON_PROPERTY_DESCRIPTION_IN,
  ElfImageWhereInput.JSON_PROPERTY_DESCRIPTION_LT,
  ElfImageWhereInput.JSON_PROPERTY_DESCRIPTION_LTE,
  ElfImageWhereInput.JSON_PROPERTY_DESCRIPTION_NOT,
  ElfImageWhereInput.JSON_PROPERTY_DESCRIPTION_NOT_CONTAINS,
  ElfImageWhereInput.JSON_PROPERTY_DESCRIPTION_NOT_ENDS_WITH,
  ElfImageWhereInput.JSON_PROPERTY_DESCRIPTION_NOT_IN,
  ElfImageWhereInput.JSON_PROPERTY_DESCRIPTION_NOT_STARTS_WITH,
  ElfImageWhereInput.JSON_PROPERTY_DESCRIPTION_STARTS_WITH,
  ElfImageWhereInput.JSON_PROPERTY_ENTITY_ASYNC_STATUS,
  ElfImageWhereInput.JSON_PROPERTY_ENTITY_ASYNC_STATUS_IN,
  ElfImageWhereInput.JSON_PROPERTY_ENTITY_ASYNC_STATUS_NOT,
  ElfImageWhereInput.JSON_PROPERTY_ENTITY_ASYNC_STATUS_NOT_IN,
  ElfImageWhereInput.JSON_PROPERTY_ID,
  ElfImageWhereInput.JSON_PROPERTY_ID_CONTAINS,
  ElfImageWhereInput.JSON_PROPERTY_ID_ENDS_WITH,
  ElfImageWhereInput.JSON_PROPERTY_ID_GT,
  ElfImageWhereInput.JSON_PROPERTY_ID_GTE,
  ElfImageWhereInput.JSON_PROPERTY_ID_IN,
  ElfImageWhereInput.JSON_PROPERTY_ID_LT,
  ElfImageWhereInput.JSON_PROPERTY_ID_LTE,
  ElfImageWhereInput.JSON_PROPERTY_ID_NOT,
  ElfImageWhereInput.JSON_PROPERTY_ID_NOT_CONTAINS,
  ElfImageWhereInput.JSON_PROPERTY_ID_NOT_ENDS_WITH,
  ElfImageWhereInput.JSON_PROPERTY_ID_NOT_IN,
  ElfImageWhereInput.JSON_PROPERTY_ID_NOT_STARTS_WITH,
  ElfImageWhereInput.JSON_PROPERTY_ID_STARTS_WITH,
  ElfImageWhereInput.JSON_PROPERTY_LABELS_EVERY,
  ElfImageWhereInput.JSON_PROPERTY_LABELS_NONE,
  ElfImageWhereInput.JSON_PROPERTY_LABELS_SOME,
  ElfImageWhereInput.JSON_PROPERTY_LOCAL_CREATED_AT,
  ElfImageWhereInput.JSON_PROPERTY_LOCAL_CREATED_AT_GT,
  ElfImageWhereInput.JSON_PROPERTY_LOCAL_CREATED_AT_GTE,
  ElfImageWhereInput.JSON_PROPERTY_LOCAL_CREATED_AT_IN,
  ElfImageWhereInput.JSON_PROPERTY_LOCAL_CREATED_AT_LT,
  ElfImageWhereInput.JSON_PROPERTY_LOCAL_CREATED_AT_LTE,
  ElfImageWhereInput.JSON_PROPERTY_LOCAL_CREATED_AT_NOT,
  ElfImageWhereInput.JSON_PROPERTY_LOCAL_CREATED_AT_NOT_IN,
  ElfImageWhereInput.JSON_PROPERTY_LOCAL_ID,
  ElfImageWhereInput.JSON_PROPERTY_LOCAL_ID_CONTAINS,
  ElfImageWhereInput.JSON_PROPERTY_LOCAL_ID_ENDS_WITH,
  ElfImageWhereInput.JSON_PROPERTY_LOCAL_ID_GT,
  ElfImageWhereInput.JSON_PROPERTY_LOCAL_ID_GTE,
  ElfImageWhereInput.JSON_PROPERTY_LOCAL_ID_IN,
  ElfImageWhereInput.JSON_PROPERTY_LOCAL_ID_LT,
  ElfImageWhereInput.JSON_PROPERTY_LOCAL_ID_LTE,
  ElfImageWhereInput.JSON_PROPERTY_LOCAL_ID_NOT,
  ElfImageWhereInput.JSON_PROPERTY_LOCAL_ID_NOT_CONTAINS,
  ElfImageWhereInput.JSON_PROPERTY_LOCAL_ID_NOT_ENDS_WITH,
  ElfImageWhereInput.JSON_PROPERTY_LOCAL_ID_NOT_IN,
  ElfImageWhereInput.JSON_PROPERTY_LOCAL_ID_NOT_STARTS_WITH,
  ElfImageWhereInput.JSON_PROPERTY_LOCAL_ID_STARTS_WITH,
  ElfImageWhereInput.JSON_PROPERTY_NAME,
  ElfImageWhereInput.JSON_PROPERTY_NAME_CONTAINS,
  ElfImageWhereInput.JSON_PROPERTY_NAME_ENDS_WITH,
  ElfImageWhereInput.JSON_PROPERTY_NAME_GT,
  ElfImageWhereInput.JSON_PROPERTY_NAME_GTE,
  ElfImageWhereInput.JSON_PROPERTY_NAME_IN,
  ElfImageWhereInput.JSON_PROPERTY_NAME_LT,
  ElfImageWhereInput.JSON_PROPERTY_NAME_LTE,
  ElfImageWhereInput.JSON_PROPERTY_NAME_NOT,
  ElfImageWhereInput.JSON_PROPERTY_NAME_NOT_CONTAINS,
  ElfImageWhereInput.JSON_PROPERTY_NAME_NOT_ENDS_WITH,
  ElfImageWhereInput.JSON_PROPERTY_NAME_NOT_IN,
  ElfImageWhereInput.JSON_PROPERTY_NAME_NOT_STARTS_WITH,
  ElfImageWhereInput.JSON_PROPERTY_NAME_STARTS_WITH,
  ElfImageWhereInput.JSON_PROPERTY_N_O_T,
  ElfImageWhereInput.JSON_PROPERTY_O_R,
  ElfImageWhereInput.JSON_PROPERTY_PATH,
  ElfImageWhereInput.JSON_PROPERTY_PATH_CONTAINS,
  ElfImageWhereInput.JSON_PROPERTY_PATH_ENDS_WITH,
  ElfImageWhereInput.JSON_PROPERTY_PATH_GT,
  ElfImageWhereInput.JSON_PROPERTY_PATH_GTE,
  ElfImageWhereInput.JSON_PROPERTY_PATH_IN,
  ElfImageWhereInput.JSON_PROPERTY_PATH_LT,
  ElfImageWhereInput.JSON_PROPERTY_PATH_LTE,
  ElfImageWhereInput.JSON_PROPERTY_PATH_NOT,
  ElfImageWhereInput.JSON_PROPERTY_PATH_NOT_CONTAINS,
  ElfImageWhereInput.JSON_PROPERTY_PATH_NOT_ENDS_WITH,
  ElfImageWhereInput.JSON_PROPERTY_PATH_NOT_IN,
  ElfImageWhereInput.JSON_PROPERTY_PATH_NOT_STARTS_WITH,
  ElfImageWhereInput.JSON_PROPERTY_PATH_STARTS_WITH,
  ElfImageWhereInput.JSON_PROPERTY_SIZE,
  ElfImageWhereInput.JSON_PROPERTY_SIZE_GT,
  ElfImageWhereInput.JSON_PROPERTY_SIZE_GTE,
  ElfImageWhereInput.JSON_PROPERTY_SIZE_IN,
  ElfImageWhereInput.JSON_PROPERTY_SIZE_LT,
  ElfImageWhereInput.JSON_PROPERTY_SIZE_LTE,
  ElfImageWhereInput.JSON_PROPERTY_SIZE_NOT,
  ElfImageWhereInput.JSON_PROPERTY_SIZE_NOT_IN,
  ElfImageWhereInput.JSON_PROPERTY_VM_DISKS_EVERY,
  ElfImageWhereInput.JSON_PROPERTY_VM_DISKS_NONE,
  ElfImageWhereInput.JSON_PROPERTY_VM_DISKS_SOME,
  ElfImageWhereInput.JSON_PROPERTY_VM_SNAPSHOTS_EVERY,
  ElfImageWhereInput.JSON_PROPERTY_VM_SNAPSHOTS_NONE,
  ElfImageWhereInput.JSON_PROPERTY_VM_SNAPSHOTS_SOME,
  ElfImageWhereInput.JSON_PROPERTY_VM_TEMPLATES_EVERY,
  ElfImageWhereInput.JSON_PROPERTY_VM_TEMPLATES_NONE,
  ElfImageWhereInput.JSON_PROPERTY_VM_TEMPLATES_SOME
})
@javax.annotation.processing.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2021-10-27T15:59:14.939791800+08:00[Asia/Shanghai]")
public class ElfImageWhereInput {
  public static final String JSON_PROPERTY_A_N_D = "AND";
  private JsonNullable<List<ElfImageWhereInput>> AND = JsonNullable.<List<ElfImageWhereInput>>undefined();

  public static final String JSON_PROPERTY_CLUSTER = "cluster";
  private JsonNullable<ClusterWhereInput> cluster = JsonNullable.<ClusterWhereInput>undefined();

  public static final String JSON_PROPERTY_CONTENT_LIBRARY_IMAGE = "content_library_image";
  private JsonNullable<ContentLibraryImageWhereInput> contentLibraryImage = JsonNullable.<ContentLibraryImageWhereInput>undefined();

  public static final String JSON_PROPERTY_DESCRIPTION = "description";
  private JsonNullable<String> description = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_DESCRIPTION_CONTAINS = "description_contains";
  private JsonNullable<String> descriptionContains = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_DESCRIPTION_ENDS_WITH = "description_ends_with";
  private JsonNullable<String> descriptionEndsWith = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_DESCRIPTION_GT = "description_gt";
  private JsonNullable<String> descriptionGt = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_DESCRIPTION_GTE = "description_gte";
  private JsonNullable<String> descriptionGte = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_DESCRIPTION_IN = "description_in";
  private JsonNullable<List<String>> descriptionIn = JsonNullable.<List<String>>undefined();

  public static final String JSON_PROPERTY_DESCRIPTION_LT = "description_lt";
  private JsonNullable<String> descriptionLt = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_DESCRIPTION_LTE = "description_lte";
  private JsonNullable<String> descriptionLte = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_DESCRIPTION_NOT = "description_not";
  private JsonNullable<String> descriptionNot = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_DESCRIPTION_NOT_CONTAINS = "description_not_contains";
  private JsonNullable<String> descriptionNotContains = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_DESCRIPTION_NOT_ENDS_WITH = "description_not_ends_with";
  private JsonNullable<String> descriptionNotEndsWith = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_DESCRIPTION_NOT_IN = "description_not_in";
  private JsonNullable<List<String>> descriptionNotIn = JsonNullable.<List<String>>undefined();

  public static final String JSON_PROPERTY_DESCRIPTION_NOT_STARTS_WITH = "description_not_starts_with";
  private JsonNullable<String> descriptionNotStartsWith = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_DESCRIPTION_STARTS_WITH = "description_starts_with";
  private JsonNullable<String> descriptionStartsWith = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_ENTITY_ASYNC_STATUS = "entityAsyncStatus";
  private JsonNullable<EntityAsyncStatus> entityAsyncStatus = JsonNullable.<EntityAsyncStatus>undefined();

  public static final String JSON_PROPERTY_ENTITY_ASYNC_STATUS_IN = "entityAsyncStatus_in";
  private JsonNullable<List<EntityAsyncStatus>> entityAsyncStatusIn = JsonNullable.<List<EntityAsyncStatus>>undefined();

  public static final String JSON_PROPERTY_ENTITY_ASYNC_STATUS_NOT = "entityAsyncStatus_not";
  private JsonNullable<EntityAsyncStatus> entityAsyncStatusNot = JsonNullable.<EntityAsyncStatus>undefined();

  public static final String JSON_PROPERTY_ENTITY_ASYNC_STATUS_NOT_IN = "entityAsyncStatus_not_in";
  private JsonNullable<List<EntityAsyncStatus>> entityAsyncStatusNotIn = JsonNullable.<List<EntityAsyncStatus>>undefined();

  public static final String JSON_PROPERTY_ID = "id";
  private JsonNullable<String> id = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_ID_CONTAINS = "id_contains";
  private JsonNullable<String> idContains = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_ID_ENDS_WITH = "id_ends_with";
  private JsonNullable<String> idEndsWith = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_ID_GT = "id_gt";
  private JsonNullable<String> idGt = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_ID_GTE = "id_gte";
  private JsonNullable<String> idGte = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_ID_IN = "id_in";
  private JsonNullable<List<String>> idIn = JsonNullable.<List<String>>undefined();

  public static final String JSON_PROPERTY_ID_LT = "id_lt";
  private JsonNullable<String> idLt = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_ID_LTE = "id_lte";
  private JsonNullable<String> idLte = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_ID_NOT = "id_not";
  private JsonNullable<String> idNot = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_ID_NOT_CONTAINS = "id_not_contains";
  private JsonNullable<String> idNotContains = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_ID_NOT_ENDS_WITH = "id_not_ends_with";
  private JsonNullable<String> idNotEndsWith = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_ID_NOT_IN = "id_not_in";
  private JsonNullable<List<String>> idNotIn = JsonNullable.<List<String>>undefined();

  public static final String JSON_PROPERTY_ID_NOT_STARTS_WITH = "id_not_starts_with";
  private JsonNullable<String> idNotStartsWith = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_ID_STARTS_WITH = "id_starts_with";
  private JsonNullable<String> idStartsWith = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_LABELS_EVERY = "labels_every";
  private JsonNullable<LabelWhereInput> labelsEvery = JsonNullable.<LabelWhereInput>undefined();

  public static final String JSON_PROPERTY_LABELS_NONE = "labels_none";
  private JsonNullable<LabelWhereInput> labelsNone = JsonNullable.<LabelWhereInput>undefined();

  public static final String JSON_PROPERTY_LABELS_SOME = "labels_some";
  private JsonNullable<LabelWhereInput> labelsSome = JsonNullable.<LabelWhereInput>undefined();

  public static final String JSON_PROPERTY_LOCAL_CREATED_AT = "local_created_at";
  private JsonNullable<String> localCreatedAt = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_LOCAL_CREATED_AT_GT = "local_created_at_gt";
  private JsonNullable<String> localCreatedAtGt = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_LOCAL_CREATED_AT_GTE = "local_created_at_gte";
  private JsonNullable<String> localCreatedAtGte = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_LOCAL_CREATED_AT_IN = "local_created_at_in";
  private JsonNullable<List<String>> localCreatedAtIn = JsonNullable.<List<String>>undefined();

  public static final String JSON_PROPERTY_LOCAL_CREATED_AT_LT = "local_created_at_lt";
  private JsonNullable<String> localCreatedAtLt = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_LOCAL_CREATED_AT_LTE = "local_created_at_lte";
  private JsonNullable<String> localCreatedAtLte = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_LOCAL_CREATED_AT_NOT = "local_created_at_not";
  private JsonNullable<String> localCreatedAtNot = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_LOCAL_CREATED_AT_NOT_IN = "local_created_at_not_in";
  private JsonNullable<List<String>> localCreatedAtNotIn = JsonNullable.<List<String>>undefined();

  public static final String JSON_PROPERTY_LOCAL_ID = "local_id";
  private JsonNullable<String> localId = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_LOCAL_ID_CONTAINS = "local_id_contains";
  private JsonNullable<String> localIdContains = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_LOCAL_ID_ENDS_WITH = "local_id_ends_with";
  private JsonNullable<String> localIdEndsWith = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_LOCAL_ID_GT = "local_id_gt";
  private JsonNullable<String> localIdGt = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_LOCAL_ID_GTE = "local_id_gte";
  private JsonNullable<String> localIdGte = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_LOCAL_ID_IN = "local_id_in";
  private JsonNullable<List<String>> localIdIn = JsonNullable.<List<String>>undefined();

  public static final String JSON_PROPERTY_LOCAL_ID_LT = "local_id_lt";
  private JsonNullable<String> localIdLt = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_LOCAL_ID_LTE = "local_id_lte";
  private JsonNullable<String> localIdLte = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_LOCAL_ID_NOT = "local_id_not";
  private JsonNullable<String> localIdNot = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_LOCAL_ID_NOT_CONTAINS = "local_id_not_contains";
  private JsonNullable<String> localIdNotContains = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_LOCAL_ID_NOT_ENDS_WITH = "local_id_not_ends_with";
  private JsonNullable<String> localIdNotEndsWith = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_LOCAL_ID_NOT_IN = "local_id_not_in";
  private JsonNullable<List<String>> localIdNotIn = JsonNullable.<List<String>>undefined();

  public static final String JSON_PROPERTY_LOCAL_ID_NOT_STARTS_WITH = "local_id_not_starts_with";
  private JsonNullable<String> localIdNotStartsWith = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_LOCAL_ID_STARTS_WITH = "local_id_starts_with";
  private JsonNullable<String> localIdStartsWith = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_NAME = "name";
  private JsonNullable<String> name = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_NAME_CONTAINS = "name_contains";
  private JsonNullable<String> nameContains = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_NAME_ENDS_WITH = "name_ends_with";
  private JsonNullable<String> nameEndsWith = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_NAME_GT = "name_gt";
  private JsonNullable<String> nameGt = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_NAME_GTE = "name_gte";
  private JsonNullable<String> nameGte = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_NAME_IN = "name_in";
  private JsonNullable<List<String>> nameIn = JsonNullable.<List<String>>undefined();

  public static final String JSON_PROPERTY_NAME_LT = "name_lt";
  private JsonNullable<String> nameLt = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_NAME_LTE = "name_lte";
  private JsonNullable<String> nameLte = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_NAME_NOT = "name_not";
  private JsonNullable<String> nameNot = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_NAME_NOT_CONTAINS = "name_not_contains";
  private JsonNullable<String> nameNotContains = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_NAME_NOT_ENDS_WITH = "name_not_ends_with";
  private JsonNullable<String> nameNotEndsWith = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_NAME_NOT_IN = "name_not_in";
  private JsonNullable<List<String>> nameNotIn = JsonNullable.<List<String>>undefined();

  public static final String JSON_PROPERTY_NAME_NOT_STARTS_WITH = "name_not_starts_with";
  private JsonNullable<String> nameNotStartsWith = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_NAME_STARTS_WITH = "name_starts_with";
  private JsonNullable<String> nameStartsWith = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_N_O_T = "NOT";
  private JsonNullable<List<ElfImageWhereInput>> NOT = JsonNullable.<List<ElfImageWhereInput>>undefined();

  public static final String JSON_PROPERTY_O_R = "OR";
  private JsonNullable<List<ElfImageWhereInput>> OR = JsonNullable.<List<ElfImageWhereInput>>undefined();

  public static final String JSON_PROPERTY_PATH = "path";
  private JsonNullable<String> path = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_PATH_CONTAINS = "path_contains";
  private JsonNullable<String> pathContains = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_PATH_ENDS_WITH = "path_ends_with";
  private JsonNullable<String> pathEndsWith = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_PATH_GT = "path_gt";
  private JsonNullable<String> pathGt = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_PATH_GTE = "path_gte";
  private JsonNullable<String> pathGte = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_PATH_IN = "path_in";
  private JsonNullable<List<String>> pathIn = JsonNullable.<List<String>>undefined();

  public static final String JSON_PROPERTY_PATH_LT = "path_lt";
  private JsonNullable<String> pathLt = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_PATH_LTE = "path_lte";
  private JsonNullable<String> pathLte = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_PATH_NOT = "path_not";
  private JsonNullable<String> pathNot = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_PATH_NOT_CONTAINS = "path_not_contains";
  private JsonNullable<String> pathNotContains = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_PATH_NOT_ENDS_WITH = "path_not_ends_with";
  private JsonNullable<String> pathNotEndsWith = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_PATH_NOT_IN = "path_not_in";
  private JsonNullable<List<String>> pathNotIn = JsonNullable.<List<String>>undefined();

  public static final String JSON_PROPERTY_PATH_NOT_STARTS_WITH = "path_not_starts_with";
  private JsonNullable<String> pathNotStartsWith = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_PATH_STARTS_WITH = "path_starts_with";
  private JsonNullable<String> pathStartsWith = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_SIZE = "size";
  private JsonNullable<Double> size = JsonNullable.<Double>undefined();

  public static final String JSON_PROPERTY_SIZE_GT = "size_gt";
  private JsonNullable<Double> sizeGt = JsonNullable.<Double>undefined();

  public static final String JSON_PROPERTY_SIZE_GTE = "size_gte";
  private JsonNullable<Double> sizeGte = JsonNullable.<Double>undefined();

  public static final String JSON_PROPERTY_SIZE_IN = "size_in";
  private JsonNullable<List<Double>> sizeIn = JsonNullable.<List<Double>>undefined();

  public static final String JSON_PROPERTY_SIZE_LT = "size_lt";
  private JsonNullable<Double> sizeLt = JsonNullable.<Double>undefined();

  public static final String JSON_PROPERTY_SIZE_LTE = "size_lte";
  private JsonNullable<Double> sizeLte = JsonNullable.<Double>undefined();

  public static final String JSON_PROPERTY_SIZE_NOT = "size_not";
  private JsonNullable<Double> sizeNot = JsonNullable.<Double>undefined();

  public static final String JSON_PROPERTY_SIZE_NOT_IN = "size_not_in";
  private JsonNullable<List<Double>> sizeNotIn = JsonNullable.<List<Double>>undefined();

  public static final String JSON_PROPERTY_VM_DISKS_EVERY = "vm_disks_every";
  private JsonNullable<VmDiskWhereInput> vmDisksEvery = JsonNullable.<VmDiskWhereInput>undefined();

  public static final String JSON_PROPERTY_VM_DISKS_NONE = "vm_disks_none";
  private JsonNullable<VmDiskWhereInput> vmDisksNone = JsonNullable.<VmDiskWhereInput>undefined();

  public static final String JSON_PROPERTY_VM_DISKS_SOME = "vm_disks_some";
  private JsonNullable<VmDiskWhereInput> vmDisksSome = JsonNullable.<VmDiskWhereInput>undefined();

  public static final String JSON_PROPERTY_VM_SNAPSHOTS_EVERY = "vm_snapshots_every";
  private JsonNullable<VmSnapshotWhereInput> vmSnapshotsEvery = JsonNullable.<VmSnapshotWhereInput>undefined();

  public static final String JSON_PROPERTY_VM_SNAPSHOTS_NONE = "vm_snapshots_none";
  private JsonNullable<VmSnapshotWhereInput> vmSnapshotsNone = JsonNullable.<VmSnapshotWhereInput>undefined();

  public static final String JSON_PROPERTY_VM_SNAPSHOTS_SOME = "vm_snapshots_some";
  private JsonNullable<VmSnapshotWhereInput> vmSnapshotsSome = JsonNullable.<VmSnapshotWhereInput>undefined();

  public static final String JSON_PROPERTY_VM_TEMPLATES_EVERY = "vm_templates_every";
  private JsonNullable<VmTemplateWhereInput> vmTemplatesEvery = JsonNullable.<VmTemplateWhereInput>undefined();

  public static final String JSON_PROPERTY_VM_TEMPLATES_NONE = "vm_templates_none";
  private JsonNullable<VmTemplateWhereInput> vmTemplatesNone = JsonNullable.<VmTemplateWhereInput>undefined();

  public static final String JSON_PROPERTY_VM_TEMPLATES_SOME = "vm_templates_some";
  private JsonNullable<VmTemplateWhereInput> vmTemplatesSome = JsonNullable.<VmTemplateWhereInput>undefined();


  public ElfImageWhereInput AND(List<ElfImageWhereInput> AND) {
    this.AND = JsonNullable.<List<ElfImageWhereInput>>of(AND);
    return this;
  }

  public ElfImageWhereInput addANDItem(ElfImageWhereInput ANDItem) {
    if (this.AND == null || !this.AND.isPresent()) {
      this.AND = JsonNullable.<List<ElfImageWhereInput>>of(new ArrayList<>());
    }
    try {
      this.AND.get().add(ANDItem);
    } catch (java.util.NoSuchElementException e) {
      // this can never happen, as we make sure above that the value is present
    }
    return this;
  }

   /**
   * Get AND
   * @return AND
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public List<ElfImageWhereInput> getAND() {
        return AND.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_A_N_D)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<List<ElfImageWhereInput>> getAND_JsonNullable() {
    return AND;
  }
  
  @JsonProperty(JSON_PROPERTY_A_N_D)
  public void setAND_JsonNullable(JsonNullable<List<ElfImageWhereInput>> AND) {
    this.AND = AND;
  }

  public void setAND(List<ElfImageWhereInput> AND) {
    this.AND = JsonNullable.<List<ElfImageWhereInput>>of(AND);
  }


  public ElfImageWhereInput cluster(ClusterWhereInput cluster) {
    this.cluster = JsonNullable.<ClusterWhereInput>of(cluster);
    return this;
  }

   /**
   * Get cluster
   * @return cluster
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public ClusterWhereInput getCluster() {
        return cluster.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_CLUSTER)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<ClusterWhereInput> getCluster_JsonNullable() {
    return cluster;
  }
  
  @JsonProperty(JSON_PROPERTY_CLUSTER)
  public void setCluster_JsonNullable(JsonNullable<ClusterWhereInput> cluster) {
    this.cluster = cluster;
  }

  public void setCluster(ClusterWhereInput cluster) {
    this.cluster = JsonNullable.<ClusterWhereInput>of(cluster);
  }


  public ElfImageWhereInput contentLibraryImage(ContentLibraryImageWhereInput contentLibraryImage) {
    this.contentLibraryImage = JsonNullable.<ContentLibraryImageWhereInput>of(contentLibraryImage);
    return this;
  }

   /**
   * Get contentLibraryImage
   * @return contentLibraryImage
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public ContentLibraryImageWhereInput getContentLibraryImage() {
        return contentLibraryImage.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_CONTENT_LIBRARY_IMAGE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<ContentLibraryImageWhereInput> getContentLibraryImage_JsonNullable() {
    return contentLibraryImage;
  }
  
  @JsonProperty(JSON_PROPERTY_CONTENT_LIBRARY_IMAGE)
  public void setContentLibraryImage_JsonNullable(JsonNullable<ContentLibraryImageWhereInput> contentLibraryImage) {
    this.contentLibraryImage = contentLibraryImage;
  }

  public void setContentLibraryImage(ContentLibraryImageWhereInput contentLibraryImage) {
    this.contentLibraryImage = JsonNullable.<ContentLibraryImageWhereInput>of(contentLibraryImage);
  }


  public ElfImageWhereInput description(String description) {
    this.description = JsonNullable.<String>of(description);
    return this;
  }

   /**
   * Get description
   * @return description
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getDescription() {
        return description.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_DESCRIPTION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getDescription_JsonNullable() {
    return description;
  }
  
  @JsonProperty(JSON_PROPERTY_DESCRIPTION)
  public void setDescription_JsonNullable(JsonNullable<String> description) {
    this.description = description;
  }

  public void setDescription(String description) {
    this.description = JsonNullable.<String>of(description);
  }


  public ElfImageWhereInput descriptionContains(String descriptionContains) {
    this.descriptionContains = JsonNullable.<String>of(descriptionContains);
    return this;
  }

   /**
   * Get descriptionContains
   * @return descriptionContains
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getDescriptionContains() {
        return descriptionContains.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_DESCRIPTION_CONTAINS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getDescriptionContains_JsonNullable() {
    return descriptionContains;
  }
  
  @JsonProperty(JSON_PROPERTY_DESCRIPTION_CONTAINS)
  public void setDescriptionContains_JsonNullable(JsonNullable<String> descriptionContains) {
    this.descriptionContains = descriptionContains;
  }

  public void setDescriptionContains(String descriptionContains) {
    this.descriptionContains = JsonNullable.<String>of(descriptionContains);
  }


  public ElfImageWhereInput descriptionEndsWith(String descriptionEndsWith) {
    this.descriptionEndsWith = JsonNullable.<String>of(descriptionEndsWith);
    return this;
  }

   /**
   * Get descriptionEndsWith
   * @return descriptionEndsWith
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getDescriptionEndsWith() {
        return descriptionEndsWith.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_DESCRIPTION_ENDS_WITH)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getDescriptionEndsWith_JsonNullable() {
    return descriptionEndsWith;
  }
  
  @JsonProperty(JSON_PROPERTY_DESCRIPTION_ENDS_WITH)
  public void setDescriptionEndsWith_JsonNullable(JsonNullable<String> descriptionEndsWith) {
    this.descriptionEndsWith = descriptionEndsWith;
  }

  public void setDescriptionEndsWith(String descriptionEndsWith) {
    this.descriptionEndsWith = JsonNullable.<String>of(descriptionEndsWith);
  }


  public ElfImageWhereInput descriptionGt(String descriptionGt) {
    this.descriptionGt = JsonNullable.<String>of(descriptionGt);
    return this;
  }

   /**
   * Get descriptionGt
   * @return descriptionGt
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getDescriptionGt() {
        return descriptionGt.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_DESCRIPTION_GT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getDescriptionGt_JsonNullable() {
    return descriptionGt;
  }
  
  @JsonProperty(JSON_PROPERTY_DESCRIPTION_GT)
  public void setDescriptionGt_JsonNullable(JsonNullable<String> descriptionGt) {
    this.descriptionGt = descriptionGt;
  }

  public void setDescriptionGt(String descriptionGt) {
    this.descriptionGt = JsonNullable.<String>of(descriptionGt);
  }


  public ElfImageWhereInput descriptionGte(String descriptionGte) {
    this.descriptionGte = JsonNullable.<String>of(descriptionGte);
    return this;
  }

   /**
   * Get descriptionGte
   * @return descriptionGte
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getDescriptionGte() {
        return descriptionGte.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_DESCRIPTION_GTE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getDescriptionGte_JsonNullable() {
    return descriptionGte;
  }
  
  @JsonProperty(JSON_PROPERTY_DESCRIPTION_GTE)
  public void setDescriptionGte_JsonNullable(JsonNullable<String> descriptionGte) {
    this.descriptionGte = descriptionGte;
  }

  public void setDescriptionGte(String descriptionGte) {
    this.descriptionGte = JsonNullable.<String>of(descriptionGte);
  }


  public ElfImageWhereInput descriptionIn(List<String> descriptionIn) {
    this.descriptionIn = JsonNullable.<List<String>>of(descriptionIn);
    return this;
  }

  public ElfImageWhereInput addDescriptionInItem(String descriptionInItem) {
    if (this.descriptionIn == null || !this.descriptionIn.isPresent()) {
      this.descriptionIn = JsonNullable.<List<String>>of(new ArrayList<>());
    }
    try {
      this.descriptionIn.get().add(descriptionInItem);
    } catch (java.util.NoSuchElementException e) {
      // this can never happen, as we make sure above that the value is present
    }
    return this;
  }

   /**
   * Get descriptionIn
   * @return descriptionIn
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public List<String> getDescriptionIn() {
        return descriptionIn.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_DESCRIPTION_IN)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<List<String>> getDescriptionIn_JsonNullable() {
    return descriptionIn;
  }
  
  @JsonProperty(JSON_PROPERTY_DESCRIPTION_IN)
  public void setDescriptionIn_JsonNullable(JsonNullable<List<String>> descriptionIn) {
    this.descriptionIn = descriptionIn;
  }

  public void setDescriptionIn(List<String> descriptionIn) {
    this.descriptionIn = JsonNullable.<List<String>>of(descriptionIn);
  }


  public ElfImageWhereInput descriptionLt(String descriptionLt) {
    this.descriptionLt = JsonNullable.<String>of(descriptionLt);
    return this;
  }

   /**
   * Get descriptionLt
   * @return descriptionLt
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getDescriptionLt() {
        return descriptionLt.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_DESCRIPTION_LT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getDescriptionLt_JsonNullable() {
    return descriptionLt;
  }
  
  @JsonProperty(JSON_PROPERTY_DESCRIPTION_LT)
  public void setDescriptionLt_JsonNullable(JsonNullable<String> descriptionLt) {
    this.descriptionLt = descriptionLt;
  }

  public void setDescriptionLt(String descriptionLt) {
    this.descriptionLt = JsonNullable.<String>of(descriptionLt);
  }


  public ElfImageWhereInput descriptionLte(String descriptionLte) {
    this.descriptionLte = JsonNullable.<String>of(descriptionLte);
    return this;
  }

   /**
   * Get descriptionLte
   * @return descriptionLte
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getDescriptionLte() {
        return descriptionLte.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_DESCRIPTION_LTE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getDescriptionLte_JsonNullable() {
    return descriptionLte;
  }
  
  @JsonProperty(JSON_PROPERTY_DESCRIPTION_LTE)
  public void setDescriptionLte_JsonNullable(JsonNullable<String> descriptionLte) {
    this.descriptionLte = descriptionLte;
  }

  public void setDescriptionLte(String descriptionLte) {
    this.descriptionLte = JsonNullable.<String>of(descriptionLte);
  }


  public ElfImageWhereInput descriptionNot(String descriptionNot) {
    this.descriptionNot = JsonNullable.<String>of(descriptionNot);
    return this;
  }

   /**
   * Get descriptionNot
   * @return descriptionNot
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getDescriptionNot() {
        return descriptionNot.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_DESCRIPTION_NOT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getDescriptionNot_JsonNullable() {
    return descriptionNot;
  }
  
  @JsonProperty(JSON_PROPERTY_DESCRIPTION_NOT)
  public void setDescriptionNot_JsonNullable(JsonNullable<String> descriptionNot) {
    this.descriptionNot = descriptionNot;
  }

  public void setDescriptionNot(String descriptionNot) {
    this.descriptionNot = JsonNullable.<String>of(descriptionNot);
  }


  public ElfImageWhereInput descriptionNotContains(String descriptionNotContains) {
    this.descriptionNotContains = JsonNullable.<String>of(descriptionNotContains);
    return this;
  }

   /**
   * Get descriptionNotContains
   * @return descriptionNotContains
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getDescriptionNotContains() {
        return descriptionNotContains.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_DESCRIPTION_NOT_CONTAINS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getDescriptionNotContains_JsonNullable() {
    return descriptionNotContains;
  }
  
  @JsonProperty(JSON_PROPERTY_DESCRIPTION_NOT_CONTAINS)
  public void setDescriptionNotContains_JsonNullable(JsonNullable<String> descriptionNotContains) {
    this.descriptionNotContains = descriptionNotContains;
  }

  public void setDescriptionNotContains(String descriptionNotContains) {
    this.descriptionNotContains = JsonNullable.<String>of(descriptionNotContains);
  }


  public ElfImageWhereInput descriptionNotEndsWith(String descriptionNotEndsWith) {
    this.descriptionNotEndsWith = JsonNullable.<String>of(descriptionNotEndsWith);
    return this;
  }

   /**
   * Get descriptionNotEndsWith
   * @return descriptionNotEndsWith
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getDescriptionNotEndsWith() {
        return descriptionNotEndsWith.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_DESCRIPTION_NOT_ENDS_WITH)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getDescriptionNotEndsWith_JsonNullable() {
    return descriptionNotEndsWith;
  }
  
  @JsonProperty(JSON_PROPERTY_DESCRIPTION_NOT_ENDS_WITH)
  public void setDescriptionNotEndsWith_JsonNullable(JsonNullable<String> descriptionNotEndsWith) {
    this.descriptionNotEndsWith = descriptionNotEndsWith;
  }

  public void setDescriptionNotEndsWith(String descriptionNotEndsWith) {
    this.descriptionNotEndsWith = JsonNullable.<String>of(descriptionNotEndsWith);
  }


  public ElfImageWhereInput descriptionNotIn(List<String> descriptionNotIn) {
    this.descriptionNotIn = JsonNullable.<List<String>>of(descriptionNotIn);
    return this;
  }

  public ElfImageWhereInput addDescriptionNotInItem(String descriptionNotInItem) {
    if (this.descriptionNotIn == null || !this.descriptionNotIn.isPresent()) {
      this.descriptionNotIn = JsonNullable.<List<String>>of(new ArrayList<>());
    }
    try {
      this.descriptionNotIn.get().add(descriptionNotInItem);
    } catch (java.util.NoSuchElementException e) {
      // this can never happen, as we make sure above that the value is present
    }
    return this;
  }

   /**
   * Get descriptionNotIn
   * @return descriptionNotIn
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public List<String> getDescriptionNotIn() {
        return descriptionNotIn.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_DESCRIPTION_NOT_IN)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<List<String>> getDescriptionNotIn_JsonNullable() {
    return descriptionNotIn;
  }
  
  @JsonProperty(JSON_PROPERTY_DESCRIPTION_NOT_IN)
  public void setDescriptionNotIn_JsonNullable(JsonNullable<List<String>> descriptionNotIn) {
    this.descriptionNotIn = descriptionNotIn;
  }

  public void setDescriptionNotIn(List<String> descriptionNotIn) {
    this.descriptionNotIn = JsonNullable.<List<String>>of(descriptionNotIn);
  }


  public ElfImageWhereInput descriptionNotStartsWith(String descriptionNotStartsWith) {
    this.descriptionNotStartsWith = JsonNullable.<String>of(descriptionNotStartsWith);
    return this;
  }

   /**
   * Get descriptionNotStartsWith
   * @return descriptionNotStartsWith
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getDescriptionNotStartsWith() {
        return descriptionNotStartsWith.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_DESCRIPTION_NOT_STARTS_WITH)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getDescriptionNotStartsWith_JsonNullable() {
    return descriptionNotStartsWith;
  }
  
  @JsonProperty(JSON_PROPERTY_DESCRIPTION_NOT_STARTS_WITH)
  public void setDescriptionNotStartsWith_JsonNullable(JsonNullable<String> descriptionNotStartsWith) {
    this.descriptionNotStartsWith = descriptionNotStartsWith;
  }

  public void setDescriptionNotStartsWith(String descriptionNotStartsWith) {
    this.descriptionNotStartsWith = JsonNullable.<String>of(descriptionNotStartsWith);
  }


  public ElfImageWhereInput descriptionStartsWith(String descriptionStartsWith) {
    this.descriptionStartsWith = JsonNullable.<String>of(descriptionStartsWith);
    return this;
  }

   /**
   * Get descriptionStartsWith
   * @return descriptionStartsWith
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getDescriptionStartsWith() {
        return descriptionStartsWith.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_DESCRIPTION_STARTS_WITH)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getDescriptionStartsWith_JsonNullable() {
    return descriptionStartsWith;
  }
  
  @JsonProperty(JSON_PROPERTY_DESCRIPTION_STARTS_WITH)
  public void setDescriptionStartsWith_JsonNullable(JsonNullable<String> descriptionStartsWith) {
    this.descriptionStartsWith = descriptionStartsWith;
  }

  public void setDescriptionStartsWith(String descriptionStartsWith) {
    this.descriptionStartsWith = JsonNullable.<String>of(descriptionStartsWith);
  }


  public ElfImageWhereInput entityAsyncStatus(EntityAsyncStatus entityAsyncStatus) {
    this.entityAsyncStatus = JsonNullable.<EntityAsyncStatus>of(entityAsyncStatus);
    return this;
  }

   /**
   * Get entityAsyncStatus
   * @return entityAsyncStatus
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public EntityAsyncStatus getEntityAsyncStatus() {
        return entityAsyncStatus.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_ENTITY_ASYNC_STATUS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<EntityAsyncStatus> getEntityAsyncStatus_JsonNullable() {
    return entityAsyncStatus;
  }
  
  @JsonProperty(JSON_PROPERTY_ENTITY_ASYNC_STATUS)
  public void setEntityAsyncStatus_JsonNullable(JsonNullable<EntityAsyncStatus> entityAsyncStatus) {
    this.entityAsyncStatus = entityAsyncStatus;
  }

  public void setEntityAsyncStatus(EntityAsyncStatus entityAsyncStatus) {
    this.entityAsyncStatus = JsonNullable.<EntityAsyncStatus>of(entityAsyncStatus);
  }


  public ElfImageWhereInput entityAsyncStatusIn(List<EntityAsyncStatus> entityAsyncStatusIn) {
    this.entityAsyncStatusIn = JsonNullable.<List<EntityAsyncStatus>>of(entityAsyncStatusIn);
    return this;
  }

  public ElfImageWhereInput addEntityAsyncStatusInItem(EntityAsyncStatus entityAsyncStatusInItem) {
    if (this.entityAsyncStatusIn == null || !this.entityAsyncStatusIn.isPresent()) {
      this.entityAsyncStatusIn = JsonNullable.<List<EntityAsyncStatus>>of(new ArrayList<>());
    }
    try {
      this.entityAsyncStatusIn.get().add(entityAsyncStatusInItem);
    } catch (java.util.NoSuchElementException e) {
      // this can never happen, as we make sure above that the value is present
    }
    return this;
  }

   /**
   * Get entityAsyncStatusIn
   * @return entityAsyncStatusIn
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public List<EntityAsyncStatus> getEntityAsyncStatusIn() {
        return entityAsyncStatusIn.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_ENTITY_ASYNC_STATUS_IN)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<List<EntityAsyncStatus>> getEntityAsyncStatusIn_JsonNullable() {
    return entityAsyncStatusIn;
  }
  
  @JsonProperty(JSON_PROPERTY_ENTITY_ASYNC_STATUS_IN)
  public void setEntityAsyncStatusIn_JsonNullable(JsonNullable<List<EntityAsyncStatus>> entityAsyncStatusIn) {
    this.entityAsyncStatusIn = entityAsyncStatusIn;
  }

  public void setEntityAsyncStatusIn(List<EntityAsyncStatus> entityAsyncStatusIn) {
    this.entityAsyncStatusIn = JsonNullable.<List<EntityAsyncStatus>>of(entityAsyncStatusIn);
  }


  public ElfImageWhereInput entityAsyncStatusNot(EntityAsyncStatus entityAsyncStatusNot) {
    this.entityAsyncStatusNot = JsonNullable.<EntityAsyncStatus>of(entityAsyncStatusNot);
    return this;
  }

   /**
   * Get entityAsyncStatusNot
   * @return entityAsyncStatusNot
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public EntityAsyncStatus getEntityAsyncStatusNot() {
        return entityAsyncStatusNot.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_ENTITY_ASYNC_STATUS_NOT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<EntityAsyncStatus> getEntityAsyncStatusNot_JsonNullable() {
    return entityAsyncStatusNot;
  }
  
  @JsonProperty(JSON_PROPERTY_ENTITY_ASYNC_STATUS_NOT)
  public void setEntityAsyncStatusNot_JsonNullable(JsonNullable<EntityAsyncStatus> entityAsyncStatusNot) {
    this.entityAsyncStatusNot = entityAsyncStatusNot;
  }

  public void setEntityAsyncStatusNot(EntityAsyncStatus entityAsyncStatusNot) {
    this.entityAsyncStatusNot = JsonNullable.<EntityAsyncStatus>of(entityAsyncStatusNot);
  }


  public ElfImageWhereInput entityAsyncStatusNotIn(List<EntityAsyncStatus> entityAsyncStatusNotIn) {
    this.entityAsyncStatusNotIn = JsonNullable.<List<EntityAsyncStatus>>of(entityAsyncStatusNotIn);
    return this;
  }

  public ElfImageWhereInput addEntityAsyncStatusNotInItem(EntityAsyncStatus entityAsyncStatusNotInItem) {
    if (this.entityAsyncStatusNotIn == null || !this.entityAsyncStatusNotIn.isPresent()) {
      this.entityAsyncStatusNotIn = JsonNullable.<List<EntityAsyncStatus>>of(new ArrayList<>());
    }
    try {
      this.entityAsyncStatusNotIn.get().add(entityAsyncStatusNotInItem);
    } catch (java.util.NoSuchElementException e) {
      // this can never happen, as we make sure above that the value is present
    }
    return this;
  }

   /**
   * Get entityAsyncStatusNotIn
   * @return entityAsyncStatusNotIn
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public List<EntityAsyncStatus> getEntityAsyncStatusNotIn() {
        return entityAsyncStatusNotIn.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_ENTITY_ASYNC_STATUS_NOT_IN)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<List<EntityAsyncStatus>> getEntityAsyncStatusNotIn_JsonNullable() {
    return entityAsyncStatusNotIn;
  }
  
  @JsonProperty(JSON_PROPERTY_ENTITY_ASYNC_STATUS_NOT_IN)
  public void setEntityAsyncStatusNotIn_JsonNullable(JsonNullable<List<EntityAsyncStatus>> entityAsyncStatusNotIn) {
    this.entityAsyncStatusNotIn = entityAsyncStatusNotIn;
  }

  public void setEntityAsyncStatusNotIn(List<EntityAsyncStatus> entityAsyncStatusNotIn) {
    this.entityAsyncStatusNotIn = JsonNullable.<List<EntityAsyncStatus>>of(entityAsyncStatusNotIn);
  }


  public ElfImageWhereInput id(String id) {
    this.id = JsonNullable.<String>of(id);
    return this;
  }

   /**
   * Get id
   * @return id
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getId() {
        return id.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getId_JsonNullable() {
    return id;
  }
  
  @JsonProperty(JSON_PROPERTY_ID)
  public void setId_JsonNullable(JsonNullable<String> id) {
    this.id = id;
  }

  public void setId(String id) {
    this.id = JsonNullable.<String>of(id);
  }


  public ElfImageWhereInput idContains(String idContains) {
    this.idContains = JsonNullable.<String>of(idContains);
    return this;
  }

   /**
   * Get idContains
   * @return idContains
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getIdContains() {
        return idContains.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_ID_CONTAINS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getIdContains_JsonNullable() {
    return idContains;
  }
  
  @JsonProperty(JSON_PROPERTY_ID_CONTAINS)
  public void setIdContains_JsonNullable(JsonNullable<String> idContains) {
    this.idContains = idContains;
  }

  public void setIdContains(String idContains) {
    this.idContains = JsonNullable.<String>of(idContains);
  }


  public ElfImageWhereInput idEndsWith(String idEndsWith) {
    this.idEndsWith = JsonNullable.<String>of(idEndsWith);
    return this;
  }

   /**
   * Get idEndsWith
   * @return idEndsWith
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getIdEndsWith() {
        return idEndsWith.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_ID_ENDS_WITH)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getIdEndsWith_JsonNullable() {
    return idEndsWith;
  }
  
  @JsonProperty(JSON_PROPERTY_ID_ENDS_WITH)
  public void setIdEndsWith_JsonNullable(JsonNullable<String> idEndsWith) {
    this.idEndsWith = idEndsWith;
  }

  public void setIdEndsWith(String idEndsWith) {
    this.idEndsWith = JsonNullable.<String>of(idEndsWith);
  }


  public ElfImageWhereInput idGt(String idGt) {
    this.idGt = JsonNullable.<String>of(idGt);
    return this;
  }

   /**
   * Get idGt
   * @return idGt
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getIdGt() {
        return idGt.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_ID_GT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getIdGt_JsonNullable() {
    return idGt;
  }
  
  @JsonProperty(JSON_PROPERTY_ID_GT)
  public void setIdGt_JsonNullable(JsonNullable<String> idGt) {
    this.idGt = idGt;
  }

  public void setIdGt(String idGt) {
    this.idGt = JsonNullable.<String>of(idGt);
  }


  public ElfImageWhereInput idGte(String idGte) {
    this.idGte = JsonNullable.<String>of(idGte);
    return this;
  }

   /**
   * Get idGte
   * @return idGte
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getIdGte() {
        return idGte.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_ID_GTE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getIdGte_JsonNullable() {
    return idGte;
  }
  
  @JsonProperty(JSON_PROPERTY_ID_GTE)
  public void setIdGte_JsonNullable(JsonNullable<String> idGte) {
    this.idGte = idGte;
  }

  public void setIdGte(String idGte) {
    this.idGte = JsonNullable.<String>of(idGte);
  }


  public ElfImageWhereInput idIn(List<String> idIn) {
    this.idIn = JsonNullable.<List<String>>of(idIn);
    return this;
  }

  public ElfImageWhereInput addIdInItem(String idInItem) {
    if (this.idIn == null || !this.idIn.isPresent()) {
      this.idIn = JsonNullable.<List<String>>of(new ArrayList<>());
    }
    try {
      this.idIn.get().add(idInItem);
    } catch (java.util.NoSuchElementException e) {
      // this can never happen, as we make sure above that the value is present
    }
    return this;
  }

   /**
   * Get idIn
   * @return idIn
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public List<String> getIdIn() {
        return idIn.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_ID_IN)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<List<String>> getIdIn_JsonNullable() {
    return idIn;
  }
  
  @JsonProperty(JSON_PROPERTY_ID_IN)
  public void setIdIn_JsonNullable(JsonNullable<List<String>> idIn) {
    this.idIn = idIn;
  }

  public void setIdIn(List<String> idIn) {
    this.idIn = JsonNullable.<List<String>>of(idIn);
  }


  public ElfImageWhereInput idLt(String idLt) {
    this.idLt = JsonNullable.<String>of(idLt);
    return this;
  }

   /**
   * Get idLt
   * @return idLt
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getIdLt() {
        return idLt.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_ID_LT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getIdLt_JsonNullable() {
    return idLt;
  }
  
  @JsonProperty(JSON_PROPERTY_ID_LT)
  public void setIdLt_JsonNullable(JsonNullable<String> idLt) {
    this.idLt = idLt;
  }

  public void setIdLt(String idLt) {
    this.idLt = JsonNullable.<String>of(idLt);
  }


  public ElfImageWhereInput idLte(String idLte) {
    this.idLte = JsonNullable.<String>of(idLte);
    return this;
  }

   /**
   * Get idLte
   * @return idLte
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getIdLte() {
        return idLte.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_ID_LTE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getIdLte_JsonNullable() {
    return idLte;
  }
  
  @JsonProperty(JSON_PROPERTY_ID_LTE)
  public void setIdLte_JsonNullable(JsonNullable<String> idLte) {
    this.idLte = idLte;
  }

  public void setIdLte(String idLte) {
    this.idLte = JsonNullable.<String>of(idLte);
  }


  public ElfImageWhereInput idNot(String idNot) {
    this.idNot = JsonNullable.<String>of(idNot);
    return this;
  }

   /**
   * Get idNot
   * @return idNot
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getIdNot() {
        return idNot.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_ID_NOT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getIdNot_JsonNullable() {
    return idNot;
  }
  
  @JsonProperty(JSON_PROPERTY_ID_NOT)
  public void setIdNot_JsonNullable(JsonNullable<String> idNot) {
    this.idNot = idNot;
  }

  public void setIdNot(String idNot) {
    this.idNot = JsonNullable.<String>of(idNot);
  }


  public ElfImageWhereInput idNotContains(String idNotContains) {
    this.idNotContains = JsonNullable.<String>of(idNotContains);
    return this;
  }

   /**
   * Get idNotContains
   * @return idNotContains
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getIdNotContains() {
        return idNotContains.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_ID_NOT_CONTAINS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getIdNotContains_JsonNullable() {
    return idNotContains;
  }
  
  @JsonProperty(JSON_PROPERTY_ID_NOT_CONTAINS)
  public void setIdNotContains_JsonNullable(JsonNullable<String> idNotContains) {
    this.idNotContains = idNotContains;
  }

  public void setIdNotContains(String idNotContains) {
    this.idNotContains = JsonNullable.<String>of(idNotContains);
  }


  public ElfImageWhereInput idNotEndsWith(String idNotEndsWith) {
    this.idNotEndsWith = JsonNullable.<String>of(idNotEndsWith);
    return this;
  }

   /**
   * Get idNotEndsWith
   * @return idNotEndsWith
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getIdNotEndsWith() {
        return idNotEndsWith.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_ID_NOT_ENDS_WITH)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getIdNotEndsWith_JsonNullable() {
    return idNotEndsWith;
  }
  
  @JsonProperty(JSON_PROPERTY_ID_NOT_ENDS_WITH)
  public void setIdNotEndsWith_JsonNullable(JsonNullable<String> idNotEndsWith) {
    this.idNotEndsWith = idNotEndsWith;
  }

  public void setIdNotEndsWith(String idNotEndsWith) {
    this.idNotEndsWith = JsonNullable.<String>of(idNotEndsWith);
  }


  public ElfImageWhereInput idNotIn(List<String> idNotIn) {
    this.idNotIn = JsonNullable.<List<String>>of(idNotIn);
    return this;
  }

  public ElfImageWhereInput addIdNotInItem(String idNotInItem) {
    if (this.idNotIn == null || !this.idNotIn.isPresent()) {
      this.idNotIn = JsonNullable.<List<String>>of(new ArrayList<>());
    }
    try {
      this.idNotIn.get().add(idNotInItem);
    } catch (java.util.NoSuchElementException e) {
      // this can never happen, as we make sure above that the value is present
    }
    return this;
  }

   /**
   * Get idNotIn
   * @return idNotIn
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public List<String> getIdNotIn() {
        return idNotIn.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_ID_NOT_IN)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<List<String>> getIdNotIn_JsonNullable() {
    return idNotIn;
  }
  
  @JsonProperty(JSON_PROPERTY_ID_NOT_IN)
  public void setIdNotIn_JsonNullable(JsonNullable<List<String>> idNotIn) {
    this.idNotIn = idNotIn;
  }

  public void setIdNotIn(List<String> idNotIn) {
    this.idNotIn = JsonNullable.<List<String>>of(idNotIn);
  }


  public ElfImageWhereInput idNotStartsWith(String idNotStartsWith) {
    this.idNotStartsWith = JsonNullable.<String>of(idNotStartsWith);
    return this;
  }

   /**
   * Get idNotStartsWith
   * @return idNotStartsWith
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getIdNotStartsWith() {
        return idNotStartsWith.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_ID_NOT_STARTS_WITH)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getIdNotStartsWith_JsonNullable() {
    return idNotStartsWith;
  }
  
  @JsonProperty(JSON_PROPERTY_ID_NOT_STARTS_WITH)
  public void setIdNotStartsWith_JsonNullable(JsonNullable<String> idNotStartsWith) {
    this.idNotStartsWith = idNotStartsWith;
  }

  public void setIdNotStartsWith(String idNotStartsWith) {
    this.idNotStartsWith = JsonNullable.<String>of(idNotStartsWith);
  }


  public ElfImageWhereInput idStartsWith(String idStartsWith) {
    this.idStartsWith = JsonNullable.<String>of(idStartsWith);
    return this;
  }

   /**
   * Get idStartsWith
   * @return idStartsWith
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getIdStartsWith() {
        return idStartsWith.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_ID_STARTS_WITH)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getIdStartsWith_JsonNullable() {
    return idStartsWith;
  }
  
  @JsonProperty(JSON_PROPERTY_ID_STARTS_WITH)
  public void setIdStartsWith_JsonNullable(JsonNullable<String> idStartsWith) {
    this.idStartsWith = idStartsWith;
  }

  public void setIdStartsWith(String idStartsWith) {
    this.idStartsWith = JsonNullable.<String>of(idStartsWith);
  }


  public ElfImageWhereInput labelsEvery(LabelWhereInput labelsEvery) {
    this.labelsEvery = JsonNullable.<LabelWhereInput>of(labelsEvery);
    return this;
  }

   /**
   * Get labelsEvery
   * @return labelsEvery
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public LabelWhereInput getLabelsEvery() {
        return labelsEvery.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_LABELS_EVERY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<LabelWhereInput> getLabelsEvery_JsonNullable() {
    return labelsEvery;
  }
  
  @JsonProperty(JSON_PROPERTY_LABELS_EVERY)
  public void setLabelsEvery_JsonNullable(JsonNullable<LabelWhereInput> labelsEvery) {
    this.labelsEvery = labelsEvery;
  }

  public void setLabelsEvery(LabelWhereInput labelsEvery) {
    this.labelsEvery = JsonNullable.<LabelWhereInput>of(labelsEvery);
  }


  public ElfImageWhereInput labelsNone(LabelWhereInput labelsNone) {
    this.labelsNone = JsonNullable.<LabelWhereInput>of(labelsNone);
    return this;
  }

   /**
   * Get labelsNone
   * @return labelsNone
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public LabelWhereInput getLabelsNone() {
        return labelsNone.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_LABELS_NONE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<LabelWhereInput> getLabelsNone_JsonNullable() {
    return labelsNone;
  }
  
  @JsonProperty(JSON_PROPERTY_LABELS_NONE)
  public void setLabelsNone_JsonNullable(JsonNullable<LabelWhereInput> labelsNone) {
    this.labelsNone = labelsNone;
  }

  public void setLabelsNone(LabelWhereInput labelsNone) {
    this.labelsNone = JsonNullable.<LabelWhereInput>of(labelsNone);
  }


  public ElfImageWhereInput labelsSome(LabelWhereInput labelsSome) {
    this.labelsSome = JsonNullable.<LabelWhereInput>of(labelsSome);
    return this;
  }

   /**
   * Get labelsSome
   * @return labelsSome
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public LabelWhereInput getLabelsSome() {
        return labelsSome.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_LABELS_SOME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<LabelWhereInput> getLabelsSome_JsonNullable() {
    return labelsSome;
  }
  
  @JsonProperty(JSON_PROPERTY_LABELS_SOME)
  public void setLabelsSome_JsonNullable(JsonNullable<LabelWhereInput> labelsSome) {
    this.labelsSome = labelsSome;
  }

  public void setLabelsSome(LabelWhereInput labelsSome) {
    this.labelsSome = JsonNullable.<LabelWhereInput>of(labelsSome);
  }


  public ElfImageWhereInput localCreatedAt(String localCreatedAt) {
    this.localCreatedAt = JsonNullable.<String>of(localCreatedAt);
    return this;
  }

   /**
   * Get localCreatedAt
   * @return localCreatedAt
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getLocalCreatedAt() {
        return localCreatedAt.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_LOCAL_CREATED_AT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getLocalCreatedAt_JsonNullable() {
    return localCreatedAt;
  }
  
  @JsonProperty(JSON_PROPERTY_LOCAL_CREATED_AT)
  public void setLocalCreatedAt_JsonNullable(JsonNullable<String> localCreatedAt) {
    this.localCreatedAt = localCreatedAt;
  }

  public void setLocalCreatedAt(String localCreatedAt) {
    this.localCreatedAt = JsonNullable.<String>of(localCreatedAt);
  }


  public ElfImageWhereInput localCreatedAtGt(String localCreatedAtGt) {
    this.localCreatedAtGt = JsonNullable.<String>of(localCreatedAtGt);
    return this;
  }

   /**
   * Get localCreatedAtGt
   * @return localCreatedAtGt
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getLocalCreatedAtGt() {
        return localCreatedAtGt.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_LOCAL_CREATED_AT_GT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getLocalCreatedAtGt_JsonNullable() {
    return localCreatedAtGt;
  }
  
  @JsonProperty(JSON_PROPERTY_LOCAL_CREATED_AT_GT)
  public void setLocalCreatedAtGt_JsonNullable(JsonNullable<String> localCreatedAtGt) {
    this.localCreatedAtGt = localCreatedAtGt;
  }

  public void setLocalCreatedAtGt(String localCreatedAtGt) {
    this.localCreatedAtGt = JsonNullable.<String>of(localCreatedAtGt);
  }


  public ElfImageWhereInput localCreatedAtGte(String localCreatedAtGte) {
    this.localCreatedAtGte = JsonNullable.<String>of(localCreatedAtGte);
    return this;
  }

   /**
   * Get localCreatedAtGte
   * @return localCreatedAtGte
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getLocalCreatedAtGte() {
        return localCreatedAtGte.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_LOCAL_CREATED_AT_GTE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getLocalCreatedAtGte_JsonNullable() {
    return localCreatedAtGte;
  }
  
  @JsonProperty(JSON_PROPERTY_LOCAL_CREATED_AT_GTE)
  public void setLocalCreatedAtGte_JsonNullable(JsonNullable<String> localCreatedAtGte) {
    this.localCreatedAtGte = localCreatedAtGte;
  }

  public void setLocalCreatedAtGte(String localCreatedAtGte) {
    this.localCreatedAtGte = JsonNullable.<String>of(localCreatedAtGte);
  }


  public ElfImageWhereInput localCreatedAtIn(List<String> localCreatedAtIn) {
    this.localCreatedAtIn = JsonNullable.<List<String>>of(localCreatedAtIn);
    return this;
  }

  public ElfImageWhereInput addLocalCreatedAtInItem(String localCreatedAtInItem) {
    if (this.localCreatedAtIn == null || !this.localCreatedAtIn.isPresent()) {
      this.localCreatedAtIn = JsonNullable.<List<String>>of(new ArrayList<>());
    }
    try {
      this.localCreatedAtIn.get().add(localCreatedAtInItem);
    } catch (java.util.NoSuchElementException e) {
      // this can never happen, as we make sure above that the value is present
    }
    return this;
  }

   /**
   * Get localCreatedAtIn
   * @return localCreatedAtIn
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public List<String> getLocalCreatedAtIn() {
        return localCreatedAtIn.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_LOCAL_CREATED_AT_IN)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<List<String>> getLocalCreatedAtIn_JsonNullable() {
    return localCreatedAtIn;
  }
  
  @JsonProperty(JSON_PROPERTY_LOCAL_CREATED_AT_IN)
  public void setLocalCreatedAtIn_JsonNullable(JsonNullable<List<String>> localCreatedAtIn) {
    this.localCreatedAtIn = localCreatedAtIn;
  }

  public void setLocalCreatedAtIn(List<String> localCreatedAtIn) {
    this.localCreatedAtIn = JsonNullable.<List<String>>of(localCreatedAtIn);
  }


  public ElfImageWhereInput localCreatedAtLt(String localCreatedAtLt) {
    this.localCreatedAtLt = JsonNullable.<String>of(localCreatedAtLt);
    return this;
  }

   /**
   * Get localCreatedAtLt
   * @return localCreatedAtLt
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getLocalCreatedAtLt() {
        return localCreatedAtLt.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_LOCAL_CREATED_AT_LT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getLocalCreatedAtLt_JsonNullable() {
    return localCreatedAtLt;
  }
  
  @JsonProperty(JSON_PROPERTY_LOCAL_CREATED_AT_LT)
  public void setLocalCreatedAtLt_JsonNullable(JsonNullable<String> localCreatedAtLt) {
    this.localCreatedAtLt = localCreatedAtLt;
  }

  public void setLocalCreatedAtLt(String localCreatedAtLt) {
    this.localCreatedAtLt = JsonNullable.<String>of(localCreatedAtLt);
  }


  public ElfImageWhereInput localCreatedAtLte(String localCreatedAtLte) {
    this.localCreatedAtLte = JsonNullable.<String>of(localCreatedAtLte);
    return this;
  }

   /**
   * Get localCreatedAtLte
   * @return localCreatedAtLte
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getLocalCreatedAtLte() {
        return localCreatedAtLte.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_LOCAL_CREATED_AT_LTE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getLocalCreatedAtLte_JsonNullable() {
    return localCreatedAtLte;
  }
  
  @JsonProperty(JSON_PROPERTY_LOCAL_CREATED_AT_LTE)
  public void setLocalCreatedAtLte_JsonNullable(JsonNullable<String> localCreatedAtLte) {
    this.localCreatedAtLte = localCreatedAtLte;
  }

  public void setLocalCreatedAtLte(String localCreatedAtLte) {
    this.localCreatedAtLte = JsonNullable.<String>of(localCreatedAtLte);
  }


  public ElfImageWhereInput localCreatedAtNot(String localCreatedAtNot) {
    this.localCreatedAtNot = JsonNullable.<String>of(localCreatedAtNot);
    return this;
  }

   /**
   * Get localCreatedAtNot
   * @return localCreatedAtNot
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getLocalCreatedAtNot() {
        return localCreatedAtNot.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_LOCAL_CREATED_AT_NOT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getLocalCreatedAtNot_JsonNullable() {
    return localCreatedAtNot;
  }
  
  @JsonProperty(JSON_PROPERTY_LOCAL_CREATED_AT_NOT)
  public void setLocalCreatedAtNot_JsonNullable(JsonNullable<String> localCreatedAtNot) {
    this.localCreatedAtNot = localCreatedAtNot;
  }

  public void setLocalCreatedAtNot(String localCreatedAtNot) {
    this.localCreatedAtNot = JsonNullable.<String>of(localCreatedAtNot);
  }


  public ElfImageWhereInput localCreatedAtNotIn(List<String> localCreatedAtNotIn) {
    this.localCreatedAtNotIn = JsonNullable.<List<String>>of(localCreatedAtNotIn);
    return this;
  }

  public ElfImageWhereInput addLocalCreatedAtNotInItem(String localCreatedAtNotInItem) {
    if (this.localCreatedAtNotIn == null || !this.localCreatedAtNotIn.isPresent()) {
      this.localCreatedAtNotIn = JsonNullable.<List<String>>of(new ArrayList<>());
    }
    try {
      this.localCreatedAtNotIn.get().add(localCreatedAtNotInItem);
    } catch (java.util.NoSuchElementException e) {
      // this can never happen, as we make sure above that the value is present
    }
    return this;
  }

   /**
   * Get localCreatedAtNotIn
   * @return localCreatedAtNotIn
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public List<String> getLocalCreatedAtNotIn() {
        return localCreatedAtNotIn.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_LOCAL_CREATED_AT_NOT_IN)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<List<String>> getLocalCreatedAtNotIn_JsonNullable() {
    return localCreatedAtNotIn;
  }
  
  @JsonProperty(JSON_PROPERTY_LOCAL_CREATED_AT_NOT_IN)
  public void setLocalCreatedAtNotIn_JsonNullable(JsonNullable<List<String>> localCreatedAtNotIn) {
    this.localCreatedAtNotIn = localCreatedAtNotIn;
  }

  public void setLocalCreatedAtNotIn(List<String> localCreatedAtNotIn) {
    this.localCreatedAtNotIn = JsonNullable.<List<String>>of(localCreatedAtNotIn);
  }


  public ElfImageWhereInput localId(String localId) {
    this.localId = JsonNullable.<String>of(localId);
    return this;
  }

   /**
   * Get localId
   * @return localId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getLocalId() {
        return localId.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_LOCAL_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getLocalId_JsonNullable() {
    return localId;
  }
  
  @JsonProperty(JSON_PROPERTY_LOCAL_ID)
  public void setLocalId_JsonNullable(JsonNullable<String> localId) {
    this.localId = localId;
  }

  public void setLocalId(String localId) {
    this.localId = JsonNullable.<String>of(localId);
  }


  public ElfImageWhereInput localIdContains(String localIdContains) {
    this.localIdContains = JsonNullable.<String>of(localIdContains);
    return this;
  }

   /**
   * Get localIdContains
   * @return localIdContains
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getLocalIdContains() {
        return localIdContains.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_LOCAL_ID_CONTAINS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getLocalIdContains_JsonNullable() {
    return localIdContains;
  }
  
  @JsonProperty(JSON_PROPERTY_LOCAL_ID_CONTAINS)
  public void setLocalIdContains_JsonNullable(JsonNullable<String> localIdContains) {
    this.localIdContains = localIdContains;
  }

  public void setLocalIdContains(String localIdContains) {
    this.localIdContains = JsonNullable.<String>of(localIdContains);
  }


  public ElfImageWhereInput localIdEndsWith(String localIdEndsWith) {
    this.localIdEndsWith = JsonNullable.<String>of(localIdEndsWith);
    return this;
  }

   /**
   * Get localIdEndsWith
   * @return localIdEndsWith
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getLocalIdEndsWith() {
        return localIdEndsWith.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_LOCAL_ID_ENDS_WITH)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getLocalIdEndsWith_JsonNullable() {
    return localIdEndsWith;
  }
  
  @JsonProperty(JSON_PROPERTY_LOCAL_ID_ENDS_WITH)
  public void setLocalIdEndsWith_JsonNullable(JsonNullable<String> localIdEndsWith) {
    this.localIdEndsWith = localIdEndsWith;
  }

  public void setLocalIdEndsWith(String localIdEndsWith) {
    this.localIdEndsWith = JsonNullable.<String>of(localIdEndsWith);
  }


  public ElfImageWhereInput localIdGt(String localIdGt) {
    this.localIdGt = JsonNullable.<String>of(localIdGt);
    return this;
  }

   /**
   * Get localIdGt
   * @return localIdGt
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getLocalIdGt() {
        return localIdGt.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_LOCAL_ID_GT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getLocalIdGt_JsonNullable() {
    return localIdGt;
  }
  
  @JsonProperty(JSON_PROPERTY_LOCAL_ID_GT)
  public void setLocalIdGt_JsonNullable(JsonNullable<String> localIdGt) {
    this.localIdGt = localIdGt;
  }

  public void setLocalIdGt(String localIdGt) {
    this.localIdGt = JsonNullable.<String>of(localIdGt);
  }


  public ElfImageWhereInput localIdGte(String localIdGte) {
    this.localIdGte = JsonNullable.<String>of(localIdGte);
    return this;
  }

   /**
   * Get localIdGte
   * @return localIdGte
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getLocalIdGte() {
        return localIdGte.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_LOCAL_ID_GTE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getLocalIdGte_JsonNullable() {
    return localIdGte;
  }
  
  @JsonProperty(JSON_PROPERTY_LOCAL_ID_GTE)
  public void setLocalIdGte_JsonNullable(JsonNullable<String> localIdGte) {
    this.localIdGte = localIdGte;
  }

  public void setLocalIdGte(String localIdGte) {
    this.localIdGte = JsonNullable.<String>of(localIdGte);
  }


  public ElfImageWhereInput localIdIn(List<String> localIdIn) {
    this.localIdIn = JsonNullable.<List<String>>of(localIdIn);
    return this;
  }

  public ElfImageWhereInput addLocalIdInItem(String localIdInItem) {
    if (this.localIdIn == null || !this.localIdIn.isPresent()) {
      this.localIdIn = JsonNullable.<List<String>>of(new ArrayList<>());
    }
    try {
      this.localIdIn.get().add(localIdInItem);
    } catch (java.util.NoSuchElementException e) {
      // this can never happen, as we make sure above that the value is present
    }
    return this;
  }

   /**
   * Get localIdIn
   * @return localIdIn
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public List<String> getLocalIdIn() {
        return localIdIn.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_LOCAL_ID_IN)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<List<String>> getLocalIdIn_JsonNullable() {
    return localIdIn;
  }
  
  @JsonProperty(JSON_PROPERTY_LOCAL_ID_IN)
  public void setLocalIdIn_JsonNullable(JsonNullable<List<String>> localIdIn) {
    this.localIdIn = localIdIn;
  }

  public void setLocalIdIn(List<String> localIdIn) {
    this.localIdIn = JsonNullable.<List<String>>of(localIdIn);
  }


  public ElfImageWhereInput localIdLt(String localIdLt) {
    this.localIdLt = JsonNullable.<String>of(localIdLt);
    return this;
  }

   /**
   * Get localIdLt
   * @return localIdLt
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getLocalIdLt() {
        return localIdLt.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_LOCAL_ID_LT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getLocalIdLt_JsonNullable() {
    return localIdLt;
  }
  
  @JsonProperty(JSON_PROPERTY_LOCAL_ID_LT)
  public void setLocalIdLt_JsonNullable(JsonNullable<String> localIdLt) {
    this.localIdLt = localIdLt;
  }

  public void setLocalIdLt(String localIdLt) {
    this.localIdLt = JsonNullable.<String>of(localIdLt);
  }


  public ElfImageWhereInput localIdLte(String localIdLte) {
    this.localIdLte = JsonNullable.<String>of(localIdLte);
    return this;
  }

   /**
   * Get localIdLte
   * @return localIdLte
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getLocalIdLte() {
        return localIdLte.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_LOCAL_ID_LTE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getLocalIdLte_JsonNullable() {
    return localIdLte;
  }
  
  @JsonProperty(JSON_PROPERTY_LOCAL_ID_LTE)
  public void setLocalIdLte_JsonNullable(JsonNullable<String> localIdLte) {
    this.localIdLte = localIdLte;
  }

  public void setLocalIdLte(String localIdLte) {
    this.localIdLte = JsonNullable.<String>of(localIdLte);
  }


  public ElfImageWhereInput localIdNot(String localIdNot) {
    this.localIdNot = JsonNullable.<String>of(localIdNot);
    return this;
  }

   /**
   * Get localIdNot
   * @return localIdNot
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getLocalIdNot() {
        return localIdNot.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_LOCAL_ID_NOT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getLocalIdNot_JsonNullable() {
    return localIdNot;
  }
  
  @JsonProperty(JSON_PROPERTY_LOCAL_ID_NOT)
  public void setLocalIdNot_JsonNullable(JsonNullable<String> localIdNot) {
    this.localIdNot = localIdNot;
  }

  public void setLocalIdNot(String localIdNot) {
    this.localIdNot = JsonNullable.<String>of(localIdNot);
  }


  public ElfImageWhereInput localIdNotContains(String localIdNotContains) {
    this.localIdNotContains = JsonNullable.<String>of(localIdNotContains);
    return this;
  }

   /**
   * Get localIdNotContains
   * @return localIdNotContains
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getLocalIdNotContains() {
        return localIdNotContains.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_LOCAL_ID_NOT_CONTAINS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getLocalIdNotContains_JsonNullable() {
    return localIdNotContains;
  }
  
  @JsonProperty(JSON_PROPERTY_LOCAL_ID_NOT_CONTAINS)
  public void setLocalIdNotContains_JsonNullable(JsonNullable<String> localIdNotContains) {
    this.localIdNotContains = localIdNotContains;
  }

  public void setLocalIdNotContains(String localIdNotContains) {
    this.localIdNotContains = JsonNullable.<String>of(localIdNotContains);
  }


  public ElfImageWhereInput localIdNotEndsWith(String localIdNotEndsWith) {
    this.localIdNotEndsWith = JsonNullable.<String>of(localIdNotEndsWith);
    return this;
  }

   /**
   * Get localIdNotEndsWith
   * @return localIdNotEndsWith
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getLocalIdNotEndsWith() {
        return localIdNotEndsWith.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_LOCAL_ID_NOT_ENDS_WITH)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getLocalIdNotEndsWith_JsonNullable() {
    return localIdNotEndsWith;
  }
  
  @JsonProperty(JSON_PROPERTY_LOCAL_ID_NOT_ENDS_WITH)
  public void setLocalIdNotEndsWith_JsonNullable(JsonNullable<String> localIdNotEndsWith) {
    this.localIdNotEndsWith = localIdNotEndsWith;
  }

  public void setLocalIdNotEndsWith(String localIdNotEndsWith) {
    this.localIdNotEndsWith = JsonNullable.<String>of(localIdNotEndsWith);
  }


  public ElfImageWhereInput localIdNotIn(List<String> localIdNotIn) {
    this.localIdNotIn = JsonNullable.<List<String>>of(localIdNotIn);
    return this;
  }

  public ElfImageWhereInput addLocalIdNotInItem(String localIdNotInItem) {
    if (this.localIdNotIn == null || !this.localIdNotIn.isPresent()) {
      this.localIdNotIn = JsonNullable.<List<String>>of(new ArrayList<>());
    }
    try {
      this.localIdNotIn.get().add(localIdNotInItem);
    } catch (java.util.NoSuchElementException e) {
      // this can never happen, as we make sure above that the value is present
    }
    return this;
  }

   /**
   * Get localIdNotIn
   * @return localIdNotIn
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public List<String> getLocalIdNotIn() {
        return localIdNotIn.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_LOCAL_ID_NOT_IN)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<List<String>> getLocalIdNotIn_JsonNullable() {
    return localIdNotIn;
  }
  
  @JsonProperty(JSON_PROPERTY_LOCAL_ID_NOT_IN)
  public void setLocalIdNotIn_JsonNullable(JsonNullable<List<String>> localIdNotIn) {
    this.localIdNotIn = localIdNotIn;
  }

  public void setLocalIdNotIn(List<String> localIdNotIn) {
    this.localIdNotIn = JsonNullable.<List<String>>of(localIdNotIn);
  }


  public ElfImageWhereInput localIdNotStartsWith(String localIdNotStartsWith) {
    this.localIdNotStartsWith = JsonNullable.<String>of(localIdNotStartsWith);
    return this;
  }

   /**
   * Get localIdNotStartsWith
   * @return localIdNotStartsWith
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getLocalIdNotStartsWith() {
        return localIdNotStartsWith.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_LOCAL_ID_NOT_STARTS_WITH)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getLocalIdNotStartsWith_JsonNullable() {
    return localIdNotStartsWith;
  }
  
  @JsonProperty(JSON_PROPERTY_LOCAL_ID_NOT_STARTS_WITH)
  public void setLocalIdNotStartsWith_JsonNullable(JsonNullable<String> localIdNotStartsWith) {
    this.localIdNotStartsWith = localIdNotStartsWith;
  }

  public void setLocalIdNotStartsWith(String localIdNotStartsWith) {
    this.localIdNotStartsWith = JsonNullable.<String>of(localIdNotStartsWith);
  }


  public ElfImageWhereInput localIdStartsWith(String localIdStartsWith) {
    this.localIdStartsWith = JsonNullable.<String>of(localIdStartsWith);
    return this;
  }

   /**
   * Get localIdStartsWith
   * @return localIdStartsWith
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getLocalIdStartsWith() {
        return localIdStartsWith.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_LOCAL_ID_STARTS_WITH)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getLocalIdStartsWith_JsonNullable() {
    return localIdStartsWith;
  }
  
  @JsonProperty(JSON_PROPERTY_LOCAL_ID_STARTS_WITH)
  public void setLocalIdStartsWith_JsonNullable(JsonNullable<String> localIdStartsWith) {
    this.localIdStartsWith = localIdStartsWith;
  }

  public void setLocalIdStartsWith(String localIdStartsWith) {
    this.localIdStartsWith = JsonNullable.<String>of(localIdStartsWith);
  }


  public ElfImageWhereInput name(String name) {
    this.name = JsonNullable.<String>of(name);
    return this;
  }

   /**
   * Get name
   * @return name
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getName() {
        return name.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getName_JsonNullable() {
    return name;
  }
  
  @JsonProperty(JSON_PROPERTY_NAME)
  public void setName_JsonNullable(JsonNullable<String> name) {
    this.name = name;
  }

  public void setName(String name) {
    this.name = JsonNullable.<String>of(name);
  }


  public ElfImageWhereInput nameContains(String nameContains) {
    this.nameContains = JsonNullable.<String>of(nameContains);
    return this;
  }

   /**
   * Get nameContains
   * @return nameContains
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getNameContains() {
        return nameContains.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_NAME_CONTAINS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getNameContains_JsonNullable() {
    return nameContains;
  }
  
  @JsonProperty(JSON_PROPERTY_NAME_CONTAINS)
  public void setNameContains_JsonNullable(JsonNullable<String> nameContains) {
    this.nameContains = nameContains;
  }

  public void setNameContains(String nameContains) {
    this.nameContains = JsonNullable.<String>of(nameContains);
  }


  public ElfImageWhereInput nameEndsWith(String nameEndsWith) {
    this.nameEndsWith = JsonNullable.<String>of(nameEndsWith);
    return this;
  }

   /**
   * Get nameEndsWith
   * @return nameEndsWith
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getNameEndsWith() {
        return nameEndsWith.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_NAME_ENDS_WITH)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getNameEndsWith_JsonNullable() {
    return nameEndsWith;
  }
  
  @JsonProperty(JSON_PROPERTY_NAME_ENDS_WITH)
  public void setNameEndsWith_JsonNullable(JsonNullable<String> nameEndsWith) {
    this.nameEndsWith = nameEndsWith;
  }

  public void setNameEndsWith(String nameEndsWith) {
    this.nameEndsWith = JsonNullable.<String>of(nameEndsWith);
  }


  public ElfImageWhereInput nameGt(String nameGt) {
    this.nameGt = JsonNullable.<String>of(nameGt);
    return this;
  }

   /**
   * Get nameGt
   * @return nameGt
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getNameGt() {
        return nameGt.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_NAME_GT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getNameGt_JsonNullable() {
    return nameGt;
  }
  
  @JsonProperty(JSON_PROPERTY_NAME_GT)
  public void setNameGt_JsonNullable(JsonNullable<String> nameGt) {
    this.nameGt = nameGt;
  }

  public void setNameGt(String nameGt) {
    this.nameGt = JsonNullable.<String>of(nameGt);
  }


  public ElfImageWhereInput nameGte(String nameGte) {
    this.nameGte = JsonNullable.<String>of(nameGte);
    return this;
  }

   /**
   * Get nameGte
   * @return nameGte
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getNameGte() {
        return nameGte.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_NAME_GTE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getNameGte_JsonNullable() {
    return nameGte;
  }
  
  @JsonProperty(JSON_PROPERTY_NAME_GTE)
  public void setNameGte_JsonNullable(JsonNullable<String> nameGte) {
    this.nameGte = nameGte;
  }

  public void setNameGte(String nameGte) {
    this.nameGte = JsonNullable.<String>of(nameGte);
  }


  public ElfImageWhereInput nameIn(List<String> nameIn) {
    this.nameIn = JsonNullable.<List<String>>of(nameIn);
    return this;
  }

  public ElfImageWhereInput addNameInItem(String nameInItem) {
    if (this.nameIn == null || !this.nameIn.isPresent()) {
      this.nameIn = JsonNullable.<List<String>>of(new ArrayList<>());
    }
    try {
      this.nameIn.get().add(nameInItem);
    } catch (java.util.NoSuchElementException e) {
      // this can never happen, as we make sure above that the value is present
    }
    return this;
  }

   /**
   * Get nameIn
   * @return nameIn
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public List<String> getNameIn() {
        return nameIn.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_NAME_IN)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<List<String>> getNameIn_JsonNullable() {
    return nameIn;
  }
  
  @JsonProperty(JSON_PROPERTY_NAME_IN)
  public void setNameIn_JsonNullable(JsonNullable<List<String>> nameIn) {
    this.nameIn = nameIn;
  }

  public void setNameIn(List<String> nameIn) {
    this.nameIn = JsonNullable.<List<String>>of(nameIn);
  }


  public ElfImageWhereInput nameLt(String nameLt) {
    this.nameLt = JsonNullable.<String>of(nameLt);
    return this;
  }

   /**
   * Get nameLt
   * @return nameLt
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getNameLt() {
        return nameLt.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_NAME_LT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getNameLt_JsonNullable() {
    return nameLt;
  }
  
  @JsonProperty(JSON_PROPERTY_NAME_LT)
  public void setNameLt_JsonNullable(JsonNullable<String> nameLt) {
    this.nameLt = nameLt;
  }

  public void setNameLt(String nameLt) {
    this.nameLt = JsonNullable.<String>of(nameLt);
  }


  public ElfImageWhereInput nameLte(String nameLte) {
    this.nameLte = JsonNullable.<String>of(nameLte);
    return this;
  }

   /**
   * Get nameLte
   * @return nameLte
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getNameLte() {
        return nameLte.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_NAME_LTE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getNameLte_JsonNullable() {
    return nameLte;
  }
  
  @JsonProperty(JSON_PROPERTY_NAME_LTE)
  public void setNameLte_JsonNullable(JsonNullable<String> nameLte) {
    this.nameLte = nameLte;
  }

  public void setNameLte(String nameLte) {
    this.nameLte = JsonNullable.<String>of(nameLte);
  }


  public ElfImageWhereInput nameNot(String nameNot) {
    this.nameNot = JsonNullable.<String>of(nameNot);
    return this;
  }

   /**
   * Get nameNot
   * @return nameNot
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getNameNot() {
        return nameNot.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_NAME_NOT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getNameNot_JsonNullable() {
    return nameNot;
  }
  
  @JsonProperty(JSON_PROPERTY_NAME_NOT)
  public void setNameNot_JsonNullable(JsonNullable<String> nameNot) {
    this.nameNot = nameNot;
  }

  public void setNameNot(String nameNot) {
    this.nameNot = JsonNullable.<String>of(nameNot);
  }


  public ElfImageWhereInput nameNotContains(String nameNotContains) {
    this.nameNotContains = JsonNullable.<String>of(nameNotContains);
    return this;
  }

   /**
   * Get nameNotContains
   * @return nameNotContains
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getNameNotContains() {
        return nameNotContains.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_NAME_NOT_CONTAINS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getNameNotContains_JsonNullable() {
    return nameNotContains;
  }
  
  @JsonProperty(JSON_PROPERTY_NAME_NOT_CONTAINS)
  public void setNameNotContains_JsonNullable(JsonNullable<String> nameNotContains) {
    this.nameNotContains = nameNotContains;
  }

  public void setNameNotContains(String nameNotContains) {
    this.nameNotContains = JsonNullable.<String>of(nameNotContains);
  }


  public ElfImageWhereInput nameNotEndsWith(String nameNotEndsWith) {
    this.nameNotEndsWith = JsonNullable.<String>of(nameNotEndsWith);
    return this;
  }

   /**
   * Get nameNotEndsWith
   * @return nameNotEndsWith
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getNameNotEndsWith() {
        return nameNotEndsWith.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_NAME_NOT_ENDS_WITH)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getNameNotEndsWith_JsonNullable() {
    return nameNotEndsWith;
  }
  
  @JsonProperty(JSON_PROPERTY_NAME_NOT_ENDS_WITH)
  public void setNameNotEndsWith_JsonNullable(JsonNullable<String> nameNotEndsWith) {
    this.nameNotEndsWith = nameNotEndsWith;
  }

  public void setNameNotEndsWith(String nameNotEndsWith) {
    this.nameNotEndsWith = JsonNullable.<String>of(nameNotEndsWith);
  }


  public ElfImageWhereInput nameNotIn(List<String> nameNotIn) {
    this.nameNotIn = JsonNullable.<List<String>>of(nameNotIn);
    return this;
  }

  public ElfImageWhereInput addNameNotInItem(String nameNotInItem) {
    if (this.nameNotIn == null || !this.nameNotIn.isPresent()) {
      this.nameNotIn = JsonNullable.<List<String>>of(new ArrayList<>());
    }
    try {
      this.nameNotIn.get().add(nameNotInItem);
    } catch (java.util.NoSuchElementException e) {
      // this can never happen, as we make sure above that the value is present
    }
    return this;
  }

   /**
   * Get nameNotIn
   * @return nameNotIn
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public List<String> getNameNotIn() {
        return nameNotIn.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_NAME_NOT_IN)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<List<String>> getNameNotIn_JsonNullable() {
    return nameNotIn;
  }
  
  @JsonProperty(JSON_PROPERTY_NAME_NOT_IN)
  public void setNameNotIn_JsonNullable(JsonNullable<List<String>> nameNotIn) {
    this.nameNotIn = nameNotIn;
  }

  public void setNameNotIn(List<String> nameNotIn) {
    this.nameNotIn = JsonNullable.<List<String>>of(nameNotIn);
  }


  public ElfImageWhereInput nameNotStartsWith(String nameNotStartsWith) {
    this.nameNotStartsWith = JsonNullable.<String>of(nameNotStartsWith);
    return this;
  }

   /**
   * Get nameNotStartsWith
   * @return nameNotStartsWith
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getNameNotStartsWith() {
        return nameNotStartsWith.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_NAME_NOT_STARTS_WITH)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getNameNotStartsWith_JsonNullable() {
    return nameNotStartsWith;
  }
  
  @JsonProperty(JSON_PROPERTY_NAME_NOT_STARTS_WITH)
  public void setNameNotStartsWith_JsonNullable(JsonNullable<String> nameNotStartsWith) {
    this.nameNotStartsWith = nameNotStartsWith;
  }

  public void setNameNotStartsWith(String nameNotStartsWith) {
    this.nameNotStartsWith = JsonNullable.<String>of(nameNotStartsWith);
  }


  public ElfImageWhereInput nameStartsWith(String nameStartsWith) {
    this.nameStartsWith = JsonNullable.<String>of(nameStartsWith);
    return this;
  }

   /**
   * Get nameStartsWith
   * @return nameStartsWith
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getNameStartsWith() {
        return nameStartsWith.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_NAME_STARTS_WITH)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getNameStartsWith_JsonNullable() {
    return nameStartsWith;
  }
  
  @JsonProperty(JSON_PROPERTY_NAME_STARTS_WITH)
  public void setNameStartsWith_JsonNullable(JsonNullable<String> nameStartsWith) {
    this.nameStartsWith = nameStartsWith;
  }

  public void setNameStartsWith(String nameStartsWith) {
    this.nameStartsWith = JsonNullable.<String>of(nameStartsWith);
  }


  public ElfImageWhereInput NOT(List<ElfImageWhereInput> NOT) {
    this.NOT = JsonNullable.<List<ElfImageWhereInput>>of(NOT);
    return this;
  }

  public ElfImageWhereInput addNOTItem(ElfImageWhereInput NOTItem) {
    if (this.NOT == null || !this.NOT.isPresent()) {
      this.NOT = JsonNullable.<List<ElfImageWhereInput>>of(new ArrayList<>());
    }
    try {
      this.NOT.get().add(NOTItem);
    } catch (java.util.NoSuchElementException e) {
      // this can never happen, as we make sure above that the value is present
    }
    return this;
  }

   /**
   * Get NOT
   * @return NOT
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public List<ElfImageWhereInput> getNOT() {
        return NOT.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_N_O_T)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<List<ElfImageWhereInput>> getNOT_JsonNullable() {
    return NOT;
  }
  
  @JsonProperty(JSON_PROPERTY_N_O_T)
  public void setNOT_JsonNullable(JsonNullable<List<ElfImageWhereInput>> NOT) {
    this.NOT = NOT;
  }

  public void setNOT(List<ElfImageWhereInput> NOT) {
    this.NOT = JsonNullable.<List<ElfImageWhereInput>>of(NOT);
  }


  public ElfImageWhereInput OR(List<ElfImageWhereInput> OR) {
    this.OR = JsonNullable.<List<ElfImageWhereInput>>of(OR);
    return this;
  }

  public ElfImageWhereInput addORItem(ElfImageWhereInput ORItem) {
    if (this.OR == null || !this.OR.isPresent()) {
      this.OR = JsonNullable.<List<ElfImageWhereInput>>of(new ArrayList<>());
    }
    try {
      this.OR.get().add(ORItem);
    } catch (java.util.NoSuchElementException e) {
      // this can never happen, as we make sure above that the value is present
    }
    return this;
  }

   /**
   * Get OR
   * @return OR
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public List<ElfImageWhereInput> getOR() {
        return OR.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_O_R)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<List<ElfImageWhereInput>> getOR_JsonNullable() {
    return OR;
  }
  
  @JsonProperty(JSON_PROPERTY_O_R)
  public void setOR_JsonNullable(JsonNullable<List<ElfImageWhereInput>> OR) {
    this.OR = OR;
  }

  public void setOR(List<ElfImageWhereInput> OR) {
    this.OR = JsonNullable.<List<ElfImageWhereInput>>of(OR);
  }


  public ElfImageWhereInput path(String path) {
    this.path = JsonNullable.<String>of(path);
    return this;
  }

   /**
   * Get path
   * @return path
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getPath() {
        return path.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_PATH)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getPath_JsonNullable() {
    return path;
  }
  
  @JsonProperty(JSON_PROPERTY_PATH)
  public void setPath_JsonNullable(JsonNullable<String> path) {
    this.path = path;
  }

  public void setPath(String path) {
    this.path = JsonNullable.<String>of(path);
  }


  public ElfImageWhereInput pathContains(String pathContains) {
    this.pathContains = JsonNullable.<String>of(pathContains);
    return this;
  }

   /**
   * Get pathContains
   * @return pathContains
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getPathContains() {
        return pathContains.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_PATH_CONTAINS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getPathContains_JsonNullable() {
    return pathContains;
  }
  
  @JsonProperty(JSON_PROPERTY_PATH_CONTAINS)
  public void setPathContains_JsonNullable(JsonNullable<String> pathContains) {
    this.pathContains = pathContains;
  }

  public void setPathContains(String pathContains) {
    this.pathContains = JsonNullable.<String>of(pathContains);
  }


  public ElfImageWhereInput pathEndsWith(String pathEndsWith) {
    this.pathEndsWith = JsonNullable.<String>of(pathEndsWith);
    return this;
  }

   /**
   * Get pathEndsWith
   * @return pathEndsWith
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getPathEndsWith() {
        return pathEndsWith.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_PATH_ENDS_WITH)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getPathEndsWith_JsonNullable() {
    return pathEndsWith;
  }
  
  @JsonProperty(JSON_PROPERTY_PATH_ENDS_WITH)
  public void setPathEndsWith_JsonNullable(JsonNullable<String> pathEndsWith) {
    this.pathEndsWith = pathEndsWith;
  }

  public void setPathEndsWith(String pathEndsWith) {
    this.pathEndsWith = JsonNullable.<String>of(pathEndsWith);
  }


  public ElfImageWhereInput pathGt(String pathGt) {
    this.pathGt = JsonNullable.<String>of(pathGt);
    return this;
  }

   /**
   * Get pathGt
   * @return pathGt
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getPathGt() {
        return pathGt.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_PATH_GT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getPathGt_JsonNullable() {
    return pathGt;
  }
  
  @JsonProperty(JSON_PROPERTY_PATH_GT)
  public void setPathGt_JsonNullable(JsonNullable<String> pathGt) {
    this.pathGt = pathGt;
  }

  public void setPathGt(String pathGt) {
    this.pathGt = JsonNullable.<String>of(pathGt);
  }


  public ElfImageWhereInput pathGte(String pathGte) {
    this.pathGte = JsonNullable.<String>of(pathGte);
    return this;
  }

   /**
   * Get pathGte
   * @return pathGte
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getPathGte() {
        return pathGte.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_PATH_GTE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getPathGte_JsonNullable() {
    return pathGte;
  }
  
  @JsonProperty(JSON_PROPERTY_PATH_GTE)
  public void setPathGte_JsonNullable(JsonNullable<String> pathGte) {
    this.pathGte = pathGte;
  }

  public void setPathGte(String pathGte) {
    this.pathGte = JsonNullable.<String>of(pathGte);
  }


  public ElfImageWhereInput pathIn(List<String> pathIn) {
    this.pathIn = JsonNullable.<List<String>>of(pathIn);
    return this;
  }

  public ElfImageWhereInput addPathInItem(String pathInItem) {
    if (this.pathIn == null || !this.pathIn.isPresent()) {
      this.pathIn = JsonNullable.<List<String>>of(new ArrayList<>());
    }
    try {
      this.pathIn.get().add(pathInItem);
    } catch (java.util.NoSuchElementException e) {
      // this can never happen, as we make sure above that the value is present
    }
    return this;
  }

   /**
   * Get pathIn
   * @return pathIn
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public List<String> getPathIn() {
        return pathIn.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_PATH_IN)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<List<String>> getPathIn_JsonNullable() {
    return pathIn;
  }
  
  @JsonProperty(JSON_PROPERTY_PATH_IN)
  public void setPathIn_JsonNullable(JsonNullable<List<String>> pathIn) {
    this.pathIn = pathIn;
  }

  public void setPathIn(List<String> pathIn) {
    this.pathIn = JsonNullable.<List<String>>of(pathIn);
  }


  public ElfImageWhereInput pathLt(String pathLt) {
    this.pathLt = JsonNullable.<String>of(pathLt);
    return this;
  }

   /**
   * Get pathLt
   * @return pathLt
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getPathLt() {
        return pathLt.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_PATH_LT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getPathLt_JsonNullable() {
    return pathLt;
  }
  
  @JsonProperty(JSON_PROPERTY_PATH_LT)
  public void setPathLt_JsonNullable(JsonNullable<String> pathLt) {
    this.pathLt = pathLt;
  }

  public void setPathLt(String pathLt) {
    this.pathLt = JsonNullable.<String>of(pathLt);
  }


  public ElfImageWhereInput pathLte(String pathLte) {
    this.pathLte = JsonNullable.<String>of(pathLte);
    return this;
  }

   /**
   * Get pathLte
   * @return pathLte
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getPathLte() {
        return pathLte.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_PATH_LTE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getPathLte_JsonNullable() {
    return pathLte;
  }
  
  @JsonProperty(JSON_PROPERTY_PATH_LTE)
  public void setPathLte_JsonNullable(JsonNullable<String> pathLte) {
    this.pathLte = pathLte;
  }

  public void setPathLte(String pathLte) {
    this.pathLte = JsonNullable.<String>of(pathLte);
  }


  public ElfImageWhereInput pathNot(String pathNot) {
    this.pathNot = JsonNullable.<String>of(pathNot);
    return this;
  }

   /**
   * Get pathNot
   * @return pathNot
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getPathNot() {
        return pathNot.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_PATH_NOT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getPathNot_JsonNullable() {
    return pathNot;
  }
  
  @JsonProperty(JSON_PROPERTY_PATH_NOT)
  public void setPathNot_JsonNullable(JsonNullable<String> pathNot) {
    this.pathNot = pathNot;
  }

  public void setPathNot(String pathNot) {
    this.pathNot = JsonNullable.<String>of(pathNot);
  }


  public ElfImageWhereInput pathNotContains(String pathNotContains) {
    this.pathNotContains = JsonNullable.<String>of(pathNotContains);
    return this;
  }

   /**
   * Get pathNotContains
   * @return pathNotContains
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getPathNotContains() {
        return pathNotContains.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_PATH_NOT_CONTAINS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getPathNotContains_JsonNullable() {
    return pathNotContains;
  }
  
  @JsonProperty(JSON_PROPERTY_PATH_NOT_CONTAINS)
  public void setPathNotContains_JsonNullable(JsonNullable<String> pathNotContains) {
    this.pathNotContains = pathNotContains;
  }

  public void setPathNotContains(String pathNotContains) {
    this.pathNotContains = JsonNullable.<String>of(pathNotContains);
  }


  public ElfImageWhereInput pathNotEndsWith(String pathNotEndsWith) {
    this.pathNotEndsWith = JsonNullable.<String>of(pathNotEndsWith);
    return this;
  }

   /**
   * Get pathNotEndsWith
   * @return pathNotEndsWith
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getPathNotEndsWith() {
        return pathNotEndsWith.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_PATH_NOT_ENDS_WITH)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getPathNotEndsWith_JsonNullable() {
    return pathNotEndsWith;
  }
  
  @JsonProperty(JSON_PROPERTY_PATH_NOT_ENDS_WITH)
  public void setPathNotEndsWith_JsonNullable(JsonNullable<String> pathNotEndsWith) {
    this.pathNotEndsWith = pathNotEndsWith;
  }

  public void setPathNotEndsWith(String pathNotEndsWith) {
    this.pathNotEndsWith = JsonNullable.<String>of(pathNotEndsWith);
  }


  public ElfImageWhereInput pathNotIn(List<String> pathNotIn) {
    this.pathNotIn = JsonNullable.<List<String>>of(pathNotIn);
    return this;
  }

  public ElfImageWhereInput addPathNotInItem(String pathNotInItem) {
    if (this.pathNotIn == null || !this.pathNotIn.isPresent()) {
      this.pathNotIn = JsonNullable.<List<String>>of(new ArrayList<>());
    }
    try {
      this.pathNotIn.get().add(pathNotInItem);
    } catch (java.util.NoSuchElementException e) {
      // this can never happen, as we make sure above that the value is present
    }
    return this;
  }

   /**
   * Get pathNotIn
   * @return pathNotIn
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public List<String> getPathNotIn() {
        return pathNotIn.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_PATH_NOT_IN)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<List<String>> getPathNotIn_JsonNullable() {
    return pathNotIn;
  }
  
  @JsonProperty(JSON_PROPERTY_PATH_NOT_IN)
  public void setPathNotIn_JsonNullable(JsonNullable<List<String>> pathNotIn) {
    this.pathNotIn = pathNotIn;
  }

  public void setPathNotIn(List<String> pathNotIn) {
    this.pathNotIn = JsonNullable.<List<String>>of(pathNotIn);
  }


  public ElfImageWhereInput pathNotStartsWith(String pathNotStartsWith) {
    this.pathNotStartsWith = JsonNullable.<String>of(pathNotStartsWith);
    return this;
  }

   /**
   * Get pathNotStartsWith
   * @return pathNotStartsWith
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getPathNotStartsWith() {
        return pathNotStartsWith.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_PATH_NOT_STARTS_WITH)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getPathNotStartsWith_JsonNullable() {
    return pathNotStartsWith;
  }
  
  @JsonProperty(JSON_PROPERTY_PATH_NOT_STARTS_WITH)
  public void setPathNotStartsWith_JsonNullable(JsonNullable<String> pathNotStartsWith) {
    this.pathNotStartsWith = pathNotStartsWith;
  }

  public void setPathNotStartsWith(String pathNotStartsWith) {
    this.pathNotStartsWith = JsonNullable.<String>of(pathNotStartsWith);
  }


  public ElfImageWhereInput pathStartsWith(String pathStartsWith) {
    this.pathStartsWith = JsonNullable.<String>of(pathStartsWith);
    return this;
  }

   /**
   * Get pathStartsWith
   * @return pathStartsWith
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getPathStartsWith() {
        return pathStartsWith.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_PATH_STARTS_WITH)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getPathStartsWith_JsonNullable() {
    return pathStartsWith;
  }
  
  @JsonProperty(JSON_PROPERTY_PATH_STARTS_WITH)
  public void setPathStartsWith_JsonNullable(JsonNullable<String> pathStartsWith) {
    this.pathStartsWith = pathStartsWith;
  }

  public void setPathStartsWith(String pathStartsWith) {
    this.pathStartsWith = JsonNullable.<String>of(pathStartsWith);
  }


  public ElfImageWhereInput size(Double size) {
    this.size = JsonNullable.<Double>of(size);
    return this;
  }

   /**
   * Get size
   * @return size
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public Double getSize() {
        return size.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_SIZE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<Double> getSize_JsonNullable() {
    return size;
  }
  
  @JsonProperty(JSON_PROPERTY_SIZE)
  public void setSize_JsonNullable(JsonNullable<Double> size) {
    this.size = size;
  }

  public void setSize(Double size) {
    this.size = JsonNullable.<Double>of(size);
  }


  public ElfImageWhereInput sizeGt(Double sizeGt) {
    this.sizeGt = JsonNullable.<Double>of(sizeGt);
    return this;
  }

   /**
   * Get sizeGt
   * @return sizeGt
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public Double getSizeGt() {
        return sizeGt.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_SIZE_GT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<Double> getSizeGt_JsonNullable() {
    return sizeGt;
  }
  
  @JsonProperty(JSON_PROPERTY_SIZE_GT)
  public void setSizeGt_JsonNullable(JsonNullable<Double> sizeGt) {
    this.sizeGt = sizeGt;
  }

  public void setSizeGt(Double sizeGt) {
    this.sizeGt = JsonNullable.<Double>of(sizeGt);
  }


  public ElfImageWhereInput sizeGte(Double sizeGte) {
    this.sizeGte = JsonNullable.<Double>of(sizeGte);
    return this;
  }

   /**
   * Get sizeGte
   * @return sizeGte
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public Double getSizeGte() {
        return sizeGte.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_SIZE_GTE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<Double> getSizeGte_JsonNullable() {
    return sizeGte;
  }
  
  @JsonProperty(JSON_PROPERTY_SIZE_GTE)
  public void setSizeGte_JsonNullable(JsonNullable<Double> sizeGte) {
    this.sizeGte = sizeGte;
  }

  public void setSizeGte(Double sizeGte) {
    this.sizeGte = JsonNullable.<Double>of(sizeGte);
  }


  public ElfImageWhereInput sizeIn(List<Double> sizeIn) {
    this.sizeIn = JsonNullable.<List<Double>>of(sizeIn);
    return this;
  }

  public ElfImageWhereInput addSizeInItem(Double sizeInItem) {
    if (this.sizeIn == null || !this.sizeIn.isPresent()) {
      this.sizeIn = JsonNullable.<List<Double>>of(new ArrayList<>());
    }
    try {
      this.sizeIn.get().add(sizeInItem);
    } catch (java.util.NoSuchElementException e) {
      // this can never happen, as we make sure above that the value is present
    }
    return this;
  }

   /**
   * Get sizeIn
   * @return sizeIn
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public List<Double> getSizeIn() {
        return sizeIn.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_SIZE_IN)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<List<Double>> getSizeIn_JsonNullable() {
    return sizeIn;
  }
  
  @JsonProperty(JSON_PROPERTY_SIZE_IN)
  public void setSizeIn_JsonNullable(JsonNullable<List<Double>> sizeIn) {
    this.sizeIn = sizeIn;
  }

  public void setSizeIn(List<Double> sizeIn) {
    this.sizeIn = JsonNullable.<List<Double>>of(sizeIn);
  }


  public ElfImageWhereInput sizeLt(Double sizeLt) {
    this.sizeLt = JsonNullable.<Double>of(sizeLt);
    return this;
  }

   /**
   * Get sizeLt
   * @return sizeLt
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public Double getSizeLt() {
        return sizeLt.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_SIZE_LT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<Double> getSizeLt_JsonNullable() {
    return sizeLt;
  }
  
  @JsonProperty(JSON_PROPERTY_SIZE_LT)
  public void setSizeLt_JsonNullable(JsonNullable<Double> sizeLt) {
    this.sizeLt = sizeLt;
  }

  public void setSizeLt(Double sizeLt) {
    this.sizeLt = JsonNullable.<Double>of(sizeLt);
  }


  public ElfImageWhereInput sizeLte(Double sizeLte) {
    this.sizeLte = JsonNullable.<Double>of(sizeLte);
    return this;
  }

   /**
   * Get sizeLte
   * @return sizeLte
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public Double getSizeLte() {
        return sizeLte.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_SIZE_LTE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<Double> getSizeLte_JsonNullable() {
    return sizeLte;
  }
  
  @JsonProperty(JSON_PROPERTY_SIZE_LTE)
  public void setSizeLte_JsonNullable(JsonNullable<Double> sizeLte) {
    this.sizeLte = sizeLte;
  }

  public void setSizeLte(Double sizeLte) {
    this.sizeLte = JsonNullable.<Double>of(sizeLte);
  }


  public ElfImageWhereInput sizeNot(Double sizeNot) {
    this.sizeNot = JsonNullable.<Double>of(sizeNot);
    return this;
  }

   /**
   * Get sizeNot
   * @return sizeNot
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public Double getSizeNot() {
        return sizeNot.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_SIZE_NOT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<Double> getSizeNot_JsonNullable() {
    return sizeNot;
  }
  
  @JsonProperty(JSON_PROPERTY_SIZE_NOT)
  public void setSizeNot_JsonNullable(JsonNullable<Double> sizeNot) {
    this.sizeNot = sizeNot;
  }

  public void setSizeNot(Double sizeNot) {
    this.sizeNot = JsonNullable.<Double>of(sizeNot);
  }


  public ElfImageWhereInput sizeNotIn(List<Double> sizeNotIn) {
    this.sizeNotIn = JsonNullable.<List<Double>>of(sizeNotIn);
    return this;
  }

  public ElfImageWhereInput addSizeNotInItem(Double sizeNotInItem) {
    if (this.sizeNotIn == null || !this.sizeNotIn.isPresent()) {
      this.sizeNotIn = JsonNullable.<List<Double>>of(new ArrayList<>());
    }
    try {
      this.sizeNotIn.get().add(sizeNotInItem);
    } catch (java.util.NoSuchElementException e) {
      // this can never happen, as we make sure above that the value is present
    }
    return this;
  }

   /**
   * Get sizeNotIn
   * @return sizeNotIn
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public List<Double> getSizeNotIn() {
        return sizeNotIn.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_SIZE_NOT_IN)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<List<Double>> getSizeNotIn_JsonNullable() {
    return sizeNotIn;
  }
  
  @JsonProperty(JSON_PROPERTY_SIZE_NOT_IN)
  public void setSizeNotIn_JsonNullable(JsonNullable<List<Double>> sizeNotIn) {
    this.sizeNotIn = sizeNotIn;
  }

  public void setSizeNotIn(List<Double> sizeNotIn) {
    this.sizeNotIn = JsonNullable.<List<Double>>of(sizeNotIn);
  }


  public ElfImageWhereInput vmDisksEvery(VmDiskWhereInput vmDisksEvery) {
    this.vmDisksEvery = JsonNullable.<VmDiskWhereInput>of(vmDisksEvery);
    return this;
  }

   /**
   * Get vmDisksEvery
   * @return vmDisksEvery
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public VmDiskWhereInput getVmDisksEvery() {
        return vmDisksEvery.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_VM_DISKS_EVERY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<VmDiskWhereInput> getVmDisksEvery_JsonNullable() {
    return vmDisksEvery;
  }
  
  @JsonProperty(JSON_PROPERTY_VM_DISKS_EVERY)
  public void setVmDisksEvery_JsonNullable(JsonNullable<VmDiskWhereInput> vmDisksEvery) {
    this.vmDisksEvery = vmDisksEvery;
  }

  public void setVmDisksEvery(VmDiskWhereInput vmDisksEvery) {
    this.vmDisksEvery = JsonNullable.<VmDiskWhereInput>of(vmDisksEvery);
  }


  public ElfImageWhereInput vmDisksNone(VmDiskWhereInput vmDisksNone) {
    this.vmDisksNone = JsonNullable.<VmDiskWhereInput>of(vmDisksNone);
    return this;
  }

   /**
   * Get vmDisksNone
   * @return vmDisksNone
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public VmDiskWhereInput getVmDisksNone() {
        return vmDisksNone.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_VM_DISKS_NONE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<VmDiskWhereInput> getVmDisksNone_JsonNullable() {
    return vmDisksNone;
  }
  
  @JsonProperty(JSON_PROPERTY_VM_DISKS_NONE)
  public void setVmDisksNone_JsonNullable(JsonNullable<VmDiskWhereInput> vmDisksNone) {
    this.vmDisksNone = vmDisksNone;
  }

  public void setVmDisksNone(VmDiskWhereInput vmDisksNone) {
    this.vmDisksNone = JsonNullable.<VmDiskWhereInput>of(vmDisksNone);
  }


  public ElfImageWhereInput vmDisksSome(VmDiskWhereInput vmDisksSome) {
    this.vmDisksSome = JsonNullable.<VmDiskWhereInput>of(vmDisksSome);
    return this;
  }

   /**
   * Get vmDisksSome
   * @return vmDisksSome
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public VmDiskWhereInput getVmDisksSome() {
        return vmDisksSome.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_VM_DISKS_SOME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<VmDiskWhereInput> getVmDisksSome_JsonNullable() {
    return vmDisksSome;
  }
  
  @JsonProperty(JSON_PROPERTY_VM_DISKS_SOME)
  public void setVmDisksSome_JsonNullable(JsonNullable<VmDiskWhereInput> vmDisksSome) {
    this.vmDisksSome = vmDisksSome;
  }

  public void setVmDisksSome(VmDiskWhereInput vmDisksSome) {
    this.vmDisksSome = JsonNullable.<VmDiskWhereInput>of(vmDisksSome);
  }


  public ElfImageWhereInput vmSnapshotsEvery(VmSnapshotWhereInput vmSnapshotsEvery) {
    this.vmSnapshotsEvery = JsonNullable.<VmSnapshotWhereInput>of(vmSnapshotsEvery);
    return this;
  }

   /**
   * Get vmSnapshotsEvery
   * @return vmSnapshotsEvery
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public VmSnapshotWhereInput getVmSnapshotsEvery() {
        return vmSnapshotsEvery.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_VM_SNAPSHOTS_EVERY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<VmSnapshotWhereInput> getVmSnapshotsEvery_JsonNullable() {
    return vmSnapshotsEvery;
  }
  
  @JsonProperty(JSON_PROPERTY_VM_SNAPSHOTS_EVERY)
  public void setVmSnapshotsEvery_JsonNullable(JsonNullable<VmSnapshotWhereInput> vmSnapshotsEvery) {
    this.vmSnapshotsEvery = vmSnapshotsEvery;
  }

  public void setVmSnapshotsEvery(VmSnapshotWhereInput vmSnapshotsEvery) {
    this.vmSnapshotsEvery = JsonNullable.<VmSnapshotWhereInput>of(vmSnapshotsEvery);
  }


  public ElfImageWhereInput vmSnapshotsNone(VmSnapshotWhereInput vmSnapshotsNone) {
    this.vmSnapshotsNone = JsonNullable.<VmSnapshotWhereInput>of(vmSnapshotsNone);
    return this;
  }

   /**
   * Get vmSnapshotsNone
   * @return vmSnapshotsNone
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public VmSnapshotWhereInput getVmSnapshotsNone() {
        return vmSnapshotsNone.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_VM_SNAPSHOTS_NONE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<VmSnapshotWhereInput> getVmSnapshotsNone_JsonNullable() {
    return vmSnapshotsNone;
  }
  
  @JsonProperty(JSON_PROPERTY_VM_SNAPSHOTS_NONE)
  public void setVmSnapshotsNone_JsonNullable(JsonNullable<VmSnapshotWhereInput> vmSnapshotsNone) {
    this.vmSnapshotsNone = vmSnapshotsNone;
  }

  public void setVmSnapshotsNone(VmSnapshotWhereInput vmSnapshotsNone) {
    this.vmSnapshotsNone = JsonNullable.<VmSnapshotWhereInput>of(vmSnapshotsNone);
  }


  public ElfImageWhereInput vmSnapshotsSome(VmSnapshotWhereInput vmSnapshotsSome) {
    this.vmSnapshotsSome = JsonNullable.<VmSnapshotWhereInput>of(vmSnapshotsSome);
    return this;
  }

   /**
   * Get vmSnapshotsSome
   * @return vmSnapshotsSome
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public VmSnapshotWhereInput getVmSnapshotsSome() {
        return vmSnapshotsSome.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_VM_SNAPSHOTS_SOME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<VmSnapshotWhereInput> getVmSnapshotsSome_JsonNullable() {
    return vmSnapshotsSome;
  }
  
  @JsonProperty(JSON_PROPERTY_VM_SNAPSHOTS_SOME)
  public void setVmSnapshotsSome_JsonNullable(JsonNullable<VmSnapshotWhereInput> vmSnapshotsSome) {
    this.vmSnapshotsSome = vmSnapshotsSome;
  }

  public void setVmSnapshotsSome(VmSnapshotWhereInput vmSnapshotsSome) {
    this.vmSnapshotsSome = JsonNullable.<VmSnapshotWhereInput>of(vmSnapshotsSome);
  }


  public ElfImageWhereInput vmTemplatesEvery(VmTemplateWhereInput vmTemplatesEvery) {
    this.vmTemplatesEvery = JsonNullable.<VmTemplateWhereInput>of(vmTemplatesEvery);
    return this;
  }

   /**
   * Get vmTemplatesEvery
   * @return vmTemplatesEvery
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public VmTemplateWhereInput getVmTemplatesEvery() {
        return vmTemplatesEvery.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_VM_TEMPLATES_EVERY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<VmTemplateWhereInput> getVmTemplatesEvery_JsonNullable() {
    return vmTemplatesEvery;
  }
  
  @JsonProperty(JSON_PROPERTY_VM_TEMPLATES_EVERY)
  public void setVmTemplatesEvery_JsonNullable(JsonNullable<VmTemplateWhereInput> vmTemplatesEvery) {
    this.vmTemplatesEvery = vmTemplatesEvery;
  }

  public void setVmTemplatesEvery(VmTemplateWhereInput vmTemplatesEvery) {
    this.vmTemplatesEvery = JsonNullable.<VmTemplateWhereInput>of(vmTemplatesEvery);
  }


  public ElfImageWhereInput vmTemplatesNone(VmTemplateWhereInput vmTemplatesNone) {
    this.vmTemplatesNone = JsonNullable.<VmTemplateWhereInput>of(vmTemplatesNone);
    return this;
  }

   /**
   * Get vmTemplatesNone
   * @return vmTemplatesNone
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public VmTemplateWhereInput getVmTemplatesNone() {
        return vmTemplatesNone.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_VM_TEMPLATES_NONE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<VmTemplateWhereInput> getVmTemplatesNone_JsonNullable() {
    return vmTemplatesNone;
  }
  
  @JsonProperty(JSON_PROPERTY_VM_TEMPLATES_NONE)
  public void setVmTemplatesNone_JsonNullable(JsonNullable<VmTemplateWhereInput> vmTemplatesNone) {
    this.vmTemplatesNone = vmTemplatesNone;
  }

  public void setVmTemplatesNone(VmTemplateWhereInput vmTemplatesNone) {
    this.vmTemplatesNone = JsonNullable.<VmTemplateWhereInput>of(vmTemplatesNone);
  }


  public ElfImageWhereInput vmTemplatesSome(VmTemplateWhereInput vmTemplatesSome) {
    this.vmTemplatesSome = JsonNullable.<VmTemplateWhereInput>of(vmTemplatesSome);
    return this;
  }

   /**
   * Get vmTemplatesSome
   * @return vmTemplatesSome
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public VmTemplateWhereInput getVmTemplatesSome() {
        return vmTemplatesSome.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_VM_TEMPLATES_SOME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<VmTemplateWhereInput> getVmTemplatesSome_JsonNullable() {
    return vmTemplatesSome;
  }
  
  @JsonProperty(JSON_PROPERTY_VM_TEMPLATES_SOME)
  public void setVmTemplatesSome_JsonNullable(JsonNullable<VmTemplateWhereInput> vmTemplatesSome) {
    this.vmTemplatesSome = vmTemplatesSome;
  }

  public void setVmTemplatesSome(VmTemplateWhereInput vmTemplatesSome) {
    this.vmTemplatesSome = JsonNullable.<VmTemplateWhereInput>of(vmTemplatesSome);
  }


  /**
   * Return true if this ElfImageWhereInput object is equal to o.
   */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ElfImageWhereInput elfImageWhereInput = (ElfImageWhereInput) o;
    return equalsNullable(this.AND, elfImageWhereInput.AND) &&
        equalsNullable(this.cluster, elfImageWhereInput.cluster) &&
        equalsNullable(this.contentLibraryImage, elfImageWhereInput.contentLibraryImage) &&
        equalsNullable(this.description, elfImageWhereInput.description) &&
        equalsNullable(this.descriptionContains, elfImageWhereInput.descriptionContains) &&
        equalsNullable(this.descriptionEndsWith, elfImageWhereInput.descriptionEndsWith) &&
        equalsNullable(this.descriptionGt, elfImageWhereInput.descriptionGt) &&
        equalsNullable(this.descriptionGte, elfImageWhereInput.descriptionGte) &&
        equalsNullable(this.descriptionIn, elfImageWhereInput.descriptionIn) &&
        equalsNullable(this.descriptionLt, elfImageWhereInput.descriptionLt) &&
        equalsNullable(this.descriptionLte, elfImageWhereInput.descriptionLte) &&
        equalsNullable(this.descriptionNot, elfImageWhereInput.descriptionNot) &&
        equalsNullable(this.descriptionNotContains, elfImageWhereInput.descriptionNotContains) &&
        equalsNullable(this.descriptionNotEndsWith, elfImageWhereInput.descriptionNotEndsWith) &&
        equalsNullable(this.descriptionNotIn, elfImageWhereInput.descriptionNotIn) &&
        equalsNullable(this.descriptionNotStartsWith, elfImageWhereInput.descriptionNotStartsWith) &&
        equalsNullable(this.descriptionStartsWith, elfImageWhereInput.descriptionStartsWith) &&
        equalsNullable(this.entityAsyncStatus, elfImageWhereInput.entityAsyncStatus) &&
        equalsNullable(this.entityAsyncStatusIn, elfImageWhereInput.entityAsyncStatusIn) &&
        equalsNullable(this.entityAsyncStatusNot, elfImageWhereInput.entityAsyncStatusNot) &&
        equalsNullable(this.entityAsyncStatusNotIn, elfImageWhereInput.entityAsyncStatusNotIn) &&
        equalsNullable(this.id, elfImageWhereInput.id) &&
        equalsNullable(this.idContains, elfImageWhereInput.idContains) &&
        equalsNullable(this.idEndsWith, elfImageWhereInput.idEndsWith) &&
        equalsNullable(this.idGt, elfImageWhereInput.idGt) &&
        equalsNullable(this.idGte, elfImageWhereInput.idGte) &&
        equalsNullable(this.idIn, elfImageWhereInput.idIn) &&
        equalsNullable(this.idLt, elfImageWhereInput.idLt) &&
        equalsNullable(this.idLte, elfImageWhereInput.idLte) &&
        equalsNullable(this.idNot, elfImageWhereInput.idNot) &&
        equalsNullable(this.idNotContains, elfImageWhereInput.idNotContains) &&
        equalsNullable(this.idNotEndsWith, elfImageWhereInput.idNotEndsWith) &&
        equalsNullable(this.idNotIn, elfImageWhereInput.idNotIn) &&
        equalsNullable(this.idNotStartsWith, elfImageWhereInput.idNotStartsWith) &&
        equalsNullable(this.idStartsWith, elfImageWhereInput.idStartsWith) &&
        equalsNullable(this.labelsEvery, elfImageWhereInput.labelsEvery) &&
        equalsNullable(this.labelsNone, elfImageWhereInput.labelsNone) &&
        equalsNullable(this.labelsSome, elfImageWhereInput.labelsSome) &&
        equalsNullable(this.localCreatedAt, elfImageWhereInput.localCreatedAt) &&
        equalsNullable(this.localCreatedAtGt, elfImageWhereInput.localCreatedAtGt) &&
        equalsNullable(this.localCreatedAtGte, elfImageWhereInput.localCreatedAtGte) &&
        equalsNullable(this.localCreatedAtIn, elfImageWhereInput.localCreatedAtIn) &&
        equalsNullable(this.localCreatedAtLt, elfImageWhereInput.localCreatedAtLt) &&
        equalsNullable(this.localCreatedAtLte, elfImageWhereInput.localCreatedAtLte) &&
        equalsNullable(this.localCreatedAtNot, elfImageWhereInput.localCreatedAtNot) &&
        equalsNullable(this.localCreatedAtNotIn, elfImageWhereInput.localCreatedAtNotIn) &&
        equalsNullable(this.localId, elfImageWhereInput.localId) &&
        equalsNullable(this.localIdContains, elfImageWhereInput.localIdContains) &&
        equalsNullable(this.localIdEndsWith, elfImageWhereInput.localIdEndsWith) &&
        equalsNullable(this.localIdGt, elfImageWhereInput.localIdGt) &&
        equalsNullable(this.localIdGte, elfImageWhereInput.localIdGte) &&
        equalsNullable(this.localIdIn, elfImageWhereInput.localIdIn) &&
        equalsNullable(this.localIdLt, elfImageWhereInput.localIdLt) &&
        equalsNullable(this.localIdLte, elfImageWhereInput.localIdLte) &&
        equalsNullable(this.localIdNot, elfImageWhereInput.localIdNot) &&
        equalsNullable(this.localIdNotContains, elfImageWhereInput.localIdNotContains) &&
        equalsNullable(this.localIdNotEndsWith, elfImageWhereInput.localIdNotEndsWith) &&
        equalsNullable(this.localIdNotIn, elfImageWhereInput.localIdNotIn) &&
        equalsNullable(this.localIdNotStartsWith, elfImageWhereInput.localIdNotStartsWith) &&
        equalsNullable(this.localIdStartsWith, elfImageWhereInput.localIdStartsWith) &&
        equalsNullable(this.name, elfImageWhereInput.name) &&
        equalsNullable(this.nameContains, elfImageWhereInput.nameContains) &&
        equalsNullable(this.nameEndsWith, elfImageWhereInput.nameEndsWith) &&
        equalsNullable(this.nameGt, elfImageWhereInput.nameGt) &&
        equalsNullable(this.nameGte, elfImageWhereInput.nameGte) &&
        equalsNullable(this.nameIn, elfImageWhereInput.nameIn) &&
        equalsNullable(this.nameLt, elfImageWhereInput.nameLt) &&
        equalsNullable(this.nameLte, elfImageWhereInput.nameLte) &&
        equalsNullable(this.nameNot, elfImageWhereInput.nameNot) &&
        equalsNullable(this.nameNotContains, elfImageWhereInput.nameNotContains) &&
        equalsNullable(this.nameNotEndsWith, elfImageWhereInput.nameNotEndsWith) &&
        equalsNullable(this.nameNotIn, elfImageWhereInput.nameNotIn) &&
        equalsNullable(this.nameNotStartsWith, elfImageWhereInput.nameNotStartsWith) &&
        equalsNullable(this.nameStartsWith, elfImageWhereInput.nameStartsWith) &&
        equalsNullable(this.NOT, elfImageWhereInput.NOT) &&
        equalsNullable(this.OR, elfImageWhereInput.OR) &&
        equalsNullable(this.path, elfImageWhereInput.path) &&
        equalsNullable(this.pathContains, elfImageWhereInput.pathContains) &&
        equalsNullable(this.pathEndsWith, elfImageWhereInput.pathEndsWith) &&
        equalsNullable(this.pathGt, elfImageWhereInput.pathGt) &&
        equalsNullable(this.pathGte, elfImageWhereInput.pathGte) &&
        equalsNullable(this.pathIn, elfImageWhereInput.pathIn) &&
        equalsNullable(this.pathLt, elfImageWhereInput.pathLt) &&
        equalsNullable(this.pathLte, elfImageWhereInput.pathLte) &&
        equalsNullable(this.pathNot, elfImageWhereInput.pathNot) &&
        equalsNullable(this.pathNotContains, elfImageWhereInput.pathNotContains) &&
        equalsNullable(this.pathNotEndsWith, elfImageWhereInput.pathNotEndsWith) &&
        equalsNullable(this.pathNotIn, elfImageWhereInput.pathNotIn) &&
        equalsNullable(this.pathNotStartsWith, elfImageWhereInput.pathNotStartsWith) &&
        equalsNullable(this.pathStartsWith, elfImageWhereInput.pathStartsWith) &&
        equalsNullable(this.size, elfImageWhereInput.size) &&
        equalsNullable(this.sizeGt, elfImageWhereInput.sizeGt) &&
        equalsNullable(this.sizeGte, elfImageWhereInput.sizeGte) &&
        equalsNullable(this.sizeIn, elfImageWhereInput.sizeIn) &&
        equalsNullable(this.sizeLt, elfImageWhereInput.sizeLt) &&
        equalsNullable(this.sizeLte, elfImageWhereInput.sizeLte) &&
        equalsNullable(this.sizeNot, elfImageWhereInput.sizeNot) &&
        equalsNullable(this.sizeNotIn, elfImageWhereInput.sizeNotIn) &&
        equalsNullable(this.vmDisksEvery, elfImageWhereInput.vmDisksEvery) &&
        equalsNullable(this.vmDisksNone, elfImageWhereInput.vmDisksNone) &&
        equalsNullable(this.vmDisksSome, elfImageWhereInput.vmDisksSome) &&
        equalsNullable(this.vmSnapshotsEvery, elfImageWhereInput.vmSnapshotsEvery) &&
        equalsNullable(this.vmSnapshotsNone, elfImageWhereInput.vmSnapshotsNone) &&
        equalsNullable(this.vmSnapshotsSome, elfImageWhereInput.vmSnapshotsSome) &&
        equalsNullable(this.vmTemplatesEvery, elfImageWhereInput.vmTemplatesEvery) &&
        equalsNullable(this.vmTemplatesNone, elfImageWhereInput.vmTemplatesNone) &&
        equalsNullable(this.vmTemplatesSome, elfImageWhereInput.vmTemplatesSome);
  }

  private static <T> boolean equalsNullable(JsonNullable<T> a, JsonNullable<T> b) {
    return a == b || (a != null && b != null && a.isPresent() && b.isPresent() && Objects.deepEquals(a.get(), b.get()));
  }

  @Override
  public int hashCode() {
    return Objects.hash(hashCodeNullable(AND), hashCodeNullable(cluster), hashCodeNullable(contentLibraryImage), hashCodeNullable(description), hashCodeNullable(descriptionContains), hashCodeNullable(descriptionEndsWith), hashCodeNullable(descriptionGt), hashCodeNullable(descriptionGte), hashCodeNullable(descriptionIn), hashCodeNullable(descriptionLt), hashCodeNullable(descriptionLte), hashCodeNullable(descriptionNot), hashCodeNullable(descriptionNotContains), hashCodeNullable(descriptionNotEndsWith), hashCodeNullable(descriptionNotIn), hashCodeNullable(descriptionNotStartsWith), hashCodeNullable(descriptionStartsWith), hashCodeNullable(entityAsyncStatus), hashCodeNullable(entityAsyncStatusIn), hashCodeNullable(entityAsyncStatusNot), hashCodeNullable(entityAsyncStatusNotIn), hashCodeNullable(id), hashCodeNullable(idContains), hashCodeNullable(idEndsWith), hashCodeNullable(idGt), hashCodeNullable(idGte), hashCodeNullable(idIn), hashCodeNullable(idLt), hashCodeNullable(idLte), hashCodeNullable(idNot), hashCodeNullable(idNotContains), hashCodeNullable(idNotEndsWith), hashCodeNullable(idNotIn), hashCodeNullable(idNotStartsWith), hashCodeNullable(idStartsWith), hashCodeNullable(labelsEvery), hashCodeNullable(labelsNone), hashCodeNullable(labelsSome), hashCodeNullable(localCreatedAt), hashCodeNullable(localCreatedAtGt), hashCodeNullable(localCreatedAtGte), hashCodeNullable(localCreatedAtIn), hashCodeNullable(localCreatedAtLt), hashCodeNullable(localCreatedAtLte), hashCodeNullable(localCreatedAtNot), hashCodeNullable(localCreatedAtNotIn), hashCodeNullable(localId), hashCodeNullable(localIdContains), hashCodeNullable(localIdEndsWith), hashCodeNullable(localIdGt), hashCodeNullable(localIdGte), hashCodeNullable(localIdIn), hashCodeNullable(localIdLt), hashCodeNullable(localIdLte), hashCodeNullable(localIdNot), hashCodeNullable(localIdNotContains), hashCodeNullable(localIdNotEndsWith), hashCodeNullable(localIdNotIn), hashCodeNullable(localIdNotStartsWith), hashCodeNullable(localIdStartsWith), hashCodeNullable(name), hashCodeNullable(nameContains), hashCodeNullable(nameEndsWith), hashCodeNullable(nameGt), hashCodeNullable(nameGte), hashCodeNullable(nameIn), hashCodeNullable(nameLt), hashCodeNullable(nameLte), hashCodeNullable(nameNot), hashCodeNullable(nameNotContains), hashCodeNullable(nameNotEndsWith), hashCodeNullable(nameNotIn), hashCodeNullable(nameNotStartsWith), hashCodeNullable(nameStartsWith), hashCodeNullable(NOT), hashCodeNullable(OR), hashCodeNullable(path), hashCodeNullable(pathContains), hashCodeNullable(pathEndsWith), hashCodeNullable(pathGt), hashCodeNullable(pathGte), hashCodeNullable(pathIn), hashCodeNullable(pathLt), hashCodeNullable(pathLte), hashCodeNullable(pathNot), hashCodeNullable(pathNotContains), hashCodeNullable(pathNotEndsWith), hashCodeNullable(pathNotIn), hashCodeNullable(pathNotStartsWith), hashCodeNullable(pathStartsWith), hashCodeNullable(size), hashCodeNullable(sizeGt), hashCodeNullable(sizeGte), hashCodeNullable(sizeIn), hashCodeNullable(sizeLt), hashCodeNullable(sizeLte), hashCodeNullable(sizeNot), hashCodeNullable(sizeNotIn), hashCodeNullable(vmDisksEvery), hashCodeNullable(vmDisksNone), hashCodeNullable(vmDisksSome), hashCodeNullable(vmSnapshotsEvery), hashCodeNullable(vmSnapshotsNone), hashCodeNullable(vmSnapshotsSome), hashCodeNullable(vmTemplatesEvery), hashCodeNullable(vmTemplatesNone), hashCodeNullable(vmTemplatesSome));
  }

  private static <T> int hashCodeNullable(JsonNullable<T> a) {
    if (a == null) {
      return 1;
    }
    return a.isPresent() ? Arrays.deepHashCode(new Object[]{a.get()}) : 31;
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ElfImageWhereInput {\n");
    sb.append("    AND: ").append(toIndentedString(AND)).append("\n");
    sb.append("    cluster: ").append(toIndentedString(cluster)).append("\n");
    sb.append("    contentLibraryImage: ").append(toIndentedString(contentLibraryImage)).append("\n");
    sb.append("    description: ").append(toIndentedString(description)).append("\n");
    sb.append("    descriptionContains: ").append(toIndentedString(descriptionContains)).append("\n");
    sb.append("    descriptionEndsWith: ").append(toIndentedString(descriptionEndsWith)).append("\n");
    sb.append("    descriptionGt: ").append(toIndentedString(descriptionGt)).append("\n");
    sb.append("    descriptionGte: ").append(toIndentedString(descriptionGte)).append("\n");
    sb.append("    descriptionIn: ").append(toIndentedString(descriptionIn)).append("\n");
    sb.append("    descriptionLt: ").append(toIndentedString(descriptionLt)).append("\n");
    sb.append("    descriptionLte: ").append(toIndentedString(descriptionLte)).append("\n");
    sb.append("    descriptionNot: ").append(toIndentedString(descriptionNot)).append("\n");
    sb.append("    descriptionNotContains: ").append(toIndentedString(descriptionNotContains)).append("\n");
    sb.append("    descriptionNotEndsWith: ").append(toIndentedString(descriptionNotEndsWith)).append("\n");
    sb.append("    descriptionNotIn: ").append(toIndentedString(descriptionNotIn)).append("\n");
    sb.append("    descriptionNotStartsWith: ").append(toIndentedString(descriptionNotStartsWith)).append("\n");
    sb.append("    descriptionStartsWith: ").append(toIndentedString(descriptionStartsWith)).append("\n");
    sb.append("    entityAsyncStatus: ").append(toIndentedString(entityAsyncStatus)).append("\n");
    sb.append("    entityAsyncStatusIn: ").append(toIndentedString(entityAsyncStatusIn)).append("\n");
    sb.append("    entityAsyncStatusNot: ").append(toIndentedString(entityAsyncStatusNot)).append("\n");
    sb.append("    entityAsyncStatusNotIn: ").append(toIndentedString(entityAsyncStatusNotIn)).append("\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    idContains: ").append(toIndentedString(idContains)).append("\n");
    sb.append("    idEndsWith: ").append(toIndentedString(idEndsWith)).append("\n");
    sb.append("    idGt: ").append(toIndentedString(idGt)).append("\n");
    sb.append("    idGte: ").append(toIndentedString(idGte)).append("\n");
    sb.append("    idIn: ").append(toIndentedString(idIn)).append("\n");
    sb.append("    idLt: ").append(toIndentedString(idLt)).append("\n");
    sb.append("    idLte: ").append(toIndentedString(idLte)).append("\n");
    sb.append("    idNot: ").append(toIndentedString(idNot)).append("\n");
    sb.append("    idNotContains: ").append(toIndentedString(idNotContains)).append("\n");
    sb.append("    idNotEndsWith: ").append(toIndentedString(idNotEndsWith)).append("\n");
    sb.append("    idNotIn: ").append(toIndentedString(idNotIn)).append("\n");
    sb.append("    idNotStartsWith: ").append(toIndentedString(idNotStartsWith)).append("\n");
    sb.append("    idStartsWith: ").append(toIndentedString(idStartsWith)).append("\n");
    sb.append("    labelsEvery: ").append(toIndentedString(labelsEvery)).append("\n");
    sb.append("    labelsNone: ").append(toIndentedString(labelsNone)).append("\n");
    sb.append("    labelsSome: ").append(toIndentedString(labelsSome)).append("\n");
    sb.append("    localCreatedAt: ").append(toIndentedString(localCreatedAt)).append("\n");
    sb.append("    localCreatedAtGt: ").append(toIndentedString(localCreatedAtGt)).append("\n");
    sb.append("    localCreatedAtGte: ").append(toIndentedString(localCreatedAtGte)).append("\n");
    sb.append("    localCreatedAtIn: ").append(toIndentedString(localCreatedAtIn)).append("\n");
    sb.append("    localCreatedAtLt: ").append(toIndentedString(localCreatedAtLt)).append("\n");
    sb.append("    localCreatedAtLte: ").append(toIndentedString(localCreatedAtLte)).append("\n");
    sb.append("    localCreatedAtNot: ").append(toIndentedString(localCreatedAtNot)).append("\n");
    sb.append("    localCreatedAtNotIn: ").append(toIndentedString(localCreatedAtNotIn)).append("\n");
    sb.append("    localId: ").append(toIndentedString(localId)).append("\n");
    sb.append("    localIdContains: ").append(toIndentedString(localIdContains)).append("\n");
    sb.append("    localIdEndsWith: ").append(toIndentedString(localIdEndsWith)).append("\n");
    sb.append("    localIdGt: ").append(toIndentedString(localIdGt)).append("\n");
    sb.append("    localIdGte: ").append(toIndentedString(localIdGte)).append("\n");
    sb.append("    localIdIn: ").append(toIndentedString(localIdIn)).append("\n");
    sb.append("    localIdLt: ").append(toIndentedString(localIdLt)).append("\n");
    sb.append("    localIdLte: ").append(toIndentedString(localIdLte)).append("\n");
    sb.append("    localIdNot: ").append(toIndentedString(localIdNot)).append("\n");
    sb.append("    localIdNotContains: ").append(toIndentedString(localIdNotContains)).append("\n");
    sb.append("    localIdNotEndsWith: ").append(toIndentedString(localIdNotEndsWith)).append("\n");
    sb.append("    localIdNotIn: ").append(toIndentedString(localIdNotIn)).append("\n");
    sb.append("    localIdNotStartsWith: ").append(toIndentedString(localIdNotStartsWith)).append("\n");
    sb.append("    localIdStartsWith: ").append(toIndentedString(localIdStartsWith)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    nameContains: ").append(toIndentedString(nameContains)).append("\n");
    sb.append("    nameEndsWith: ").append(toIndentedString(nameEndsWith)).append("\n");
    sb.append("    nameGt: ").append(toIndentedString(nameGt)).append("\n");
    sb.append("    nameGte: ").append(toIndentedString(nameGte)).append("\n");
    sb.append("    nameIn: ").append(toIndentedString(nameIn)).append("\n");
    sb.append("    nameLt: ").append(toIndentedString(nameLt)).append("\n");
    sb.append("    nameLte: ").append(toIndentedString(nameLte)).append("\n");
    sb.append("    nameNot: ").append(toIndentedString(nameNot)).append("\n");
    sb.append("    nameNotContains: ").append(toIndentedString(nameNotContains)).append("\n");
    sb.append("    nameNotEndsWith: ").append(toIndentedString(nameNotEndsWith)).append("\n");
    sb.append("    nameNotIn: ").append(toIndentedString(nameNotIn)).append("\n");
    sb.append("    nameNotStartsWith: ").append(toIndentedString(nameNotStartsWith)).append("\n");
    sb.append("    nameStartsWith: ").append(toIndentedString(nameStartsWith)).append("\n");
    sb.append("    NOT: ").append(toIndentedString(NOT)).append("\n");
    sb.append("    OR: ").append(toIndentedString(OR)).append("\n");
    sb.append("    path: ").append(toIndentedString(path)).append("\n");
    sb.append("    pathContains: ").append(toIndentedString(pathContains)).append("\n");
    sb.append("    pathEndsWith: ").append(toIndentedString(pathEndsWith)).append("\n");
    sb.append("    pathGt: ").append(toIndentedString(pathGt)).append("\n");
    sb.append("    pathGte: ").append(toIndentedString(pathGte)).append("\n");
    sb.append("    pathIn: ").append(toIndentedString(pathIn)).append("\n");
    sb.append("    pathLt: ").append(toIndentedString(pathLt)).append("\n");
    sb.append("    pathLte: ").append(toIndentedString(pathLte)).append("\n");
    sb.append("    pathNot: ").append(toIndentedString(pathNot)).append("\n");
    sb.append("    pathNotContains: ").append(toIndentedString(pathNotContains)).append("\n");
    sb.append("    pathNotEndsWith: ").append(toIndentedString(pathNotEndsWith)).append("\n");
    sb.append("    pathNotIn: ").append(toIndentedString(pathNotIn)).append("\n");
    sb.append("    pathNotStartsWith: ").append(toIndentedString(pathNotStartsWith)).append("\n");
    sb.append("    pathStartsWith: ").append(toIndentedString(pathStartsWith)).append("\n");
    sb.append("    size: ").append(toIndentedString(size)).append("\n");
    sb.append("    sizeGt: ").append(toIndentedString(sizeGt)).append("\n");
    sb.append("    sizeGte: ").append(toIndentedString(sizeGte)).append("\n");
    sb.append("    sizeIn: ").append(toIndentedString(sizeIn)).append("\n");
    sb.append("    sizeLt: ").append(toIndentedString(sizeLt)).append("\n");
    sb.append("    sizeLte: ").append(toIndentedString(sizeLte)).append("\n");
    sb.append("    sizeNot: ").append(toIndentedString(sizeNot)).append("\n");
    sb.append("    sizeNotIn: ").append(toIndentedString(sizeNotIn)).append("\n");
    sb.append("    vmDisksEvery: ").append(toIndentedString(vmDisksEvery)).append("\n");
    sb.append("    vmDisksNone: ").append(toIndentedString(vmDisksNone)).append("\n");
    sb.append("    vmDisksSome: ").append(toIndentedString(vmDisksSome)).append("\n");
    sb.append("    vmSnapshotsEvery: ").append(toIndentedString(vmSnapshotsEvery)).append("\n");
    sb.append("    vmSnapshotsNone: ").append(toIndentedString(vmSnapshotsNone)).append("\n");
    sb.append("    vmSnapshotsSome: ").append(toIndentedString(vmSnapshotsSome)).append("\n");
    sb.append("    vmTemplatesEvery: ").append(toIndentedString(vmTemplatesEvery)).append("\n");
    sb.append("    vmTemplatesNone: ").append(toIndentedString(vmTemplatesNone)).append("\n");
    sb.append("    vmTemplatesSome: ").append(toIndentedString(vmTemplatesSome)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

