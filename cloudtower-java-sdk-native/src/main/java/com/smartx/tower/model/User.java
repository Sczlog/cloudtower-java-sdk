/*
 * Tower SDK API
 * cloudtower operation API and SDK
 *
 * The version of the OpenAPI document: 1.7.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.smartx.tower.model;

import java.util.Objects;
import java.util.Arrays;
import java.util.Map;
import java.util.HashMap;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import com.smartx.tower.model.AlertRuleCluster;
import com.smartx.tower.model.UserRole;
import com.smartx.tower.model.UserSource;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.util.ArrayList;
import java.util.List;
import org.openapitools.jackson.nullable.JsonNullable;
import com.fasterxml.jackson.annotation.JsonIgnore;
import org.openapitools.jackson.nullable.JsonNullable;
import java.util.NoSuchElementException;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;


/**
 * User
 */
@JsonPropertyOrder({
  User.JSON_PROPERTY_EMAIL_ADDRESS,
  User.JSON_PROPERTY_ID,
  User.JSON_PROPERTY_INTERNAL,
  User.JSON_PROPERTY_LDAP_DN,
  User.JSON_PROPERTY_MOBILE_PHONE,
  User.JSON_PROPERTY_NAME,
  User.JSON_PROPERTY_ROLE,
  User.JSON_PROPERTY_ROLES,
  User.JSON_PROPERTY_SOURCE,
  User.JSON_PROPERTY_USERNAME
})
@javax.annotation.processing.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2021-10-27T15:59:14.939791800+08:00[Asia/Shanghai]")
public class User {
  public static final String JSON_PROPERTY_EMAIL_ADDRESS = "email_address";
  private JsonNullable<String> emailAddress = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_ID = "id";
  private String id;

  public static final String JSON_PROPERTY_INTERNAL = "internal";
  private Boolean internal;

  public static final String JSON_PROPERTY_LDAP_DN = "ldap_dn";
  private JsonNullable<String> ldapDn = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_MOBILE_PHONE = "mobile_phone";
  private JsonNullable<String> mobilePhone = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_NAME = "name";
  private String name;

  public static final String JSON_PROPERTY_ROLE = "role";
  private JsonNullable<UserRole> role = JsonNullable.<UserRole>undefined();

  public static final String JSON_PROPERTY_ROLES = "roles";
  private JsonNullable<List<AlertRuleCluster>> roles = JsonNullable.<List<AlertRuleCluster>>undefined();

  public static final String JSON_PROPERTY_SOURCE = "source";
  private UserSource source;

  public static final String JSON_PROPERTY_USERNAME = "username";
  private String username;


  public User emailAddress(String emailAddress) {
    this.emailAddress = JsonNullable.<String>of(emailAddress);
    return this;
  }

   /**
   * Get emailAddress
   * @return emailAddress
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getEmailAddress() {
        return emailAddress.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_EMAIL_ADDRESS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getEmailAddress_JsonNullable() {
    return emailAddress;
  }
  
  @JsonProperty(JSON_PROPERTY_EMAIL_ADDRESS)
  public void setEmailAddress_JsonNullable(JsonNullable<String> emailAddress) {
    this.emailAddress = emailAddress;
  }

  public void setEmailAddress(String emailAddress) {
    this.emailAddress = JsonNullable.<String>of(emailAddress);
  }


  public User id(String id) {
    this.id = id;
    return this;
  }

   /**
   * Get id
   * @return id
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")
  @JsonProperty(JSON_PROPERTY_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getId() {
    return id;
  }


  @JsonProperty(JSON_PROPERTY_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setId(String id) {
    this.id = id;
  }


  public User internal(Boolean internal) {
    this.internal = internal;
    return this;
  }

   /**
   * Get internal
   * @return internal
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")
  @JsonProperty(JSON_PROPERTY_INTERNAL)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public Boolean getInternal() {
    return internal;
  }


  @JsonProperty(JSON_PROPERTY_INTERNAL)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setInternal(Boolean internal) {
    this.internal = internal;
  }


  public User ldapDn(String ldapDn) {
    this.ldapDn = JsonNullable.<String>of(ldapDn);
    return this;
  }

   /**
   * Get ldapDn
   * @return ldapDn
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getLdapDn() {
        return ldapDn.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_LDAP_DN)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getLdapDn_JsonNullable() {
    return ldapDn;
  }
  
  @JsonProperty(JSON_PROPERTY_LDAP_DN)
  public void setLdapDn_JsonNullable(JsonNullable<String> ldapDn) {
    this.ldapDn = ldapDn;
  }

  public void setLdapDn(String ldapDn) {
    this.ldapDn = JsonNullable.<String>of(ldapDn);
  }


  public User mobilePhone(String mobilePhone) {
    this.mobilePhone = JsonNullable.<String>of(mobilePhone);
    return this;
  }

   /**
   * Get mobilePhone
   * @return mobilePhone
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getMobilePhone() {
        return mobilePhone.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_MOBILE_PHONE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getMobilePhone_JsonNullable() {
    return mobilePhone;
  }
  
  @JsonProperty(JSON_PROPERTY_MOBILE_PHONE)
  public void setMobilePhone_JsonNullable(JsonNullable<String> mobilePhone) {
    this.mobilePhone = mobilePhone;
  }

  public void setMobilePhone(String mobilePhone) {
    this.mobilePhone = JsonNullable.<String>of(mobilePhone);
  }


  public User name(String name) {
    this.name = name;
    return this;
  }

   /**
   * Get name
   * @return name
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")
  @JsonProperty(JSON_PROPERTY_NAME)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getName() {
    return name;
  }


  @JsonProperty(JSON_PROPERTY_NAME)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setName(String name) {
    this.name = name;
  }


  public User role(UserRole role) {
    this.role = JsonNullable.<UserRole>of(role);
    return this;
  }

   /**
   * Get role
   * @return role
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public UserRole getRole() {
        return role.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_ROLE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<UserRole> getRole_JsonNullable() {
    return role;
  }
  
  @JsonProperty(JSON_PROPERTY_ROLE)
  public void setRole_JsonNullable(JsonNullable<UserRole> role) {
    this.role = role;
  }

  public void setRole(UserRole role) {
    this.role = JsonNullable.<UserRole>of(role);
  }


  public User roles(List<AlertRuleCluster> roles) {
    this.roles = JsonNullable.<List<AlertRuleCluster>>of(roles);
    return this;
  }

  public User addRolesItem(AlertRuleCluster rolesItem) {
    if (this.roles == null || !this.roles.isPresent()) {
      this.roles = JsonNullable.<List<AlertRuleCluster>>of(new ArrayList<>());
    }
    try {
      this.roles.get().add(rolesItem);
    } catch (java.util.NoSuchElementException e) {
      // this can never happen, as we make sure above that the value is present
    }
    return this;
  }

   /**
   * Get roles
   * @return roles
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public List<AlertRuleCluster> getRoles() {
        return roles.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_ROLES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<List<AlertRuleCluster>> getRoles_JsonNullable() {
    return roles;
  }
  
  @JsonProperty(JSON_PROPERTY_ROLES)
  public void setRoles_JsonNullable(JsonNullable<List<AlertRuleCluster>> roles) {
    this.roles = roles;
  }

  public void setRoles(List<AlertRuleCluster> roles) {
    this.roles = JsonNullable.<List<AlertRuleCluster>>of(roles);
  }


  public User source(UserSource source) {
    this.source = source;
    return this;
  }

   /**
   * Get source
   * @return source
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")
  @JsonProperty(JSON_PROPERTY_SOURCE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public UserSource getSource() {
    return source;
  }


  @JsonProperty(JSON_PROPERTY_SOURCE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setSource(UserSource source) {
    this.source = source;
  }


  public User username(String username) {
    this.username = username;
    return this;
  }

   /**
   * Get username
   * @return username
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")
  @JsonProperty(JSON_PROPERTY_USERNAME)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getUsername() {
    return username;
  }


  @JsonProperty(JSON_PROPERTY_USERNAME)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setUsername(String username) {
    this.username = username;
  }


  /**
   * Return true if this User object is equal to o.
   */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    User user = (User) o;
    return equalsNullable(this.emailAddress, user.emailAddress) &&
        Objects.equals(this.id, user.id) &&
        Objects.equals(this.internal, user.internal) &&
        equalsNullable(this.ldapDn, user.ldapDn) &&
        equalsNullable(this.mobilePhone, user.mobilePhone) &&
        Objects.equals(this.name, user.name) &&
        equalsNullable(this.role, user.role) &&
        equalsNullable(this.roles, user.roles) &&
        Objects.equals(this.source, user.source) &&
        Objects.equals(this.username, user.username);
  }

  private static <T> boolean equalsNullable(JsonNullable<T> a, JsonNullable<T> b) {
    return a == b || (a != null && b != null && a.isPresent() && b.isPresent() && Objects.deepEquals(a.get(), b.get()));
  }

  @Override
  public int hashCode() {
    return Objects.hash(hashCodeNullable(emailAddress), id, internal, hashCodeNullable(ldapDn), hashCodeNullable(mobilePhone), name, hashCodeNullable(role), hashCodeNullable(roles), source, username);
  }

  private static <T> int hashCodeNullable(JsonNullable<T> a) {
    if (a == null) {
      return 1;
    }
    return a.isPresent() ? Arrays.deepHashCode(new Object[]{a.get()}) : 31;
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class User {\n");
    sb.append("    emailAddress: ").append(toIndentedString(emailAddress)).append("\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    internal: ").append(toIndentedString(internal)).append("\n");
    sb.append("    ldapDn: ").append(toIndentedString(ldapDn)).append("\n");
    sb.append("    mobilePhone: ").append(toIndentedString(mobilePhone)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    role: ").append(toIndentedString(role)).append("\n");
    sb.append("    roles: ").append(toIndentedString(roles)).append("\n");
    sb.append("    source: ").append(toIndentedString(source)).append("\n");
    sb.append("    username: ").append(toIndentedString(username)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

