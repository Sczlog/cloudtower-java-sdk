/*
 * Tower SDK API
 * cloudtower operation API and SDK
 *
 * The version of the OpenAPI document: 1.7.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.smartx.tower.model;

import java.util.Objects;
import java.util.Arrays;
import java.util.Map;
import java.util.HashMap;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import com.smartx.tower.model.AlertAlertRule;
import com.smartx.tower.model.AlertDisk;
import com.smartx.tower.model.AlertRuleCluster;
import com.smartx.tower.model.BrickTopoPowers;
import com.smartx.tower.model.EntityAsyncStatus;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.util.ArrayList;
import java.util.List;
import org.openapitools.jackson.nullable.JsonNullable;
import com.fasterxml.jackson.annotation.JsonIgnore;
import org.openapitools.jackson.nullable.JsonNullable;
import java.util.NoSuchElementException;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;


/**
 * ElfImage
 */
@JsonPropertyOrder({
  ElfImage.JSON_PROPERTY_CLUSTER,
  ElfImage.JSON_PROPERTY_CONTENT_LIBRARY_IMAGE,
  ElfImage.JSON_PROPERTY_DESCRIPTION,
  ElfImage.JSON_PROPERTY_ENTITY_ASYNC_STATUS,
  ElfImage.JSON_PROPERTY_ID,
  ElfImage.JSON_PROPERTY_LABELS,
  ElfImage.JSON_PROPERTY_LOCAL_CREATED_AT,
  ElfImage.JSON_PROPERTY_LOCAL_ID,
  ElfImage.JSON_PROPERTY_NAME,
  ElfImage.JSON_PROPERTY_PATH,
  ElfImage.JSON_PROPERTY_SIZE,
  ElfImage.JSON_PROPERTY_UPLOAD_TASK,
  ElfImage.JSON_PROPERTY_VM_DISKS,
  ElfImage.JSON_PROPERTY_VM_SNAPSHOTS,
  ElfImage.JSON_PROPERTY_VM_TEMPLATES
})
@javax.annotation.processing.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2021-10-27T15:59:14.939791800+08:00[Asia/Shanghai]")
public class ElfImage {
  public static final String JSON_PROPERTY_CLUSTER = "cluster";
  private JsonNullable<AlertDisk> cluster = JsonNullable.<AlertDisk>undefined();

  public static final String JSON_PROPERTY_CONTENT_LIBRARY_IMAGE = "content_library_image";
  private JsonNullable<AlertDisk> contentLibraryImage = JsonNullable.<AlertDisk>undefined();

  public static final String JSON_PROPERTY_DESCRIPTION = "description";
  private String description;

  public static final String JSON_PROPERTY_ENTITY_ASYNC_STATUS = "entityAsyncStatus";
  private JsonNullable<EntityAsyncStatus> entityAsyncStatus = JsonNullable.<EntityAsyncStatus>undefined();

  public static final String JSON_PROPERTY_ID = "id";
  private String id;

  public static final String JSON_PROPERTY_LABELS = "labels";
  private JsonNullable<List<BrickTopoPowers>> labels = JsonNullable.<List<BrickTopoPowers>>undefined();

  public static final String JSON_PROPERTY_LOCAL_CREATED_AT = "local_created_at";
  private String localCreatedAt;

  public static final String JSON_PROPERTY_LOCAL_ID = "local_id";
  private String localId;

  public static final String JSON_PROPERTY_NAME = "name";
  private String name;

  public static final String JSON_PROPERTY_PATH = "path";
  private String path;

  public static final String JSON_PROPERTY_SIZE = "size";
  private Double size;

  public static final String JSON_PROPERTY_UPLOAD_TASK = "upload_task";
  private JsonNullable<AlertAlertRule> uploadTask = JsonNullable.<AlertAlertRule>undefined();

  public static final String JSON_PROPERTY_VM_DISKS = "vm_disks";
  private JsonNullable<List<BrickTopoPowers>> vmDisks = JsonNullable.<List<BrickTopoPowers>>undefined();

  public static final String JSON_PROPERTY_VM_SNAPSHOTS = "vm_snapshots";
  private JsonNullable<List<AlertRuleCluster>> vmSnapshots = JsonNullable.<List<AlertRuleCluster>>undefined();

  public static final String JSON_PROPERTY_VM_TEMPLATES = "vm_templates";
  private JsonNullable<List<AlertRuleCluster>> vmTemplates = JsonNullable.<List<AlertRuleCluster>>undefined();


  public ElfImage cluster(AlertDisk cluster) {
    this.cluster = JsonNullable.<AlertDisk>of(cluster);
    return this;
  }

   /**
   * Get cluster
   * @return cluster
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public AlertDisk getCluster() {
        return cluster.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_CLUSTER)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<AlertDisk> getCluster_JsonNullable() {
    return cluster;
  }
  
  @JsonProperty(JSON_PROPERTY_CLUSTER)
  public void setCluster_JsonNullable(JsonNullable<AlertDisk> cluster) {
    this.cluster = cluster;
  }

  public void setCluster(AlertDisk cluster) {
    this.cluster = JsonNullable.<AlertDisk>of(cluster);
  }


  public ElfImage contentLibraryImage(AlertDisk contentLibraryImage) {
    this.contentLibraryImage = JsonNullable.<AlertDisk>of(contentLibraryImage);
    return this;
  }

   /**
   * Get contentLibraryImage
   * @return contentLibraryImage
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public AlertDisk getContentLibraryImage() {
        return contentLibraryImage.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_CONTENT_LIBRARY_IMAGE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<AlertDisk> getContentLibraryImage_JsonNullable() {
    return contentLibraryImage;
  }
  
  @JsonProperty(JSON_PROPERTY_CONTENT_LIBRARY_IMAGE)
  public void setContentLibraryImage_JsonNullable(JsonNullable<AlertDisk> contentLibraryImage) {
    this.contentLibraryImage = contentLibraryImage;
  }

  public void setContentLibraryImage(AlertDisk contentLibraryImage) {
    this.contentLibraryImage = JsonNullable.<AlertDisk>of(contentLibraryImage);
  }


  public ElfImage description(String description) {
    this.description = description;
    return this;
  }

   /**
   * Get description
   * @return description
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")
  @JsonProperty(JSON_PROPERTY_DESCRIPTION)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getDescription() {
    return description;
  }


  @JsonProperty(JSON_PROPERTY_DESCRIPTION)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setDescription(String description) {
    this.description = description;
  }


  public ElfImage entityAsyncStatus(EntityAsyncStatus entityAsyncStatus) {
    this.entityAsyncStatus = JsonNullable.<EntityAsyncStatus>of(entityAsyncStatus);
    return this;
  }

   /**
   * Get entityAsyncStatus
   * @return entityAsyncStatus
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public EntityAsyncStatus getEntityAsyncStatus() {
        return entityAsyncStatus.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_ENTITY_ASYNC_STATUS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<EntityAsyncStatus> getEntityAsyncStatus_JsonNullable() {
    return entityAsyncStatus;
  }
  
  @JsonProperty(JSON_PROPERTY_ENTITY_ASYNC_STATUS)
  public void setEntityAsyncStatus_JsonNullable(JsonNullable<EntityAsyncStatus> entityAsyncStatus) {
    this.entityAsyncStatus = entityAsyncStatus;
  }

  public void setEntityAsyncStatus(EntityAsyncStatus entityAsyncStatus) {
    this.entityAsyncStatus = JsonNullable.<EntityAsyncStatus>of(entityAsyncStatus);
  }


  public ElfImage id(String id) {
    this.id = id;
    return this;
  }

   /**
   * Get id
   * @return id
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")
  @JsonProperty(JSON_PROPERTY_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getId() {
    return id;
  }


  @JsonProperty(JSON_PROPERTY_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setId(String id) {
    this.id = id;
  }


  public ElfImage labels(List<BrickTopoPowers> labels) {
    this.labels = JsonNullable.<List<BrickTopoPowers>>of(labels);
    return this;
  }

  public ElfImage addLabelsItem(BrickTopoPowers labelsItem) {
    if (this.labels == null || !this.labels.isPresent()) {
      this.labels = JsonNullable.<List<BrickTopoPowers>>of(new ArrayList<>());
    }
    try {
      this.labels.get().add(labelsItem);
    } catch (java.util.NoSuchElementException e) {
      // this can never happen, as we make sure above that the value is present
    }
    return this;
  }

   /**
   * Get labels
   * @return labels
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public List<BrickTopoPowers> getLabels() {
        return labels.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_LABELS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<List<BrickTopoPowers>> getLabels_JsonNullable() {
    return labels;
  }
  
  @JsonProperty(JSON_PROPERTY_LABELS)
  public void setLabels_JsonNullable(JsonNullable<List<BrickTopoPowers>> labels) {
    this.labels = labels;
  }

  public void setLabels(List<BrickTopoPowers> labels) {
    this.labels = JsonNullable.<List<BrickTopoPowers>>of(labels);
  }


  public ElfImage localCreatedAt(String localCreatedAt) {
    this.localCreatedAt = localCreatedAt;
    return this;
  }

   /**
   * Get localCreatedAt
   * @return localCreatedAt
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")
  @JsonProperty(JSON_PROPERTY_LOCAL_CREATED_AT)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getLocalCreatedAt() {
    return localCreatedAt;
  }


  @JsonProperty(JSON_PROPERTY_LOCAL_CREATED_AT)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setLocalCreatedAt(String localCreatedAt) {
    this.localCreatedAt = localCreatedAt;
  }


  public ElfImage localId(String localId) {
    this.localId = localId;
    return this;
  }

   /**
   * Get localId
   * @return localId
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")
  @JsonProperty(JSON_PROPERTY_LOCAL_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getLocalId() {
    return localId;
  }


  @JsonProperty(JSON_PROPERTY_LOCAL_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setLocalId(String localId) {
    this.localId = localId;
  }


  public ElfImage name(String name) {
    this.name = name;
    return this;
  }

   /**
   * Get name
   * @return name
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")
  @JsonProperty(JSON_PROPERTY_NAME)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getName() {
    return name;
  }


  @JsonProperty(JSON_PROPERTY_NAME)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setName(String name) {
    this.name = name;
  }


  public ElfImage path(String path) {
    this.path = path;
    return this;
  }

   /**
   * Get path
   * @return path
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")
  @JsonProperty(JSON_PROPERTY_PATH)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getPath() {
    return path;
  }


  @JsonProperty(JSON_PROPERTY_PATH)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setPath(String path) {
    this.path = path;
  }


  public ElfImage size(Double size) {
    this.size = size;
    return this;
  }

   /**
   * Get size
   * @return size
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")
  @JsonProperty(JSON_PROPERTY_SIZE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public Double getSize() {
    return size;
  }


  @JsonProperty(JSON_PROPERTY_SIZE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setSize(Double size) {
    this.size = size;
  }


  public ElfImage uploadTask(AlertAlertRule uploadTask) {
    this.uploadTask = JsonNullable.<AlertAlertRule>of(uploadTask);
    return this;
  }

   /**
   * Get uploadTask
   * @return uploadTask
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public AlertAlertRule getUploadTask() {
        return uploadTask.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_UPLOAD_TASK)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<AlertAlertRule> getUploadTask_JsonNullable() {
    return uploadTask;
  }
  
  @JsonProperty(JSON_PROPERTY_UPLOAD_TASK)
  public void setUploadTask_JsonNullable(JsonNullable<AlertAlertRule> uploadTask) {
    this.uploadTask = uploadTask;
  }

  public void setUploadTask(AlertAlertRule uploadTask) {
    this.uploadTask = JsonNullable.<AlertAlertRule>of(uploadTask);
  }


  public ElfImage vmDisks(List<BrickTopoPowers> vmDisks) {
    this.vmDisks = JsonNullable.<List<BrickTopoPowers>>of(vmDisks);
    return this;
  }

  public ElfImage addVmDisksItem(BrickTopoPowers vmDisksItem) {
    if (this.vmDisks == null || !this.vmDisks.isPresent()) {
      this.vmDisks = JsonNullable.<List<BrickTopoPowers>>of(new ArrayList<>());
    }
    try {
      this.vmDisks.get().add(vmDisksItem);
    } catch (java.util.NoSuchElementException e) {
      // this can never happen, as we make sure above that the value is present
    }
    return this;
  }

   /**
   * Get vmDisks
   * @return vmDisks
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public List<BrickTopoPowers> getVmDisks() {
        return vmDisks.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_VM_DISKS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<List<BrickTopoPowers>> getVmDisks_JsonNullable() {
    return vmDisks;
  }
  
  @JsonProperty(JSON_PROPERTY_VM_DISKS)
  public void setVmDisks_JsonNullable(JsonNullable<List<BrickTopoPowers>> vmDisks) {
    this.vmDisks = vmDisks;
  }

  public void setVmDisks(List<BrickTopoPowers> vmDisks) {
    this.vmDisks = JsonNullable.<List<BrickTopoPowers>>of(vmDisks);
  }


  public ElfImage vmSnapshots(List<AlertRuleCluster> vmSnapshots) {
    this.vmSnapshots = JsonNullable.<List<AlertRuleCluster>>of(vmSnapshots);
    return this;
  }

  public ElfImage addVmSnapshotsItem(AlertRuleCluster vmSnapshotsItem) {
    if (this.vmSnapshots == null || !this.vmSnapshots.isPresent()) {
      this.vmSnapshots = JsonNullable.<List<AlertRuleCluster>>of(new ArrayList<>());
    }
    try {
      this.vmSnapshots.get().add(vmSnapshotsItem);
    } catch (java.util.NoSuchElementException e) {
      // this can never happen, as we make sure above that the value is present
    }
    return this;
  }

   /**
   * Get vmSnapshots
   * @return vmSnapshots
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public List<AlertRuleCluster> getVmSnapshots() {
        return vmSnapshots.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_VM_SNAPSHOTS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<List<AlertRuleCluster>> getVmSnapshots_JsonNullable() {
    return vmSnapshots;
  }
  
  @JsonProperty(JSON_PROPERTY_VM_SNAPSHOTS)
  public void setVmSnapshots_JsonNullable(JsonNullable<List<AlertRuleCluster>> vmSnapshots) {
    this.vmSnapshots = vmSnapshots;
  }

  public void setVmSnapshots(List<AlertRuleCluster> vmSnapshots) {
    this.vmSnapshots = JsonNullable.<List<AlertRuleCluster>>of(vmSnapshots);
  }


  public ElfImage vmTemplates(List<AlertRuleCluster> vmTemplates) {
    this.vmTemplates = JsonNullable.<List<AlertRuleCluster>>of(vmTemplates);
    return this;
  }

  public ElfImage addVmTemplatesItem(AlertRuleCluster vmTemplatesItem) {
    if (this.vmTemplates == null || !this.vmTemplates.isPresent()) {
      this.vmTemplates = JsonNullable.<List<AlertRuleCluster>>of(new ArrayList<>());
    }
    try {
      this.vmTemplates.get().add(vmTemplatesItem);
    } catch (java.util.NoSuchElementException e) {
      // this can never happen, as we make sure above that the value is present
    }
    return this;
  }

   /**
   * Get vmTemplates
   * @return vmTemplates
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public List<AlertRuleCluster> getVmTemplates() {
        return vmTemplates.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_VM_TEMPLATES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<List<AlertRuleCluster>> getVmTemplates_JsonNullable() {
    return vmTemplates;
  }
  
  @JsonProperty(JSON_PROPERTY_VM_TEMPLATES)
  public void setVmTemplates_JsonNullable(JsonNullable<List<AlertRuleCluster>> vmTemplates) {
    this.vmTemplates = vmTemplates;
  }

  public void setVmTemplates(List<AlertRuleCluster> vmTemplates) {
    this.vmTemplates = JsonNullable.<List<AlertRuleCluster>>of(vmTemplates);
  }


  /**
   * Return true if this ElfImage object is equal to o.
   */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ElfImage elfImage = (ElfImage) o;
    return equalsNullable(this.cluster, elfImage.cluster) &&
        equalsNullable(this.contentLibraryImage, elfImage.contentLibraryImage) &&
        Objects.equals(this.description, elfImage.description) &&
        equalsNullable(this.entityAsyncStatus, elfImage.entityAsyncStatus) &&
        Objects.equals(this.id, elfImage.id) &&
        equalsNullable(this.labels, elfImage.labels) &&
        Objects.equals(this.localCreatedAt, elfImage.localCreatedAt) &&
        Objects.equals(this.localId, elfImage.localId) &&
        Objects.equals(this.name, elfImage.name) &&
        Objects.equals(this.path, elfImage.path) &&
        Objects.equals(this.size, elfImage.size) &&
        equalsNullable(this.uploadTask, elfImage.uploadTask) &&
        equalsNullable(this.vmDisks, elfImage.vmDisks) &&
        equalsNullable(this.vmSnapshots, elfImage.vmSnapshots) &&
        equalsNullable(this.vmTemplates, elfImage.vmTemplates);
  }

  private static <T> boolean equalsNullable(JsonNullable<T> a, JsonNullable<T> b) {
    return a == b || (a != null && b != null && a.isPresent() && b.isPresent() && Objects.deepEquals(a.get(), b.get()));
  }

  @Override
  public int hashCode() {
    return Objects.hash(hashCodeNullable(cluster), hashCodeNullable(contentLibraryImage), description, hashCodeNullable(entityAsyncStatus), id, hashCodeNullable(labels), localCreatedAt, localId, name, path, size, hashCodeNullable(uploadTask), hashCodeNullable(vmDisks), hashCodeNullable(vmSnapshots), hashCodeNullable(vmTemplates));
  }

  private static <T> int hashCodeNullable(JsonNullable<T> a) {
    if (a == null) {
      return 1;
    }
    return a.isPresent() ? Arrays.deepHashCode(new Object[]{a.get()}) : 31;
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ElfImage {\n");
    sb.append("    cluster: ").append(toIndentedString(cluster)).append("\n");
    sb.append("    contentLibraryImage: ").append(toIndentedString(contentLibraryImage)).append("\n");
    sb.append("    description: ").append(toIndentedString(description)).append("\n");
    sb.append("    entityAsyncStatus: ").append(toIndentedString(entityAsyncStatus)).append("\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    labels: ").append(toIndentedString(labels)).append("\n");
    sb.append("    localCreatedAt: ").append(toIndentedString(localCreatedAt)).append("\n");
    sb.append("    localId: ").append(toIndentedString(localId)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    path: ").append(toIndentedString(path)).append("\n");
    sb.append("    size: ").append(toIndentedString(size)).append("\n");
    sb.append("    uploadTask: ").append(toIndentedString(uploadTask)).append("\n");
    sb.append("    vmDisks: ").append(toIndentedString(vmDisks)).append("\n");
    sb.append("    vmSnapshots: ").append(toIndentedString(vmSnapshots)).append("\n");
    sb.append("    vmTemplates: ").append(toIndentedString(vmTemplates)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

