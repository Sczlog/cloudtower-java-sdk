/*
 * Tower SDK API
 * cloudtower operation API and SDK
 *
 * The version of the OpenAPI document: 1.7.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.smartx.tower.model;

import java.util.Objects;
import java.util.Arrays;
import java.util.Map;
import java.util.HashMap;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import com.smartx.tower.model.ClusterWhereInput;
import com.smartx.tower.model.DiskWhereInput;
import com.smartx.tower.model.EntityAsyncStatus;
import com.smartx.tower.model.GraphType;
import com.smartx.tower.model.HostWhereInput;
import com.smartx.tower.model.IscsiLunWhereInput;
import com.smartx.tower.model.MetricType;
import com.smartx.tower.model.NetworkType;
import com.smartx.tower.model.NicWhereInput;
import com.smartx.tower.model.NvmfNamespaceWhereInput;
import com.smartx.tower.model.ViewWhereInput;
import com.smartx.tower.model.VmNicWhereInput;
import com.smartx.tower.model.VmVolumeWhereInput;
import com.smartx.tower.model.VmWhereInput;
import com.smartx.tower.model.WitnessWhereInput;
import com.smartx.tower.model.ZoneWhereInput;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.util.ArrayList;
import java.util.List;
import org.openapitools.jackson.nullable.JsonNullable;
import com.fasterxml.jackson.annotation.JsonIgnore;
import org.openapitools.jackson.nullable.JsonNullable;
import java.util.NoSuchElementException;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;


/**
 * GraphWhereInput
 */
@JsonPropertyOrder({
  GraphWhereInput.JSON_PROPERTY_A_N_D,
  GraphWhereInput.JSON_PROPERTY_CLUSTER,
  GraphWhereInput.JSON_PROPERTY_DISKS_EVERY,
  GraphWhereInput.JSON_PROPERTY_DISKS_NONE,
  GraphWhereInput.JSON_PROPERTY_DISKS_SOME,
  GraphWhereInput.JSON_PROPERTY_ENTITY_ASYNC_STATUS,
  GraphWhereInput.JSON_PROPERTY_ENTITY_ASYNC_STATUS_IN,
  GraphWhereInput.JSON_PROPERTY_ENTITY_ASYNC_STATUS_NOT,
  GraphWhereInput.JSON_PROPERTY_ENTITY_ASYNC_STATUS_NOT_IN,
  GraphWhereInput.JSON_PROPERTY_HOSTS_EVERY,
  GraphWhereInput.JSON_PROPERTY_HOSTS_NONE,
  GraphWhereInput.JSON_PROPERTY_HOSTS_SOME,
  GraphWhereInput.JSON_PROPERTY_ID,
  GraphWhereInput.JSON_PROPERTY_ID_CONTAINS,
  GraphWhereInput.JSON_PROPERTY_ID_ENDS_WITH,
  GraphWhereInput.JSON_PROPERTY_ID_GT,
  GraphWhereInput.JSON_PROPERTY_ID_GTE,
  GraphWhereInput.JSON_PROPERTY_ID_IN,
  GraphWhereInput.JSON_PROPERTY_ID_LT,
  GraphWhereInput.JSON_PROPERTY_ID_LTE,
  GraphWhereInput.JSON_PROPERTY_ID_NOT,
  GraphWhereInput.JSON_PROPERTY_ID_NOT_CONTAINS,
  GraphWhereInput.JSON_PROPERTY_ID_NOT_ENDS_WITH,
  GraphWhereInput.JSON_PROPERTY_ID_NOT_IN,
  GraphWhereInput.JSON_PROPERTY_ID_NOT_STARTS_WITH,
  GraphWhereInput.JSON_PROPERTY_ID_STARTS_WITH,
  GraphWhereInput.JSON_PROPERTY_LOCAL_ID,
  GraphWhereInput.JSON_PROPERTY_LOCAL_ID_CONTAINS,
  GraphWhereInput.JSON_PROPERTY_LOCAL_ID_ENDS_WITH,
  GraphWhereInput.JSON_PROPERTY_LOCAL_ID_GT,
  GraphWhereInput.JSON_PROPERTY_LOCAL_ID_GTE,
  GraphWhereInput.JSON_PROPERTY_LOCAL_ID_IN,
  GraphWhereInput.JSON_PROPERTY_LOCAL_ID_LT,
  GraphWhereInput.JSON_PROPERTY_LOCAL_ID_LTE,
  GraphWhereInput.JSON_PROPERTY_LOCAL_ID_NOT,
  GraphWhereInput.JSON_PROPERTY_LOCAL_ID_NOT_CONTAINS,
  GraphWhereInput.JSON_PROPERTY_LOCAL_ID_NOT_ENDS_WITH,
  GraphWhereInput.JSON_PROPERTY_LOCAL_ID_NOT_IN,
  GraphWhereInput.JSON_PROPERTY_LOCAL_ID_NOT_STARTS_WITH,
  GraphWhereInput.JSON_PROPERTY_LOCAL_ID_STARTS_WITH,
  GraphWhereInput.JSON_PROPERTY_LUNS_EVERY,
  GraphWhereInput.JSON_PROPERTY_LUNS_NONE,
  GraphWhereInput.JSON_PROPERTY_LUNS_SOME,
  GraphWhereInput.JSON_PROPERTY_METRIC_COUNT,
  GraphWhereInput.JSON_PROPERTY_METRIC_COUNT_GT,
  GraphWhereInput.JSON_PROPERTY_METRIC_COUNT_GTE,
  GraphWhereInput.JSON_PROPERTY_METRIC_COUNT_IN,
  GraphWhereInput.JSON_PROPERTY_METRIC_COUNT_LT,
  GraphWhereInput.JSON_PROPERTY_METRIC_COUNT_LTE,
  GraphWhereInput.JSON_PROPERTY_METRIC_COUNT_NOT,
  GraphWhereInput.JSON_PROPERTY_METRIC_COUNT_NOT_IN,
  GraphWhereInput.JSON_PROPERTY_METRIC_NAME,
  GraphWhereInput.JSON_PROPERTY_METRIC_NAME_CONTAINS,
  GraphWhereInput.JSON_PROPERTY_METRIC_NAME_ENDS_WITH,
  GraphWhereInput.JSON_PROPERTY_METRIC_NAME_GT,
  GraphWhereInput.JSON_PROPERTY_METRIC_NAME_GTE,
  GraphWhereInput.JSON_PROPERTY_METRIC_NAME_IN,
  GraphWhereInput.JSON_PROPERTY_METRIC_NAME_LT,
  GraphWhereInput.JSON_PROPERTY_METRIC_NAME_LTE,
  GraphWhereInput.JSON_PROPERTY_METRIC_NAME_NOT,
  GraphWhereInput.JSON_PROPERTY_METRIC_NAME_NOT_CONTAINS,
  GraphWhereInput.JSON_PROPERTY_METRIC_NAME_NOT_ENDS_WITH,
  GraphWhereInput.JSON_PROPERTY_METRIC_NAME_NOT_IN,
  GraphWhereInput.JSON_PROPERTY_METRIC_NAME_NOT_STARTS_WITH,
  GraphWhereInput.JSON_PROPERTY_METRIC_NAME_STARTS_WITH,
  GraphWhereInput.JSON_PROPERTY_METRIC_TYPE,
  GraphWhereInput.JSON_PROPERTY_METRIC_TYPE_IN,
  GraphWhereInput.JSON_PROPERTY_METRIC_TYPE_NOT,
  GraphWhereInput.JSON_PROPERTY_METRIC_TYPE_NOT_IN,
  GraphWhereInput.JSON_PROPERTY_NAMESPACES_EVERY,
  GraphWhereInput.JSON_PROPERTY_NAMESPACES_NONE,
  GraphWhereInput.JSON_PROPERTY_NAMESPACES_SOME,
  GraphWhereInput.JSON_PROPERTY_NETWORK,
  GraphWhereInput.JSON_PROPERTY_NETWORK_IN,
  GraphWhereInput.JSON_PROPERTY_NETWORK_NOT,
  GraphWhereInput.JSON_PROPERTY_NETWORK_NOT_IN,
  GraphWhereInput.JSON_PROPERTY_NICS_EVERY,
  GraphWhereInput.JSON_PROPERTY_NICS_NONE,
  GraphWhereInput.JSON_PROPERTY_NICS_SOME,
  GraphWhereInput.JSON_PROPERTY_N_O_T,
  GraphWhereInput.JSON_PROPERTY_O_R,
  GraphWhereInput.JSON_PROPERTY_RESOURCE_TYPE,
  GraphWhereInput.JSON_PROPERTY_RESOURCE_TYPE_CONTAINS,
  GraphWhereInput.JSON_PROPERTY_RESOURCE_TYPE_ENDS_WITH,
  GraphWhereInput.JSON_PROPERTY_RESOURCE_TYPE_GT,
  GraphWhereInput.JSON_PROPERTY_RESOURCE_TYPE_GTE,
  GraphWhereInput.JSON_PROPERTY_RESOURCE_TYPE_IN,
  GraphWhereInput.JSON_PROPERTY_RESOURCE_TYPE_LT,
  GraphWhereInput.JSON_PROPERTY_RESOURCE_TYPE_LTE,
  GraphWhereInput.JSON_PROPERTY_RESOURCE_TYPE_NOT,
  GraphWhereInput.JSON_PROPERTY_RESOURCE_TYPE_NOT_CONTAINS,
  GraphWhereInput.JSON_PROPERTY_RESOURCE_TYPE_NOT_ENDS_WITH,
  GraphWhereInput.JSON_PROPERTY_RESOURCE_TYPE_NOT_IN,
  GraphWhereInput.JSON_PROPERTY_RESOURCE_TYPE_NOT_STARTS_WITH,
  GraphWhereInput.JSON_PROPERTY_RESOURCE_TYPE_STARTS_WITH,
  GraphWhereInput.JSON_PROPERTY_SERVICE,
  GraphWhereInput.JSON_PROPERTY_SERVICE_CONTAINS,
  GraphWhereInput.JSON_PROPERTY_SERVICE_ENDS_WITH,
  GraphWhereInput.JSON_PROPERTY_SERVICE_GT,
  GraphWhereInput.JSON_PROPERTY_SERVICE_GTE,
  GraphWhereInput.JSON_PROPERTY_SERVICE_IN,
  GraphWhereInput.JSON_PROPERTY_SERVICE_LT,
  GraphWhereInput.JSON_PROPERTY_SERVICE_LTE,
  GraphWhereInput.JSON_PROPERTY_SERVICE_NOT,
  GraphWhereInput.JSON_PROPERTY_SERVICE_NOT_CONTAINS,
  GraphWhereInput.JSON_PROPERTY_SERVICE_NOT_ENDS_WITH,
  GraphWhereInput.JSON_PROPERTY_SERVICE_NOT_IN,
  GraphWhereInput.JSON_PROPERTY_SERVICE_NOT_STARTS_WITH,
  GraphWhereInput.JSON_PROPERTY_SERVICE_STARTS_WITH,
  GraphWhereInput.JSON_PROPERTY_TITLE,
  GraphWhereInput.JSON_PROPERTY_TITLE_CONTAINS,
  GraphWhereInput.JSON_PROPERTY_TITLE_ENDS_WITH,
  GraphWhereInput.JSON_PROPERTY_TITLE_GT,
  GraphWhereInput.JSON_PROPERTY_TITLE_GTE,
  GraphWhereInput.JSON_PROPERTY_TITLE_IN,
  GraphWhereInput.JSON_PROPERTY_TITLE_LT,
  GraphWhereInput.JSON_PROPERTY_TITLE_LTE,
  GraphWhereInput.JSON_PROPERTY_TITLE_NOT,
  GraphWhereInput.JSON_PROPERTY_TITLE_NOT_CONTAINS,
  GraphWhereInput.JSON_PROPERTY_TITLE_NOT_ENDS_WITH,
  GraphWhereInput.JSON_PROPERTY_TITLE_NOT_IN,
  GraphWhereInput.JSON_PROPERTY_TITLE_NOT_STARTS_WITH,
  GraphWhereInput.JSON_PROPERTY_TITLE_STARTS_WITH,
  GraphWhereInput.JSON_PROPERTY_TYPE,
  GraphWhereInput.JSON_PROPERTY_TYPE_IN,
  GraphWhereInput.JSON_PROPERTY_TYPE_NOT,
  GraphWhereInput.JSON_PROPERTY_TYPE_NOT_IN,
  GraphWhereInput.JSON_PROPERTY_VIEW,
  GraphWhereInput.JSON_PROPERTY_VM_NICS_EVERY,
  GraphWhereInput.JSON_PROPERTY_VM_NICS_NONE,
  GraphWhereInput.JSON_PROPERTY_VM_NICS_SOME,
  GraphWhereInput.JSON_PROPERTY_VMS_EVERY,
  GraphWhereInput.JSON_PROPERTY_VMS_NONE,
  GraphWhereInput.JSON_PROPERTY_VMS_SOME,
  GraphWhereInput.JSON_PROPERTY_VM_VOLUMES_EVERY,
  GraphWhereInput.JSON_PROPERTY_VM_VOLUMES_NONE,
  GraphWhereInput.JSON_PROPERTY_VM_VOLUMES_SOME,
  GraphWhereInput.JSON_PROPERTY_WITNESSES_EVERY,
  GraphWhereInput.JSON_PROPERTY_WITNESSES_NONE,
  GraphWhereInput.JSON_PROPERTY_WITNESSES_SOME,
  GraphWhereInput.JSON_PROPERTY_ZONES_EVERY,
  GraphWhereInput.JSON_PROPERTY_ZONES_NONE,
  GraphWhereInput.JSON_PROPERTY_ZONES_SOME
})
@javax.annotation.processing.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2021-10-27T15:59:14.939791800+08:00[Asia/Shanghai]")
public class GraphWhereInput {
  public static final String JSON_PROPERTY_A_N_D = "AND";
  private JsonNullable<List<GraphWhereInput>> AND = JsonNullable.<List<GraphWhereInput>>undefined();

  public static final String JSON_PROPERTY_CLUSTER = "cluster";
  private JsonNullable<ClusterWhereInput> cluster = JsonNullable.<ClusterWhereInput>undefined();

  public static final String JSON_PROPERTY_DISKS_EVERY = "disks_every";
  private JsonNullable<DiskWhereInput> disksEvery = JsonNullable.<DiskWhereInput>undefined();

  public static final String JSON_PROPERTY_DISKS_NONE = "disks_none";
  private JsonNullable<DiskWhereInput> disksNone = JsonNullable.<DiskWhereInput>undefined();

  public static final String JSON_PROPERTY_DISKS_SOME = "disks_some";
  private JsonNullable<DiskWhereInput> disksSome = JsonNullable.<DiskWhereInput>undefined();

  public static final String JSON_PROPERTY_ENTITY_ASYNC_STATUS = "entityAsyncStatus";
  private JsonNullable<EntityAsyncStatus> entityAsyncStatus = JsonNullable.<EntityAsyncStatus>undefined();

  public static final String JSON_PROPERTY_ENTITY_ASYNC_STATUS_IN = "entityAsyncStatus_in";
  private JsonNullable<List<EntityAsyncStatus>> entityAsyncStatusIn = JsonNullable.<List<EntityAsyncStatus>>undefined();

  public static final String JSON_PROPERTY_ENTITY_ASYNC_STATUS_NOT = "entityAsyncStatus_not";
  private JsonNullable<EntityAsyncStatus> entityAsyncStatusNot = JsonNullable.<EntityAsyncStatus>undefined();

  public static final String JSON_PROPERTY_ENTITY_ASYNC_STATUS_NOT_IN = "entityAsyncStatus_not_in";
  private JsonNullable<List<EntityAsyncStatus>> entityAsyncStatusNotIn = JsonNullable.<List<EntityAsyncStatus>>undefined();

  public static final String JSON_PROPERTY_HOSTS_EVERY = "hosts_every";
  private JsonNullable<HostWhereInput> hostsEvery = JsonNullable.<HostWhereInput>undefined();

  public static final String JSON_PROPERTY_HOSTS_NONE = "hosts_none";
  private JsonNullable<HostWhereInput> hostsNone = JsonNullable.<HostWhereInput>undefined();

  public static final String JSON_PROPERTY_HOSTS_SOME = "hosts_some";
  private JsonNullable<HostWhereInput> hostsSome = JsonNullable.<HostWhereInput>undefined();

  public static final String JSON_PROPERTY_ID = "id";
  private JsonNullable<String> id = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_ID_CONTAINS = "id_contains";
  private JsonNullable<String> idContains = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_ID_ENDS_WITH = "id_ends_with";
  private JsonNullable<String> idEndsWith = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_ID_GT = "id_gt";
  private JsonNullable<String> idGt = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_ID_GTE = "id_gte";
  private JsonNullable<String> idGte = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_ID_IN = "id_in";
  private JsonNullable<List<String>> idIn = JsonNullable.<List<String>>undefined();

  public static final String JSON_PROPERTY_ID_LT = "id_lt";
  private JsonNullable<String> idLt = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_ID_LTE = "id_lte";
  private JsonNullable<String> idLte = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_ID_NOT = "id_not";
  private JsonNullable<String> idNot = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_ID_NOT_CONTAINS = "id_not_contains";
  private JsonNullable<String> idNotContains = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_ID_NOT_ENDS_WITH = "id_not_ends_with";
  private JsonNullable<String> idNotEndsWith = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_ID_NOT_IN = "id_not_in";
  private JsonNullable<List<String>> idNotIn = JsonNullable.<List<String>>undefined();

  public static final String JSON_PROPERTY_ID_NOT_STARTS_WITH = "id_not_starts_with";
  private JsonNullable<String> idNotStartsWith = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_ID_STARTS_WITH = "id_starts_with";
  private JsonNullable<String> idStartsWith = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_LOCAL_ID = "local_id";
  private JsonNullable<String> localId = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_LOCAL_ID_CONTAINS = "local_id_contains";
  private JsonNullable<String> localIdContains = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_LOCAL_ID_ENDS_WITH = "local_id_ends_with";
  private JsonNullable<String> localIdEndsWith = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_LOCAL_ID_GT = "local_id_gt";
  private JsonNullable<String> localIdGt = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_LOCAL_ID_GTE = "local_id_gte";
  private JsonNullable<String> localIdGte = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_LOCAL_ID_IN = "local_id_in";
  private JsonNullable<List<String>> localIdIn = JsonNullable.<List<String>>undefined();

  public static final String JSON_PROPERTY_LOCAL_ID_LT = "local_id_lt";
  private JsonNullable<String> localIdLt = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_LOCAL_ID_LTE = "local_id_lte";
  private JsonNullable<String> localIdLte = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_LOCAL_ID_NOT = "local_id_not";
  private JsonNullable<String> localIdNot = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_LOCAL_ID_NOT_CONTAINS = "local_id_not_contains";
  private JsonNullable<String> localIdNotContains = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_LOCAL_ID_NOT_ENDS_WITH = "local_id_not_ends_with";
  private JsonNullable<String> localIdNotEndsWith = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_LOCAL_ID_NOT_IN = "local_id_not_in";
  private JsonNullable<List<String>> localIdNotIn = JsonNullable.<List<String>>undefined();

  public static final String JSON_PROPERTY_LOCAL_ID_NOT_STARTS_WITH = "local_id_not_starts_with";
  private JsonNullable<String> localIdNotStartsWith = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_LOCAL_ID_STARTS_WITH = "local_id_starts_with";
  private JsonNullable<String> localIdStartsWith = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_LUNS_EVERY = "luns_every";
  private JsonNullable<IscsiLunWhereInput> lunsEvery = JsonNullable.<IscsiLunWhereInput>undefined();

  public static final String JSON_PROPERTY_LUNS_NONE = "luns_none";
  private JsonNullable<IscsiLunWhereInput> lunsNone = JsonNullable.<IscsiLunWhereInput>undefined();

  public static final String JSON_PROPERTY_LUNS_SOME = "luns_some";
  private JsonNullable<IscsiLunWhereInput> lunsSome = JsonNullable.<IscsiLunWhereInput>undefined();

  public static final String JSON_PROPERTY_METRIC_COUNT = "metric_count";
  private JsonNullable<Double> metricCount = JsonNullable.<Double>undefined();

  public static final String JSON_PROPERTY_METRIC_COUNT_GT = "metric_count_gt";
  private JsonNullable<Double> metricCountGt = JsonNullable.<Double>undefined();

  public static final String JSON_PROPERTY_METRIC_COUNT_GTE = "metric_count_gte";
  private JsonNullable<Double> metricCountGte = JsonNullable.<Double>undefined();

  public static final String JSON_PROPERTY_METRIC_COUNT_IN = "metric_count_in";
  private JsonNullable<List<Double>> metricCountIn = JsonNullable.<List<Double>>undefined();

  public static final String JSON_PROPERTY_METRIC_COUNT_LT = "metric_count_lt";
  private JsonNullable<Double> metricCountLt = JsonNullable.<Double>undefined();

  public static final String JSON_PROPERTY_METRIC_COUNT_LTE = "metric_count_lte";
  private JsonNullable<Double> metricCountLte = JsonNullable.<Double>undefined();

  public static final String JSON_PROPERTY_METRIC_COUNT_NOT = "metric_count_not";
  private JsonNullable<Double> metricCountNot = JsonNullable.<Double>undefined();

  public static final String JSON_PROPERTY_METRIC_COUNT_NOT_IN = "metric_count_not_in";
  private JsonNullable<List<Double>> metricCountNotIn = JsonNullable.<List<Double>>undefined();

  public static final String JSON_PROPERTY_METRIC_NAME = "metric_name";
  private JsonNullable<String> metricName = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_METRIC_NAME_CONTAINS = "metric_name_contains";
  private JsonNullable<String> metricNameContains = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_METRIC_NAME_ENDS_WITH = "metric_name_ends_with";
  private JsonNullable<String> metricNameEndsWith = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_METRIC_NAME_GT = "metric_name_gt";
  private JsonNullable<String> metricNameGt = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_METRIC_NAME_GTE = "metric_name_gte";
  private JsonNullable<String> metricNameGte = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_METRIC_NAME_IN = "metric_name_in";
  private JsonNullable<List<String>> metricNameIn = JsonNullable.<List<String>>undefined();

  public static final String JSON_PROPERTY_METRIC_NAME_LT = "metric_name_lt";
  private JsonNullable<String> metricNameLt = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_METRIC_NAME_LTE = "metric_name_lte";
  private JsonNullable<String> metricNameLte = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_METRIC_NAME_NOT = "metric_name_not";
  private JsonNullable<String> metricNameNot = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_METRIC_NAME_NOT_CONTAINS = "metric_name_not_contains";
  private JsonNullable<String> metricNameNotContains = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_METRIC_NAME_NOT_ENDS_WITH = "metric_name_not_ends_with";
  private JsonNullable<String> metricNameNotEndsWith = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_METRIC_NAME_NOT_IN = "metric_name_not_in";
  private JsonNullable<List<String>> metricNameNotIn = JsonNullable.<List<String>>undefined();

  public static final String JSON_PROPERTY_METRIC_NAME_NOT_STARTS_WITH = "metric_name_not_starts_with";
  private JsonNullable<String> metricNameNotStartsWith = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_METRIC_NAME_STARTS_WITH = "metric_name_starts_with";
  private JsonNullable<String> metricNameStartsWith = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_METRIC_TYPE = "metric_type";
  private JsonNullable<MetricType> metricType = JsonNullable.<MetricType>undefined();

  public static final String JSON_PROPERTY_METRIC_TYPE_IN = "metric_type_in";
  private JsonNullable<List<MetricType>> metricTypeIn = JsonNullable.<List<MetricType>>undefined();

  public static final String JSON_PROPERTY_METRIC_TYPE_NOT = "metric_type_not";
  private JsonNullable<MetricType> metricTypeNot = JsonNullable.<MetricType>undefined();

  public static final String JSON_PROPERTY_METRIC_TYPE_NOT_IN = "metric_type_not_in";
  private JsonNullable<List<MetricType>> metricTypeNotIn = JsonNullable.<List<MetricType>>undefined();

  public static final String JSON_PROPERTY_NAMESPACES_EVERY = "namespaces_every";
  private JsonNullable<NvmfNamespaceWhereInput> namespacesEvery = JsonNullable.<NvmfNamespaceWhereInput>undefined();

  public static final String JSON_PROPERTY_NAMESPACES_NONE = "namespaces_none";
  private JsonNullable<NvmfNamespaceWhereInput> namespacesNone = JsonNullable.<NvmfNamespaceWhereInput>undefined();

  public static final String JSON_PROPERTY_NAMESPACES_SOME = "namespaces_some";
  private JsonNullable<NvmfNamespaceWhereInput> namespacesSome = JsonNullable.<NvmfNamespaceWhereInput>undefined();

  public static final String JSON_PROPERTY_NETWORK = "network";
  private JsonNullable<NetworkType> network = JsonNullable.<NetworkType>undefined();

  public static final String JSON_PROPERTY_NETWORK_IN = "network_in";
  private JsonNullable<List<NetworkType>> networkIn = JsonNullable.<List<NetworkType>>undefined();

  public static final String JSON_PROPERTY_NETWORK_NOT = "network_not";
  private JsonNullable<NetworkType> networkNot = JsonNullable.<NetworkType>undefined();

  public static final String JSON_PROPERTY_NETWORK_NOT_IN = "network_not_in";
  private JsonNullable<List<NetworkType>> networkNotIn = JsonNullable.<List<NetworkType>>undefined();

  public static final String JSON_PROPERTY_NICS_EVERY = "nics_every";
  private JsonNullable<NicWhereInput> nicsEvery = JsonNullable.<NicWhereInput>undefined();

  public static final String JSON_PROPERTY_NICS_NONE = "nics_none";
  private JsonNullable<NicWhereInput> nicsNone = JsonNullable.<NicWhereInput>undefined();

  public static final String JSON_PROPERTY_NICS_SOME = "nics_some";
  private JsonNullable<NicWhereInput> nicsSome = JsonNullable.<NicWhereInput>undefined();

  public static final String JSON_PROPERTY_N_O_T = "NOT";
  private JsonNullable<List<GraphWhereInput>> NOT = JsonNullable.<List<GraphWhereInput>>undefined();

  public static final String JSON_PROPERTY_O_R = "OR";
  private JsonNullable<List<GraphWhereInput>> OR = JsonNullable.<List<GraphWhereInput>>undefined();

  public static final String JSON_PROPERTY_RESOURCE_TYPE = "resource_type";
  private JsonNullable<String> resourceType = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_RESOURCE_TYPE_CONTAINS = "resource_type_contains";
  private JsonNullable<String> resourceTypeContains = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_RESOURCE_TYPE_ENDS_WITH = "resource_type_ends_with";
  private JsonNullable<String> resourceTypeEndsWith = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_RESOURCE_TYPE_GT = "resource_type_gt";
  private JsonNullable<String> resourceTypeGt = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_RESOURCE_TYPE_GTE = "resource_type_gte";
  private JsonNullable<String> resourceTypeGte = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_RESOURCE_TYPE_IN = "resource_type_in";
  private JsonNullable<List<String>> resourceTypeIn = JsonNullable.<List<String>>undefined();

  public static final String JSON_PROPERTY_RESOURCE_TYPE_LT = "resource_type_lt";
  private JsonNullable<String> resourceTypeLt = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_RESOURCE_TYPE_LTE = "resource_type_lte";
  private JsonNullable<String> resourceTypeLte = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_RESOURCE_TYPE_NOT = "resource_type_not";
  private JsonNullable<String> resourceTypeNot = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_RESOURCE_TYPE_NOT_CONTAINS = "resource_type_not_contains";
  private JsonNullable<String> resourceTypeNotContains = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_RESOURCE_TYPE_NOT_ENDS_WITH = "resource_type_not_ends_with";
  private JsonNullable<String> resourceTypeNotEndsWith = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_RESOURCE_TYPE_NOT_IN = "resource_type_not_in";
  private JsonNullable<List<String>> resourceTypeNotIn = JsonNullable.<List<String>>undefined();

  public static final String JSON_PROPERTY_RESOURCE_TYPE_NOT_STARTS_WITH = "resource_type_not_starts_with";
  private JsonNullable<String> resourceTypeNotStartsWith = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_RESOURCE_TYPE_STARTS_WITH = "resource_type_starts_with";
  private JsonNullable<String> resourceTypeStartsWith = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_SERVICE = "service";
  private JsonNullable<String> service = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_SERVICE_CONTAINS = "service_contains";
  private JsonNullable<String> serviceContains = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_SERVICE_ENDS_WITH = "service_ends_with";
  private JsonNullable<String> serviceEndsWith = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_SERVICE_GT = "service_gt";
  private JsonNullable<String> serviceGt = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_SERVICE_GTE = "service_gte";
  private JsonNullable<String> serviceGte = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_SERVICE_IN = "service_in";
  private JsonNullable<List<String>> serviceIn = JsonNullable.<List<String>>undefined();

  public static final String JSON_PROPERTY_SERVICE_LT = "service_lt";
  private JsonNullable<String> serviceLt = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_SERVICE_LTE = "service_lte";
  private JsonNullable<String> serviceLte = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_SERVICE_NOT = "service_not";
  private JsonNullable<String> serviceNot = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_SERVICE_NOT_CONTAINS = "service_not_contains";
  private JsonNullable<String> serviceNotContains = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_SERVICE_NOT_ENDS_WITH = "service_not_ends_with";
  private JsonNullable<String> serviceNotEndsWith = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_SERVICE_NOT_IN = "service_not_in";
  private JsonNullable<List<String>> serviceNotIn = JsonNullable.<List<String>>undefined();

  public static final String JSON_PROPERTY_SERVICE_NOT_STARTS_WITH = "service_not_starts_with";
  private JsonNullable<String> serviceNotStartsWith = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_SERVICE_STARTS_WITH = "service_starts_with";
  private JsonNullable<String> serviceStartsWith = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_TITLE = "title";
  private JsonNullable<String> title = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_TITLE_CONTAINS = "title_contains";
  private JsonNullable<String> titleContains = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_TITLE_ENDS_WITH = "title_ends_with";
  private JsonNullable<String> titleEndsWith = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_TITLE_GT = "title_gt";
  private JsonNullable<String> titleGt = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_TITLE_GTE = "title_gte";
  private JsonNullable<String> titleGte = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_TITLE_IN = "title_in";
  private JsonNullable<List<String>> titleIn = JsonNullable.<List<String>>undefined();

  public static final String JSON_PROPERTY_TITLE_LT = "title_lt";
  private JsonNullable<String> titleLt = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_TITLE_LTE = "title_lte";
  private JsonNullable<String> titleLte = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_TITLE_NOT = "title_not";
  private JsonNullable<String> titleNot = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_TITLE_NOT_CONTAINS = "title_not_contains";
  private JsonNullable<String> titleNotContains = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_TITLE_NOT_ENDS_WITH = "title_not_ends_with";
  private JsonNullable<String> titleNotEndsWith = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_TITLE_NOT_IN = "title_not_in";
  private JsonNullable<List<String>> titleNotIn = JsonNullable.<List<String>>undefined();

  public static final String JSON_PROPERTY_TITLE_NOT_STARTS_WITH = "title_not_starts_with";
  private JsonNullable<String> titleNotStartsWith = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_TITLE_STARTS_WITH = "title_starts_with";
  private JsonNullable<String> titleStartsWith = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_TYPE = "type";
  private JsonNullable<GraphType> type = JsonNullable.<GraphType>undefined();

  public static final String JSON_PROPERTY_TYPE_IN = "type_in";
  private JsonNullable<List<GraphType>> typeIn = JsonNullable.<List<GraphType>>undefined();

  public static final String JSON_PROPERTY_TYPE_NOT = "type_not";
  private JsonNullable<GraphType> typeNot = JsonNullable.<GraphType>undefined();

  public static final String JSON_PROPERTY_TYPE_NOT_IN = "type_not_in";
  private JsonNullable<List<GraphType>> typeNotIn = JsonNullable.<List<GraphType>>undefined();

  public static final String JSON_PROPERTY_VIEW = "view";
  private JsonNullable<ViewWhereInput> view = JsonNullable.<ViewWhereInput>undefined();

  public static final String JSON_PROPERTY_VM_NICS_EVERY = "vmNics_every";
  private JsonNullable<VmNicWhereInput> vmNicsEvery = JsonNullable.<VmNicWhereInput>undefined();

  public static final String JSON_PROPERTY_VM_NICS_NONE = "vmNics_none";
  private JsonNullable<VmNicWhereInput> vmNicsNone = JsonNullable.<VmNicWhereInput>undefined();

  public static final String JSON_PROPERTY_VM_NICS_SOME = "vmNics_some";
  private JsonNullable<VmNicWhereInput> vmNicsSome = JsonNullable.<VmNicWhereInput>undefined();

  public static final String JSON_PROPERTY_VMS_EVERY = "vms_every";
  private JsonNullable<VmWhereInput> vmsEvery = JsonNullable.<VmWhereInput>undefined();

  public static final String JSON_PROPERTY_VMS_NONE = "vms_none";
  private JsonNullable<VmWhereInput> vmsNone = JsonNullable.<VmWhereInput>undefined();

  public static final String JSON_PROPERTY_VMS_SOME = "vms_some";
  private JsonNullable<VmWhereInput> vmsSome = JsonNullable.<VmWhereInput>undefined();

  public static final String JSON_PROPERTY_VM_VOLUMES_EVERY = "vmVolumes_every";
  private JsonNullable<VmVolumeWhereInput> vmVolumesEvery = JsonNullable.<VmVolumeWhereInput>undefined();

  public static final String JSON_PROPERTY_VM_VOLUMES_NONE = "vmVolumes_none";
  private JsonNullable<VmVolumeWhereInput> vmVolumesNone = JsonNullable.<VmVolumeWhereInput>undefined();

  public static final String JSON_PROPERTY_VM_VOLUMES_SOME = "vmVolumes_some";
  private JsonNullable<VmVolumeWhereInput> vmVolumesSome = JsonNullable.<VmVolumeWhereInput>undefined();

  public static final String JSON_PROPERTY_WITNESSES_EVERY = "witnesses_every";
  private JsonNullable<WitnessWhereInput> witnessesEvery = JsonNullable.<WitnessWhereInput>undefined();

  public static final String JSON_PROPERTY_WITNESSES_NONE = "witnesses_none";
  private JsonNullable<WitnessWhereInput> witnessesNone = JsonNullable.<WitnessWhereInput>undefined();

  public static final String JSON_PROPERTY_WITNESSES_SOME = "witnesses_some";
  private JsonNullable<WitnessWhereInput> witnessesSome = JsonNullable.<WitnessWhereInput>undefined();

  public static final String JSON_PROPERTY_ZONES_EVERY = "zones_every";
  private JsonNullable<ZoneWhereInput> zonesEvery = JsonNullable.<ZoneWhereInput>undefined();

  public static final String JSON_PROPERTY_ZONES_NONE = "zones_none";
  private JsonNullable<ZoneWhereInput> zonesNone = JsonNullable.<ZoneWhereInput>undefined();

  public static final String JSON_PROPERTY_ZONES_SOME = "zones_some";
  private JsonNullable<ZoneWhereInput> zonesSome = JsonNullable.<ZoneWhereInput>undefined();


  public GraphWhereInput AND(List<GraphWhereInput> AND) {
    this.AND = JsonNullable.<List<GraphWhereInput>>of(AND);
    return this;
  }

  public GraphWhereInput addANDItem(GraphWhereInput ANDItem) {
    if (this.AND == null || !this.AND.isPresent()) {
      this.AND = JsonNullable.<List<GraphWhereInput>>of(new ArrayList<>());
    }
    try {
      this.AND.get().add(ANDItem);
    } catch (java.util.NoSuchElementException e) {
      // this can never happen, as we make sure above that the value is present
    }
    return this;
  }

   /**
   * Get AND
   * @return AND
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public List<GraphWhereInput> getAND() {
        return AND.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_A_N_D)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<List<GraphWhereInput>> getAND_JsonNullable() {
    return AND;
  }
  
  @JsonProperty(JSON_PROPERTY_A_N_D)
  public void setAND_JsonNullable(JsonNullable<List<GraphWhereInput>> AND) {
    this.AND = AND;
  }

  public void setAND(List<GraphWhereInput> AND) {
    this.AND = JsonNullable.<List<GraphWhereInput>>of(AND);
  }


  public GraphWhereInput cluster(ClusterWhereInput cluster) {
    this.cluster = JsonNullable.<ClusterWhereInput>of(cluster);
    return this;
  }

   /**
   * Get cluster
   * @return cluster
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public ClusterWhereInput getCluster() {
        return cluster.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_CLUSTER)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<ClusterWhereInput> getCluster_JsonNullable() {
    return cluster;
  }
  
  @JsonProperty(JSON_PROPERTY_CLUSTER)
  public void setCluster_JsonNullable(JsonNullable<ClusterWhereInput> cluster) {
    this.cluster = cluster;
  }

  public void setCluster(ClusterWhereInput cluster) {
    this.cluster = JsonNullable.<ClusterWhereInput>of(cluster);
  }


  public GraphWhereInput disksEvery(DiskWhereInput disksEvery) {
    this.disksEvery = JsonNullable.<DiskWhereInput>of(disksEvery);
    return this;
  }

   /**
   * Get disksEvery
   * @return disksEvery
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public DiskWhereInput getDisksEvery() {
        return disksEvery.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_DISKS_EVERY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<DiskWhereInput> getDisksEvery_JsonNullable() {
    return disksEvery;
  }
  
  @JsonProperty(JSON_PROPERTY_DISKS_EVERY)
  public void setDisksEvery_JsonNullable(JsonNullable<DiskWhereInput> disksEvery) {
    this.disksEvery = disksEvery;
  }

  public void setDisksEvery(DiskWhereInput disksEvery) {
    this.disksEvery = JsonNullable.<DiskWhereInput>of(disksEvery);
  }


  public GraphWhereInput disksNone(DiskWhereInput disksNone) {
    this.disksNone = JsonNullable.<DiskWhereInput>of(disksNone);
    return this;
  }

   /**
   * Get disksNone
   * @return disksNone
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public DiskWhereInput getDisksNone() {
        return disksNone.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_DISKS_NONE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<DiskWhereInput> getDisksNone_JsonNullable() {
    return disksNone;
  }
  
  @JsonProperty(JSON_PROPERTY_DISKS_NONE)
  public void setDisksNone_JsonNullable(JsonNullable<DiskWhereInput> disksNone) {
    this.disksNone = disksNone;
  }

  public void setDisksNone(DiskWhereInput disksNone) {
    this.disksNone = JsonNullable.<DiskWhereInput>of(disksNone);
  }


  public GraphWhereInput disksSome(DiskWhereInput disksSome) {
    this.disksSome = JsonNullable.<DiskWhereInput>of(disksSome);
    return this;
  }

   /**
   * Get disksSome
   * @return disksSome
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public DiskWhereInput getDisksSome() {
        return disksSome.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_DISKS_SOME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<DiskWhereInput> getDisksSome_JsonNullable() {
    return disksSome;
  }
  
  @JsonProperty(JSON_PROPERTY_DISKS_SOME)
  public void setDisksSome_JsonNullable(JsonNullable<DiskWhereInput> disksSome) {
    this.disksSome = disksSome;
  }

  public void setDisksSome(DiskWhereInput disksSome) {
    this.disksSome = JsonNullable.<DiskWhereInput>of(disksSome);
  }


  public GraphWhereInput entityAsyncStatus(EntityAsyncStatus entityAsyncStatus) {
    this.entityAsyncStatus = JsonNullable.<EntityAsyncStatus>of(entityAsyncStatus);
    return this;
  }

   /**
   * Get entityAsyncStatus
   * @return entityAsyncStatus
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public EntityAsyncStatus getEntityAsyncStatus() {
        return entityAsyncStatus.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_ENTITY_ASYNC_STATUS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<EntityAsyncStatus> getEntityAsyncStatus_JsonNullable() {
    return entityAsyncStatus;
  }
  
  @JsonProperty(JSON_PROPERTY_ENTITY_ASYNC_STATUS)
  public void setEntityAsyncStatus_JsonNullable(JsonNullable<EntityAsyncStatus> entityAsyncStatus) {
    this.entityAsyncStatus = entityAsyncStatus;
  }

  public void setEntityAsyncStatus(EntityAsyncStatus entityAsyncStatus) {
    this.entityAsyncStatus = JsonNullable.<EntityAsyncStatus>of(entityAsyncStatus);
  }


  public GraphWhereInput entityAsyncStatusIn(List<EntityAsyncStatus> entityAsyncStatusIn) {
    this.entityAsyncStatusIn = JsonNullable.<List<EntityAsyncStatus>>of(entityAsyncStatusIn);
    return this;
  }

  public GraphWhereInput addEntityAsyncStatusInItem(EntityAsyncStatus entityAsyncStatusInItem) {
    if (this.entityAsyncStatusIn == null || !this.entityAsyncStatusIn.isPresent()) {
      this.entityAsyncStatusIn = JsonNullable.<List<EntityAsyncStatus>>of(new ArrayList<>());
    }
    try {
      this.entityAsyncStatusIn.get().add(entityAsyncStatusInItem);
    } catch (java.util.NoSuchElementException e) {
      // this can never happen, as we make sure above that the value is present
    }
    return this;
  }

   /**
   * Get entityAsyncStatusIn
   * @return entityAsyncStatusIn
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public List<EntityAsyncStatus> getEntityAsyncStatusIn() {
        return entityAsyncStatusIn.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_ENTITY_ASYNC_STATUS_IN)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<List<EntityAsyncStatus>> getEntityAsyncStatusIn_JsonNullable() {
    return entityAsyncStatusIn;
  }
  
  @JsonProperty(JSON_PROPERTY_ENTITY_ASYNC_STATUS_IN)
  public void setEntityAsyncStatusIn_JsonNullable(JsonNullable<List<EntityAsyncStatus>> entityAsyncStatusIn) {
    this.entityAsyncStatusIn = entityAsyncStatusIn;
  }

  public void setEntityAsyncStatusIn(List<EntityAsyncStatus> entityAsyncStatusIn) {
    this.entityAsyncStatusIn = JsonNullable.<List<EntityAsyncStatus>>of(entityAsyncStatusIn);
  }


  public GraphWhereInput entityAsyncStatusNot(EntityAsyncStatus entityAsyncStatusNot) {
    this.entityAsyncStatusNot = JsonNullable.<EntityAsyncStatus>of(entityAsyncStatusNot);
    return this;
  }

   /**
   * Get entityAsyncStatusNot
   * @return entityAsyncStatusNot
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public EntityAsyncStatus getEntityAsyncStatusNot() {
        return entityAsyncStatusNot.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_ENTITY_ASYNC_STATUS_NOT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<EntityAsyncStatus> getEntityAsyncStatusNot_JsonNullable() {
    return entityAsyncStatusNot;
  }
  
  @JsonProperty(JSON_PROPERTY_ENTITY_ASYNC_STATUS_NOT)
  public void setEntityAsyncStatusNot_JsonNullable(JsonNullable<EntityAsyncStatus> entityAsyncStatusNot) {
    this.entityAsyncStatusNot = entityAsyncStatusNot;
  }

  public void setEntityAsyncStatusNot(EntityAsyncStatus entityAsyncStatusNot) {
    this.entityAsyncStatusNot = JsonNullable.<EntityAsyncStatus>of(entityAsyncStatusNot);
  }


  public GraphWhereInput entityAsyncStatusNotIn(List<EntityAsyncStatus> entityAsyncStatusNotIn) {
    this.entityAsyncStatusNotIn = JsonNullable.<List<EntityAsyncStatus>>of(entityAsyncStatusNotIn);
    return this;
  }

  public GraphWhereInput addEntityAsyncStatusNotInItem(EntityAsyncStatus entityAsyncStatusNotInItem) {
    if (this.entityAsyncStatusNotIn == null || !this.entityAsyncStatusNotIn.isPresent()) {
      this.entityAsyncStatusNotIn = JsonNullable.<List<EntityAsyncStatus>>of(new ArrayList<>());
    }
    try {
      this.entityAsyncStatusNotIn.get().add(entityAsyncStatusNotInItem);
    } catch (java.util.NoSuchElementException e) {
      // this can never happen, as we make sure above that the value is present
    }
    return this;
  }

   /**
   * Get entityAsyncStatusNotIn
   * @return entityAsyncStatusNotIn
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public List<EntityAsyncStatus> getEntityAsyncStatusNotIn() {
        return entityAsyncStatusNotIn.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_ENTITY_ASYNC_STATUS_NOT_IN)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<List<EntityAsyncStatus>> getEntityAsyncStatusNotIn_JsonNullable() {
    return entityAsyncStatusNotIn;
  }
  
  @JsonProperty(JSON_PROPERTY_ENTITY_ASYNC_STATUS_NOT_IN)
  public void setEntityAsyncStatusNotIn_JsonNullable(JsonNullable<List<EntityAsyncStatus>> entityAsyncStatusNotIn) {
    this.entityAsyncStatusNotIn = entityAsyncStatusNotIn;
  }

  public void setEntityAsyncStatusNotIn(List<EntityAsyncStatus> entityAsyncStatusNotIn) {
    this.entityAsyncStatusNotIn = JsonNullable.<List<EntityAsyncStatus>>of(entityAsyncStatusNotIn);
  }


  public GraphWhereInput hostsEvery(HostWhereInput hostsEvery) {
    this.hostsEvery = JsonNullable.<HostWhereInput>of(hostsEvery);
    return this;
  }

   /**
   * Get hostsEvery
   * @return hostsEvery
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public HostWhereInput getHostsEvery() {
        return hostsEvery.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_HOSTS_EVERY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<HostWhereInput> getHostsEvery_JsonNullable() {
    return hostsEvery;
  }
  
  @JsonProperty(JSON_PROPERTY_HOSTS_EVERY)
  public void setHostsEvery_JsonNullable(JsonNullable<HostWhereInput> hostsEvery) {
    this.hostsEvery = hostsEvery;
  }

  public void setHostsEvery(HostWhereInput hostsEvery) {
    this.hostsEvery = JsonNullable.<HostWhereInput>of(hostsEvery);
  }


  public GraphWhereInput hostsNone(HostWhereInput hostsNone) {
    this.hostsNone = JsonNullable.<HostWhereInput>of(hostsNone);
    return this;
  }

   /**
   * Get hostsNone
   * @return hostsNone
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public HostWhereInput getHostsNone() {
        return hostsNone.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_HOSTS_NONE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<HostWhereInput> getHostsNone_JsonNullable() {
    return hostsNone;
  }
  
  @JsonProperty(JSON_PROPERTY_HOSTS_NONE)
  public void setHostsNone_JsonNullable(JsonNullable<HostWhereInput> hostsNone) {
    this.hostsNone = hostsNone;
  }

  public void setHostsNone(HostWhereInput hostsNone) {
    this.hostsNone = JsonNullable.<HostWhereInput>of(hostsNone);
  }


  public GraphWhereInput hostsSome(HostWhereInput hostsSome) {
    this.hostsSome = JsonNullable.<HostWhereInput>of(hostsSome);
    return this;
  }

   /**
   * Get hostsSome
   * @return hostsSome
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public HostWhereInput getHostsSome() {
        return hostsSome.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_HOSTS_SOME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<HostWhereInput> getHostsSome_JsonNullable() {
    return hostsSome;
  }
  
  @JsonProperty(JSON_PROPERTY_HOSTS_SOME)
  public void setHostsSome_JsonNullable(JsonNullable<HostWhereInput> hostsSome) {
    this.hostsSome = hostsSome;
  }

  public void setHostsSome(HostWhereInput hostsSome) {
    this.hostsSome = JsonNullable.<HostWhereInput>of(hostsSome);
  }


  public GraphWhereInput id(String id) {
    this.id = JsonNullable.<String>of(id);
    return this;
  }

   /**
   * Get id
   * @return id
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getId() {
        return id.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getId_JsonNullable() {
    return id;
  }
  
  @JsonProperty(JSON_PROPERTY_ID)
  public void setId_JsonNullable(JsonNullable<String> id) {
    this.id = id;
  }

  public void setId(String id) {
    this.id = JsonNullable.<String>of(id);
  }


  public GraphWhereInput idContains(String idContains) {
    this.idContains = JsonNullable.<String>of(idContains);
    return this;
  }

   /**
   * Get idContains
   * @return idContains
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getIdContains() {
        return idContains.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_ID_CONTAINS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getIdContains_JsonNullable() {
    return idContains;
  }
  
  @JsonProperty(JSON_PROPERTY_ID_CONTAINS)
  public void setIdContains_JsonNullable(JsonNullable<String> idContains) {
    this.idContains = idContains;
  }

  public void setIdContains(String idContains) {
    this.idContains = JsonNullable.<String>of(idContains);
  }


  public GraphWhereInput idEndsWith(String idEndsWith) {
    this.idEndsWith = JsonNullable.<String>of(idEndsWith);
    return this;
  }

   /**
   * Get idEndsWith
   * @return idEndsWith
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getIdEndsWith() {
        return idEndsWith.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_ID_ENDS_WITH)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getIdEndsWith_JsonNullable() {
    return idEndsWith;
  }
  
  @JsonProperty(JSON_PROPERTY_ID_ENDS_WITH)
  public void setIdEndsWith_JsonNullable(JsonNullable<String> idEndsWith) {
    this.idEndsWith = idEndsWith;
  }

  public void setIdEndsWith(String idEndsWith) {
    this.idEndsWith = JsonNullable.<String>of(idEndsWith);
  }


  public GraphWhereInput idGt(String idGt) {
    this.idGt = JsonNullable.<String>of(idGt);
    return this;
  }

   /**
   * Get idGt
   * @return idGt
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getIdGt() {
        return idGt.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_ID_GT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getIdGt_JsonNullable() {
    return idGt;
  }
  
  @JsonProperty(JSON_PROPERTY_ID_GT)
  public void setIdGt_JsonNullable(JsonNullable<String> idGt) {
    this.idGt = idGt;
  }

  public void setIdGt(String idGt) {
    this.idGt = JsonNullable.<String>of(idGt);
  }


  public GraphWhereInput idGte(String idGte) {
    this.idGte = JsonNullable.<String>of(idGte);
    return this;
  }

   /**
   * Get idGte
   * @return idGte
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getIdGte() {
        return idGte.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_ID_GTE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getIdGte_JsonNullable() {
    return idGte;
  }
  
  @JsonProperty(JSON_PROPERTY_ID_GTE)
  public void setIdGte_JsonNullable(JsonNullable<String> idGte) {
    this.idGte = idGte;
  }

  public void setIdGte(String idGte) {
    this.idGte = JsonNullable.<String>of(idGte);
  }


  public GraphWhereInput idIn(List<String> idIn) {
    this.idIn = JsonNullable.<List<String>>of(idIn);
    return this;
  }

  public GraphWhereInput addIdInItem(String idInItem) {
    if (this.idIn == null || !this.idIn.isPresent()) {
      this.idIn = JsonNullable.<List<String>>of(new ArrayList<>());
    }
    try {
      this.idIn.get().add(idInItem);
    } catch (java.util.NoSuchElementException e) {
      // this can never happen, as we make sure above that the value is present
    }
    return this;
  }

   /**
   * Get idIn
   * @return idIn
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public List<String> getIdIn() {
        return idIn.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_ID_IN)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<List<String>> getIdIn_JsonNullable() {
    return idIn;
  }
  
  @JsonProperty(JSON_PROPERTY_ID_IN)
  public void setIdIn_JsonNullable(JsonNullable<List<String>> idIn) {
    this.idIn = idIn;
  }

  public void setIdIn(List<String> idIn) {
    this.idIn = JsonNullable.<List<String>>of(idIn);
  }


  public GraphWhereInput idLt(String idLt) {
    this.idLt = JsonNullable.<String>of(idLt);
    return this;
  }

   /**
   * Get idLt
   * @return idLt
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getIdLt() {
        return idLt.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_ID_LT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getIdLt_JsonNullable() {
    return idLt;
  }
  
  @JsonProperty(JSON_PROPERTY_ID_LT)
  public void setIdLt_JsonNullable(JsonNullable<String> idLt) {
    this.idLt = idLt;
  }

  public void setIdLt(String idLt) {
    this.idLt = JsonNullable.<String>of(idLt);
  }


  public GraphWhereInput idLte(String idLte) {
    this.idLte = JsonNullable.<String>of(idLte);
    return this;
  }

   /**
   * Get idLte
   * @return idLte
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getIdLte() {
        return idLte.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_ID_LTE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getIdLte_JsonNullable() {
    return idLte;
  }
  
  @JsonProperty(JSON_PROPERTY_ID_LTE)
  public void setIdLte_JsonNullable(JsonNullable<String> idLte) {
    this.idLte = idLte;
  }

  public void setIdLte(String idLte) {
    this.idLte = JsonNullable.<String>of(idLte);
  }


  public GraphWhereInput idNot(String idNot) {
    this.idNot = JsonNullable.<String>of(idNot);
    return this;
  }

   /**
   * Get idNot
   * @return idNot
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getIdNot() {
        return idNot.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_ID_NOT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getIdNot_JsonNullable() {
    return idNot;
  }
  
  @JsonProperty(JSON_PROPERTY_ID_NOT)
  public void setIdNot_JsonNullable(JsonNullable<String> idNot) {
    this.idNot = idNot;
  }

  public void setIdNot(String idNot) {
    this.idNot = JsonNullable.<String>of(idNot);
  }


  public GraphWhereInput idNotContains(String idNotContains) {
    this.idNotContains = JsonNullable.<String>of(idNotContains);
    return this;
  }

   /**
   * Get idNotContains
   * @return idNotContains
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getIdNotContains() {
        return idNotContains.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_ID_NOT_CONTAINS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getIdNotContains_JsonNullable() {
    return idNotContains;
  }
  
  @JsonProperty(JSON_PROPERTY_ID_NOT_CONTAINS)
  public void setIdNotContains_JsonNullable(JsonNullable<String> idNotContains) {
    this.idNotContains = idNotContains;
  }

  public void setIdNotContains(String idNotContains) {
    this.idNotContains = JsonNullable.<String>of(idNotContains);
  }


  public GraphWhereInput idNotEndsWith(String idNotEndsWith) {
    this.idNotEndsWith = JsonNullable.<String>of(idNotEndsWith);
    return this;
  }

   /**
   * Get idNotEndsWith
   * @return idNotEndsWith
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getIdNotEndsWith() {
        return idNotEndsWith.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_ID_NOT_ENDS_WITH)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getIdNotEndsWith_JsonNullable() {
    return idNotEndsWith;
  }
  
  @JsonProperty(JSON_PROPERTY_ID_NOT_ENDS_WITH)
  public void setIdNotEndsWith_JsonNullable(JsonNullable<String> idNotEndsWith) {
    this.idNotEndsWith = idNotEndsWith;
  }

  public void setIdNotEndsWith(String idNotEndsWith) {
    this.idNotEndsWith = JsonNullable.<String>of(idNotEndsWith);
  }


  public GraphWhereInput idNotIn(List<String> idNotIn) {
    this.idNotIn = JsonNullable.<List<String>>of(idNotIn);
    return this;
  }

  public GraphWhereInput addIdNotInItem(String idNotInItem) {
    if (this.idNotIn == null || !this.idNotIn.isPresent()) {
      this.idNotIn = JsonNullable.<List<String>>of(new ArrayList<>());
    }
    try {
      this.idNotIn.get().add(idNotInItem);
    } catch (java.util.NoSuchElementException e) {
      // this can never happen, as we make sure above that the value is present
    }
    return this;
  }

   /**
   * Get idNotIn
   * @return idNotIn
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public List<String> getIdNotIn() {
        return idNotIn.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_ID_NOT_IN)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<List<String>> getIdNotIn_JsonNullable() {
    return idNotIn;
  }
  
  @JsonProperty(JSON_PROPERTY_ID_NOT_IN)
  public void setIdNotIn_JsonNullable(JsonNullable<List<String>> idNotIn) {
    this.idNotIn = idNotIn;
  }

  public void setIdNotIn(List<String> idNotIn) {
    this.idNotIn = JsonNullable.<List<String>>of(idNotIn);
  }


  public GraphWhereInput idNotStartsWith(String idNotStartsWith) {
    this.idNotStartsWith = JsonNullable.<String>of(idNotStartsWith);
    return this;
  }

   /**
   * Get idNotStartsWith
   * @return idNotStartsWith
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getIdNotStartsWith() {
        return idNotStartsWith.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_ID_NOT_STARTS_WITH)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getIdNotStartsWith_JsonNullable() {
    return idNotStartsWith;
  }
  
  @JsonProperty(JSON_PROPERTY_ID_NOT_STARTS_WITH)
  public void setIdNotStartsWith_JsonNullable(JsonNullable<String> idNotStartsWith) {
    this.idNotStartsWith = idNotStartsWith;
  }

  public void setIdNotStartsWith(String idNotStartsWith) {
    this.idNotStartsWith = JsonNullable.<String>of(idNotStartsWith);
  }


  public GraphWhereInput idStartsWith(String idStartsWith) {
    this.idStartsWith = JsonNullable.<String>of(idStartsWith);
    return this;
  }

   /**
   * Get idStartsWith
   * @return idStartsWith
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getIdStartsWith() {
        return idStartsWith.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_ID_STARTS_WITH)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getIdStartsWith_JsonNullable() {
    return idStartsWith;
  }
  
  @JsonProperty(JSON_PROPERTY_ID_STARTS_WITH)
  public void setIdStartsWith_JsonNullable(JsonNullable<String> idStartsWith) {
    this.idStartsWith = idStartsWith;
  }

  public void setIdStartsWith(String idStartsWith) {
    this.idStartsWith = JsonNullable.<String>of(idStartsWith);
  }


  public GraphWhereInput localId(String localId) {
    this.localId = JsonNullable.<String>of(localId);
    return this;
  }

   /**
   * Get localId
   * @return localId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getLocalId() {
        return localId.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_LOCAL_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getLocalId_JsonNullable() {
    return localId;
  }
  
  @JsonProperty(JSON_PROPERTY_LOCAL_ID)
  public void setLocalId_JsonNullable(JsonNullable<String> localId) {
    this.localId = localId;
  }

  public void setLocalId(String localId) {
    this.localId = JsonNullable.<String>of(localId);
  }


  public GraphWhereInput localIdContains(String localIdContains) {
    this.localIdContains = JsonNullable.<String>of(localIdContains);
    return this;
  }

   /**
   * Get localIdContains
   * @return localIdContains
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getLocalIdContains() {
        return localIdContains.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_LOCAL_ID_CONTAINS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getLocalIdContains_JsonNullable() {
    return localIdContains;
  }
  
  @JsonProperty(JSON_PROPERTY_LOCAL_ID_CONTAINS)
  public void setLocalIdContains_JsonNullable(JsonNullable<String> localIdContains) {
    this.localIdContains = localIdContains;
  }

  public void setLocalIdContains(String localIdContains) {
    this.localIdContains = JsonNullable.<String>of(localIdContains);
  }


  public GraphWhereInput localIdEndsWith(String localIdEndsWith) {
    this.localIdEndsWith = JsonNullable.<String>of(localIdEndsWith);
    return this;
  }

   /**
   * Get localIdEndsWith
   * @return localIdEndsWith
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getLocalIdEndsWith() {
        return localIdEndsWith.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_LOCAL_ID_ENDS_WITH)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getLocalIdEndsWith_JsonNullable() {
    return localIdEndsWith;
  }
  
  @JsonProperty(JSON_PROPERTY_LOCAL_ID_ENDS_WITH)
  public void setLocalIdEndsWith_JsonNullable(JsonNullable<String> localIdEndsWith) {
    this.localIdEndsWith = localIdEndsWith;
  }

  public void setLocalIdEndsWith(String localIdEndsWith) {
    this.localIdEndsWith = JsonNullable.<String>of(localIdEndsWith);
  }


  public GraphWhereInput localIdGt(String localIdGt) {
    this.localIdGt = JsonNullable.<String>of(localIdGt);
    return this;
  }

   /**
   * Get localIdGt
   * @return localIdGt
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getLocalIdGt() {
        return localIdGt.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_LOCAL_ID_GT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getLocalIdGt_JsonNullable() {
    return localIdGt;
  }
  
  @JsonProperty(JSON_PROPERTY_LOCAL_ID_GT)
  public void setLocalIdGt_JsonNullable(JsonNullable<String> localIdGt) {
    this.localIdGt = localIdGt;
  }

  public void setLocalIdGt(String localIdGt) {
    this.localIdGt = JsonNullable.<String>of(localIdGt);
  }


  public GraphWhereInput localIdGte(String localIdGte) {
    this.localIdGte = JsonNullable.<String>of(localIdGte);
    return this;
  }

   /**
   * Get localIdGte
   * @return localIdGte
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getLocalIdGte() {
        return localIdGte.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_LOCAL_ID_GTE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getLocalIdGte_JsonNullable() {
    return localIdGte;
  }
  
  @JsonProperty(JSON_PROPERTY_LOCAL_ID_GTE)
  public void setLocalIdGte_JsonNullable(JsonNullable<String> localIdGte) {
    this.localIdGte = localIdGte;
  }

  public void setLocalIdGte(String localIdGte) {
    this.localIdGte = JsonNullable.<String>of(localIdGte);
  }


  public GraphWhereInput localIdIn(List<String> localIdIn) {
    this.localIdIn = JsonNullable.<List<String>>of(localIdIn);
    return this;
  }

  public GraphWhereInput addLocalIdInItem(String localIdInItem) {
    if (this.localIdIn == null || !this.localIdIn.isPresent()) {
      this.localIdIn = JsonNullable.<List<String>>of(new ArrayList<>());
    }
    try {
      this.localIdIn.get().add(localIdInItem);
    } catch (java.util.NoSuchElementException e) {
      // this can never happen, as we make sure above that the value is present
    }
    return this;
  }

   /**
   * Get localIdIn
   * @return localIdIn
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public List<String> getLocalIdIn() {
        return localIdIn.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_LOCAL_ID_IN)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<List<String>> getLocalIdIn_JsonNullable() {
    return localIdIn;
  }
  
  @JsonProperty(JSON_PROPERTY_LOCAL_ID_IN)
  public void setLocalIdIn_JsonNullable(JsonNullable<List<String>> localIdIn) {
    this.localIdIn = localIdIn;
  }

  public void setLocalIdIn(List<String> localIdIn) {
    this.localIdIn = JsonNullable.<List<String>>of(localIdIn);
  }


  public GraphWhereInput localIdLt(String localIdLt) {
    this.localIdLt = JsonNullable.<String>of(localIdLt);
    return this;
  }

   /**
   * Get localIdLt
   * @return localIdLt
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getLocalIdLt() {
        return localIdLt.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_LOCAL_ID_LT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getLocalIdLt_JsonNullable() {
    return localIdLt;
  }
  
  @JsonProperty(JSON_PROPERTY_LOCAL_ID_LT)
  public void setLocalIdLt_JsonNullable(JsonNullable<String> localIdLt) {
    this.localIdLt = localIdLt;
  }

  public void setLocalIdLt(String localIdLt) {
    this.localIdLt = JsonNullable.<String>of(localIdLt);
  }


  public GraphWhereInput localIdLte(String localIdLte) {
    this.localIdLte = JsonNullable.<String>of(localIdLte);
    return this;
  }

   /**
   * Get localIdLte
   * @return localIdLte
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getLocalIdLte() {
        return localIdLte.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_LOCAL_ID_LTE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getLocalIdLte_JsonNullable() {
    return localIdLte;
  }
  
  @JsonProperty(JSON_PROPERTY_LOCAL_ID_LTE)
  public void setLocalIdLte_JsonNullable(JsonNullable<String> localIdLte) {
    this.localIdLte = localIdLte;
  }

  public void setLocalIdLte(String localIdLte) {
    this.localIdLte = JsonNullable.<String>of(localIdLte);
  }


  public GraphWhereInput localIdNot(String localIdNot) {
    this.localIdNot = JsonNullable.<String>of(localIdNot);
    return this;
  }

   /**
   * Get localIdNot
   * @return localIdNot
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getLocalIdNot() {
        return localIdNot.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_LOCAL_ID_NOT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getLocalIdNot_JsonNullable() {
    return localIdNot;
  }
  
  @JsonProperty(JSON_PROPERTY_LOCAL_ID_NOT)
  public void setLocalIdNot_JsonNullable(JsonNullable<String> localIdNot) {
    this.localIdNot = localIdNot;
  }

  public void setLocalIdNot(String localIdNot) {
    this.localIdNot = JsonNullable.<String>of(localIdNot);
  }


  public GraphWhereInput localIdNotContains(String localIdNotContains) {
    this.localIdNotContains = JsonNullable.<String>of(localIdNotContains);
    return this;
  }

   /**
   * Get localIdNotContains
   * @return localIdNotContains
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getLocalIdNotContains() {
        return localIdNotContains.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_LOCAL_ID_NOT_CONTAINS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getLocalIdNotContains_JsonNullable() {
    return localIdNotContains;
  }
  
  @JsonProperty(JSON_PROPERTY_LOCAL_ID_NOT_CONTAINS)
  public void setLocalIdNotContains_JsonNullable(JsonNullable<String> localIdNotContains) {
    this.localIdNotContains = localIdNotContains;
  }

  public void setLocalIdNotContains(String localIdNotContains) {
    this.localIdNotContains = JsonNullable.<String>of(localIdNotContains);
  }


  public GraphWhereInput localIdNotEndsWith(String localIdNotEndsWith) {
    this.localIdNotEndsWith = JsonNullable.<String>of(localIdNotEndsWith);
    return this;
  }

   /**
   * Get localIdNotEndsWith
   * @return localIdNotEndsWith
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getLocalIdNotEndsWith() {
        return localIdNotEndsWith.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_LOCAL_ID_NOT_ENDS_WITH)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getLocalIdNotEndsWith_JsonNullable() {
    return localIdNotEndsWith;
  }
  
  @JsonProperty(JSON_PROPERTY_LOCAL_ID_NOT_ENDS_WITH)
  public void setLocalIdNotEndsWith_JsonNullable(JsonNullable<String> localIdNotEndsWith) {
    this.localIdNotEndsWith = localIdNotEndsWith;
  }

  public void setLocalIdNotEndsWith(String localIdNotEndsWith) {
    this.localIdNotEndsWith = JsonNullable.<String>of(localIdNotEndsWith);
  }


  public GraphWhereInput localIdNotIn(List<String> localIdNotIn) {
    this.localIdNotIn = JsonNullable.<List<String>>of(localIdNotIn);
    return this;
  }

  public GraphWhereInput addLocalIdNotInItem(String localIdNotInItem) {
    if (this.localIdNotIn == null || !this.localIdNotIn.isPresent()) {
      this.localIdNotIn = JsonNullable.<List<String>>of(new ArrayList<>());
    }
    try {
      this.localIdNotIn.get().add(localIdNotInItem);
    } catch (java.util.NoSuchElementException e) {
      // this can never happen, as we make sure above that the value is present
    }
    return this;
  }

   /**
   * Get localIdNotIn
   * @return localIdNotIn
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public List<String> getLocalIdNotIn() {
        return localIdNotIn.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_LOCAL_ID_NOT_IN)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<List<String>> getLocalIdNotIn_JsonNullable() {
    return localIdNotIn;
  }
  
  @JsonProperty(JSON_PROPERTY_LOCAL_ID_NOT_IN)
  public void setLocalIdNotIn_JsonNullable(JsonNullable<List<String>> localIdNotIn) {
    this.localIdNotIn = localIdNotIn;
  }

  public void setLocalIdNotIn(List<String> localIdNotIn) {
    this.localIdNotIn = JsonNullable.<List<String>>of(localIdNotIn);
  }


  public GraphWhereInput localIdNotStartsWith(String localIdNotStartsWith) {
    this.localIdNotStartsWith = JsonNullable.<String>of(localIdNotStartsWith);
    return this;
  }

   /**
   * Get localIdNotStartsWith
   * @return localIdNotStartsWith
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getLocalIdNotStartsWith() {
        return localIdNotStartsWith.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_LOCAL_ID_NOT_STARTS_WITH)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getLocalIdNotStartsWith_JsonNullable() {
    return localIdNotStartsWith;
  }
  
  @JsonProperty(JSON_PROPERTY_LOCAL_ID_NOT_STARTS_WITH)
  public void setLocalIdNotStartsWith_JsonNullable(JsonNullable<String> localIdNotStartsWith) {
    this.localIdNotStartsWith = localIdNotStartsWith;
  }

  public void setLocalIdNotStartsWith(String localIdNotStartsWith) {
    this.localIdNotStartsWith = JsonNullable.<String>of(localIdNotStartsWith);
  }


  public GraphWhereInput localIdStartsWith(String localIdStartsWith) {
    this.localIdStartsWith = JsonNullable.<String>of(localIdStartsWith);
    return this;
  }

   /**
   * Get localIdStartsWith
   * @return localIdStartsWith
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getLocalIdStartsWith() {
        return localIdStartsWith.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_LOCAL_ID_STARTS_WITH)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getLocalIdStartsWith_JsonNullable() {
    return localIdStartsWith;
  }
  
  @JsonProperty(JSON_PROPERTY_LOCAL_ID_STARTS_WITH)
  public void setLocalIdStartsWith_JsonNullable(JsonNullable<String> localIdStartsWith) {
    this.localIdStartsWith = localIdStartsWith;
  }

  public void setLocalIdStartsWith(String localIdStartsWith) {
    this.localIdStartsWith = JsonNullable.<String>of(localIdStartsWith);
  }


  public GraphWhereInput lunsEvery(IscsiLunWhereInput lunsEvery) {
    this.lunsEvery = JsonNullable.<IscsiLunWhereInput>of(lunsEvery);
    return this;
  }

   /**
   * Get lunsEvery
   * @return lunsEvery
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public IscsiLunWhereInput getLunsEvery() {
        return lunsEvery.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_LUNS_EVERY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<IscsiLunWhereInput> getLunsEvery_JsonNullable() {
    return lunsEvery;
  }
  
  @JsonProperty(JSON_PROPERTY_LUNS_EVERY)
  public void setLunsEvery_JsonNullable(JsonNullable<IscsiLunWhereInput> lunsEvery) {
    this.lunsEvery = lunsEvery;
  }

  public void setLunsEvery(IscsiLunWhereInput lunsEvery) {
    this.lunsEvery = JsonNullable.<IscsiLunWhereInput>of(lunsEvery);
  }


  public GraphWhereInput lunsNone(IscsiLunWhereInput lunsNone) {
    this.lunsNone = JsonNullable.<IscsiLunWhereInput>of(lunsNone);
    return this;
  }

   /**
   * Get lunsNone
   * @return lunsNone
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public IscsiLunWhereInput getLunsNone() {
        return lunsNone.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_LUNS_NONE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<IscsiLunWhereInput> getLunsNone_JsonNullable() {
    return lunsNone;
  }
  
  @JsonProperty(JSON_PROPERTY_LUNS_NONE)
  public void setLunsNone_JsonNullable(JsonNullable<IscsiLunWhereInput> lunsNone) {
    this.lunsNone = lunsNone;
  }

  public void setLunsNone(IscsiLunWhereInput lunsNone) {
    this.lunsNone = JsonNullable.<IscsiLunWhereInput>of(lunsNone);
  }


  public GraphWhereInput lunsSome(IscsiLunWhereInput lunsSome) {
    this.lunsSome = JsonNullable.<IscsiLunWhereInput>of(lunsSome);
    return this;
  }

   /**
   * Get lunsSome
   * @return lunsSome
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public IscsiLunWhereInput getLunsSome() {
        return lunsSome.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_LUNS_SOME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<IscsiLunWhereInput> getLunsSome_JsonNullable() {
    return lunsSome;
  }
  
  @JsonProperty(JSON_PROPERTY_LUNS_SOME)
  public void setLunsSome_JsonNullable(JsonNullable<IscsiLunWhereInput> lunsSome) {
    this.lunsSome = lunsSome;
  }

  public void setLunsSome(IscsiLunWhereInput lunsSome) {
    this.lunsSome = JsonNullable.<IscsiLunWhereInput>of(lunsSome);
  }


  public GraphWhereInput metricCount(Double metricCount) {
    this.metricCount = JsonNullable.<Double>of(metricCount);
    return this;
  }

   /**
   * Get metricCount
   * @return metricCount
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public Double getMetricCount() {
        return metricCount.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_METRIC_COUNT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<Double> getMetricCount_JsonNullable() {
    return metricCount;
  }
  
  @JsonProperty(JSON_PROPERTY_METRIC_COUNT)
  public void setMetricCount_JsonNullable(JsonNullable<Double> metricCount) {
    this.metricCount = metricCount;
  }

  public void setMetricCount(Double metricCount) {
    this.metricCount = JsonNullable.<Double>of(metricCount);
  }


  public GraphWhereInput metricCountGt(Double metricCountGt) {
    this.metricCountGt = JsonNullable.<Double>of(metricCountGt);
    return this;
  }

   /**
   * Get metricCountGt
   * @return metricCountGt
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public Double getMetricCountGt() {
        return metricCountGt.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_METRIC_COUNT_GT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<Double> getMetricCountGt_JsonNullable() {
    return metricCountGt;
  }
  
  @JsonProperty(JSON_PROPERTY_METRIC_COUNT_GT)
  public void setMetricCountGt_JsonNullable(JsonNullable<Double> metricCountGt) {
    this.metricCountGt = metricCountGt;
  }

  public void setMetricCountGt(Double metricCountGt) {
    this.metricCountGt = JsonNullable.<Double>of(metricCountGt);
  }


  public GraphWhereInput metricCountGte(Double metricCountGte) {
    this.metricCountGte = JsonNullable.<Double>of(metricCountGte);
    return this;
  }

   /**
   * Get metricCountGte
   * @return metricCountGte
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public Double getMetricCountGte() {
        return metricCountGte.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_METRIC_COUNT_GTE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<Double> getMetricCountGte_JsonNullable() {
    return metricCountGte;
  }
  
  @JsonProperty(JSON_PROPERTY_METRIC_COUNT_GTE)
  public void setMetricCountGte_JsonNullable(JsonNullable<Double> metricCountGte) {
    this.metricCountGte = metricCountGte;
  }

  public void setMetricCountGte(Double metricCountGte) {
    this.metricCountGte = JsonNullable.<Double>of(metricCountGte);
  }


  public GraphWhereInput metricCountIn(List<Double> metricCountIn) {
    this.metricCountIn = JsonNullable.<List<Double>>of(metricCountIn);
    return this;
  }

  public GraphWhereInput addMetricCountInItem(Double metricCountInItem) {
    if (this.metricCountIn == null || !this.metricCountIn.isPresent()) {
      this.metricCountIn = JsonNullable.<List<Double>>of(new ArrayList<>());
    }
    try {
      this.metricCountIn.get().add(metricCountInItem);
    } catch (java.util.NoSuchElementException e) {
      // this can never happen, as we make sure above that the value is present
    }
    return this;
  }

   /**
   * Get metricCountIn
   * @return metricCountIn
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public List<Double> getMetricCountIn() {
        return metricCountIn.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_METRIC_COUNT_IN)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<List<Double>> getMetricCountIn_JsonNullable() {
    return metricCountIn;
  }
  
  @JsonProperty(JSON_PROPERTY_METRIC_COUNT_IN)
  public void setMetricCountIn_JsonNullable(JsonNullable<List<Double>> metricCountIn) {
    this.metricCountIn = metricCountIn;
  }

  public void setMetricCountIn(List<Double> metricCountIn) {
    this.metricCountIn = JsonNullable.<List<Double>>of(metricCountIn);
  }


  public GraphWhereInput metricCountLt(Double metricCountLt) {
    this.metricCountLt = JsonNullable.<Double>of(metricCountLt);
    return this;
  }

   /**
   * Get metricCountLt
   * @return metricCountLt
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public Double getMetricCountLt() {
        return metricCountLt.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_METRIC_COUNT_LT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<Double> getMetricCountLt_JsonNullable() {
    return metricCountLt;
  }
  
  @JsonProperty(JSON_PROPERTY_METRIC_COUNT_LT)
  public void setMetricCountLt_JsonNullable(JsonNullable<Double> metricCountLt) {
    this.metricCountLt = metricCountLt;
  }

  public void setMetricCountLt(Double metricCountLt) {
    this.metricCountLt = JsonNullable.<Double>of(metricCountLt);
  }


  public GraphWhereInput metricCountLte(Double metricCountLte) {
    this.metricCountLte = JsonNullable.<Double>of(metricCountLte);
    return this;
  }

   /**
   * Get metricCountLte
   * @return metricCountLte
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public Double getMetricCountLte() {
        return metricCountLte.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_METRIC_COUNT_LTE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<Double> getMetricCountLte_JsonNullable() {
    return metricCountLte;
  }
  
  @JsonProperty(JSON_PROPERTY_METRIC_COUNT_LTE)
  public void setMetricCountLte_JsonNullable(JsonNullable<Double> metricCountLte) {
    this.metricCountLte = metricCountLte;
  }

  public void setMetricCountLte(Double metricCountLte) {
    this.metricCountLte = JsonNullable.<Double>of(metricCountLte);
  }


  public GraphWhereInput metricCountNot(Double metricCountNot) {
    this.metricCountNot = JsonNullable.<Double>of(metricCountNot);
    return this;
  }

   /**
   * Get metricCountNot
   * @return metricCountNot
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public Double getMetricCountNot() {
        return metricCountNot.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_METRIC_COUNT_NOT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<Double> getMetricCountNot_JsonNullable() {
    return metricCountNot;
  }
  
  @JsonProperty(JSON_PROPERTY_METRIC_COUNT_NOT)
  public void setMetricCountNot_JsonNullable(JsonNullable<Double> metricCountNot) {
    this.metricCountNot = metricCountNot;
  }

  public void setMetricCountNot(Double metricCountNot) {
    this.metricCountNot = JsonNullable.<Double>of(metricCountNot);
  }


  public GraphWhereInput metricCountNotIn(List<Double> metricCountNotIn) {
    this.metricCountNotIn = JsonNullable.<List<Double>>of(metricCountNotIn);
    return this;
  }

  public GraphWhereInput addMetricCountNotInItem(Double metricCountNotInItem) {
    if (this.metricCountNotIn == null || !this.metricCountNotIn.isPresent()) {
      this.metricCountNotIn = JsonNullable.<List<Double>>of(new ArrayList<>());
    }
    try {
      this.metricCountNotIn.get().add(metricCountNotInItem);
    } catch (java.util.NoSuchElementException e) {
      // this can never happen, as we make sure above that the value is present
    }
    return this;
  }

   /**
   * Get metricCountNotIn
   * @return metricCountNotIn
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public List<Double> getMetricCountNotIn() {
        return metricCountNotIn.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_METRIC_COUNT_NOT_IN)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<List<Double>> getMetricCountNotIn_JsonNullable() {
    return metricCountNotIn;
  }
  
  @JsonProperty(JSON_PROPERTY_METRIC_COUNT_NOT_IN)
  public void setMetricCountNotIn_JsonNullable(JsonNullable<List<Double>> metricCountNotIn) {
    this.metricCountNotIn = metricCountNotIn;
  }

  public void setMetricCountNotIn(List<Double> metricCountNotIn) {
    this.metricCountNotIn = JsonNullable.<List<Double>>of(metricCountNotIn);
  }


  public GraphWhereInput metricName(String metricName) {
    this.metricName = JsonNullable.<String>of(metricName);
    return this;
  }

   /**
   * Get metricName
   * @return metricName
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getMetricName() {
        return metricName.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_METRIC_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getMetricName_JsonNullable() {
    return metricName;
  }
  
  @JsonProperty(JSON_PROPERTY_METRIC_NAME)
  public void setMetricName_JsonNullable(JsonNullable<String> metricName) {
    this.metricName = metricName;
  }

  public void setMetricName(String metricName) {
    this.metricName = JsonNullable.<String>of(metricName);
  }


  public GraphWhereInput metricNameContains(String metricNameContains) {
    this.metricNameContains = JsonNullable.<String>of(metricNameContains);
    return this;
  }

   /**
   * Get metricNameContains
   * @return metricNameContains
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getMetricNameContains() {
        return metricNameContains.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_METRIC_NAME_CONTAINS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getMetricNameContains_JsonNullable() {
    return metricNameContains;
  }
  
  @JsonProperty(JSON_PROPERTY_METRIC_NAME_CONTAINS)
  public void setMetricNameContains_JsonNullable(JsonNullable<String> metricNameContains) {
    this.metricNameContains = metricNameContains;
  }

  public void setMetricNameContains(String metricNameContains) {
    this.metricNameContains = JsonNullable.<String>of(metricNameContains);
  }


  public GraphWhereInput metricNameEndsWith(String metricNameEndsWith) {
    this.metricNameEndsWith = JsonNullable.<String>of(metricNameEndsWith);
    return this;
  }

   /**
   * Get metricNameEndsWith
   * @return metricNameEndsWith
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getMetricNameEndsWith() {
        return metricNameEndsWith.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_METRIC_NAME_ENDS_WITH)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getMetricNameEndsWith_JsonNullable() {
    return metricNameEndsWith;
  }
  
  @JsonProperty(JSON_PROPERTY_METRIC_NAME_ENDS_WITH)
  public void setMetricNameEndsWith_JsonNullable(JsonNullable<String> metricNameEndsWith) {
    this.metricNameEndsWith = metricNameEndsWith;
  }

  public void setMetricNameEndsWith(String metricNameEndsWith) {
    this.metricNameEndsWith = JsonNullable.<String>of(metricNameEndsWith);
  }


  public GraphWhereInput metricNameGt(String metricNameGt) {
    this.metricNameGt = JsonNullable.<String>of(metricNameGt);
    return this;
  }

   /**
   * Get metricNameGt
   * @return metricNameGt
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getMetricNameGt() {
        return metricNameGt.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_METRIC_NAME_GT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getMetricNameGt_JsonNullable() {
    return metricNameGt;
  }
  
  @JsonProperty(JSON_PROPERTY_METRIC_NAME_GT)
  public void setMetricNameGt_JsonNullable(JsonNullable<String> metricNameGt) {
    this.metricNameGt = metricNameGt;
  }

  public void setMetricNameGt(String metricNameGt) {
    this.metricNameGt = JsonNullable.<String>of(metricNameGt);
  }


  public GraphWhereInput metricNameGte(String metricNameGte) {
    this.metricNameGte = JsonNullable.<String>of(metricNameGte);
    return this;
  }

   /**
   * Get metricNameGte
   * @return metricNameGte
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getMetricNameGte() {
        return metricNameGte.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_METRIC_NAME_GTE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getMetricNameGte_JsonNullable() {
    return metricNameGte;
  }
  
  @JsonProperty(JSON_PROPERTY_METRIC_NAME_GTE)
  public void setMetricNameGte_JsonNullable(JsonNullable<String> metricNameGte) {
    this.metricNameGte = metricNameGte;
  }

  public void setMetricNameGte(String metricNameGte) {
    this.metricNameGte = JsonNullable.<String>of(metricNameGte);
  }


  public GraphWhereInput metricNameIn(List<String> metricNameIn) {
    this.metricNameIn = JsonNullable.<List<String>>of(metricNameIn);
    return this;
  }

  public GraphWhereInput addMetricNameInItem(String metricNameInItem) {
    if (this.metricNameIn == null || !this.metricNameIn.isPresent()) {
      this.metricNameIn = JsonNullable.<List<String>>of(new ArrayList<>());
    }
    try {
      this.metricNameIn.get().add(metricNameInItem);
    } catch (java.util.NoSuchElementException e) {
      // this can never happen, as we make sure above that the value is present
    }
    return this;
  }

   /**
   * Get metricNameIn
   * @return metricNameIn
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public List<String> getMetricNameIn() {
        return metricNameIn.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_METRIC_NAME_IN)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<List<String>> getMetricNameIn_JsonNullable() {
    return metricNameIn;
  }
  
  @JsonProperty(JSON_PROPERTY_METRIC_NAME_IN)
  public void setMetricNameIn_JsonNullable(JsonNullable<List<String>> metricNameIn) {
    this.metricNameIn = metricNameIn;
  }

  public void setMetricNameIn(List<String> metricNameIn) {
    this.metricNameIn = JsonNullable.<List<String>>of(metricNameIn);
  }


  public GraphWhereInput metricNameLt(String metricNameLt) {
    this.metricNameLt = JsonNullable.<String>of(metricNameLt);
    return this;
  }

   /**
   * Get metricNameLt
   * @return metricNameLt
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getMetricNameLt() {
        return metricNameLt.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_METRIC_NAME_LT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getMetricNameLt_JsonNullable() {
    return metricNameLt;
  }
  
  @JsonProperty(JSON_PROPERTY_METRIC_NAME_LT)
  public void setMetricNameLt_JsonNullable(JsonNullable<String> metricNameLt) {
    this.metricNameLt = metricNameLt;
  }

  public void setMetricNameLt(String metricNameLt) {
    this.metricNameLt = JsonNullable.<String>of(metricNameLt);
  }


  public GraphWhereInput metricNameLte(String metricNameLte) {
    this.metricNameLte = JsonNullable.<String>of(metricNameLte);
    return this;
  }

   /**
   * Get metricNameLte
   * @return metricNameLte
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getMetricNameLte() {
        return metricNameLte.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_METRIC_NAME_LTE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getMetricNameLte_JsonNullable() {
    return metricNameLte;
  }
  
  @JsonProperty(JSON_PROPERTY_METRIC_NAME_LTE)
  public void setMetricNameLte_JsonNullable(JsonNullable<String> metricNameLte) {
    this.metricNameLte = metricNameLte;
  }

  public void setMetricNameLte(String metricNameLte) {
    this.metricNameLte = JsonNullable.<String>of(metricNameLte);
  }


  public GraphWhereInput metricNameNot(String metricNameNot) {
    this.metricNameNot = JsonNullable.<String>of(metricNameNot);
    return this;
  }

   /**
   * Get metricNameNot
   * @return metricNameNot
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getMetricNameNot() {
        return metricNameNot.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_METRIC_NAME_NOT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getMetricNameNot_JsonNullable() {
    return metricNameNot;
  }
  
  @JsonProperty(JSON_PROPERTY_METRIC_NAME_NOT)
  public void setMetricNameNot_JsonNullable(JsonNullable<String> metricNameNot) {
    this.metricNameNot = metricNameNot;
  }

  public void setMetricNameNot(String metricNameNot) {
    this.metricNameNot = JsonNullable.<String>of(metricNameNot);
  }


  public GraphWhereInput metricNameNotContains(String metricNameNotContains) {
    this.metricNameNotContains = JsonNullable.<String>of(metricNameNotContains);
    return this;
  }

   /**
   * Get metricNameNotContains
   * @return metricNameNotContains
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getMetricNameNotContains() {
        return metricNameNotContains.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_METRIC_NAME_NOT_CONTAINS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getMetricNameNotContains_JsonNullable() {
    return metricNameNotContains;
  }
  
  @JsonProperty(JSON_PROPERTY_METRIC_NAME_NOT_CONTAINS)
  public void setMetricNameNotContains_JsonNullable(JsonNullable<String> metricNameNotContains) {
    this.metricNameNotContains = metricNameNotContains;
  }

  public void setMetricNameNotContains(String metricNameNotContains) {
    this.metricNameNotContains = JsonNullable.<String>of(metricNameNotContains);
  }


  public GraphWhereInput metricNameNotEndsWith(String metricNameNotEndsWith) {
    this.metricNameNotEndsWith = JsonNullable.<String>of(metricNameNotEndsWith);
    return this;
  }

   /**
   * Get metricNameNotEndsWith
   * @return metricNameNotEndsWith
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getMetricNameNotEndsWith() {
        return metricNameNotEndsWith.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_METRIC_NAME_NOT_ENDS_WITH)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getMetricNameNotEndsWith_JsonNullable() {
    return metricNameNotEndsWith;
  }
  
  @JsonProperty(JSON_PROPERTY_METRIC_NAME_NOT_ENDS_WITH)
  public void setMetricNameNotEndsWith_JsonNullable(JsonNullable<String> metricNameNotEndsWith) {
    this.metricNameNotEndsWith = metricNameNotEndsWith;
  }

  public void setMetricNameNotEndsWith(String metricNameNotEndsWith) {
    this.metricNameNotEndsWith = JsonNullable.<String>of(metricNameNotEndsWith);
  }


  public GraphWhereInput metricNameNotIn(List<String> metricNameNotIn) {
    this.metricNameNotIn = JsonNullable.<List<String>>of(metricNameNotIn);
    return this;
  }

  public GraphWhereInput addMetricNameNotInItem(String metricNameNotInItem) {
    if (this.metricNameNotIn == null || !this.metricNameNotIn.isPresent()) {
      this.metricNameNotIn = JsonNullable.<List<String>>of(new ArrayList<>());
    }
    try {
      this.metricNameNotIn.get().add(metricNameNotInItem);
    } catch (java.util.NoSuchElementException e) {
      // this can never happen, as we make sure above that the value is present
    }
    return this;
  }

   /**
   * Get metricNameNotIn
   * @return metricNameNotIn
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public List<String> getMetricNameNotIn() {
        return metricNameNotIn.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_METRIC_NAME_NOT_IN)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<List<String>> getMetricNameNotIn_JsonNullable() {
    return metricNameNotIn;
  }
  
  @JsonProperty(JSON_PROPERTY_METRIC_NAME_NOT_IN)
  public void setMetricNameNotIn_JsonNullable(JsonNullable<List<String>> metricNameNotIn) {
    this.metricNameNotIn = metricNameNotIn;
  }

  public void setMetricNameNotIn(List<String> metricNameNotIn) {
    this.metricNameNotIn = JsonNullable.<List<String>>of(metricNameNotIn);
  }


  public GraphWhereInput metricNameNotStartsWith(String metricNameNotStartsWith) {
    this.metricNameNotStartsWith = JsonNullable.<String>of(metricNameNotStartsWith);
    return this;
  }

   /**
   * Get metricNameNotStartsWith
   * @return metricNameNotStartsWith
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getMetricNameNotStartsWith() {
        return metricNameNotStartsWith.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_METRIC_NAME_NOT_STARTS_WITH)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getMetricNameNotStartsWith_JsonNullable() {
    return metricNameNotStartsWith;
  }
  
  @JsonProperty(JSON_PROPERTY_METRIC_NAME_NOT_STARTS_WITH)
  public void setMetricNameNotStartsWith_JsonNullable(JsonNullable<String> metricNameNotStartsWith) {
    this.metricNameNotStartsWith = metricNameNotStartsWith;
  }

  public void setMetricNameNotStartsWith(String metricNameNotStartsWith) {
    this.metricNameNotStartsWith = JsonNullable.<String>of(metricNameNotStartsWith);
  }


  public GraphWhereInput metricNameStartsWith(String metricNameStartsWith) {
    this.metricNameStartsWith = JsonNullable.<String>of(metricNameStartsWith);
    return this;
  }

   /**
   * Get metricNameStartsWith
   * @return metricNameStartsWith
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getMetricNameStartsWith() {
        return metricNameStartsWith.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_METRIC_NAME_STARTS_WITH)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getMetricNameStartsWith_JsonNullable() {
    return metricNameStartsWith;
  }
  
  @JsonProperty(JSON_PROPERTY_METRIC_NAME_STARTS_WITH)
  public void setMetricNameStartsWith_JsonNullable(JsonNullable<String> metricNameStartsWith) {
    this.metricNameStartsWith = metricNameStartsWith;
  }

  public void setMetricNameStartsWith(String metricNameStartsWith) {
    this.metricNameStartsWith = JsonNullable.<String>of(metricNameStartsWith);
  }


  public GraphWhereInput metricType(MetricType metricType) {
    this.metricType = JsonNullable.<MetricType>of(metricType);
    return this;
  }

   /**
   * Get metricType
   * @return metricType
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public MetricType getMetricType() {
        return metricType.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_METRIC_TYPE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<MetricType> getMetricType_JsonNullable() {
    return metricType;
  }
  
  @JsonProperty(JSON_PROPERTY_METRIC_TYPE)
  public void setMetricType_JsonNullable(JsonNullable<MetricType> metricType) {
    this.metricType = metricType;
  }

  public void setMetricType(MetricType metricType) {
    this.metricType = JsonNullable.<MetricType>of(metricType);
  }


  public GraphWhereInput metricTypeIn(List<MetricType> metricTypeIn) {
    this.metricTypeIn = JsonNullable.<List<MetricType>>of(metricTypeIn);
    return this;
  }

  public GraphWhereInput addMetricTypeInItem(MetricType metricTypeInItem) {
    if (this.metricTypeIn == null || !this.metricTypeIn.isPresent()) {
      this.metricTypeIn = JsonNullable.<List<MetricType>>of(new ArrayList<>());
    }
    try {
      this.metricTypeIn.get().add(metricTypeInItem);
    } catch (java.util.NoSuchElementException e) {
      // this can never happen, as we make sure above that the value is present
    }
    return this;
  }

   /**
   * Get metricTypeIn
   * @return metricTypeIn
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public List<MetricType> getMetricTypeIn() {
        return metricTypeIn.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_METRIC_TYPE_IN)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<List<MetricType>> getMetricTypeIn_JsonNullable() {
    return metricTypeIn;
  }
  
  @JsonProperty(JSON_PROPERTY_METRIC_TYPE_IN)
  public void setMetricTypeIn_JsonNullable(JsonNullable<List<MetricType>> metricTypeIn) {
    this.metricTypeIn = metricTypeIn;
  }

  public void setMetricTypeIn(List<MetricType> metricTypeIn) {
    this.metricTypeIn = JsonNullable.<List<MetricType>>of(metricTypeIn);
  }


  public GraphWhereInput metricTypeNot(MetricType metricTypeNot) {
    this.metricTypeNot = JsonNullable.<MetricType>of(metricTypeNot);
    return this;
  }

   /**
   * Get metricTypeNot
   * @return metricTypeNot
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public MetricType getMetricTypeNot() {
        return metricTypeNot.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_METRIC_TYPE_NOT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<MetricType> getMetricTypeNot_JsonNullable() {
    return metricTypeNot;
  }
  
  @JsonProperty(JSON_PROPERTY_METRIC_TYPE_NOT)
  public void setMetricTypeNot_JsonNullable(JsonNullable<MetricType> metricTypeNot) {
    this.metricTypeNot = metricTypeNot;
  }

  public void setMetricTypeNot(MetricType metricTypeNot) {
    this.metricTypeNot = JsonNullable.<MetricType>of(metricTypeNot);
  }


  public GraphWhereInput metricTypeNotIn(List<MetricType> metricTypeNotIn) {
    this.metricTypeNotIn = JsonNullable.<List<MetricType>>of(metricTypeNotIn);
    return this;
  }

  public GraphWhereInput addMetricTypeNotInItem(MetricType metricTypeNotInItem) {
    if (this.metricTypeNotIn == null || !this.metricTypeNotIn.isPresent()) {
      this.metricTypeNotIn = JsonNullable.<List<MetricType>>of(new ArrayList<>());
    }
    try {
      this.metricTypeNotIn.get().add(metricTypeNotInItem);
    } catch (java.util.NoSuchElementException e) {
      // this can never happen, as we make sure above that the value is present
    }
    return this;
  }

   /**
   * Get metricTypeNotIn
   * @return metricTypeNotIn
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public List<MetricType> getMetricTypeNotIn() {
        return metricTypeNotIn.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_METRIC_TYPE_NOT_IN)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<List<MetricType>> getMetricTypeNotIn_JsonNullable() {
    return metricTypeNotIn;
  }
  
  @JsonProperty(JSON_PROPERTY_METRIC_TYPE_NOT_IN)
  public void setMetricTypeNotIn_JsonNullable(JsonNullable<List<MetricType>> metricTypeNotIn) {
    this.metricTypeNotIn = metricTypeNotIn;
  }

  public void setMetricTypeNotIn(List<MetricType> metricTypeNotIn) {
    this.metricTypeNotIn = JsonNullable.<List<MetricType>>of(metricTypeNotIn);
  }


  public GraphWhereInput namespacesEvery(NvmfNamespaceWhereInput namespacesEvery) {
    this.namespacesEvery = JsonNullable.<NvmfNamespaceWhereInput>of(namespacesEvery);
    return this;
  }

   /**
   * Get namespacesEvery
   * @return namespacesEvery
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public NvmfNamespaceWhereInput getNamespacesEvery() {
        return namespacesEvery.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_NAMESPACES_EVERY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<NvmfNamespaceWhereInput> getNamespacesEvery_JsonNullable() {
    return namespacesEvery;
  }
  
  @JsonProperty(JSON_PROPERTY_NAMESPACES_EVERY)
  public void setNamespacesEvery_JsonNullable(JsonNullable<NvmfNamespaceWhereInput> namespacesEvery) {
    this.namespacesEvery = namespacesEvery;
  }

  public void setNamespacesEvery(NvmfNamespaceWhereInput namespacesEvery) {
    this.namespacesEvery = JsonNullable.<NvmfNamespaceWhereInput>of(namespacesEvery);
  }


  public GraphWhereInput namespacesNone(NvmfNamespaceWhereInput namespacesNone) {
    this.namespacesNone = JsonNullable.<NvmfNamespaceWhereInput>of(namespacesNone);
    return this;
  }

   /**
   * Get namespacesNone
   * @return namespacesNone
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public NvmfNamespaceWhereInput getNamespacesNone() {
        return namespacesNone.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_NAMESPACES_NONE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<NvmfNamespaceWhereInput> getNamespacesNone_JsonNullable() {
    return namespacesNone;
  }
  
  @JsonProperty(JSON_PROPERTY_NAMESPACES_NONE)
  public void setNamespacesNone_JsonNullable(JsonNullable<NvmfNamespaceWhereInput> namespacesNone) {
    this.namespacesNone = namespacesNone;
  }

  public void setNamespacesNone(NvmfNamespaceWhereInput namespacesNone) {
    this.namespacesNone = JsonNullable.<NvmfNamespaceWhereInput>of(namespacesNone);
  }


  public GraphWhereInput namespacesSome(NvmfNamespaceWhereInput namespacesSome) {
    this.namespacesSome = JsonNullable.<NvmfNamespaceWhereInput>of(namespacesSome);
    return this;
  }

   /**
   * Get namespacesSome
   * @return namespacesSome
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public NvmfNamespaceWhereInput getNamespacesSome() {
        return namespacesSome.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_NAMESPACES_SOME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<NvmfNamespaceWhereInput> getNamespacesSome_JsonNullable() {
    return namespacesSome;
  }
  
  @JsonProperty(JSON_PROPERTY_NAMESPACES_SOME)
  public void setNamespacesSome_JsonNullable(JsonNullable<NvmfNamespaceWhereInput> namespacesSome) {
    this.namespacesSome = namespacesSome;
  }

  public void setNamespacesSome(NvmfNamespaceWhereInput namespacesSome) {
    this.namespacesSome = JsonNullable.<NvmfNamespaceWhereInput>of(namespacesSome);
  }


  public GraphWhereInput network(NetworkType network) {
    this.network = JsonNullable.<NetworkType>of(network);
    return this;
  }

   /**
   * Get network
   * @return network
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public NetworkType getNetwork() {
        return network.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_NETWORK)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<NetworkType> getNetwork_JsonNullable() {
    return network;
  }
  
  @JsonProperty(JSON_PROPERTY_NETWORK)
  public void setNetwork_JsonNullable(JsonNullable<NetworkType> network) {
    this.network = network;
  }

  public void setNetwork(NetworkType network) {
    this.network = JsonNullable.<NetworkType>of(network);
  }


  public GraphWhereInput networkIn(List<NetworkType> networkIn) {
    this.networkIn = JsonNullable.<List<NetworkType>>of(networkIn);
    return this;
  }

  public GraphWhereInput addNetworkInItem(NetworkType networkInItem) {
    if (this.networkIn == null || !this.networkIn.isPresent()) {
      this.networkIn = JsonNullable.<List<NetworkType>>of(new ArrayList<>());
    }
    try {
      this.networkIn.get().add(networkInItem);
    } catch (java.util.NoSuchElementException e) {
      // this can never happen, as we make sure above that the value is present
    }
    return this;
  }

   /**
   * Get networkIn
   * @return networkIn
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public List<NetworkType> getNetworkIn() {
        return networkIn.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_NETWORK_IN)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<List<NetworkType>> getNetworkIn_JsonNullable() {
    return networkIn;
  }
  
  @JsonProperty(JSON_PROPERTY_NETWORK_IN)
  public void setNetworkIn_JsonNullable(JsonNullable<List<NetworkType>> networkIn) {
    this.networkIn = networkIn;
  }

  public void setNetworkIn(List<NetworkType> networkIn) {
    this.networkIn = JsonNullable.<List<NetworkType>>of(networkIn);
  }


  public GraphWhereInput networkNot(NetworkType networkNot) {
    this.networkNot = JsonNullable.<NetworkType>of(networkNot);
    return this;
  }

   /**
   * Get networkNot
   * @return networkNot
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public NetworkType getNetworkNot() {
        return networkNot.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_NETWORK_NOT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<NetworkType> getNetworkNot_JsonNullable() {
    return networkNot;
  }
  
  @JsonProperty(JSON_PROPERTY_NETWORK_NOT)
  public void setNetworkNot_JsonNullable(JsonNullable<NetworkType> networkNot) {
    this.networkNot = networkNot;
  }

  public void setNetworkNot(NetworkType networkNot) {
    this.networkNot = JsonNullable.<NetworkType>of(networkNot);
  }


  public GraphWhereInput networkNotIn(List<NetworkType> networkNotIn) {
    this.networkNotIn = JsonNullable.<List<NetworkType>>of(networkNotIn);
    return this;
  }

  public GraphWhereInput addNetworkNotInItem(NetworkType networkNotInItem) {
    if (this.networkNotIn == null || !this.networkNotIn.isPresent()) {
      this.networkNotIn = JsonNullable.<List<NetworkType>>of(new ArrayList<>());
    }
    try {
      this.networkNotIn.get().add(networkNotInItem);
    } catch (java.util.NoSuchElementException e) {
      // this can never happen, as we make sure above that the value is present
    }
    return this;
  }

   /**
   * Get networkNotIn
   * @return networkNotIn
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public List<NetworkType> getNetworkNotIn() {
        return networkNotIn.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_NETWORK_NOT_IN)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<List<NetworkType>> getNetworkNotIn_JsonNullable() {
    return networkNotIn;
  }
  
  @JsonProperty(JSON_PROPERTY_NETWORK_NOT_IN)
  public void setNetworkNotIn_JsonNullable(JsonNullable<List<NetworkType>> networkNotIn) {
    this.networkNotIn = networkNotIn;
  }

  public void setNetworkNotIn(List<NetworkType> networkNotIn) {
    this.networkNotIn = JsonNullable.<List<NetworkType>>of(networkNotIn);
  }


  public GraphWhereInput nicsEvery(NicWhereInput nicsEvery) {
    this.nicsEvery = JsonNullable.<NicWhereInput>of(nicsEvery);
    return this;
  }

   /**
   * Get nicsEvery
   * @return nicsEvery
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public NicWhereInput getNicsEvery() {
        return nicsEvery.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_NICS_EVERY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<NicWhereInput> getNicsEvery_JsonNullable() {
    return nicsEvery;
  }
  
  @JsonProperty(JSON_PROPERTY_NICS_EVERY)
  public void setNicsEvery_JsonNullable(JsonNullable<NicWhereInput> nicsEvery) {
    this.nicsEvery = nicsEvery;
  }

  public void setNicsEvery(NicWhereInput nicsEvery) {
    this.nicsEvery = JsonNullable.<NicWhereInput>of(nicsEvery);
  }


  public GraphWhereInput nicsNone(NicWhereInput nicsNone) {
    this.nicsNone = JsonNullable.<NicWhereInput>of(nicsNone);
    return this;
  }

   /**
   * Get nicsNone
   * @return nicsNone
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public NicWhereInput getNicsNone() {
        return nicsNone.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_NICS_NONE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<NicWhereInput> getNicsNone_JsonNullable() {
    return nicsNone;
  }
  
  @JsonProperty(JSON_PROPERTY_NICS_NONE)
  public void setNicsNone_JsonNullable(JsonNullable<NicWhereInput> nicsNone) {
    this.nicsNone = nicsNone;
  }

  public void setNicsNone(NicWhereInput nicsNone) {
    this.nicsNone = JsonNullable.<NicWhereInput>of(nicsNone);
  }


  public GraphWhereInput nicsSome(NicWhereInput nicsSome) {
    this.nicsSome = JsonNullable.<NicWhereInput>of(nicsSome);
    return this;
  }

   /**
   * Get nicsSome
   * @return nicsSome
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public NicWhereInput getNicsSome() {
        return nicsSome.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_NICS_SOME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<NicWhereInput> getNicsSome_JsonNullable() {
    return nicsSome;
  }
  
  @JsonProperty(JSON_PROPERTY_NICS_SOME)
  public void setNicsSome_JsonNullable(JsonNullable<NicWhereInput> nicsSome) {
    this.nicsSome = nicsSome;
  }

  public void setNicsSome(NicWhereInput nicsSome) {
    this.nicsSome = JsonNullable.<NicWhereInput>of(nicsSome);
  }


  public GraphWhereInput NOT(List<GraphWhereInput> NOT) {
    this.NOT = JsonNullable.<List<GraphWhereInput>>of(NOT);
    return this;
  }

  public GraphWhereInput addNOTItem(GraphWhereInput NOTItem) {
    if (this.NOT == null || !this.NOT.isPresent()) {
      this.NOT = JsonNullable.<List<GraphWhereInput>>of(new ArrayList<>());
    }
    try {
      this.NOT.get().add(NOTItem);
    } catch (java.util.NoSuchElementException e) {
      // this can never happen, as we make sure above that the value is present
    }
    return this;
  }

   /**
   * Get NOT
   * @return NOT
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public List<GraphWhereInput> getNOT() {
        return NOT.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_N_O_T)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<List<GraphWhereInput>> getNOT_JsonNullable() {
    return NOT;
  }
  
  @JsonProperty(JSON_PROPERTY_N_O_T)
  public void setNOT_JsonNullable(JsonNullable<List<GraphWhereInput>> NOT) {
    this.NOT = NOT;
  }

  public void setNOT(List<GraphWhereInput> NOT) {
    this.NOT = JsonNullable.<List<GraphWhereInput>>of(NOT);
  }


  public GraphWhereInput OR(List<GraphWhereInput> OR) {
    this.OR = JsonNullable.<List<GraphWhereInput>>of(OR);
    return this;
  }

  public GraphWhereInput addORItem(GraphWhereInput ORItem) {
    if (this.OR == null || !this.OR.isPresent()) {
      this.OR = JsonNullable.<List<GraphWhereInput>>of(new ArrayList<>());
    }
    try {
      this.OR.get().add(ORItem);
    } catch (java.util.NoSuchElementException e) {
      // this can never happen, as we make sure above that the value is present
    }
    return this;
  }

   /**
   * Get OR
   * @return OR
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public List<GraphWhereInput> getOR() {
        return OR.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_O_R)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<List<GraphWhereInput>> getOR_JsonNullable() {
    return OR;
  }
  
  @JsonProperty(JSON_PROPERTY_O_R)
  public void setOR_JsonNullable(JsonNullable<List<GraphWhereInput>> OR) {
    this.OR = OR;
  }

  public void setOR(List<GraphWhereInput> OR) {
    this.OR = JsonNullable.<List<GraphWhereInput>>of(OR);
  }


  public GraphWhereInput resourceType(String resourceType) {
    this.resourceType = JsonNullable.<String>of(resourceType);
    return this;
  }

   /**
   * Get resourceType
   * @return resourceType
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getResourceType() {
        return resourceType.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_RESOURCE_TYPE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getResourceType_JsonNullable() {
    return resourceType;
  }
  
  @JsonProperty(JSON_PROPERTY_RESOURCE_TYPE)
  public void setResourceType_JsonNullable(JsonNullable<String> resourceType) {
    this.resourceType = resourceType;
  }

  public void setResourceType(String resourceType) {
    this.resourceType = JsonNullable.<String>of(resourceType);
  }


  public GraphWhereInput resourceTypeContains(String resourceTypeContains) {
    this.resourceTypeContains = JsonNullable.<String>of(resourceTypeContains);
    return this;
  }

   /**
   * Get resourceTypeContains
   * @return resourceTypeContains
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getResourceTypeContains() {
        return resourceTypeContains.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_RESOURCE_TYPE_CONTAINS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getResourceTypeContains_JsonNullable() {
    return resourceTypeContains;
  }
  
  @JsonProperty(JSON_PROPERTY_RESOURCE_TYPE_CONTAINS)
  public void setResourceTypeContains_JsonNullable(JsonNullable<String> resourceTypeContains) {
    this.resourceTypeContains = resourceTypeContains;
  }

  public void setResourceTypeContains(String resourceTypeContains) {
    this.resourceTypeContains = JsonNullable.<String>of(resourceTypeContains);
  }


  public GraphWhereInput resourceTypeEndsWith(String resourceTypeEndsWith) {
    this.resourceTypeEndsWith = JsonNullable.<String>of(resourceTypeEndsWith);
    return this;
  }

   /**
   * Get resourceTypeEndsWith
   * @return resourceTypeEndsWith
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getResourceTypeEndsWith() {
        return resourceTypeEndsWith.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_RESOURCE_TYPE_ENDS_WITH)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getResourceTypeEndsWith_JsonNullable() {
    return resourceTypeEndsWith;
  }
  
  @JsonProperty(JSON_PROPERTY_RESOURCE_TYPE_ENDS_WITH)
  public void setResourceTypeEndsWith_JsonNullable(JsonNullable<String> resourceTypeEndsWith) {
    this.resourceTypeEndsWith = resourceTypeEndsWith;
  }

  public void setResourceTypeEndsWith(String resourceTypeEndsWith) {
    this.resourceTypeEndsWith = JsonNullable.<String>of(resourceTypeEndsWith);
  }


  public GraphWhereInput resourceTypeGt(String resourceTypeGt) {
    this.resourceTypeGt = JsonNullable.<String>of(resourceTypeGt);
    return this;
  }

   /**
   * Get resourceTypeGt
   * @return resourceTypeGt
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getResourceTypeGt() {
        return resourceTypeGt.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_RESOURCE_TYPE_GT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getResourceTypeGt_JsonNullable() {
    return resourceTypeGt;
  }
  
  @JsonProperty(JSON_PROPERTY_RESOURCE_TYPE_GT)
  public void setResourceTypeGt_JsonNullable(JsonNullable<String> resourceTypeGt) {
    this.resourceTypeGt = resourceTypeGt;
  }

  public void setResourceTypeGt(String resourceTypeGt) {
    this.resourceTypeGt = JsonNullable.<String>of(resourceTypeGt);
  }


  public GraphWhereInput resourceTypeGte(String resourceTypeGte) {
    this.resourceTypeGte = JsonNullable.<String>of(resourceTypeGte);
    return this;
  }

   /**
   * Get resourceTypeGte
   * @return resourceTypeGte
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getResourceTypeGte() {
        return resourceTypeGte.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_RESOURCE_TYPE_GTE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getResourceTypeGte_JsonNullable() {
    return resourceTypeGte;
  }
  
  @JsonProperty(JSON_PROPERTY_RESOURCE_TYPE_GTE)
  public void setResourceTypeGte_JsonNullable(JsonNullable<String> resourceTypeGte) {
    this.resourceTypeGte = resourceTypeGte;
  }

  public void setResourceTypeGte(String resourceTypeGte) {
    this.resourceTypeGte = JsonNullable.<String>of(resourceTypeGte);
  }


  public GraphWhereInput resourceTypeIn(List<String> resourceTypeIn) {
    this.resourceTypeIn = JsonNullable.<List<String>>of(resourceTypeIn);
    return this;
  }

  public GraphWhereInput addResourceTypeInItem(String resourceTypeInItem) {
    if (this.resourceTypeIn == null || !this.resourceTypeIn.isPresent()) {
      this.resourceTypeIn = JsonNullable.<List<String>>of(new ArrayList<>());
    }
    try {
      this.resourceTypeIn.get().add(resourceTypeInItem);
    } catch (java.util.NoSuchElementException e) {
      // this can never happen, as we make sure above that the value is present
    }
    return this;
  }

   /**
   * Get resourceTypeIn
   * @return resourceTypeIn
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public List<String> getResourceTypeIn() {
        return resourceTypeIn.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_RESOURCE_TYPE_IN)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<List<String>> getResourceTypeIn_JsonNullable() {
    return resourceTypeIn;
  }
  
  @JsonProperty(JSON_PROPERTY_RESOURCE_TYPE_IN)
  public void setResourceTypeIn_JsonNullable(JsonNullable<List<String>> resourceTypeIn) {
    this.resourceTypeIn = resourceTypeIn;
  }

  public void setResourceTypeIn(List<String> resourceTypeIn) {
    this.resourceTypeIn = JsonNullable.<List<String>>of(resourceTypeIn);
  }


  public GraphWhereInput resourceTypeLt(String resourceTypeLt) {
    this.resourceTypeLt = JsonNullable.<String>of(resourceTypeLt);
    return this;
  }

   /**
   * Get resourceTypeLt
   * @return resourceTypeLt
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getResourceTypeLt() {
        return resourceTypeLt.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_RESOURCE_TYPE_LT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getResourceTypeLt_JsonNullable() {
    return resourceTypeLt;
  }
  
  @JsonProperty(JSON_PROPERTY_RESOURCE_TYPE_LT)
  public void setResourceTypeLt_JsonNullable(JsonNullable<String> resourceTypeLt) {
    this.resourceTypeLt = resourceTypeLt;
  }

  public void setResourceTypeLt(String resourceTypeLt) {
    this.resourceTypeLt = JsonNullable.<String>of(resourceTypeLt);
  }


  public GraphWhereInput resourceTypeLte(String resourceTypeLte) {
    this.resourceTypeLte = JsonNullable.<String>of(resourceTypeLte);
    return this;
  }

   /**
   * Get resourceTypeLte
   * @return resourceTypeLte
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getResourceTypeLte() {
        return resourceTypeLte.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_RESOURCE_TYPE_LTE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getResourceTypeLte_JsonNullable() {
    return resourceTypeLte;
  }
  
  @JsonProperty(JSON_PROPERTY_RESOURCE_TYPE_LTE)
  public void setResourceTypeLte_JsonNullable(JsonNullable<String> resourceTypeLte) {
    this.resourceTypeLte = resourceTypeLte;
  }

  public void setResourceTypeLte(String resourceTypeLte) {
    this.resourceTypeLte = JsonNullable.<String>of(resourceTypeLte);
  }


  public GraphWhereInput resourceTypeNot(String resourceTypeNot) {
    this.resourceTypeNot = JsonNullable.<String>of(resourceTypeNot);
    return this;
  }

   /**
   * Get resourceTypeNot
   * @return resourceTypeNot
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getResourceTypeNot() {
        return resourceTypeNot.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_RESOURCE_TYPE_NOT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getResourceTypeNot_JsonNullable() {
    return resourceTypeNot;
  }
  
  @JsonProperty(JSON_PROPERTY_RESOURCE_TYPE_NOT)
  public void setResourceTypeNot_JsonNullable(JsonNullable<String> resourceTypeNot) {
    this.resourceTypeNot = resourceTypeNot;
  }

  public void setResourceTypeNot(String resourceTypeNot) {
    this.resourceTypeNot = JsonNullable.<String>of(resourceTypeNot);
  }


  public GraphWhereInput resourceTypeNotContains(String resourceTypeNotContains) {
    this.resourceTypeNotContains = JsonNullable.<String>of(resourceTypeNotContains);
    return this;
  }

   /**
   * Get resourceTypeNotContains
   * @return resourceTypeNotContains
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getResourceTypeNotContains() {
        return resourceTypeNotContains.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_RESOURCE_TYPE_NOT_CONTAINS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getResourceTypeNotContains_JsonNullable() {
    return resourceTypeNotContains;
  }
  
  @JsonProperty(JSON_PROPERTY_RESOURCE_TYPE_NOT_CONTAINS)
  public void setResourceTypeNotContains_JsonNullable(JsonNullable<String> resourceTypeNotContains) {
    this.resourceTypeNotContains = resourceTypeNotContains;
  }

  public void setResourceTypeNotContains(String resourceTypeNotContains) {
    this.resourceTypeNotContains = JsonNullable.<String>of(resourceTypeNotContains);
  }


  public GraphWhereInput resourceTypeNotEndsWith(String resourceTypeNotEndsWith) {
    this.resourceTypeNotEndsWith = JsonNullable.<String>of(resourceTypeNotEndsWith);
    return this;
  }

   /**
   * Get resourceTypeNotEndsWith
   * @return resourceTypeNotEndsWith
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getResourceTypeNotEndsWith() {
        return resourceTypeNotEndsWith.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_RESOURCE_TYPE_NOT_ENDS_WITH)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getResourceTypeNotEndsWith_JsonNullable() {
    return resourceTypeNotEndsWith;
  }
  
  @JsonProperty(JSON_PROPERTY_RESOURCE_TYPE_NOT_ENDS_WITH)
  public void setResourceTypeNotEndsWith_JsonNullable(JsonNullable<String> resourceTypeNotEndsWith) {
    this.resourceTypeNotEndsWith = resourceTypeNotEndsWith;
  }

  public void setResourceTypeNotEndsWith(String resourceTypeNotEndsWith) {
    this.resourceTypeNotEndsWith = JsonNullable.<String>of(resourceTypeNotEndsWith);
  }


  public GraphWhereInput resourceTypeNotIn(List<String> resourceTypeNotIn) {
    this.resourceTypeNotIn = JsonNullable.<List<String>>of(resourceTypeNotIn);
    return this;
  }

  public GraphWhereInput addResourceTypeNotInItem(String resourceTypeNotInItem) {
    if (this.resourceTypeNotIn == null || !this.resourceTypeNotIn.isPresent()) {
      this.resourceTypeNotIn = JsonNullable.<List<String>>of(new ArrayList<>());
    }
    try {
      this.resourceTypeNotIn.get().add(resourceTypeNotInItem);
    } catch (java.util.NoSuchElementException e) {
      // this can never happen, as we make sure above that the value is present
    }
    return this;
  }

   /**
   * Get resourceTypeNotIn
   * @return resourceTypeNotIn
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public List<String> getResourceTypeNotIn() {
        return resourceTypeNotIn.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_RESOURCE_TYPE_NOT_IN)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<List<String>> getResourceTypeNotIn_JsonNullable() {
    return resourceTypeNotIn;
  }
  
  @JsonProperty(JSON_PROPERTY_RESOURCE_TYPE_NOT_IN)
  public void setResourceTypeNotIn_JsonNullable(JsonNullable<List<String>> resourceTypeNotIn) {
    this.resourceTypeNotIn = resourceTypeNotIn;
  }

  public void setResourceTypeNotIn(List<String> resourceTypeNotIn) {
    this.resourceTypeNotIn = JsonNullable.<List<String>>of(resourceTypeNotIn);
  }


  public GraphWhereInput resourceTypeNotStartsWith(String resourceTypeNotStartsWith) {
    this.resourceTypeNotStartsWith = JsonNullable.<String>of(resourceTypeNotStartsWith);
    return this;
  }

   /**
   * Get resourceTypeNotStartsWith
   * @return resourceTypeNotStartsWith
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getResourceTypeNotStartsWith() {
        return resourceTypeNotStartsWith.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_RESOURCE_TYPE_NOT_STARTS_WITH)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getResourceTypeNotStartsWith_JsonNullable() {
    return resourceTypeNotStartsWith;
  }
  
  @JsonProperty(JSON_PROPERTY_RESOURCE_TYPE_NOT_STARTS_WITH)
  public void setResourceTypeNotStartsWith_JsonNullable(JsonNullable<String> resourceTypeNotStartsWith) {
    this.resourceTypeNotStartsWith = resourceTypeNotStartsWith;
  }

  public void setResourceTypeNotStartsWith(String resourceTypeNotStartsWith) {
    this.resourceTypeNotStartsWith = JsonNullable.<String>of(resourceTypeNotStartsWith);
  }


  public GraphWhereInput resourceTypeStartsWith(String resourceTypeStartsWith) {
    this.resourceTypeStartsWith = JsonNullable.<String>of(resourceTypeStartsWith);
    return this;
  }

   /**
   * Get resourceTypeStartsWith
   * @return resourceTypeStartsWith
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getResourceTypeStartsWith() {
        return resourceTypeStartsWith.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_RESOURCE_TYPE_STARTS_WITH)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getResourceTypeStartsWith_JsonNullable() {
    return resourceTypeStartsWith;
  }
  
  @JsonProperty(JSON_PROPERTY_RESOURCE_TYPE_STARTS_WITH)
  public void setResourceTypeStartsWith_JsonNullable(JsonNullable<String> resourceTypeStartsWith) {
    this.resourceTypeStartsWith = resourceTypeStartsWith;
  }

  public void setResourceTypeStartsWith(String resourceTypeStartsWith) {
    this.resourceTypeStartsWith = JsonNullable.<String>of(resourceTypeStartsWith);
  }


  public GraphWhereInput service(String service) {
    this.service = JsonNullable.<String>of(service);
    return this;
  }

   /**
   * Get service
   * @return service
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getService() {
        return service.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_SERVICE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getService_JsonNullable() {
    return service;
  }
  
  @JsonProperty(JSON_PROPERTY_SERVICE)
  public void setService_JsonNullable(JsonNullable<String> service) {
    this.service = service;
  }

  public void setService(String service) {
    this.service = JsonNullable.<String>of(service);
  }


  public GraphWhereInput serviceContains(String serviceContains) {
    this.serviceContains = JsonNullable.<String>of(serviceContains);
    return this;
  }

   /**
   * Get serviceContains
   * @return serviceContains
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getServiceContains() {
        return serviceContains.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_SERVICE_CONTAINS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getServiceContains_JsonNullable() {
    return serviceContains;
  }
  
  @JsonProperty(JSON_PROPERTY_SERVICE_CONTAINS)
  public void setServiceContains_JsonNullable(JsonNullable<String> serviceContains) {
    this.serviceContains = serviceContains;
  }

  public void setServiceContains(String serviceContains) {
    this.serviceContains = JsonNullable.<String>of(serviceContains);
  }


  public GraphWhereInput serviceEndsWith(String serviceEndsWith) {
    this.serviceEndsWith = JsonNullable.<String>of(serviceEndsWith);
    return this;
  }

   /**
   * Get serviceEndsWith
   * @return serviceEndsWith
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getServiceEndsWith() {
        return serviceEndsWith.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_SERVICE_ENDS_WITH)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getServiceEndsWith_JsonNullable() {
    return serviceEndsWith;
  }
  
  @JsonProperty(JSON_PROPERTY_SERVICE_ENDS_WITH)
  public void setServiceEndsWith_JsonNullable(JsonNullable<String> serviceEndsWith) {
    this.serviceEndsWith = serviceEndsWith;
  }

  public void setServiceEndsWith(String serviceEndsWith) {
    this.serviceEndsWith = JsonNullable.<String>of(serviceEndsWith);
  }


  public GraphWhereInput serviceGt(String serviceGt) {
    this.serviceGt = JsonNullable.<String>of(serviceGt);
    return this;
  }

   /**
   * Get serviceGt
   * @return serviceGt
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getServiceGt() {
        return serviceGt.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_SERVICE_GT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getServiceGt_JsonNullable() {
    return serviceGt;
  }
  
  @JsonProperty(JSON_PROPERTY_SERVICE_GT)
  public void setServiceGt_JsonNullable(JsonNullable<String> serviceGt) {
    this.serviceGt = serviceGt;
  }

  public void setServiceGt(String serviceGt) {
    this.serviceGt = JsonNullable.<String>of(serviceGt);
  }


  public GraphWhereInput serviceGte(String serviceGte) {
    this.serviceGte = JsonNullable.<String>of(serviceGte);
    return this;
  }

   /**
   * Get serviceGte
   * @return serviceGte
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getServiceGte() {
        return serviceGte.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_SERVICE_GTE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getServiceGte_JsonNullable() {
    return serviceGte;
  }
  
  @JsonProperty(JSON_PROPERTY_SERVICE_GTE)
  public void setServiceGte_JsonNullable(JsonNullable<String> serviceGte) {
    this.serviceGte = serviceGte;
  }

  public void setServiceGte(String serviceGte) {
    this.serviceGte = JsonNullable.<String>of(serviceGte);
  }


  public GraphWhereInput serviceIn(List<String> serviceIn) {
    this.serviceIn = JsonNullable.<List<String>>of(serviceIn);
    return this;
  }

  public GraphWhereInput addServiceInItem(String serviceInItem) {
    if (this.serviceIn == null || !this.serviceIn.isPresent()) {
      this.serviceIn = JsonNullable.<List<String>>of(new ArrayList<>());
    }
    try {
      this.serviceIn.get().add(serviceInItem);
    } catch (java.util.NoSuchElementException e) {
      // this can never happen, as we make sure above that the value is present
    }
    return this;
  }

   /**
   * Get serviceIn
   * @return serviceIn
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public List<String> getServiceIn() {
        return serviceIn.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_SERVICE_IN)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<List<String>> getServiceIn_JsonNullable() {
    return serviceIn;
  }
  
  @JsonProperty(JSON_PROPERTY_SERVICE_IN)
  public void setServiceIn_JsonNullable(JsonNullable<List<String>> serviceIn) {
    this.serviceIn = serviceIn;
  }

  public void setServiceIn(List<String> serviceIn) {
    this.serviceIn = JsonNullable.<List<String>>of(serviceIn);
  }


  public GraphWhereInput serviceLt(String serviceLt) {
    this.serviceLt = JsonNullable.<String>of(serviceLt);
    return this;
  }

   /**
   * Get serviceLt
   * @return serviceLt
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getServiceLt() {
        return serviceLt.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_SERVICE_LT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getServiceLt_JsonNullable() {
    return serviceLt;
  }
  
  @JsonProperty(JSON_PROPERTY_SERVICE_LT)
  public void setServiceLt_JsonNullable(JsonNullable<String> serviceLt) {
    this.serviceLt = serviceLt;
  }

  public void setServiceLt(String serviceLt) {
    this.serviceLt = JsonNullable.<String>of(serviceLt);
  }


  public GraphWhereInput serviceLte(String serviceLte) {
    this.serviceLte = JsonNullable.<String>of(serviceLte);
    return this;
  }

   /**
   * Get serviceLte
   * @return serviceLte
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getServiceLte() {
        return serviceLte.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_SERVICE_LTE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getServiceLte_JsonNullable() {
    return serviceLte;
  }
  
  @JsonProperty(JSON_PROPERTY_SERVICE_LTE)
  public void setServiceLte_JsonNullable(JsonNullable<String> serviceLte) {
    this.serviceLte = serviceLte;
  }

  public void setServiceLte(String serviceLte) {
    this.serviceLte = JsonNullable.<String>of(serviceLte);
  }


  public GraphWhereInput serviceNot(String serviceNot) {
    this.serviceNot = JsonNullable.<String>of(serviceNot);
    return this;
  }

   /**
   * Get serviceNot
   * @return serviceNot
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getServiceNot() {
        return serviceNot.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_SERVICE_NOT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getServiceNot_JsonNullable() {
    return serviceNot;
  }
  
  @JsonProperty(JSON_PROPERTY_SERVICE_NOT)
  public void setServiceNot_JsonNullable(JsonNullable<String> serviceNot) {
    this.serviceNot = serviceNot;
  }

  public void setServiceNot(String serviceNot) {
    this.serviceNot = JsonNullable.<String>of(serviceNot);
  }


  public GraphWhereInput serviceNotContains(String serviceNotContains) {
    this.serviceNotContains = JsonNullable.<String>of(serviceNotContains);
    return this;
  }

   /**
   * Get serviceNotContains
   * @return serviceNotContains
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getServiceNotContains() {
        return serviceNotContains.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_SERVICE_NOT_CONTAINS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getServiceNotContains_JsonNullable() {
    return serviceNotContains;
  }
  
  @JsonProperty(JSON_PROPERTY_SERVICE_NOT_CONTAINS)
  public void setServiceNotContains_JsonNullable(JsonNullable<String> serviceNotContains) {
    this.serviceNotContains = serviceNotContains;
  }

  public void setServiceNotContains(String serviceNotContains) {
    this.serviceNotContains = JsonNullable.<String>of(serviceNotContains);
  }


  public GraphWhereInput serviceNotEndsWith(String serviceNotEndsWith) {
    this.serviceNotEndsWith = JsonNullable.<String>of(serviceNotEndsWith);
    return this;
  }

   /**
   * Get serviceNotEndsWith
   * @return serviceNotEndsWith
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getServiceNotEndsWith() {
        return serviceNotEndsWith.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_SERVICE_NOT_ENDS_WITH)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getServiceNotEndsWith_JsonNullable() {
    return serviceNotEndsWith;
  }
  
  @JsonProperty(JSON_PROPERTY_SERVICE_NOT_ENDS_WITH)
  public void setServiceNotEndsWith_JsonNullable(JsonNullable<String> serviceNotEndsWith) {
    this.serviceNotEndsWith = serviceNotEndsWith;
  }

  public void setServiceNotEndsWith(String serviceNotEndsWith) {
    this.serviceNotEndsWith = JsonNullable.<String>of(serviceNotEndsWith);
  }


  public GraphWhereInput serviceNotIn(List<String> serviceNotIn) {
    this.serviceNotIn = JsonNullable.<List<String>>of(serviceNotIn);
    return this;
  }

  public GraphWhereInput addServiceNotInItem(String serviceNotInItem) {
    if (this.serviceNotIn == null || !this.serviceNotIn.isPresent()) {
      this.serviceNotIn = JsonNullable.<List<String>>of(new ArrayList<>());
    }
    try {
      this.serviceNotIn.get().add(serviceNotInItem);
    } catch (java.util.NoSuchElementException e) {
      // this can never happen, as we make sure above that the value is present
    }
    return this;
  }

   /**
   * Get serviceNotIn
   * @return serviceNotIn
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public List<String> getServiceNotIn() {
        return serviceNotIn.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_SERVICE_NOT_IN)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<List<String>> getServiceNotIn_JsonNullable() {
    return serviceNotIn;
  }
  
  @JsonProperty(JSON_PROPERTY_SERVICE_NOT_IN)
  public void setServiceNotIn_JsonNullable(JsonNullable<List<String>> serviceNotIn) {
    this.serviceNotIn = serviceNotIn;
  }

  public void setServiceNotIn(List<String> serviceNotIn) {
    this.serviceNotIn = JsonNullable.<List<String>>of(serviceNotIn);
  }


  public GraphWhereInput serviceNotStartsWith(String serviceNotStartsWith) {
    this.serviceNotStartsWith = JsonNullable.<String>of(serviceNotStartsWith);
    return this;
  }

   /**
   * Get serviceNotStartsWith
   * @return serviceNotStartsWith
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getServiceNotStartsWith() {
        return serviceNotStartsWith.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_SERVICE_NOT_STARTS_WITH)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getServiceNotStartsWith_JsonNullable() {
    return serviceNotStartsWith;
  }
  
  @JsonProperty(JSON_PROPERTY_SERVICE_NOT_STARTS_WITH)
  public void setServiceNotStartsWith_JsonNullable(JsonNullable<String> serviceNotStartsWith) {
    this.serviceNotStartsWith = serviceNotStartsWith;
  }

  public void setServiceNotStartsWith(String serviceNotStartsWith) {
    this.serviceNotStartsWith = JsonNullable.<String>of(serviceNotStartsWith);
  }


  public GraphWhereInput serviceStartsWith(String serviceStartsWith) {
    this.serviceStartsWith = JsonNullable.<String>of(serviceStartsWith);
    return this;
  }

   /**
   * Get serviceStartsWith
   * @return serviceStartsWith
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getServiceStartsWith() {
        return serviceStartsWith.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_SERVICE_STARTS_WITH)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getServiceStartsWith_JsonNullable() {
    return serviceStartsWith;
  }
  
  @JsonProperty(JSON_PROPERTY_SERVICE_STARTS_WITH)
  public void setServiceStartsWith_JsonNullable(JsonNullable<String> serviceStartsWith) {
    this.serviceStartsWith = serviceStartsWith;
  }

  public void setServiceStartsWith(String serviceStartsWith) {
    this.serviceStartsWith = JsonNullable.<String>of(serviceStartsWith);
  }


  public GraphWhereInput title(String title) {
    this.title = JsonNullable.<String>of(title);
    return this;
  }

   /**
   * Get title
   * @return title
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getTitle() {
        return title.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_TITLE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getTitle_JsonNullable() {
    return title;
  }
  
  @JsonProperty(JSON_PROPERTY_TITLE)
  public void setTitle_JsonNullable(JsonNullable<String> title) {
    this.title = title;
  }

  public void setTitle(String title) {
    this.title = JsonNullable.<String>of(title);
  }


  public GraphWhereInput titleContains(String titleContains) {
    this.titleContains = JsonNullable.<String>of(titleContains);
    return this;
  }

   /**
   * Get titleContains
   * @return titleContains
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getTitleContains() {
        return titleContains.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_TITLE_CONTAINS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getTitleContains_JsonNullable() {
    return titleContains;
  }
  
  @JsonProperty(JSON_PROPERTY_TITLE_CONTAINS)
  public void setTitleContains_JsonNullable(JsonNullable<String> titleContains) {
    this.titleContains = titleContains;
  }

  public void setTitleContains(String titleContains) {
    this.titleContains = JsonNullable.<String>of(titleContains);
  }


  public GraphWhereInput titleEndsWith(String titleEndsWith) {
    this.titleEndsWith = JsonNullable.<String>of(titleEndsWith);
    return this;
  }

   /**
   * Get titleEndsWith
   * @return titleEndsWith
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getTitleEndsWith() {
        return titleEndsWith.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_TITLE_ENDS_WITH)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getTitleEndsWith_JsonNullable() {
    return titleEndsWith;
  }
  
  @JsonProperty(JSON_PROPERTY_TITLE_ENDS_WITH)
  public void setTitleEndsWith_JsonNullable(JsonNullable<String> titleEndsWith) {
    this.titleEndsWith = titleEndsWith;
  }

  public void setTitleEndsWith(String titleEndsWith) {
    this.titleEndsWith = JsonNullable.<String>of(titleEndsWith);
  }


  public GraphWhereInput titleGt(String titleGt) {
    this.titleGt = JsonNullable.<String>of(titleGt);
    return this;
  }

   /**
   * Get titleGt
   * @return titleGt
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getTitleGt() {
        return titleGt.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_TITLE_GT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getTitleGt_JsonNullable() {
    return titleGt;
  }
  
  @JsonProperty(JSON_PROPERTY_TITLE_GT)
  public void setTitleGt_JsonNullable(JsonNullable<String> titleGt) {
    this.titleGt = titleGt;
  }

  public void setTitleGt(String titleGt) {
    this.titleGt = JsonNullable.<String>of(titleGt);
  }


  public GraphWhereInput titleGte(String titleGte) {
    this.titleGte = JsonNullable.<String>of(titleGte);
    return this;
  }

   /**
   * Get titleGte
   * @return titleGte
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getTitleGte() {
        return titleGte.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_TITLE_GTE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getTitleGte_JsonNullable() {
    return titleGte;
  }
  
  @JsonProperty(JSON_PROPERTY_TITLE_GTE)
  public void setTitleGte_JsonNullable(JsonNullable<String> titleGte) {
    this.titleGte = titleGte;
  }

  public void setTitleGte(String titleGte) {
    this.titleGte = JsonNullable.<String>of(titleGte);
  }


  public GraphWhereInput titleIn(List<String> titleIn) {
    this.titleIn = JsonNullable.<List<String>>of(titleIn);
    return this;
  }

  public GraphWhereInput addTitleInItem(String titleInItem) {
    if (this.titleIn == null || !this.titleIn.isPresent()) {
      this.titleIn = JsonNullable.<List<String>>of(new ArrayList<>());
    }
    try {
      this.titleIn.get().add(titleInItem);
    } catch (java.util.NoSuchElementException e) {
      // this can never happen, as we make sure above that the value is present
    }
    return this;
  }

   /**
   * Get titleIn
   * @return titleIn
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public List<String> getTitleIn() {
        return titleIn.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_TITLE_IN)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<List<String>> getTitleIn_JsonNullable() {
    return titleIn;
  }
  
  @JsonProperty(JSON_PROPERTY_TITLE_IN)
  public void setTitleIn_JsonNullable(JsonNullable<List<String>> titleIn) {
    this.titleIn = titleIn;
  }

  public void setTitleIn(List<String> titleIn) {
    this.titleIn = JsonNullable.<List<String>>of(titleIn);
  }


  public GraphWhereInput titleLt(String titleLt) {
    this.titleLt = JsonNullable.<String>of(titleLt);
    return this;
  }

   /**
   * Get titleLt
   * @return titleLt
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getTitleLt() {
        return titleLt.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_TITLE_LT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getTitleLt_JsonNullable() {
    return titleLt;
  }
  
  @JsonProperty(JSON_PROPERTY_TITLE_LT)
  public void setTitleLt_JsonNullable(JsonNullable<String> titleLt) {
    this.titleLt = titleLt;
  }

  public void setTitleLt(String titleLt) {
    this.titleLt = JsonNullable.<String>of(titleLt);
  }


  public GraphWhereInput titleLte(String titleLte) {
    this.titleLte = JsonNullable.<String>of(titleLte);
    return this;
  }

   /**
   * Get titleLte
   * @return titleLte
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getTitleLte() {
        return titleLte.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_TITLE_LTE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getTitleLte_JsonNullable() {
    return titleLte;
  }
  
  @JsonProperty(JSON_PROPERTY_TITLE_LTE)
  public void setTitleLte_JsonNullable(JsonNullable<String> titleLte) {
    this.titleLte = titleLte;
  }

  public void setTitleLte(String titleLte) {
    this.titleLte = JsonNullable.<String>of(titleLte);
  }


  public GraphWhereInput titleNot(String titleNot) {
    this.titleNot = JsonNullable.<String>of(titleNot);
    return this;
  }

   /**
   * Get titleNot
   * @return titleNot
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getTitleNot() {
        return titleNot.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_TITLE_NOT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getTitleNot_JsonNullable() {
    return titleNot;
  }
  
  @JsonProperty(JSON_PROPERTY_TITLE_NOT)
  public void setTitleNot_JsonNullable(JsonNullable<String> titleNot) {
    this.titleNot = titleNot;
  }

  public void setTitleNot(String titleNot) {
    this.titleNot = JsonNullable.<String>of(titleNot);
  }


  public GraphWhereInput titleNotContains(String titleNotContains) {
    this.titleNotContains = JsonNullable.<String>of(titleNotContains);
    return this;
  }

   /**
   * Get titleNotContains
   * @return titleNotContains
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getTitleNotContains() {
        return titleNotContains.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_TITLE_NOT_CONTAINS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getTitleNotContains_JsonNullable() {
    return titleNotContains;
  }
  
  @JsonProperty(JSON_PROPERTY_TITLE_NOT_CONTAINS)
  public void setTitleNotContains_JsonNullable(JsonNullable<String> titleNotContains) {
    this.titleNotContains = titleNotContains;
  }

  public void setTitleNotContains(String titleNotContains) {
    this.titleNotContains = JsonNullable.<String>of(titleNotContains);
  }


  public GraphWhereInput titleNotEndsWith(String titleNotEndsWith) {
    this.titleNotEndsWith = JsonNullable.<String>of(titleNotEndsWith);
    return this;
  }

   /**
   * Get titleNotEndsWith
   * @return titleNotEndsWith
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getTitleNotEndsWith() {
        return titleNotEndsWith.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_TITLE_NOT_ENDS_WITH)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getTitleNotEndsWith_JsonNullable() {
    return titleNotEndsWith;
  }
  
  @JsonProperty(JSON_PROPERTY_TITLE_NOT_ENDS_WITH)
  public void setTitleNotEndsWith_JsonNullable(JsonNullable<String> titleNotEndsWith) {
    this.titleNotEndsWith = titleNotEndsWith;
  }

  public void setTitleNotEndsWith(String titleNotEndsWith) {
    this.titleNotEndsWith = JsonNullable.<String>of(titleNotEndsWith);
  }


  public GraphWhereInput titleNotIn(List<String> titleNotIn) {
    this.titleNotIn = JsonNullable.<List<String>>of(titleNotIn);
    return this;
  }

  public GraphWhereInput addTitleNotInItem(String titleNotInItem) {
    if (this.titleNotIn == null || !this.titleNotIn.isPresent()) {
      this.titleNotIn = JsonNullable.<List<String>>of(new ArrayList<>());
    }
    try {
      this.titleNotIn.get().add(titleNotInItem);
    } catch (java.util.NoSuchElementException e) {
      // this can never happen, as we make sure above that the value is present
    }
    return this;
  }

   /**
   * Get titleNotIn
   * @return titleNotIn
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public List<String> getTitleNotIn() {
        return titleNotIn.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_TITLE_NOT_IN)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<List<String>> getTitleNotIn_JsonNullable() {
    return titleNotIn;
  }
  
  @JsonProperty(JSON_PROPERTY_TITLE_NOT_IN)
  public void setTitleNotIn_JsonNullable(JsonNullable<List<String>> titleNotIn) {
    this.titleNotIn = titleNotIn;
  }

  public void setTitleNotIn(List<String> titleNotIn) {
    this.titleNotIn = JsonNullable.<List<String>>of(titleNotIn);
  }


  public GraphWhereInput titleNotStartsWith(String titleNotStartsWith) {
    this.titleNotStartsWith = JsonNullable.<String>of(titleNotStartsWith);
    return this;
  }

   /**
   * Get titleNotStartsWith
   * @return titleNotStartsWith
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getTitleNotStartsWith() {
        return titleNotStartsWith.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_TITLE_NOT_STARTS_WITH)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getTitleNotStartsWith_JsonNullable() {
    return titleNotStartsWith;
  }
  
  @JsonProperty(JSON_PROPERTY_TITLE_NOT_STARTS_WITH)
  public void setTitleNotStartsWith_JsonNullable(JsonNullable<String> titleNotStartsWith) {
    this.titleNotStartsWith = titleNotStartsWith;
  }

  public void setTitleNotStartsWith(String titleNotStartsWith) {
    this.titleNotStartsWith = JsonNullable.<String>of(titleNotStartsWith);
  }


  public GraphWhereInput titleStartsWith(String titleStartsWith) {
    this.titleStartsWith = JsonNullable.<String>of(titleStartsWith);
    return this;
  }

   /**
   * Get titleStartsWith
   * @return titleStartsWith
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getTitleStartsWith() {
        return titleStartsWith.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_TITLE_STARTS_WITH)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getTitleStartsWith_JsonNullable() {
    return titleStartsWith;
  }
  
  @JsonProperty(JSON_PROPERTY_TITLE_STARTS_WITH)
  public void setTitleStartsWith_JsonNullable(JsonNullable<String> titleStartsWith) {
    this.titleStartsWith = titleStartsWith;
  }

  public void setTitleStartsWith(String titleStartsWith) {
    this.titleStartsWith = JsonNullable.<String>of(titleStartsWith);
  }


  public GraphWhereInput type(GraphType type) {
    this.type = JsonNullable.<GraphType>of(type);
    return this;
  }

   /**
   * Get type
   * @return type
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public GraphType getType() {
        return type.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_TYPE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<GraphType> getType_JsonNullable() {
    return type;
  }
  
  @JsonProperty(JSON_PROPERTY_TYPE)
  public void setType_JsonNullable(JsonNullable<GraphType> type) {
    this.type = type;
  }

  public void setType(GraphType type) {
    this.type = JsonNullable.<GraphType>of(type);
  }


  public GraphWhereInput typeIn(List<GraphType> typeIn) {
    this.typeIn = JsonNullable.<List<GraphType>>of(typeIn);
    return this;
  }

  public GraphWhereInput addTypeInItem(GraphType typeInItem) {
    if (this.typeIn == null || !this.typeIn.isPresent()) {
      this.typeIn = JsonNullable.<List<GraphType>>of(new ArrayList<>());
    }
    try {
      this.typeIn.get().add(typeInItem);
    } catch (java.util.NoSuchElementException e) {
      // this can never happen, as we make sure above that the value is present
    }
    return this;
  }

   /**
   * Get typeIn
   * @return typeIn
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public List<GraphType> getTypeIn() {
        return typeIn.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_TYPE_IN)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<List<GraphType>> getTypeIn_JsonNullable() {
    return typeIn;
  }
  
  @JsonProperty(JSON_PROPERTY_TYPE_IN)
  public void setTypeIn_JsonNullable(JsonNullable<List<GraphType>> typeIn) {
    this.typeIn = typeIn;
  }

  public void setTypeIn(List<GraphType> typeIn) {
    this.typeIn = JsonNullable.<List<GraphType>>of(typeIn);
  }


  public GraphWhereInput typeNot(GraphType typeNot) {
    this.typeNot = JsonNullable.<GraphType>of(typeNot);
    return this;
  }

   /**
   * Get typeNot
   * @return typeNot
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public GraphType getTypeNot() {
        return typeNot.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_TYPE_NOT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<GraphType> getTypeNot_JsonNullable() {
    return typeNot;
  }
  
  @JsonProperty(JSON_PROPERTY_TYPE_NOT)
  public void setTypeNot_JsonNullable(JsonNullable<GraphType> typeNot) {
    this.typeNot = typeNot;
  }

  public void setTypeNot(GraphType typeNot) {
    this.typeNot = JsonNullable.<GraphType>of(typeNot);
  }


  public GraphWhereInput typeNotIn(List<GraphType> typeNotIn) {
    this.typeNotIn = JsonNullable.<List<GraphType>>of(typeNotIn);
    return this;
  }

  public GraphWhereInput addTypeNotInItem(GraphType typeNotInItem) {
    if (this.typeNotIn == null || !this.typeNotIn.isPresent()) {
      this.typeNotIn = JsonNullable.<List<GraphType>>of(new ArrayList<>());
    }
    try {
      this.typeNotIn.get().add(typeNotInItem);
    } catch (java.util.NoSuchElementException e) {
      // this can never happen, as we make sure above that the value is present
    }
    return this;
  }

   /**
   * Get typeNotIn
   * @return typeNotIn
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public List<GraphType> getTypeNotIn() {
        return typeNotIn.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_TYPE_NOT_IN)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<List<GraphType>> getTypeNotIn_JsonNullable() {
    return typeNotIn;
  }
  
  @JsonProperty(JSON_PROPERTY_TYPE_NOT_IN)
  public void setTypeNotIn_JsonNullable(JsonNullable<List<GraphType>> typeNotIn) {
    this.typeNotIn = typeNotIn;
  }

  public void setTypeNotIn(List<GraphType> typeNotIn) {
    this.typeNotIn = JsonNullable.<List<GraphType>>of(typeNotIn);
  }


  public GraphWhereInput view(ViewWhereInput view) {
    this.view = JsonNullable.<ViewWhereInput>of(view);
    return this;
  }

   /**
   * Get view
   * @return view
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public ViewWhereInput getView() {
        return view.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_VIEW)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<ViewWhereInput> getView_JsonNullable() {
    return view;
  }
  
  @JsonProperty(JSON_PROPERTY_VIEW)
  public void setView_JsonNullable(JsonNullable<ViewWhereInput> view) {
    this.view = view;
  }

  public void setView(ViewWhereInput view) {
    this.view = JsonNullable.<ViewWhereInput>of(view);
  }


  public GraphWhereInput vmNicsEvery(VmNicWhereInput vmNicsEvery) {
    this.vmNicsEvery = JsonNullable.<VmNicWhereInput>of(vmNicsEvery);
    return this;
  }

   /**
   * Get vmNicsEvery
   * @return vmNicsEvery
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public VmNicWhereInput getVmNicsEvery() {
        return vmNicsEvery.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_VM_NICS_EVERY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<VmNicWhereInput> getVmNicsEvery_JsonNullable() {
    return vmNicsEvery;
  }
  
  @JsonProperty(JSON_PROPERTY_VM_NICS_EVERY)
  public void setVmNicsEvery_JsonNullable(JsonNullable<VmNicWhereInput> vmNicsEvery) {
    this.vmNicsEvery = vmNicsEvery;
  }

  public void setVmNicsEvery(VmNicWhereInput vmNicsEvery) {
    this.vmNicsEvery = JsonNullable.<VmNicWhereInput>of(vmNicsEvery);
  }


  public GraphWhereInput vmNicsNone(VmNicWhereInput vmNicsNone) {
    this.vmNicsNone = JsonNullable.<VmNicWhereInput>of(vmNicsNone);
    return this;
  }

   /**
   * Get vmNicsNone
   * @return vmNicsNone
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public VmNicWhereInput getVmNicsNone() {
        return vmNicsNone.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_VM_NICS_NONE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<VmNicWhereInput> getVmNicsNone_JsonNullable() {
    return vmNicsNone;
  }
  
  @JsonProperty(JSON_PROPERTY_VM_NICS_NONE)
  public void setVmNicsNone_JsonNullable(JsonNullable<VmNicWhereInput> vmNicsNone) {
    this.vmNicsNone = vmNicsNone;
  }

  public void setVmNicsNone(VmNicWhereInput vmNicsNone) {
    this.vmNicsNone = JsonNullable.<VmNicWhereInput>of(vmNicsNone);
  }


  public GraphWhereInput vmNicsSome(VmNicWhereInput vmNicsSome) {
    this.vmNicsSome = JsonNullable.<VmNicWhereInput>of(vmNicsSome);
    return this;
  }

   /**
   * Get vmNicsSome
   * @return vmNicsSome
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public VmNicWhereInput getVmNicsSome() {
        return vmNicsSome.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_VM_NICS_SOME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<VmNicWhereInput> getVmNicsSome_JsonNullable() {
    return vmNicsSome;
  }
  
  @JsonProperty(JSON_PROPERTY_VM_NICS_SOME)
  public void setVmNicsSome_JsonNullable(JsonNullable<VmNicWhereInput> vmNicsSome) {
    this.vmNicsSome = vmNicsSome;
  }

  public void setVmNicsSome(VmNicWhereInput vmNicsSome) {
    this.vmNicsSome = JsonNullable.<VmNicWhereInput>of(vmNicsSome);
  }


  public GraphWhereInput vmsEvery(VmWhereInput vmsEvery) {
    this.vmsEvery = JsonNullable.<VmWhereInput>of(vmsEvery);
    return this;
  }

   /**
   * Get vmsEvery
   * @return vmsEvery
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public VmWhereInput getVmsEvery() {
        return vmsEvery.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_VMS_EVERY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<VmWhereInput> getVmsEvery_JsonNullable() {
    return vmsEvery;
  }
  
  @JsonProperty(JSON_PROPERTY_VMS_EVERY)
  public void setVmsEvery_JsonNullable(JsonNullable<VmWhereInput> vmsEvery) {
    this.vmsEvery = vmsEvery;
  }

  public void setVmsEvery(VmWhereInput vmsEvery) {
    this.vmsEvery = JsonNullable.<VmWhereInput>of(vmsEvery);
  }


  public GraphWhereInput vmsNone(VmWhereInput vmsNone) {
    this.vmsNone = JsonNullable.<VmWhereInput>of(vmsNone);
    return this;
  }

   /**
   * Get vmsNone
   * @return vmsNone
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public VmWhereInput getVmsNone() {
        return vmsNone.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_VMS_NONE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<VmWhereInput> getVmsNone_JsonNullable() {
    return vmsNone;
  }
  
  @JsonProperty(JSON_PROPERTY_VMS_NONE)
  public void setVmsNone_JsonNullable(JsonNullable<VmWhereInput> vmsNone) {
    this.vmsNone = vmsNone;
  }

  public void setVmsNone(VmWhereInput vmsNone) {
    this.vmsNone = JsonNullable.<VmWhereInput>of(vmsNone);
  }


  public GraphWhereInput vmsSome(VmWhereInput vmsSome) {
    this.vmsSome = JsonNullable.<VmWhereInput>of(vmsSome);
    return this;
  }

   /**
   * Get vmsSome
   * @return vmsSome
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public VmWhereInput getVmsSome() {
        return vmsSome.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_VMS_SOME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<VmWhereInput> getVmsSome_JsonNullable() {
    return vmsSome;
  }
  
  @JsonProperty(JSON_PROPERTY_VMS_SOME)
  public void setVmsSome_JsonNullable(JsonNullable<VmWhereInput> vmsSome) {
    this.vmsSome = vmsSome;
  }

  public void setVmsSome(VmWhereInput vmsSome) {
    this.vmsSome = JsonNullable.<VmWhereInput>of(vmsSome);
  }


  public GraphWhereInput vmVolumesEvery(VmVolumeWhereInput vmVolumesEvery) {
    this.vmVolumesEvery = JsonNullable.<VmVolumeWhereInput>of(vmVolumesEvery);
    return this;
  }

   /**
   * Get vmVolumesEvery
   * @return vmVolumesEvery
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public VmVolumeWhereInput getVmVolumesEvery() {
        return vmVolumesEvery.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_VM_VOLUMES_EVERY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<VmVolumeWhereInput> getVmVolumesEvery_JsonNullable() {
    return vmVolumesEvery;
  }
  
  @JsonProperty(JSON_PROPERTY_VM_VOLUMES_EVERY)
  public void setVmVolumesEvery_JsonNullable(JsonNullable<VmVolumeWhereInput> vmVolumesEvery) {
    this.vmVolumesEvery = vmVolumesEvery;
  }

  public void setVmVolumesEvery(VmVolumeWhereInput vmVolumesEvery) {
    this.vmVolumesEvery = JsonNullable.<VmVolumeWhereInput>of(vmVolumesEvery);
  }


  public GraphWhereInput vmVolumesNone(VmVolumeWhereInput vmVolumesNone) {
    this.vmVolumesNone = JsonNullable.<VmVolumeWhereInput>of(vmVolumesNone);
    return this;
  }

   /**
   * Get vmVolumesNone
   * @return vmVolumesNone
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public VmVolumeWhereInput getVmVolumesNone() {
        return vmVolumesNone.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_VM_VOLUMES_NONE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<VmVolumeWhereInput> getVmVolumesNone_JsonNullable() {
    return vmVolumesNone;
  }
  
  @JsonProperty(JSON_PROPERTY_VM_VOLUMES_NONE)
  public void setVmVolumesNone_JsonNullable(JsonNullable<VmVolumeWhereInput> vmVolumesNone) {
    this.vmVolumesNone = vmVolumesNone;
  }

  public void setVmVolumesNone(VmVolumeWhereInput vmVolumesNone) {
    this.vmVolumesNone = JsonNullable.<VmVolumeWhereInput>of(vmVolumesNone);
  }


  public GraphWhereInput vmVolumesSome(VmVolumeWhereInput vmVolumesSome) {
    this.vmVolumesSome = JsonNullable.<VmVolumeWhereInput>of(vmVolumesSome);
    return this;
  }

   /**
   * Get vmVolumesSome
   * @return vmVolumesSome
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public VmVolumeWhereInput getVmVolumesSome() {
        return vmVolumesSome.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_VM_VOLUMES_SOME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<VmVolumeWhereInput> getVmVolumesSome_JsonNullable() {
    return vmVolumesSome;
  }
  
  @JsonProperty(JSON_PROPERTY_VM_VOLUMES_SOME)
  public void setVmVolumesSome_JsonNullable(JsonNullable<VmVolumeWhereInput> vmVolumesSome) {
    this.vmVolumesSome = vmVolumesSome;
  }

  public void setVmVolumesSome(VmVolumeWhereInput vmVolumesSome) {
    this.vmVolumesSome = JsonNullable.<VmVolumeWhereInput>of(vmVolumesSome);
  }


  public GraphWhereInput witnessesEvery(WitnessWhereInput witnessesEvery) {
    this.witnessesEvery = JsonNullable.<WitnessWhereInput>of(witnessesEvery);
    return this;
  }

   /**
   * Get witnessesEvery
   * @return witnessesEvery
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public WitnessWhereInput getWitnessesEvery() {
        return witnessesEvery.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_WITNESSES_EVERY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<WitnessWhereInput> getWitnessesEvery_JsonNullable() {
    return witnessesEvery;
  }
  
  @JsonProperty(JSON_PROPERTY_WITNESSES_EVERY)
  public void setWitnessesEvery_JsonNullable(JsonNullable<WitnessWhereInput> witnessesEvery) {
    this.witnessesEvery = witnessesEvery;
  }

  public void setWitnessesEvery(WitnessWhereInput witnessesEvery) {
    this.witnessesEvery = JsonNullable.<WitnessWhereInput>of(witnessesEvery);
  }


  public GraphWhereInput witnessesNone(WitnessWhereInput witnessesNone) {
    this.witnessesNone = JsonNullable.<WitnessWhereInput>of(witnessesNone);
    return this;
  }

   /**
   * Get witnessesNone
   * @return witnessesNone
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public WitnessWhereInput getWitnessesNone() {
        return witnessesNone.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_WITNESSES_NONE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<WitnessWhereInput> getWitnessesNone_JsonNullable() {
    return witnessesNone;
  }
  
  @JsonProperty(JSON_PROPERTY_WITNESSES_NONE)
  public void setWitnessesNone_JsonNullable(JsonNullable<WitnessWhereInput> witnessesNone) {
    this.witnessesNone = witnessesNone;
  }

  public void setWitnessesNone(WitnessWhereInput witnessesNone) {
    this.witnessesNone = JsonNullable.<WitnessWhereInput>of(witnessesNone);
  }


  public GraphWhereInput witnessesSome(WitnessWhereInput witnessesSome) {
    this.witnessesSome = JsonNullable.<WitnessWhereInput>of(witnessesSome);
    return this;
  }

   /**
   * Get witnessesSome
   * @return witnessesSome
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public WitnessWhereInput getWitnessesSome() {
        return witnessesSome.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_WITNESSES_SOME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<WitnessWhereInput> getWitnessesSome_JsonNullable() {
    return witnessesSome;
  }
  
  @JsonProperty(JSON_PROPERTY_WITNESSES_SOME)
  public void setWitnessesSome_JsonNullable(JsonNullable<WitnessWhereInput> witnessesSome) {
    this.witnessesSome = witnessesSome;
  }

  public void setWitnessesSome(WitnessWhereInput witnessesSome) {
    this.witnessesSome = JsonNullable.<WitnessWhereInput>of(witnessesSome);
  }


  public GraphWhereInput zonesEvery(ZoneWhereInput zonesEvery) {
    this.zonesEvery = JsonNullable.<ZoneWhereInput>of(zonesEvery);
    return this;
  }

   /**
   * Get zonesEvery
   * @return zonesEvery
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public ZoneWhereInput getZonesEvery() {
        return zonesEvery.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_ZONES_EVERY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<ZoneWhereInput> getZonesEvery_JsonNullable() {
    return zonesEvery;
  }
  
  @JsonProperty(JSON_PROPERTY_ZONES_EVERY)
  public void setZonesEvery_JsonNullable(JsonNullable<ZoneWhereInput> zonesEvery) {
    this.zonesEvery = zonesEvery;
  }

  public void setZonesEvery(ZoneWhereInput zonesEvery) {
    this.zonesEvery = JsonNullable.<ZoneWhereInput>of(zonesEvery);
  }


  public GraphWhereInput zonesNone(ZoneWhereInput zonesNone) {
    this.zonesNone = JsonNullable.<ZoneWhereInput>of(zonesNone);
    return this;
  }

   /**
   * Get zonesNone
   * @return zonesNone
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public ZoneWhereInput getZonesNone() {
        return zonesNone.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_ZONES_NONE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<ZoneWhereInput> getZonesNone_JsonNullable() {
    return zonesNone;
  }
  
  @JsonProperty(JSON_PROPERTY_ZONES_NONE)
  public void setZonesNone_JsonNullable(JsonNullable<ZoneWhereInput> zonesNone) {
    this.zonesNone = zonesNone;
  }

  public void setZonesNone(ZoneWhereInput zonesNone) {
    this.zonesNone = JsonNullable.<ZoneWhereInput>of(zonesNone);
  }


  public GraphWhereInput zonesSome(ZoneWhereInput zonesSome) {
    this.zonesSome = JsonNullable.<ZoneWhereInput>of(zonesSome);
    return this;
  }

   /**
   * Get zonesSome
   * @return zonesSome
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public ZoneWhereInput getZonesSome() {
        return zonesSome.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_ZONES_SOME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<ZoneWhereInput> getZonesSome_JsonNullable() {
    return zonesSome;
  }
  
  @JsonProperty(JSON_PROPERTY_ZONES_SOME)
  public void setZonesSome_JsonNullable(JsonNullable<ZoneWhereInput> zonesSome) {
    this.zonesSome = zonesSome;
  }

  public void setZonesSome(ZoneWhereInput zonesSome) {
    this.zonesSome = JsonNullable.<ZoneWhereInput>of(zonesSome);
  }


  /**
   * Return true if this GraphWhereInput object is equal to o.
   */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    GraphWhereInput graphWhereInput = (GraphWhereInput) o;
    return equalsNullable(this.AND, graphWhereInput.AND) &&
        equalsNullable(this.cluster, graphWhereInput.cluster) &&
        equalsNullable(this.disksEvery, graphWhereInput.disksEvery) &&
        equalsNullable(this.disksNone, graphWhereInput.disksNone) &&
        equalsNullable(this.disksSome, graphWhereInput.disksSome) &&
        equalsNullable(this.entityAsyncStatus, graphWhereInput.entityAsyncStatus) &&
        equalsNullable(this.entityAsyncStatusIn, graphWhereInput.entityAsyncStatusIn) &&
        equalsNullable(this.entityAsyncStatusNot, graphWhereInput.entityAsyncStatusNot) &&
        equalsNullable(this.entityAsyncStatusNotIn, graphWhereInput.entityAsyncStatusNotIn) &&
        equalsNullable(this.hostsEvery, graphWhereInput.hostsEvery) &&
        equalsNullable(this.hostsNone, graphWhereInput.hostsNone) &&
        equalsNullable(this.hostsSome, graphWhereInput.hostsSome) &&
        equalsNullable(this.id, graphWhereInput.id) &&
        equalsNullable(this.idContains, graphWhereInput.idContains) &&
        equalsNullable(this.idEndsWith, graphWhereInput.idEndsWith) &&
        equalsNullable(this.idGt, graphWhereInput.idGt) &&
        equalsNullable(this.idGte, graphWhereInput.idGte) &&
        equalsNullable(this.idIn, graphWhereInput.idIn) &&
        equalsNullable(this.idLt, graphWhereInput.idLt) &&
        equalsNullable(this.idLte, graphWhereInput.idLte) &&
        equalsNullable(this.idNot, graphWhereInput.idNot) &&
        equalsNullable(this.idNotContains, graphWhereInput.idNotContains) &&
        equalsNullable(this.idNotEndsWith, graphWhereInput.idNotEndsWith) &&
        equalsNullable(this.idNotIn, graphWhereInput.idNotIn) &&
        equalsNullable(this.idNotStartsWith, graphWhereInput.idNotStartsWith) &&
        equalsNullable(this.idStartsWith, graphWhereInput.idStartsWith) &&
        equalsNullable(this.localId, graphWhereInput.localId) &&
        equalsNullable(this.localIdContains, graphWhereInput.localIdContains) &&
        equalsNullable(this.localIdEndsWith, graphWhereInput.localIdEndsWith) &&
        equalsNullable(this.localIdGt, graphWhereInput.localIdGt) &&
        equalsNullable(this.localIdGte, graphWhereInput.localIdGte) &&
        equalsNullable(this.localIdIn, graphWhereInput.localIdIn) &&
        equalsNullable(this.localIdLt, graphWhereInput.localIdLt) &&
        equalsNullable(this.localIdLte, graphWhereInput.localIdLte) &&
        equalsNullable(this.localIdNot, graphWhereInput.localIdNot) &&
        equalsNullable(this.localIdNotContains, graphWhereInput.localIdNotContains) &&
        equalsNullable(this.localIdNotEndsWith, graphWhereInput.localIdNotEndsWith) &&
        equalsNullable(this.localIdNotIn, graphWhereInput.localIdNotIn) &&
        equalsNullable(this.localIdNotStartsWith, graphWhereInput.localIdNotStartsWith) &&
        equalsNullable(this.localIdStartsWith, graphWhereInput.localIdStartsWith) &&
        equalsNullable(this.lunsEvery, graphWhereInput.lunsEvery) &&
        equalsNullable(this.lunsNone, graphWhereInput.lunsNone) &&
        equalsNullable(this.lunsSome, graphWhereInput.lunsSome) &&
        equalsNullable(this.metricCount, graphWhereInput.metricCount) &&
        equalsNullable(this.metricCountGt, graphWhereInput.metricCountGt) &&
        equalsNullable(this.metricCountGte, graphWhereInput.metricCountGte) &&
        equalsNullable(this.metricCountIn, graphWhereInput.metricCountIn) &&
        equalsNullable(this.metricCountLt, graphWhereInput.metricCountLt) &&
        equalsNullable(this.metricCountLte, graphWhereInput.metricCountLte) &&
        equalsNullable(this.metricCountNot, graphWhereInput.metricCountNot) &&
        equalsNullable(this.metricCountNotIn, graphWhereInput.metricCountNotIn) &&
        equalsNullable(this.metricName, graphWhereInput.metricName) &&
        equalsNullable(this.metricNameContains, graphWhereInput.metricNameContains) &&
        equalsNullable(this.metricNameEndsWith, graphWhereInput.metricNameEndsWith) &&
        equalsNullable(this.metricNameGt, graphWhereInput.metricNameGt) &&
        equalsNullable(this.metricNameGte, graphWhereInput.metricNameGte) &&
        equalsNullable(this.metricNameIn, graphWhereInput.metricNameIn) &&
        equalsNullable(this.metricNameLt, graphWhereInput.metricNameLt) &&
        equalsNullable(this.metricNameLte, graphWhereInput.metricNameLte) &&
        equalsNullable(this.metricNameNot, graphWhereInput.metricNameNot) &&
        equalsNullable(this.metricNameNotContains, graphWhereInput.metricNameNotContains) &&
        equalsNullable(this.metricNameNotEndsWith, graphWhereInput.metricNameNotEndsWith) &&
        equalsNullable(this.metricNameNotIn, graphWhereInput.metricNameNotIn) &&
        equalsNullable(this.metricNameNotStartsWith, graphWhereInput.metricNameNotStartsWith) &&
        equalsNullable(this.metricNameStartsWith, graphWhereInput.metricNameStartsWith) &&
        equalsNullable(this.metricType, graphWhereInput.metricType) &&
        equalsNullable(this.metricTypeIn, graphWhereInput.metricTypeIn) &&
        equalsNullable(this.metricTypeNot, graphWhereInput.metricTypeNot) &&
        equalsNullable(this.metricTypeNotIn, graphWhereInput.metricTypeNotIn) &&
        equalsNullable(this.namespacesEvery, graphWhereInput.namespacesEvery) &&
        equalsNullable(this.namespacesNone, graphWhereInput.namespacesNone) &&
        equalsNullable(this.namespacesSome, graphWhereInput.namespacesSome) &&
        equalsNullable(this.network, graphWhereInput.network) &&
        equalsNullable(this.networkIn, graphWhereInput.networkIn) &&
        equalsNullable(this.networkNot, graphWhereInput.networkNot) &&
        equalsNullable(this.networkNotIn, graphWhereInput.networkNotIn) &&
        equalsNullable(this.nicsEvery, graphWhereInput.nicsEvery) &&
        equalsNullable(this.nicsNone, graphWhereInput.nicsNone) &&
        equalsNullable(this.nicsSome, graphWhereInput.nicsSome) &&
        equalsNullable(this.NOT, graphWhereInput.NOT) &&
        equalsNullable(this.OR, graphWhereInput.OR) &&
        equalsNullable(this.resourceType, graphWhereInput.resourceType) &&
        equalsNullable(this.resourceTypeContains, graphWhereInput.resourceTypeContains) &&
        equalsNullable(this.resourceTypeEndsWith, graphWhereInput.resourceTypeEndsWith) &&
        equalsNullable(this.resourceTypeGt, graphWhereInput.resourceTypeGt) &&
        equalsNullable(this.resourceTypeGte, graphWhereInput.resourceTypeGte) &&
        equalsNullable(this.resourceTypeIn, graphWhereInput.resourceTypeIn) &&
        equalsNullable(this.resourceTypeLt, graphWhereInput.resourceTypeLt) &&
        equalsNullable(this.resourceTypeLte, graphWhereInput.resourceTypeLte) &&
        equalsNullable(this.resourceTypeNot, graphWhereInput.resourceTypeNot) &&
        equalsNullable(this.resourceTypeNotContains, graphWhereInput.resourceTypeNotContains) &&
        equalsNullable(this.resourceTypeNotEndsWith, graphWhereInput.resourceTypeNotEndsWith) &&
        equalsNullable(this.resourceTypeNotIn, graphWhereInput.resourceTypeNotIn) &&
        equalsNullable(this.resourceTypeNotStartsWith, graphWhereInput.resourceTypeNotStartsWith) &&
        equalsNullable(this.resourceTypeStartsWith, graphWhereInput.resourceTypeStartsWith) &&
        equalsNullable(this.service, graphWhereInput.service) &&
        equalsNullable(this.serviceContains, graphWhereInput.serviceContains) &&
        equalsNullable(this.serviceEndsWith, graphWhereInput.serviceEndsWith) &&
        equalsNullable(this.serviceGt, graphWhereInput.serviceGt) &&
        equalsNullable(this.serviceGte, graphWhereInput.serviceGte) &&
        equalsNullable(this.serviceIn, graphWhereInput.serviceIn) &&
        equalsNullable(this.serviceLt, graphWhereInput.serviceLt) &&
        equalsNullable(this.serviceLte, graphWhereInput.serviceLte) &&
        equalsNullable(this.serviceNot, graphWhereInput.serviceNot) &&
        equalsNullable(this.serviceNotContains, graphWhereInput.serviceNotContains) &&
        equalsNullable(this.serviceNotEndsWith, graphWhereInput.serviceNotEndsWith) &&
        equalsNullable(this.serviceNotIn, graphWhereInput.serviceNotIn) &&
        equalsNullable(this.serviceNotStartsWith, graphWhereInput.serviceNotStartsWith) &&
        equalsNullable(this.serviceStartsWith, graphWhereInput.serviceStartsWith) &&
        equalsNullable(this.title, graphWhereInput.title) &&
        equalsNullable(this.titleContains, graphWhereInput.titleContains) &&
        equalsNullable(this.titleEndsWith, graphWhereInput.titleEndsWith) &&
        equalsNullable(this.titleGt, graphWhereInput.titleGt) &&
        equalsNullable(this.titleGte, graphWhereInput.titleGte) &&
        equalsNullable(this.titleIn, graphWhereInput.titleIn) &&
        equalsNullable(this.titleLt, graphWhereInput.titleLt) &&
        equalsNullable(this.titleLte, graphWhereInput.titleLte) &&
        equalsNullable(this.titleNot, graphWhereInput.titleNot) &&
        equalsNullable(this.titleNotContains, graphWhereInput.titleNotContains) &&
        equalsNullable(this.titleNotEndsWith, graphWhereInput.titleNotEndsWith) &&
        equalsNullable(this.titleNotIn, graphWhereInput.titleNotIn) &&
        equalsNullable(this.titleNotStartsWith, graphWhereInput.titleNotStartsWith) &&
        equalsNullable(this.titleStartsWith, graphWhereInput.titleStartsWith) &&
        equalsNullable(this.type, graphWhereInput.type) &&
        equalsNullable(this.typeIn, graphWhereInput.typeIn) &&
        equalsNullable(this.typeNot, graphWhereInput.typeNot) &&
        equalsNullable(this.typeNotIn, graphWhereInput.typeNotIn) &&
        equalsNullable(this.view, graphWhereInput.view) &&
        equalsNullable(this.vmNicsEvery, graphWhereInput.vmNicsEvery) &&
        equalsNullable(this.vmNicsNone, graphWhereInput.vmNicsNone) &&
        equalsNullable(this.vmNicsSome, graphWhereInput.vmNicsSome) &&
        equalsNullable(this.vmsEvery, graphWhereInput.vmsEvery) &&
        equalsNullable(this.vmsNone, graphWhereInput.vmsNone) &&
        equalsNullable(this.vmsSome, graphWhereInput.vmsSome) &&
        equalsNullable(this.vmVolumesEvery, graphWhereInput.vmVolumesEvery) &&
        equalsNullable(this.vmVolumesNone, graphWhereInput.vmVolumesNone) &&
        equalsNullable(this.vmVolumesSome, graphWhereInput.vmVolumesSome) &&
        equalsNullable(this.witnessesEvery, graphWhereInput.witnessesEvery) &&
        equalsNullable(this.witnessesNone, graphWhereInput.witnessesNone) &&
        equalsNullable(this.witnessesSome, graphWhereInput.witnessesSome) &&
        equalsNullable(this.zonesEvery, graphWhereInput.zonesEvery) &&
        equalsNullable(this.zonesNone, graphWhereInput.zonesNone) &&
        equalsNullable(this.zonesSome, graphWhereInput.zonesSome);
  }

  private static <T> boolean equalsNullable(JsonNullable<T> a, JsonNullable<T> b) {
    return a == b || (a != null && b != null && a.isPresent() && b.isPresent() && Objects.deepEquals(a.get(), b.get()));
  }

  @Override
  public int hashCode() {
    return Objects.hash(hashCodeNullable(AND), hashCodeNullable(cluster), hashCodeNullable(disksEvery), hashCodeNullable(disksNone), hashCodeNullable(disksSome), hashCodeNullable(entityAsyncStatus), hashCodeNullable(entityAsyncStatusIn), hashCodeNullable(entityAsyncStatusNot), hashCodeNullable(entityAsyncStatusNotIn), hashCodeNullable(hostsEvery), hashCodeNullable(hostsNone), hashCodeNullable(hostsSome), hashCodeNullable(id), hashCodeNullable(idContains), hashCodeNullable(idEndsWith), hashCodeNullable(idGt), hashCodeNullable(idGte), hashCodeNullable(idIn), hashCodeNullable(idLt), hashCodeNullable(idLte), hashCodeNullable(idNot), hashCodeNullable(idNotContains), hashCodeNullable(idNotEndsWith), hashCodeNullable(idNotIn), hashCodeNullable(idNotStartsWith), hashCodeNullable(idStartsWith), hashCodeNullable(localId), hashCodeNullable(localIdContains), hashCodeNullable(localIdEndsWith), hashCodeNullable(localIdGt), hashCodeNullable(localIdGte), hashCodeNullable(localIdIn), hashCodeNullable(localIdLt), hashCodeNullable(localIdLte), hashCodeNullable(localIdNot), hashCodeNullable(localIdNotContains), hashCodeNullable(localIdNotEndsWith), hashCodeNullable(localIdNotIn), hashCodeNullable(localIdNotStartsWith), hashCodeNullable(localIdStartsWith), hashCodeNullable(lunsEvery), hashCodeNullable(lunsNone), hashCodeNullable(lunsSome), hashCodeNullable(metricCount), hashCodeNullable(metricCountGt), hashCodeNullable(metricCountGte), hashCodeNullable(metricCountIn), hashCodeNullable(metricCountLt), hashCodeNullable(metricCountLte), hashCodeNullable(metricCountNot), hashCodeNullable(metricCountNotIn), hashCodeNullable(metricName), hashCodeNullable(metricNameContains), hashCodeNullable(metricNameEndsWith), hashCodeNullable(metricNameGt), hashCodeNullable(metricNameGte), hashCodeNullable(metricNameIn), hashCodeNullable(metricNameLt), hashCodeNullable(metricNameLte), hashCodeNullable(metricNameNot), hashCodeNullable(metricNameNotContains), hashCodeNullable(metricNameNotEndsWith), hashCodeNullable(metricNameNotIn), hashCodeNullable(metricNameNotStartsWith), hashCodeNullable(metricNameStartsWith), hashCodeNullable(metricType), hashCodeNullable(metricTypeIn), hashCodeNullable(metricTypeNot), hashCodeNullable(metricTypeNotIn), hashCodeNullable(namespacesEvery), hashCodeNullable(namespacesNone), hashCodeNullable(namespacesSome), hashCodeNullable(network), hashCodeNullable(networkIn), hashCodeNullable(networkNot), hashCodeNullable(networkNotIn), hashCodeNullable(nicsEvery), hashCodeNullable(nicsNone), hashCodeNullable(nicsSome), hashCodeNullable(NOT), hashCodeNullable(OR), hashCodeNullable(resourceType), hashCodeNullable(resourceTypeContains), hashCodeNullable(resourceTypeEndsWith), hashCodeNullable(resourceTypeGt), hashCodeNullable(resourceTypeGte), hashCodeNullable(resourceTypeIn), hashCodeNullable(resourceTypeLt), hashCodeNullable(resourceTypeLte), hashCodeNullable(resourceTypeNot), hashCodeNullable(resourceTypeNotContains), hashCodeNullable(resourceTypeNotEndsWith), hashCodeNullable(resourceTypeNotIn), hashCodeNullable(resourceTypeNotStartsWith), hashCodeNullable(resourceTypeStartsWith), hashCodeNullable(service), hashCodeNullable(serviceContains), hashCodeNullable(serviceEndsWith), hashCodeNullable(serviceGt), hashCodeNullable(serviceGte), hashCodeNullable(serviceIn), hashCodeNullable(serviceLt), hashCodeNullable(serviceLte), hashCodeNullable(serviceNot), hashCodeNullable(serviceNotContains), hashCodeNullable(serviceNotEndsWith), hashCodeNullable(serviceNotIn), hashCodeNullable(serviceNotStartsWith), hashCodeNullable(serviceStartsWith), hashCodeNullable(title), hashCodeNullable(titleContains), hashCodeNullable(titleEndsWith), hashCodeNullable(titleGt), hashCodeNullable(titleGte), hashCodeNullable(titleIn), hashCodeNullable(titleLt), hashCodeNullable(titleLte), hashCodeNullable(titleNot), hashCodeNullable(titleNotContains), hashCodeNullable(titleNotEndsWith), hashCodeNullable(titleNotIn), hashCodeNullable(titleNotStartsWith), hashCodeNullable(titleStartsWith), hashCodeNullable(type), hashCodeNullable(typeIn), hashCodeNullable(typeNot), hashCodeNullable(typeNotIn), hashCodeNullable(view), hashCodeNullable(vmNicsEvery), hashCodeNullable(vmNicsNone), hashCodeNullable(vmNicsSome), hashCodeNullable(vmsEvery), hashCodeNullable(vmsNone), hashCodeNullable(vmsSome), hashCodeNullable(vmVolumesEvery), hashCodeNullable(vmVolumesNone), hashCodeNullable(vmVolumesSome), hashCodeNullable(witnessesEvery), hashCodeNullable(witnessesNone), hashCodeNullable(witnessesSome), hashCodeNullable(zonesEvery), hashCodeNullable(zonesNone), hashCodeNullable(zonesSome));
  }

  private static <T> int hashCodeNullable(JsonNullable<T> a) {
    if (a == null) {
      return 1;
    }
    return a.isPresent() ? Arrays.deepHashCode(new Object[]{a.get()}) : 31;
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class GraphWhereInput {\n");
    sb.append("    AND: ").append(toIndentedString(AND)).append("\n");
    sb.append("    cluster: ").append(toIndentedString(cluster)).append("\n");
    sb.append("    disksEvery: ").append(toIndentedString(disksEvery)).append("\n");
    sb.append("    disksNone: ").append(toIndentedString(disksNone)).append("\n");
    sb.append("    disksSome: ").append(toIndentedString(disksSome)).append("\n");
    sb.append("    entityAsyncStatus: ").append(toIndentedString(entityAsyncStatus)).append("\n");
    sb.append("    entityAsyncStatusIn: ").append(toIndentedString(entityAsyncStatusIn)).append("\n");
    sb.append("    entityAsyncStatusNot: ").append(toIndentedString(entityAsyncStatusNot)).append("\n");
    sb.append("    entityAsyncStatusNotIn: ").append(toIndentedString(entityAsyncStatusNotIn)).append("\n");
    sb.append("    hostsEvery: ").append(toIndentedString(hostsEvery)).append("\n");
    sb.append("    hostsNone: ").append(toIndentedString(hostsNone)).append("\n");
    sb.append("    hostsSome: ").append(toIndentedString(hostsSome)).append("\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    idContains: ").append(toIndentedString(idContains)).append("\n");
    sb.append("    idEndsWith: ").append(toIndentedString(idEndsWith)).append("\n");
    sb.append("    idGt: ").append(toIndentedString(idGt)).append("\n");
    sb.append("    idGte: ").append(toIndentedString(idGte)).append("\n");
    sb.append("    idIn: ").append(toIndentedString(idIn)).append("\n");
    sb.append("    idLt: ").append(toIndentedString(idLt)).append("\n");
    sb.append("    idLte: ").append(toIndentedString(idLte)).append("\n");
    sb.append("    idNot: ").append(toIndentedString(idNot)).append("\n");
    sb.append("    idNotContains: ").append(toIndentedString(idNotContains)).append("\n");
    sb.append("    idNotEndsWith: ").append(toIndentedString(idNotEndsWith)).append("\n");
    sb.append("    idNotIn: ").append(toIndentedString(idNotIn)).append("\n");
    sb.append("    idNotStartsWith: ").append(toIndentedString(idNotStartsWith)).append("\n");
    sb.append("    idStartsWith: ").append(toIndentedString(idStartsWith)).append("\n");
    sb.append("    localId: ").append(toIndentedString(localId)).append("\n");
    sb.append("    localIdContains: ").append(toIndentedString(localIdContains)).append("\n");
    sb.append("    localIdEndsWith: ").append(toIndentedString(localIdEndsWith)).append("\n");
    sb.append("    localIdGt: ").append(toIndentedString(localIdGt)).append("\n");
    sb.append("    localIdGte: ").append(toIndentedString(localIdGte)).append("\n");
    sb.append("    localIdIn: ").append(toIndentedString(localIdIn)).append("\n");
    sb.append("    localIdLt: ").append(toIndentedString(localIdLt)).append("\n");
    sb.append("    localIdLte: ").append(toIndentedString(localIdLte)).append("\n");
    sb.append("    localIdNot: ").append(toIndentedString(localIdNot)).append("\n");
    sb.append("    localIdNotContains: ").append(toIndentedString(localIdNotContains)).append("\n");
    sb.append("    localIdNotEndsWith: ").append(toIndentedString(localIdNotEndsWith)).append("\n");
    sb.append("    localIdNotIn: ").append(toIndentedString(localIdNotIn)).append("\n");
    sb.append("    localIdNotStartsWith: ").append(toIndentedString(localIdNotStartsWith)).append("\n");
    sb.append("    localIdStartsWith: ").append(toIndentedString(localIdStartsWith)).append("\n");
    sb.append("    lunsEvery: ").append(toIndentedString(lunsEvery)).append("\n");
    sb.append("    lunsNone: ").append(toIndentedString(lunsNone)).append("\n");
    sb.append("    lunsSome: ").append(toIndentedString(lunsSome)).append("\n");
    sb.append("    metricCount: ").append(toIndentedString(metricCount)).append("\n");
    sb.append("    metricCountGt: ").append(toIndentedString(metricCountGt)).append("\n");
    sb.append("    metricCountGte: ").append(toIndentedString(metricCountGte)).append("\n");
    sb.append("    metricCountIn: ").append(toIndentedString(metricCountIn)).append("\n");
    sb.append("    metricCountLt: ").append(toIndentedString(metricCountLt)).append("\n");
    sb.append("    metricCountLte: ").append(toIndentedString(metricCountLte)).append("\n");
    sb.append("    metricCountNot: ").append(toIndentedString(metricCountNot)).append("\n");
    sb.append("    metricCountNotIn: ").append(toIndentedString(metricCountNotIn)).append("\n");
    sb.append("    metricName: ").append(toIndentedString(metricName)).append("\n");
    sb.append("    metricNameContains: ").append(toIndentedString(metricNameContains)).append("\n");
    sb.append("    metricNameEndsWith: ").append(toIndentedString(metricNameEndsWith)).append("\n");
    sb.append("    metricNameGt: ").append(toIndentedString(metricNameGt)).append("\n");
    sb.append("    metricNameGte: ").append(toIndentedString(metricNameGte)).append("\n");
    sb.append("    metricNameIn: ").append(toIndentedString(metricNameIn)).append("\n");
    sb.append("    metricNameLt: ").append(toIndentedString(metricNameLt)).append("\n");
    sb.append("    metricNameLte: ").append(toIndentedString(metricNameLte)).append("\n");
    sb.append("    metricNameNot: ").append(toIndentedString(metricNameNot)).append("\n");
    sb.append("    metricNameNotContains: ").append(toIndentedString(metricNameNotContains)).append("\n");
    sb.append("    metricNameNotEndsWith: ").append(toIndentedString(metricNameNotEndsWith)).append("\n");
    sb.append("    metricNameNotIn: ").append(toIndentedString(metricNameNotIn)).append("\n");
    sb.append("    metricNameNotStartsWith: ").append(toIndentedString(metricNameNotStartsWith)).append("\n");
    sb.append("    metricNameStartsWith: ").append(toIndentedString(metricNameStartsWith)).append("\n");
    sb.append("    metricType: ").append(toIndentedString(metricType)).append("\n");
    sb.append("    metricTypeIn: ").append(toIndentedString(metricTypeIn)).append("\n");
    sb.append("    metricTypeNot: ").append(toIndentedString(metricTypeNot)).append("\n");
    sb.append("    metricTypeNotIn: ").append(toIndentedString(metricTypeNotIn)).append("\n");
    sb.append("    namespacesEvery: ").append(toIndentedString(namespacesEvery)).append("\n");
    sb.append("    namespacesNone: ").append(toIndentedString(namespacesNone)).append("\n");
    sb.append("    namespacesSome: ").append(toIndentedString(namespacesSome)).append("\n");
    sb.append("    network: ").append(toIndentedString(network)).append("\n");
    sb.append("    networkIn: ").append(toIndentedString(networkIn)).append("\n");
    sb.append("    networkNot: ").append(toIndentedString(networkNot)).append("\n");
    sb.append("    networkNotIn: ").append(toIndentedString(networkNotIn)).append("\n");
    sb.append("    nicsEvery: ").append(toIndentedString(nicsEvery)).append("\n");
    sb.append("    nicsNone: ").append(toIndentedString(nicsNone)).append("\n");
    sb.append("    nicsSome: ").append(toIndentedString(nicsSome)).append("\n");
    sb.append("    NOT: ").append(toIndentedString(NOT)).append("\n");
    sb.append("    OR: ").append(toIndentedString(OR)).append("\n");
    sb.append("    resourceType: ").append(toIndentedString(resourceType)).append("\n");
    sb.append("    resourceTypeContains: ").append(toIndentedString(resourceTypeContains)).append("\n");
    sb.append("    resourceTypeEndsWith: ").append(toIndentedString(resourceTypeEndsWith)).append("\n");
    sb.append("    resourceTypeGt: ").append(toIndentedString(resourceTypeGt)).append("\n");
    sb.append("    resourceTypeGte: ").append(toIndentedString(resourceTypeGte)).append("\n");
    sb.append("    resourceTypeIn: ").append(toIndentedString(resourceTypeIn)).append("\n");
    sb.append("    resourceTypeLt: ").append(toIndentedString(resourceTypeLt)).append("\n");
    sb.append("    resourceTypeLte: ").append(toIndentedString(resourceTypeLte)).append("\n");
    sb.append("    resourceTypeNot: ").append(toIndentedString(resourceTypeNot)).append("\n");
    sb.append("    resourceTypeNotContains: ").append(toIndentedString(resourceTypeNotContains)).append("\n");
    sb.append("    resourceTypeNotEndsWith: ").append(toIndentedString(resourceTypeNotEndsWith)).append("\n");
    sb.append("    resourceTypeNotIn: ").append(toIndentedString(resourceTypeNotIn)).append("\n");
    sb.append("    resourceTypeNotStartsWith: ").append(toIndentedString(resourceTypeNotStartsWith)).append("\n");
    sb.append("    resourceTypeStartsWith: ").append(toIndentedString(resourceTypeStartsWith)).append("\n");
    sb.append("    service: ").append(toIndentedString(service)).append("\n");
    sb.append("    serviceContains: ").append(toIndentedString(serviceContains)).append("\n");
    sb.append("    serviceEndsWith: ").append(toIndentedString(serviceEndsWith)).append("\n");
    sb.append("    serviceGt: ").append(toIndentedString(serviceGt)).append("\n");
    sb.append("    serviceGte: ").append(toIndentedString(serviceGte)).append("\n");
    sb.append("    serviceIn: ").append(toIndentedString(serviceIn)).append("\n");
    sb.append("    serviceLt: ").append(toIndentedString(serviceLt)).append("\n");
    sb.append("    serviceLte: ").append(toIndentedString(serviceLte)).append("\n");
    sb.append("    serviceNot: ").append(toIndentedString(serviceNot)).append("\n");
    sb.append("    serviceNotContains: ").append(toIndentedString(serviceNotContains)).append("\n");
    sb.append("    serviceNotEndsWith: ").append(toIndentedString(serviceNotEndsWith)).append("\n");
    sb.append("    serviceNotIn: ").append(toIndentedString(serviceNotIn)).append("\n");
    sb.append("    serviceNotStartsWith: ").append(toIndentedString(serviceNotStartsWith)).append("\n");
    sb.append("    serviceStartsWith: ").append(toIndentedString(serviceStartsWith)).append("\n");
    sb.append("    title: ").append(toIndentedString(title)).append("\n");
    sb.append("    titleContains: ").append(toIndentedString(titleContains)).append("\n");
    sb.append("    titleEndsWith: ").append(toIndentedString(titleEndsWith)).append("\n");
    sb.append("    titleGt: ").append(toIndentedString(titleGt)).append("\n");
    sb.append("    titleGte: ").append(toIndentedString(titleGte)).append("\n");
    sb.append("    titleIn: ").append(toIndentedString(titleIn)).append("\n");
    sb.append("    titleLt: ").append(toIndentedString(titleLt)).append("\n");
    sb.append("    titleLte: ").append(toIndentedString(titleLte)).append("\n");
    sb.append("    titleNot: ").append(toIndentedString(titleNot)).append("\n");
    sb.append("    titleNotContains: ").append(toIndentedString(titleNotContains)).append("\n");
    sb.append("    titleNotEndsWith: ").append(toIndentedString(titleNotEndsWith)).append("\n");
    sb.append("    titleNotIn: ").append(toIndentedString(titleNotIn)).append("\n");
    sb.append("    titleNotStartsWith: ").append(toIndentedString(titleNotStartsWith)).append("\n");
    sb.append("    titleStartsWith: ").append(toIndentedString(titleStartsWith)).append("\n");
    sb.append("    type: ").append(toIndentedString(type)).append("\n");
    sb.append("    typeIn: ").append(toIndentedString(typeIn)).append("\n");
    sb.append("    typeNot: ").append(toIndentedString(typeNot)).append("\n");
    sb.append("    typeNotIn: ").append(toIndentedString(typeNotIn)).append("\n");
    sb.append("    view: ").append(toIndentedString(view)).append("\n");
    sb.append("    vmNicsEvery: ").append(toIndentedString(vmNicsEvery)).append("\n");
    sb.append("    vmNicsNone: ").append(toIndentedString(vmNicsNone)).append("\n");
    sb.append("    vmNicsSome: ").append(toIndentedString(vmNicsSome)).append("\n");
    sb.append("    vmsEvery: ").append(toIndentedString(vmsEvery)).append("\n");
    sb.append("    vmsNone: ").append(toIndentedString(vmsNone)).append("\n");
    sb.append("    vmsSome: ").append(toIndentedString(vmsSome)).append("\n");
    sb.append("    vmVolumesEvery: ").append(toIndentedString(vmVolumesEvery)).append("\n");
    sb.append("    vmVolumesNone: ").append(toIndentedString(vmVolumesNone)).append("\n");
    sb.append("    vmVolumesSome: ").append(toIndentedString(vmVolumesSome)).append("\n");
    sb.append("    witnessesEvery: ").append(toIndentedString(witnessesEvery)).append("\n");
    sb.append("    witnessesNone: ").append(toIndentedString(witnessesNone)).append("\n");
    sb.append("    witnessesSome: ").append(toIndentedString(witnessesSome)).append("\n");
    sb.append("    zonesEvery: ").append(toIndentedString(zonesEvery)).append("\n");
    sb.append("    zonesNone: ").append(toIndentedString(zonesNone)).append("\n");
    sb.append("    zonesSome: ").append(toIndentedString(zonesSome)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

