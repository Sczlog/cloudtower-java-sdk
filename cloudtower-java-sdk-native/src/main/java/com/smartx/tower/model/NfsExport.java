/*
 * Tower SDK API
 * cloudtower operation API and SDK
 *
 * The version of the OpenAPI document: 1.7.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.smartx.tower.model;

import java.util.Objects;
import java.util.Arrays;
import java.util.Map;
import java.util.HashMap;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import com.smartx.tower.model.AlertRuleCluster;
import com.smartx.tower.model.BrickTopoPowers;
import com.smartx.tower.model.EntityAsyncStatus;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.util.ArrayList;
import java.util.List;
import org.openapitools.jackson.nullable.JsonNullable;
import com.fasterxml.jackson.annotation.JsonIgnore;
import org.openapitools.jackson.nullable.JsonNullable;
import java.util.NoSuchElementException;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;


/**
 * NfsExport
 */
@JsonPropertyOrder({
  NfsExport.JSON_PROPERTY_CLUSTER,
  NfsExport.JSON_PROPERTY_DESCRIPTION,
  NfsExport.JSON_PROPERTY_ENTITY_ASYNC_STATUS,
  NfsExport.JSON_PROPERTY_EXPORT_INODE_ID,
  NfsExport.JSON_PROPERTY_ID,
  NfsExport.JSON_PROPERTY_INODES,
  NfsExport.JSON_PROPERTY_INTERNAL,
  NfsExport.JSON_PROPERTY_IP_WHITELIST,
  NfsExport.JSON_PROPERTY_LABELS,
  NfsExport.JSON_PROPERTY_LOCAL_ID,
  NfsExport.JSON_PROPERTY_NAME,
  NfsExport.JSON_PROPERTY_REPLICA_NUM,
  NfsExport.JSON_PROPERTY_THIN_PROVISION
})
@javax.annotation.processing.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2021-10-27T15:59:14.939791800+08:00[Asia/Shanghai]")
public class NfsExport {
  public static final String JSON_PROPERTY_CLUSTER = "cluster";
  private AlertRuleCluster cluster;

  public static final String JSON_PROPERTY_DESCRIPTION = "description";
  private String description;

  public static final String JSON_PROPERTY_ENTITY_ASYNC_STATUS = "entityAsyncStatus";
  private JsonNullable<EntityAsyncStatus> entityAsyncStatus = JsonNullable.<EntityAsyncStatus>undefined();

  public static final String JSON_PROPERTY_EXPORT_INODE_ID = "export_inode_id";
  private String exportInodeId;

  public static final String JSON_PROPERTY_ID = "id";
  private String id;

  public static final String JSON_PROPERTY_INODES = "inodes";
  private JsonNullable<List<AlertRuleCluster>> inodes = JsonNullable.<List<AlertRuleCluster>>undefined();

  public static final String JSON_PROPERTY_INTERNAL = "internal";
  private Boolean internal;

  public static final String JSON_PROPERTY_IP_WHITELIST = "ip_whitelist";
  private String ipWhitelist;

  public static final String JSON_PROPERTY_LABELS = "labels";
  private JsonNullable<List<BrickTopoPowers>> labels = JsonNullable.<List<BrickTopoPowers>>undefined();

  public static final String JSON_PROPERTY_LOCAL_ID = "local_id";
  private String localId;

  public static final String JSON_PROPERTY_NAME = "name";
  private String name;

  public static final String JSON_PROPERTY_REPLICA_NUM = "replica_num";
  private Double replicaNum;

  public static final String JSON_PROPERTY_THIN_PROVISION = "thin_provision";
  private Boolean thinProvision;


  public NfsExport cluster(AlertRuleCluster cluster) {
    this.cluster = cluster;
    return this;
  }

   /**
   * Get cluster
   * @return cluster
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")
  @JsonProperty(JSON_PROPERTY_CLUSTER)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public AlertRuleCluster getCluster() {
    return cluster;
  }


  @JsonProperty(JSON_PROPERTY_CLUSTER)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setCluster(AlertRuleCluster cluster) {
    this.cluster = cluster;
  }


  public NfsExport description(String description) {
    this.description = description;
    return this;
  }

   /**
   * Get description
   * @return description
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")
  @JsonProperty(JSON_PROPERTY_DESCRIPTION)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getDescription() {
    return description;
  }


  @JsonProperty(JSON_PROPERTY_DESCRIPTION)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setDescription(String description) {
    this.description = description;
  }


  public NfsExport entityAsyncStatus(EntityAsyncStatus entityAsyncStatus) {
    this.entityAsyncStatus = JsonNullable.<EntityAsyncStatus>of(entityAsyncStatus);
    return this;
  }

   /**
   * Get entityAsyncStatus
   * @return entityAsyncStatus
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public EntityAsyncStatus getEntityAsyncStatus() {
        return entityAsyncStatus.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_ENTITY_ASYNC_STATUS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<EntityAsyncStatus> getEntityAsyncStatus_JsonNullable() {
    return entityAsyncStatus;
  }
  
  @JsonProperty(JSON_PROPERTY_ENTITY_ASYNC_STATUS)
  public void setEntityAsyncStatus_JsonNullable(JsonNullable<EntityAsyncStatus> entityAsyncStatus) {
    this.entityAsyncStatus = entityAsyncStatus;
  }

  public void setEntityAsyncStatus(EntityAsyncStatus entityAsyncStatus) {
    this.entityAsyncStatus = JsonNullable.<EntityAsyncStatus>of(entityAsyncStatus);
  }


  public NfsExport exportInodeId(String exportInodeId) {
    this.exportInodeId = exportInodeId;
    return this;
  }

   /**
   * Get exportInodeId
   * @return exportInodeId
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")
  @JsonProperty(JSON_PROPERTY_EXPORT_INODE_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getExportInodeId() {
    return exportInodeId;
  }


  @JsonProperty(JSON_PROPERTY_EXPORT_INODE_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setExportInodeId(String exportInodeId) {
    this.exportInodeId = exportInodeId;
  }


  public NfsExport id(String id) {
    this.id = id;
    return this;
  }

   /**
   * Get id
   * @return id
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")
  @JsonProperty(JSON_PROPERTY_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getId() {
    return id;
  }


  @JsonProperty(JSON_PROPERTY_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setId(String id) {
    this.id = id;
  }


  public NfsExport inodes(List<AlertRuleCluster> inodes) {
    this.inodes = JsonNullable.<List<AlertRuleCluster>>of(inodes);
    return this;
  }

  public NfsExport addInodesItem(AlertRuleCluster inodesItem) {
    if (this.inodes == null || !this.inodes.isPresent()) {
      this.inodes = JsonNullable.<List<AlertRuleCluster>>of(new ArrayList<>());
    }
    try {
      this.inodes.get().add(inodesItem);
    } catch (java.util.NoSuchElementException e) {
      // this can never happen, as we make sure above that the value is present
    }
    return this;
  }

   /**
   * Get inodes
   * @return inodes
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public List<AlertRuleCluster> getInodes() {
        return inodes.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_INODES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<List<AlertRuleCluster>> getInodes_JsonNullable() {
    return inodes;
  }
  
  @JsonProperty(JSON_PROPERTY_INODES)
  public void setInodes_JsonNullable(JsonNullable<List<AlertRuleCluster>> inodes) {
    this.inodes = inodes;
  }

  public void setInodes(List<AlertRuleCluster> inodes) {
    this.inodes = JsonNullable.<List<AlertRuleCluster>>of(inodes);
  }


  public NfsExport internal(Boolean internal) {
    this.internal = internal;
    return this;
  }

   /**
   * Get internal
   * @return internal
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")
  @JsonProperty(JSON_PROPERTY_INTERNAL)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public Boolean getInternal() {
    return internal;
  }


  @JsonProperty(JSON_PROPERTY_INTERNAL)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setInternal(Boolean internal) {
    this.internal = internal;
  }


  public NfsExport ipWhitelist(String ipWhitelist) {
    this.ipWhitelist = ipWhitelist;
    return this;
  }

   /**
   * Get ipWhitelist
   * @return ipWhitelist
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")
  @JsonProperty(JSON_PROPERTY_IP_WHITELIST)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getIpWhitelist() {
    return ipWhitelist;
  }


  @JsonProperty(JSON_PROPERTY_IP_WHITELIST)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setIpWhitelist(String ipWhitelist) {
    this.ipWhitelist = ipWhitelist;
  }


  public NfsExport labels(List<BrickTopoPowers> labels) {
    this.labels = JsonNullable.<List<BrickTopoPowers>>of(labels);
    return this;
  }

  public NfsExport addLabelsItem(BrickTopoPowers labelsItem) {
    if (this.labels == null || !this.labels.isPresent()) {
      this.labels = JsonNullable.<List<BrickTopoPowers>>of(new ArrayList<>());
    }
    try {
      this.labels.get().add(labelsItem);
    } catch (java.util.NoSuchElementException e) {
      // this can never happen, as we make sure above that the value is present
    }
    return this;
  }

   /**
   * Get labels
   * @return labels
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public List<BrickTopoPowers> getLabels() {
        return labels.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_LABELS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<List<BrickTopoPowers>> getLabels_JsonNullable() {
    return labels;
  }
  
  @JsonProperty(JSON_PROPERTY_LABELS)
  public void setLabels_JsonNullable(JsonNullable<List<BrickTopoPowers>> labels) {
    this.labels = labels;
  }

  public void setLabels(List<BrickTopoPowers> labels) {
    this.labels = JsonNullable.<List<BrickTopoPowers>>of(labels);
  }


  public NfsExport localId(String localId) {
    this.localId = localId;
    return this;
  }

   /**
   * Get localId
   * @return localId
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")
  @JsonProperty(JSON_PROPERTY_LOCAL_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getLocalId() {
    return localId;
  }


  @JsonProperty(JSON_PROPERTY_LOCAL_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setLocalId(String localId) {
    this.localId = localId;
  }


  public NfsExport name(String name) {
    this.name = name;
    return this;
  }

   /**
   * Get name
   * @return name
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")
  @JsonProperty(JSON_PROPERTY_NAME)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getName() {
    return name;
  }


  @JsonProperty(JSON_PROPERTY_NAME)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setName(String name) {
    this.name = name;
  }


  public NfsExport replicaNum(Double replicaNum) {
    this.replicaNum = replicaNum;
    return this;
  }

   /**
   * Get replicaNum
   * @return replicaNum
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")
  @JsonProperty(JSON_PROPERTY_REPLICA_NUM)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public Double getReplicaNum() {
    return replicaNum;
  }


  @JsonProperty(JSON_PROPERTY_REPLICA_NUM)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setReplicaNum(Double replicaNum) {
    this.replicaNum = replicaNum;
  }


  public NfsExport thinProvision(Boolean thinProvision) {
    this.thinProvision = thinProvision;
    return this;
  }

   /**
   * Get thinProvision
   * @return thinProvision
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")
  @JsonProperty(JSON_PROPERTY_THIN_PROVISION)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public Boolean getThinProvision() {
    return thinProvision;
  }


  @JsonProperty(JSON_PROPERTY_THIN_PROVISION)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setThinProvision(Boolean thinProvision) {
    this.thinProvision = thinProvision;
  }


  /**
   * Return true if this NfsExport object is equal to o.
   */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    NfsExport nfsExport = (NfsExport) o;
    return Objects.equals(this.cluster, nfsExport.cluster) &&
        Objects.equals(this.description, nfsExport.description) &&
        equalsNullable(this.entityAsyncStatus, nfsExport.entityAsyncStatus) &&
        Objects.equals(this.exportInodeId, nfsExport.exportInodeId) &&
        Objects.equals(this.id, nfsExport.id) &&
        equalsNullable(this.inodes, nfsExport.inodes) &&
        Objects.equals(this.internal, nfsExport.internal) &&
        Objects.equals(this.ipWhitelist, nfsExport.ipWhitelist) &&
        equalsNullable(this.labels, nfsExport.labels) &&
        Objects.equals(this.localId, nfsExport.localId) &&
        Objects.equals(this.name, nfsExport.name) &&
        Objects.equals(this.replicaNum, nfsExport.replicaNum) &&
        Objects.equals(this.thinProvision, nfsExport.thinProvision);
  }

  private static <T> boolean equalsNullable(JsonNullable<T> a, JsonNullable<T> b) {
    return a == b || (a != null && b != null && a.isPresent() && b.isPresent() && Objects.deepEquals(a.get(), b.get()));
  }

  @Override
  public int hashCode() {
    return Objects.hash(cluster, description, hashCodeNullable(entityAsyncStatus), exportInodeId, id, hashCodeNullable(inodes), internal, ipWhitelist, hashCodeNullable(labels), localId, name, replicaNum, thinProvision);
  }

  private static <T> int hashCodeNullable(JsonNullable<T> a) {
    if (a == null) {
      return 1;
    }
    return a.isPresent() ? Arrays.deepHashCode(new Object[]{a.get()}) : 31;
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class NfsExport {\n");
    sb.append("    cluster: ").append(toIndentedString(cluster)).append("\n");
    sb.append("    description: ").append(toIndentedString(description)).append("\n");
    sb.append("    entityAsyncStatus: ").append(toIndentedString(entityAsyncStatus)).append("\n");
    sb.append("    exportInodeId: ").append(toIndentedString(exportInodeId)).append("\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    inodes: ").append(toIndentedString(inodes)).append("\n");
    sb.append("    internal: ").append(toIndentedString(internal)).append("\n");
    sb.append("    ipWhitelist: ").append(toIndentedString(ipWhitelist)).append("\n");
    sb.append("    labels: ").append(toIndentedString(labels)).append("\n");
    sb.append("    localId: ").append(toIndentedString(localId)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    replicaNum: ").append(toIndentedString(replicaNum)).append("\n");
    sb.append("    thinProvision: ").append(toIndentedString(thinProvision)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

