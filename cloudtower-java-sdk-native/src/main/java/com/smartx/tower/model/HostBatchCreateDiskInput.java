/*
 * Tower SDK API
 * cloudtower operation API and SDK
 *
 * The version of the OpenAPI document: 1.7.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.smartx.tower.model;

import java.util.Objects;
import java.util.Arrays;
import java.util.Map;
import java.util.HashMap;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import com.smartx.tower.model.MaybeDiskFunction;
import com.smartx.tower.model.MaybeDiskType;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import org.openapitools.jackson.nullable.JsonNullable;
import com.fasterxml.jackson.annotation.JsonIgnore;
import org.openapitools.jackson.nullable.JsonNullable;
import java.util.NoSuchElementException;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;


/**
 * HostBatchCreateDiskInput
 */
@JsonPropertyOrder({
  HostBatchCreateDiskInput.JSON_PROPERTY_TYPE,
  HostBatchCreateDiskInput.JSON_PROPERTY_FUNCTION,
  HostBatchCreateDiskInput.JSON_PROPERTY_DRIVE
})
@javax.annotation.processing.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2021-10-27T15:59:14.939791800+08:00[Asia/Shanghai]")
public class HostBatchCreateDiskInput {
  public static final String JSON_PROPERTY_TYPE = "type";
  private JsonNullable<MaybeDiskType> type = JsonNullable.<MaybeDiskType>undefined();

  public static final String JSON_PROPERTY_FUNCTION = "function";
  private JsonNullable<MaybeDiskFunction> function = JsonNullable.<MaybeDiskFunction>undefined();

  public static final String JSON_PROPERTY_DRIVE = "drive";
  private String drive;


  public HostBatchCreateDiskInput type(MaybeDiskType type) {
    this.type = JsonNullable.<MaybeDiskType>of(type);
    return this;
  }

   /**
   * Get type
   * @return type
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public MaybeDiskType getType() {
        return type.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_TYPE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<MaybeDiskType> getType_JsonNullable() {
    return type;
  }
  
  @JsonProperty(JSON_PROPERTY_TYPE)
  public void setType_JsonNullable(JsonNullable<MaybeDiskType> type) {
    this.type = type;
  }

  public void setType(MaybeDiskType type) {
    this.type = JsonNullable.<MaybeDiskType>of(type);
  }


  public HostBatchCreateDiskInput function(MaybeDiskFunction function) {
    this.function = JsonNullable.<MaybeDiskFunction>of(function);
    return this;
  }

   /**
   * Get function
   * @return function
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public MaybeDiskFunction getFunction() {
        return function.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_FUNCTION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<MaybeDiskFunction> getFunction_JsonNullable() {
    return function;
  }
  
  @JsonProperty(JSON_PROPERTY_FUNCTION)
  public void setFunction_JsonNullable(JsonNullable<MaybeDiskFunction> function) {
    this.function = function;
  }

  public void setFunction(MaybeDiskFunction function) {
    this.function = JsonNullable.<MaybeDiskFunction>of(function);
  }


  public HostBatchCreateDiskInput drive(String drive) {
    this.drive = drive;
    return this;
  }

   /**
   * Get drive
   * @return drive
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")
  @JsonProperty(JSON_PROPERTY_DRIVE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getDrive() {
    return drive;
  }


  @JsonProperty(JSON_PROPERTY_DRIVE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setDrive(String drive) {
    this.drive = drive;
  }


  /**
   * Return true if this HostBatchCreateDiskInput object is equal to o.
   */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    HostBatchCreateDiskInput hostBatchCreateDiskInput = (HostBatchCreateDiskInput) o;
    return equalsNullable(this.type, hostBatchCreateDiskInput.type) &&
        equalsNullable(this.function, hostBatchCreateDiskInput.function) &&
        Objects.equals(this.drive, hostBatchCreateDiskInput.drive);
  }

  private static <T> boolean equalsNullable(JsonNullable<T> a, JsonNullable<T> b) {
    return a == b || (a != null && b != null && a.isPresent() && b.isPresent() && Objects.deepEquals(a.get(), b.get()));
  }

  @Override
  public int hashCode() {
    return Objects.hash(hashCodeNullable(type), hashCodeNullable(function), drive);
  }

  private static <T> int hashCodeNullable(JsonNullable<T> a) {
    if (a == null) {
      return 1;
    }
    return a.isPresent() ? Arrays.deepHashCode(new Object[]{a.get()}) : 31;
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class HostBatchCreateDiskInput {\n");
    sb.append("    type: ").append(toIndentedString(type)).append("\n");
    sb.append("    function: ").append(toIndentedString(function)).append("\n");
    sb.append("    drive: ").append(toIndentedString(drive)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

