/*
 * Tower SDK API
 * cloudtower operation API and SDK
 *
 * The version of the OpenAPI document: 1.7.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.smartx.tower.model;

import java.util.Objects;
import java.util.Arrays;
import java.util.Map;
import java.util.HashMap;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import com.smartx.tower.model.ReportTemplateWhereInput;
import com.smartx.tower.model.TaskStatus;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.util.ArrayList;
import java.util.List;
import org.openapitools.jackson.nullable.JsonNullable;
import com.fasterxml.jackson.annotation.JsonIgnore;
import org.openapitools.jackson.nullable.JsonNullable;
import java.util.NoSuchElementException;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;


/**
 * ReportTaskWhereInput
 */
@JsonPropertyOrder({
  ReportTaskWhereInput.JSON_PROPERTY_A_N_D,
  ReportTaskWhereInput.JSON_PROPERTY_CREATED_AT,
  ReportTaskWhereInput.JSON_PROPERTY_CREATED_AT_GT,
  ReportTaskWhereInput.JSON_PROPERTY_CREATED_AT_GTE,
  ReportTaskWhereInput.JSON_PROPERTY_CREATED_AT_IN,
  ReportTaskWhereInput.JSON_PROPERTY_CREATED_AT_LT,
  ReportTaskWhereInput.JSON_PROPERTY_CREATED_AT_LTE,
  ReportTaskWhereInput.JSON_PROPERTY_CREATED_AT_NOT,
  ReportTaskWhereInput.JSON_PROPERTY_CREATED_AT_NOT_IN,
  ReportTaskWhereInput.JSON_PROPERTY_ID,
  ReportTaskWhereInput.JSON_PROPERTY_ID_CONTAINS,
  ReportTaskWhereInput.JSON_PROPERTY_ID_ENDS_WITH,
  ReportTaskWhereInput.JSON_PROPERTY_ID_GT,
  ReportTaskWhereInput.JSON_PROPERTY_ID_GTE,
  ReportTaskWhereInput.JSON_PROPERTY_ID_IN,
  ReportTaskWhereInput.JSON_PROPERTY_ID_LT,
  ReportTaskWhereInput.JSON_PROPERTY_ID_LTE,
  ReportTaskWhereInput.JSON_PROPERTY_ID_NOT,
  ReportTaskWhereInput.JSON_PROPERTY_ID_NOT_CONTAINS,
  ReportTaskWhereInput.JSON_PROPERTY_ID_NOT_ENDS_WITH,
  ReportTaskWhereInput.JSON_PROPERTY_ID_NOT_IN,
  ReportTaskWhereInput.JSON_PROPERTY_ID_NOT_STARTS_WITH,
  ReportTaskWhereInput.JSON_PROPERTY_ID_STARTS_WITH,
  ReportTaskWhereInput.JSON_PROPERTY_INTERNAL,
  ReportTaskWhereInput.JSON_PROPERTY_INTERNAL_NOT,
  ReportTaskWhereInput.JSON_PROPERTY_NAME,
  ReportTaskWhereInput.JSON_PROPERTY_NAME_CONTAINS,
  ReportTaskWhereInput.JSON_PROPERTY_NAME_ENDS_WITH,
  ReportTaskWhereInput.JSON_PROPERTY_NAME_GT,
  ReportTaskWhereInput.JSON_PROPERTY_NAME_GTE,
  ReportTaskWhereInput.JSON_PROPERTY_NAME_IN,
  ReportTaskWhereInput.JSON_PROPERTY_NAME_LT,
  ReportTaskWhereInput.JSON_PROPERTY_NAME_LTE,
  ReportTaskWhereInput.JSON_PROPERTY_NAME_NOT,
  ReportTaskWhereInput.JSON_PROPERTY_NAME_NOT_CONTAINS,
  ReportTaskWhereInput.JSON_PROPERTY_NAME_NOT_ENDS_WITH,
  ReportTaskWhereInput.JSON_PROPERTY_NAME_NOT_IN,
  ReportTaskWhereInput.JSON_PROPERTY_NAME_NOT_STARTS_WITH,
  ReportTaskWhereInput.JSON_PROPERTY_NAME_STARTS_WITH,
  ReportTaskWhereInput.JSON_PROPERTY_N_O_T,
  ReportTaskWhereInput.JSON_PROPERTY_O_R,
  ReportTaskWhereInput.JSON_PROPERTY_PLAN_ID,
  ReportTaskWhereInput.JSON_PROPERTY_PLAN_ID_CONTAINS,
  ReportTaskWhereInput.JSON_PROPERTY_PLAN_ID_ENDS_WITH,
  ReportTaskWhereInput.JSON_PROPERTY_PLAN_ID_GT,
  ReportTaskWhereInput.JSON_PROPERTY_PLAN_ID_GTE,
  ReportTaskWhereInput.JSON_PROPERTY_PLAN_ID_IN,
  ReportTaskWhereInput.JSON_PROPERTY_PLAN_ID_LT,
  ReportTaskWhereInput.JSON_PROPERTY_PLAN_ID_LTE,
  ReportTaskWhereInput.JSON_PROPERTY_PLAN_ID_NOT,
  ReportTaskWhereInput.JSON_PROPERTY_PLAN_ID_NOT_CONTAINS,
  ReportTaskWhereInput.JSON_PROPERTY_PLAN_ID_NOT_ENDS_WITH,
  ReportTaskWhereInput.JSON_PROPERTY_PLAN_ID_NOT_IN,
  ReportTaskWhereInput.JSON_PROPERTY_PLAN_ID_NOT_STARTS_WITH,
  ReportTaskWhereInput.JSON_PROPERTY_PLAN_ID_STARTS_WITH,
  ReportTaskWhereInput.JSON_PROPERTY_STATUS,
  ReportTaskWhereInput.JSON_PROPERTY_STATUS_IN,
  ReportTaskWhereInput.JSON_PROPERTY_STATUS_NOT,
  ReportTaskWhereInput.JSON_PROPERTY_STATUS_NOT_IN,
  ReportTaskWhereInput.JSON_PROPERTY_TEMPLATE
})
@javax.annotation.processing.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2021-10-27T15:59:14.939791800+08:00[Asia/Shanghai]")
public class ReportTaskWhereInput {
  public static final String JSON_PROPERTY_A_N_D = "AND";
  private JsonNullable<List<ReportTaskWhereInput>> AND = JsonNullable.<List<ReportTaskWhereInput>>undefined();

  public static final String JSON_PROPERTY_CREATED_AT = "createdAt";
  private JsonNullable<String> createdAt = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_CREATED_AT_GT = "createdAt_gt";
  private JsonNullable<String> createdAtGt = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_CREATED_AT_GTE = "createdAt_gte";
  private JsonNullable<String> createdAtGte = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_CREATED_AT_IN = "createdAt_in";
  private JsonNullable<List<String>> createdAtIn = JsonNullable.<List<String>>undefined();

  public static final String JSON_PROPERTY_CREATED_AT_LT = "createdAt_lt";
  private JsonNullable<String> createdAtLt = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_CREATED_AT_LTE = "createdAt_lte";
  private JsonNullable<String> createdAtLte = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_CREATED_AT_NOT = "createdAt_not";
  private JsonNullable<String> createdAtNot = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_CREATED_AT_NOT_IN = "createdAt_not_in";
  private JsonNullable<List<String>> createdAtNotIn = JsonNullable.<List<String>>undefined();

  public static final String JSON_PROPERTY_ID = "id";
  private JsonNullable<String> id = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_ID_CONTAINS = "id_contains";
  private JsonNullable<String> idContains = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_ID_ENDS_WITH = "id_ends_with";
  private JsonNullable<String> idEndsWith = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_ID_GT = "id_gt";
  private JsonNullable<String> idGt = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_ID_GTE = "id_gte";
  private JsonNullable<String> idGte = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_ID_IN = "id_in";
  private JsonNullable<List<String>> idIn = JsonNullable.<List<String>>undefined();

  public static final String JSON_PROPERTY_ID_LT = "id_lt";
  private JsonNullable<String> idLt = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_ID_LTE = "id_lte";
  private JsonNullable<String> idLte = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_ID_NOT = "id_not";
  private JsonNullable<String> idNot = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_ID_NOT_CONTAINS = "id_not_contains";
  private JsonNullable<String> idNotContains = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_ID_NOT_ENDS_WITH = "id_not_ends_with";
  private JsonNullable<String> idNotEndsWith = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_ID_NOT_IN = "id_not_in";
  private JsonNullable<List<String>> idNotIn = JsonNullable.<List<String>>undefined();

  public static final String JSON_PROPERTY_ID_NOT_STARTS_WITH = "id_not_starts_with";
  private JsonNullable<String> idNotStartsWith = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_ID_STARTS_WITH = "id_starts_with";
  private JsonNullable<String> idStartsWith = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_INTERNAL = "internal";
  private JsonNullable<Boolean> internal = JsonNullable.<Boolean>undefined();

  public static final String JSON_PROPERTY_INTERNAL_NOT = "internal_not";
  private JsonNullable<Boolean> internalNot = JsonNullable.<Boolean>undefined();

  public static final String JSON_PROPERTY_NAME = "name";
  private JsonNullable<String> name = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_NAME_CONTAINS = "name_contains";
  private JsonNullable<String> nameContains = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_NAME_ENDS_WITH = "name_ends_with";
  private JsonNullable<String> nameEndsWith = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_NAME_GT = "name_gt";
  private JsonNullable<String> nameGt = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_NAME_GTE = "name_gte";
  private JsonNullable<String> nameGte = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_NAME_IN = "name_in";
  private JsonNullable<List<String>> nameIn = JsonNullable.<List<String>>undefined();

  public static final String JSON_PROPERTY_NAME_LT = "name_lt";
  private JsonNullable<String> nameLt = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_NAME_LTE = "name_lte";
  private JsonNullable<String> nameLte = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_NAME_NOT = "name_not";
  private JsonNullable<String> nameNot = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_NAME_NOT_CONTAINS = "name_not_contains";
  private JsonNullable<String> nameNotContains = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_NAME_NOT_ENDS_WITH = "name_not_ends_with";
  private JsonNullable<String> nameNotEndsWith = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_NAME_NOT_IN = "name_not_in";
  private JsonNullable<List<String>> nameNotIn = JsonNullable.<List<String>>undefined();

  public static final String JSON_PROPERTY_NAME_NOT_STARTS_WITH = "name_not_starts_with";
  private JsonNullable<String> nameNotStartsWith = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_NAME_STARTS_WITH = "name_starts_with";
  private JsonNullable<String> nameStartsWith = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_N_O_T = "NOT";
  private JsonNullable<List<ReportTaskWhereInput>> NOT = JsonNullable.<List<ReportTaskWhereInput>>undefined();

  public static final String JSON_PROPERTY_O_R = "OR";
  private JsonNullable<List<ReportTaskWhereInput>> OR = JsonNullable.<List<ReportTaskWhereInput>>undefined();

  public static final String JSON_PROPERTY_PLAN_ID = "plan_id";
  private JsonNullable<String> planId = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_PLAN_ID_CONTAINS = "plan_id_contains";
  private JsonNullable<String> planIdContains = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_PLAN_ID_ENDS_WITH = "plan_id_ends_with";
  private JsonNullable<String> planIdEndsWith = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_PLAN_ID_GT = "plan_id_gt";
  private JsonNullable<String> planIdGt = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_PLAN_ID_GTE = "plan_id_gte";
  private JsonNullable<String> planIdGte = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_PLAN_ID_IN = "plan_id_in";
  private JsonNullable<List<String>> planIdIn = JsonNullable.<List<String>>undefined();

  public static final String JSON_PROPERTY_PLAN_ID_LT = "plan_id_lt";
  private JsonNullable<String> planIdLt = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_PLAN_ID_LTE = "plan_id_lte";
  private JsonNullable<String> planIdLte = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_PLAN_ID_NOT = "plan_id_not";
  private JsonNullable<String> planIdNot = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_PLAN_ID_NOT_CONTAINS = "plan_id_not_contains";
  private JsonNullable<String> planIdNotContains = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_PLAN_ID_NOT_ENDS_WITH = "plan_id_not_ends_with";
  private JsonNullable<String> planIdNotEndsWith = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_PLAN_ID_NOT_IN = "plan_id_not_in";
  private JsonNullable<List<String>> planIdNotIn = JsonNullable.<List<String>>undefined();

  public static final String JSON_PROPERTY_PLAN_ID_NOT_STARTS_WITH = "plan_id_not_starts_with";
  private JsonNullable<String> planIdNotStartsWith = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_PLAN_ID_STARTS_WITH = "plan_id_starts_with";
  private JsonNullable<String> planIdStartsWith = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_STATUS = "status";
  private JsonNullable<TaskStatus> status = JsonNullable.<TaskStatus>undefined();

  public static final String JSON_PROPERTY_STATUS_IN = "status_in";
  private JsonNullable<List<TaskStatus>> statusIn = JsonNullable.<List<TaskStatus>>undefined();

  public static final String JSON_PROPERTY_STATUS_NOT = "status_not";
  private JsonNullable<TaskStatus> statusNot = JsonNullable.<TaskStatus>undefined();

  public static final String JSON_PROPERTY_STATUS_NOT_IN = "status_not_in";
  private JsonNullable<List<TaskStatus>> statusNotIn = JsonNullable.<List<TaskStatus>>undefined();

  public static final String JSON_PROPERTY_TEMPLATE = "template";
  private JsonNullable<ReportTemplateWhereInput> template = JsonNullable.<ReportTemplateWhereInput>undefined();


  public ReportTaskWhereInput AND(List<ReportTaskWhereInput> AND) {
    this.AND = JsonNullable.<List<ReportTaskWhereInput>>of(AND);
    return this;
  }

  public ReportTaskWhereInput addANDItem(ReportTaskWhereInput ANDItem) {
    if (this.AND == null || !this.AND.isPresent()) {
      this.AND = JsonNullable.<List<ReportTaskWhereInput>>of(new ArrayList<>());
    }
    try {
      this.AND.get().add(ANDItem);
    } catch (java.util.NoSuchElementException e) {
      // this can never happen, as we make sure above that the value is present
    }
    return this;
  }

   /**
   * Get AND
   * @return AND
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public List<ReportTaskWhereInput> getAND() {
        return AND.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_A_N_D)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<List<ReportTaskWhereInput>> getAND_JsonNullable() {
    return AND;
  }
  
  @JsonProperty(JSON_PROPERTY_A_N_D)
  public void setAND_JsonNullable(JsonNullable<List<ReportTaskWhereInput>> AND) {
    this.AND = AND;
  }

  public void setAND(List<ReportTaskWhereInput> AND) {
    this.AND = JsonNullable.<List<ReportTaskWhereInput>>of(AND);
  }


  public ReportTaskWhereInput createdAt(String createdAt) {
    this.createdAt = JsonNullable.<String>of(createdAt);
    return this;
  }

   /**
   * Get createdAt
   * @return createdAt
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getCreatedAt() {
        return createdAt.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_CREATED_AT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getCreatedAt_JsonNullable() {
    return createdAt;
  }
  
  @JsonProperty(JSON_PROPERTY_CREATED_AT)
  public void setCreatedAt_JsonNullable(JsonNullable<String> createdAt) {
    this.createdAt = createdAt;
  }

  public void setCreatedAt(String createdAt) {
    this.createdAt = JsonNullable.<String>of(createdAt);
  }


  public ReportTaskWhereInput createdAtGt(String createdAtGt) {
    this.createdAtGt = JsonNullable.<String>of(createdAtGt);
    return this;
  }

   /**
   * Get createdAtGt
   * @return createdAtGt
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getCreatedAtGt() {
        return createdAtGt.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_CREATED_AT_GT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getCreatedAtGt_JsonNullable() {
    return createdAtGt;
  }
  
  @JsonProperty(JSON_PROPERTY_CREATED_AT_GT)
  public void setCreatedAtGt_JsonNullable(JsonNullable<String> createdAtGt) {
    this.createdAtGt = createdAtGt;
  }

  public void setCreatedAtGt(String createdAtGt) {
    this.createdAtGt = JsonNullable.<String>of(createdAtGt);
  }


  public ReportTaskWhereInput createdAtGte(String createdAtGte) {
    this.createdAtGte = JsonNullable.<String>of(createdAtGte);
    return this;
  }

   /**
   * Get createdAtGte
   * @return createdAtGte
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getCreatedAtGte() {
        return createdAtGte.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_CREATED_AT_GTE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getCreatedAtGte_JsonNullable() {
    return createdAtGte;
  }
  
  @JsonProperty(JSON_PROPERTY_CREATED_AT_GTE)
  public void setCreatedAtGte_JsonNullable(JsonNullable<String> createdAtGte) {
    this.createdAtGte = createdAtGte;
  }

  public void setCreatedAtGte(String createdAtGte) {
    this.createdAtGte = JsonNullable.<String>of(createdAtGte);
  }


  public ReportTaskWhereInput createdAtIn(List<String> createdAtIn) {
    this.createdAtIn = JsonNullable.<List<String>>of(createdAtIn);
    return this;
  }

  public ReportTaskWhereInput addCreatedAtInItem(String createdAtInItem) {
    if (this.createdAtIn == null || !this.createdAtIn.isPresent()) {
      this.createdAtIn = JsonNullable.<List<String>>of(new ArrayList<>());
    }
    try {
      this.createdAtIn.get().add(createdAtInItem);
    } catch (java.util.NoSuchElementException e) {
      // this can never happen, as we make sure above that the value is present
    }
    return this;
  }

   /**
   * Get createdAtIn
   * @return createdAtIn
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public List<String> getCreatedAtIn() {
        return createdAtIn.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_CREATED_AT_IN)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<List<String>> getCreatedAtIn_JsonNullable() {
    return createdAtIn;
  }
  
  @JsonProperty(JSON_PROPERTY_CREATED_AT_IN)
  public void setCreatedAtIn_JsonNullable(JsonNullable<List<String>> createdAtIn) {
    this.createdAtIn = createdAtIn;
  }

  public void setCreatedAtIn(List<String> createdAtIn) {
    this.createdAtIn = JsonNullable.<List<String>>of(createdAtIn);
  }


  public ReportTaskWhereInput createdAtLt(String createdAtLt) {
    this.createdAtLt = JsonNullable.<String>of(createdAtLt);
    return this;
  }

   /**
   * Get createdAtLt
   * @return createdAtLt
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getCreatedAtLt() {
        return createdAtLt.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_CREATED_AT_LT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getCreatedAtLt_JsonNullable() {
    return createdAtLt;
  }
  
  @JsonProperty(JSON_PROPERTY_CREATED_AT_LT)
  public void setCreatedAtLt_JsonNullable(JsonNullable<String> createdAtLt) {
    this.createdAtLt = createdAtLt;
  }

  public void setCreatedAtLt(String createdAtLt) {
    this.createdAtLt = JsonNullable.<String>of(createdAtLt);
  }


  public ReportTaskWhereInput createdAtLte(String createdAtLte) {
    this.createdAtLte = JsonNullable.<String>of(createdAtLte);
    return this;
  }

   /**
   * Get createdAtLte
   * @return createdAtLte
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getCreatedAtLte() {
        return createdAtLte.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_CREATED_AT_LTE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getCreatedAtLte_JsonNullable() {
    return createdAtLte;
  }
  
  @JsonProperty(JSON_PROPERTY_CREATED_AT_LTE)
  public void setCreatedAtLte_JsonNullable(JsonNullable<String> createdAtLte) {
    this.createdAtLte = createdAtLte;
  }

  public void setCreatedAtLte(String createdAtLte) {
    this.createdAtLte = JsonNullable.<String>of(createdAtLte);
  }


  public ReportTaskWhereInput createdAtNot(String createdAtNot) {
    this.createdAtNot = JsonNullable.<String>of(createdAtNot);
    return this;
  }

   /**
   * Get createdAtNot
   * @return createdAtNot
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getCreatedAtNot() {
        return createdAtNot.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_CREATED_AT_NOT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getCreatedAtNot_JsonNullable() {
    return createdAtNot;
  }
  
  @JsonProperty(JSON_PROPERTY_CREATED_AT_NOT)
  public void setCreatedAtNot_JsonNullable(JsonNullable<String> createdAtNot) {
    this.createdAtNot = createdAtNot;
  }

  public void setCreatedAtNot(String createdAtNot) {
    this.createdAtNot = JsonNullable.<String>of(createdAtNot);
  }


  public ReportTaskWhereInput createdAtNotIn(List<String> createdAtNotIn) {
    this.createdAtNotIn = JsonNullable.<List<String>>of(createdAtNotIn);
    return this;
  }

  public ReportTaskWhereInput addCreatedAtNotInItem(String createdAtNotInItem) {
    if (this.createdAtNotIn == null || !this.createdAtNotIn.isPresent()) {
      this.createdAtNotIn = JsonNullable.<List<String>>of(new ArrayList<>());
    }
    try {
      this.createdAtNotIn.get().add(createdAtNotInItem);
    } catch (java.util.NoSuchElementException e) {
      // this can never happen, as we make sure above that the value is present
    }
    return this;
  }

   /**
   * Get createdAtNotIn
   * @return createdAtNotIn
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public List<String> getCreatedAtNotIn() {
        return createdAtNotIn.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_CREATED_AT_NOT_IN)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<List<String>> getCreatedAtNotIn_JsonNullable() {
    return createdAtNotIn;
  }
  
  @JsonProperty(JSON_PROPERTY_CREATED_AT_NOT_IN)
  public void setCreatedAtNotIn_JsonNullable(JsonNullable<List<String>> createdAtNotIn) {
    this.createdAtNotIn = createdAtNotIn;
  }

  public void setCreatedAtNotIn(List<String> createdAtNotIn) {
    this.createdAtNotIn = JsonNullable.<List<String>>of(createdAtNotIn);
  }


  public ReportTaskWhereInput id(String id) {
    this.id = JsonNullable.<String>of(id);
    return this;
  }

   /**
   * Get id
   * @return id
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getId() {
        return id.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getId_JsonNullable() {
    return id;
  }
  
  @JsonProperty(JSON_PROPERTY_ID)
  public void setId_JsonNullable(JsonNullable<String> id) {
    this.id = id;
  }

  public void setId(String id) {
    this.id = JsonNullable.<String>of(id);
  }


  public ReportTaskWhereInput idContains(String idContains) {
    this.idContains = JsonNullable.<String>of(idContains);
    return this;
  }

   /**
   * Get idContains
   * @return idContains
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getIdContains() {
        return idContains.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_ID_CONTAINS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getIdContains_JsonNullable() {
    return idContains;
  }
  
  @JsonProperty(JSON_PROPERTY_ID_CONTAINS)
  public void setIdContains_JsonNullable(JsonNullable<String> idContains) {
    this.idContains = idContains;
  }

  public void setIdContains(String idContains) {
    this.idContains = JsonNullable.<String>of(idContains);
  }


  public ReportTaskWhereInput idEndsWith(String idEndsWith) {
    this.idEndsWith = JsonNullable.<String>of(idEndsWith);
    return this;
  }

   /**
   * Get idEndsWith
   * @return idEndsWith
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getIdEndsWith() {
        return idEndsWith.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_ID_ENDS_WITH)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getIdEndsWith_JsonNullable() {
    return idEndsWith;
  }
  
  @JsonProperty(JSON_PROPERTY_ID_ENDS_WITH)
  public void setIdEndsWith_JsonNullable(JsonNullable<String> idEndsWith) {
    this.idEndsWith = idEndsWith;
  }

  public void setIdEndsWith(String idEndsWith) {
    this.idEndsWith = JsonNullable.<String>of(idEndsWith);
  }


  public ReportTaskWhereInput idGt(String idGt) {
    this.idGt = JsonNullable.<String>of(idGt);
    return this;
  }

   /**
   * Get idGt
   * @return idGt
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getIdGt() {
        return idGt.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_ID_GT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getIdGt_JsonNullable() {
    return idGt;
  }
  
  @JsonProperty(JSON_PROPERTY_ID_GT)
  public void setIdGt_JsonNullable(JsonNullable<String> idGt) {
    this.idGt = idGt;
  }

  public void setIdGt(String idGt) {
    this.idGt = JsonNullable.<String>of(idGt);
  }


  public ReportTaskWhereInput idGte(String idGte) {
    this.idGte = JsonNullable.<String>of(idGte);
    return this;
  }

   /**
   * Get idGte
   * @return idGte
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getIdGte() {
        return idGte.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_ID_GTE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getIdGte_JsonNullable() {
    return idGte;
  }
  
  @JsonProperty(JSON_PROPERTY_ID_GTE)
  public void setIdGte_JsonNullable(JsonNullable<String> idGte) {
    this.idGte = idGte;
  }

  public void setIdGte(String idGte) {
    this.idGte = JsonNullable.<String>of(idGte);
  }


  public ReportTaskWhereInput idIn(List<String> idIn) {
    this.idIn = JsonNullable.<List<String>>of(idIn);
    return this;
  }

  public ReportTaskWhereInput addIdInItem(String idInItem) {
    if (this.idIn == null || !this.idIn.isPresent()) {
      this.idIn = JsonNullable.<List<String>>of(new ArrayList<>());
    }
    try {
      this.idIn.get().add(idInItem);
    } catch (java.util.NoSuchElementException e) {
      // this can never happen, as we make sure above that the value is present
    }
    return this;
  }

   /**
   * Get idIn
   * @return idIn
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public List<String> getIdIn() {
        return idIn.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_ID_IN)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<List<String>> getIdIn_JsonNullable() {
    return idIn;
  }
  
  @JsonProperty(JSON_PROPERTY_ID_IN)
  public void setIdIn_JsonNullable(JsonNullable<List<String>> idIn) {
    this.idIn = idIn;
  }

  public void setIdIn(List<String> idIn) {
    this.idIn = JsonNullable.<List<String>>of(idIn);
  }


  public ReportTaskWhereInput idLt(String idLt) {
    this.idLt = JsonNullable.<String>of(idLt);
    return this;
  }

   /**
   * Get idLt
   * @return idLt
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getIdLt() {
        return idLt.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_ID_LT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getIdLt_JsonNullable() {
    return idLt;
  }
  
  @JsonProperty(JSON_PROPERTY_ID_LT)
  public void setIdLt_JsonNullable(JsonNullable<String> idLt) {
    this.idLt = idLt;
  }

  public void setIdLt(String idLt) {
    this.idLt = JsonNullable.<String>of(idLt);
  }


  public ReportTaskWhereInput idLte(String idLte) {
    this.idLte = JsonNullable.<String>of(idLte);
    return this;
  }

   /**
   * Get idLte
   * @return idLte
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getIdLte() {
        return idLte.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_ID_LTE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getIdLte_JsonNullable() {
    return idLte;
  }
  
  @JsonProperty(JSON_PROPERTY_ID_LTE)
  public void setIdLte_JsonNullable(JsonNullable<String> idLte) {
    this.idLte = idLte;
  }

  public void setIdLte(String idLte) {
    this.idLte = JsonNullable.<String>of(idLte);
  }


  public ReportTaskWhereInput idNot(String idNot) {
    this.idNot = JsonNullable.<String>of(idNot);
    return this;
  }

   /**
   * Get idNot
   * @return idNot
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getIdNot() {
        return idNot.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_ID_NOT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getIdNot_JsonNullable() {
    return idNot;
  }
  
  @JsonProperty(JSON_PROPERTY_ID_NOT)
  public void setIdNot_JsonNullable(JsonNullable<String> idNot) {
    this.idNot = idNot;
  }

  public void setIdNot(String idNot) {
    this.idNot = JsonNullable.<String>of(idNot);
  }


  public ReportTaskWhereInput idNotContains(String idNotContains) {
    this.idNotContains = JsonNullable.<String>of(idNotContains);
    return this;
  }

   /**
   * Get idNotContains
   * @return idNotContains
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getIdNotContains() {
        return idNotContains.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_ID_NOT_CONTAINS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getIdNotContains_JsonNullable() {
    return idNotContains;
  }
  
  @JsonProperty(JSON_PROPERTY_ID_NOT_CONTAINS)
  public void setIdNotContains_JsonNullable(JsonNullable<String> idNotContains) {
    this.idNotContains = idNotContains;
  }

  public void setIdNotContains(String idNotContains) {
    this.idNotContains = JsonNullable.<String>of(idNotContains);
  }


  public ReportTaskWhereInput idNotEndsWith(String idNotEndsWith) {
    this.idNotEndsWith = JsonNullable.<String>of(idNotEndsWith);
    return this;
  }

   /**
   * Get idNotEndsWith
   * @return idNotEndsWith
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getIdNotEndsWith() {
        return idNotEndsWith.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_ID_NOT_ENDS_WITH)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getIdNotEndsWith_JsonNullable() {
    return idNotEndsWith;
  }
  
  @JsonProperty(JSON_PROPERTY_ID_NOT_ENDS_WITH)
  public void setIdNotEndsWith_JsonNullable(JsonNullable<String> idNotEndsWith) {
    this.idNotEndsWith = idNotEndsWith;
  }

  public void setIdNotEndsWith(String idNotEndsWith) {
    this.idNotEndsWith = JsonNullable.<String>of(idNotEndsWith);
  }


  public ReportTaskWhereInput idNotIn(List<String> idNotIn) {
    this.idNotIn = JsonNullable.<List<String>>of(idNotIn);
    return this;
  }

  public ReportTaskWhereInput addIdNotInItem(String idNotInItem) {
    if (this.idNotIn == null || !this.idNotIn.isPresent()) {
      this.idNotIn = JsonNullable.<List<String>>of(new ArrayList<>());
    }
    try {
      this.idNotIn.get().add(idNotInItem);
    } catch (java.util.NoSuchElementException e) {
      // this can never happen, as we make sure above that the value is present
    }
    return this;
  }

   /**
   * Get idNotIn
   * @return idNotIn
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public List<String> getIdNotIn() {
        return idNotIn.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_ID_NOT_IN)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<List<String>> getIdNotIn_JsonNullable() {
    return idNotIn;
  }
  
  @JsonProperty(JSON_PROPERTY_ID_NOT_IN)
  public void setIdNotIn_JsonNullable(JsonNullable<List<String>> idNotIn) {
    this.idNotIn = idNotIn;
  }

  public void setIdNotIn(List<String> idNotIn) {
    this.idNotIn = JsonNullable.<List<String>>of(idNotIn);
  }


  public ReportTaskWhereInput idNotStartsWith(String idNotStartsWith) {
    this.idNotStartsWith = JsonNullable.<String>of(idNotStartsWith);
    return this;
  }

   /**
   * Get idNotStartsWith
   * @return idNotStartsWith
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getIdNotStartsWith() {
        return idNotStartsWith.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_ID_NOT_STARTS_WITH)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getIdNotStartsWith_JsonNullable() {
    return idNotStartsWith;
  }
  
  @JsonProperty(JSON_PROPERTY_ID_NOT_STARTS_WITH)
  public void setIdNotStartsWith_JsonNullable(JsonNullable<String> idNotStartsWith) {
    this.idNotStartsWith = idNotStartsWith;
  }

  public void setIdNotStartsWith(String idNotStartsWith) {
    this.idNotStartsWith = JsonNullable.<String>of(idNotStartsWith);
  }


  public ReportTaskWhereInput idStartsWith(String idStartsWith) {
    this.idStartsWith = JsonNullable.<String>of(idStartsWith);
    return this;
  }

   /**
   * Get idStartsWith
   * @return idStartsWith
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getIdStartsWith() {
        return idStartsWith.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_ID_STARTS_WITH)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getIdStartsWith_JsonNullable() {
    return idStartsWith;
  }
  
  @JsonProperty(JSON_PROPERTY_ID_STARTS_WITH)
  public void setIdStartsWith_JsonNullable(JsonNullable<String> idStartsWith) {
    this.idStartsWith = idStartsWith;
  }

  public void setIdStartsWith(String idStartsWith) {
    this.idStartsWith = JsonNullable.<String>of(idStartsWith);
  }


  public ReportTaskWhereInput internal(Boolean internal) {
    this.internal = JsonNullable.<Boolean>of(internal);
    return this;
  }

   /**
   * Get internal
   * @return internal
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public Boolean getInternal() {
        return internal.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_INTERNAL)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<Boolean> getInternal_JsonNullable() {
    return internal;
  }
  
  @JsonProperty(JSON_PROPERTY_INTERNAL)
  public void setInternal_JsonNullable(JsonNullable<Boolean> internal) {
    this.internal = internal;
  }

  public void setInternal(Boolean internal) {
    this.internal = JsonNullable.<Boolean>of(internal);
  }


  public ReportTaskWhereInput internalNot(Boolean internalNot) {
    this.internalNot = JsonNullable.<Boolean>of(internalNot);
    return this;
  }

   /**
   * Get internalNot
   * @return internalNot
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public Boolean getInternalNot() {
        return internalNot.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_INTERNAL_NOT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<Boolean> getInternalNot_JsonNullable() {
    return internalNot;
  }
  
  @JsonProperty(JSON_PROPERTY_INTERNAL_NOT)
  public void setInternalNot_JsonNullable(JsonNullable<Boolean> internalNot) {
    this.internalNot = internalNot;
  }

  public void setInternalNot(Boolean internalNot) {
    this.internalNot = JsonNullable.<Boolean>of(internalNot);
  }


  public ReportTaskWhereInput name(String name) {
    this.name = JsonNullable.<String>of(name);
    return this;
  }

   /**
   * Get name
   * @return name
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getName() {
        return name.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getName_JsonNullable() {
    return name;
  }
  
  @JsonProperty(JSON_PROPERTY_NAME)
  public void setName_JsonNullable(JsonNullable<String> name) {
    this.name = name;
  }

  public void setName(String name) {
    this.name = JsonNullable.<String>of(name);
  }


  public ReportTaskWhereInput nameContains(String nameContains) {
    this.nameContains = JsonNullable.<String>of(nameContains);
    return this;
  }

   /**
   * Get nameContains
   * @return nameContains
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getNameContains() {
        return nameContains.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_NAME_CONTAINS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getNameContains_JsonNullable() {
    return nameContains;
  }
  
  @JsonProperty(JSON_PROPERTY_NAME_CONTAINS)
  public void setNameContains_JsonNullable(JsonNullable<String> nameContains) {
    this.nameContains = nameContains;
  }

  public void setNameContains(String nameContains) {
    this.nameContains = JsonNullable.<String>of(nameContains);
  }


  public ReportTaskWhereInput nameEndsWith(String nameEndsWith) {
    this.nameEndsWith = JsonNullable.<String>of(nameEndsWith);
    return this;
  }

   /**
   * Get nameEndsWith
   * @return nameEndsWith
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getNameEndsWith() {
        return nameEndsWith.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_NAME_ENDS_WITH)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getNameEndsWith_JsonNullable() {
    return nameEndsWith;
  }
  
  @JsonProperty(JSON_PROPERTY_NAME_ENDS_WITH)
  public void setNameEndsWith_JsonNullable(JsonNullable<String> nameEndsWith) {
    this.nameEndsWith = nameEndsWith;
  }

  public void setNameEndsWith(String nameEndsWith) {
    this.nameEndsWith = JsonNullable.<String>of(nameEndsWith);
  }


  public ReportTaskWhereInput nameGt(String nameGt) {
    this.nameGt = JsonNullable.<String>of(nameGt);
    return this;
  }

   /**
   * Get nameGt
   * @return nameGt
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getNameGt() {
        return nameGt.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_NAME_GT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getNameGt_JsonNullable() {
    return nameGt;
  }
  
  @JsonProperty(JSON_PROPERTY_NAME_GT)
  public void setNameGt_JsonNullable(JsonNullable<String> nameGt) {
    this.nameGt = nameGt;
  }

  public void setNameGt(String nameGt) {
    this.nameGt = JsonNullable.<String>of(nameGt);
  }


  public ReportTaskWhereInput nameGte(String nameGte) {
    this.nameGte = JsonNullable.<String>of(nameGte);
    return this;
  }

   /**
   * Get nameGte
   * @return nameGte
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getNameGte() {
        return nameGte.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_NAME_GTE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getNameGte_JsonNullable() {
    return nameGte;
  }
  
  @JsonProperty(JSON_PROPERTY_NAME_GTE)
  public void setNameGte_JsonNullable(JsonNullable<String> nameGte) {
    this.nameGte = nameGte;
  }

  public void setNameGte(String nameGte) {
    this.nameGte = JsonNullable.<String>of(nameGte);
  }


  public ReportTaskWhereInput nameIn(List<String> nameIn) {
    this.nameIn = JsonNullable.<List<String>>of(nameIn);
    return this;
  }

  public ReportTaskWhereInput addNameInItem(String nameInItem) {
    if (this.nameIn == null || !this.nameIn.isPresent()) {
      this.nameIn = JsonNullable.<List<String>>of(new ArrayList<>());
    }
    try {
      this.nameIn.get().add(nameInItem);
    } catch (java.util.NoSuchElementException e) {
      // this can never happen, as we make sure above that the value is present
    }
    return this;
  }

   /**
   * Get nameIn
   * @return nameIn
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public List<String> getNameIn() {
        return nameIn.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_NAME_IN)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<List<String>> getNameIn_JsonNullable() {
    return nameIn;
  }
  
  @JsonProperty(JSON_PROPERTY_NAME_IN)
  public void setNameIn_JsonNullable(JsonNullable<List<String>> nameIn) {
    this.nameIn = nameIn;
  }

  public void setNameIn(List<String> nameIn) {
    this.nameIn = JsonNullable.<List<String>>of(nameIn);
  }


  public ReportTaskWhereInput nameLt(String nameLt) {
    this.nameLt = JsonNullable.<String>of(nameLt);
    return this;
  }

   /**
   * Get nameLt
   * @return nameLt
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getNameLt() {
        return nameLt.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_NAME_LT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getNameLt_JsonNullable() {
    return nameLt;
  }
  
  @JsonProperty(JSON_PROPERTY_NAME_LT)
  public void setNameLt_JsonNullable(JsonNullable<String> nameLt) {
    this.nameLt = nameLt;
  }

  public void setNameLt(String nameLt) {
    this.nameLt = JsonNullable.<String>of(nameLt);
  }


  public ReportTaskWhereInput nameLte(String nameLte) {
    this.nameLte = JsonNullable.<String>of(nameLte);
    return this;
  }

   /**
   * Get nameLte
   * @return nameLte
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getNameLte() {
        return nameLte.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_NAME_LTE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getNameLte_JsonNullable() {
    return nameLte;
  }
  
  @JsonProperty(JSON_PROPERTY_NAME_LTE)
  public void setNameLte_JsonNullable(JsonNullable<String> nameLte) {
    this.nameLte = nameLte;
  }

  public void setNameLte(String nameLte) {
    this.nameLte = JsonNullable.<String>of(nameLte);
  }


  public ReportTaskWhereInput nameNot(String nameNot) {
    this.nameNot = JsonNullable.<String>of(nameNot);
    return this;
  }

   /**
   * Get nameNot
   * @return nameNot
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getNameNot() {
        return nameNot.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_NAME_NOT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getNameNot_JsonNullable() {
    return nameNot;
  }
  
  @JsonProperty(JSON_PROPERTY_NAME_NOT)
  public void setNameNot_JsonNullable(JsonNullable<String> nameNot) {
    this.nameNot = nameNot;
  }

  public void setNameNot(String nameNot) {
    this.nameNot = JsonNullable.<String>of(nameNot);
  }


  public ReportTaskWhereInput nameNotContains(String nameNotContains) {
    this.nameNotContains = JsonNullable.<String>of(nameNotContains);
    return this;
  }

   /**
   * Get nameNotContains
   * @return nameNotContains
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getNameNotContains() {
        return nameNotContains.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_NAME_NOT_CONTAINS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getNameNotContains_JsonNullable() {
    return nameNotContains;
  }
  
  @JsonProperty(JSON_PROPERTY_NAME_NOT_CONTAINS)
  public void setNameNotContains_JsonNullable(JsonNullable<String> nameNotContains) {
    this.nameNotContains = nameNotContains;
  }

  public void setNameNotContains(String nameNotContains) {
    this.nameNotContains = JsonNullable.<String>of(nameNotContains);
  }


  public ReportTaskWhereInput nameNotEndsWith(String nameNotEndsWith) {
    this.nameNotEndsWith = JsonNullable.<String>of(nameNotEndsWith);
    return this;
  }

   /**
   * Get nameNotEndsWith
   * @return nameNotEndsWith
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getNameNotEndsWith() {
        return nameNotEndsWith.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_NAME_NOT_ENDS_WITH)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getNameNotEndsWith_JsonNullable() {
    return nameNotEndsWith;
  }
  
  @JsonProperty(JSON_PROPERTY_NAME_NOT_ENDS_WITH)
  public void setNameNotEndsWith_JsonNullable(JsonNullable<String> nameNotEndsWith) {
    this.nameNotEndsWith = nameNotEndsWith;
  }

  public void setNameNotEndsWith(String nameNotEndsWith) {
    this.nameNotEndsWith = JsonNullable.<String>of(nameNotEndsWith);
  }


  public ReportTaskWhereInput nameNotIn(List<String> nameNotIn) {
    this.nameNotIn = JsonNullable.<List<String>>of(nameNotIn);
    return this;
  }

  public ReportTaskWhereInput addNameNotInItem(String nameNotInItem) {
    if (this.nameNotIn == null || !this.nameNotIn.isPresent()) {
      this.nameNotIn = JsonNullable.<List<String>>of(new ArrayList<>());
    }
    try {
      this.nameNotIn.get().add(nameNotInItem);
    } catch (java.util.NoSuchElementException e) {
      // this can never happen, as we make sure above that the value is present
    }
    return this;
  }

   /**
   * Get nameNotIn
   * @return nameNotIn
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public List<String> getNameNotIn() {
        return nameNotIn.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_NAME_NOT_IN)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<List<String>> getNameNotIn_JsonNullable() {
    return nameNotIn;
  }
  
  @JsonProperty(JSON_PROPERTY_NAME_NOT_IN)
  public void setNameNotIn_JsonNullable(JsonNullable<List<String>> nameNotIn) {
    this.nameNotIn = nameNotIn;
  }

  public void setNameNotIn(List<String> nameNotIn) {
    this.nameNotIn = JsonNullable.<List<String>>of(nameNotIn);
  }


  public ReportTaskWhereInput nameNotStartsWith(String nameNotStartsWith) {
    this.nameNotStartsWith = JsonNullable.<String>of(nameNotStartsWith);
    return this;
  }

   /**
   * Get nameNotStartsWith
   * @return nameNotStartsWith
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getNameNotStartsWith() {
        return nameNotStartsWith.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_NAME_NOT_STARTS_WITH)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getNameNotStartsWith_JsonNullable() {
    return nameNotStartsWith;
  }
  
  @JsonProperty(JSON_PROPERTY_NAME_NOT_STARTS_WITH)
  public void setNameNotStartsWith_JsonNullable(JsonNullable<String> nameNotStartsWith) {
    this.nameNotStartsWith = nameNotStartsWith;
  }

  public void setNameNotStartsWith(String nameNotStartsWith) {
    this.nameNotStartsWith = JsonNullable.<String>of(nameNotStartsWith);
  }


  public ReportTaskWhereInput nameStartsWith(String nameStartsWith) {
    this.nameStartsWith = JsonNullable.<String>of(nameStartsWith);
    return this;
  }

   /**
   * Get nameStartsWith
   * @return nameStartsWith
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getNameStartsWith() {
        return nameStartsWith.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_NAME_STARTS_WITH)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getNameStartsWith_JsonNullable() {
    return nameStartsWith;
  }
  
  @JsonProperty(JSON_PROPERTY_NAME_STARTS_WITH)
  public void setNameStartsWith_JsonNullable(JsonNullable<String> nameStartsWith) {
    this.nameStartsWith = nameStartsWith;
  }

  public void setNameStartsWith(String nameStartsWith) {
    this.nameStartsWith = JsonNullable.<String>of(nameStartsWith);
  }


  public ReportTaskWhereInput NOT(List<ReportTaskWhereInput> NOT) {
    this.NOT = JsonNullable.<List<ReportTaskWhereInput>>of(NOT);
    return this;
  }

  public ReportTaskWhereInput addNOTItem(ReportTaskWhereInput NOTItem) {
    if (this.NOT == null || !this.NOT.isPresent()) {
      this.NOT = JsonNullable.<List<ReportTaskWhereInput>>of(new ArrayList<>());
    }
    try {
      this.NOT.get().add(NOTItem);
    } catch (java.util.NoSuchElementException e) {
      // this can never happen, as we make sure above that the value is present
    }
    return this;
  }

   /**
   * Get NOT
   * @return NOT
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public List<ReportTaskWhereInput> getNOT() {
        return NOT.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_N_O_T)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<List<ReportTaskWhereInput>> getNOT_JsonNullable() {
    return NOT;
  }
  
  @JsonProperty(JSON_PROPERTY_N_O_T)
  public void setNOT_JsonNullable(JsonNullable<List<ReportTaskWhereInput>> NOT) {
    this.NOT = NOT;
  }

  public void setNOT(List<ReportTaskWhereInput> NOT) {
    this.NOT = JsonNullable.<List<ReportTaskWhereInput>>of(NOT);
  }


  public ReportTaskWhereInput OR(List<ReportTaskWhereInput> OR) {
    this.OR = JsonNullable.<List<ReportTaskWhereInput>>of(OR);
    return this;
  }

  public ReportTaskWhereInput addORItem(ReportTaskWhereInput ORItem) {
    if (this.OR == null || !this.OR.isPresent()) {
      this.OR = JsonNullable.<List<ReportTaskWhereInput>>of(new ArrayList<>());
    }
    try {
      this.OR.get().add(ORItem);
    } catch (java.util.NoSuchElementException e) {
      // this can never happen, as we make sure above that the value is present
    }
    return this;
  }

   /**
   * Get OR
   * @return OR
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public List<ReportTaskWhereInput> getOR() {
        return OR.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_O_R)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<List<ReportTaskWhereInput>> getOR_JsonNullable() {
    return OR;
  }
  
  @JsonProperty(JSON_PROPERTY_O_R)
  public void setOR_JsonNullable(JsonNullable<List<ReportTaskWhereInput>> OR) {
    this.OR = OR;
  }

  public void setOR(List<ReportTaskWhereInput> OR) {
    this.OR = JsonNullable.<List<ReportTaskWhereInput>>of(OR);
  }


  public ReportTaskWhereInput planId(String planId) {
    this.planId = JsonNullable.<String>of(planId);
    return this;
  }

   /**
   * Get planId
   * @return planId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getPlanId() {
        return planId.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_PLAN_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getPlanId_JsonNullable() {
    return planId;
  }
  
  @JsonProperty(JSON_PROPERTY_PLAN_ID)
  public void setPlanId_JsonNullable(JsonNullable<String> planId) {
    this.planId = planId;
  }

  public void setPlanId(String planId) {
    this.planId = JsonNullable.<String>of(planId);
  }


  public ReportTaskWhereInput planIdContains(String planIdContains) {
    this.planIdContains = JsonNullable.<String>of(planIdContains);
    return this;
  }

   /**
   * Get planIdContains
   * @return planIdContains
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getPlanIdContains() {
        return planIdContains.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_PLAN_ID_CONTAINS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getPlanIdContains_JsonNullable() {
    return planIdContains;
  }
  
  @JsonProperty(JSON_PROPERTY_PLAN_ID_CONTAINS)
  public void setPlanIdContains_JsonNullable(JsonNullable<String> planIdContains) {
    this.planIdContains = planIdContains;
  }

  public void setPlanIdContains(String planIdContains) {
    this.planIdContains = JsonNullable.<String>of(planIdContains);
  }


  public ReportTaskWhereInput planIdEndsWith(String planIdEndsWith) {
    this.planIdEndsWith = JsonNullable.<String>of(planIdEndsWith);
    return this;
  }

   /**
   * Get planIdEndsWith
   * @return planIdEndsWith
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getPlanIdEndsWith() {
        return planIdEndsWith.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_PLAN_ID_ENDS_WITH)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getPlanIdEndsWith_JsonNullable() {
    return planIdEndsWith;
  }
  
  @JsonProperty(JSON_PROPERTY_PLAN_ID_ENDS_WITH)
  public void setPlanIdEndsWith_JsonNullable(JsonNullable<String> planIdEndsWith) {
    this.planIdEndsWith = planIdEndsWith;
  }

  public void setPlanIdEndsWith(String planIdEndsWith) {
    this.planIdEndsWith = JsonNullable.<String>of(planIdEndsWith);
  }


  public ReportTaskWhereInput planIdGt(String planIdGt) {
    this.planIdGt = JsonNullable.<String>of(planIdGt);
    return this;
  }

   /**
   * Get planIdGt
   * @return planIdGt
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getPlanIdGt() {
        return planIdGt.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_PLAN_ID_GT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getPlanIdGt_JsonNullable() {
    return planIdGt;
  }
  
  @JsonProperty(JSON_PROPERTY_PLAN_ID_GT)
  public void setPlanIdGt_JsonNullable(JsonNullable<String> planIdGt) {
    this.planIdGt = planIdGt;
  }

  public void setPlanIdGt(String planIdGt) {
    this.planIdGt = JsonNullable.<String>of(planIdGt);
  }


  public ReportTaskWhereInput planIdGte(String planIdGte) {
    this.planIdGte = JsonNullable.<String>of(planIdGte);
    return this;
  }

   /**
   * Get planIdGte
   * @return planIdGte
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getPlanIdGte() {
        return planIdGte.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_PLAN_ID_GTE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getPlanIdGte_JsonNullable() {
    return planIdGte;
  }
  
  @JsonProperty(JSON_PROPERTY_PLAN_ID_GTE)
  public void setPlanIdGte_JsonNullable(JsonNullable<String> planIdGte) {
    this.planIdGte = planIdGte;
  }

  public void setPlanIdGte(String planIdGte) {
    this.planIdGte = JsonNullable.<String>of(planIdGte);
  }


  public ReportTaskWhereInput planIdIn(List<String> planIdIn) {
    this.planIdIn = JsonNullable.<List<String>>of(planIdIn);
    return this;
  }

  public ReportTaskWhereInput addPlanIdInItem(String planIdInItem) {
    if (this.planIdIn == null || !this.planIdIn.isPresent()) {
      this.planIdIn = JsonNullable.<List<String>>of(new ArrayList<>());
    }
    try {
      this.planIdIn.get().add(planIdInItem);
    } catch (java.util.NoSuchElementException e) {
      // this can never happen, as we make sure above that the value is present
    }
    return this;
  }

   /**
   * Get planIdIn
   * @return planIdIn
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public List<String> getPlanIdIn() {
        return planIdIn.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_PLAN_ID_IN)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<List<String>> getPlanIdIn_JsonNullable() {
    return planIdIn;
  }
  
  @JsonProperty(JSON_PROPERTY_PLAN_ID_IN)
  public void setPlanIdIn_JsonNullable(JsonNullable<List<String>> planIdIn) {
    this.planIdIn = planIdIn;
  }

  public void setPlanIdIn(List<String> planIdIn) {
    this.planIdIn = JsonNullable.<List<String>>of(planIdIn);
  }


  public ReportTaskWhereInput planIdLt(String planIdLt) {
    this.planIdLt = JsonNullable.<String>of(planIdLt);
    return this;
  }

   /**
   * Get planIdLt
   * @return planIdLt
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getPlanIdLt() {
        return planIdLt.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_PLAN_ID_LT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getPlanIdLt_JsonNullable() {
    return planIdLt;
  }
  
  @JsonProperty(JSON_PROPERTY_PLAN_ID_LT)
  public void setPlanIdLt_JsonNullable(JsonNullable<String> planIdLt) {
    this.planIdLt = planIdLt;
  }

  public void setPlanIdLt(String planIdLt) {
    this.planIdLt = JsonNullable.<String>of(planIdLt);
  }


  public ReportTaskWhereInput planIdLte(String planIdLte) {
    this.planIdLte = JsonNullable.<String>of(planIdLte);
    return this;
  }

   /**
   * Get planIdLte
   * @return planIdLte
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getPlanIdLte() {
        return planIdLte.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_PLAN_ID_LTE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getPlanIdLte_JsonNullable() {
    return planIdLte;
  }
  
  @JsonProperty(JSON_PROPERTY_PLAN_ID_LTE)
  public void setPlanIdLte_JsonNullable(JsonNullable<String> planIdLte) {
    this.planIdLte = planIdLte;
  }

  public void setPlanIdLte(String planIdLte) {
    this.planIdLte = JsonNullable.<String>of(planIdLte);
  }


  public ReportTaskWhereInput planIdNot(String planIdNot) {
    this.planIdNot = JsonNullable.<String>of(planIdNot);
    return this;
  }

   /**
   * Get planIdNot
   * @return planIdNot
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getPlanIdNot() {
        return planIdNot.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_PLAN_ID_NOT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getPlanIdNot_JsonNullable() {
    return planIdNot;
  }
  
  @JsonProperty(JSON_PROPERTY_PLAN_ID_NOT)
  public void setPlanIdNot_JsonNullable(JsonNullable<String> planIdNot) {
    this.planIdNot = planIdNot;
  }

  public void setPlanIdNot(String planIdNot) {
    this.planIdNot = JsonNullable.<String>of(planIdNot);
  }


  public ReportTaskWhereInput planIdNotContains(String planIdNotContains) {
    this.planIdNotContains = JsonNullable.<String>of(planIdNotContains);
    return this;
  }

   /**
   * Get planIdNotContains
   * @return planIdNotContains
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getPlanIdNotContains() {
        return planIdNotContains.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_PLAN_ID_NOT_CONTAINS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getPlanIdNotContains_JsonNullable() {
    return planIdNotContains;
  }
  
  @JsonProperty(JSON_PROPERTY_PLAN_ID_NOT_CONTAINS)
  public void setPlanIdNotContains_JsonNullable(JsonNullable<String> planIdNotContains) {
    this.planIdNotContains = planIdNotContains;
  }

  public void setPlanIdNotContains(String planIdNotContains) {
    this.planIdNotContains = JsonNullable.<String>of(planIdNotContains);
  }


  public ReportTaskWhereInput planIdNotEndsWith(String planIdNotEndsWith) {
    this.planIdNotEndsWith = JsonNullable.<String>of(planIdNotEndsWith);
    return this;
  }

   /**
   * Get planIdNotEndsWith
   * @return planIdNotEndsWith
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getPlanIdNotEndsWith() {
        return planIdNotEndsWith.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_PLAN_ID_NOT_ENDS_WITH)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getPlanIdNotEndsWith_JsonNullable() {
    return planIdNotEndsWith;
  }
  
  @JsonProperty(JSON_PROPERTY_PLAN_ID_NOT_ENDS_WITH)
  public void setPlanIdNotEndsWith_JsonNullable(JsonNullable<String> planIdNotEndsWith) {
    this.planIdNotEndsWith = planIdNotEndsWith;
  }

  public void setPlanIdNotEndsWith(String planIdNotEndsWith) {
    this.planIdNotEndsWith = JsonNullable.<String>of(planIdNotEndsWith);
  }


  public ReportTaskWhereInput planIdNotIn(List<String> planIdNotIn) {
    this.planIdNotIn = JsonNullable.<List<String>>of(planIdNotIn);
    return this;
  }

  public ReportTaskWhereInput addPlanIdNotInItem(String planIdNotInItem) {
    if (this.planIdNotIn == null || !this.planIdNotIn.isPresent()) {
      this.planIdNotIn = JsonNullable.<List<String>>of(new ArrayList<>());
    }
    try {
      this.planIdNotIn.get().add(planIdNotInItem);
    } catch (java.util.NoSuchElementException e) {
      // this can never happen, as we make sure above that the value is present
    }
    return this;
  }

   /**
   * Get planIdNotIn
   * @return planIdNotIn
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public List<String> getPlanIdNotIn() {
        return planIdNotIn.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_PLAN_ID_NOT_IN)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<List<String>> getPlanIdNotIn_JsonNullable() {
    return planIdNotIn;
  }
  
  @JsonProperty(JSON_PROPERTY_PLAN_ID_NOT_IN)
  public void setPlanIdNotIn_JsonNullable(JsonNullable<List<String>> planIdNotIn) {
    this.planIdNotIn = planIdNotIn;
  }

  public void setPlanIdNotIn(List<String> planIdNotIn) {
    this.planIdNotIn = JsonNullable.<List<String>>of(planIdNotIn);
  }


  public ReportTaskWhereInput planIdNotStartsWith(String planIdNotStartsWith) {
    this.planIdNotStartsWith = JsonNullable.<String>of(planIdNotStartsWith);
    return this;
  }

   /**
   * Get planIdNotStartsWith
   * @return planIdNotStartsWith
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getPlanIdNotStartsWith() {
        return planIdNotStartsWith.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_PLAN_ID_NOT_STARTS_WITH)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getPlanIdNotStartsWith_JsonNullable() {
    return planIdNotStartsWith;
  }
  
  @JsonProperty(JSON_PROPERTY_PLAN_ID_NOT_STARTS_WITH)
  public void setPlanIdNotStartsWith_JsonNullable(JsonNullable<String> planIdNotStartsWith) {
    this.planIdNotStartsWith = planIdNotStartsWith;
  }

  public void setPlanIdNotStartsWith(String planIdNotStartsWith) {
    this.planIdNotStartsWith = JsonNullable.<String>of(planIdNotStartsWith);
  }


  public ReportTaskWhereInput planIdStartsWith(String planIdStartsWith) {
    this.planIdStartsWith = JsonNullable.<String>of(planIdStartsWith);
    return this;
  }

   /**
   * Get planIdStartsWith
   * @return planIdStartsWith
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getPlanIdStartsWith() {
        return planIdStartsWith.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_PLAN_ID_STARTS_WITH)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getPlanIdStartsWith_JsonNullable() {
    return planIdStartsWith;
  }
  
  @JsonProperty(JSON_PROPERTY_PLAN_ID_STARTS_WITH)
  public void setPlanIdStartsWith_JsonNullable(JsonNullable<String> planIdStartsWith) {
    this.planIdStartsWith = planIdStartsWith;
  }

  public void setPlanIdStartsWith(String planIdStartsWith) {
    this.planIdStartsWith = JsonNullable.<String>of(planIdStartsWith);
  }


  public ReportTaskWhereInput status(TaskStatus status) {
    this.status = JsonNullable.<TaskStatus>of(status);
    return this;
  }

   /**
   * Get status
   * @return status
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public TaskStatus getStatus() {
        return status.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_STATUS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<TaskStatus> getStatus_JsonNullable() {
    return status;
  }
  
  @JsonProperty(JSON_PROPERTY_STATUS)
  public void setStatus_JsonNullable(JsonNullable<TaskStatus> status) {
    this.status = status;
  }

  public void setStatus(TaskStatus status) {
    this.status = JsonNullable.<TaskStatus>of(status);
  }


  public ReportTaskWhereInput statusIn(List<TaskStatus> statusIn) {
    this.statusIn = JsonNullable.<List<TaskStatus>>of(statusIn);
    return this;
  }

  public ReportTaskWhereInput addStatusInItem(TaskStatus statusInItem) {
    if (this.statusIn == null || !this.statusIn.isPresent()) {
      this.statusIn = JsonNullable.<List<TaskStatus>>of(new ArrayList<>());
    }
    try {
      this.statusIn.get().add(statusInItem);
    } catch (java.util.NoSuchElementException e) {
      // this can never happen, as we make sure above that the value is present
    }
    return this;
  }

   /**
   * Get statusIn
   * @return statusIn
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public List<TaskStatus> getStatusIn() {
        return statusIn.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_STATUS_IN)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<List<TaskStatus>> getStatusIn_JsonNullable() {
    return statusIn;
  }
  
  @JsonProperty(JSON_PROPERTY_STATUS_IN)
  public void setStatusIn_JsonNullable(JsonNullable<List<TaskStatus>> statusIn) {
    this.statusIn = statusIn;
  }

  public void setStatusIn(List<TaskStatus> statusIn) {
    this.statusIn = JsonNullable.<List<TaskStatus>>of(statusIn);
  }


  public ReportTaskWhereInput statusNot(TaskStatus statusNot) {
    this.statusNot = JsonNullable.<TaskStatus>of(statusNot);
    return this;
  }

   /**
   * Get statusNot
   * @return statusNot
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public TaskStatus getStatusNot() {
        return statusNot.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_STATUS_NOT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<TaskStatus> getStatusNot_JsonNullable() {
    return statusNot;
  }
  
  @JsonProperty(JSON_PROPERTY_STATUS_NOT)
  public void setStatusNot_JsonNullable(JsonNullable<TaskStatus> statusNot) {
    this.statusNot = statusNot;
  }

  public void setStatusNot(TaskStatus statusNot) {
    this.statusNot = JsonNullable.<TaskStatus>of(statusNot);
  }


  public ReportTaskWhereInput statusNotIn(List<TaskStatus> statusNotIn) {
    this.statusNotIn = JsonNullable.<List<TaskStatus>>of(statusNotIn);
    return this;
  }

  public ReportTaskWhereInput addStatusNotInItem(TaskStatus statusNotInItem) {
    if (this.statusNotIn == null || !this.statusNotIn.isPresent()) {
      this.statusNotIn = JsonNullable.<List<TaskStatus>>of(new ArrayList<>());
    }
    try {
      this.statusNotIn.get().add(statusNotInItem);
    } catch (java.util.NoSuchElementException e) {
      // this can never happen, as we make sure above that the value is present
    }
    return this;
  }

   /**
   * Get statusNotIn
   * @return statusNotIn
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public List<TaskStatus> getStatusNotIn() {
        return statusNotIn.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_STATUS_NOT_IN)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<List<TaskStatus>> getStatusNotIn_JsonNullable() {
    return statusNotIn;
  }
  
  @JsonProperty(JSON_PROPERTY_STATUS_NOT_IN)
  public void setStatusNotIn_JsonNullable(JsonNullable<List<TaskStatus>> statusNotIn) {
    this.statusNotIn = statusNotIn;
  }

  public void setStatusNotIn(List<TaskStatus> statusNotIn) {
    this.statusNotIn = JsonNullable.<List<TaskStatus>>of(statusNotIn);
  }


  public ReportTaskWhereInput template(ReportTemplateWhereInput template) {
    this.template = JsonNullable.<ReportTemplateWhereInput>of(template);
    return this;
  }

   /**
   * Get template
   * @return template
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public ReportTemplateWhereInput getTemplate() {
        return template.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_TEMPLATE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<ReportTemplateWhereInput> getTemplate_JsonNullable() {
    return template;
  }
  
  @JsonProperty(JSON_PROPERTY_TEMPLATE)
  public void setTemplate_JsonNullable(JsonNullable<ReportTemplateWhereInput> template) {
    this.template = template;
  }

  public void setTemplate(ReportTemplateWhereInput template) {
    this.template = JsonNullable.<ReportTemplateWhereInput>of(template);
  }


  /**
   * Return true if this ReportTaskWhereInput object is equal to o.
   */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ReportTaskWhereInput reportTaskWhereInput = (ReportTaskWhereInput) o;
    return equalsNullable(this.AND, reportTaskWhereInput.AND) &&
        equalsNullable(this.createdAt, reportTaskWhereInput.createdAt) &&
        equalsNullable(this.createdAtGt, reportTaskWhereInput.createdAtGt) &&
        equalsNullable(this.createdAtGte, reportTaskWhereInput.createdAtGte) &&
        equalsNullable(this.createdAtIn, reportTaskWhereInput.createdAtIn) &&
        equalsNullable(this.createdAtLt, reportTaskWhereInput.createdAtLt) &&
        equalsNullable(this.createdAtLte, reportTaskWhereInput.createdAtLte) &&
        equalsNullable(this.createdAtNot, reportTaskWhereInput.createdAtNot) &&
        equalsNullable(this.createdAtNotIn, reportTaskWhereInput.createdAtNotIn) &&
        equalsNullable(this.id, reportTaskWhereInput.id) &&
        equalsNullable(this.idContains, reportTaskWhereInput.idContains) &&
        equalsNullable(this.idEndsWith, reportTaskWhereInput.idEndsWith) &&
        equalsNullable(this.idGt, reportTaskWhereInput.idGt) &&
        equalsNullable(this.idGte, reportTaskWhereInput.idGte) &&
        equalsNullable(this.idIn, reportTaskWhereInput.idIn) &&
        equalsNullable(this.idLt, reportTaskWhereInput.idLt) &&
        equalsNullable(this.idLte, reportTaskWhereInput.idLte) &&
        equalsNullable(this.idNot, reportTaskWhereInput.idNot) &&
        equalsNullable(this.idNotContains, reportTaskWhereInput.idNotContains) &&
        equalsNullable(this.idNotEndsWith, reportTaskWhereInput.idNotEndsWith) &&
        equalsNullable(this.idNotIn, reportTaskWhereInput.idNotIn) &&
        equalsNullable(this.idNotStartsWith, reportTaskWhereInput.idNotStartsWith) &&
        equalsNullable(this.idStartsWith, reportTaskWhereInput.idStartsWith) &&
        equalsNullable(this.internal, reportTaskWhereInput.internal) &&
        equalsNullable(this.internalNot, reportTaskWhereInput.internalNot) &&
        equalsNullable(this.name, reportTaskWhereInput.name) &&
        equalsNullable(this.nameContains, reportTaskWhereInput.nameContains) &&
        equalsNullable(this.nameEndsWith, reportTaskWhereInput.nameEndsWith) &&
        equalsNullable(this.nameGt, reportTaskWhereInput.nameGt) &&
        equalsNullable(this.nameGte, reportTaskWhereInput.nameGte) &&
        equalsNullable(this.nameIn, reportTaskWhereInput.nameIn) &&
        equalsNullable(this.nameLt, reportTaskWhereInput.nameLt) &&
        equalsNullable(this.nameLte, reportTaskWhereInput.nameLte) &&
        equalsNullable(this.nameNot, reportTaskWhereInput.nameNot) &&
        equalsNullable(this.nameNotContains, reportTaskWhereInput.nameNotContains) &&
        equalsNullable(this.nameNotEndsWith, reportTaskWhereInput.nameNotEndsWith) &&
        equalsNullable(this.nameNotIn, reportTaskWhereInput.nameNotIn) &&
        equalsNullable(this.nameNotStartsWith, reportTaskWhereInput.nameNotStartsWith) &&
        equalsNullable(this.nameStartsWith, reportTaskWhereInput.nameStartsWith) &&
        equalsNullable(this.NOT, reportTaskWhereInput.NOT) &&
        equalsNullable(this.OR, reportTaskWhereInput.OR) &&
        equalsNullable(this.planId, reportTaskWhereInput.planId) &&
        equalsNullable(this.planIdContains, reportTaskWhereInput.planIdContains) &&
        equalsNullable(this.planIdEndsWith, reportTaskWhereInput.planIdEndsWith) &&
        equalsNullable(this.planIdGt, reportTaskWhereInput.planIdGt) &&
        equalsNullable(this.planIdGte, reportTaskWhereInput.planIdGte) &&
        equalsNullable(this.planIdIn, reportTaskWhereInput.planIdIn) &&
        equalsNullable(this.planIdLt, reportTaskWhereInput.planIdLt) &&
        equalsNullable(this.planIdLte, reportTaskWhereInput.planIdLte) &&
        equalsNullable(this.planIdNot, reportTaskWhereInput.planIdNot) &&
        equalsNullable(this.planIdNotContains, reportTaskWhereInput.planIdNotContains) &&
        equalsNullable(this.planIdNotEndsWith, reportTaskWhereInput.planIdNotEndsWith) &&
        equalsNullable(this.planIdNotIn, reportTaskWhereInput.planIdNotIn) &&
        equalsNullable(this.planIdNotStartsWith, reportTaskWhereInput.planIdNotStartsWith) &&
        equalsNullable(this.planIdStartsWith, reportTaskWhereInput.planIdStartsWith) &&
        equalsNullable(this.status, reportTaskWhereInput.status) &&
        equalsNullable(this.statusIn, reportTaskWhereInput.statusIn) &&
        equalsNullable(this.statusNot, reportTaskWhereInput.statusNot) &&
        equalsNullable(this.statusNotIn, reportTaskWhereInput.statusNotIn) &&
        equalsNullable(this.template, reportTaskWhereInput.template);
  }

  private static <T> boolean equalsNullable(JsonNullable<T> a, JsonNullable<T> b) {
    return a == b || (a != null && b != null && a.isPresent() && b.isPresent() && Objects.deepEquals(a.get(), b.get()));
  }

  @Override
  public int hashCode() {
    return Objects.hash(hashCodeNullable(AND), hashCodeNullable(createdAt), hashCodeNullable(createdAtGt), hashCodeNullable(createdAtGte), hashCodeNullable(createdAtIn), hashCodeNullable(createdAtLt), hashCodeNullable(createdAtLte), hashCodeNullable(createdAtNot), hashCodeNullable(createdAtNotIn), hashCodeNullable(id), hashCodeNullable(idContains), hashCodeNullable(idEndsWith), hashCodeNullable(idGt), hashCodeNullable(idGte), hashCodeNullable(idIn), hashCodeNullable(idLt), hashCodeNullable(idLte), hashCodeNullable(idNot), hashCodeNullable(idNotContains), hashCodeNullable(idNotEndsWith), hashCodeNullable(idNotIn), hashCodeNullable(idNotStartsWith), hashCodeNullable(idStartsWith), hashCodeNullable(internal), hashCodeNullable(internalNot), hashCodeNullable(name), hashCodeNullable(nameContains), hashCodeNullable(nameEndsWith), hashCodeNullable(nameGt), hashCodeNullable(nameGte), hashCodeNullable(nameIn), hashCodeNullable(nameLt), hashCodeNullable(nameLte), hashCodeNullable(nameNot), hashCodeNullable(nameNotContains), hashCodeNullable(nameNotEndsWith), hashCodeNullable(nameNotIn), hashCodeNullable(nameNotStartsWith), hashCodeNullable(nameStartsWith), hashCodeNullable(NOT), hashCodeNullable(OR), hashCodeNullable(planId), hashCodeNullable(planIdContains), hashCodeNullable(planIdEndsWith), hashCodeNullable(planIdGt), hashCodeNullable(planIdGte), hashCodeNullable(planIdIn), hashCodeNullable(planIdLt), hashCodeNullable(planIdLte), hashCodeNullable(planIdNot), hashCodeNullable(planIdNotContains), hashCodeNullable(planIdNotEndsWith), hashCodeNullable(planIdNotIn), hashCodeNullable(planIdNotStartsWith), hashCodeNullable(planIdStartsWith), hashCodeNullable(status), hashCodeNullable(statusIn), hashCodeNullable(statusNot), hashCodeNullable(statusNotIn), hashCodeNullable(template));
  }

  private static <T> int hashCodeNullable(JsonNullable<T> a) {
    if (a == null) {
      return 1;
    }
    return a.isPresent() ? Arrays.deepHashCode(new Object[]{a.get()}) : 31;
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ReportTaskWhereInput {\n");
    sb.append("    AND: ").append(toIndentedString(AND)).append("\n");
    sb.append("    createdAt: ").append(toIndentedString(createdAt)).append("\n");
    sb.append("    createdAtGt: ").append(toIndentedString(createdAtGt)).append("\n");
    sb.append("    createdAtGte: ").append(toIndentedString(createdAtGte)).append("\n");
    sb.append("    createdAtIn: ").append(toIndentedString(createdAtIn)).append("\n");
    sb.append("    createdAtLt: ").append(toIndentedString(createdAtLt)).append("\n");
    sb.append("    createdAtLte: ").append(toIndentedString(createdAtLte)).append("\n");
    sb.append("    createdAtNot: ").append(toIndentedString(createdAtNot)).append("\n");
    sb.append("    createdAtNotIn: ").append(toIndentedString(createdAtNotIn)).append("\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    idContains: ").append(toIndentedString(idContains)).append("\n");
    sb.append("    idEndsWith: ").append(toIndentedString(idEndsWith)).append("\n");
    sb.append("    idGt: ").append(toIndentedString(idGt)).append("\n");
    sb.append("    idGte: ").append(toIndentedString(idGte)).append("\n");
    sb.append("    idIn: ").append(toIndentedString(idIn)).append("\n");
    sb.append("    idLt: ").append(toIndentedString(idLt)).append("\n");
    sb.append("    idLte: ").append(toIndentedString(idLte)).append("\n");
    sb.append("    idNot: ").append(toIndentedString(idNot)).append("\n");
    sb.append("    idNotContains: ").append(toIndentedString(idNotContains)).append("\n");
    sb.append("    idNotEndsWith: ").append(toIndentedString(idNotEndsWith)).append("\n");
    sb.append("    idNotIn: ").append(toIndentedString(idNotIn)).append("\n");
    sb.append("    idNotStartsWith: ").append(toIndentedString(idNotStartsWith)).append("\n");
    sb.append("    idStartsWith: ").append(toIndentedString(idStartsWith)).append("\n");
    sb.append("    internal: ").append(toIndentedString(internal)).append("\n");
    sb.append("    internalNot: ").append(toIndentedString(internalNot)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    nameContains: ").append(toIndentedString(nameContains)).append("\n");
    sb.append("    nameEndsWith: ").append(toIndentedString(nameEndsWith)).append("\n");
    sb.append("    nameGt: ").append(toIndentedString(nameGt)).append("\n");
    sb.append("    nameGte: ").append(toIndentedString(nameGte)).append("\n");
    sb.append("    nameIn: ").append(toIndentedString(nameIn)).append("\n");
    sb.append("    nameLt: ").append(toIndentedString(nameLt)).append("\n");
    sb.append("    nameLte: ").append(toIndentedString(nameLte)).append("\n");
    sb.append("    nameNot: ").append(toIndentedString(nameNot)).append("\n");
    sb.append("    nameNotContains: ").append(toIndentedString(nameNotContains)).append("\n");
    sb.append("    nameNotEndsWith: ").append(toIndentedString(nameNotEndsWith)).append("\n");
    sb.append("    nameNotIn: ").append(toIndentedString(nameNotIn)).append("\n");
    sb.append("    nameNotStartsWith: ").append(toIndentedString(nameNotStartsWith)).append("\n");
    sb.append("    nameStartsWith: ").append(toIndentedString(nameStartsWith)).append("\n");
    sb.append("    NOT: ").append(toIndentedString(NOT)).append("\n");
    sb.append("    OR: ").append(toIndentedString(OR)).append("\n");
    sb.append("    planId: ").append(toIndentedString(planId)).append("\n");
    sb.append("    planIdContains: ").append(toIndentedString(planIdContains)).append("\n");
    sb.append("    planIdEndsWith: ").append(toIndentedString(planIdEndsWith)).append("\n");
    sb.append("    planIdGt: ").append(toIndentedString(planIdGt)).append("\n");
    sb.append("    planIdGte: ").append(toIndentedString(planIdGte)).append("\n");
    sb.append("    planIdIn: ").append(toIndentedString(planIdIn)).append("\n");
    sb.append("    planIdLt: ").append(toIndentedString(planIdLt)).append("\n");
    sb.append("    planIdLte: ").append(toIndentedString(planIdLte)).append("\n");
    sb.append("    planIdNot: ").append(toIndentedString(planIdNot)).append("\n");
    sb.append("    planIdNotContains: ").append(toIndentedString(planIdNotContains)).append("\n");
    sb.append("    planIdNotEndsWith: ").append(toIndentedString(planIdNotEndsWith)).append("\n");
    sb.append("    planIdNotIn: ").append(toIndentedString(planIdNotIn)).append("\n");
    sb.append("    planIdNotStartsWith: ").append(toIndentedString(planIdNotStartsWith)).append("\n");
    sb.append("    planIdStartsWith: ").append(toIndentedString(planIdStartsWith)).append("\n");
    sb.append("    status: ").append(toIndentedString(status)).append("\n");
    sb.append("    statusIn: ").append(toIndentedString(statusIn)).append("\n");
    sb.append("    statusNot: ").append(toIndentedString(statusNot)).append("\n");
    sb.append("    statusNotIn: ").append(toIndentedString(statusNotIn)).append("\n");
    sb.append("    template: ").append(toIndentedString(template)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

