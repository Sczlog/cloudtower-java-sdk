/*
 * Tower SDK API
 * cloudtower operation API and SDK
 *
 * The version of the OpenAPI document: 1.7.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.smartx.tower.model;

import java.util.Objects;
import java.util.Arrays;
import java.util.Map;
import java.util.HashMap;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import com.smartx.tower.model.ClusterWhereInput;
import com.smartx.tower.model.ElfDataStoreType;
import com.smartx.tower.model.IscsiTargetWhereInput;
import com.smartx.tower.model.NfsExportWhereInput;
import com.smartx.tower.model.NvmfSubsystemWhereInput;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.util.ArrayList;
import java.util.List;
import org.openapitools.jackson.nullable.JsonNullable;
import com.fasterxml.jackson.annotation.JsonIgnore;
import org.openapitools.jackson.nullable.JsonNullable;
import java.util.NoSuchElementException;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;


/**
 * ElfDataStoreWhereInput
 */
@JsonPropertyOrder({
  ElfDataStoreWhereInput.JSON_PROPERTY_A_N_D,
  ElfDataStoreWhereInput.JSON_PROPERTY_CLUSTER,
  ElfDataStoreWhereInput.JSON_PROPERTY_DESCRIPTION,
  ElfDataStoreWhereInput.JSON_PROPERTY_DESCRIPTION_CONTAINS,
  ElfDataStoreWhereInput.JSON_PROPERTY_DESCRIPTION_ENDS_WITH,
  ElfDataStoreWhereInput.JSON_PROPERTY_DESCRIPTION_GT,
  ElfDataStoreWhereInput.JSON_PROPERTY_DESCRIPTION_GTE,
  ElfDataStoreWhereInput.JSON_PROPERTY_DESCRIPTION_IN,
  ElfDataStoreWhereInput.JSON_PROPERTY_DESCRIPTION_LT,
  ElfDataStoreWhereInput.JSON_PROPERTY_DESCRIPTION_LTE,
  ElfDataStoreWhereInput.JSON_PROPERTY_DESCRIPTION_NOT,
  ElfDataStoreWhereInput.JSON_PROPERTY_DESCRIPTION_NOT_CONTAINS,
  ElfDataStoreWhereInput.JSON_PROPERTY_DESCRIPTION_NOT_ENDS_WITH,
  ElfDataStoreWhereInput.JSON_PROPERTY_DESCRIPTION_NOT_IN,
  ElfDataStoreWhereInput.JSON_PROPERTY_DESCRIPTION_NOT_STARTS_WITH,
  ElfDataStoreWhereInput.JSON_PROPERTY_DESCRIPTION_STARTS_WITH,
  ElfDataStoreWhereInput.JSON_PROPERTY_EXTERNAL_USE,
  ElfDataStoreWhereInput.JSON_PROPERTY_EXTERNAL_USE_NOT,
  ElfDataStoreWhereInput.JSON_PROPERTY_ID,
  ElfDataStoreWhereInput.JSON_PROPERTY_ID_CONTAINS,
  ElfDataStoreWhereInput.JSON_PROPERTY_ID_ENDS_WITH,
  ElfDataStoreWhereInput.JSON_PROPERTY_ID_GT,
  ElfDataStoreWhereInput.JSON_PROPERTY_ID_GTE,
  ElfDataStoreWhereInput.JSON_PROPERTY_ID_IN,
  ElfDataStoreWhereInput.JSON_PROPERTY_ID_LT,
  ElfDataStoreWhereInput.JSON_PROPERTY_ID_LTE,
  ElfDataStoreWhereInput.JSON_PROPERTY_ID_NOT,
  ElfDataStoreWhereInput.JSON_PROPERTY_ID_NOT_CONTAINS,
  ElfDataStoreWhereInput.JSON_PROPERTY_ID_NOT_ENDS_WITH,
  ElfDataStoreWhereInput.JSON_PROPERTY_ID_NOT_IN,
  ElfDataStoreWhereInput.JSON_PROPERTY_ID_NOT_STARTS_WITH,
  ElfDataStoreWhereInput.JSON_PROPERTY_ID_STARTS_WITH,
  ElfDataStoreWhereInput.JSON_PROPERTY_INTERNAL,
  ElfDataStoreWhereInput.JSON_PROPERTY_INTERNAL_NOT,
  ElfDataStoreWhereInput.JSON_PROPERTY_IP_WHITELIST,
  ElfDataStoreWhereInput.JSON_PROPERTY_IP_WHITELIST_CONTAINS,
  ElfDataStoreWhereInput.JSON_PROPERTY_IP_WHITELIST_ENDS_WITH,
  ElfDataStoreWhereInput.JSON_PROPERTY_IP_WHITELIST_GT,
  ElfDataStoreWhereInput.JSON_PROPERTY_IP_WHITELIST_GTE,
  ElfDataStoreWhereInput.JSON_PROPERTY_IP_WHITELIST_IN,
  ElfDataStoreWhereInput.JSON_PROPERTY_IP_WHITELIST_LT,
  ElfDataStoreWhereInput.JSON_PROPERTY_IP_WHITELIST_LTE,
  ElfDataStoreWhereInput.JSON_PROPERTY_IP_WHITELIST_NOT,
  ElfDataStoreWhereInput.JSON_PROPERTY_IP_WHITELIST_NOT_CONTAINS,
  ElfDataStoreWhereInput.JSON_PROPERTY_IP_WHITELIST_NOT_ENDS_WITH,
  ElfDataStoreWhereInput.JSON_PROPERTY_IP_WHITELIST_NOT_IN,
  ElfDataStoreWhereInput.JSON_PROPERTY_IP_WHITELIST_NOT_STARTS_WITH,
  ElfDataStoreWhereInput.JSON_PROPERTY_IP_WHITELIST_STARTS_WITH,
  ElfDataStoreWhereInput.JSON_PROPERTY_ISCSI_TARGET,
  ElfDataStoreWhereInput.JSON_PROPERTY_LOCAL_ID,
  ElfDataStoreWhereInput.JSON_PROPERTY_LOCAL_ID_CONTAINS,
  ElfDataStoreWhereInput.JSON_PROPERTY_LOCAL_ID_ENDS_WITH,
  ElfDataStoreWhereInput.JSON_PROPERTY_LOCAL_ID_GT,
  ElfDataStoreWhereInput.JSON_PROPERTY_LOCAL_ID_GTE,
  ElfDataStoreWhereInput.JSON_PROPERTY_LOCAL_ID_IN,
  ElfDataStoreWhereInput.JSON_PROPERTY_LOCAL_ID_LT,
  ElfDataStoreWhereInput.JSON_PROPERTY_LOCAL_ID_LTE,
  ElfDataStoreWhereInput.JSON_PROPERTY_LOCAL_ID_NOT,
  ElfDataStoreWhereInput.JSON_PROPERTY_LOCAL_ID_NOT_CONTAINS,
  ElfDataStoreWhereInput.JSON_PROPERTY_LOCAL_ID_NOT_ENDS_WITH,
  ElfDataStoreWhereInput.JSON_PROPERTY_LOCAL_ID_NOT_IN,
  ElfDataStoreWhereInput.JSON_PROPERTY_LOCAL_ID_NOT_STARTS_WITH,
  ElfDataStoreWhereInput.JSON_PROPERTY_LOCAL_ID_STARTS_WITH,
  ElfDataStoreWhereInput.JSON_PROPERTY_NAME,
  ElfDataStoreWhereInput.JSON_PROPERTY_NAME_CONTAINS,
  ElfDataStoreWhereInput.JSON_PROPERTY_NAME_ENDS_WITH,
  ElfDataStoreWhereInput.JSON_PROPERTY_NAME_GT,
  ElfDataStoreWhereInput.JSON_PROPERTY_NAME_GTE,
  ElfDataStoreWhereInput.JSON_PROPERTY_NAME_IN,
  ElfDataStoreWhereInput.JSON_PROPERTY_NAME_LT,
  ElfDataStoreWhereInput.JSON_PROPERTY_NAME_LTE,
  ElfDataStoreWhereInput.JSON_PROPERTY_NAME_NOT,
  ElfDataStoreWhereInput.JSON_PROPERTY_NAME_NOT_CONTAINS,
  ElfDataStoreWhereInput.JSON_PROPERTY_NAME_NOT_ENDS_WITH,
  ElfDataStoreWhereInput.JSON_PROPERTY_NAME_NOT_IN,
  ElfDataStoreWhereInput.JSON_PROPERTY_NAME_NOT_STARTS_WITH,
  ElfDataStoreWhereInput.JSON_PROPERTY_NAME_STARTS_WITH,
  ElfDataStoreWhereInput.JSON_PROPERTY_NFS_EXPORT,
  ElfDataStoreWhereInput.JSON_PROPERTY_N_O_T,
  ElfDataStoreWhereInput.JSON_PROPERTY_NVMF_SUBSYSTEM,
  ElfDataStoreWhereInput.JSON_PROPERTY_O_R,
  ElfDataStoreWhereInput.JSON_PROPERTY_REPLICA_NUM,
  ElfDataStoreWhereInput.JSON_PROPERTY_REPLICA_NUM_GT,
  ElfDataStoreWhereInput.JSON_PROPERTY_REPLICA_NUM_GTE,
  ElfDataStoreWhereInput.JSON_PROPERTY_REPLICA_NUM_IN,
  ElfDataStoreWhereInput.JSON_PROPERTY_REPLICA_NUM_LT,
  ElfDataStoreWhereInput.JSON_PROPERTY_REPLICA_NUM_LTE,
  ElfDataStoreWhereInput.JSON_PROPERTY_REPLICA_NUM_NOT,
  ElfDataStoreWhereInput.JSON_PROPERTY_REPLICA_NUM_NOT_IN,
  ElfDataStoreWhereInput.JSON_PROPERTY_THIN_PROVISION,
  ElfDataStoreWhereInput.JSON_PROPERTY_THIN_PROVISION_NOT,
  ElfDataStoreWhereInput.JSON_PROPERTY_TYPE,
  ElfDataStoreWhereInput.JSON_PROPERTY_TYPE_IN,
  ElfDataStoreWhereInput.JSON_PROPERTY_TYPE_NOT,
  ElfDataStoreWhereInput.JSON_PROPERTY_TYPE_NOT_IN
})
@javax.annotation.processing.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2021-10-27T15:59:14.939791800+08:00[Asia/Shanghai]")
public class ElfDataStoreWhereInput {
  public static final String JSON_PROPERTY_A_N_D = "AND";
  private JsonNullable<List<ElfDataStoreWhereInput>> AND = JsonNullable.<List<ElfDataStoreWhereInput>>undefined();

  public static final String JSON_PROPERTY_CLUSTER = "cluster";
  private JsonNullable<ClusterWhereInput> cluster = JsonNullable.<ClusterWhereInput>undefined();

  public static final String JSON_PROPERTY_DESCRIPTION = "description";
  private JsonNullable<String> description = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_DESCRIPTION_CONTAINS = "description_contains";
  private JsonNullable<String> descriptionContains = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_DESCRIPTION_ENDS_WITH = "description_ends_with";
  private JsonNullable<String> descriptionEndsWith = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_DESCRIPTION_GT = "description_gt";
  private JsonNullable<String> descriptionGt = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_DESCRIPTION_GTE = "description_gte";
  private JsonNullable<String> descriptionGte = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_DESCRIPTION_IN = "description_in";
  private JsonNullable<List<String>> descriptionIn = JsonNullable.<List<String>>undefined();

  public static final String JSON_PROPERTY_DESCRIPTION_LT = "description_lt";
  private JsonNullable<String> descriptionLt = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_DESCRIPTION_LTE = "description_lte";
  private JsonNullable<String> descriptionLte = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_DESCRIPTION_NOT = "description_not";
  private JsonNullable<String> descriptionNot = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_DESCRIPTION_NOT_CONTAINS = "description_not_contains";
  private JsonNullable<String> descriptionNotContains = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_DESCRIPTION_NOT_ENDS_WITH = "description_not_ends_with";
  private JsonNullable<String> descriptionNotEndsWith = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_DESCRIPTION_NOT_IN = "description_not_in";
  private JsonNullable<List<String>> descriptionNotIn = JsonNullable.<List<String>>undefined();

  public static final String JSON_PROPERTY_DESCRIPTION_NOT_STARTS_WITH = "description_not_starts_with";
  private JsonNullable<String> descriptionNotStartsWith = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_DESCRIPTION_STARTS_WITH = "description_starts_with";
  private JsonNullable<String> descriptionStartsWith = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_EXTERNAL_USE = "external_use";
  private JsonNullable<Boolean> externalUse = JsonNullable.<Boolean>undefined();

  public static final String JSON_PROPERTY_EXTERNAL_USE_NOT = "external_use_not";
  private JsonNullable<Boolean> externalUseNot = JsonNullable.<Boolean>undefined();

  public static final String JSON_PROPERTY_ID = "id";
  private JsonNullable<String> id = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_ID_CONTAINS = "id_contains";
  private JsonNullable<String> idContains = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_ID_ENDS_WITH = "id_ends_with";
  private JsonNullable<String> idEndsWith = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_ID_GT = "id_gt";
  private JsonNullable<String> idGt = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_ID_GTE = "id_gte";
  private JsonNullable<String> idGte = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_ID_IN = "id_in";
  private JsonNullable<List<String>> idIn = JsonNullable.<List<String>>undefined();

  public static final String JSON_PROPERTY_ID_LT = "id_lt";
  private JsonNullable<String> idLt = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_ID_LTE = "id_lte";
  private JsonNullable<String> idLte = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_ID_NOT = "id_not";
  private JsonNullable<String> idNot = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_ID_NOT_CONTAINS = "id_not_contains";
  private JsonNullable<String> idNotContains = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_ID_NOT_ENDS_WITH = "id_not_ends_with";
  private JsonNullable<String> idNotEndsWith = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_ID_NOT_IN = "id_not_in";
  private JsonNullable<List<String>> idNotIn = JsonNullable.<List<String>>undefined();

  public static final String JSON_PROPERTY_ID_NOT_STARTS_WITH = "id_not_starts_with";
  private JsonNullable<String> idNotStartsWith = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_ID_STARTS_WITH = "id_starts_with";
  private JsonNullable<String> idStartsWith = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_INTERNAL = "internal";
  private JsonNullable<Boolean> internal = JsonNullable.<Boolean>undefined();

  public static final String JSON_PROPERTY_INTERNAL_NOT = "internal_not";
  private JsonNullable<Boolean> internalNot = JsonNullable.<Boolean>undefined();

  public static final String JSON_PROPERTY_IP_WHITELIST = "ip_whitelist";
  private JsonNullable<String> ipWhitelist = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_IP_WHITELIST_CONTAINS = "ip_whitelist_contains";
  private JsonNullable<String> ipWhitelistContains = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_IP_WHITELIST_ENDS_WITH = "ip_whitelist_ends_with";
  private JsonNullable<String> ipWhitelistEndsWith = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_IP_WHITELIST_GT = "ip_whitelist_gt";
  private JsonNullable<String> ipWhitelistGt = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_IP_WHITELIST_GTE = "ip_whitelist_gte";
  private JsonNullable<String> ipWhitelistGte = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_IP_WHITELIST_IN = "ip_whitelist_in";
  private JsonNullable<List<String>> ipWhitelistIn = JsonNullable.<List<String>>undefined();

  public static final String JSON_PROPERTY_IP_WHITELIST_LT = "ip_whitelist_lt";
  private JsonNullable<String> ipWhitelistLt = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_IP_WHITELIST_LTE = "ip_whitelist_lte";
  private JsonNullable<String> ipWhitelistLte = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_IP_WHITELIST_NOT = "ip_whitelist_not";
  private JsonNullable<String> ipWhitelistNot = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_IP_WHITELIST_NOT_CONTAINS = "ip_whitelist_not_contains";
  private JsonNullable<String> ipWhitelistNotContains = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_IP_WHITELIST_NOT_ENDS_WITH = "ip_whitelist_not_ends_with";
  private JsonNullable<String> ipWhitelistNotEndsWith = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_IP_WHITELIST_NOT_IN = "ip_whitelist_not_in";
  private JsonNullable<List<String>> ipWhitelistNotIn = JsonNullable.<List<String>>undefined();

  public static final String JSON_PROPERTY_IP_WHITELIST_NOT_STARTS_WITH = "ip_whitelist_not_starts_with";
  private JsonNullable<String> ipWhitelistNotStartsWith = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_IP_WHITELIST_STARTS_WITH = "ip_whitelist_starts_with";
  private JsonNullable<String> ipWhitelistStartsWith = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_ISCSI_TARGET = "iscsi_target";
  private JsonNullable<IscsiTargetWhereInput> iscsiTarget = JsonNullable.<IscsiTargetWhereInput>undefined();

  public static final String JSON_PROPERTY_LOCAL_ID = "local_id";
  private JsonNullable<String> localId = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_LOCAL_ID_CONTAINS = "local_id_contains";
  private JsonNullable<String> localIdContains = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_LOCAL_ID_ENDS_WITH = "local_id_ends_with";
  private JsonNullable<String> localIdEndsWith = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_LOCAL_ID_GT = "local_id_gt";
  private JsonNullable<String> localIdGt = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_LOCAL_ID_GTE = "local_id_gte";
  private JsonNullable<String> localIdGte = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_LOCAL_ID_IN = "local_id_in";
  private JsonNullable<List<String>> localIdIn = JsonNullable.<List<String>>undefined();

  public static final String JSON_PROPERTY_LOCAL_ID_LT = "local_id_lt";
  private JsonNullable<String> localIdLt = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_LOCAL_ID_LTE = "local_id_lte";
  private JsonNullable<String> localIdLte = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_LOCAL_ID_NOT = "local_id_not";
  private JsonNullable<String> localIdNot = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_LOCAL_ID_NOT_CONTAINS = "local_id_not_contains";
  private JsonNullable<String> localIdNotContains = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_LOCAL_ID_NOT_ENDS_WITH = "local_id_not_ends_with";
  private JsonNullable<String> localIdNotEndsWith = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_LOCAL_ID_NOT_IN = "local_id_not_in";
  private JsonNullable<List<String>> localIdNotIn = JsonNullable.<List<String>>undefined();

  public static final String JSON_PROPERTY_LOCAL_ID_NOT_STARTS_WITH = "local_id_not_starts_with";
  private JsonNullable<String> localIdNotStartsWith = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_LOCAL_ID_STARTS_WITH = "local_id_starts_with";
  private JsonNullable<String> localIdStartsWith = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_NAME = "name";
  private JsonNullable<String> name = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_NAME_CONTAINS = "name_contains";
  private JsonNullable<String> nameContains = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_NAME_ENDS_WITH = "name_ends_with";
  private JsonNullable<String> nameEndsWith = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_NAME_GT = "name_gt";
  private JsonNullable<String> nameGt = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_NAME_GTE = "name_gte";
  private JsonNullable<String> nameGte = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_NAME_IN = "name_in";
  private JsonNullable<List<String>> nameIn = JsonNullable.<List<String>>undefined();

  public static final String JSON_PROPERTY_NAME_LT = "name_lt";
  private JsonNullable<String> nameLt = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_NAME_LTE = "name_lte";
  private JsonNullable<String> nameLte = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_NAME_NOT = "name_not";
  private JsonNullable<String> nameNot = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_NAME_NOT_CONTAINS = "name_not_contains";
  private JsonNullable<String> nameNotContains = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_NAME_NOT_ENDS_WITH = "name_not_ends_with";
  private JsonNullable<String> nameNotEndsWith = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_NAME_NOT_IN = "name_not_in";
  private JsonNullable<List<String>> nameNotIn = JsonNullable.<List<String>>undefined();

  public static final String JSON_PROPERTY_NAME_NOT_STARTS_WITH = "name_not_starts_with";
  private JsonNullable<String> nameNotStartsWith = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_NAME_STARTS_WITH = "name_starts_with";
  private JsonNullable<String> nameStartsWith = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_NFS_EXPORT = "nfs_export";
  private JsonNullable<NfsExportWhereInput> nfsExport = JsonNullable.<NfsExportWhereInput>undefined();

  public static final String JSON_PROPERTY_N_O_T = "NOT";
  private JsonNullable<List<ElfDataStoreWhereInput>> NOT = JsonNullable.<List<ElfDataStoreWhereInput>>undefined();

  public static final String JSON_PROPERTY_NVMF_SUBSYSTEM = "nvmf_subsystem";
  private JsonNullable<NvmfSubsystemWhereInput> nvmfSubsystem = JsonNullable.<NvmfSubsystemWhereInput>undefined();

  public static final String JSON_PROPERTY_O_R = "OR";
  private JsonNullable<List<ElfDataStoreWhereInput>> OR = JsonNullable.<List<ElfDataStoreWhereInput>>undefined();

  public static final String JSON_PROPERTY_REPLICA_NUM = "replica_num";
  private JsonNullable<Double> replicaNum = JsonNullable.<Double>undefined();

  public static final String JSON_PROPERTY_REPLICA_NUM_GT = "replica_num_gt";
  private JsonNullable<Double> replicaNumGt = JsonNullable.<Double>undefined();

  public static final String JSON_PROPERTY_REPLICA_NUM_GTE = "replica_num_gte";
  private JsonNullable<Double> replicaNumGte = JsonNullable.<Double>undefined();

  public static final String JSON_PROPERTY_REPLICA_NUM_IN = "replica_num_in";
  private JsonNullable<List<Double>> replicaNumIn = JsonNullable.<List<Double>>undefined();

  public static final String JSON_PROPERTY_REPLICA_NUM_LT = "replica_num_lt";
  private JsonNullable<Double> replicaNumLt = JsonNullable.<Double>undefined();

  public static final String JSON_PROPERTY_REPLICA_NUM_LTE = "replica_num_lte";
  private JsonNullable<Double> replicaNumLte = JsonNullable.<Double>undefined();

  public static final String JSON_PROPERTY_REPLICA_NUM_NOT = "replica_num_not";
  private JsonNullable<Double> replicaNumNot = JsonNullable.<Double>undefined();

  public static final String JSON_PROPERTY_REPLICA_NUM_NOT_IN = "replica_num_not_in";
  private JsonNullable<List<Double>> replicaNumNotIn = JsonNullable.<List<Double>>undefined();

  public static final String JSON_PROPERTY_THIN_PROVISION = "thin_provision";
  private JsonNullable<Boolean> thinProvision = JsonNullable.<Boolean>undefined();

  public static final String JSON_PROPERTY_THIN_PROVISION_NOT = "thin_provision_not";
  private JsonNullable<Boolean> thinProvisionNot = JsonNullable.<Boolean>undefined();

  public static final String JSON_PROPERTY_TYPE = "type";
  private JsonNullable<ElfDataStoreType> type = JsonNullable.<ElfDataStoreType>undefined();

  public static final String JSON_PROPERTY_TYPE_IN = "type_in";
  private JsonNullable<List<ElfDataStoreType>> typeIn = JsonNullable.<List<ElfDataStoreType>>undefined();

  public static final String JSON_PROPERTY_TYPE_NOT = "type_not";
  private JsonNullable<ElfDataStoreType> typeNot = JsonNullable.<ElfDataStoreType>undefined();

  public static final String JSON_PROPERTY_TYPE_NOT_IN = "type_not_in";
  private JsonNullable<List<ElfDataStoreType>> typeNotIn = JsonNullable.<List<ElfDataStoreType>>undefined();


  public ElfDataStoreWhereInput AND(List<ElfDataStoreWhereInput> AND) {
    this.AND = JsonNullable.<List<ElfDataStoreWhereInput>>of(AND);
    return this;
  }

  public ElfDataStoreWhereInput addANDItem(ElfDataStoreWhereInput ANDItem) {
    if (this.AND == null || !this.AND.isPresent()) {
      this.AND = JsonNullable.<List<ElfDataStoreWhereInput>>of(new ArrayList<>());
    }
    try {
      this.AND.get().add(ANDItem);
    } catch (java.util.NoSuchElementException e) {
      // this can never happen, as we make sure above that the value is present
    }
    return this;
  }

   /**
   * Get AND
   * @return AND
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public List<ElfDataStoreWhereInput> getAND() {
        return AND.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_A_N_D)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<List<ElfDataStoreWhereInput>> getAND_JsonNullable() {
    return AND;
  }
  
  @JsonProperty(JSON_PROPERTY_A_N_D)
  public void setAND_JsonNullable(JsonNullable<List<ElfDataStoreWhereInput>> AND) {
    this.AND = AND;
  }

  public void setAND(List<ElfDataStoreWhereInput> AND) {
    this.AND = JsonNullable.<List<ElfDataStoreWhereInput>>of(AND);
  }


  public ElfDataStoreWhereInput cluster(ClusterWhereInput cluster) {
    this.cluster = JsonNullable.<ClusterWhereInput>of(cluster);
    return this;
  }

   /**
   * Get cluster
   * @return cluster
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public ClusterWhereInput getCluster() {
        return cluster.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_CLUSTER)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<ClusterWhereInput> getCluster_JsonNullable() {
    return cluster;
  }
  
  @JsonProperty(JSON_PROPERTY_CLUSTER)
  public void setCluster_JsonNullable(JsonNullable<ClusterWhereInput> cluster) {
    this.cluster = cluster;
  }

  public void setCluster(ClusterWhereInput cluster) {
    this.cluster = JsonNullable.<ClusterWhereInput>of(cluster);
  }


  public ElfDataStoreWhereInput description(String description) {
    this.description = JsonNullable.<String>of(description);
    return this;
  }

   /**
   * Get description
   * @return description
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getDescription() {
        return description.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_DESCRIPTION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getDescription_JsonNullable() {
    return description;
  }
  
  @JsonProperty(JSON_PROPERTY_DESCRIPTION)
  public void setDescription_JsonNullable(JsonNullable<String> description) {
    this.description = description;
  }

  public void setDescription(String description) {
    this.description = JsonNullable.<String>of(description);
  }


  public ElfDataStoreWhereInput descriptionContains(String descriptionContains) {
    this.descriptionContains = JsonNullable.<String>of(descriptionContains);
    return this;
  }

   /**
   * Get descriptionContains
   * @return descriptionContains
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getDescriptionContains() {
        return descriptionContains.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_DESCRIPTION_CONTAINS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getDescriptionContains_JsonNullable() {
    return descriptionContains;
  }
  
  @JsonProperty(JSON_PROPERTY_DESCRIPTION_CONTAINS)
  public void setDescriptionContains_JsonNullable(JsonNullable<String> descriptionContains) {
    this.descriptionContains = descriptionContains;
  }

  public void setDescriptionContains(String descriptionContains) {
    this.descriptionContains = JsonNullable.<String>of(descriptionContains);
  }


  public ElfDataStoreWhereInput descriptionEndsWith(String descriptionEndsWith) {
    this.descriptionEndsWith = JsonNullable.<String>of(descriptionEndsWith);
    return this;
  }

   /**
   * Get descriptionEndsWith
   * @return descriptionEndsWith
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getDescriptionEndsWith() {
        return descriptionEndsWith.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_DESCRIPTION_ENDS_WITH)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getDescriptionEndsWith_JsonNullable() {
    return descriptionEndsWith;
  }
  
  @JsonProperty(JSON_PROPERTY_DESCRIPTION_ENDS_WITH)
  public void setDescriptionEndsWith_JsonNullable(JsonNullable<String> descriptionEndsWith) {
    this.descriptionEndsWith = descriptionEndsWith;
  }

  public void setDescriptionEndsWith(String descriptionEndsWith) {
    this.descriptionEndsWith = JsonNullable.<String>of(descriptionEndsWith);
  }


  public ElfDataStoreWhereInput descriptionGt(String descriptionGt) {
    this.descriptionGt = JsonNullable.<String>of(descriptionGt);
    return this;
  }

   /**
   * Get descriptionGt
   * @return descriptionGt
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getDescriptionGt() {
        return descriptionGt.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_DESCRIPTION_GT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getDescriptionGt_JsonNullable() {
    return descriptionGt;
  }
  
  @JsonProperty(JSON_PROPERTY_DESCRIPTION_GT)
  public void setDescriptionGt_JsonNullable(JsonNullable<String> descriptionGt) {
    this.descriptionGt = descriptionGt;
  }

  public void setDescriptionGt(String descriptionGt) {
    this.descriptionGt = JsonNullable.<String>of(descriptionGt);
  }


  public ElfDataStoreWhereInput descriptionGte(String descriptionGte) {
    this.descriptionGte = JsonNullable.<String>of(descriptionGte);
    return this;
  }

   /**
   * Get descriptionGte
   * @return descriptionGte
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getDescriptionGte() {
        return descriptionGte.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_DESCRIPTION_GTE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getDescriptionGte_JsonNullable() {
    return descriptionGte;
  }
  
  @JsonProperty(JSON_PROPERTY_DESCRIPTION_GTE)
  public void setDescriptionGte_JsonNullable(JsonNullable<String> descriptionGte) {
    this.descriptionGte = descriptionGte;
  }

  public void setDescriptionGte(String descriptionGte) {
    this.descriptionGte = JsonNullable.<String>of(descriptionGte);
  }


  public ElfDataStoreWhereInput descriptionIn(List<String> descriptionIn) {
    this.descriptionIn = JsonNullable.<List<String>>of(descriptionIn);
    return this;
  }

  public ElfDataStoreWhereInput addDescriptionInItem(String descriptionInItem) {
    if (this.descriptionIn == null || !this.descriptionIn.isPresent()) {
      this.descriptionIn = JsonNullable.<List<String>>of(new ArrayList<>());
    }
    try {
      this.descriptionIn.get().add(descriptionInItem);
    } catch (java.util.NoSuchElementException e) {
      // this can never happen, as we make sure above that the value is present
    }
    return this;
  }

   /**
   * Get descriptionIn
   * @return descriptionIn
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public List<String> getDescriptionIn() {
        return descriptionIn.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_DESCRIPTION_IN)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<List<String>> getDescriptionIn_JsonNullable() {
    return descriptionIn;
  }
  
  @JsonProperty(JSON_PROPERTY_DESCRIPTION_IN)
  public void setDescriptionIn_JsonNullable(JsonNullable<List<String>> descriptionIn) {
    this.descriptionIn = descriptionIn;
  }

  public void setDescriptionIn(List<String> descriptionIn) {
    this.descriptionIn = JsonNullable.<List<String>>of(descriptionIn);
  }


  public ElfDataStoreWhereInput descriptionLt(String descriptionLt) {
    this.descriptionLt = JsonNullable.<String>of(descriptionLt);
    return this;
  }

   /**
   * Get descriptionLt
   * @return descriptionLt
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getDescriptionLt() {
        return descriptionLt.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_DESCRIPTION_LT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getDescriptionLt_JsonNullable() {
    return descriptionLt;
  }
  
  @JsonProperty(JSON_PROPERTY_DESCRIPTION_LT)
  public void setDescriptionLt_JsonNullable(JsonNullable<String> descriptionLt) {
    this.descriptionLt = descriptionLt;
  }

  public void setDescriptionLt(String descriptionLt) {
    this.descriptionLt = JsonNullable.<String>of(descriptionLt);
  }


  public ElfDataStoreWhereInput descriptionLte(String descriptionLte) {
    this.descriptionLte = JsonNullable.<String>of(descriptionLte);
    return this;
  }

   /**
   * Get descriptionLte
   * @return descriptionLte
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getDescriptionLte() {
        return descriptionLte.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_DESCRIPTION_LTE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getDescriptionLte_JsonNullable() {
    return descriptionLte;
  }
  
  @JsonProperty(JSON_PROPERTY_DESCRIPTION_LTE)
  public void setDescriptionLte_JsonNullable(JsonNullable<String> descriptionLte) {
    this.descriptionLte = descriptionLte;
  }

  public void setDescriptionLte(String descriptionLte) {
    this.descriptionLte = JsonNullable.<String>of(descriptionLte);
  }


  public ElfDataStoreWhereInput descriptionNot(String descriptionNot) {
    this.descriptionNot = JsonNullable.<String>of(descriptionNot);
    return this;
  }

   /**
   * Get descriptionNot
   * @return descriptionNot
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getDescriptionNot() {
        return descriptionNot.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_DESCRIPTION_NOT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getDescriptionNot_JsonNullable() {
    return descriptionNot;
  }
  
  @JsonProperty(JSON_PROPERTY_DESCRIPTION_NOT)
  public void setDescriptionNot_JsonNullable(JsonNullable<String> descriptionNot) {
    this.descriptionNot = descriptionNot;
  }

  public void setDescriptionNot(String descriptionNot) {
    this.descriptionNot = JsonNullable.<String>of(descriptionNot);
  }


  public ElfDataStoreWhereInput descriptionNotContains(String descriptionNotContains) {
    this.descriptionNotContains = JsonNullable.<String>of(descriptionNotContains);
    return this;
  }

   /**
   * Get descriptionNotContains
   * @return descriptionNotContains
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getDescriptionNotContains() {
        return descriptionNotContains.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_DESCRIPTION_NOT_CONTAINS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getDescriptionNotContains_JsonNullable() {
    return descriptionNotContains;
  }
  
  @JsonProperty(JSON_PROPERTY_DESCRIPTION_NOT_CONTAINS)
  public void setDescriptionNotContains_JsonNullable(JsonNullable<String> descriptionNotContains) {
    this.descriptionNotContains = descriptionNotContains;
  }

  public void setDescriptionNotContains(String descriptionNotContains) {
    this.descriptionNotContains = JsonNullable.<String>of(descriptionNotContains);
  }


  public ElfDataStoreWhereInput descriptionNotEndsWith(String descriptionNotEndsWith) {
    this.descriptionNotEndsWith = JsonNullable.<String>of(descriptionNotEndsWith);
    return this;
  }

   /**
   * Get descriptionNotEndsWith
   * @return descriptionNotEndsWith
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getDescriptionNotEndsWith() {
        return descriptionNotEndsWith.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_DESCRIPTION_NOT_ENDS_WITH)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getDescriptionNotEndsWith_JsonNullable() {
    return descriptionNotEndsWith;
  }
  
  @JsonProperty(JSON_PROPERTY_DESCRIPTION_NOT_ENDS_WITH)
  public void setDescriptionNotEndsWith_JsonNullable(JsonNullable<String> descriptionNotEndsWith) {
    this.descriptionNotEndsWith = descriptionNotEndsWith;
  }

  public void setDescriptionNotEndsWith(String descriptionNotEndsWith) {
    this.descriptionNotEndsWith = JsonNullable.<String>of(descriptionNotEndsWith);
  }


  public ElfDataStoreWhereInput descriptionNotIn(List<String> descriptionNotIn) {
    this.descriptionNotIn = JsonNullable.<List<String>>of(descriptionNotIn);
    return this;
  }

  public ElfDataStoreWhereInput addDescriptionNotInItem(String descriptionNotInItem) {
    if (this.descriptionNotIn == null || !this.descriptionNotIn.isPresent()) {
      this.descriptionNotIn = JsonNullable.<List<String>>of(new ArrayList<>());
    }
    try {
      this.descriptionNotIn.get().add(descriptionNotInItem);
    } catch (java.util.NoSuchElementException e) {
      // this can never happen, as we make sure above that the value is present
    }
    return this;
  }

   /**
   * Get descriptionNotIn
   * @return descriptionNotIn
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public List<String> getDescriptionNotIn() {
        return descriptionNotIn.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_DESCRIPTION_NOT_IN)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<List<String>> getDescriptionNotIn_JsonNullable() {
    return descriptionNotIn;
  }
  
  @JsonProperty(JSON_PROPERTY_DESCRIPTION_NOT_IN)
  public void setDescriptionNotIn_JsonNullable(JsonNullable<List<String>> descriptionNotIn) {
    this.descriptionNotIn = descriptionNotIn;
  }

  public void setDescriptionNotIn(List<String> descriptionNotIn) {
    this.descriptionNotIn = JsonNullable.<List<String>>of(descriptionNotIn);
  }


  public ElfDataStoreWhereInput descriptionNotStartsWith(String descriptionNotStartsWith) {
    this.descriptionNotStartsWith = JsonNullable.<String>of(descriptionNotStartsWith);
    return this;
  }

   /**
   * Get descriptionNotStartsWith
   * @return descriptionNotStartsWith
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getDescriptionNotStartsWith() {
        return descriptionNotStartsWith.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_DESCRIPTION_NOT_STARTS_WITH)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getDescriptionNotStartsWith_JsonNullable() {
    return descriptionNotStartsWith;
  }
  
  @JsonProperty(JSON_PROPERTY_DESCRIPTION_NOT_STARTS_WITH)
  public void setDescriptionNotStartsWith_JsonNullable(JsonNullable<String> descriptionNotStartsWith) {
    this.descriptionNotStartsWith = descriptionNotStartsWith;
  }

  public void setDescriptionNotStartsWith(String descriptionNotStartsWith) {
    this.descriptionNotStartsWith = JsonNullable.<String>of(descriptionNotStartsWith);
  }


  public ElfDataStoreWhereInput descriptionStartsWith(String descriptionStartsWith) {
    this.descriptionStartsWith = JsonNullable.<String>of(descriptionStartsWith);
    return this;
  }

   /**
   * Get descriptionStartsWith
   * @return descriptionStartsWith
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getDescriptionStartsWith() {
        return descriptionStartsWith.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_DESCRIPTION_STARTS_WITH)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getDescriptionStartsWith_JsonNullable() {
    return descriptionStartsWith;
  }
  
  @JsonProperty(JSON_PROPERTY_DESCRIPTION_STARTS_WITH)
  public void setDescriptionStartsWith_JsonNullable(JsonNullable<String> descriptionStartsWith) {
    this.descriptionStartsWith = descriptionStartsWith;
  }

  public void setDescriptionStartsWith(String descriptionStartsWith) {
    this.descriptionStartsWith = JsonNullable.<String>of(descriptionStartsWith);
  }


  public ElfDataStoreWhereInput externalUse(Boolean externalUse) {
    this.externalUse = JsonNullable.<Boolean>of(externalUse);
    return this;
  }

   /**
   * Get externalUse
   * @return externalUse
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public Boolean getExternalUse() {
        return externalUse.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_EXTERNAL_USE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<Boolean> getExternalUse_JsonNullable() {
    return externalUse;
  }
  
  @JsonProperty(JSON_PROPERTY_EXTERNAL_USE)
  public void setExternalUse_JsonNullable(JsonNullable<Boolean> externalUse) {
    this.externalUse = externalUse;
  }

  public void setExternalUse(Boolean externalUse) {
    this.externalUse = JsonNullable.<Boolean>of(externalUse);
  }


  public ElfDataStoreWhereInput externalUseNot(Boolean externalUseNot) {
    this.externalUseNot = JsonNullable.<Boolean>of(externalUseNot);
    return this;
  }

   /**
   * Get externalUseNot
   * @return externalUseNot
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public Boolean getExternalUseNot() {
        return externalUseNot.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_EXTERNAL_USE_NOT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<Boolean> getExternalUseNot_JsonNullable() {
    return externalUseNot;
  }
  
  @JsonProperty(JSON_PROPERTY_EXTERNAL_USE_NOT)
  public void setExternalUseNot_JsonNullable(JsonNullable<Boolean> externalUseNot) {
    this.externalUseNot = externalUseNot;
  }

  public void setExternalUseNot(Boolean externalUseNot) {
    this.externalUseNot = JsonNullable.<Boolean>of(externalUseNot);
  }


  public ElfDataStoreWhereInput id(String id) {
    this.id = JsonNullable.<String>of(id);
    return this;
  }

   /**
   * Get id
   * @return id
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getId() {
        return id.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getId_JsonNullable() {
    return id;
  }
  
  @JsonProperty(JSON_PROPERTY_ID)
  public void setId_JsonNullable(JsonNullable<String> id) {
    this.id = id;
  }

  public void setId(String id) {
    this.id = JsonNullable.<String>of(id);
  }


  public ElfDataStoreWhereInput idContains(String idContains) {
    this.idContains = JsonNullable.<String>of(idContains);
    return this;
  }

   /**
   * Get idContains
   * @return idContains
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getIdContains() {
        return idContains.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_ID_CONTAINS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getIdContains_JsonNullable() {
    return idContains;
  }
  
  @JsonProperty(JSON_PROPERTY_ID_CONTAINS)
  public void setIdContains_JsonNullable(JsonNullable<String> idContains) {
    this.idContains = idContains;
  }

  public void setIdContains(String idContains) {
    this.idContains = JsonNullable.<String>of(idContains);
  }


  public ElfDataStoreWhereInput idEndsWith(String idEndsWith) {
    this.idEndsWith = JsonNullable.<String>of(idEndsWith);
    return this;
  }

   /**
   * Get idEndsWith
   * @return idEndsWith
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getIdEndsWith() {
        return idEndsWith.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_ID_ENDS_WITH)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getIdEndsWith_JsonNullable() {
    return idEndsWith;
  }
  
  @JsonProperty(JSON_PROPERTY_ID_ENDS_WITH)
  public void setIdEndsWith_JsonNullable(JsonNullable<String> idEndsWith) {
    this.idEndsWith = idEndsWith;
  }

  public void setIdEndsWith(String idEndsWith) {
    this.idEndsWith = JsonNullable.<String>of(idEndsWith);
  }


  public ElfDataStoreWhereInput idGt(String idGt) {
    this.idGt = JsonNullable.<String>of(idGt);
    return this;
  }

   /**
   * Get idGt
   * @return idGt
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getIdGt() {
        return idGt.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_ID_GT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getIdGt_JsonNullable() {
    return idGt;
  }
  
  @JsonProperty(JSON_PROPERTY_ID_GT)
  public void setIdGt_JsonNullable(JsonNullable<String> idGt) {
    this.idGt = idGt;
  }

  public void setIdGt(String idGt) {
    this.idGt = JsonNullable.<String>of(idGt);
  }


  public ElfDataStoreWhereInput idGte(String idGte) {
    this.idGte = JsonNullable.<String>of(idGte);
    return this;
  }

   /**
   * Get idGte
   * @return idGte
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getIdGte() {
        return idGte.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_ID_GTE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getIdGte_JsonNullable() {
    return idGte;
  }
  
  @JsonProperty(JSON_PROPERTY_ID_GTE)
  public void setIdGte_JsonNullable(JsonNullable<String> idGte) {
    this.idGte = idGte;
  }

  public void setIdGte(String idGte) {
    this.idGte = JsonNullable.<String>of(idGte);
  }


  public ElfDataStoreWhereInput idIn(List<String> idIn) {
    this.idIn = JsonNullable.<List<String>>of(idIn);
    return this;
  }

  public ElfDataStoreWhereInput addIdInItem(String idInItem) {
    if (this.idIn == null || !this.idIn.isPresent()) {
      this.idIn = JsonNullable.<List<String>>of(new ArrayList<>());
    }
    try {
      this.idIn.get().add(idInItem);
    } catch (java.util.NoSuchElementException e) {
      // this can never happen, as we make sure above that the value is present
    }
    return this;
  }

   /**
   * Get idIn
   * @return idIn
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public List<String> getIdIn() {
        return idIn.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_ID_IN)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<List<String>> getIdIn_JsonNullable() {
    return idIn;
  }
  
  @JsonProperty(JSON_PROPERTY_ID_IN)
  public void setIdIn_JsonNullable(JsonNullable<List<String>> idIn) {
    this.idIn = idIn;
  }

  public void setIdIn(List<String> idIn) {
    this.idIn = JsonNullable.<List<String>>of(idIn);
  }


  public ElfDataStoreWhereInput idLt(String idLt) {
    this.idLt = JsonNullable.<String>of(idLt);
    return this;
  }

   /**
   * Get idLt
   * @return idLt
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getIdLt() {
        return idLt.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_ID_LT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getIdLt_JsonNullable() {
    return idLt;
  }
  
  @JsonProperty(JSON_PROPERTY_ID_LT)
  public void setIdLt_JsonNullable(JsonNullable<String> idLt) {
    this.idLt = idLt;
  }

  public void setIdLt(String idLt) {
    this.idLt = JsonNullable.<String>of(idLt);
  }


  public ElfDataStoreWhereInput idLte(String idLte) {
    this.idLte = JsonNullable.<String>of(idLte);
    return this;
  }

   /**
   * Get idLte
   * @return idLte
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getIdLte() {
        return idLte.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_ID_LTE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getIdLte_JsonNullable() {
    return idLte;
  }
  
  @JsonProperty(JSON_PROPERTY_ID_LTE)
  public void setIdLte_JsonNullable(JsonNullable<String> idLte) {
    this.idLte = idLte;
  }

  public void setIdLte(String idLte) {
    this.idLte = JsonNullable.<String>of(idLte);
  }


  public ElfDataStoreWhereInput idNot(String idNot) {
    this.idNot = JsonNullable.<String>of(idNot);
    return this;
  }

   /**
   * Get idNot
   * @return idNot
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getIdNot() {
        return idNot.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_ID_NOT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getIdNot_JsonNullable() {
    return idNot;
  }
  
  @JsonProperty(JSON_PROPERTY_ID_NOT)
  public void setIdNot_JsonNullable(JsonNullable<String> idNot) {
    this.idNot = idNot;
  }

  public void setIdNot(String idNot) {
    this.idNot = JsonNullable.<String>of(idNot);
  }


  public ElfDataStoreWhereInput idNotContains(String idNotContains) {
    this.idNotContains = JsonNullable.<String>of(idNotContains);
    return this;
  }

   /**
   * Get idNotContains
   * @return idNotContains
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getIdNotContains() {
        return idNotContains.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_ID_NOT_CONTAINS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getIdNotContains_JsonNullable() {
    return idNotContains;
  }
  
  @JsonProperty(JSON_PROPERTY_ID_NOT_CONTAINS)
  public void setIdNotContains_JsonNullable(JsonNullable<String> idNotContains) {
    this.idNotContains = idNotContains;
  }

  public void setIdNotContains(String idNotContains) {
    this.idNotContains = JsonNullable.<String>of(idNotContains);
  }


  public ElfDataStoreWhereInput idNotEndsWith(String idNotEndsWith) {
    this.idNotEndsWith = JsonNullable.<String>of(idNotEndsWith);
    return this;
  }

   /**
   * Get idNotEndsWith
   * @return idNotEndsWith
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getIdNotEndsWith() {
        return idNotEndsWith.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_ID_NOT_ENDS_WITH)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getIdNotEndsWith_JsonNullable() {
    return idNotEndsWith;
  }
  
  @JsonProperty(JSON_PROPERTY_ID_NOT_ENDS_WITH)
  public void setIdNotEndsWith_JsonNullable(JsonNullable<String> idNotEndsWith) {
    this.idNotEndsWith = idNotEndsWith;
  }

  public void setIdNotEndsWith(String idNotEndsWith) {
    this.idNotEndsWith = JsonNullable.<String>of(idNotEndsWith);
  }


  public ElfDataStoreWhereInput idNotIn(List<String> idNotIn) {
    this.idNotIn = JsonNullable.<List<String>>of(idNotIn);
    return this;
  }

  public ElfDataStoreWhereInput addIdNotInItem(String idNotInItem) {
    if (this.idNotIn == null || !this.idNotIn.isPresent()) {
      this.idNotIn = JsonNullable.<List<String>>of(new ArrayList<>());
    }
    try {
      this.idNotIn.get().add(idNotInItem);
    } catch (java.util.NoSuchElementException e) {
      // this can never happen, as we make sure above that the value is present
    }
    return this;
  }

   /**
   * Get idNotIn
   * @return idNotIn
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public List<String> getIdNotIn() {
        return idNotIn.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_ID_NOT_IN)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<List<String>> getIdNotIn_JsonNullable() {
    return idNotIn;
  }
  
  @JsonProperty(JSON_PROPERTY_ID_NOT_IN)
  public void setIdNotIn_JsonNullable(JsonNullable<List<String>> idNotIn) {
    this.idNotIn = idNotIn;
  }

  public void setIdNotIn(List<String> idNotIn) {
    this.idNotIn = JsonNullable.<List<String>>of(idNotIn);
  }


  public ElfDataStoreWhereInput idNotStartsWith(String idNotStartsWith) {
    this.idNotStartsWith = JsonNullable.<String>of(idNotStartsWith);
    return this;
  }

   /**
   * Get idNotStartsWith
   * @return idNotStartsWith
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getIdNotStartsWith() {
        return idNotStartsWith.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_ID_NOT_STARTS_WITH)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getIdNotStartsWith_JsonNullable() {
    return idNotStartsWith;
  }
  
  @JsonProperty(JSON_PROPERTY_ID_NOT_STARTS_WITH)
  public void setIdNotStartsWith_JsonNullable(JsonNullable<String> idNotStartsWith) {
    this.idNotStartsWith = idNotStartsWith;
  }

  public void setIdNotStartsWith(String idNotStartsWith) {
    this.idNotStartsWith = JsonNullable.<String>of(idNotStartsWith);
  }


  public ElfDataStoreWhereInput idStartsWith(String idStartsWith) {
    this.idStartsWith = JsonNullable.<String>of(idStartsWith);
    return this;
  }

   /**
   * Get idStartsWith
   * @return idStartsWith
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getIdStartsWith() {
        return idStartsWith.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_ID_STARTS_WITH)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getIdStartsWith_JsonNullable() {
    return idStartsWith;
  }
  
  @JsonProperty(JSON_PROPERTY_ID_STARTS_WITH)
  public void setIdStartsWith_JsonNullable(JsonNullable<String> idStartsWith) {
    this.idStartsWith = idStartsWith;
  }

  public void setIdStartsWith(String idStartsWith) {
    this.idStartsWith = JsonNullable.<String>of(idStartsWith);
  }


  public ElfDataStoreWhereInput internal(Boolean internal) {
    this.internal = JsonNullable.<Boolean>of(internal);
    return this;
  }

   /**
   * Get internal
   * @return internal
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public Boolean getInternal() {
        return internal.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_INTERNAL)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<Boolean> getInternal_JsonNullable() {
    return internal;
  }
  
  @JsonProperty(JSON_PROPERTY_INTERNAL)
  public void setInternal_JsonNullable(JsonNullable<Boolean> internal) {
    this.internal = internal;
  }

  public void setInternal(Boolean internal) {
    this.internal = JsonNullable.<Boolean>of(internal);
  }


  public ElfDataStoreWhereInput internalNot(Boolean internalNot) {
    this.internalNot = JsonNullable.<Boolean>of(internalNot);
    return this;
  }

   /**
   * Get internalNot
   * @return internalNot
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public Boolean getInternalNot() {
        return internalNot.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_INTERNAL_NOT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<Boolean> getInternalNot_JsonNullable() {
    return internalNot;
  }
  
  @JsonProperty(JSON_PROPERTY_INTERNAL_NOT)
  public void setInternalNot_JsonNullable(JsonNullable<Boolean> internalNot) {
    this.internalNot = internalNot;
  }

  public void setInternalNot(Boolean internalNot) {
    this.internalNot = JsonNullable.<Boolean>of(internalNot);
  }


  public ElfDataStoreWhereInput ipWhitelist(String ipWhitelist) {
    this.ipWhitelist = JsonNullable.<String>of(ipWhitelist);
    return this;
  }

   /**
   * Get ipWhitelist
   * @return ipWhitelist
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getIpWhitelist() {
        return ipWhitelist.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_IP_WHITELIST)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getIpWhitelist_JsonNullable() {
    return ipWhitelist;
  }
  
  @JsonProperty(JSON_PROPERTY_IP_WHITELIST)
  public void setIpWhitelist_JsonNullable(JsonNullable<String> ipWhitelist) {
    this.ipWhitelist = ipWhitelist;
  }

  public void setIpWhitelist(String ipWhitelist) {
    this.ipWhitelist = JsonNullable.<String>of(ipWhitelist);
  }


  public ElfDataStoreWhereInput ipWhitelistContains(String ipWhitelistContains) {
    this.ipWhitelistContains = JsonNullable.<String>of(ipWhitelistContains);
    return this;
  }

   /**
   * Get ipWhitelistContains
   * @return ipWhitelistContains
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getIpWhitelistContains() {
        return ipWhitelistContains.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_IP_WHITELIST_CONTAINS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getIpWhitelistContains_JsonNullable() {
    return ipWhitelistContains;
  }
  
  @JsonProperty(JSON_PROPERTY_IP_WHITELIST_CONTAINS)
  public void setIpWhitelistContains_JsonNullable(JsonNullable<String> ipWhitelistContains) {
    this.ipWhitelistContains = ipWhitelistContains;
  }

  public void setIpWhitelistContains(String ipWhitelistContains) {
    this.ipWhitelistContains = JsonNullable.<String>of(ipWhitelistContains);
  }


  public ElfDataStoreWhereInput ipWhitelistEndsWith(String ipWhitelistEndsWith) {
    this.ipWhitelistEndsWith = JsonNullable.<String>of(ipWhitelistEndsWith);
    return this;
  }

   /**
   * Get ipWhitelistEndsWith
   * @return ipWhitelistEndsWith
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getIpWhitelistEndsWith() {
        return ipWhitelistEndsWith.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_IP_WHITELIST_ENDS_WITH)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getIpWhitelistEndsWith_JsonNullable() {
    return ipWhitelistEndsWith;
  }
  
  @JsonProperty(JSON_PROPERTY_IP_WHITELIST_ENDS_WITH)
  public void setIpWhitelistEndsWith_JsonNullable(JsonNullable<String> ipWhitelistEndsWith) {
    this.ipWhitelistEndsWith = ipWhitelistEndsWith;
  }

  public void setIpWhitelistEndsWith(String ipWhitelistEndsWith) {
    this.ipWhitelistEndsWith = JsonNullable.<String>of(ipWhitelistEndsWith);
  }


  public ElfDataStoreWhereInput ipWhitelistGt(String ipWhitelistGt) {
    this.ipWhitelistGt = JsonNullable.<String>of(ipWhitelistGt);
    return this;
  }

   /**
   * Get ipWhitelistGt
   * @return ipWhitelistGt
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getIpWhitelistGt() {
        return ipWhitelistGt.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_IP_WHITELIST_GT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getIpWhitelistGt_JsonNullable() {
    return ipWhitelistGt;
  }
  
  @JsonProperty(JSON_PROPERTY_IP_WHITELIST_GT)
  public void setIpWhitelistGt_JsonNullable(JsonNullable<String> ipWhitelistGt) {
    this.ipWhitelistGt = ipWhitelistGt;
  }

  public void setIpWhitelistGt(String ipWhitelistGt) {
    this.ipWhitelistGt = JsonNullable.<String>of(ipWhitelistGt);
  }


  public ElfDataStoreWhereInput ipWhitelistGte(String ipWhitelistGte) {
    this.ipWhitelistGte = JsonNullable.<String>of(ipWhitelistGte);
    return this;
  }

   /**
   * Get ipWhitelistGte
   * @return ipWhitelistGte
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getIpWhitelistGte() {
        return ipWhitelistGte.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_IP_WHITELIST_GTE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getIpWhitelistGte_JsonNullable() {
    return ipWhitelistGte;
  }
  
  @JsonProperty(JSON_PROPERTY_IP_WHITELIST_GTE)
  public void setIpWhitelistGte_JsonNullable(JsonNullable<String> ipWhitelistGte) {
    this.ipWhitelistGte = ipWhitelistGte;
  }

  public void setIpWhitelistGte(String ipWhitelistGte) {
    this.ipWhitelistGte = JsonNullable.<String>of(ipWhitelistGte);
  }


  public ElfDataStoreWhereInput ipWhitelistIn(List<String> ipWhitelistIn) {
    this.ipWhitelistIn = JsonNullable.<List<String>>of(ipWhitelistIn);
    return this;
  }

  public ElfDataStoreWhereInput addIpWhitelistInItem(String ipWhitelistInItem) {
    if (this.ipWhitelistIn == null || !this.ipWhitelistIn.isPresent()) {
      this.ipWhitelistIn = JsonNullable.<List<String>>of(new ArrayList<>());
    }
    try {
      this.ipWhitelistIn.get().add(ipWhitelistInItem);
    } catch (java.util.NoSuchElementException e) {
      // this can never happen, as we make sure above that the value is present
    }
    return this;
  }

   /**
   * Get ipWhitelistIn
   * @return ipWhitelistIn
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public List<String> getIpWhitelistIn() {
        return ipWhitelistIn.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_IP_WHITELIST_IN)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<List<String>> getIpWhitelistIn_JsonNullable() {
    return ipWhitelistIn;
  }
  
  @JsonProperty(JSON_PROPERTY_IP_WHITELIST_IN)
  public void setIpWhitelistIn_JsonNullable(JsonNullable<List<String>> ipWhitelistIn) {
    this.ipWhitelistIn = ipWhitelistIn;
  }

  public void setIpWhitelistIn(List<String> ipWhitelistIn) {
    this.ipWhitelistIn = JsonNullable.<List<String>>of(ipWhitelistIn);
  }


  public ElfDataStoreWhereInput ipWhitelistLt(String ipWhitelistLt) {
    this.ipWhitelistLt = JsonNullable.<String>of(ipWhitelistLt);
    return this;
  }

   /**
   * Get ipWhitelistLt
   * @return ipWhitelistLt
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getIpWhitelistLt() {
        return ipWhitelistLt.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_IP_WHITELIST_LT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getIpWhitelistLt_JsonNullable() {
    return ipWhitelistLt;
  }
  
  @JsonProperty(JSON_PROPERTY_IP_WHITELIST_LT)
  public void setIpWhitelistLt_JsonNullable(JsonNullable<String> ipWhitelistLt) {
    this.ipWhitelistLt = ipWhitelistLt;
  }

  public void setIpWhitelistLt(String ipWhitelistLt) {
    this.ipWhitelistLt = JsonNullable.<String>of(ipWhitelistLt);
  }


  public ElfDataStoreWhereInput ipWhitelistLte(String ipWhitelistLte) {
    this.ipWhitelistLte = JsonNullable.<String>of(ipWhitelistLte);
    return this;
  }

   /**
   * Get ipWhitelistLte
   * @return ipWhitelistLte
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getIpWhitelistLte() {
        return ipWhitelistLte.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_IP_WHITELIST_LTE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getIpWhitelistLte_JsonNullable() {
    return ipWhitelistLte;
  }
  
  @JsonProperty(JSON_PROPERTY_IP_WHITELIST_LTE)
  public void setIpWhitelistLte_JsonNullable(JsonNullable<String> ipWhitelistLte) {
    this.ipWhitelistLte = ipWhitelistLte;
  }

  public void setIpWhitelistLte(String ipWhitelistLte) {
    this.ipWhitelistLte = JsonNullable.<String>of(ipWhitelistLte);
  }


  public ElfDataStoreWhereInput ipWhitelistNot(String ipWhitelistNot) {
    this.ipWhitelistNot = JsonNullable.<String>of(ipWhitelistNot);
    return this;
  }

   /**
   * Get ipWhitelistNot
   * @return ipWhitelistNot
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getIpWhitelistNot() {
        return ipWhitelistNot.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_IP_WHITELIST_NOT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getIpWhitelistNot_JsonNullable() {
    return ipWhitelistNot;
  }
  
  @JsonProperty(JSON_PROPERTY_IP_WHITELIST_NOT)
  public void setIpWhitelistNot_JsonNullable(JsonNullable<String> ipWhitelistNot) {
    this.ipWhitelistNot = ipWhitelistNot;
  }

  public void setIpWhitelistNot(String ipWhitelistNot) {
    this.ipWhitelistNot = JsonNullable.<String>of(ipWhitelistNot);
  }


  public ElfDataStoreWhereInput ipWhitelistNotContains(String ipWhitelistNotContains) {
    this.ipWhitelistNotContains = JsonNullable.<String>of(ipWhitelistNotContains);
    return this;
  }

   /**
   * Get ipWhitelistNotContains
   * @return ipWhitelistNotContains
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getIpWhitelistNotContains() {
        return ipWhitelistNotContains.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_IP_WHITELIST_NOT_CONTAINS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getIpWhitelistNotContains_JsonNullable() {
    return ipWhitelistNotContains;
  }
  
  @JsonProperty(JSON_PROPERTY_IP_WHITELIST_NOT_CONTAINS)
  public void setIpWhitelistNotContains_JsonNullable(JsonNullable<String> ipWhitelistNotContains) {
    this.ipWhitelistNotContains = ipWhitelistNotContains;
  }

  public void setIpWhitelistNotContains(String ipWhitelistNotContains) {
    this.ipWhitelistNotContains = JsonNullable.<String>of(ipWhitelistNotContains);
  }


  public ElfDataStoreWhereInput ipWhitelistNotEndsWith(String ipWhitelistNotEndsWith) {
    this.ipWhitelistNotEndsWith = JsonNullable.<String>of(ipWhitelistNotEndsWith);
    return this;
  }

   /**
   * Get ipWhitelistNotEndsWith
   * @return ipWhitelistNotEndsWith
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getIpWhitelistNotEndsWith() {
        return ipWhitelistNotEndsWith.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_IP_WHITELIST_NOT_ENDS_WITH)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getIpWhitelistNotEndsWith_JsonNullable() {
    return ipWhitelistNotEndsWith;
  }
  
  @JsonProperty(JSON_PROPERTY_IP_WHITELIST_NOT_ENDS_WITH)
  public void setIpWhitelistNotEndsWith_JsonNullable(JsonNullable<String> ipWhitelistNotEndsWith) {
    this.ipWhitelistNotEndsWith = ipWhitelistNotEndsWith;
  }

  public void setIpWhitelistNotEndsWith(String ipWhitelistNotEndsWith) {
    this.ipWhitelistNotEndsWith = JsonNullable.<String>of(ipWhitelistNotEndsWith);
  }


  public ElfDataStoreWhereInput ipWhitelistNotIn(List<String> ipWhitelistNotIn) {
    this.ipWhitelistNotIn = JsonNullable.<List<String>>of(ipWhitelistNotIn);
    return this;
  }

  public ElfDataStoreWhereInput addIpWhitelistNotInItem(String ipWhitelistNotInItem) {
    if (this.ipWhitelistNotIn == null || !this.ipWhitelistNotIn.isPresent()) {
      this.ipWhitelistNotIn = JsonNullable.<List<String>>of(new ArrayList<>());
    }
    try {
      this.ipWhitelistNotIn.get().add(ipWhitelistNotInItem);
    } catch (java.util.NoSuchElementException e) {
      // this can never happen, as we make sure above that the value is present
    }
    return this;
  }

   /**
   * Get ipWhitelistNotIn
   * @return ipWhitelistNotIn
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public List<String> getIpWhitelistNotIn() {
        return ipWhitelistNotIn.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_IP_WHITELIST_NOT_IN)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<List<String>> getIpWhitelistNotIn_JsonNullable() {
    return ipWhitelistNotIn;
  }
  
  @JsonProperty(JSON_PROPERTY_IP_WHITELIST_NOT_IN)
  public void setIpWhitelistNotIn_JsonNullable(JsonNullable<List<String>> ipWhitelistNotIn) {
    this.ipWhitelistNotIn = ipWhitelistNotIn;
  }

  public void setIpWhitelistNotIn(List<String> ipWhitelistNotIn) {
    this.ipWhitelistNotIn = JsonNullable.<List<String>>of(ipWhitelistNotIn);
  }


  public ElfDataStoreWhereInput ipWhitelistNotStartsWith(String ipWhitelistNotStartsWith) {
    this.ipWhitelistNotStartsWith = JsonNullable.<String>of(ipWhitelistNotStartsWith);
    return this;
  }

   /**
   * Get ipWhitelistNotStartsWith
   * @return ipWhitelistNotStartsWith
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getIpWhitelistNotStartsWith() {
        return ipWhitelistNotStartsWith.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_IP_WHITELIST_NOT_STARTS_WITH)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getIpWhitelistNotStartsWith_JsonNullable() {
    return ipWhitelistNotStartsWith;
  }
  
  @JsonProperty(JSON_PROPERTY_IP_WHITELIST_NOT_STARTS_WITH)
  public void setIpWhitelistNotStartsWith_JsonNullable(JsonNullable<String> ipWhitelistNotStartsWith) {
    this.ipWhitelistNotStartsWith = ipWhitelistNotStartsWith;
  }

  public void setIpWhitelistNotStartsWith(String ipWhitelistNotStartsWith) {
    this.ipWhitelistNotStartsWith = JsonNullable.<String>of(ipWhitelistNotStartsWith);
  }


  public ElfDataStoreWhereInput ipWhitelistStartsWith(String ipWhitelistStartsWith) {
    this.ipWhitelistStartsWith = JsonNullable.<String>of(ipWhitelistStartsWith);
    return this;
  }

   /**
   * Get ipWhitelistStartsWith
   * @return ipWhitelistStartsWith
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getIpWhitelistStartsWith() {
        return ipWhitelistStartsWith.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_IP_WHITELIST_STARTS_WITH)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getIpWhitelistStartsWith_JsonNullable() {
    return ipWhitelistStartsWith;
  }
  
  @JsonProperty(JSON_PROPERTY_IP_WHITELIST_STARTS_WITH)
  public void setIpWhitelistStartsWith_JsonNullable(JsonNullable<String> ipWhitelistStartsWith) {
    this.ipWhitelistStartsWith = ipWhitelistStartsWith;
  }

  public void setIpWhitelistStartsWith(String ipWhitelistStartsWith) {
    this.ipWhitelistStartsWith = JsonNullable.<String>of(ipWhitelistStartsWith);
  }


  public ElfDataStoreWhereInput iscsiTarget(IscsiTargetWhereInput iscsiTarget) {
    this.iscsiTarget = JsonNullable.<IscsiTargetWhereInput>of(iscsiTarget);
    return this;
  }

   /**
   * Get iscsiTarget
   * @return iscsiTarget
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public IscsiTargetWhereInput getIscsiTarget() {
        return iscsiTarget.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_ISCSI_TARGET)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<IscsiTargetWhereInput> getIscsiTarget_JsonNullable() {
    return iscsiTarget;
  }
  
  @JsonProperty(JSON_PROPERTY_ISCSI_TARGET)
  public void setIscsiTarget_JsonNullable(JsonNullable<IscsiTargetWhereInput> iscsiTarget) {
    this.iscsiTarget = iscsiTarget;
  }

  public void setIscsiTarget(IscsiTargetWhereInput iscsiTarget) {
    this.iscsiTarget = JsonNullable.<IscsiTargetWhereInput>of(iscsiTarget);
  }


  public ElfDataStoreWhereInput localId(String localId) {
    this.localId = JsonNullable.<String>of(localId);
    return this;
  }

   /**
   * Get localId
   * @return localId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getLocalId() {
        return localId.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_LOCAL_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getLocalId_JsonNullable() {
    return localId;
  }
  
  @JsonProperty(JSON_PROPERTY_LOCAL_ID)
  public void setLocalId_JsonNullable(JsonNullable<String> localId) {
    this.localId = localId;
  }

  public void setLocalId(String localId) {
    this.localId = JsonNullable.<String>of(localId);
  }


  public ElfDataStoreWhereInput localIdContains(String localIdContains) {
    this.localIdContains = JsonNullable.<String>of(localIdContains);
    return this;
  }

   /**
   * Get localIdContains
   * @return localIdContains
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getLocalIdContains() {
        return localIdContains.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_LOCAL_ID_CONTAINS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getLocalIdContains_JsonNullable() {
    return localIdContains;
  }
  
  @JsonProperty(JSON_PROPERTY_LOCAL_ID_CONTAINS)
  public void setLocalIdContains_JsonNullable(JsonNullable<String> localIdContains) {
    this.localIdContains = localIdContains;
  }

  public void setLocalIdContains(String localIdContains) {
    this.localIdContains = JsonNullable.<String>of(localIdContains);
  }


  public ElfDataStoreWhereInput localIdEndsWith(String localIdEndsWith) {
    this.localIdEndsWith = JsonNullable.<String>of(localIdEndsWith);
    return this;
  }

   /**
   * Get localIdEndsWith
   * @return localIdEndsWith
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getLocalIdEndsWith() {
        return localIdEndsWith.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_LOCAL_ID_ENDS_WITH)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getLocalIdEndsWith_JsonNullable() {
    return localIdEndsWith;
  }
  
  @JsonProperty(JSON_PROPERTY_LOCAL_ID_ENDS_WITH)
  public void setLocalIdEndsWith_JsonNullable(JsonNullable<String> localIdEndsWith) {
    this.localIdEndsWith = localIdEndsWith;
  }

  public void setLocalIdEndsWith(String localIdEndsWith) {
    this.localIdEndsWith = JsonNullable.<String>of(localIdEndsWith);
  }


  public ElfDataStoreWhereInput localIdGt(String localIdGt) {
    this.localIdGt = JsonNullable.<String>of(localIdGt);
    return this;
  }

   /**
   * Get localIdGt
   * @return localIdGt
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getLocalIdGt() {
        return localIdGt.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_LOCAL_ID_GT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getLocalIdGt_JsonNullable() {
    return localIdGt;
  }
  
  @JsonProperty(JSON_PROPERTY_LOCAL_ID_GT)
  public void setLocalIdGt_JsonNullable(JsonNullable<String> localIdGt) {
    this.localIdGt = localIdGt;
  }

  public void setLocalIdGt(String localIdGt) {
    this.localIdGt = JsonNullable.<String>of(localIdGt);
  }


  public ElfDataStoreWhereInput localIdGte(String localIdGte) {
    this.localIdGte = JsonNullable.<String>of(localIdGte);
    return this;
  }

   /**
   * Get localIdGte
   * @return localIdGte
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getLocalIdGte() {
        return localIdGte.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_LOCAL_ID_GTE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getLocalIdGte_JsonNullable() {
    return localIdGte;
  }
  
  @JsonProperty(JSON_PROPERTY_LOCAL_ID_GTE)
  public void setLocalIdGte_JsonNullable(JsonNullable<String> localIdGte) {
    this.localIdGte = localIdGte;
  }

  public void setLocalIdGte(String localIdGte) {
    this.localIdGte = JsonNullable.<String>of(localIdGte);
  }


  public ElfDataStoreWhereInput localIdIn(List<String> localIdIn) {
    this.localIdIn = JsonNullable.<List<String>>of(localIdIn);
    return this;
  }

  public ElfDataStoreWhereInput addLocalIdInItem(String localIdInItem) {
    if (this.localIdIn == null || !this.localIdIn.isPresent()) {
      this.localIdIn = JsonNullable.<List<String>>of(new ArrayList<>());
    }
    try {
      this.localIdIn.get().add(localIdInItem);
    } catch (java.util.NoSuchElementException e) {
      // this can never happen, as we make sure above that the value is present
    }
    return this;
  }

   /**
   * Get localIdIn
   * @return localIdIn
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public List<String> getLocalIdIn() {
        return localIdIn.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_LOCAL_ID_IN)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<List<String>> getLocalIdIn_JsonNullable() {
    return localIdIn;
  }
  
  @JsonProperty(JSON_PROPERTY_LOCAL_ID_IN)
  public void setLocalIdIn_JsonNullable(JsonNullable<List<String>> localIdIn) {
    this.localIdIn = localIdIn;
  }

  public void setLocalIdIn(List<String> localIdIn) {
    this.localIdIn = JsonNullable.<List<String>>of(localIdIn);
  }


  public ElfDataStoreWhereInput localIdLt(String localIdLt) {
    this.localIdLt = JsonNullable.<String>of(localIdLt);
    return this;
  }

   /**
   * Get localIdLt
   * @return localIdLt
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getLocalIdLt() {
        return localIdLt.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_LOCAL_ID_LT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getLocalIdLt_JsonNullable() {
    return localIdLt;
  }
  
  @JsonProperty(JSON_PROPERTY_LOCAL_ID_LT)
  public void setLocalIdLt_JsonNullable(JsonNullable<String> localIdLt) {
    this.localIdLt = localIdLt;
  }

  public void setLocalIdLt(String localIdLt) {
    this.localIdLt = JsonNullable.<String>of(localIdLt);
  }


  public ElfDataStoreWhereInput localIdLte(String localIdLte) {
    this.localIdLte = JsonNullable.<String>of(localIdLte);
    return this;
  }

   /**
   * Get localIdLte
   * @return localIdLte
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getLocalIdLte() {
        return localIdLte.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_LOCAL_ID_LTE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getLocalIdLte_JsonNullable() {
    return localIdLte;
  }
  
  @JsonProperty(JSON_PROPERTY_LOCAL_ID_LTE)
  public void setLocalIdLte_JsonNullable(JsonNullable<String> localIdLte) {
    this.localIdLte = localIdLte;
  }

  public void setLocalIdLte(String localIdLte) {
    this.localIdLte = JsonNullable.<String>of(localIdLte);
  }


  public ElfDataStoreWhereInput localIdNot(String localIdNot) {
    this.localIdNot = JsonNullable.<String>of(localIdNot);
    return this;
  }

   /**
   * Get localIdNot
   * @return localIdNot
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getLocalIdNot() {
        return localIdNot.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_LOCAL_ID_NOT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getLocalIdNot_JsonNullable() {
    return localIdNot;
  }
  
  @JsonProperty(JSON_PROPERTY_LOCAL_ID_NOT)
  public void setLocalIdNot_JsonNullable(JsonNullable<String> localIdNot) {
    this.localIdNot = localIdNot;
  }

  public void setLocalIdNot(String localIdNot) {
    this.localIdNot = JsonNullable.<String>of(localIdNot);
  }


  public ElfDataStoreWhereInput localIdNotContains(String localIdNotContains) {
    this.localIdNotContains = JsonNullable.<String>of(localIdNotContains);
    return this;
  }

   /**
   * Get localIdNotContains
   * @return localIdNotContains
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getLocalIdNotContains() {
        return localIdNotContains.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_LOCAL_ID_NOT_CONTAINS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getLocalIdNotContains_JsonNullable() {
    return localIdNotContains;
  }
  
  @JsonProperty(JSON_PROPERTY_LOCAL_ID_NOT_CONTAINS)
  public void setLocalIdNotContains_JsonNullable(JsonNullable<String> localIdNotContains) {
    this.localIdNotContains = localIdNotContains;
  }

  public void setLocalIdNotContains(String localIdNotContains) {
    this.localIdNotContains = JsonNullable.<String>of(localIdNotContains);
  }


  public ElfDataStoreWhereInput localIdNotEndsWith(String localIdNotEndsWith) {
    this.localIdNotEndsWith = JsonNullable.<String>of(localIdNotEndsWith);
    return this;
  }

   /**
   * Get localIdNotEndsWith
   * @return localIdNotEndsWith
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getLocalIdNotEndsWith() {
        return localIdNotEndsWith.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_LOCAL_ID_NOT_ENDS_WITH)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getLocalIdNotEndsWith_JsonNullable() {
    return localIdNotEndsWith;
  }
  
  @JsonProperty(JSON_PROPERTY_LOCAL_ID_NOT_ENDS_WITH)
  public void setLocalIdNotEndsWith_JsonNullable(JsonNullable<String> localIdNotEndsWith) {
    this.localIdNotEndsWith = localIdNotEndsWith;
  }

  public void setLocalIdNotEndsWith(String localIdNotEndsWith) {
    this.localIdNotEndsWith = JsonNullable.<String>of(localIdNotEndsWith);
  }


  public ElfDataStoreWhereInput localIdNotIn(List<String> localIdNotIn) {
    this.localIdNotIn = JsonNullable.<List<String>>of(localIdNotIn);
    return this;
  }

  public ElfDataStoreWhereInput addLocalIdNotInItem(String localIdNotInItem) {
    if (this.localIdNotIn == null || !this.localIdNotIn.isPresent()) {
      this.localIdNotIn = JsonNullable.<List<String>>of(new ArrayList<>());
    }
    try {
      this.localIdNotIn.get().add(localIdNotInItem);
    } catch (java.util.NoSuchElementException e) {
      // this can never happen, as we make sure above that the value is present
    }
    return this;
  }

   /**
   * Get localIdNotIn
   * @return localIdNotIn
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public List<String> getLocalIdNotIn() {
        return localIdNotIn.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_LOCAL_ID_NOT_IN)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<List<String>> getLocalIdNotIn_JsonNullable() {
    return localIdNotIn;
  }
  
  @JsonProperty(JSON_PROPERTY_LOCAL_ID_NOT_IN)
  public void setLocalIdNotIn_JsonNullable(JsonNullable<List<String>> localIdNotIn) {
    this.localIdNotIn = localIdNotIn;
  }

  public void setLocalIdNotIn(List<String> localIdNotIn) {
    this.localIdNotIn = JsonNullable.<List<String>>of(localIdNotIn);
  }


  public ElfDataStoreWhereInput localIdNotStartsWith(String localIdNotStartsWith) {
    this.localIdNotStartsWith = JsonNullable.<String>of(localIdNotStartsWith);
    return this;
  }

   /**
   * Get localIdNotStartsWith
   * @return localIdNotStartsWith
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getLocalIdNotStartsWith() {
        return localIdNotStartsWith.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_LOCAL_ID_NOT_STARTS_WITH)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getLocalIdNotStartsWith_JsonNullable() {
    return localIdNotStartsWith;
  }
  
  @JsonProperty(JSON_PROPERTY_LOCAL_ID_NOT_STARTS_WITH)
  public void setLocalIdNotStartsWith_JsonNullable(JsonNullable<String> localIdNotStartsWith) {
    this.localIdNotStartsWith = localIdNotStartsWith;
  }

  public void setLocalIdNotStartsWith(String localIdNotStartsWith) {
    this.localIdNotStartsWith = JsonNullable.<String>of(localIdNotStartsWith);
  }


  public ElfDataStoreWhereInput localIdStartsWith(String localIdStartsWith) {
    this.localIdStartsWith = JsonNullable.<String>of(localIdStartsWith);
    return this;
  }

   /**
   * Get localIdStartsWith
   * @return localIdStartsWith
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getLocalIdStartsWith() {
        return localIdStartsWith.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_LOCAL_ID_STARTS_WITH)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getLocalIdStartsWith_JsonNullable() {
    return localIdStartsWith;
  }
  
  @JsonProperty(JSON_PROPERTY_LOCAL_ID_STARTS_WITH)
  public void setLocalIdStartsWith_JsonNullable(JsonNullable<String> localIdStartsWith) {
    this.localIdStartsWith = localIdStartsWith;
  }

  public void setLocalIdStartsWith(String localIdStartsWith) {
    this.localIdStartsWith = JsonNullable.<String>of(localIdStartsWith);
  }


  public ElfDataStoreWhereInput name(String name) {
    this.name = JsonNullable.<String>of(name);
    return this;
  }

   /**
   * Get name
   * @return name
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getName() {
        return name.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getName_JsonNullable() {
    return name;
  }
  
  @JsonProperty(JSON_PROPERTY_NAME)
  public void setName_JsonNullable(JsonNullable<String> name) {
    this.name = name;
  }

  public void setName(String name) {
    this.name = JsonNullable.<String>of(name);
  }


  public ElfDataStoreWhereInput nameContains(String nameContains) {
    this.nameContains = JsonNullable.<String>of(nameContains);
    return this;
  }

   /**
   * Get nameContains
   * @return nameContains
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getNameContains() {
        return nameContains.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_NAME_CONTAINS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getNameContains_JsonNullable() {
    return nameContains;
  }
  
  @JsonProperty(JSON_PROPERTY_NAME_CONTAINS)
  public void setNameContains_JsonNullable(JsonNullable<String> nameContains) {
    this.nameContains = nameContains;
  }

  public void setNameContains(String nameContains) {
    this.nameContains = JsonNullable.<String>of(nameContains);
  }


  public ElfDataStoreWhereInput nameEndsWith(String nameEndsWith) {
    this.nameEndsWith = JsonNullable.<String>of(nameEndsWith);
    return this;
  }

   /**
   * Get nameEndsWith
   * @return nameEndsWith
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getNameEndsWith() {
        return nameEndsWith.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_NAME_ENDS_WITH)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getNameEndsWith_JsonNullable() {
    return nameEndsWith;
  }
  
  @JsonProperty(JSON_PROPERTY_NAME_ENDS_WITH)
  public void setNameEndsWith_JsonNullable(JsonNullable<String> nameEndsWith) {
    this.nameEndsWith = nameEndsWith;
  }

  public void setNameEndsWith(String nameEndsWith) {
    this.nameEndsWith = JsonNullable.<String>of(nameEndsWith);
  }


  public ElfDataStoreWhereInput nameGt(String nameGt) {
    this.nameGt = JsonNullable.<String>of(nameGt);
    return this;
  }

   /**
   * Get nameGt
   * @return nameGt
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getNameGt() {
        return nameGt.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_NAME_GT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getNameGt_JsonNullable() {
    return nameGt;
  }
  
  @JsonProperty(JSON_PROPERTY_NAME_GT)
  public void setNameGt_JsonNullable(JsonNullable<String> nameGt) {
    this.nameGt = nameGt;
  }

  public void setNameGt(String nameGt) {
    this.nameGt = JsonNullable.<String>of(nameGt);
  }


  public ElfDataStoreWhereInput nameGte(String nameGte) {
    this.nameGte = JsonNullable.<String>of(nameGte);
    return this;
  }

   /**
   * Get nameGte
   * @return nameGte
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getNameGte() {
        return nameGte.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_NAME_GTE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getNameGte_JsonNullable() {
    return nameGte;
  }
  
  @JsonProperty(JSON_PROPERTY_NAME_GTE)
  public void setNameGte_JsonNullable(JsonNullable<String> nameGte) {
    this.nameGte = nameGte;
  }

  public void setNameGte(String nameGte) {
    this.nameGte = JsonNullable.<String>of(nameGte);
  }


  public ElfDataStoreWhereInput nameIn(List<String> nameIn) {
    this.nameIn = JsonNullable.<List<String>>of(nameIn);
    return this;
  }

  public ElfDataStoreWhereInput addNameInItem(String nameInItem) {
    if (this.nameIn == null || !this.nameIn.isPresent()) {
      this.nameIn = JsonNullable.<List<String>>of(new ArrayList<>());
    }
    try {
      this.nameIn.get().add(nameInItem);
    } catch (java.util.NoSuchElementException e) {
      // this can never happen, as we make sure above that the value is present
    }
    return this;
  }

   /**
   * Get nameIn
   * @return nameIn
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public List<String> getNameIn() {
        return nameIn.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_NAME_IN)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<List<String>> getNameIn_JsonNullable() {
    return nameIn;
  }
  
  @JsonProperty(JSON_PROPERTY_NAME_IN)
  public void setNameIn_JsonNullable(JsonNullable<List<String>> nameIn) {
    this.nameIn = nameIn;
  }

  public void setNameIn(List<String> nameIn) {
    this.nameIn = JsonNullable.<List<String>>of(nameIn);
  }


  public ElfDataStoreWhereInput nameLt(String nameLt) {
    this.nameLt = JsonNullable.<String>of(nameLt);
    return this;
  }

   /**
   * Get nameLt
   * @return nameLt
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getNameLt() {
        return nameLt.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_NAME_LT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getNameLt_JsonNullable() {
    return nameLt;
  }
  
  @JsonProperty(JSON_PROPERTY_NAME_LT)
  public void setNameLt_JsonNullable(JsonNullable<String> nameLt) {
    this.nameLt = nameLt;
  }

  public void setNameLt(String nameLt) {
    this.nameLt = JsonNullable.<String>of(nameLt);
  }


  public ElfDataStoreWhereInput nameLte(String nameLte) {
    this.nameLte = JsonNullable.<String>of(nameLte);
    return this;
  }

   /**
   * Get nameLte
   * @return nameLte
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getNameLte() {
        return nameLte.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_NAME_LTE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getNameLte_JsonNullable() {
    return nameLte;
  }
  
  @JsonProperty(JSON_PROPERTY_NAME_LTE)
  public void setNameLte_JsonNullable(JsonNullable<String> nameLte) {
    this.nameLte = nameLte;
  }

  public void setNameLte(String nameLte) {
    this.nameLte = JsonNullable.<String>of(nameLte);
  }


  public ElfDataStoreWhereInput nameNot(String nameNot) {
    this.nameNot = JsonNullable.<String>of(nameNot);
    return this;
  }

   /**
   * Get nameNot
   * @return nameNot
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getNameNot() {
        return nameNot.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_NAME_NOT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getNameNot_JsonNullable() {
    return nameNot;
  }
  
  @JsonProperty(JSON_PROPERTY_NAME_NOT)
  public void setNameNot_JsonNullable(JsonNullable<String> nameNot) {
    this.nameNot = nameNot;
  }

  public void setNameNot(String nameNot) {
    this.nameNot = JsonNullable.<String>of(nameNot);
  }


  public ElfDataStoreWhereInput nameNotContains(String nameNotContains) {
    this.nameNotContains = JsonNullable.<String>of(nameNotContains);
    return this;
  }

   /**
   * Get nameNotContains
   * @return nameNotContains
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getNameNotContains() {
        return nameNotContains.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_NAME_NOT_CONTAINS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getNameNotContains_JsonNullable() {
    return nameNotContains;
  }
  
  @JsonProperty(JSON_PROPERTY_NAME_NOT_CONTAINS)
  public void setNameNotContains_JsonNullable(JsonNullable<String> nameNotContains) {
    this.nameNotContains = nameNotContains;
  }

  public void setNameNotContains(String nameNotContains) {
    this.nameNotContains = JsonNullable.<String>of(nameNotContains);
  }


  public ElfDataStoreWhereInput nameNotEndsWith(String nameNotEndsWith) {
    this.nameNotEndsWith = JsonNullable.<String>of(nameNotEndsWith);
    return this;
  }

   /**
   * Get nameNotEndsWith
   * @return nameNotEndsWith
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getNameNotEndsWith() {
        return nameNotEndsWith.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_NAME_NOT_ENDS_WITH)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getNameNotEndsWith_JsonNullable() {
    return nameNotEndsWith;
  }
  
  @JsonProperty(JSON_PROPERTY_NAME_NOT_ENDS_WITH)
  public void setNameNotEndsWith_JsonNullable(JsonNullable<String> nameNotEndsWith) {
    this.nameNotEndsWith = nameNotEndsWith;
  }

  public void setNameNotEndsWith(String nameNotEndsWith) {
    this.nameNotEndsWith = JsonNullable.<String>of(nameNotEndsWith);
  }


  public ElfDataStoreWhereInput nameNotIn(List<String> nameNotIn) {
    this.nameNotIn = JsonNullable.<List<String>>of(nameNotIn);
    return this;
  }

  public ElfDataStoreWhereInput addNameNotInItem(String nameNotInItem) {
    if (this.nameNotIn == null || !this.nameNotIn.isPresent()) {
      this.nameNotIn = JsonNullable.<List<String>>of(new ArrayList<>());
    }
    try {
      this.nameNotIn.get().add(nameNotInItem);
    } catch (java.util.NoSuchElementException e) {
      // this can never happen, as we make sure above that the value is present
    }
    return this;
  }

   /**
   * Get nameNotIn
   * @return nameNotIn
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public List<String> getNameNotIn() {
        return nameNotIn.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_NAME_NOT_IN)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<List<String>> getNameNotIn_JsonNullable() {
    return nameNotIn;
  }
  
  @JsonProperty(JSON_PROPERTY_NAME_NOT_IN)
  public void setNameNotIn_JsonNullable(JsonNullable<List<String>> nameNotIn) {
    this.nameNotIn = nameNotIn;
  }

  public void setNameNotIn(List<String> nameNotIn) {
    this.nameNotIn = JsonNullable.<List<String>>of(nameNotIn);
  }


  public ElfDataStoreWhereInput nameNotStartsWith(String nameNotStartsWith) {
    this.nameNotStartsWith = JsonNullable.<String>of(nameNotStartsWith);
    return this;
  }

   /**
   * Get nameNotStartsWith
   * @return nameNotStartsWith
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getNameNotStartsWith() {
        return nameNotStartsWith.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_NAME_NOT_STARTS_WITH)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getNameNotStartsWith_JsonNullable() {
    return nameNotStartsWith;
  }
  
  @JsonProperty(JSON_PROPERTY_NAME_NOT_STARTS_WITH)
  public void setNameNotStartsWith_JsonNullable(JsonNullable<String> nameNotStartsWith) {
    this.nameNotStartsWith = nameNotStartsWith;
  }

  public void setNameNotStartsWith(String nameNotStartsWith) {
    this.nameNotStartsWith = JsonNullable.<String>of(nameNotStartsWith);
  }


  public ElfDataStoreWhereInput nameStartsWith(String nameStartsWith) {
    this.nameStartsWith = JsonNullable.<String>of(nameStartsWith);
    return this;
  }

   /**
   * Get nameStartsWith
   * @return nameStartsWith
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getNameStartsWith() {
        return nameStartsWith.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_NAME_STARTS_WITH)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getNameStartsWith_JsonNullable() {
    return nameStartsWith;
  }
  
  @JsonProperty(JSON_PROPERTY_NAME_STARTS_WITH)
  public void setNameStartsWith_JsonNullable(JsonNullable<String> nameStartsWith) {
    this.nameStartsWith = nameStartsWith;
  }

  public void setNameStartsWith(String nameStartsWith) {
    this.nameStartsWith = JsonNullable.<String>of(nameStartsWith);
  }


  public ElfDataStoreWhereInput nfsExport(NfsExportWhereInput nfsExport) {
    this.nfsExport = JsonNullable.<NfsExportWhereInput>of(nfsExport);
    return this;
  }

   /**
   * Get nfsExport
   * @return nfsExport
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public NfsExportWhereInput getNfsExport() {
        return nfsExport.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_NFS_EXPORT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<NfsExportWhereInput> getNfsExport_JsonNullable() {
    return nfsExport;
  }
  
  @JsonProperty(JSON_PROPERTY_NFS_EXPORT)
  public void setNfsExport_JsonNullable(JsonNullable<NfsExportWhereInput> nfsExport) {
    this.nfsExport = nfsExport;
  }

  public void setNfsExport(NfsExportWhereInput nfsExport) {
    this.nfsExport = JsonNullable.<NfsExportWhereInput>of(nfsExport);
  }


  public ElfDataStoreWhereInput NOT(List<ElfDataStoreWhereInput> NOT) {
    this.NOT = JsonNullable.<List<ElfDataStoreWhereInput>>of(NOT);
    return this;
  }

  public ElfDataStoreWhereInput addNOTItem(ElfDataStoreWhereInput NOTItem) {
    if (this.NOT == null || !this.NOT.isPresent()) {
      this.NOT = JsonNullable.<List<ElfDataStoreWhereInput>>of(new ArrayList<>());
    }
    try {
      this.NOT.get().add(NOTItem);
    } catch (java.util.NoSuchElementException e) {
      // this can never happen, as we make sure above that the value is present
    }
    return this;
  }

   /**
   * Get NOT
   * @return NOT
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public List<ElfDataStoreWhereInput> getNOT() {
        return NOT.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_N_O_T)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<List<ElfDataStoreWhereInput>> getNOT_JsonNullable() {
    return NOT;
  }
  
  @JsonProperty(JSON_PROPERTY_N_O_T)
  public void setNOT_JsonNullable(JsonNullable<List<ElfDataStoreWhereInput>> NOT) {
    this.NOT = NOT;
  }

  public void setNOT(List<ElfDataStoreWhereInput> NOT) {
    this.NOT = JsonNullable.<List<ElfDataStoreWhereInput>>of(NOT);
  }


  public ElfDataStoreWhereInput nvmfSubsystem(NvmfSubsystemWhereInput nvmfSubsystem) {
    this.nvmfSubsystem = JsonNullable.<NvmfSubsystemWhereInput>of(nvmfSubsystem);
    return this;
  }

   /**
   * Get nvmfSubsystem
   * @return nvmfSubsystem
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public NvmfSubsystemWhereInput getNvmfSubsystem() {
        return nvmfSubsystem.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_NVMF_SUBSYSTEM)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<NvmfSubsystemWhereInput> getNvmfSubsystem_JsonNullable() {
    return nvmfSubsystem;
  }
  
  @JsonProperty(JSON_PROPERTY_NVMF_SUBSYSTEM)
  public void setNvmfSubsystem_JsonNullable(JsonNullable<NvmfSubsystemWhereInput> nvmfSubsystem) {
    this.nvmfSubsystem = nvmfSubsystem;
  }

  public void setNvmfSubsystem(NvmfSubsystemWhereInput nvmfSubsystem) {
    this.nvmfSubsystem = JsonNullable.<NvmfSubsystemWhereInput>of(nvmfSubsystem);
  }


  public ElfDataStoreWhereInput OR(List<ElfDataStoreWhereInput> OR) {
    this.OR = JsonNullable.<List<ElfDataStoreWhereInput>>of(OR);
    return this;
  }

  public ElfDataStoreWhereInput addORItem(ElfDataStoreWhereInput ORItem) {
    if (this.OR == null || !this.OR.isPresent()) {
      this.OR = JsonNullable.<List<ElfDataStoreWhereInput>>of(new ArrayList<>());
    }
    try {
      this.OR.get().add(ORItem);
    } catch (java.util.NoSuchElementException e) {
      // this can never happen, as we make sure above that the value is present
    }
    return this;
  }

   /**
   * Get OR
   * @return OR
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public List<ElfDataStoreWhereInput> getOR() {
        return OR.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_O_R)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<List<ElfDataStoreWhereInput>> getOR_JsonNullable() {
    return OR;
  }
  
  @JsonProperty(JSON_PROPERTY_O_R)
  public void setOR_JsonNullable(JsonNullable<List<ElfDataStoreWhereInput>> OR) {
    this.OR = OR;
  }

  public void setOR(List<ElfDataStoreWhereInput> OR) {
    this.OR = JsonNullable.<List<ElfDataStoreWhereInput>>of(OR);
  }


  public ElfDataStoreWhereInput replicaNum(Double replicaNum) {
    this.replicaNum = JsonNullable.<Double>of(replicaNum);
    return this;
  }

   /**
   * Get replicaNum
   * @return replicaNum
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public Double getReplicaNum() {
        return replicaNum.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_REPLICA_NUM)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<Double> getReplicaNum_JsonNullable() {
    return replicaNum;
  }
  
  @JsonProperty(JSON_PROPERTY_REPLICA_NUM)
  public void setReplicaNum_JsonNullable(JsonNullable<Double> replicaNum) {
    this.replicaNum = replicaNum;
  }

  public void setReplicaNum(Double replicaNum) {
    this.replicaNum = JsonNullable.<Double>of(replicaNum);
  }


  public ElfDataStoreWhereInput replicaNumGt(Double replicaNumGt) {
    this.replicaNumGt = JsonNullable.<Double>of(replicaNumGt);
    return this;
  }

   /**
   * Get replicaNumGt
   * @return replicaNumGt
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public Double getReplicaNumGt() {
        return replicaNumGt.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_REPLICA_NUM_GT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<Double> getReplicaNumGt_JsonNullable() {
    return replicaNumGt;
  }
  
  @JsonProperty(JSON_PROPERTY_REPLICA_NUM_GT)
  public void setReplicaNumGt_JsonNullable(JsonNullable<Double> replicaNumGt) {
    this.replicaNumGt = replicaNumGt;
  }

  public void setReplicaNumGt(Double replicaNumGt) {
    this.replicaNumGt = JsonNullable.<Double>of(replicaNumGt);
  }


  public ElfDataStoreWhereInput replicaNumGte(Double replicaNumGte) {
    this.replicaNumGte = JsonNullable.<Double>of(replicaNumGte);
    return this;
  }

   /**
   * Get replicaNumGte
   * @return replicaNumGte
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public Double getReplicaNumGte() {
        return replicaNumGte.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_REPLICA_NUM_GTE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<Double> getReplicaNumGte_JsonNullable() {
    return replicaNumGte;
  }
  
  @JsonProperty(JSON_PROPERTY_REPLICA_NUM_GTE)
  public void setReplicaNumGte_JsonNullable(JsonNullable<Double> replicaNumGte) {
    this.replicaNumGte = replicaNumGte;
  }

  public void setReplicaNumGte(Double replicaNumGte) {
    this.replicaNumGte = JsonNullable.<Double>of(replicaNumGte);
  }


  public ElfDataStoreWhereInput replicaNumIn(List<Double> replicaNumIn) {
    this.replicaNumIn = JsonNullable.<List<Double>>of(replicaNumIn);
    return this;
  }

  public ElfDataStoreWhereInput addReplicaNumInItem(Double replicaNumInItem) {
    if (this.replicaNumIn == null || !this.replicaNumIn.isPresent()) {
      this.replicaNumIn = JsonNullable.<List<Double>>of(new ArrayList<>());
    }
    try {
      this.replicaNumIn.get().add(replicaNumInItem);
    } catch (java.util.NoSuchElementException e) {
      // this can never happen, as we make sure above that the value is present
    }
    return this;
  }

   /**
   * Get replicaNumIn
   * @return replicaNumIn
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public List<Double> getReplicaNumIn() {
        return replicaNumIn.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_REPLICA_NUM_IN)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<List<Double>> getReplicaNumIn_JsonNullable() {
    return replicaNumIn;
  }
  
  @JsonProperty(JSON_PROPERTY_REPLICA_NUM_IN)
  public void setReplicaNumIn_JsonNullable(JsonNullable<List<Double>> replicaNumIn) {
    this.replicaNumIn = replicaNumIn;
  }

  public void setReplicaNumIn(List<Double> replicaNumIn) {
    this.replicaNumIn = JsonNullable.<List<Double>>of(replicaNumIn);
  }


  public ElfDataStoreWhereInput replicaNumLt(Double replicaNumLt) {
    this.replicaNumLt = JsonNullable.<Double>of(replicaNumLt);
    return this;
  }

   /**
   * Get replicaNumLt
   * @return replicaNumLt
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public Double getReplicaNumLt() {
        return replicaNumLt.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_REPLICA_NUM_LT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<Double> getReplicaNumLt_JsonNullable() {
    return replicaNumLt;
  }
  
  @JsonProperty(JSON_PROPERTY_REPLICA_NUM_LT)
  public void setReplicaNumLt_JsonNullable(JsonNullable<Double> replicaNumLt) {
    this.replicaNumLt = replicaNumLt;
  }

  public void setReplicaNumLt(Double replicaNumLt) {
    this.replicaNumLt = JsonNullable.<Double>of(replicaNumLt);
  }


  public ElfDataStoreWhereInput replicaNumLte(Double replicaNumLte) {
    this.replicaNumLte = JsonNullable.<Double>of(replicaNumLte);
    return this;
  }

   /**
   * Get replicaNumLte
   * @return replicaNumLte
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public Double getReplicaNumLte() {
        return replicaNumLte.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_REPLICA_NUM_LTE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<Double> getReplicaNumLte_JsonNullable() {
    return replicaNumLte;
  }
  
  @JsonProperty(JSON_PROPERTY_REPLICA_NUM_LTE)
  public void setReplicaNumLte_JsonNullable(JsonNullable<Double> replicaNumLte) {
    this.replicaNumLte = replicaNumLte;
  }

  public void setReplicaNumLte(Double replicaNumLte) {
    this.replicaNumLte = JsonNullable.<Double>of(replicaNumLte);
  }


  public ElfDataStoreWhereInput replicaNumNot(Double replicaNumNot) {
    this.replicaNumNot = JsonNullable.<Double>of(replicaNumNot);
    return this;
  }

   /**
   * Get replicaNumNot
   * @return replicaNumNot
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public Double getReplicaNumNot() {
        return replicaNumNot.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_REPLICA_NUM_NOT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<Double> getReplicaNumNot_JsonNullable() {
    return replicaNumNot;
  }
  
  @JsonProperty(JSON_PROPERTY_REPLICA_NUM_NOT)
  public void setReplicaNumNot_JsonNullable(JsonNullable<Double> replicaNumNot) {
    this.replicaNumNot = replicaNumNot;
  }

  public void setReplicaNumNot(Double replicaNumNot) {
    this.replicaNumNot = JsonNullable.<Double>of(replicaNumNot);
  }


  public ElfDataStoreWhereInput replicaNumNotIn(List<Double> replicaNumNotIn) {
    this.replicaNumNotIn = JsonNullable.<List<Double>>of(replicaNumNotIn);
    return this;
  }

  public ElfDataStoreWhereInput addReplicaNumNotInItem(Double replicaNumNotInItem) {
    if (this.replicaNumNotIn == null || !this.replicaNumNotIn.isPresent()) {
      this.replicaNumNotIn = JsonNullable.<List<Double>>of(new ArrayList<>());
    }
    try {
      this.replicaNumNotIn.get().add(replicaNumNotInItem);
    } catch (java.util.NoSuchElementException e) {
      // this can never happen, as we make sure above that the value is present
    }
    return this;
  }

   /**
   * Get replicaNumNotIn
   * @return replicaNumNotIn
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public List<Double> getReplicaNumNotIn() {
        return replicaNumNotIn.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_REPLICA_NUM_NOT_IN)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<List<Double>> getReplicaNumNotIn_JsonNullable() {
    return replicaNumNotIn;
  }
  
  @JsonProperty(JSON_PROPERTY_REPLICA_NUM_NOT_IN)
  public void setReplicaNumNotIn_JsonNullable(JsonNullable<List<Double>> replicaNumNotIn) {
    this.replicaNumNotIn = replicaNumNotIn;
  }

  public void setReplicaNumNotIn(List<Double> replicaNumNotIn) {
    this.replicaNumNotIn = JsonNullable.<List<Double>>of(replicaNumNotIn);
  }


  public ElfDataStoreWhereInput thinProvision(Boolean thinProvision) {
    this.thinProvision = JsonNullable.<Boolean>of(thinProvision);
    return this;
  }

   /**
   * Get thinProvision
   * @return thinProvision
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public Boolean getThinProvision() {
        return thinProvision.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_THIN_PROVISION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<Boolean> getThinProvision_JsonNullable() {
    return thinProvision;
  }
  
  @JsonProperty(JSON_PROPERTY_THIN_PROVISION)
  public void setThinProvision_JsonNullable(JsonNullable<Boolean> thinProvision) {
    this.thinProvision = thinProvision;
  }

  public void setThinProvision(Boolean thinProvision) {
    this.thinProvision = JsonNullable.<Boolean>of(thinProvision);
  }


  public ElfDataStoreWhereInput thinProvisionNot(Boolean thinProvisionNot) {
    this.thinProvisionNot = JsonNullable.<Boolean>of(thinProvisionNot);
    return this;
  }

   /**
   * Get thinProvisionNot
   * @return thinProvisionNot
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public Boolean getThinProvisionNot() {
        return thinProvisionNot.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_THIN_PROVISION_NOT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<Boolean> getThinProvisionNot_JsonNullable() {
    return thinProvisionNot;
  }
  
  @JsonProperty(JSON_PROPERTY_THIN_PROVISION_NOT)
  public void setThinProvisionNot_JsonNullable(JsonNullable<Boolean> thinProvisionNot) {
    this.thinProvisionNot = thinProvisionNot;
  }

  public void setThinProvisionNot(Boolean thinProvisionNot) {
    this.thinProvisionNot = JsonNullable.<Boolean>of(thinProvisionNot);
  }


  public ElfDataStoreWhereInput type(ElfDataStoreType type) {
    this.type = JsonNullable.<ElfDataStoreType>of(type);
    return this;
  }

   /**
   * Get type
   * @return type
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public ElfDataStoreType getType() {
        return type.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_TYPE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<ElfDataStoreType> getType_JsonNullable() {
    return type;
  }
  
  @JsonProperty(JSON_PROPERTY_TYPE)
  public void setType_JsonNullable(JsonNullable<ElfDataStoreType> type) {
    this.type = type;
  }

  public void setType(ElfDataStoreType type) {
    this.type = JsonNullable.<ElfDataStoreType>of(type);
  }


  public ElfDataStoreWhereInput typeIn(List<ElfDataStoreType> typeIn) {
    this.typeIn = JsonNullable.<List<ElfDataStoreType>>of(typeIn);
    return this;
  }

  public ElfDataStoreWhereInput addTypeInItem(ElfDataStoreType typeInItem) {
    if (this.typeIn == null || !this.typeIn.isPresent()) {
      this.typeIn = JsonNullable.<List<ElfDataStoreType>>of(new ArrayList<>());
    }
    try {
      this.typeIn.get().add(typeInItem);
    } catch (java.util.NoSuchElementException e) {
      // this can never happen, as we make sure above that the value is present
    }
    return this;
  }

   /**
   * Get typeIn
   * @return typeIn
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public List<ElfDataStoreType> getTypeIn() {
        return typeIn.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_TYPE_IN)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<List<ElfDataStoreType>> getTypeIn_JsonNullable() {
    return typeIn;
  }
  
  @JsonProperty(JSON_PROPERTY_TYPE_IN)
  public void setTypeIn_JsonNullable(JsonNullable<List<ElfDataStoreType>> typeIn) {
    this.typeIn = typeIn;
  }

  public void setTypeIn(List<ElfDataStoreType> typeIn) {
    this.typeIn = JsonNullable.<List<ElfDataStoreType>>of(typeIn);
  }


  public ElfDataStoreWhereInput typeNot(ElfDataStoreType typeNot) {
    this.typeNot = JsonNullable.<ElfDataStoreType>of(typeNot);
    return this;
  }

   /**
   * Get typeNot
   * @return typeNot
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public ElfDataStoreType getTypeNot() {
        return typeNot.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_TYPE_NOT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<ElfDataStoreType> getTypeNot_JsonNullable() {
    return typeNot;
  }
  
  @JsonProperty(JSON_PROPERTY_TYPE_NOT)
  public void setTypeNot_JsonNullable(JsonNullable<ElfDataStoreType> typeNot) {
    this.typeNot = typeNot;
  }

  public void setTypeNot(ElfDataStoreType typeNot) {
    this.typeNot = JsonNullable.<ElfDataStoreType>of(typeNot);
  }


  public ElfDataStoreWhereInput typeNotIn(List<ElfDataStoreType> typeNotIn) {
    this.typeNotIn = JsonNullable.<List<ElfDataStoreType>>of(typeNotIn);
    return this;
  }

  public ElfDataStoreWhereInput addTypeNotInItem(ElfDataStoreType typeNotInItem) {
    if (this.typeNotIn == null || !this.typeNotIn.isPresent()) {
      this.typeNotIn = JsonNullable.<List<ElfDataStoreType>>of(new ArrayList<>());
    }
    try {
      this.typeNotIn.get().add(typeNotInItem);
    } catch (java.util.NoSuchElementException e) {
      // this can never happen, as we make sure above that the value is present
    }
    return this;
  }

   /**
   * Get typeNotIn
   * @return typeNotIn
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public List<ElfDataStoreType> getTypeNotIn() {
        return typeNotIn.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_TYPE_NOT_IN)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<List<ElfDataStoreType>> getTypeNotIn_JsonNullable() {
    return typeNotIn;
  }
  
  @JsonProperty(JSON_PROPERTY_TYPE_NOT_IN)
  public void setTypeNotIn_JsonNullable(JsonNullable<List<ElfDataStoreType>> typeNotIn) {
    this.typeNotIn = typeNotIn;
  }

  public void setTypeNotIn(List<ElfDataStoreType> typeNotIn) {
    this.typeNotIn = JsonNullable.<List<ElfDataStoreType>>of(typeNotIn);
  }


  /**
   * Return true if this ElfDataStoreWhereInput object is equal to o.
   */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ElfDataStoreWhereInput elfDataStoreWhereInput = (ElfDataStoreWhereInput) o;
    return equalsNullable(this.AND, elfDataStoreWhereInput.AND) &&
        equalsNullable(this.cluster, elfDataStoreWhereInput.cluster) &&
        equalsNullable(this.description, elfDataStoreWhereInput.description) &&
        equalsNullable(this.descriptionContains, elfDataStoreWhereInput.descriptionContains) &&
        equalsNullable(this.descriptionEndsWith, elfDataStoreWhereInput.descriptionEndsWith) &&
        equalsNullable(this.descriptionGt, elfDataStoreWhereInput.descriptionGt) &&
        equalsNullable(this.descriptionGte, elfDataStoreWhereInput.descriptionGte) &&
        equalsNullable(this.descriptionIn, elfDataStoreWhereInput.descriptionIn) &&
        equalsNullable(this.descriptionLt, elfDataStoreWhereInput.descriptionLt) &&
        equalsNullable(this.descriptionLte, elfDataStoreWhereInput.descriptionLte) &&
        equalsNullable(this.descriptionNot, elfDataStoreWhereInput.descriptionNot) &&
        equalsNullable(this.descriptionNotContains, elfDataStoreWhereInput.descriptionNotContains) &&
        equalsNullable(this.descriptionNotEndsWith, elfDataStoreWhereInput.descriptionNotEndsWith) &&
        equalsNullable(this.descriptionNotIn, elfDataStoreWhereInput.descriptionNotIn) &&
        equalsNullable(this.descriptionNotStartsWith, elfDataStoreWhereInput.descriptionNotStartsWith) &&
        equalsNullable(this.descriptionStartsWith, elfDataStoreWhereInput.descriptionStartsWith) &&
        equalsNullable(this.externalUse, elfDataStoreWhereInput.externalUse) &&
        equalsNullable(this.externalUseNot, elfDataStoreWhereInput.externalUseNot) &&
        equalsNullable(this.id, elfDataStoreWhereInput.id) &&
        equalsNullable(this.idContains, elfDataStoreWhereInput.idContains) &&
        equalsNullable(this.idEndsWith, elfDataStoreWhereInput.idEndsWith) &&
        equalsNullable(this.idGt, elfDataStoreWhereInput.idGt) &&
        equalsNullable(this.idGte, elfDataStoreWhereInput.idGte) &&
        equalsNullable(this.idIn, elfDataStoreWhereInput.idIn) &&
        equalsNullable(this.idLt, elfDataStoreWhereInput.idLt) &&
        equalsNullable(this.idLte, elfDataStoreWhereInput.idLte) &&
        equalsNullable(this.idNot, elfDataStoreWhereInput.idNot) &&
        equalsNullable(this.idNotContains, elfDataStoreWhereInput.idNotContains) &&
        equalsNullable(this.idNotEndsWith, elfDataStoreWhereInput.idNotEndsWith) &&
        equalsNullable(this.idNotIn, elfDataStoreWhereInput.idNotIn) &&
        equalsNullable(this.idNotStartsWith, elfDataStoreWhereInput.idNotStartsWith) &&
        equalsNullable(this.idStartsWith, elfDataStoreWhereInput.idStartsWith) &&
        equalsNullable(this.internal, elfDataStoreWhereInput.internal) &&
        equalsNullable(this.internalNot, elfDataStoreWhereInput.internalNot) &&
        equalsNullable(this.ipWhitelist, elfDataStoreWhereInput.ipWhitelist) &&
        equalsNullable(this.ipWhitelistContains, elfDataStoreWhereInput.ipWhitelistContains) &&
        equalsNullable(this.ipWhitelistEndsWith, elfDataStoreWhereInput.ipWhitelistEndsWith) &&
        equalsNullable(this.ipWhitelistGt, elfDataStoreWhereInput.ipWhitelistGt) &&
        equalsNullable(this.ipWhitelistGte, elfDataStoreWhereInput.ipWhitelistGte) &&
        equalsNullable(this.ipWhitelistIn, elfDataStoreWhereInput.ipWhitelistIn) &&
        equalsNullable(this.ipWhitelistLt, elfDataStoreWhereInput.ipWhitelistLt) &&
        equalsNullable(this.ipWhitelistLte, elfDataStoreWhereInput.ipWhitelistLte) &&
        equalsNullable(this.ipWhitelistNot, elfDataStoreWhereInput.ipWhitelistNot) &&
        equalsNullable(this.ipWhitelistNotContains, elfDataStoreWhereInput.ipWhitelistNotContains) &&
        equalsNullable(this.ipWhitelistNotEndsWith, elfDataStoreWhereInput.ipWhitelistNotEndsWith) &&
        equalsNullable(this.ipWhitelistNotIn, elfDataStoreWhereInput.ipWhitelistNotIn) &&
        equalsNullable(this.ipWhitelistNotStartsWith, elfDataStoreWhereInput.ipWhitelistNotStartsWith) &&
        equalsNullable(this.ipWhitelistStartsWith, elfDataStoreWhereInput.ipWhitelistStartsWith) &&
        equalsNullable(this.iscsiTarget, elfDataStoreWhereInput.iscsiTarget) &&
        equalsNullable(this.localId, elfDataStoreWhereInput.localId) &&
        equalsNullable(this.localIdContains, elfDataStoreWhereInput.localIdContains) &&
        equalsNullable(this.localIdEndsWith, elfDataStoreWhereInput.localIdEndsWith) &&
        equalsNullable(this.localIdGt, elfDataStoreWhereInput.localIdGt) &&
        equalsNullable(this.localIdGte, elfDataStoreWhereInput.localIdGte) &&
        equalsNullable(this.localIdIn, elfDataStoreWhereInput.localIdIn) &&
        equalsNullable(this.localIdLt, elfDataStoreWhereInput.localIdLt) &&
        equalsNullable(this.localIdLte, elfDataStoreWhereInput.localIdLte) &&
        equalsNullable(this.localIdNot, elfDataStoreWhereInput.localIdNot) &&
        equalsNullable(this.localIdNotContains, elfDataStoreWhereInput.localIdNotContains) &&
        equalsNullable(this.localIdNotEndsWith, elfDataStoreWhereInput.localIdNotEndsWith) &&
        equalsNullable(this.localIdNotIn, elfDataStoreWhereInput.localIdNotIn) &&
        equalsNullable(this.localIdNotStartsWith, elfDataStoreWhereInput.localIdNotStartsWith) &&
        equalsNullable(this.localIdStartsWith, elfDataStoreWhereInput.localIdStartsWith) &&
        equalsNullable(this.name, elfDataStoreWhereInput.name) &&
        equalsNullable(this.nameContains, elfDataStoreWhereInput.nameContains) &&
        equalsNullable(this.nameEndsWith, elfDataStoreWhereInput.nameEndsWith) &&
        equalsNullable(this.nameGt, elfDataStoreWhereInput.nameGt) &&
        equalsNullable(this.nameGte, elfDataStoreWhereInput.nameGte) &&
        equalsNullable(this.nameIn, elfDataStoreWhereInput.nameIn) &&
        equalsNullable(this.nameLt, elfDataStoreWhereInput.nameLt) &&
        equalsNullable(this.nameLte, elfDataStoreWhereInput.nameLte) &&
        equalsNullable(this.nameNot, elfDataStoreWhereInput.nameNot) &&
        equalsNullable(this.nameNotContains, elfDataStoreWhereInput.nameNotContains) &&
        equalsNullable(this.nameNotEndsWith, elfDataStoreWhereInput.nameNotEndsWith) &&
        equalsNullable(this.nameNotIn, elfDataStoreWhereInput.nameNotIn) &&
        equalsNullable(this.nameNotStartsWith, elfDataStoreWhereInput.nameNotStartsWith) &&
        equalsNullable(this.nameStartsWith, elfDataStoreWhereInput.nameStartsWith) &&
        equalsNullable(this.nfsExport, elfDataStoreWhereInput.nfsExport) &&
        equalsNullable(this.NOT, elfDataStoreWhereInput.NOT) &&
        equalsNullable(this.nvmfSubsystem, elfDataStoreWhereInput.nvmfSubsystem) &&
        equalsNullable(this.OR, elfDataStoreWhereInput.OR) &&
        equalsNullable(this.replicaNum, elfDataStoreWhereInput.replicaNum) &&
        equalsNullable(this.replicaNumGt, elfDataStoreWhereInput.replicaNumGt) &&
        equalsNullable(this.replicaNumGte, elfDataStoreWhereInput.replicaNumGte) &&
        equalsNullable(this.replicaNumIn, elfDataStoreWhereInput.replicaNumIn) &&
        equalsNullable(this.replicaNumLt, elfDataStoreWhereInput.replicaNumLt) &&
        equalsNullable(this.replicaNumLte, elfDataStoreWhereInput.replicaNumLte) &&
        equalsNullable(this.replicaNumNot, elfDataStoreWhereInput.replicaNumNot) &&
        equalsNullable(this.replicaNumNotIn, elfDataStoreWhereInput.replicaNumNotIn) &&
        equalsNullable(this.thinProvision, elfDataStoreWhereInput.thinProvision) &&
        equalsNullable(this.thinProvisionNot, elfDataStoreWhereInput.thinProvisionNot) &&
        equalsNullable(this.type, elfDataStoreWhereInput.type) &&
        equalsNullable(this.typeIn, elfDataStoreWhereInput.typeIn) &&
        equalsNullable(this.typeNot, elfDataStoreWhereInput.typeNot) &&
        equalsNullable(this.typeNotIn, elfDataStoreWhereInput.typeNotIn);
  }

  private static <T> boolean equalsNullable(JsonNullable<T> a, JsonNullable<T> b) {
    return a == b || (a != null && b != null && a.isPresent() && b.isPresent() && Objects.deepEquals(a.get(), b.get()));
  }

  @Override
  public int hashCode() {
    return Objects.hash(hashCodeNullable(AND), hashCodeNullable(cluster), hashCodeNullable(description), hashCodeNullable(descriptionContains), hashCodeNullable(descriptionEndsWith), hashCodeNullable(descriptionGt), hashCodeNullable(descriptionGte), hashCodeNullable(descriptionIn), hashCodeNullable(descriptionLt), hashCodeNullable(descriptionLte), hashCodeNullable(descriptionNot), hashCodeNullable(descriptionNotContains), hashCodeNullable(descriptionNotEndsWith), hashCodeNullable(descriptionNotIn), hashCodeNullable(descriptionNotStartsWith), hashCodeNullable(descriptionStartsWith), hashCodeNullable(externalUse), hashCodeNullable(externalUseNot), hashCodeNullable(id), hashCodeNullable(idContains), hashCodeNullable(idEndsWith), hashCodeNullable(idGt), hashCodeNullable(idGte), hashCodeNullable(idIn), hashCodeNullable(idLt), hashCodeNullable(idLte), hashCodeNullable(idNot), hashCodeNullable(idNotContains), hashCodeNullable(idNotEndsWith), hashCodeNullable(idNotIn), hashCodeNullable(idNotStartsWith), hashCodeNullable(idStartsWith), hashCodeNullable(internal), hashCodeNullable(internalNot), hashCodeNullable(ipWhitelist), hashCodeNullable(ipWhitelistContains), hashCodeNullable(ipWhitelistEndsWith), hashCodeNullable(ipWhitelistGt), hashCodeNullable(ipWhitelistGte), hashCodeNullable(ipWhitelistIn), hashCodeNullable(ipWhitelistLt), hashCodeNullable(ipWhitelistLte), hashCodeNullable(ipWhitelistNot), hashCodeNullable(ipWhitelistNotContains), hashCodeNullable(ipWhitelistNotEndsWith), hashCodeNullable(ipWhitelistNotIn), hashCodeNullable(ipWhitelistNotStartsWith), hashCodeNullable(ipWhitelistStartsWith), hashCodeNullable(iscsiTarget), hashCodeNullable(localId), hashCodeNullable(localIdContains), hashCodeNullable(localIdEndsWith), hashCodeNullable(localIdGt), hashCodeNullable(localIdGte), hashCodeNullable(localIdIn), hashCodeNullable(localIdLt), hashCodeNullable(localIdLte), hashCodeNullable(localIdNot), hashCodeNullable(localIdNotContains), hashCodeNullable(localIdNotEndsWith), hashCodeNullable(localIdNotIn), hashCodeNullable(localIdNotStartsWith), hashCodeNullable(localIdStartsWith), hashCodeNullable(name), hashCodeNullable(nameContains), hashCodeNullable(nameEndsWith), hashCodeNullable(nameGt), hashCodeNullable(nameGte), hashCodeNullable(nameIn), hashCodeNullable(nameLt), hashCodeNullable(nameLte), hashCodeNullable(nameNot), hashCodeNullable(nameNotContains), hashCodeNullable(nameNotEndsWith), hashCodeNullable(nameNotIn), hashCodeNullable(nameNotStartsWith), hashCodeNullable(nameStartsWith), hashCodeNullable(nfsExport), hashCodeNullable(NOT), hashCodeNullable(nvmfSubsystem), hashCodeNullable(OR), hashCodeNullable(replicaNum), hashCodeNullable(replicaNumGt), hashCodeNullable(replicaNumGte), hashCodeNullable(replicaNumIn), hashCodeNullable(replicaNumLt), hashCodeNullable(replicaNumLte), hashCodeNullable(replicaNumNot), hashCodeNullable(replicaNumNotIn), hashCodeNullable(thinProvision), hashCodeNullable(thinProvisionNot), hashCodeNullable(type), hashCodeNullable(typeIn), hashCodeNullable(typeNot), hashCodeNullable(typeNotIn));
  }

  private static <T> int hashCodeNullable(JsonNullable<T> a) {
    if (a == null) {
      return 1;
    }
    return a.isPresent() ? Arrays.deepHashCode(new Object[]{a.get()}) : 31;
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ElfDataStoreWhereInput {\n");
    sb.append("    AND: ").append(toIndentedString(AND)).append("\n");
    sb.append("    cluster: ").append(toIndentedString(cluster)).append("\n");
    sb.append("    description: ").append(toIndentedString(description)).append("\n");
    sb.append("    descriptionContains: ").append(toIndentedString(descriptionContains)).append("\n");
    sb.append("    descriptionEndsWith: ").append(toIndentedString(descriptionEndsWith)).append("\n");
    sb.append("    descriptionGt: ").append(toIndentedString(descriptionGt)).append("\n");
    sb.append("    descriptionGte: ").append(toIndentedString(descriptionGte)).append("\n");
    sb.append("    descriptionIn: ").append(toIndentedString(descriptionIn)).append("\n");
    sb.append("    descriptionLt: ").append(toIndentedString(descriptionLt)).append("\n");
    sb.append("    descriptionLte: ").append(toIndentedString(descriptionLte)).append("\n");
    sb.append("    descriptionNot: ").append(toIndentedString(descriptionNot)).append("\n");
    sb.append("    descriptionNotContains: ").append(toIndentedString(descriptionNotContains)).append("\n");
    sb.append("    descriptionNotEndsWith: ").append(toIndentedString(descriptionNotEndsWith)).append("\n");
    sb.append("    descriptionNotIn: ").append(toIndentedString(descriptionNotIn)).append("\n");
    sb.append("    descriptionNotStartsWith: ").append(toIndentedString(descriptionNotStartsWith)).append("\n");
    sb.append("    descriptionStartsWith: ").append(toIndentedString(descriptionStartsWith)).append("\n");
    sb.append("    externalUse: ").append(toIndentedString(externalUse)).append("\n");
    sb.append("    externalUseNot: ").append(toIndentedString(externalUseNot)).append("\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    idContains: ").append(toIndentedString(idContains)).append("\n");
    sb.append("    idEndsWith: ").append(toIndentedString(idEndsWith)).append("\n");
    sb.append("    idGt: ").append(toIndentedString(idGt)).append("\n");
    sb.append("    idGte: ").append(toIndentedString(idGte)).append("\n");
    sb.append("    idIn: ").append(toIndentedString(idIn)).append("\n");
    sb.append("    idLt: ").append(toIndentedString(idLt)).append("\n");
    sb.append("    idLte: ").append(toIndentedString(idLte)).append("\n");
    sb.append("    idNot: ").append(toIndentedString(idNot)).append("\n");
    sb.append("    idNotContains: ").append(toIndentedString(idNotContains)).append("\n");
    sb.append("    idNotEndsWith: ").append(toIndentedString(idNotEndsWith)).append("\n");
    sb.append("    idNotIn: ").append(toIndentedString(idNotIn)).append("\n");
    sb.append("    idNotStartsWith: ").append(toIndentedString(idNotStartsWith)).append("\n");
    sb.append("    idStartsWith: ").append(toIndentedString(idStartsWith)).append("\n");
    sb.append("    internal: ").append(toIndentedString(internal)).append("\n");
    sb.append("    internalNot: ").append(toIndentedString(internalNot)).append("\n");
    sb.append("    ipWhitelist: ").append(toIndentedString(ipWhitelist)).append("\n");
    sb.append("    ipWhitelistContains: ").append(toIndentedString(ipWhitelistContains)).append("\n");
    sb.append("    ipWhitelistEndsWith: ").append(toIndentedString(ipWhitelistEndsWith)).append("\n");
    sb.append("    ipWhitelistGt: ").append(toIndentedString(ipWhitelistGt)).append("\n");
    sb.append("    ipWhitelistGte: ").append(toIndentedString(ipWhitelistGte)).append("\n");
    sb.append("    ipWhitelistIn: ").append(toIndentedString(ipWhitelistIn)).append("\n");
    sb.append("    ipWhitelistLt: ").append(toIndentedString(ipWhitelistLt)).append("\n");
    sb.append("    ipWhitelistLte: ").append(toIndentedString(ipWhitelistLte)).append("\n");
    sb.append("    ipWhitelistNot: ").append(toIndentedString(ipWhitelistNot)).append("\n");
    sb.append("    ipWhitelistNotContains: ").append(toIndentedString(ipWhitelistNotContains)).append("\n");
    sb.append("    ipWhitelistNotEndsWith: ").append(toIndentedString(ipWhitelistNotEndsWith)).append("\n");
    sb.append("    ipWhitelistNotIn: ").append(toIndentedString(ipWhitelistNotIn)).append("\n");
    sb.append("    ipWhitelistNotStartsWith: ").append(toIndentedString(ipWhitelistNotStartsWith)).append("\n");
    sb.append("    ipWhitelistStartsWith: ").append(toIndentedString(ipWhitelistStartsWith)).append("\n");
    sb.append("    iscsiTarget: ").append(toIndentedString(iscsiTarget)).append("\n");
    sb.append("    localId: ").append(toIndentedString(localId)).append("\n");
    sb.append("    localIdContains: ").append(toIndentedString(localIdContains)).append("\n");
    sb.append("    localIdEndsWith: ").append(toIndentedString(localIdEndsWith)).append("\n");
    sb.append("    localIdGt: ").append(toIndentedString(localIdGt)).append("\n");
    sb.append("    localIdGte: ").append(toIndentedString(localIdGte)).append("\n");
    sb.append("    localIdIn: ").append(toIndentedString(localIdIn)).append("\n");
    sb.append("    localIdLt: ").append(toIndentedString(localIdLt)).append("\n");
    sb.append("    localIdLte: ").append(toIndentedString(localIdLte)).append("\n");
    sb.append("    localIdNot: ").append(toIndentedString(localIdNot)).append("\n");
    sb.append("    localIdNotContains: ").append(toIndentedString(localIdNotContains)).append("\n");
    sb.append("    localIdNotEndsWith: ").append(toIndentedString(localIdNotEndsWith)).append("\n");
    sb.append("    localIdNotIn: ").append(toIndentedString(localIdNotIn)).append("\n");
    sb.append("    localIdNotStartsWith: ").append(toIndentedString(localIdNotStartsWith)).append("\n");
    sb.append("    localIdStartsWith: ").append(toIndentedString(localIdStartsWith)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    nameContains: ").append(toIndentedString(nameContains)).append("\n");
    sb.append("    nameEndsWith: ").append(toIndentedString(nameEndsWith)).append("\n");
    sb.append("    nameGt: ").append(toIndentedString(nameGt)).append("\n");
    sb.append("    nameGte: ").append(toIndentedString(nameGte)).append("\n");
    sb.append("    nameIn: ").append(toIndentedString(nameIn)).append("\n");
    sb.append("    nameLt: ").append(toIndentedString(nameLt)).append("\n");
    sb.append("    nameLte: ").append(toIndentedString(nameLte)).append("\n");
    sb.append("    nameNot: ").append(toIndentedString(nameNot)).append("\n");
    sb.append("    nameNotContains: ").append(toIndentedString(nameNotContains)).append("\n");
    sb.append("    nameNotEndsWith: ").append(toIndentedString(nameNotEndsWith)).append("\n");
    sb.append("    nameNotIn: ").append(toIndentedString(nameNotIn)).append("\n");
    sb.append("    nameNotStartsWith: ").append(toIndentedString(nameNotStartsWith)).append("\n");
    sb.append("    nameStartsWith: ").append(toIndentedString(nameStartsWith)).append("\n");
    sb.append("    nfsExport: ").append(toIndentedString(nfsExport)).append("\n");
    sb.append("    NOT: ").append(toIndentedString(NOT)).append("\n");
    sb.append("    nvmfSubsystem: ").append(toIndentedString(nvmfSubsystem)).append("\n");
    sb.append("    OR: ").append(toIndentedString(OR)).append("\n");
    sb.append("    replicaNum: ").append(toIndentedString(replicaNum)).append("\n");
    sb.append("    replicaNumGt: ").append(toIndentedString(replicaNumGt)).append("\n");
    sb.append("    replicaNumGte: ").append(toIndentedString(replicaNumGte)).append("\n");
    sb.append("    replicaNumIn: ").append(toIndentedString(replicaNumIn)).append("\n");
    sb.append("    replicaNumLt: ").append(toIndentedString(replicaNumLt)).append("\n");
    sb.append("    replicaNumLte: ").append(toIndentedString(replicaNumLte)).append("\n");
    sb.append("    replicaNumNot: ").append(toIndentedString(replicaNumNot)).append("\n");
    sb.append("    replicaNumNotIn: ").append(toIndentedString(replicaNumNotIn)).append("\n");
    sb.append("    thinProvision: ").append(toIndentedString(thinProvision)).append("\n");
    sb.append("    thinProvisionNot: ").append(toIndentedString(thinProvisionNot)).append("\n");
    sb.append("    type: ").append(toIndentedString(type)).append("\n");
    sb.append("    typeIn: ").append(toIndentedString(typeIn)).append("\n");
    sb.append("    typeNot: ").append(toIndentedString(typeNot)).append("\n");
    sb.append("    typeNotIn: ").append(toIndentedString(typeNotIn)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

