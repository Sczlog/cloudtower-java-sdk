/*
 * Tower SDK API
 * cloudtower operation API and SDK
 *
 * The version of the OpenAPI document: 1.7.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.smartx.tower.model;

import java.util.Objects;
import java.util.Arrays;
import java.util.Map;
import java.util.HashMap;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import com.smartx.tower.model.BrickTopoPowers;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.util.ArrayList;
import java.util.List;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;


/**
 * SecurityPolicyApplyTo
 */
@JsonPropertyOrder({
  SecurityPolicyApplyTo.JSON_PROPERTY_SELECTOR_IDS,
  SecurityPolicyApplyTo.JSON_PROPERTY_SELECTOR,
  SecurityPolicyApplyTo.JSON_PROPERTY_COMMUNICABLE
})
@javax.annotation.processing.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2021-10-27T15:59:14.939791800+08:00[Asia/Shanghai]")
public class SecurityPolicyApplyTo {
  public static final String JSON_PROPERTY_SELECTOR_IDS = "selector_ids";
  private List<String> selectorIds = new ArrayList<>();

  public static final String JSON_PROPERTY_SELECTOR = "selector";
  private List<BrickTopoPowers> selector = new ArrayList<>();

  public static final String JSON_PROPERTY_COMMUNICABLE = "communicable";
  private Boolean communicable;


  public SecurityPolicyApplyTo selectorIds(List<String> selectorIds) {
    this.selectorIds = selectorIds;
    return this;
  }

  public SecurityPolicyApplyTo addSelectorIdsItem(String selectorIdsItem) {
    this.selectorIds.add(selectorIdsItem);
    return this;
  }

   /**
   * Get selectorIds
   * @return selectorIds
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")
  @JsonProperty(JSON_PROPERTY_SELECTOR_IDS)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public List<String> getSelectorIds() {
    return selectorIds;
  }


  @JsonProperty(JSON_PROPERTY_SELECTOR_IDS)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setSelectorIds(List<String> selectorIds) {
    this.selectorIds = selectorIds;
  }


  public SecurityPolicyApplyTo selector(List<BrickTopoPowers> selector) {
    this.selector = selector;
    return this;
  }

  public SecurityPolicyApplyTo addSelectorItem(BrickTopoPowers selectorItem) {
    this.selector.add(selectorItem);
    return this;
  }

   /**
   * Get selector
   * @return selector
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")
  @JsonProperty(JSON_PROPERTY_SELECTOR)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public List<BrickTopoPowers> getSelector() {
    return selector;
  }


  @JsonProperty(JSON_PROPERTY_SELECTOR)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setSelector(List<BrickTopoPowers> selector) {
    this.selector = selector;
  }


  public SecurityPolicyApplyTo communicable(Boolean communicable) {
    this.communicable = communicable;
    return this;
  }

   /**
   * Get communicable
   * @return communicable
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")
  @JsonProperty(JSON_PROPERTY_COMMUNICABLE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public Boolean getCommunicable() {
    return communicable;
  }


  @JsonProperty(JSON_PROPERTY_COMMUNICABLE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setCommunicable(Boolean communicable) {
    this.communicable = communicable;
  }


  /**
   * Return true if this SecurityPolicy_apply_to object is equal to o.
   */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    SecurityPolicyApplyTo securityPolicyApplyTo = (SecurityPolicyApplyTo) o;
    return Objects.equals(this.selectorIds, securityPolicyApplyTo.selectorIds) &&
        Objects.equals(this.selector, securityPolicyApplyTo.selector) &&
        Objects.equals(this.communicable, securityPolicyApplyTo.communicable);
  }

  @Override
  public int hashCode() {
    return Objects.hash(selectorIds, selector, communicable);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class SecurityPolicyApplyTo {\n");
    sb.append("    selectorIds: ").append(toIndentedString(selectorIds)).append("\n");
    sb.append("    selector: ").append(toIndentedString(selector)).append("\n");
    sb.append("    communicable: ").append(toIndentedString(communicable)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

