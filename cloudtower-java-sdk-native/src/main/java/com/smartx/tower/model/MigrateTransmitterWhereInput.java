/*
 * Tower SDK API
 * cloudtower operation API and SDK
 *
 * The version of the OpenAPI document: 1.7.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.smartx.tower.model;

import java.util.Objects;
import java.util.Arrays;
import java.util.Map;
import java.util.HashMap;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import com.smartx.tower.model.EntityAsyncStatus;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.util.ArrayList;
import java.util.List;
import org.openapitools.jackson.nullable.JsonNullable;
import com.fasterxml.jackson.annotation.JsonIgnore;
import org.openapitools.jackson.nullable.JsonNullable;
import java.util.NoSuchElementException;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;


/**
 * MigrateTransmitterWhereInput
 */
@JsonPropertyOrder({
  MigrateTransmitterWhereInput.JSON_PROPERTY_A_N_D,
  MigrateTransmitterWhereInput.JSON_PROPERTY_CREATED_AT,
  MigrateTransmitterWhereInput.JSON_PROPERTY_CREATED_AT_GT,
  MigrateTransmitterWhereInput.JSON_PROPERTY_CREATED_AT_GTE,
  MigrateTransmitterWhereInput.JSON_PROPERTY_CREATED_AT_IN,
  MigrateTransmitterWhereInput.JSON_PROPERTY_CREATED_AT_LT,
  MigrateTransmitterWhereInput.JSON_PROPERTY_CREATED_AT_LTE,
  MigrateTransmitterWhereInput.JSON_PROPERTY_CREATED_AT_NOT,
  MigrateTransmitterWhereInput.JSON_PROPERTY_CREATED_AT_NOT_IN,
  MigrateTransmitterWhereInput.JSON_PROPERTY_ENTITY_ASYNC_STATUS,
  MigrateTransmitterWhereInput.JSON_PROPERTY_ENTITY_ASYNC_STATUS_IN,
  MigrateTransmitterWhereInput.JSON_PROPERTY_ENTITY_ASYNC_STATUS_NOT,
  MigrateTransmitterWhereInput.JSON_PROPERTY_ENTITY_ASYNC_STATUS_NOT_IN,
  MigrateTransmitterWhereInput.JSON_PROPERTY_ID,
  MigrateTransmitterWhereInput.JSON_PROPERTY_ID_CONTAINS,
  MigrateTransmitterWhereInput.JSON_PROPERTY_ID_ENDS_WITH,
  MigrateTransmitterWhereInput.JSON_PROPERTY_ID_GT,
  MigrateTransmitterWhereInput.JSON_PROPERTY_ID_GTE,
  MigrateTransmitterWhereInput.JSON_PROPERTY_ID_IN,
  MigrateTransmitterWhereInput.JSON_PROPERTY_ID_LT,
  MigrateTransmitterWhereInput.JSON_PROPERTY_ID_LTE,
  MigrateTransmitterWhereInput.JSON_PROPERTY_ID_NOT,
  MigrateTransmitterWhereInput.JSON_PROPERTY_ID_NOT_CONTAINS,
  MigrateTransmitterWhereInput.JSON_PROPERTY_ID_NOT_ENDS_WITH,
  MigrateTransmitterWhereInput.JSON_PROPERTY_ID_NOT_IN,
  MigrateTransmitterWhereInput.JSON_PROPERTY_ID_NOT_STARTS_WITH,
  MigrateTransmitterWhereInput.JSON_PROPERTY_ID_STARTS_WITH,
  MigrateTransmitterWhereInput.JSON_PROPERTY_IP,
  MigrateTransmitterWhereInput.JSON_PROPERTY_IP_CONTAINS,
  MigrateTransmitterWhereInput.JSON_PROPERTY_IP_ENDS_WITH,
  MigrateTransmitterWhereInput.JSON_PROPERTY_IP_GT,
  MigrateTransmitterWhereInput.JSON_PROPERTY_IP_GTE,
  MigrateTransmitterWhereInput.JSON_PROPERTY_IP_IN,
  MigrateTransmitterWhereInput.JSON_PROPERTY_IP_LT,
  MigrateTransmitterWhereInput.JSON_PROPERTY_IP_LTE,
  MigrateTransmitterWhereInput.JSON_PROPERTY_IP_NOT,
  MigrateTransmitterWhereInput.JSON_PROPERTY_IP_NOT_CONTAINS,
  MigrateTransmitterWhereInput.JSON_PROPERTY_IP_NOT_ENDS_WITH,
  MigrateTransmitterWhereInput.JSON_PROPERTY_IP_NOT_IN,
  MigrateTransmitterWhereInput.JSON_PROPERTY_IP_NOT_STARTS_WITH,
  MigrateTransmitterWhereInput.JSON_PROPERTY_IP_STARTS_WITH,
  MigrateTransmitterWhereInput.JSON_PROPERTY_NAME,
  MigrateTransmitterWhereInput.JSON_PROPERTY_NAME_CONTAINS,
  MigrateTransmitterWhereInput.JSON_PROPERTY_NAME_ENDS_WITH,
  MigrateTransmitterWhereInput.JSON_PROPERTY_NAME_GT,
  MigrateTransmitterWhereInput.JSON_PROPERTY_NAME_GTE,
  MigrateTransmitterWhereInput.JSON_PROPERTY_NAME_IN,
  MigrateTransmitterWhereInput.JSON_PROPERTY_NAME_LT,
  MigrateTransmitterWhereInput.JSON_PROPERTY_NAME_LTE,
  MigrateTransmitterWhereInput.JSON_PROPERTY_NAME_NOT,
  MigrateTransmitterWhereInput.JSON_PROPERTY_NAME_NOT_CONTAINS,
  MigrateTransmitterWhereInput.JSON_PROPERTY_NAME_NOT_ENDS_WITH,
  MigrateTransmitterWhereInput.JSON_PROPERTY_NAME_NOT_IN,
  MigrateTransmitterWhereInput.JSON_PROPERTY_NAME_NOT_STARTS_WITH,
  MigrateTransmitterWhereInput.JSON_PROPERTY_NAME_STARTS_WITH,
  MigrateTransmitterWhereInput.JSON_PROPERTY_N_O_T,
  MigrateTransmitterWhereInput.JSON_PROPERTY_O_R,
  MigrateTransmitterWhereInput.JSON_PROPERTY_PASSWORD,
  MigrateTransmitterWhereInput.JSON_PROPERTY_PASSWORD_CONTAINS,
  MigrateTransmitterWhereInput.JSON_PROPERTY_PASSWORD_ENDS_WITH,
  MigrateTransmitterWhereInput.JSON_PROPERTY_PASSWORD_GT,
  MigrateTransmitterWhereInput.JSON_PROPERTY_PASSWORD_GTE,
  MigrateTransmitterWhereInput.JSON_PROPERTY_PASSWORD_IN,
  MigrateTransmitterWhereInput.JSON_PROPERTY_PASSWORD_LT,
  MigrateTransmitterWhereInput.JSON_PROPERTY_PASSWORD_LTE,
  MigrateTransmitterWhereInput.JSON_PROPERTY_PASSWORD_NOT,
  MigrateTransmitterWhereInput.JSON_PROPERTY_PASSWORD_NOT_CONTAINS,
  MigrateTransmitterWhereInput.JSON_PROPERTY_PASSWORD_NOT_ENDS_WITH,
  MigrateTransmitterWhereInput.JSON_PROPERTY_PASSWORD_NOT_IN,
  MigrateTransmitterWhereInput.JSON_PROPERTY_PASSWORD_NOT_STARTS_WITH,
  MigrateTransmitterWhereInput.JSON_PROPERTY_PASSWORD_STARTS_WITH,
  MigrateTransmitterWhereInput.JSON_PROPERTY_USERNAME,
  MigrateTransmitterWhereInput.JSON_PROPERTY_USERNAME_CONTAINS,
  MigrateTransmitterWhereInput.JSON_PROPERTY_USERNAME_ENDS_WITH,
  MigrateTransmitterWhereInput.JSON_PROPERTY_USERNAME_GT,
  MigrateTransmitterWhereInput.JSON_PROPERTY_USERNAME_GTE,
  MigrateTransmitterWhereInput.JSON_PROPERTY_USERNAME_IN,
  MigrateTransmitterWhereInput.JSON_PROPERTY_USERNAME_LT,
  MigrateTransmitterWhereInput.JSON_PROPERTY_USERNAME_LTE,
  MigrateTransmitterWhereInput.JSON_PROPERTY_USERNAME_NOT,
  MigrateTransmitterWhereInput.JSON_PROPERTY_USERNAME_NOT_CONTAINS,
  MigrateTransmitterWhereInput.JSON_PROPERTY_USERNAME_NOT_ENDS_WITH,
  MigrateTransmitterWhereInput.JSON_PROPERTY_USERNAME_NOT_IN,
  MigrateTransmitterWhereInput.JSON_PROPERTY_USERNAME_NOT_STARTS_WITH,
  MigrateTransmitterWhereInput.JSON_PROPERTY_USERNAME_STARTS_WITH
})
@javax.annotation.processing.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2021-10-27T15:59:14.939791800+08:00[Asia/Shanghai]")
public class MigrateTransmitterWhereInput {
  public static final String JSON_PROPERTY_A_N_D = "AND";
  private JsonNullable<List<MigrateTransmitterWhereInput>> AND = JsonNullable.<List<MigrateTransmitterWhereInput>>undefined();

  public static final String JSON_PROPERTY_CREATED_AT = "createdAt";
  private JsonNullable<String> createdAt = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_CREATED_AT_GT = "createdAt_gt";
  private JsonNullable<String> createdAtGt = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_CREATED_AT_GTE = "createdAt_gte";
  private JsonNullable<String> createdAtGte = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_CREATED_AT_IN = "createdAt_in";
  private JsonNullable<List<String>> createdAtIn = JsonNullable.<List<String>>undefined();

  public static final String JSON_PROPERTY_CREATED_AT_LT = "createdAt_lt";
  private JsonNullable<String> createdAtLt = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_CREATED_AT_LTE = "createdAt_lte";
  private JsonNullable<String> createdAtLte = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_CREATED_AT_NOT = "createdAt_not";
  private JsonNullable<String> createdAtNot = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_CREATED_AT_NOT_IN = "createdAt_not_in";
  private JsonNullable<List<String>> createdAtNotIn = JsonNullable.<List<String>>undefined();

  public static final String JSON_PROPERTY_ENTITY_ASYNC_STATUS = "entityAsyncStatus";
  private JsonNullable<EntityAsyncStatus> entityAsyncStatus = JsonNullable.<EntityAsyncStatus>undefined();

  public static final String JSON_PROPERTY_ENTITY_ASYNC_STATUS_IN = "entityAsyncStatus_in";
  private JsonNullable<List<EntityAsyncStatus>> entityAsyncStatusIn = JsonNullable.<List<EntityAsyncStatus>>undefined();

  public static final String JSON_PROPERTY_ENTITY_ASYNC_STATUS_NOT = "entityAsyncStatus_not";
  private JsonNullable<EntityAsyncStatus> entityAsyncStatusNot = JsonNullable.<EntityAsyncStatus>undefined();

  public static final String JSON_PROPERTY_ENTITY_ASYNC_STATUS_NOT_IN = "entityAsyncStatus_not_in";
  private JsonNullable<List<EntityAsyncStatus>> entityAsyncStatusNotIn = JsonNullable.<List<EntityAsyncStatus>>undefined();

  public static final String JSON_PROPERTY_ID = "id";
  private JsonNullable<String> id = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_ID_CONTAINS = "id_contains";
  private JsonNullable<String> idContains = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_ID_ENDS_WITH = "id_ends_with";
  private JsonNullable<String> idEndsWith = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_ID_GT = "id_gt";
  private JsonNullable<String> idGt = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_ID_GTE = "id_gte";
  private JsonNullable<String> idGte = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_ID_IN = "id_in";
  private JsonNullable<List<String>> idIn = JsonNullable.<List<String>>undefined();

  public static final String JSON_PROPERTY_ID_LT = "id_lt";
  private JsonNullable<String> idLt = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_ID_LTE = "id_lte";
  private JsonNullable<String> idLte = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_ID_NOT = "id_not";
  private JsonNullable<String> idNot = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_ID_NOT_CONTAINS = "id_not_contains";
  private JsonNullable<String> idNotContains = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_ID_NOT_ENDS_WITH = "id_not_ends_with";
  private JsonNullable<String> idNotEndsWith = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_ID_NOT_IN = "id_not_in";
  private JsonNullable<List<String>> idNotIn = JsonNullable.<List<String>>undefined();

  public static final String JSON_PROPERTY_ID_NOT_STARTS_WITH = "id_not_starts_with";
  private JsonNullable<String> idNotStartsWith = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_ID_STARTS_WITH = "id_starts_with";
  private JsonNullable<String> idStartsWith = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_IP = "ip";
  private JsonNullable<String> ip = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_IP_CONTAINS = "ip_contains";
  private JsonNullable<String> ipContains = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_IP_ENDS_WITH = "ip_ends_with";
  private JsonNullable<String> ipEndsWith = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_IP_GT = "ip_gt";
  private JsonNullable<String> ipGt = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_IP_GTE = "ip_gte";
  private JsonNullable<String> ipGte = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_IP_IN = "ip_in";
  private JsonNullable<List<String>> ipIn = JsonNullable.<List<String>>undefined();

  public static final String JSON_PROPERTY_IP_LT = "ip_lt";
  private JsonNullable<String> ipLt = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_IP_LTE = "ip_lte";
  private JsonNullable<String> ipLte = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_IP_NOT = "ip_not";
  private JsonNullable<String> ipNot = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_IP_NOT_CONTAINS = "ip_not_contains";
  private JsonNullable<String> ipNotContains = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_IP_NOT_ENDS_WITH = "ip_not_ends_with";
  private JsonNullable<String> ipNotEndsWith = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_IP_NOT_IN = "ip_not_in";
  private JsonNullable<List<String>> ipNotIn = JsonNullable.<List<String>>undefined();

  public static final String JSON_PROPERTY_IP_NOT_STARTS_WITH = "ip_not_starts_with";
  private JsonNullable<String> ipNotStartsWith = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_IP_STARTS_WITH = "ip_starts_with";
  private JsonNullable<String> ipStartsWith = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_NAME = "name";
  private JsonNullable<String> name = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_NAME_CONTAINS = "name_contains";
  private JsonNullable<String> nameContains = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_NAME_ENDS_WITH = "name_ends_with";
  private JsonNullable<String> nameEndsWith = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_NAME_GT = "name_gt";
  private JsonNullable<String> nameGt = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_NAME_GTE = "name_gte";
  private JsonNullable<String> nameGte = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_NAME_IN = "name_in";
  private JsonNullable<List<String>> nameIn = JsonNullable.<List<String>>undefined();

  public static final String JSON_PROPERTY_NAME_LT = "name_lt";
  private JsonNullable<String> nameLt = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_NAME_LTE = "name_lte";
  private JsonNullable<String> nameLte = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_NAME_NOT = "name_not";
  private JsonNullable<String> nameNot = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_NAME_NOT_CONTAINS = "name_not_contains";
  private JsonNullable<String> nameNotContains = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_NAME_NOT_ENDS_WITH = "name_not_ends_with";
  private JsonNullable<String> nameNotEndsWith = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_NAME_NOT_IN = "name_not_in";
  private JsonNullable<List<String>> nameNotIn = JsonNullable.<List<String>>undefined();

  public static final String JSON_PROPERTY_NAME_NOT_STARTS_WITH = "name_not_starts_with";
  private JsonNullable<String> nameNotStartsWith = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_NAME_STARTS_WITH = "name_starts_with";
  private JsonNullable<String> nameStartsWith = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_N_O_T = "NOT";
  private JsonNullable<List<MigrateTransmitterWhereInput>> NOT = JsonNullable.<List<MigrateTransmitterWhereInput>>undefined();

  public static final String JSON_PROPERTY_O_R = "OR";
  private JsonNullable<List<MigrateTransmitterWhereInput>> OR = JsonNullable.<List<MigrateTransmitterWhereInput>>undefined();

  public static final String JSON_PROPERTY_PASSWORD = "password";
  private JsonNullable<String> password = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_PASSWORD_CONTAINS = "password_contains";
  private JsonNullable<String> passwordContains = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_PASSWORD_ENDS_WITH = "password_ends_with";
  private JsonNullable<String> passwordEndsWith = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_PASSWORD_GT = "password_gt";
  private JsonNullable<String> passwordGt = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_PASSWORD_GTE = "password_gte";
  private JsonNullable<String> passwordGte = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_PASSWORD_IN = "password_in";
  private JsonNullable<List<String>> passwordIn = JsonNullable.<List<String>>undefined();

  public static final String JSON_PROPERTY_PASSWORD_LT = "password_lt";
  private JsonNullable<String> passwordLt = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_PASSWORD_LTE = "password_lte";
  private JsonNullable<String> passwordLte = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_PASSWORD_NOT = "password_not";
  private JsonNullable<String> passwordNot = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_PASSWORD_NOT_CONTAINS = "password_not_contains";
  private JsonNullable<String> passwordNotContains = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_PASSWORD_NOT_ENDS_WITH = "password_not_ends_with";
  private JsonNullable<String> passwordNotEndsWith = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_PASSWORD_NOT_IN = "password_not_in";
  private JsonNullable<List<String>> passwordNotIn = JsonNullable.<List<String>>undefined();

  public static final String JSON_PROPERTY_PASSWORD_NOT_STARTS_WITH = "password_not_starts_with";
  private JsonNullable<String> passwordNotStartsWith = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_PASSWORD_STARTS_WITH = "password_starts_with";
  private JsonNullable<String> passwordStartsWith = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_USERNAME = "username";
  private JsonNullable<String> username = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_USERNAME_CONTAINS = "username_contains";
  private JsonNullable<String> usernameContains = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_USERNAME_ENDS_WITH = "username_ends_with";
  private JsonNullable<String> usernameEndsWith = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_USERNAME_GT = "username_gt";
  private JsonNullable<String> usernameGt = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_USERNAME_GTE = "username_gte";
  private JsonNullable<String> usernameGte = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_USERNAME_IN = "username_in";
  private JsonNullable<List<String>> usernameIn = JsonNullable.<List<String>>undefined();

  public static final String JSON_PROPERTY_USERNAME_LT = "username_lt";
  private JsonNullable<String> usernameLt = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_USERNAME_LTE = "username_lte";
  private JsonNullable<String> usernameLte = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_USERNAME_NOT = "username_not";
  private JsonNullable<String> usernameNot = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_USERNAME_NOT_CONTAINS = "username_not_contains";
  private JsonNullable<String> usernameNotContains = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_USERNAME_NOT_ENDS_WITH = "username_not_ends_with";
  private JsonNullable<String> usernameNotEndsWith = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_USERNAME_NOT_IN = "username_not_in";
  private JsonNullable<List<String>> usernameNotIn = JsonNullable.<List<String>>undefined();

  public static final String JSON_PROPERTY_USERNAME_NOT_STARTS_WITH = "username_not_starts_with";
  private JsonNullable<String> usernameNotStartsWith = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_USERNAME_STARTS_WITH = "username_starts_with";
  private JsonNullable<String> usernameStartsWith = JsonNullable.<String>undefined();


  public MigrateTransmitterWhereInput AND(List<MigrateTransmitterWhereInput> AND) {
    this.AND = JsonNullable.<List<MigrateTransmitterWhereInput>>of(AND);
    return this;
  }

  public MigrateTransmitterWhereInput addANDItem(MigrateTransmitterWhereInput ANDItem) {
    if (this.AND == null || !this.AND.isPresent()) {
      this.AND = JsonNullable.<List<MigrateTransmitterWhereInput>>of(new ArrayList<>());
    }
    try {
      this.AND.get().add(ANDItem);
    } catch (java.util.NoSuchElementException e) {
      // this can never happen, as we make sure above that the value is present
    }
    return this;
  }

   /**
   * Get AND
   * @return AND
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public List<MigrateTransmitterWhereInput> getAND() {
        return AND.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_A_N_D)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<List<MigrateTransmitterWhereInput>> getAND_JsonNullable() {
    return AND;
  }
  
  @JsonProperty(JSON_PROPERTY_A_N_D)
  public void setAND_JsonNullable(JsonNullable<List<MigrateTransmitterWhereInput>> AND) {
    this.AND = AND;
  }

  public void setAND(List<MigrateTransmitterWhereInput> AND) {
    this.AND = JsonNullable.<List<MigrateTransmitterWhereInput>>of(AND);
  }


  public MigrateTransmitterWhereInput createdAt(String createdAt) {
    this.createdAt = JsonNullable.<String>of(createdAt);
    return this;
  }

   /**
   * Get createdAt
   * @return createdAt
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getCreatedAt() {
        return createdAt.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_CREATED_AT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getCreatedAt_JsonNullable() {
    return createdAt;
  }
  
  @JsonProperty(JSON_PROPERTY_CREATED_AT)
  public void setCreatedAt_JsonNullable(JsonNullable<String> createdAt) {
    this.createdAt = createdAt;
  }

  public void setCreatedAt(String createdAt) {
    this.createdAt = JsonNullable.<String>of(createdAt);
  }


  public MigrateTransmitterWhereInput createdAtGt(String createdAtGt) {
    this.createdAtGt = JsonNullable.<String>of(createdAtGt);
    return this;
  }

   /**
   * Get createdAtGt
   * @return createdAtGt
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getCreatedAtGt() {
        return createdAtGt.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_CREATED_AT_GT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getCreatedAtGt_JsonNullable() {
    return createdAtGt;
  }
  
  @JsonProperty(JSON_PROPERTY_CREATED_AT_GT)
  public void setCreatedAtGt_JsonNullable(JsonNullable<String> createdAtGt) {
    this.createdAtGt = createdAtGt;
  }

  public void setCreatedAtGt(String createdAtGt) {
    this.createdAtGt = JsonNullable.<String>of(createdAtGt);
  }


  public MigrateTransmitterWhereInput createdAtGte(String createdAtGte) {
    this.createdAtGte = JsonNullable.<String>of(createdAtGte);
    return this;
  }

   /**
   * Get createdAtGte
   * @return createdAtGte
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getCreatedAtGte() {
        return createdAtGte.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_CREATED_AT_GTE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getCreatedAtGte_JsonNullable() {
    return createdAtGte;
  }
  
  @JsonProperty(JSON_PROPERTY_CREATED_AT_GTE)
  public void setCreatedAtGte_JsonNullable(JsonNullable<String> createdAtGte) {
    this.createdAtGte = createdAtGte;
  }

  public void setCreatedAtGte(String createdAtGte) {
    this.createdAtGte = JsonNullable.<String>of(createdAtGte);
  }


  public MigrateTransmitterWhereInput createdAtIn(List<String> createdAtIn) {
    this.createdAtIn = JsonNullable.<List<String>>of(createdAtIn);
    return this;
  }

  public MigrateTransmitterWhereInput addCreatedAtInItem(String createdAtInItem) {
    if (this.createdAtIn == null || !this.createdAtIn.isPresent()) {
      this.createdAtIn = JsonNullable.<List<String>>of(new ArrayList<>());
    }
    try {
      this.createdAtIn.get().add(createdAtInItem);
    } catch (java.util.NoSuchElementException e) {
      // this can never happen, as we make sure above that the value is present
    }
    return this;
  }

   /**
   * Get createdAtIn
   * @return createdAtIn
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public List<String> getCreatedAtIn() {
        return createdAtIn.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_CREATED_AT_IN)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<List<String>> getCreatedAtIn_JsonNullable() {
    return createdAtIn;
  }
  
  @JsonProperty(JSON_PROPERTY_CREATED_AT_IN)
  public void setCreatedAtIn_JsonNullable(JsonNullable<List<String>> createdAtIn) {
    this.createdAtIn = createdAtIn;
  }

  public void setCreatedAtIn(List<String> createdAtIn) {
    this.createdAtIn = JsonNullable.<List<String>>of(createdAtIn);
  }


  public MigrateTransmitterWhereInput createdAtLt(String createdAtLt) {
    this.createdAtLt = JsonNullable.<String>of(createdAtLt);
    return this;
  }

   /**
   * Get createdAtLt
   * @return createdAtLt
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getCreatedAtLt() {
        return createdAtLt.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_CREATED_AT_LT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getCreatedAtLt_JsonNullable() {
    return createdAtLt;
  }
  
  @JsonProperty(JSON_PROPERTY_CREATED_AT_LT)
  public void setCreatedAtLt_JsonNullable(JsonNullable<String> createdAtLt) {
    this.createdAtLt = createdAtLt;
  }

  public void setCreatedAtLt(String createdAtLt) {
    this.createdAtLt = JsonNullable.<String>of(createdAtLt);
  }


  public MigrateTransmitterWhereInput createdAtLte(String createdAtLte) {
    this.createdAtLte = JsonNullable.<String>of(createdAtLte);
    return this;
  }

   /**
   * Get createdAtLte
   * @return createdAtLte
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getCreatedAtLte() {
        return createdAtLte.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_CREATED_AT_LTE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getCreatedAtLte_JsonNullable() {
    return createdAtLte;
  }
  
  @JsonProperty(JSON_PROPERTY_CREATED_AT_LTE)
  public void setCreatedAtLte_JsonNullable(JsonNullable<String> createdAtLte) {
    this.createdAtLte = createdAtLte;
  }

  public void setCreatedAtLte(String createdAtLte) {
    this.createdAtLte = JsonNullable.<String>of(createdAtLte);
  }


  public MigrateTransmitterWhereInput createdAtNot(String createdAtNot) {
    this.createdAtNot = JsonNullable.<String>of(createdAtNot);
    return this;
  }

   /**
   * Get createdAtNot
   * @return createdAtNot
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getCreatedAtNot() {
        return createdAtNot.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_CREATED_AT_NOT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getCreatedAtNot_JsonNullable() {
    return createdAtNot;
  }
  
  @JsonProperty(JSON_PROPERTY_CREATED_AT_NOT)
  public void setCreatedAtNot_JsonNullable(JsonNullable<String> createdAtNot) {
    this.createdAtNot = createdAtNot;
  }

  public void setCreatedAtNot(String createdAtNot) {
    this.createdAtNot = JsonNullable.<String>of(createdAtNot);
  }


  public MigrateTransmitterWhereInput createdAtNotIn(List<String> createdAtNotIn) {
    this.createdAtNotIn = JsonNullable.<List<String>>of(createdAtNotIn);
    return this;
  }

  public MigrateTransmitterWhereInput addCreatedAtNotInItem(String createdAtNotInItem) {
    if (this.createdAtNotIn == null || !this.createdAtNotIn.isPresent()) {
      this.createdAtNotIn = JsonNullable.<List<String>>of(new ArrayList<>());
    }
    try {
      this.createdAtNotIn.get().add(createdAtNotInItem);
    } catch (java.util.NoSuchElementException e) {
      // this can never happen, as we make sure above that the value is present
    }
    return this;
  }

   /**
   * Get createdAtNotIn
   * @return createdAtNotIn
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public List<String> getCreatedAtNotIn() {
        return createdAtNotIn.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_CREATED_AT_NOT_IN)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<List<String>> getCreatedAtNotIn_JsonNullable() {
    return createdAtNotIn;
  }
  
  @JsonProperty(JSON_PROPERTY_CREATED_AT_NOT_IN)
  public void setCreatedAtNotIn_JsonNullable(JsonNullable<List<String>> createdAtNotIn) {
    this.createdAtNotIn = createdAtNotIn;
  }

  public void setCreatedAtNotIn(List<String> createdAtNotIn) {
    this.createdAtNotIn = JsonNullable.<List<String>>of(createdAtNotIn);
  }


  public MigrateTransmitterWhereInput entityAsyncStatus(EntityAsyncStatus entityAsyncStatus) {
    this.entityAsyncStatus = JsonNullable.<EntityAsyncStatus>of(entityAsyncStatus);
    return this;
  }

   /**
   * Get entityAsyncStatus
   * @return entityAsyncStatus
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public EntityAsyncStatus getEntityAsyncStatus() {
        return entityAsyncStatus.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_ENTITY_ASYNC_STATUS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<EntityAsyncStatus> getEntityAsyncStatus_JsonNullable() {
    return entityAsyncStatus;
  }
  
  @JsonProperty(JSON_PROPERTY_ENTITY_ASYNC_STATUS)
  public void setEntityAsyncStatus_JsonNullable(JsonNullable<EntityAsyncStatus> entityAsyncStatus) {
    this.entityAsyncStatus = entityAsyncStatus;
  }

  public void setEntityAsyncStatus(EntityAsyncStatus entityAsyncStatus) {
    this.entityAsyncStatus = JsonNullable.<EntityAsyncStatus>of(entityAsyncStatus);
  }


  public MigrateTransmitterWhereInput entityAsyncStatusIn(List<EntityAsyncStatus> entityAsyncStatusIn) {
    this.entityAsyncStatusIn = JsonNullable.<List<EntityAsyncStatus>>of(entityAsyncStatusIn);
    return this;
  }

  public MigrateTransmitterWhereInput addEntityAsyncStatusInItem(EntityAsyncStatus entityAsyncStatusInItem) {
    if (this.entityAsyncStatusIn == null || !this.entityAsyncStatusIn.isPresent()) {
      this.entityAsyncStatusIn = JsonNullable.<List<EntityAsyncStatus>>of(new ArrayList<>());
    }
    try {
      this.entityAsyncStatusIn.get().add(entityAsyncStatusInItem);
    } catch (java.util.NoSuchElementException e) {
      // this can never happen, as we make sure above that the value is present
    }
    return this;
  }

   /**
   * Get entityAsyncStatusIn
   * @return entityAsyncStatusIn
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public List<EntityAsyncStatus> getEntityAsyncStatusIn() {
        return entityAsyncStatusIn.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_ENTITY_ASYNC_STATUS_IN)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<List<EntityAsyncStatus>> getEntityAsyncStatusIn_JsonNullable() {
    return entityAsyncStatusIn;
  }
  
  @JsonProperty(JSON_PROPERTY_ENTITY_ASYNC_STATUS_IN)
  public void setEntityAsyncStatusIn_JsonNullable(JsonNullable<List<EntityAsyncStatus>> entityAsyncStatusIn) {
    this.entityAsyncStatusIn = entityAsyncStatusIn;
  }

  public void setEntityAsyncStatusIn(List<EntityAsyncStatus> entityAsyncStatusIn) {
    this.entityAsyncStatusIn = JsonNullable.<List<EntityAsyncStatus>>of(entityAsyncStatusIn);
  }


  public MigrateTransmitterWhereInput entityAsyncStatusNot(EntityAsyncStatus entityAsyncStatusNot) {
    this.entityAsyncStatusNot = JsonNullable.<EntityAsyncStatus>of(entityAsyncStatusNot);
    return this;
  }

   /**
   * Get entityAsyncStatusNot
   * @return entityAsyncStatusNot
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public EntityAsyncStatus getEntityAsyncStatusNot() {
        return entityAsyncStatusNot.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_ENTITY_ASYNC_STATUS_NOT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<EntityAsyncStatus> getEntityAsyncStatusNot_JsonNullable() {
    return entityAsyncStatusNot;
  }
  
  @JsonProperty(JSON_PROPERTY_ENTITY_ASYNC_STATUS_NOT)
  public void setEntityAsyncStatusNot_JsonNullable(JsonNullable<EntityAsyncStatus> entityAsyncStatusNot) {
    this.entityAsyncStatusNot = entityAsyncStatusNot;
  }

  public void setEntityAsyncStatusNot(EntityAsyncStatus entityAsyncStatusNot) {
    this.entityAsyncStatusNot = JsonNullable.<EntityAsyncStatus>of(entityAsyncStatusNot);
  }


  public MigrateTransmitterWhereInput entityAsyncStatusNotIn(List<EntityAsyncStatus> entityAsyncStatusNotIn) {
    this.entityAsyncStatusNotIn = JsonNullable.<List<EntityAsyncStatus>>of(entityAsyncStatusNotIn);
    return this;
  }

  public MigrateTransmitterWhereInput addEntityAsyncStatusNotInItem(EntityAsyncStatus entityAsyncStatusNotInItem) {
    if (this.entityAsyncStatusNotIn == null || !this.entityAsyncStatusNotIn.isPresent()) {
      this.entityAsyncStatusNotIn = JsonNullable.<List<EntityAsyncStatus>>of(new ArrayList<>());
    }
    try {
      this.entityAsyncStatusNotIn.get().add(entityAsyncStatusNotInItem);
    } catch (java.util.NoSuchElementException e) {
      // this can never happen, as we make sure above that the value is present
    }
    return this;
  }

   /**
   * Get entityAsyncStatusNotIn
   * @return entityAsyncStatusNotIn
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public List<EntityAsyncStatus> getEntityAsyncStatusNotIn() {
        return entityAsyncStatusNotIn.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_ENTITY_ASYNC_STATUS_NOT_IN)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<List<EntityAsyncStatus>> getEntityAsyncStatusNotIn_JsonNullable() {
    return entityAsyncStatusNotIn;
  }
  
  @JsonProperty(JSON_PROPERTY_ENTITY_ASYNC_STATUS_NOT_IN)
  public void setEntityAsyncStatusNotIn_JsonNullable(JsonNullable<List<EntityAsyncStatus>> entityAsyncStatusNotIn) {
    this.entityAsyncStatusNotIn = entityAsyncStatusNotIn;
  }

  public void setEntityAsyncStatusNotIn(List<EntityAsyncStatus> entityAsyncStatusNotIn) {
    this.entityAsyncStatusNotIn = JsonNullable.<List<EntityAsyncStatus>>of(entityAsyncStatusNotIn);
  }


  public MigrateTransmitterWhereInput id(String id) {
    this.id = JsonNullable.<String>of(id);
    return this;
  }

   /**
   * Get id
   * @return id
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getId() {
        return id.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getId_JsonNullable() {
    return id;
  }
  
  @JsonProperty(JSON_PROPERTY_ID)
  public void setId_JsonNullable(JsonNullable<String> id) {
    this.id = id;
  }

  public void setId(String id) {
    this.id = JsonNullable.<String>of(id);
  }


  public MigrateTransmitterWhereInput idContains(String idContains) {
    this.idContains = JsonNullable.<String>of(idContains);
    return this;
  }

   /**
   * Get idContains
   * @return idContains
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getIdContains() {
        return idContains.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_ID_CONTAINS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getIdContains_JsonNullable() {
    return idContains;
  }
  
  @JsonProperty(JSON_PROPERTY_ID_CONTAINS)
  public void setIdContains_JsonNullable(JsonNullable<String> idContains) {
    this.idContains = idContains;
  }

  public void setIdContains(String idContains) {
    this.idContains = JsonNullable.<String>of(idContains);
  }


  public MigrateTransmitterWhereInput idEndsWith(String idEndsWith) {
    this.idEndsWith = JsonNullable.<String>of(idEndsWith);
    return this;
  }

   /**
   * Get idEndsWith
   * @return idEndsWith
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getIdEndsWith() {
        return idEndsWith.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_ID_ENDS_WITH)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getIdEndsWith_JsonNullable() {
    return idEndsWith;
  }
  
  @JsonProperty(JSON_PROPERTY_ID_ENDS_WITH)
  public void setIdEndsWith_JsonNullable(JsonNullable<String> idEndsWith) {
    this.idEndsWith = idEndsWith;
  }

  public void setIdEndsWith(String idEndsWith) {
    this.idEndsWith = JsonNullable.<String>of(idEndsWith);
  }


  public MigrateTransmitterWhereInput idGt(String idGt) {
    this.idGt = JsonNullable.<String>of(idGt);
    return this;
  }

   /**
   * Get idGt
   * @return idGt
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getIdGt() {
        return idGt.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_ID_GT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getIdGt_JsonNullable() {
    return idGt;
  }
  
  @JsonProperty(JSON_PROPERTY_ID_GT)
  public void setIdGt_JsonNullable(JsonNullable<String> idGt) {
    this.idGt = idGt;
  }

  public void setIdGt(String idGt) {
    this.idGt = JsonNullable.<String>of(idGt);
  }


  public MigrateTransmitterWhereInput idGte(String idGte) {
    this.idGte = JsonNullable.<String>of(idGte);
    return this;
  }

   /**
   * Get idGte
   * @return idGte
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getIdGte() {
        return idGte.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_ID_GTE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getIdGte_JsonNullable() {
    return idGte;
  }
  
  @JsonProperty(JSON_PROPERTY_ID_GTE)
  public void setIdGte_JsonNullable(JsonNullable<String> idGte) {
    this.idGte = idGte;
  }

  public void setIdGte(String idGte) {
    this.idGte = JsonNullable.<String>of(idGte);
  }


  public MigrateTransmitterWhereInput idIn(List<String> idIn) {
    this.idIn = JsonNullable.<List<String>>of(idIn);
    return this;
  }

  public MigrateTransmitterWhereInput addIdInItem(String idInItem) {
    if (this.idIn == null || !this.idIn.isPresent()) {
      this.idIn = JsonNullable.<List<String>>of(new ArrayList<>());
    }
    try {
      this.idIn.get().add(idInItem);
    } catch (java.util.NoSuchElementException e) {
      // this can never happen, as we make sure above that the value is present
    }
    return this;
  }

   /**
   * Get idIn
   * @return idIn
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public List<String> getIdIn() {
        return idIn.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_ID_IN)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<List<String>> getIdIn_JsonNullable() {
    return idIn;
  }
  
  @JsonProperty(JSON_PROPERTY_ID_IN)
  public void setIdIn_JsonNullable(JsonNullable<List<String>> idIn) {
    this.idIn = idIn;
  }

  public void setIdIn(List<String> idIn) {
    this.idIn = JsonNullable.<List<String>>of(idIn);
  }


  public MigrateTransmitterWhereInput idLt(String idLt) {
    this.idLt = JsonNullable.<String>of(idLt);
    return this;
  }

   /**
   * Get idLt
   * @return idLt
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getIdLt() {
        return idLt.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_ID_LT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getIdLt_JsonNullable() {
    return idLt;
  }
  
  @JsonProperty(JSON_PROPERTY_ID_LT)
  public void setIdLt_JsonNullable(JsonNullable<String> idLt) {
    this.idLt = idLt;
  }

  public void setIdLt(String idLt) {
    this.idLt = JsonNullable.<String>of(idLt);
  }


  public MigrateTransmitterWhereInput idLte(String idLte) {
    this.idLte = JsonNullable.<String>of(idLte);
    return this;
  }

   /**
   * Get idLte
   * @return idLte
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getIdLte() {
        return idLte.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_ID_LTE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getIdLte_JsonNullable() {
    return idLte;
  }
  
  @JsonProperty(JSON_PROPERTY_ID_LTE)
  public void setIdLte_JsonNullable(JsonNullable<String> idLte) {
    this.idLte = idLte;
  }

  public void setIdLte(String idLte) {
    this.idLte = JsonNullable.<String>of(idLte);
  }


  public MigrateTransmitterWhereInput idNot(String idNot) {
    this.idNot = JsonNullable.<String>of(idNot);
    return this;
  }

   /**
   * Get idNot
   * @return idNot
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getIdNot() {
        return idNot.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_ID_NOT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getIdNot_JsonNullable() {
    return idNot;
  }
  
  @JsonProperty(JSON_PROPERTY_ID_NOT)
  public void setIdNot_JsonNullable(JsonNullable<String> idNot) {
    this.idNot = idNot;
  }

  public void setIdNot(String idNot) {
    this.idNot = JsonNullable.<String>of(idNot);
  }


  public MigrateTransmitterWhereInput idNotContains(String idNotContains) {
    this.idNotContains = JsonNullable.<String>of(idNotContains);
    return this;
  }

   /**
   * Get idNotContains
   * @return idNotContains
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getIdNotContains() {
        return idNotContains.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_ID_NOT_CONTAINS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getIdNotContains_JsonNullable() {
    return idNotContains;
  }
  
  @JsonProperty(JSON_PROPERTY_ID_NOT_CONTAINS)
  public void setIdNotContains_JsonNullable(JsonNullable<String> idNotContains) {
    this.idNotContains = idNotContains;
  }

  public void setIdNotContains(String idNotContains) {
    this.idNotContains = JsonNullable.<String>of(idNotContains);
  }


  public MigrateTransmitterWhereInput idNotEndsWith(String idNotEndsWith) {
    this.idNotEndsWith = JsonNullable.<String>of(idNotEndsWith);
    return this;
  }

   /**
   * Get idNotEndsWith
   * @return idNotEndsWith
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getIdNotEndsWith() {
        return idNotEndsWith.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_ID_NOT_ENDS_WITH)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getIdNotEndsWith_JsonNullable() {
    return idNotEndsWith;
  }
  
  @JsonProperty(JSON_PROPERTY_ID_NOT_ENDS_WITH)
  public void setIdNotEndsWith_JsonNullable(JsonNullable<String> idNotEndsWith) {
    this.idNotEndsWith = idNotEndsWith;
  }

  public void setIdNotEndsWith(String idNotEndsWith) {
    this.idNotEndsWith = JsonNullable.<String>of(idNotEndsWith);
  }


  public MigrateTransmitterWhereInput idNotIn(List<String> idNotIn) {
    this.idNotIn = JsonNullable.<List<String>>of(idNotIn);
    return this;
  }

  public MigrateTransmitterWhereInput addIdNotInItem(String idNotInItem) {
    if (this.idNotIn == null || !this.idNotIn.isPresent()) {
      this.idNotIn = JsonNullable.<List<String>>of(new ArrayList<>());
    }
    try {
      this.idNotIn.get().add(idNotInItem);
    } catch (java.util.NoSuchElementException e) {
      // this can never happen, as we make sure above that the value is present
    }
    return this;
  }

   /**
   * Get idNotIn
   * @return idNotIn
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public List<String> getIdNotIn() {
        return idNotIn.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_ID_NOT_IN)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<List<String>> getIdNotIn_JsonNullable() {
    return idNotIn;
  }
  
  @JsonProperty(JSON_PROPERTY_ID_NOT_IN)
  public void setIdNotIn_JsonNullable(JsonNullable<List<String>> idNotIn) {
    this.idNotIn = idNotIn;
  }

  public void setIdNotIn(List<String> idNotIn) {
    this.idNotIn = JsonNullable.<List<String>>of(idNotIn);
  }


  public MigrateTransmitterWhereInput idNotStartsWith(String idNotStartsWith) {
    this.idNotStartsWith = JsonNullable.<String>of(idNotStartsWith);
    return this;
  }

   /**
   * Get idNotStartsWith
   * @return idNotStartsWith
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getIdNotStartsWith() {
        return idNotStartsWith.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_ID_NOT_STARTS_WITH)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getIdNotStartsWith_JsonNullable() {
    return idNotStartsWith;
  }
  
  @JsonProperty(JSON_PROPERTY_ID_NOT_STARTS_WITH)
  public void setIdNotStartsWith_JsonNullable(JsonNullable<String> idNotStartsWith) {
    this.idNotStartsWith = idNotStartsWith;
  }

  public void setIdNotStartsWith(String idNotStartsWith) {
    this.idNotStartsWith = JsonNullable.<String>of(idNotStartsWith);
  }


  public MigrateTransmitterWhereInput idStartsWith(String idStartsWith) {
    this.idStartsWith = JsonNullable.<String>of(idStartsWith);
    return this;
  }

   /**
   * Get idStartsWith
   * @return idStartsWith
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getIdStartsWith() {
        return idStartsWith.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_ID_STARTS_WITH)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getIdStartsWith_JsonNullable() {
    return idStartsWith;
  }
  
  @JsonProperty(JSON_PROPERTY_ID_STARTS_WITH)
  public void setIdStartsWith_JsonNullable(JsonNullable<String> idStartsWith) {
    this.idStartsWith = idStartsWith;
  }

  public void setIdStartsWith(String idStartsWith) {
    this.idStartsWith = JsonNullable.<String>of(idStartsWith);
  }


  public MigrateTransmitterWhereInput ip(String ip) {
    this.ip = JsonNullable.<String>of(ip);
    return this;
  }

   /**
   * Get ip
   * @return ip
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getIp() {
        return ip.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_IP)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getIp_JsonNullable() {
    return ip;
  }
  
  @JsonProperty(JSON_PROPERTY_IP)
  public void setIp_JsonNullable(JsonNullable<String> ip) {
    this.ip = ip;
  }

  public void setIp(String ip) {
    this.ip = JsonNullable.<String>of(ip);
  }


  public MigrateTransmitterWhereInput ipContains(String ipContains) {
    this.ipContains = JsonNullable.<String>of(ipContains);
    return this;
  }

   /**
   * Get ipContains
   * @return ipContains
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getIpContains() {
        return ipContains.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_IP_CONTAINS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getIpContains_JsonNullable() {
    return ipContains;
  }
  
  @JsonProperty(JSON_PROPERTY_IP_CONTAINS)
  public void setIpContains_JsonNullable(JsonNullable<String> ipContains) {
    this.ipContains = ipContains;
  }

  public void setIpContains(String ipContains) {
    this.ipContains = JsonNullable.<String>of(ipContains);
  }


  public MigrateTransmitterWhereInput ipEndsWith(String ipEndsWith) {
    this.ipEndsWith = JsonNullable.<String>of(ipEndsWith);
    return this;
  }

   /**
   * Get ipEndsWith
   * @return ipEndsWith
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getIpEndsWith() {
        return ipEndsWith.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_IP_ENDS_WITH)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getIpEndsWith_JsonNullable() {
    return ipEndsWith;
  }
  
  @JsonProperty(JSON_PROPERTY_IP_ENDS_WITH)
  public void setIpEndsWith_JsonNullable(JsonNullable<String> ipEndsWith) {
    this.ipEndsWith = ipEndsWith;
  }

  public void setIpEndsWith(String ipEndsWith) {
    this.ipEndsWith = JsonNullable.<String>of(ipEndsWith);
  }


  public MigrateTransmitterWhereInput ipGt(String ipGt) {
    this.ipGt = JsonNullable.<String>of(ipGt);
    return this;
  }

   /**
   * Get ipGt
   * @return ipGt
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getIpGt() {
        return ipGt.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_IP_GT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getIpGt_JsonNullable() {
    return ipGt;
  }
  
  @JsonProperty(JSON_PROPERTY_IP_GT)
  public void setIpGt_JsonNullable(JsonNullable<String> ipGt) {
    this.ipGt = ipGt;
  }

  public void setIpGt(String ipGt) {
    this.ipGt = JsonNullable.<String>of(ipGt);
  }


  public MigrateTransmitterWhereInput ipGte(String ipGte) {
    this.ipGte = JsonNullable.<String>of(ipGte);
    return this;
  }

   /**
   * Get ipGte
   * @return ipGte
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getIpGte() {
        return ipGte.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_IP_GTE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getIpGte_JsonNullable() {
    return ipGte;
  }
  
  @JsonProperty(JSON_PROPERTY_IP_GTE)
  public void setIpGte_JsonNullable(JsonNullable<String> ipGte) {
    this.ipGte = ipGte;
  }

  public void setIpGte(String ipGte) {
    this.ipGte = JsonNullable.<String>of(ipGte);
  }


  public MigrateTransmitterWhereInput ipIn(List<String> ipIn) {
    this.ipIn = JsonNullable.<List<String>>of(ipIn);
    return this;
  }

  public MigrateTransmitterWhereInput addIpInItem(String ipInItem) {
    if (this.ipIn == null || !this.ipIn.isPresent()) {
      this.ipIn = JsonNullable.<List<String>>of(new ArrayList<>());
    }
    try {
      this.ipIn.get().add(ipInItem);
    } catch (java.util.NoSuchElementException e) {
      // this can never happen, as we make sure above that the value is present
    }
    return this;
  }

   /**
   * Get ipIn
   * @return ipIn
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public List<String> getIpIn() {
        return ipIn.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_IP_IN)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<List<String>> getIpIn_JsonNullable() {
    return ipIn;
  }
  
  @JsonProperty(JSON_PROPERTY_IP_IN)
  public void setIpIn_JsonNullable(JsonNullable<List<String>> ipIn) {
    this.ipIn = ipIn;
  }

  public void setIpIn(List<String> ipIn) {
    this.ipIn = JsonNullable.<List<String>>of(ipIn);
  }


  public MigrateTransmitterWhereInput ipLt(String ipLt) {
    this.ipLt = JsonNullable.<String>of(ipLt);
    return this;
  }

   /**
   * Get ipLt
   * @return ipLt
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getIpLt() {
        return ipLt.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_IP_LT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getIpLt_JsonNullable() {
    return ipLt;
  }
  
  @JsonProperty(JSON_PROPERTY_IP_LT)
  public void setIpLt_JsonNullable(JsonNullable<String> ipLt) {
    this.ipLt = ipLt;
  }

  public void setIpLt(String ipLt) {
    this.ipLt = JsonNullable.<String>of(ipLt);
  }


  public MigrateTransmitterWhereInput ipLte(String ipLte) {
    this.ipLte = JsonNullable.<String>of(ipLte);
    return this;
  }

   /**
   * Get ipLte
   * @return ipLte
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getIpLte() {
        return ipLte.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_IP_LTE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getIpLte_JsonNullable() {
    return ipLte;
  }
  
  @JsonProperty(JSON_PROPERTY_IP_LTE)
  public void setIpLte_JsonNullable(JsonNullable<String> ipLte) {
    this.ipLte = ipLte;
  }

  public void setIpLte(String ipLte) {
    this.ipLte = JsonNullable.<String>of(ipLte);
  }


  public MigrateTransmitterWhereInput ipNot(String ipNot) {
    this.ipNot = JsonNullable.<String>of(ipNot);
    return this;
  }

   /**
   * Get ipNot
   * @return ipNot
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getIpNot() {
        return ipNot.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_IP_NOT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getIpNot_JsonNullable() {
    return ipNot;
  }
  
  @JsonProperty(JSON_PROPERTY_IP_NOT)
  public void setIpNot_JsonNullable(JsonNullable<String> ipNot) {
    this.ipNot = ipNot;
  }

  public void setIpNot(String ipNot) {
    this.ipNot = JsonNullable.<String>of(ipNot);
  }


  public MigrateTransmitterWhereInput ipNotContains(String ipNotContains) {
    this.ipNotContains = JsonNullable.<String>of(ipNotContains);
    return this;
  }

   /**
   * Get ipNotContains
   * @return ipNotContains
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getIpNotContains() {
        return ipNotContains.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_IP_NOT_CONTAINS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getIpNotContains_JsonNullable() {
    return ipNotContains;
  }
  
  @JsonProperty(JSON_PROPERTY_IP_NOT_CONTAINS)
  public void setIpNotContains_JsonNullable(JsonNullable<String> ipNotContains) {
    this.ipNotContains = ipNotContains;
  }

  public void setIpNotContains(String ipNotContains) {
    this.ipNotContains = JsonNullable.<String>of(ipNotContains);
  }


  public MigrateTransmitterWhereInput ipNotEndsWith(String ipNotEndsWith) {
    this.ipNotEndsWith = JsonNullable.<String>of(ipNotEndsWith);
    return this;
  }

   /**
   * Get ipNotEndsWith
   * @return ipNotEndsWith
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getIpNotEndsWith() {
        return ipNotEndsWith.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_IP_NOT_ENDS_WITH)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getIpNotEndsWith_JsonNullable() {
    return ipNotEndsWith;
  }
  
  @JsonProperty(JSON_PROPERTY_IP_NOT_ENDS_WITH)
  public void setIpNotEndsWith_JsonNullable(JsonNullable<String> ipNotEndsWith) {
    this.ipNotEndsWith = ipNotEndsWith;
  }

  public void setIpNotEndsWith(String ipNotEndsWith) {
    this.ipNotEndsWith = JsonNullable.<String>of(ipNotEndsWith);
  }


  public MigrateTransmitterWhereInput ipNotIn(List<String> ipNotIn) {
    this.ipNotIn = JsonNullable.<List<String>>of(ipNotIn);
    return this;
  }

  public MigrateTransmitterWhereInput addIpNotInItem(String ipNotInItem) {
    if (this.ipNotIn == null || !this.ipNotIn.isPresent()) {
      this.ipNotIn = JsonNullable.<List<String>>of(new ArrayList<>());
    }
    try {
      this.ipNotIn.get().add(ipNotInItem);
    } catch (java.util.NoSuchElementException e) {
      // this can never happen, as we make sure above that the value is present
    }
    return this;
  }

   /**
   * Get ipNotIn
   * @return ipNotIn
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public List<String> getIpNotIn() {
        return ipNotIn.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_IP_NOT_IN)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<List<String>> getIpNotIn_JsonNullable() {
    return ipNotIn;
  }
  
  @JsonProperty(JSON_PROPERTY_IP_NOT_IN)
  public void setIpNotIn_JsonNullable(JsonNullable<List<String>> ipNotIn) {
    this.ipNotIn = ipNotIn;
  }

  public void setIpNotIn(List<String> ipNotIn) {
    this.ipNotIn = JsonNullable.<List<String>>of(ipNotIn);
  }


  public MigrateTransmitterWhereInput ipNotStartsWith(String ipNotStartsWith) {
    this.ipNotStartsWith = JsonNullable.<String>of(ipNotStartsWith);
    return this;
  }

   /**
   * Get ipNotStartsWith
   * @return ipNotStartsWith
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getIpNotStartsWith() {
        return ipNotStartsWith.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_IP_NOT_STARTS_WITH)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getIpNotStartsWith_JsonNullable() {
    return ipNotStartsWith;
  }
  
  @JsonProperty(JSON_PROPERTY_IP_NOT_STARTS_WITH)
  public void setIpNotStartsWith_JsonNullable(JsonNullable<String> ipNotStartsWith) {
    this.ipNotStartsWith = ipNotStartsWith;
  }

  public void setIpNotStartsWith(String ipNotStartsWith) {
    this.ipNotStartsWith = JsonNullable.<String>of(ipNotStartsWith);
  }


  public MigrateTransmitterWhereInput ipStartsWith(String ipStartsWith) {
    this.ipStartsWith = JsonNullable.<String>of(ipStartsWith);
    return this;
  }

   /**
   * Get ipStartsWith
   * @return ipStartsWith
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getIpStartsWith() {
        return ipStartsWith.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_IP_STARTS_WITH)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getIpStartsWith_JsonNullable() {
    return ipStartsWith;
  }
  
  @JsonProperty(JSON_PROPERTY_IP_STARTS_WITH)
  public void setIpStartsWith_JsonNullable(JsonNullable<String> ipStartsWith) {
    this.ipStartsWith = ipStartsWith;
  }

  public void setIpStartsWith(String ipStartsWith) {
    this.ipStartsWith = JsonNullable.<String>of(ipStartsWith);
  }


  public MigrateTransmitterWhereInput name(String name) {
    this.name = JsonNullable.<String>of(name);
    return this;
  }

   /**
   * Get name
   * @return name
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getName() {
        return name.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getName_JsonNullable() {
    return name;
  }
  
  @JsonProperty(JSON_PROPERTY_NAME)
  public void setName_JsonNullable(JsonNullable<String> name) {
    this.name = name;
  }

  public void setName(String name) {
    this.name = JsonNullable.<String>of(name);
  }


  public MigrateTransmitterWhereInput nameContains(String nameContains) {
    this.nameContains = JsonNullable.<String>of(nameContains);
    return this;
  }

   /**
   * Get nameContains
   * @return nameContains
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getNameContains() {
        return nameContains.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_NAME_CONTAINS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getNameContains_JsonNullable() {
    return nameContains;
  }
  
  @JsonProperty(JSON_PROPERTY_NAME_CONTAINS)
  public void setNameContains_JsonNullable(JsonNullable<String> nameContains) {
    this.nameContains = nameContains;
  }

  public void setNameContains(String nameContains) {
    this.nameContains = JsonNullable.<String>of(nameContains);
  }


  public MigrateTransmitterWhereInput nameEndsWith(String nameEndsWith) {
    this.nameEndsWith = JsonNullable.<String>of(nameEndsWith);
    return this;
  }

   /**
   * Get nameEndsWith
   * @return nameEndsWith
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getNameEndsWith() {
        return nameEndsWith.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_NAME_ENDS_WITH)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getNameEndsWith_JsonNullable() {
    return nameEndsWith;
  }
  
  @JsonProperty(JSON_PROPERTY_NAME_ENDS_WITH)
  public void setNameEndsWith_JsonNullable(JsonNullable<String> nameEndsWith) {
    this.nameEndsWith = nameEndsWith;
  }

  public void setNameEndsWith(String nameEndsWith) {
    this.nameEndsWith = JsonNullable.<String>of(nameEndsWith);
  }


  public MigrateTransmitterWhereInput nameGt(String nameGt) {
    this.nameGt = JsonNullable.<String>of(nameGt);
    return this;
  }

   /**
   * Get nameGt
   * @return nameGt
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getNameGt() {
        return nameGt.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_NAME_GT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getNameGt_JsonNullable() {
    return nameGt;
  }
  
  @JsonProperty(JSON_PROPERTY_NAME_GT)
  public void setNameGt_JsonNullable(JsonNullable<String> nameGt) {
    this.nameGt = nameGt;
  }

  public void setNameGt(String nameGt) {
    this.nameGt = JsonNullable.<String>of(nameGt);
  }


  public MigrateTransmitterWhereInput nameGte(String nameGte) {
    this.nameGte = JsonNullable.<String>of(nameGte);
    return this;
  }

   /**
   * Get nameGte
   * @return nameGte
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getNameGte() {
        return nameGte.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_NAME_GTE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getNameGte_JsonNullable() {
    return nameGte;
  }
  
  @JsonProperty(JSON_PROPERTY_NAME_GTE)
  public void setNameGte_JsonNullable(JsonNullable<String> nameGte) {
    this.nameGte = nameGte;
  }

  public void setNameGte(String nameGte) {
    this.nameGte = JsonNullable.<String>of(nameGte);
  }


  public MigrateTransmitterWhereInput nameIn(List<String> nameIn) {
    this.nameIn = JsonNullable.<List<String>>of(nameIn);
    return this;
  }

  public MigrateTransmitterWhereInput addNameInItem(String nameInItem) {
    if (this.nameIn == null || !this.nameIn.isPresent()) {
      this.nameIn = JsonNullable.<List<String>>of(new ArrayList<>());
    }
    try {
      this.nameIn.get().add(nameInItem);
    } catch (java.util.NoSuchElementException e) {
      // this can never happen, as we make sure above that the value is present
    }
    return this;
  }

   /**
   * Get nameIn
   * @return nameIn
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public List<String> getNameIn() {
        return nameIn.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_NAME_IN)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<List<String>> getNameIn_JsonNullable() {
    return nameIn;
  }
  
  @JsonProperty(JSON_PROPERTY_NAME_IN)
  public void setNameIn_JsonNullable(JsonNullable<List<String>> nameIn) {
    this.nameIn = nameIn;
  }

  public void setNameIn(List<String> nameIn) {
    this.nameIn = JsonNullable.<List<String>>of(nameIn);
  }


  public MigrateTransmitterWhereInput nameLt(String nameLt) {
    this.nameLt = JsonNullable.<String>of(nameLt);
    return this;
  }

   /**
   * Get nameLt
   * @return nameLt
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getNameLt() {
        return nameLt.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_NAME_LT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getNameLt_JsonNullable() {
    return nameLt;
  }
  
  @JsonProperty(JSON_PROPERTY_NAME_LT)
  public void setNameLt_JsonNullable(JsonNullable<String> nameLt) {
    this.nameLt = nameLt;
  }

  public void setNameLt(String nameLt) {
    this.nameLt = JsonNullable.<String>of(nameLt);
  }


  public MigrateTransmitterWhereInput nameLte(String nameLte) {
    this.nameLte = JsonNullable.<String>of(nameLte);
    return this;
  }

   /**
   * Get nameLte
   * @return nameLte
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getNameLte() {
        return nameLte.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_NAME_LTE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getNameLte_JsonNullable() {
    return nameLte;
  }
  
  @JsonProperty(JSON_PROPERTY_NAME_LTE)
  public void setNameLte_JsonNullable(JsonNullable<String> nameLte) {
    this.nameLte = nameLte;
  }

  public void setNameLte(String nameLte) {
    this.nameLte = JsonNullable.<String>of(nameLte);
  }


  public MigrateTransmitterWhereInput nameNot(String nameNot) {
    this.nameNot = JsonNullable.<String>of(nameNot);
    return this;
  }

   /**
   * Get nameNot
   * @return nameNot
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getNameNot() {
        return nameNot.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_NAME_NOT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getNameNot_JsonNullable() {
    return nameNot;
  }
  
  @JsonProperty(JSON_PROPERTY_NAME_NOT)
  public void setNameNot_JsonNullable(JsonNullable<String> nameNot) {
    this.nameNot = nameNot;
  }

  public void setNameNot(String nameNot) {
    this.nameNot = JsonNullable.<String>of(nameNot);
  }


  public MigrateTransmitterWhereInput nameNotContains(String nameNotContains) {
    this.nameNotContains = JsonNullable.<String>of(nameNotContains);
    return this;
  }

   /**
   * Get nameNotContains
   * @return nameNotContains
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getNameNotContains() {
        return nameNotContains.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_NAME_NOT_CONTAINS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getNameNotContains_JsonNullable() {
    return nameNotContains;
  }
  
  @JsonProperty(JSON_PROPERTY_NAME_NOT_CONTAINS)
  public void setNameNotContains_JsonNullable(JsonNullable<String> nameNotContains) {
    this.nameNotContains = nameNotContains;
  }

  public void setNameNotContains(String nameNotContains) {
    this.nameNotContains = JsonNullable.<String>of(nameNotContains);
  }


  public MigrateTransmitterWhereInput nameNotEndsWith(String nameNotEndsWith) {
    this.nameNotEndsWith = JsonNullable.<String>of(nameNotEndsWith);
    return this;
  }

   /**
   * Get nameNotEndsWith
   * @return nameNotEndsWith
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getNameNotEndsWith() {
        return nameNotEndsWith.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_NAME_NOT_ENDS_WITH)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getNameNotEndsWith_JsonNullable() {
    return nameNotEndsWith;
  }
  
  @JsonProperty(JSON_PROPERTY_NAME_NOT_ENDS_WITH)
  public void setNameNotEndsWith_JsonNullable(JsonNullable<String> nameNotEndsWith) {
    this.nameNotEndsWith = nameNotEndsWith;
  }

  public void setNameNotEndsWith(String nameNotEndsWith) {
    this.nameNotEndsWith = JsonNullable.<String>of(nameNotEndsWith);
  }


  public MigrateTransmitterWhereInput nameNotIn(List<String> nameNotIn) {
    this.nameNotIn = JsonNullable.<List<String>>of(nameNotIn);
    return this;
  }

  public MigrateTransmitterWhereInput addNameNotInItem(String nameNotInItem) {
    if (this.nameNotIn == null || !this.nameNotIn.isPresent()) {
      this.nameNotIn = JsonNullable.<List<String>>of(new ArrayList<>());
    }
    try {
      this.nameNotIn.get().add(nameNotInItem);
    } catch (java.util.NoSuchElementException e) {
      // this can never happen, as we make sure above that the value is present
    }
    return this;
  }

   /**
   * Get nameNotIn
   * @return nameNotIn
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public List<String> getNameNotIn() {
        return nameNotIn.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_NAME_NOT_IN)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<List<String>> getNameNotIn_JsonNullable() {
    return nameNotIn;
  }
  
  @JsonProperty(JSON_PROPERTY_NAME_NOT_IN)
  public void setNameNotIn_JsonNullable(JsonNullable<List<String>> nameNotIn) {
    this.nameNotIn = nameNotIn;
  }

  public void setNameNotIn(List<String> nameNotIn) {
    this.nameNotIn = JsonNullable.<List<String>>of(nameNotIn);
  }


  public MigrateTransmitterWhereInput nameNotStartsWith(String nameNotStartsWith) {
    this.nameNotStartsWith = JsonNullable.<String>of(nameNotStartsWith);
    return this;
  }

   /**
   * Get nameNotStartsWith
   * @return nameNotStartsWith
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getNameNotStartsWith() {
        return nameNotStartsWith.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_NAME_NOT_STARTS_WITH)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getNameNotStartsWith_JsonNullable() {
    return nameNotStartsWith;
  }
  
  @JsonProperty(JSON_PROPERTY_NAME_NOT_STARTS_WITH)
  public void setNameNotStartsWith_JsonNullable(JsonNullable<String> nameNotStartsWith) {
    this.nameNotStartsWith = nameNotStartsWith;
  }

  public void setNameNotStartsWith(String nameNotStartsWith) {
    this.nameNotStartsWith = JsonNullable.<String>of(nameNotStartsWith);
  }


  public MigrateTransmitterWhereInput nameStartsWith(String nameStartsWith) {
    this.nameStartsWith = JsonNullable.<String>of(nameStartsWith);
    return this;
  }

   /**
   * Get nameStartsWith
   * @return nameStartsWith
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getNameStartsWith() {
        return nameStartsWith.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_NAME_STARTS_WITH)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getNameStartsWith_JsonNullable() {
    return nameStartsWith;
  }
  
  @JsonProperty(JSON_PROPERTY_NAME_STARTS_WITH)
  public void setNameStartsWith_JsonNullable(JsonNullable<String> nameStartsWith) {
    this.nameStartsWith = nameStartsWith;
  }

  public void setNameStartsWith(String nameStartsWith) {
    this.nameStartsWith = JsonNullable.<String>of(nameStartsWith);
  }


  public MigrateTransmitterWhereInput NOT(List<MigrateTransmitterWhereInput> NOT) {
    this.NOT = JsonNullable.<List<MigrateTransmitterWhereInput>>of(NOT);
    return this;
  }

  public MigrateTransmitterWhereInput addNOTItem(MigrateTransmitterWhereInput NOTItem) {
    if (this.NOT == null || !this.NOT.isPresent()) {
      this.NOT = JsonNullable.<List<MigrateTransmitterWhereInput>>of(new ArrayList<>());
    }
    try {
      this.NOT.get().add(NOTItem);
    } catch (java.util.NoSuchElementException e) {
      // this can never happen, as we make sure above that the value is present
    }
    return this;
  }

   /**
   * Get NOT
   * @return NOT
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public List<MigrateTransmitterWhereInput> getNOT() {
        return NOT.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_N_O_T)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<List<MigrateTransmitterWhereInput>> getNOT_JsonNullable() {
    return NOT;
  }
  
  @JsonProperty(JSON_PROPERTY_N_O_T)
  public void setNOT_JsonNullable(JsonNullable<List<MigrateTransmitterWhereInput>> NOT) {
    this.NOT = NOT;
  }

  public void setNOT(List<MigrateTransmitterWhereInput> NOT) {
    this.NOT = JsonNullable.<List<MigrateTransmitterWhereInput>>of(NOT);
  }


  public MigrateTransmitterWhereInput OR(List<MigrateTransmitterWhereInput> OR) {
    this.OR = JsonNullable.<List<MigrateTransmitterWhereInput>>of(OR);
    return this;
  }

  public MigrateTransmitterWhereInput addORItem(MigrateTransmitterWhereInput ORItem) {
    if (this.OR == null || !this.OR.isPresent()) {
      this.OR = JsonNullable.<List<MigrateTransmitterWhereInput>>of(new ArrayList<>());
    }
    try {
      this.OR.get().add(ORItem);
    } catch (java.util.NoSuchElementException e) {
      // this can never happen, as we make sure above that the value is present
    }
    return this;
  }

   /**
   * Get OR
   * @return OR
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public List<MigrateTransmitterWhereInput> getOR() {
        return OR.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_O_R)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<List<MigrateTransmitterWhereInput>> getOR_JsonNullable() {
    return OR;
  }
  
  @JsonProperty(JSON_PROPERTY_O_R)
  public void setOR_JsonNullable(JsonNullable<List<MigrateTransmitterWhereInput>> OR) {
    this.OR = OR;
  }

  public void setOR(List<MigrateTransmitterWhereInput> OR) {
    this.OR = JsonNullable.<List<MigrateTransmitterWhereInput>>of(OR);
  }


  public MigrateTransmitterWhereInput password(String password) {
    this.password = JsonNullable.<String>of(password);
    return this;
  }

   /**
   * Get password
   * @return password
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getPassword() {
        return password.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_PASSWORD)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getPassword_JsonNullable() {
    return password;
  }
  
  @JsonProperty(JSON_PROPERTY_PASSWORD)
  public void setPassword_JsonNullable(JsonNullable<String> password) {
    this.password = password;
  }

  public void setPassword(String password) {
    this.password = JsonNullable.<String>of(password);
  }


  public MigrateTransmitterWhereInput passwordContains(String passwordContains) {
    this.passwordContains = JsonNullable.<String>of(passwordContains);
    return this;
  }

   /**
   * Get passwordContains
   * @return passwordContains
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getPasswordContains() {
        return passwordContains.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_PASSWORD_CONTAINS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getPasswordContains_JsonNullable() {
    return passwordContains;
  }
  
  @JsonProperty(JSON_PROPERTY_PASSWORD_CONTAINS)
  public void setPasswordContains_JsonNullable(JsonNullable<String> passwordContains) {
    this.passwordContains = passwordContains;
  }

  public void setPasswordContains(String passwordContains) {
    this.passwordContains = JsonNullable.<String>of(passwordContains);
  }


  public MigrateTransmitterWhereInput passwordEndsWith(String passwordEndsWith) {
    this.passwordEndsWith = JsonNullable.<String>of(passwordEndsWith);
    return this;
  }

   /**
   * Get passwordEndsWith
   * @return passwordEndsWith
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getPasswordEndsWith() {
        return passwordEndsWith.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_PASSWORD_ENDS_WITH)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getPasswordEndsWith_JsonNullable() {
    return passwordEndsWith;
  }
  
  @JsonProperty(JSON_PROPERTY_PASSWORD_ENDS_WITH)
  public void setPasswordEndsWith_JsonNullable(JsonNullable<String> passwordEndsWith) {
    this.passwordEndsWith = passwordEndsWith;
  }

  public void setPasswordEndsWith(String passwordEndsWith) {
    this.passwordEndsWith = JsonNullable.<String>of(passwordEndsWith);
  }


  public MigrateTransmitterWhereInput passwordGt(String passwordGt) {
    this.passwordGt = JsonNullable.<String>of(passwordGt);
    return this;
  }

   /**
   * Get passwordGt
   * @return passwordGt
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getPasswordGt() {
        return passwordGt.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_PASSWORD_GT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getPasswordGt_JsonNullable() {
    return passwordGt;
  }
  
  @JsonProperty(JSON_PROPERTY_PASSWORD_GT)
  public void setPasswordGt_JsonNullable(JsonNullable<String> passwordGt) {
    this.passwordGt = passwordGt;
  }

  public void setPasswordGt(String passwordGt) {
    this.passwordGt = JsonNullable.<String>of(passwordGt);
  }


  public MigrateTransmitterWhereInput passwordGte(String passwordGte) {
    this.passwordGte = JsonNullable.<String>of(passwordGte);
    return this;
  }

   /**
   * Get passwordGte
   * @return passwordGte
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getPasswordGte() {
        return passwordGte.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_PASSWORD_GTE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getPasswordGte_JsonNullable() {
    return passwordGte;
  }
  
  @JsonProperty(JSON_PROPERTY_PASSWORD_GTE)
  public void setPasswordGte_JsonNullable(JsonNullable<String> passwordGte) {
    this.passwordGte = passwordGte;
  }

  public void setPasswordGte(String passwordGte) {
    this.passwordGte = JsonNullable.<String>of(passwordGte);
  }


  public MigrateTransmitterWhereInput passwordIn(List<String> passwordIn) {
    this.passwordIn = JsonNullable.<List<String>>of(passwordIn);
    return this;
  }

  public MigrateTransmitterWhereInput addPasswordInItem(String passwordInItem) {
    if (this.passwordIn == null || !this.passwordIn.isPresent()) {
      this.passwordIn = JsonNullable.<List<String>>of(new ArrayList<>());
    }
    try {
      this.passwordIn.get().add(passwordInItem);
    } catch (java.util.NoSuchElementException e) {
      // this can never happen, as we make sure above that the value is present
    }
    return this;
  }

   /**
   * Get passwordIn
   * @return passwordIn
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public List<String> getPasswordIn() {
        return passwordIn.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_PASSWORD_IN)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<List<String>> getPasswordIn_JsonNullable() {
    return passwordIn;
  }
  
  @JsonProperty(JSON_PROPERTY_PASSWORD_IN)
  public void setPasswordIn_JsonNullable(JsonNullable<List<String>> passwordIn) {
    this.passwordIn = passwordIn;
  }

  public void setPasswordIn(List<String> passwordIn) {
    this.passwordIn = JsonNullable.<List<String>>of(passwordIn);
  }


  public MigrateTransmitterWhereInput passwordLt(String passwordLt) {
    this.passwordLt = JsonNullable.<String>of(passwordLt);
    return this;
  }

   /**
   * Get passwordLt
   * @return passwordLt
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getPasswordLt() {
        return passwordLt.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_PASSWORD_LT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getPasswordLt_JsonNullable() {
    return passwordLt;
  }
  
  @JsonProperty(JSON_PROPERTY_PASSWORD_LT)
  public void setPasswordLt_JsonNullable(JsonNullable<String> passwordLt) {
    this.passwordLt = passwordLt;
  }

  public void setPasswordLt(String passwordLt) {
    this.passwordLt = JsonNullable.<String>of(passwordLt);
  }


  public MigrateTransmitterWhereInput passwordLte(String passwordLte) {
    this.passwordLte = JsonNullable.<String>of(passwordLte);
    return this;
  }

   /**
   * Get passwordLte
   * @return passwordLte
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getPasswordLte() {
        return passwordLte.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_PASSWORD_LTE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getPasswordLte_JsonNullable() {
    return passwordLte;
  }
  
  @JsonProperty(JSON_PROPERTY_PASSWORD_LTE)
  public void setPasswordLte_JsonNullable(JsonNullable<String> passwordLte) {
    this.passwordLte = passwordLte;
  }

  public void setPasswordLte(String passwordLte) {
    this.passwordLte = JsonNullable.<String>of(passwordLte);
  }


  public MigrateTransmitterWhereInput passwordNot(String passwordNot) {
    this.passwordNot = JsonNullable.<String>of(passwordNot);
    return this;
  }

   /**
   * Get passwordNot
   * @return passwordNot
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getPasswordNot() {
        return passwordNot.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_PASSWORD_NOT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getPasswordNot_JsonNullable() {
    return passwordNot;
  }
  
  @JsonProperty(JSON_PROPERTY_PASSWORD_NOT)
  public void setPasswordNot_JsonNullable(JsonNullable<String> passwordNot) {
    this.passwordNot = passwordNot;
  }

  public void setPasswordNot(String passwordNot) {
    this.passwordNot = JsonNullable.<String>of(passwordNot);
  }


  public MigrateTransmitterWhereInput passwordNotContains(String passwordNotContains) {
    this.passwordNotContains = JsonNullable.<String>of(passwordNotContains);
    return this;
  }

   /**
   * Get passwordNotContains
   * @return passwordNotContains
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getPasswordNotContains() {
        return passwordNotContains.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_PASSWORD_NOT_CONTAINS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getPasswordNotContains_JsonNullable() {
    return passwordNotContains;
  }
  
  @JsonProperty(JSON_PROPERTY_PASSWORD_NOT_CONTAINS)
  public void setPasswordNotContains_JsonNullable(JsonNullable<String> passwordNotContains) {
    this.passwordNotContains = passwordNotContains;
  }

  public void setPasswordNotContains(String passwordNotContains) {
    this.passwordNotContains = JsonNullable.<String>of(passwordNotContains);
  }


  public MigrateTransmitterWhereInput passwordNotEndsWith(String passwordNotEndsWith) {
    this.passwordNotEndsWith = JsonNullable.<String>of(passwordNotEndsWith);
    return this;
  }

   /**
   * Get passwordNotEndsWith
   * @return passwordNotEndsWith
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getPasswordNotEndsWith() {
        return passwordNotEndsWith.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_PASSWORD_NOT_ENDS_WITH)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getPasswordNotEndsWith_JsonNullable() {
    return passwordNotEndsWith;
  }
  
  @JsonProperty(JSON_PROPERTY_PASSWORD_NOT_ENDS_WITH)
  public void setPasswordNotEndsWith_JsonNullable(JsonNullable<String> passwordNotEndsWith) {
    this.passwordNotEndsWith = passwordNotEndsWith;
  }

  public void setPasswordNotEndsWith(String passwordNotEndsWith) {
    this.passwordNotEndsWith = JsonNullable.<String>of(passwordNotEndsWith);
  }


  public MigrateTransmitterWhereInput passwordNotIn(List<String> passwordNotIn) {
    this.passwordNotIn = JsonNullable.<List<String>>of(passwordNotIn);
    return this;
  }

  public MigrateTransmitterWhereInput addPasswordNotInItem(String passwordNotInItem) {
    if (this.passwordNotIn == null || !this.passwordNotIn.isPresent()) {
      this.passwordNotIn = JsonNullable.<List<String>>of(new ArrayList<>());
    }
    try {
      this.passwordNotIn.get().add(passwordNotInItem);
    } catch (java.util.NoSuchElementException e) {
      // this can never happen, as we make sure above that the value is present
    }
    return this;
  }

   /**
   * Get passwordNotIn
   * @return passwordNotIn
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public List<String> getPasswordNotIn() {
        return passwordNotIn.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_PASSWORD_NOT_IN)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<List<String>> getPasswordNotIn_JsonNullable() {
    return passwordNotIn;
  }
  
  @JsonProperty(JSON_PROPERTY_PASSWORD_NOT_IN)
  public void setPasswordNotIn_JsonNullable(JsonNullable<List<String>> passwordNotIn) {
    this.passwordNotIn = passwordNotIn;
  }

  public void setPasswordNotIn(List<String> passwordNotIn) {
    this.passwordNotIn = JsonNullable.<List<String>>of(passwordNotIn);
  }


  public MigrateTransmitterWhereInput passwordNotStartsWith(String passwordNotStartsWith) {
    this.passwordNotStartsWith = JsonNullable.<String>of(passwordNotStartsWith);
    return this;
  }

   /**
   * Get passwordNotStartsWith
   * @return passwordNotStartsWith
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getPasswordNotStartsWith() {
        return passwordNotStartsWith.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_PASSWORD_NOT_STARTS_WITH)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getPasswordNotStartsWith_JsonNullable() {
    return passwordNotStartsWith;
  }
  
  @JsonProperty(JSON_PROPERTY_PASSWORD_NOT_STARTS_WITH)
  public void setPasswordNotStartsWith_JsonNullable(JsonNullable<String> passwordNotStartsWith) {
    this.passwordNotStartsWith = passwordNotStartsWith;
  }

  public void setPasswordNotStartsWith(String passwordNotStartsWith) {
    this.passwordNotStartsWith = JsonNullable.<String>of(passwordNotStartsWith);
  }


  public MigrateTransmitterWhereInput passwordStartsWith(String passwordStartsWith) {
    this.passwordStartsWith = JsonNullable.<String>of(passwordStartsWith);
    return this;
  }

   /**
   * Get passwordStartsWith
   * @return passwordStartsWith
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getPasswordStartsWith() {
        return passwordStartsWith.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_PASSWORD_STARTS_WITH)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getPasswordStartsWith_JsonNullable() {
    return passwordStartsWith;
  }
  
  @JsonProperty(JSON_PROPERTY_PASSWORD_STARTS_WITH)
  public void setPasswordStartsWith_JsonNullable(JsonNullable<String> passwordStartsWith) {
    this.passwordStartsWith = passwordStartsWith;
  }

  public void setPasswordStartsWith(String passwordStartsWith) {
    this.passwordStartsWith = JsonNullable.<String>of(passwordStartsWith);
  }


  public MigrateTransmitterWhereInput username(String username) {
    this.username = JsonNullable.<String>of(username);
    return this;
  }

   /**
   * Get username
   * @return username
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getUsername() {
        return username.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_USERNAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getUsername_JsonNullable() {
    return username;
  }
  
  @JsonProperty(JSON_PROPERTY_USERNAME)
  public void setUsername_JsonNullable(JsonNullable<String> username) {
    this.username = username;
  }

  public void setUsername(String username) {
    this.username = JsonNullable.<String>of(username);
  }


  public MigrateTransmitterWhereInput usernameContains(String usernameContains) {
    this.usernameContains = JsonNullable.<String>of(usernameContains);
    return this;
  }

   /**
   * Get usernameContains
   * @return usernameContains
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getUsernameContains() {
        return usernameContains.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_USERNAME_CONTAINS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getUsernameContains_JsonNullable() {
    return usernameContains;
  }
  
  @JsonProperty(JSON_PROPERTY_USERNAME_CONTAINS)
  public void setUsernameContains_JsonNullable(JsonNullable<String> usernameContains) {
    this.usernameContains = usernameContains;
  }

  public void setUsernameContains(String usernameContains) {
    this.usernameContains = JsonNullable.<String>of(usernameContains);
  }


  public MigrateTransmitterWhereInput usernameEndsWith(String usernameEndsWith) {
    this.usernameEndsWith = JsonNullable.<String>of(usernameEndsWith);
    return this;
  }

   /**
   * Get usernameEndsWith
   * @return usernameEndsWith
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getUsernameEndsWith() {
        return usernameEndsWith.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_USERNAME_ENDS_WITH)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getUsernameEndsWith_JsonNullable() {
    return usernameEndsWith;
  }
  
  @JsonProperty(JSON_PROPERTY_USERNAME_ENDS_WITH)
  public void setUsernameEndsWith_JsonNullable(JsonNullable<String> usernameEndsWith) {
    this.usernameEndsWith = usernameEndsWith;
  }

  public void setUsernameEndsWith(String usernameEndsWith) {
    this.usernameEndsWith = JsonNullable.<String>of(usernameEndsWith);
  }


  public MigrateTransmitterWhereInput usernameGt(String usernameGt) {
    this.usernameGt = JsonNullable.<String>of(usernameGt);
    return this;
  }

   /**
   * Get usernameGt
   * @return usernameGt
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getUsernameGt() {
        return usernameGt.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_USERNAME_GT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getUsernameGt_JsonNullable() {
    return usernameGt;
  }
  
  @JsonProperty(JSON_PROPERTY_USERNAME_GT)
  public void setUsernameGt_JsonNullable(JsonNullable<String> usernameGt) {
    this.usernameGt = usernameGt;
  }

  public void setUsernameGt(String usernameGt) {
    this.usernameGt = JsonNullable.<String>of(usernameGt);
  }


  public MigrateTransmitterWhereInput usernameGte(String usernameGte) {
    this.usernameGte = JsonNullable.<String>of(usernameGte);
    return this;
  }

   /**
   * Get usernameGte
   * @return usernameGte
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getUsernameGte() {
        return usernameGte.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_USERNAME_GTE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getUsernameGte_JsonNullable() {
    return usernameGte;
  }
  
  @JsonProperty(JSON_PROPERTY_USERNAME_GTE)
  public void setUsernameGte_JsonNullable(JsonNullable<String> usernameGte) {
    this.usernameGte = usernameGte;
  }

  public void setUsernameGte(String usernameGte) {
    this.usernameGte = JsonNullable.<String>of(usernameGte);
  }


  public MigrateTransmitterWhereInput usernameIn(List<String> usernameIn) {
    this.usernameIn = JsonNullable.<List<String>>of(usernameIn);
    return this;
  }

  public MigrateTransmitterWhereInput addUsernameInItem(String usernameInItem) {
    if (this.usernameIn == null || !this.usernameIn.isPresent()) {
      this.usernameIn = JsonNullable.<List<String>>of(new ArrayList<>());
    }
    try {
      this.usernameIn.get().add(usernameInItem);
    } catch (java.util.NoSuchElementException e) {
      // this can never happen, as we make sure above that the value is present
    }
    return this;
  }

   /**
   * Get usernameIn
   * @return usernameIn
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public List<String> getUsernameIn() {
        return usernameIn.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_USERNAME_IN)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<List<String>> getUsernameIn_JsonNullable() {
    return usernameIn;
  }
  
  @JsonProperty(JSON_PROPERTY_USERNAME_IN)
  public void setUsernameIn_JsonNullable(JsonNullable<List<String>> usernameIn) {
    this.usernameIn = usernameIn;
  }

  public void setUsernameIn(List<String> usernameIn) {
    this.usernameIn = JsonNullable.<List<String>>of(usernameIn);
  }


  public MigrateTransmitterWhereInput usernameLt(String usernameLt) {
    this.usernameLt = JsonNullable.<String>of(usernameLt);
    return this;
  }

   /**
   * Get usernameLt
   * @return usernameLt
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getUsernameLt() {
        return usernameLt.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_USERNAME_LT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getUsernameLt_JsonNullable() {
    return usernameLt;
  }
  
  @JsonProperty(JSON_PROPERTY_USERNAME_LT)
  public void setUsernameLt_JsonNullable(JsonNullable<String> usernameLt) {
    this.usernameLt = usernameLt;
  }

  public void setUsernameLt(String usernameLt) {
    this.usernameLt = JsonNullable.<String>of(usernameLt);
  }


  public MigrateTransmitterWhereInput usernameLte(String usernameLte) {
    this.usernameLte = JsonNullable.<String>of(usernameLte);
    return this;
  }

   /**
   * Get usernameLte
   * @return usernameLte
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getUsernameLte() {
        return usernameLte.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_USERNAME_LTE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getUsernameLte_JsonNullable() {
    return usernameLte;
  }
  
  @JsonProperty(JSON_PROPERTY_USERNAME_LTE)
  public void setUsernameLte_JsonNullable(JsonNullable<String> usernameLte) {
    this.usernameLte = usernameLte;
  }

  public void setUsernameLte(String usernameLte) {
    this.usernameLte = JsonNullable.<String>of(usernameLte);
  }


  public MigrateTransmitterWhereInput usernameNot(String usernameNot) {
    this.usernameNot = JsonNullable.<String>of(usernameNot);
    return this;
  }

   /**
   * Get usernameNot
   * @return usernameNot
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getUsernameNot() {
        return usernameNot.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_USERNAME_NOT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getUsernameNot_JsonNullable() {
    return usernameNot;
  }
  
  @JsonProperty(JSON_PROPERTY_USERNAME_NOT)
  public void setUsernameNot_JsonNullable(JsonNullable<String> usernameNot) {
    this.usernameNot = usernameNot;
  }

  public void setUsernameNot(String usernameNot) {
    this.usernameNot = JsonNullable.<String>of(usernameNot);
  }


  public MigrateTransmitterWhereInput usernameNotContains(String usernameNotContains) {
    this.usernameNotContains = JsonNullable.<String>of(usernameNotContains);
    return this;
  }

   /**
   * Get usernameNotContains
   * @return usernameNotContains
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getUsernameNotContains() {
        return usernameNotContains.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_USERNAME_NOT_CONTAINS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getUsernameNotContains_JsonNullable() {
    return usernameNotContains;
  }
  
  @JsonProperty(JSON_PROPERTY_USERNAME_NOT_CONTAINS)
  public void setUsernameNotContains_JsonNullable(JsonNullable<String> usernameNotContains) {
    this.usernameNotContains = usernameNotContains;
  }

  public void setUsernameNotContains(String usernameNotContains) {
    this.usernameNotContains = JsonNullable.<String>of(usernameNotContains);
  }


  public MigrateTransmitterWhereInput usernameNotEndsWith(String usernameNotEndsWith) {
    this.usernameNotEndsWith = JsonNullable.<String>of(usernameNotEndsWith);
    return this;
  }

   /**
   * Get usernameNotEndsWith
   * @return usernameNotEndsWith
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getUsernameNotEndsWith() {
        return usernameNotEndsWith.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_USERNAME_NOT_ENDS_WITH)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getUsernameNotEndsWith_JsonNullable() {
    return usernameNotEndsWith;
  }
  
  @JsonProperty(JSON_PROPERTY_USERNAME_NOT_ENDS_WITH)
  public void setUsernameNotEndsWith_JsonNullable(JsonNullable<String> usernameNotEndsWith) {
    this.usernameNotEndsWith = usernameNotEndsWith;
  }

  public void setUsernameNotEndsWith(String usernameNotEndsWith) {
    this.usernameNotEndsWith = JsonNullable.<String>of(usernameNotEndsWith);
  }


  public MigrateTransmitterWhereInput usernameNotIn(List<String> usernameNotIn) {
    this.usernameNotIn = JsonNullable.<List<String>>of(usernameNotIn);
    return this;
  }

  public MigrateTransmitterWhereInput addUsernameNotInItem(String usernameNotInItem) {
    if (this.usernameNotIn == null || !this.usernameNotIn.isPresent()) {
      this.usernameNotIn = JsonNullable.<List<String>>of(new ArrayList<>());
    }
    try {
      this.usernameNotIn.get().add(usernameNotInItem);
    } catch (java.util.NoSuchElementException e) {
      // this can never happen, as we make sure above that the value is present
    }
    return this;
  }

   /**
   * Get usernameNotIn
   * @return usernameNotIn
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public List<String> getUsernameNotIn() {
        return usernameNotIn.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_USERNAME_NOT_IN)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<List<String>> getUsernameNotIn_JsonNullable() {
    return usernameNotIn;
  }
  
  @JsonProperty(JSON_PROPERTY_USERNAME_NOT_IN)
  public void setUsernameNotIn_JsonNullable(JsonNullable<List<String>> usernameNotIn) {
    this.usernameNotIn = usernameNotIn;
  }

  public void setUsernameNotIn(List<String> usernameNotIn) {
    this.usernameNotIn = JsonNullable.<List<String>>of(usernameNotIn);
  }


  public MigrateTransmitterWhereInput usernameNotStartsWith(String usernameNotStartsWith) {
    this.usernameNotStartsWith = JsonNullable.<String>of(usernameNotStartsWith);
    return this;
  }

   /**
   * Get usernameNotStartsWith
   * @return usernameNotStartsWith
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getUsernameNotStartsWith() {
        return usernameNotStartsWith.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_USERNAME_NOT_STARTS_WITH)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getUsernameNotStartsWith_JsonNullable() {
    return usernameNotStartsWith;
  }
  
  @JsonProperty(JSON_PROPERTY_USERNAME_NOT_STARTS_WITH)
  public void setUsernameNotStartsWith_JsonNullable(JsonNullable<String> usernameNotStartsWith) {
    this.usernameNotStartsWith = usernameNotStartsWith;
  }

  public void setUsernameNotStartsWith(String usernameNotStartsWith) {
    this.usernameNotStartsWith = JsonNullable.<String>of(usernameNotStartsWith);
  }


  public MigrateTransmitterWhereInput usernameStartsWith(String usernameStartsWith) {
    this.usernameStartsWith = JsonNullable.<String>of(usernameStartsWith);
    return this;
  }

   /**
   * Get usernameStartsWith
   * @return usernameStartsWith
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getUsernameStartsWith() {
        return usernameStartsWith.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_USERNAME_STARTS_WITH)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getUsernameStartsWith_JsonNullable() {
    return usernameStartsWith;
  }
  
  @JsonProperty(JSON_PROPERTY_USERNAME_STARTS_WITH)
  public void setUsernameStartsWith_JsonNullable(JsonNullable<String> usernameStartsWith) {
    this.usernameStartsWith = usernameStartsWith;
  }

  public void setUsernameStartsWith(String usernameStartsWith) {
    this.usernameStartsWith = JsonNullable.<String>of(usernameStartsWith);
  }


  /**
   * Return true if this MigrateTransmitterWhereInput object is equal to o.
   */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    MigrateTransmitterWhereInput migrateTransmitterWhereInput = (MigrateTransmitterWhereInput) o;
    return equalsNullable(this.AND, migrateTransmitterWhereInput.AND) &&
        equalsNullable(this.createdAt, migrateTransmitterWhereInput.createdAt) &&
        equalsNullable(this.createdAtGt, migrateTransmitterWhereInput.createdAtGt) &&
        equalsNullable(this.createdAtGte, migrateTransmitterWhereInput.createdAtGte) &&
        equalsNullable(this.createdAtIn, migrateTransmitterWhereInput.createdAtIn) &&
        equalsNullable(this.createdAtLt, migrateTransmitterWhereInput.createdAtLt) &&
        equalsNullable(this.createdAtLte, migrateTransmitterWhereInput.createdAtLte) &&
        equalsNullable(this.createdAtNot, migrateTransmitterWhereInput.createdAtNot) &&
        equalsNullable(this.createdAtNotIn, migrateTransmitterWhereInput.createdAtNotIn) &&
        equalsNullable(this.entityAsyncStatus, migrateTransmitterWhereInput.entityAsyncStatus) &&
        equalsNullable(this.entityAsyncStatusIn, migrateTransmitterWhereInput.entityAsyncStatusIn) &&
        equalsNullable(this.entityAsyncStatusNot, migrateTransmitterWhereInput.entityAsyncStatusNot) &&
        equalsNullable(this.entityAsyncStatusNotIn, migrateTransmitterWhereInput.entityAsyncStatusNotIn) &&
        equalsNullable(this.id, migrateTransmitterWhereInput.id) &&
        equalsNullable(this.idContains, migrateTransmitterWhereInput.idContains) &&
        equalsNullable(this.idEndsWith, migrateTransmitterWhereInput.idEndsWith) &&
        equalsNullable(this.idGt, migrateTransmitterWhereInput.idGt) &&
        equalsNullable(this.idGte, migrateTransmitterWhereInput.idGte) &&
        equalsNullable(this.idIn, migrateTransmitterWhereInput.idIn) &&
        equalsNullable(this.idLt, migrateTransmitterWhereInput.idLt) &&
        equalsNullable(this.idLte, migrateTransmitterWhereInput.idLte) &&
        equalsNullable(this.idNot, migrateTransmitterWhereInput.idNot) &&
        equalsNullable(this.idNotContains, migrateTransmitterWhereInput.idNotContains) &&
        equalsNullable(this.idNotEndsWith, migrateTransmitterWhereInput.idNotEndsWith) &&
        equalsNullable(this.idNotIn, migrateTransmitterWhereInput.idNotIn) &&
        equalsNullable(this.idNotStartsWith, migrateTransmitterWhereInput.idNotStartsWith) &&
        equalsNullable(this.idStartsWith, migrateTransmitterWhereInput.idStartsWith) &&
        equalsNullable(this.ip, migrateTransmitterWhereInput.ip) &&
        equalsNullable(this.ipContains, migrateTransmitterWhereInput.ipContains) &&
        equalsNullable(this.ipEndsWith, migrateTransmitterWhereInput.ipEndsWith) &&
        equalsNullable(this.ipGt, migrateTransmitterWhereInput.ipGt) &&
        equalsNullable(this.ipGte, migrateTransmitterWhereInput.ipGte) &&
        equalsNullable(this.ipIn, migrateTransmitterWhereInput.ipIn) &&
        equalsNullable(this.ipLt, migrateTransmitterWhereInput.ipLt) &&
        equalsNullable(this.ipLte, migrateTransmitterWhereInput.ipLte) &&
        equalsNullable(this.ipNot, migrateTransmitterWhereInput.ipNot) &&
        equalsNullable(this.ipNotContains, migrateTransmitterWhereInput.ipNotContains) &&
        equalsNullable(this.ipNotEndsWith, migrateTransmitterWhereInput.ipNotEndsWith) &&
        equalsNullable(this.ipNotIn, migrateTransmitterWhereInput.ipNotIn) &&
        equalsNullable(this.ipNotStartsWith, migrateTransmitterWhereInput.ipNotStartsWith) &&
        equalsNullable(this.ipStartsWith, migrateTransmitterWhereInput.ipStartsWith) &&
        equalsNullable(this.name, migrateTransmitterWhereInput.name) &&
        equalsNullable(this.nameContains, migrateTransmitterWhereInput.nameContains) &&
        equalsNullable(this.nameEndsWith, migrateTransmitterWhereInput.nameEndsWith) &&
        equalsNullable(this.nameGt, migrateTransmitterWhereInput.nameGt) &&
        equalsNullable(this.nameGte, migrateTransmitterWhereInput.nameGte) &&
        equalsNullable(this.nameIn, migrateTransmitterWhereInput.nameIn) &&
        equalsNullable(this.nameLt, migrateTransmitterWhereInput.nameLt) &&
        equalsNullable(this.nameLte, migrateTransmitterWhereInput.nameLte) &&
        equalsNullable(this.nameNot, migrateTransmitterWhereInput.nameNot) &&
        equalsNullable(this.nameNotContains, migrateTransmitterWhereInput.nameNotContains) &&
        equalsNullable(this.nameNotEndsWith, migrateTransmitterWhereInput.nameNotEndsWith) &&
        equalsNullable(this.nameNotIn, migrateTransmitterWhereInput.nameNotIn) &&
        equalsNullable(this.nameNotStartsWith, migrateTransmitterWhereInput.nameNotStartsWith) &&
        equalsNullable(this.nameStartsWith, migrateTransmitterWhereInput.nameStartsWith) &&
        equalsNullable(this.NOT, migrateTransmitterWhereInput.NOT) &&
        equalsNullable(this.OR, migrateTransmitterWhereInput.OR) &&
        equalsNullable(this.password, migrateTransmitterWhereInput.password) &&
        equalsNullable(this.passwordContains, migrateTransmitterWhereInput.passwordContains) &&
        equalsNullable(this.passwordEndsWith, migrateTransmitterWhereInput.passwordEndsWith) &&
        equalsNullable(this.passwordGt, migrateTransmitterWhereInput.passwordGt) &&
        equalsNullable(this.passwordGte, migrateTransmitterWhereInput.passwordGte) &&
        equalsNullable(this.passwordIn, migrateTransmitterWhereInput.passwordIn) &&
        equalsNullable(this.passwordLt, migrateTransmitterWhereInput.passwordLt) &&
        equalsNullable(this.passwordLte, migrateTransmitterWhereInput.passwordLte) &&
        equalsNullable(this.passwordNot, migrateTransmitterWhereInput.passwordNot) &&
        equalsNullable(this.passwordNotContains, migrateTransmitterWhereInput.passwordNotContains) &&
        equalsNullable(this.passwordNotEndsWith, migrateTransmitterWhereInput.passwordNotEndsWith) &&
        equalsNullable(this.passwordNotIn, migrateTransmitterWhereInput.passwordNotIn) &&
        equalsNullable(this.passwordNotStartsWith, migrateTransmitterWhereInput.passwordNotStartsWith) &&
        equalsNullable(this.passwordStartsWith, migrateTransmitterWhereInput.passwordStartsWith) &&
        equalsNullable(this.username, migrateTransmitterWhereInput.username) &&
        equalsNullable(this.usernameContains, migrateTransmitterWhereInput.usernameContains) &&
        equalsNullable(this.usernameEndsWith, migrateTransmitterWhereInput.usernameEndsWith) &&
        equalsNullable(this.usernameGt, migrateTransmitterWhereInput.usernameGt) &&
        equalsNullable(this.usernameGte, migrateTransmitterWhereInput.usernameGte) &&
        equalsNullable(this.usernameIn, migrateTransmitterWhereInput.usernameIn) &&
        equalsNullable(this.usernameLt, migrateTransmitterWhereInput.usernameLt) &&
        equalsNullable(this.usernameLte, migrateTransmitterWhereInput.usernameLte) &&
        equalsNullable(this.usernameNot, migrateTransmitterWhereInput.usernameNot) &&
        equalsNullable(this.usernameNotContains, migrateTransmitterWhereInput.usernameNotContains) &&
        equalsNullable(this.usernameNotEndsWith, migrateTransmitterWhereInput.usernameNotEndsWith) &&
        equalsNullable(this.usernameNotIn, migrateTransmitterWhereInput.usernameNotIn) &&
        equalsNullable(this.usernameNotStartsWith, migrateTransmitterWhereInput.usernameNotStartsWith) &&
        equalsNullable(this.usernameStartsWith, migrateTransmitterWhereInput.usernameStartsWith);
  }

  private static <T> boolean equalsNullable(JsonNullable<T> a, JsonNullable<T> b) {
    return a == b || (a != null && b != null && a.isPresent() && b.isPresent() && Objects.deepEquals(a.get(), b.get()));
  }

  @Override
  public int hashCode() {
    return Objects.hash(hashCodeNullable(AND), hashCodeNullable(createdAt), hashCodeNullable(createdAtGt), hashCodeNullable(createdAtGte), hashCodeNullable(createdAtIn), hashCodeNullable(createdAtLt), hashCodeNullable(createdAtLte), hashCodeNullable(createdAtNot), hashCodeNullable(createdAtNotIn), hashCodeNullable(entityAsyncStatus), hashCodeNullable(entityAsyncStatusIn), hashCodeNullable(entityAsyncStatusNot), hashCodeNullable(entityAsyncStatusNotIn), hashCodeNullable(id), hashCodeNullable(idContains), hashCodeNullable(idEndsWith), hashCodeNullable(idGt), hashCodeNullable(idGte), hashCodeNullable(idIn), hashCodeNullable(idLt), hashCodeNullable(idLte), hashCodeNullable(idNot), hashCodeNullable(idNotContains), hashCodeNullable(idNotEndsWith), hashCodeNullable(idNotIn), hashCodeNullable(idNotStartsWith), hashCodeNullable(idStartsWith), hashCodeNullable(ip), hashCodeNullable(ipContains), hashCodeNullable(ipEndsWith), hashCodeNullable(ipGt), hashCodeNullable(ipGte), hashCodeNullable(ipIn), hashCodeNullable(ipLt), hashCodeNullable(ipLte), hashCodeNullable(ipNot), hashCodeNullable(ipNotContains), hashCodeNullable(ipNotEndsWith), hashCodeNullable(ipNotIn), hashCodeNullable(ipNotStartsWith), hashCodeNullable(ipStartsWith), hashCodeNullable(name), hashCodeNullable(nameContains), hashCodeNullable(nameEndsWith), hashCodeNullable(nameGt), hashCodeNullable(nameGte), hashCodeNullable(nameIn), hashCodeNullable(nameLt), hashCodeNullable(nameLte), hashCodeNullable(nameNot), hashCodeNullable(nameNotContains), hashCodeNullable(nameNotEndsWith), hashCodeNullable(nameNotIn), hashCodeNullable(nameNotStartsWith), hashCodeNullable(nameStartsWith), hashCodeNullable(NOT), hashCodeNullable(OR), hashCodeNullable(password), hashCodeNullable(passwordContains), hashCodeNullable(passwordEndsWith), hashCodeNullable(passwordGt), hashCodeNullable(passwordGte), hashCodeNullable(passwordIn), hashCodeNullable(passwordLt), hashCodeNullable(passwordLte), hashCodeNullable(passwordNot), hashCodeNullable(passwordNotContains), hashCodeNullable(passwordNotEndsWith), hashCodeNullable(passwordNotIn), hashCodeNullable(passwordNotStartsWith), hashCodeNullable(passwordStartsWith), hashCodeNullable(username), hashCodeNullable(usernameContains), hashCodeNullable(usernameEndsWith), hashCodeNullable(usernameGt), hashCodeNullable(usernameGte), hashCodeNullable(usernameIn), hashCodeNullable(usernameLt), hashCodeNullable(usernameLte), hashCodeNullable(usernameNot), hashCodeNullable(usernameNotContains), hashCodeNullable(usernameNotEndsWith), hashCodeNullable(usernameNotIn), hashCodeNullable(usernameNotStartsWith), hashCodeNullable(usernameStartsWith));
  }

  private static <T> int hashCodeNullable(JsonNullable<T> a) {
    if (a == null) {
      return 1;
    }
    return a.isPresent() ? Arrays.deepHashCode(new Object[]{a.get()}) : 31;
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class MigrateTransmitterWhereInput {\n");
    sb.append("    AND: ").append(toIndentedString(AND)).append("\n");
    sb.append("    createdAt: ").append(toIndentedString(createdAt)).append("\n");
    sb.append("    createdAtGt: ").append(toIndentedString(createdAtGt)).append("\n");
    sb.append("    createdAtGte: ").append(toIndentedString(createdAtGte)).append("\n");
    sb.append("    createdAtIn: ").append(toIndentedString(createdAtIn)).append("\n");
    sb.append("    createdAtLt: ").append(toIndentedString(createdAtLt)).append("\n");
    sb.append("    createdAtLte: ").append(toIndentedString(createdAtLte)).append("\n");
    sb.append("    createdAtNot: ").append(toIndentedString(createdAtNot)).append("\n");
    sb.append("    createdAtNotIn: ").append(toIndentedString(createdAtNotIn)).append("\n");
    sb.append("    entityAsyncStatus: ").append(toIndentedString(entityAsyncStatus)).append("\n");
    sb.append("    entityAsyncStatusIn: ").append(toIndentedString(entityAsyncStatusIn)).append("\n");
    sb.append("    entityAsyncStatusNot: ").append(toIndentedString(entityAsyncStatusNot)).append("\n");
    sb.append("    entityAsyncStatusNotIn: ").append(toIndentedString(entityAsyncStatusNotIn)).append("\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    idContains: ").append(toIndentedString(idContains)).append("\n");
    sb.append("    idEndsWith: ").append(toIndentedString(idEndsWith)).append("\n");
    sb.append("    idGt: ").append(toIndentedString(idGt)).append("\n");
    sb.append("    idGte: ").append(toIndentedString(idGte)).append("\n");
    sb.append("    idIn: ").append(toIndentedString(idIn)).append("\n");
    sb.append("    idLt: ").append(toIndentedString(idLt)).append("\n");
    sb.append("    idLte: ").append(toIndentedString(idLte)).append("\n");
    sb.append("    idNot: ").append(toIndentedString(idNot)).append("\n");
    sb.append("    idNotContains: ").append(toIndentedString(idNotContains)).append("\n");
    sb.append("    idNotEndsWith: ").append(toIndentedString(idNotEndsWith)).append("\n");
    sb.append("    idNotIn: ").append(toIndentedString(idNotIn)).append("\n");
    sb.append("    idNotStartsWith: ").append(toIndentedString(idNotStartsWith)).append("\n");
    sb.append("    idStartsWith: ").append(toIndentedString(idStartsWith)).append("\n");
    sb.append("    ip: ").append(toIndentedString(ip)).append("\n");
    sb.append("    ipContains: ").append(toIndentedString(ipContains)).append("\n");
    sb.append("    ipEndsWith: ").append(toIndentedString(ipEndsWith)).append("\n");
    sb.append("    ipGt: ").append(toIndentedString(ipGt)).append("\n");
    sb.append("    ipGte: ").append(toIndentedString(ipGte)).append("\n");
    sb.append("    ipIn: ").append(toIndentedString(ipIn)).append("\n");
    sb.append("    ipLt: ").append(toIndentedString(ipLt)).append("\n");
    sb.append("    ipLte: ").append(toIndentedString(ipLte)).append("\n");
    sb.append("    ipNot: ").append(toIndentedString(ipNot)).append("\n");
    sb.append("    ipNotContains: ").append(toIndentedString(ipNotContains)).append("\n");
    sb.append("    ipNotEndsWith: ").append(toIndentedString(ipNotEndsWith)).append("\n");
    sb.append("    ipNotIn: ").append(toIndentedString(ipNotIn)).append("\n");
    sb.append("    ipNotStartsWith: ").append(toIndentedString(ipNotStartsWith)).append("\n");
    sb.append("    ipStartsWith: ").append(toIndentedString(ipStartsWith)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    nameContains: ").append(toIndentedString(nameContains)).append("\n");
    sb.append("    nameEndsWith: ").append(toIndentedString(nameEndsWith)).append("\n");
    sb.append("    nameGt: ").append(toIndentedString(nameGt)).append("\n");
    sb.append("    nameGte: ").append(toIndentedString(nameGte)).append("\n");
    sb.append("    nameIn: ").append(toIndentedString(nameIn)).append("\n");
    sb.append("    nameLt: ").append(toIndentedString(nameLt)).append("\n");
    sb.append("    nameLte: ").append(toIndentedString(nameLte)).append("\n");
    sb.append("    nameNot: ").append(toIndentedString(nameNot)).append("\n");
    sb.append("    nameNotContains: ").append(toIndentedString(nameNotContains)).append("\n");
    sb.append("    nameNotEndsWith: ").append(toIndentedString(nameNotEndsWith)).append("\n");
    sb.append("    nameNotIn: ").append(toIndentedString(nameNotIn)).append("\n");
    sb.append("    nameNotStartsWith: ").append(toIndentedString(nameNotStartsWith)).append("\n");
    sb.append("    nameStartsWith: ").append(toIndentedString(nameStartsWith)).append("\n");
    sb.append("    NOT: ").append(toIndentedString(NOT)).append("\n");
    sb.append("    OR: ").append(toIndentedString(OR)).append("\n");
    sb.append("    password: ").append(toIndentedString(password)).append("\n");
    sb.append("    passwordContains: ").append(toIndentedString(passwordContains)).append("\n");
    sb.append("    passwordEndsWith: ").append(toIndentedString(passwordEndsWith)).append("\n");
    sb.append("    passwordGt: ").append(toIndentedString(passwordGt)).append("\n");
    sb.append("    passwordGte: ").append(toIndentedString(passwordGte)).append("\n");
    sb.append("    passwordIn: ").append(toIndentedString(passwordIn)).append("\n");
    sb.append("    passwordLt: ").append(toIndentedString(passwordLt)).append("\n");
    sb.append("    passwordLte: ").append(toIndentedString(passwordLte)).append("\n");
    sb.append("    passwordNot: ").append(toIndentedString(passwordNot)).append("\n");
    sb.append("    passwordNotContains: ").append(toIndentedString(passwordNotContains)).append("\n");
    sb.append("    passwordNotEndsWith: ").append(toIndentedString(passwordNotEndsWith)).append("\n");
    sb.append("    passwordNotIn: ").append(toIndentedString(passwordNotIn)).append("\n");
    sb.append("    passwordNotStartsWith: ").append(toIndentedString(passwordNotStartsWith)).append("\n");
    sb.append("    passwordStartsWith: ").append(toIndentedString(passwordStartsWith)).append("\n");
    sb.append("    username: ").append(toIndentedString(username)).append("\n");
    sb.append("    usernameContains: ").append(toIndentedString(usernameContains)).append("\n");
    sb.append("    usernameEndsWith: ").append(toIndentedString(usernameEndsWith)).append("\n");
    sb.append("    usernameGt: ").append(toIndentedString(usernameGt)).append("\n");
    sb.append("    usernameGte: ").append(toIndentedString(usernameGte)).append("\n");
    sb.append("    usernameIn: ").append(toIndentedString(usernameIn)).append("\n");
    sb.append("    usernameLt: ").append(toIndentedString(usernameLt)).append("\n");
    sb.append("    usernameLte: ").append(toIndentedString(usernameLte)).append("\n");
    sb.append("    usernameNot: ").append(toIndentedString(usernameNot)).append("\n");
    sb.append("    usernameNotContains: ").append(toIndentedString(usernameNotContains)).append("\n");
    sb.append("    usernameNotEndsWith: ").append(toIndentedString(usernameNotEndsWith)).append("\n");
    sb.append("    usernameNotIn: ").append(toIndentedString(usernameNotIn)).append("\n");
    sb.append("    usernameNotStartsWith: ").append(toIndentedString(usernameNotStartsWith)).append("\n");
    sb.append("    usernameStartsWith: ").append(toIndentedString(usernameStartsWith)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

