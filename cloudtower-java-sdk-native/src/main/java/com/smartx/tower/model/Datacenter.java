/*
 * Tower SDK API
 * cloudtower operation API and SDK
 *
 * The version of the OpenAPI document: 1.7.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.smartx.tower.model;

import java.util.Objects;
import java.util.Arrays;
import java.util.Map;
import java.util.HashMap;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import com.smartx.tower.model.AlertRuleCluster;
import com.smartx.tower.model.BrickTopoPowers;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.util.ArrayList;
import java.util.List;
import org.openapitools.jackson.nullable.JsonNullable;
import com.fasterxml.jackson.annotation.JsonIgnore;
import org.openapitools.jackson.nullable.JsonNullable;
import java.util.NoSuchElementException;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;


/**
 * Datacenter
 */
@JsonPropertyOrder({
  Datacenter.JSON_PROPERTY_CLUSTER_NUM,
  Datacenter.JSON_PROPERTY_CLUSTERS,
  Datacenter.JSON_PROPERTY_FAILURE_DATA_SPACE,
  Datacenter.JSON_PROPERTY_HOST_NUM,
  Datacenter.JSON_PROPERTY_ID,
  Datacenter.JSON_PROPERTY_LABELS,
  Datacenter.JSON_PROPERTY_NAME,
  Datacenter.JSON_PROPERTY_ORGANIZATION,
  Datacenter.JSON_PROPERTY_TOTAL_CPU_HZ,
  Datacenter.JSON_PROPERTY_TOTAL_DATA_CAPACITY,
  Datacenter.JSON_PROPERTY_TOTAL_MEMORY_BYTES,
  Datacenter.JSON_PROPERTY_USED_CPU_HZ,
  Datacenter.JSON_PROPERTY_USED_DATA_SPACE,
  Datacenter.JSON_PROPERTY_USED_MEMORY_BYTES,
  Datacenter.JSON_PROPERTY_VM_NUM
})
@javax.annotation.processing.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2021-10-27T15:59:14.939791800+08:00[Asia/Shanghai]")
public class Datacenter {
  public static final String JSON_PROPERTY_CLUSTER_NUM = "cluster_num";
  private JsonNullable<Double> clusterNum = JsonNullable.<Double>undefined();

  public static final String JSON_PROPERTY_CLUSTERS = "clusters";
  private JsonNullable<List<AlertRuleCluster>> clusters = JsonNullable.<List<AlertRuleCluster>>undefined();

  public static final String JSON_PROPERTY_FAILURE_DATA_SPACE = "failure_data_space";
  private JsonNullable<Double> failureDataSpace = JsonNullable.<Double>undefined();

  public static final String JSON_PROPERTY_HOST_NUM = "host_num";
  private JsonNullable<Double> hostNum = JsonNullable.<Double>undefined();

  public static final String JSON_PROPERTY_ID = "id";
  private String id;

  public static final String JSON_PROPERTY_LABELS = "labels";
  private JsonNullable<List<BrickTopoPowers>> labels = JsonNullable.<List<BrickTopoPowers>>undefined();

  public static final String JSON_PROPERTY_NAME = "name";
  private String name;

  public static final String JSON_PROPERTY_ORGANIZATION = "organization";
  private AlertRuleCluster organization;

  public static final String JSON_PROPERTY_TOTAL_CPU_HZ = "total_cpu_hz";
  private JsonNullable<Double> totalCpuHz = JsonNullable.<Double>undefined();

  public static final String JSON_PROPERTY_TOTAL_DATA_CAPACITY = "total_data_capacity";
  private JsonNullable<Double> totalDataCapacity = JsonNullable.<Double>undefined();

  public static final String JSON_PROPERTY_TOTAL_MEMORY_BYTES = "total_memory_bytes";
  private JsonNullable<Double> totalMemoryBytes = JsonNullable.<Double>undefined();

  public static final String JSON_PROPERTY_USED_CPU_HZ = "used_cpu_hz";
  private JsonNullable<Double> usedCpuHz = JsonNullable.<Double>undefined();

  public static final String JSON_PROPERTY_USED_DATA_SPACE = "used_data_space";
  private JsonNullable<Double> usedDataSpace = JsonNullable.<Double>undefined();

  public static final String JSON_PROPERTY_USED_MEMORY_BYTES = "used_memory_bytes";
  private JsonNullable<Double> usedMemoryBytes = JsonNullable.<Double>undefined();

  public static final String JSON_PROPERTY_VM_NUM = "vm_num";
  private JsonNullable<Double> vmNum = JsonNullable.<Double>undefined();


  public Datacenter clusterNum(Double clusterNum) {
    this.clusterNum = JsonNullable.<Double>of(clusterNum);
    return this;
  }

   /**
   * Get clusterNum
   * @return clusterNum
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public Double getClusterNum() {
        return clusterNum.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_CLUSTER_NUM)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<Double> getClusterNum_JsonNullable() {
    return clusterNum;
  }
  
  @JsonProperty(JSON_PROPERTY_CLUSTER_NUM)
  public void setClusterNum_JsonNullable(JsonNullable<Double> clusterNum) {
    this.clusterNum = clusterNum;
  }

  public void setClusterNum(Double clusterNum) {
    this.clusterNum = JsonNullable.<Double>of(clusterNum);
  }


  public Datacenter clusters(List<AlertRuleCluster> clusters) {
    this.clusters = JsonNullable.<List<AlertRuleCluster>>of(clusters);
    return this;
  }

  public Datacenter addClustersItem(AlertRuleCluster clustersItem) {
    if (this.clusters == null || !this.clusters.isPresent()) {
      this.clusters = JsonNullable.<List<AlertRuleCluster>>of(new ArrayList<>());
    }
    try {
      this.clusters.get().add(clustersItem);
    } catch (java.util.NoSuchElementException e) {
      // this can never happen, as we make sure above that the value is present
    }
    return this;
  }

   /**
   * Get clusters
   * @return clusters
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public List<AlertRuleCluster> getClusters() {
        return clusters.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_CLUSTERS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<List<AlertRuleCluster>> getClusters_JsonNullable() {
    return clusters;
  }
  
  @JsonProperty(JSON_PROPERTY_CLUSTERS)
  public void setClusters_JsonNullable(JsonNullable<List<AlertRuleCluster>> clusters) {
    this.clusters = clusters;
  }

  public void setClusters(List<AlertRuleCluster> clusters) {
    this.clusters = JsonNullable.<List<AlertRuleCluster>>of(clusters);
  }


  public Datacenter failureDataSpace(Double failureDataSpace) {
    this.failureDataSpace = JsonNullable.<Double>of(failureDataSpace);
    return this;
  }

   /**
   * Get failureDataSpace
   * @return failureDataSpace
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public Double getFailureDataSpace() {
        return failureDataSpace.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_FAILURE_DATA_SPACE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<Double> getFailureDataSpace_JsonNullable() {
    return failureDataSpace;
  }
  
  @JsonProperty(JSON_PROPERTY_FAILURE_DATA_SPACE)
  public void setFailureDataSpace_JsonNullable(JsonNullable<Double> failureDataSpace) {
    this.failureDataSpace = failureDataSpace;
  }

  public void setFailureDataSpace(Double failureDataSpace) {
    this.failureDataSpace = JsonNullable.<Double>of(failureDataSpace);
  }


  public Datacenter hostNum(Double hostNum) {
    this.hostNum = JsonNullable.<Double>of(hostNum);
    return this;
  }

   /**
   * Get hostNum
   * @return hostNum
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public Double getHostNum() {
        return hostNum.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_HOST_NUM)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<Double> getHostNum_JsonNullable() {
    return hostNum;
  }
  
  @JsonProperty(JSON_PROPERTY_HOST_NUM)
  public void setHostNum_JsonNullable(JsonNullable<Double> hostNum) {
    this.hostNum = hostNum;
  }

  public void setHostNum(Double hostNum) {
    this.hostNum = JsonNullable.<Double>of(hostNum);
  }


  public Datacenter id(String id) {
    this.id = id;
    return this;
  }

   /**
   * Get id
   * @return id
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")
  @JsonProperty(JSON_PROPERTY_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getId() {
    return id;
  }


  @JsonProperty(JSON_PROPERTY_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setId(String id) {
    this.id = id;
  }


  public Datacenter labels(List<BrickTopoPowers> labels) {
    this.labels = JsonNullable.<List<BrickTopoPowers>>of(labels);
    return this;
  }

  public Datacenter addLabelsItem(BrickTopoPowers labelsItem) {
    if (this.labels == null || !this.labels.isPresent()) {
      this.labels = JsonNullable.<List<BrickTopoPowers>>of(new ArrayList<>());
    }
    try {
      this.labels.get().add(labelsItem);
    } catch (java.util.NoSuchElementException e) {
      // this can never happen, as we make sure above that the value is present
    }
    return this;
  }

   /**
   * Get labels
   * @return labels
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public List<BrickTopoPowers> getLabels() {
        return labels.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_LABELS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<List<BrickTopoPowers>> getLabels_JsonNullable() {
    return labels;
  }
  
  @JsonProperty(JSON_PROPERTY_LABELS)
  public void setLabels_JsonNullable(JsonNullable<List<BrickTopoPowers>> labels) {
    this.labels = labels;
  }

  public void setLabels(List<BrickTopoPowers> labels) {
    this.labels = JsonNullable.<List<BrickTopoPowers>>of(labels);
  }


  public Datacenter name(String name) {
    this.name = name;
    return this;
  }

   /**
   * Get name
   * @return name
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")
  @JsonProperty(JSON_PROPERTY_NAME)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getName() {
    return name;
  }


  @JsonProperty(JSON_PROPERTY_NAME)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setName(String name) {
    this.name = name;
  }


  public Datacenter organization(AlertRuleCluster organization) {
    this.organization = organization;
    return this;
  }

   /**
   * Get organization
   * @return organization
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")
  @JsonProperty(JSON_PROPERTY_ORGANIZATION)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public AlertRuleCluster getOrganization() {
    return organization;
  }


  @JsonProperty(JSON_PROPERTY_ORGANIZATION)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setOrganization(AlertRuleCluster organization) {
    this.organization = organization;
  }


  public Datacenter totalCpuHz(Double totalCpuHz) {
    this.totalCpuHz = JsonNullable.<Double>of(totalCpuHz);
    return this;
  }

   /**
   * Get totalCpuHz
   * @return totalCpuHz
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public Double getTotalCpuHz() {
        return totalCpuHz.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_TOTAL_CPU_HZ)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<Double> getTotalCpuHz_JsonNullable() {
    return totalCpuHz;
  }
  
  @JsonProperty(JSON_PROPERTY_TOTAL_CPU_HZ)
  public void setTotalCpuHz_JsonNullable(JsonNullable<Double> totalCpuHz) {
    this.totalCpuHz = totalCpuHz;
  }

  public void setTotalCpuHz(Double totalCpuHz) {
    this.totalCpuHz = JsonNullable.<Double>of(totalCpuHz);
  }


  public Datacenter totalDataCapacity(Double totalDataCapacity) {
    this.totalDataCapacity = JsonNullable.<Double>of(totalDataCapacity);
    return this;
  }

   /**
   * Get totalDataCapacity
   * @return totalDataCapacity
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public Double getTotalDataCapacity() {
        return totalDataCapacity.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_TOTAL_DATA_CAPACITY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<Double> getTotalDataCapacity_JsonNullable() {
    return totalDataCapacity;
  }
  
  @JsonProperty(JSON_PROPERTY_TOTAL_DATA_CAPACITY)
  public void setTotalDataCapacity_JsonNullable(JsonNullable<Double> totalDataCapacity) {
    this.totalDataCapacity = totalDataCapacity;
  }

  public void setTotalDataCapacity(Double totalDataCapacity) {
    this.totalDataCapacity = JsonNullable.<Double>of(totalDataCapacity);
  }


  public Datacenter totalMemoryBytes(Double totalMemoryBytes) {
    this.totalMemoryBytes = JsonNullable.<Double>of(totalMemoryBytes);
    return this;
  }

   /**
   * Get totalMemoryBytes
   * @return totalMemoryBytes
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public Double getTotalMemoryBytes() {
        return totalMemoryBytes.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_TOTAL_MEMORY_BYTES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<Double> getTotalMemoryBytes_JsonNullable() {
    return totalMemoryBytes;
  }
  
  @JsonProperty(JSON_PROPERTY_TOTAL_MEMORY_BYTES)
  public void setTotalMemoryBytes_JsonNullable(JsonNullable<Double> totalMemoryBytes) {
    this.totalMemoryBytes = totalMemoryBytes;
  }

  public void setTotalMemoryBytes(Double totalMemoryBytes) {
    this.totalMemoryBytes = JsonNullable.<Double>of(totalMemoryBytes);
  }


  public Datacenter usedCpuHz(Double usedCpuHz) {
    this.usedCpuHz = JsonNullable.<Double>of(usedCpuHz);
    return this;
  }

   /**
   * Get usedCpuHz
   * @return usedCpuHz
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public Double getUsedCpuHz() {
        return usedCpuHz.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_USED_CPU_HZ)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<Double> getUsedCpuHz_JsonNullable() {
    return usedCpuHz;
  }
  
  @JsonProperty(JSON_PROPERTY_USED_CPU_HZ)
  public void setUsedCpuHz_JsonNullable(JsonNullable<Double> usedCpuHz) {
    this.usedCpuHz = usedCpuHz;
  }

  public void setUsedCpuHz(Double usedCpuHz) {
    this.usedCpuHz = JsonNullable.<Double>of(usedCpuHz);
  }


  public Datacenter usedDataSpace(Double usedDataSpace) {
    this.usedDataSpace = JsonNullable.<Double>of(usedDataSpace);
    return this;
  }

   /**
   * Get usedDataSpace
   * @return usedDataSpace
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public Double getUsedDataSpace() {
        return usedDataSpace.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_USED_DATA_SPACE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<Double> getUsedDataSpace_JsonNullable() {
    return usedDataSpace;
  }
  
  @JsonProperty(JSON_PROPERTY_USED_DATA_SPACE)
  public void setUsedDataSpace_JsonNullable(JsonNullable<Double> usedDataSpace) {
    this.usedDataSpace = usedDataSpace;
  }

  public void setUsedDataSpace(Double usedDataSpace) {
    this.usedDataSpace = JsonNullable.<Double>of(usedDataSpace);
  }


  public Datacenter usedMemoryBytes(Double usedMemoryBytes) {
    this.usedMemoryBytes = JsonNullable.<Double>of(usedMemoryBytes);
    return this;
  }

   /**
   * Get usedMemoryBytes
   * @return usedMemoryBytes
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public Double getUsedMemoryBytes() {
        return usedMemoryBytes.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_USED_MEMORY_BYTES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<Double> getUsedMemoryBytes_JsonNullable() {
    return usedMemoryBytes;
  }
  
  @JsonProperty(JSON_PROPERTY_USED_MEMORY_BYTES)
  public void setUsedMemoryBytes_JsonNullable(JsonNullable<Double> usedMemoryBytes) {
    this.usedMemoryBytes = usedMemoryBytes;
  }

  public void setUsedMemoryBytes(Double usedMemoryBytes) {
    this.usedMemoryBytes = JsonNullable.<Double>of(usedMemoryBytes);
  }


  public Datacenter vmNum(Double vmNum) {
    this.vmNum = JsonNullable.<Double>of(vmNum);
    return this;
  }

   /**
   * Get vmNum
   * @return vmNum
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public Double getVmNum() {
        return vmNum.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_VM_NUM)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<Double> getVmNum_JsonNullable() {
    return vmNum;
  }
  
  @JsonProperty(JSON_PROPERTY_VM_NUM)
  public void setVmNum_JsonNullable(JsonNullable<Double> vmNum) {
    this.vmNum = vmNum;
  }

  public void setVmNum(Double vmNum) {
    this.vmNum = JsonNullable.<Double>of(vmNum);
  }


  /**
   * Return true if this Datacenter object is equal to o.
   */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Datacenter datacenter = (Datacenter) o;
    return equalsNullable(this.clusterNum, datacenter.clusterNum) &&
        equalsNullable(this.clusters, datacenter.clusters) &&
        equalsNullable(this.failureDataSpace, datacenter.failureDataSpace) &&
        equalsNullable(this.hostNum, datacenter.hostNum) &&
        Objects.equals(this.id, datacenter.id) &&
        equalsNullable(this.labels, datacenter.labels) &&
        Objects.equals(this.name, datacenter.name) &&
        Objects.equals(this.organization, datacenter.organization) &&
        equalsNullable(this.totalCpuHz, datacenter.totalCpuHz) &&
        equalsNullable(this.totalDataCapacity, datacenter.totalDataCapacity) &&
        equalsNullable(this.totalMemoryBytes, datacenter.totalMemoryBytes) &&
        equalsNullable(this.usedCpuHz, datacenter.usedCpuHz) &&
        equalsNullable(this.usedDataSpace, datacenter.usedDataSpace) &&
        equalsNullable(this.usedMemoryBytes, datacenter.usedMemoryBytes) &&
        equalsNullable(this.vmNum, datacenter.vmNum);
  }

  private static <T> boolean equalsNullable(JsonNullable<T> a, JsonNullable<T> b) {
    return a == b || (a != null && b != null && a.isPresent() && b.isPresent() && Objects.deepEquals(a.get(), b.get()));
  }

  @Override
  public int hashCode() {
    return Objects.hash(hashCodeNullable(clusterNum), hashCodeNullable(clusters), hashCodeNullable(failureDataSpace), hashCodeNullable(hostNum), id, hashCodeNullable(labels), name, organization, hashCodeNullable(totalCpuHz), hashCodeNullable(totalDataCapacity), hashCodeNullable(totalMemoryBytes), hashCodeNullable(usedCpuHz), hashCodeNullable(usedDataSpace), hashCodeNullable(usedMemoryBytes), hashCodeNullable(vmNum));
  }

  private static <T> int hashCodeNullable(JsonNullable<T> a) {
    if (a == null) {
      return 1;
    }
    return a.isPresent() ? Arrays.deepHashCode(new Object[]{a.get()}) : 31;
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Datacenter {\n");
    sb.append("    clusterNum: ").append(toIndentedString(clusterNum)).append("\n");
    sb.append("    clusters: ").append(toIndentedString(clusters)).append("\n");
    sb.append("    failureDataSpace: ").append(toIndentedString(failureDataSpace)).append("\n");
    sb.append("    hostNum: ").append(toIndentedString(hostNum)).append("\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    labels: ").append(toIndentedString(labels)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    organization: ").append(toIndentedString(organization)).append("\n");
    sb.append("    totalCpuHz: ").append(toIndentedString(totalCpuHz)).append("\n");
    sb.append("    totalDataCapacity: ").append(toIndentedString(totalDataCapacity)).append("\n");
    sb.append("    totalMemoryBytes: ").append(toIndentedString(totalMemoryBytes)).append("\n");
    sb.append("    usedCpuHz: ").append(toIndentedString(usedCpuHz)).append("\n");
    sb.append("    usedDataSpace: ").append(toIndentedString(usedDataSpace)).append("\n");
    sb.append("    usedMemoryBytes: ").append(toIndentedString(usedMemoryBytes)).append("\n");
    sb.append("    vmNum: ").append(toIndentedString(vmNum)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

