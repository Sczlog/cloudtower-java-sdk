/*
 * Tower SDK API
 * cloudtower operation API and SDK
 *
 * The version of the OpenAPI document: 1.7.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.smartx.tower.model;

import java.util.Objects;
import java.util.Arrays;
import java.util.Map;
import java.util.HashMap;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import com.smartx.tower.model.AlertDisk;
import com.smartx.tower.model.AlertRuleCluster;
import com.smartx.tower.model.BrickTopoPowers;
import com.smartx.tower.model.NetworkType;
import com.smartx.tower.model.NicDriverState;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.util.ArrayList;
import java.util.List;
import org.openapitools.jackson.nullable.JsonNullable;
import com.fasterxml.jackson.annotation.JsonIgnore;
import org.openapitools.jackson.nullable.JsonNullable;
import java.util.NoSuchElementException;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;


/**
 * Nic
 */
@JsonPropertyOrder({
  Nic.JSON_PROPERTY_DRIVER,
  Nic.JSON_PROPERTY_DRIVER_STATE,
  Nic.JSON_PROPERTY_GATEWAY_IP,
  Nic.JSON_PROPERTY_HOST,
  Nic.JSON_PROPERTY_IBDEV,
  Nic.JSON_PROPERTY_ID,
  Nic.JSON_PROPERTY_IP_ADDRESS,
  Nic.JSON_PROPERTY_IS_SRIOV,
  Nic.JSON_PROPERTY_LABELS,
  Nic.JSON_PROPERTY_LOCAL_ID,
  Nic.JSON_PROPERTY_MAC_ADDRESS,
  Nic.JSON_PROPERTY_MAX_VF_NUM,
  Nic.JSON_PROPERTY_MODEL,
  Nic.JSON_PROPERTY_MTU,
  Nic.JSON_PROPERTY_NAME,
  Nic.JSON_PROPERTY_NIC_UUID,
  Nic.JSON_PROPERTY_PHYSICAL,
  Nic.JSON_PROPERTY_RDMA_ENABLED,
  Nic.JSON_PROPERTY_RUNNING,
  Nic.JSON_PROPERTY_SPEED,
  Nic.JSON_PROPERTY_SUBNET_MASK,
  Nic.JSON_PROPERTY_TOTAL_VF_NUM,
  Nic.JSON_PROPERTY_TYPE,
  Nic.JSON_PROPERTY_UP,
  Nic.JSON_PROPERTY_USED_VF_NUM,
  Nic.JSON_PROPERTY_VDS
})
@javax.annotation.processing.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2021-10-27T15:59:14.939791800+08:00[Asia/Shanghai]")
public class Nic {
  public static final String JSON_PROPERTY_DRIVER = "driver";
  private JsonNullable<String> driver = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_DRIVER_STATE = "driver_state";
  private JsonNullable<NicDriverState> driverState = JsonNullable.<NicDriverState>undefined();

  public static final String JSON_PROPERTY_GATEWAY_IP = "gateway_ip";
  private JsonNullable<String> gatewayIp = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_HOST = "host";
  private AlertRuleCluster host;

  public static final String JSON_PROPERTY_IBDEV = "ibdev";
  private JsonNullable<String> ibdev = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_ID = "id";
  private String id;

  public static final String JSON_PROPERTY_IP_ADDRESS = "ip_address";
  private JsonNullable<String> ipAddress = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_IS_SRIOV = "is_sriov";
  private JsonNullable<Boolean> isSriov = JsonNullable.<Boolean>undefined();

  public static final String JSON_PROPERTY_LABELS = "labels";
  private JsonNullable<List<BrickTopoPowers>> labels = JsonNullable.<List<BrickTopoPowers>>undefined();

  public static final String JSON_PROPERTY_LOCAL_ID = "local_id";
  private String localId;

  public static final String JSON_PROPERTY_MAC_ADDRESS = "mac_address";
  private String macAddress;

  public static final String JSON_PROPERTY_MAX_VF_NUM = "max_vf_num";
  private JsonNullable<Double> maxVfNum = JsonNullable.<Double>undefined();

  public static final String JSON_PROPERTY_MODEL = "model";
  private JsonNullable<String> model = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_MTU = "mtu";
  private Double mtu;

  public static final String JSON_PROPERTY_NAME = "name";
  private String name;

  public static final String JSON_PROPERTY_NIC_UUID = "nic_uuid";
  private JsonNullable<String> nicUuid = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_PHYSICAL = "physical";
  private Boolean physical;

  public static final String JSON_PROPERTY_RDMA_ENABLED = "rdma_enabled";
  private JsonNullable<Boolean> rdmaEnabled = JsonNullable.<Boolean>undefined();

  public static final String JSON_PROPERTY_RUNNING = "running";
  private Boolean running;

  public static final String JSON_PROPERTY_SPEED = "speed";
  private JsonNullable<Double> speed = JsonNullable.<Double>undefined();

  public static final String JSON_PROPERTY_SUBNET_MASK = "subnet_mask";
  private JsonNullable<String> subnetMask = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_TOTAL_VF_NUM = "total_vf_num";
  private JsonNullable<Double> totalVfNum = JsonNullable.<Double>undefined();

  public static final String JSON_PROPERTY_TYPE = "type";
  private JsonNullable<NetworkType> type = JsonNullable.<NetworkType>undefined();

  public static final String JSON_PROPERTY_UP = "up";
  private Boolean up;

  public static final String JSON_PROPERTY_USED_VF_NUM = "used_vf_num";
  private JsonNullable<Double> usedVfNum = JsonNullable.<Double>undefined();

  public static final String JSON_PROPERTY_VDS = "vds";
  private JsonNullable<AlertDisk> vds = JsonNullable.<AlertDisk>undefined();


  public Nic driver(String driver) {
    this.driver = JsonNullable.<String>of(driver);
    return this;
  }

   /**
   * Get driver
   * @return driver
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getDriver() {
        return driver.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_DRIVER)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getDriver_JsonNullable() {
    return driver;
  }
  
  @JsonProperty(JSON_PROPERTY_DRIVER)
  public void setDriver_JsonNullable(JsonNullable<String> driver) {
    this.driver = driver;
  }

  public void setDriver(String driver) {
    this.driver = JsonNullable.<String>of(driver);
  }


  public Nic driverState(NicDriverState driverState) {
    this.driverState = JsonNullable.<NicDriverState>of(driverState);
    return this;
  }

   /**
   * Get driverState
   * @return driverState
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public NicDriverState getDriverState() {
        return driverState.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_DRIVER_STATE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<NicDriverState> getDriverState_JsonNullable() {
    return driverState;
  }
  
  @JsonProperty(JSON_PROPERTY_DRIVER_STATE)
  public void setDriverState_JsonNullable(JsonNullable<NicDriverState> driverState) {
    this.driverState = driverState;
  }

  public void setDriverState(NicDriverState driverState) {
    this.driverState = JsonNullable.<NicDriverState>of(driverState);
  }


  public Nic gatewayIp(String gatewayIp) {
    this.gatewayIp = JsonNullable.<String>of(gatewayIp);
    return this;
  }

   /**
   * Get gatewayIp
   * @return gatewayIp
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getGatewayIp() {
        return gatewayIp.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_GATEWAY_IP)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getGatewayIp_JsonNullable() {
    return gatewayIp;
  }
  
  @JsonProperty(JSON_PROPERTY_GATEWAY_IP)
  public void setGatewayIp_JsonNullable(JsonNullable<String> gatewayIp) {
    this.gatewayIp = gatewayIp;
  }

  public void setGatewayIp(String gatewayIp) {
    this.gatewayIp = JsonNullable.<String>of(gatewayIp);
  }


  public Nic host(AlertRuleCluster host) {
    this.host = host;
    return this;
  }

   /**
   * Get host
   * @return host
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")
  @JsonProperty(JSON_PROPERTY_HOST)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public AlertRuleCluster getHost() {
    return host;
  }


  @JsonProperty(JSON_PROPERTY_HOST)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setHost(AlertRuleCluster host) {
    this.host = host;
  }


  public Nic ibdev(String ibdev) {
    this.ibdev = JsonNullable.<String>of(ibdev);
    return this;
  }

   /**
   * Get ibdev
   * @return ibdev
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getIbdev() {
        return ibdev.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_IBDEV)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getIbdev_JsonNullable() {
    return ibdev;
  }
  
  @JsonProperty(JSON_PROPERTY_IBDEV)
  public void setIbdev_JsonNullable(JsonNullable<String> ibdev) {
    this.ibdev = ibdev;
  }

  public void setIbdev(String ibdev) {
    this.ibdev = JsonNullable.<String>of(ibdev);
  }


  public Nic id(String id) {
    this.id = id;
    return this;
  }

   /**
   * Get id
   * @return id
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")
  @JsonProperty(JSON_PROPERTY_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getId() {
    return id;
  }


  @JsonProperty(JSON_PROPERTY_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setId(String id) {
    this.id = id;
  }


  public Nic ipAddress(String ipAddress) {
    this.ipAddress = JsonNullable.<String>of(ipAddress);
    return this;
  }

   /**
   * Get ipAddress
   * @return ipAddress
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getIpAddress() {
        return ipAddress.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_IP_ADDRESS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getIpAddress_JsonNullable() {
    return ipAddress;
  }
  
  @JsonProperty(JSON_PROPERTY_IP_ADDRESS)
  public void setIpAddress_JsonNullable(JsonNullable<String> ipAddress) {
    this.ipAddress = ipAddress;
  }

  public void setIpAddress(String ipAddress) {
    this.ipAddress = JsonNullable.<String>of(ipAddress);
  }


  public Nic isSriov(Boolean isSriov) {
    this.isSriov = JsonNullable.<Boolean>of(isSriov);
    return this;
  }

   /**
   * Get isSriov
   * @return isSriov
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public Boolean getIsSriov() {
        return isSriov.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_IS_SRIOV)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<Boolean> getIsSriov_JsonNullable() {
    return isSriov;
  }
  
  @JsonProperty(JSON_PROPERTY_IS_SRIOV)
  public void setIsSriov_JsonNullable(JsonNullable<Boolean> isSriov) {
    this.isSriov = isSriov;
  }

  public void setIsSriov(Boolean isSriov) {
    this.isSriov = JsonNullable.<Boolean>of(isSriov);
  }


  public Nic labels(List<BrickTopoPowers> labels) {
    this.labels = JsonNullable.<List<BrickTopoPowers>>of(labels);
    return this;
  }

  public Nic addLabelsItem(BrickTopoPowers labelsItem) {
    if (this.labels == null || !this.labels.isPresent()) {
      this.labels = JsonNullable.<List<BrickTopoPowers>>of(new ArrayList<>());
    }
    try {
      this.labels.get().add(labelsItem);
    } catch (java.util.NoSuchElementException e) {
      // this can never happen, as we make sure above that the value is present
    }
    return this;
  }

   /**
   * Get labels
   * @return labels
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public List<BrickTopoPowers> getLabels() {
        return labels.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_LABELS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<List<BrickTopoPowers>> getLabels_JsonNullable() {
    return labels;
  }
  
  @JsonProperty(JSON_PROPERTY_LABELS)
  public void setLabels_JsonNullable(JsonNullable<List<BrickTopoPowers>> labels) {
    this.labels = labels;
  }

  public void setLabels(List<BrickTopoPowers> labels) {
    this.labels = JsonNullable.<List<BrickTopoPowers>>of(labels);
  }


  public Nic localId(String localId) {
    this.localId = localId;
    return this;
  }

   /**
   * Get localId
   * @return localId
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")
  @JsonProperty(JSON_PROPERTY_LOCAL_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getLocalId() {
    return localId;
  }


  @JsonProperty(JSON_PROPERTY_LOCAL_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setLocalId(String localId) {
    this.localId = localId;
  }


  public Nic macAddress(String macAddress) {
    this.macAddress = macAddress;
    return this;
  }

   /**
   * Get macAddress
   * @return macAddress
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")
  @JsonProperty(JSON_PROPERTY_MAC_ADDRESS)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getMacAddress() {
    return macAddress;
  }


  @JsonProperty(JSON_PROPERTY_MAC_ADDRESS)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setMacAddress(String macAddress) {
    this.macAddress = macAddress;
  }


  public Nic maxVfNum(Double maxVfNum) {
    this.maxVfNum = JsonNullable.<Double>of(maxVfNum);
    return this;
  }

   /**
   * Get maxVfNum
   * @return maxVfNum
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public Double getMaxVfNum() {
        return maxVfNum.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_MAX_VF_NUM)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<Double> getMaxVfNum_JsonNullable() {
    return maxVfNum;
  }
  
  @JsonProperty(JSON_PROPERTY_MAX_VF_NUM)
  public void setMaxVfNum_JsonNullable(JsonNullable<Double> maxVfNum) {
    this.maxVfNum = maxVfNum;
  }

  public void setMaxVfNum(Double maxVfNum) {
    this.maxVfNum = JsonNullable.<Double>of(maxVfNum);
  }


  public Nic model(String model) {
    this.model = JsonNullable.<String>of(model);
    return this;
  }

   /**
   * Get model
   * @return model
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getModel() {
        return model.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_MODEL)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getModel_JsonNullable() {
    return model;
  }
  
  @JsonProperty(JSON_PROPERTY_MODEL)
  public void setModel_JsonNullable(JsonNullable<String> model) {
    this.model = model;
  }

  public void setModel(String model) {
    this.model = JsonNullable.<String>of(model);
  }


  public Nic mtu(Double mtu) {
    this.mtu = mtu;
    return this;
  }

   /**
   * Get mtu
   * @return mtu
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")
  @JsonProperty(JSON_PROPERTY_MTU)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public Double getMtu() {
    return mtu;
  }


  @JsonProperty(JSON_PROPERTY_MTU)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setMtu(Double mtu) {
    this.mtu = mtu;
  }


  public Nic name(String name) {
    this.name = name;
    return this;
  }

   /**
   * Get name
   * @return name
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")
  @JsonProperty(JSON_PROPERTY_NAME)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getName() {
    return name;
  }


  @JsonProperty(JSON_PROPERTY_NAME)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setName(String name) {
    this.name = name;
  }


  public Nic nicUuid(String nicUuid) {
    this.nicUuid = JsonNullable.<String>of(nicUuid);
    return this;
  }

   /**
   * Get nicUuid
   * @return nicUuid
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getNicUuid() {
        return nicUuid.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_NIC_UUID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getNicUuid_JsonNullable() {
    return nicUuid;
  }
  
  @JsonProperty(JSON_PROPERTY_NIC_UUID)
  public void setNicUuid_JsonNullable(JsonNullable<String> nicUuid) {
    this.nicUuid = nicUuid;
  }

  public void setNicUuid(String nicUuid) {
    this.nicUuid = JsonNullable.<String>of(nicUuid);
  }


  public Nic physical(Boolean physical) {
    this.physical = physical;
    return this;
  }

   /**
   * Get physical
   * @return physical
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")
  @JsonProperty(JSON_PROPERTY_PHYSICAL)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public Boolean getPhysical() {
    return physical;
  }


  @JsonProperty(JSON_PROPERTY_PHYSICAL)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setPhysical(Boolean physical) {
    this.physical = physical;
  }


  public Nic rdmaEnabled(Boolean rdmaEnabled) {
    this.rdmaEnabled = JsonNullable.<Boolean>of(rdmaEnabled);
    return this;
  }

   /**
   * Get rdmaEnabled
   * @return rdmaEnabled
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public Boolean getRdmaEnabled() {
        return rdmaEnabled.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_RDMA_ENABLED)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<Boolean> getRdmaEnabled_JsonNullable() {
    return rdmaEnabled;
  }
  
  @JsonProperty(JSON_PROPERTY_RDMA_ENABLED)
  public void setRdmaEnabled_JsonNullable(JsonNullable<Boolean> rdmaEnabled) {
    this.rdmaEnabled = rdmaEnabled;
  }

  public void setRdmaEnabled(Boolean rdmaEnabled) {
    this.rdmaEnabled = JsonNullable.<Boolean>of(rdmaEnabled);
  }


  public Nic running(Boolean running) {
    this.running = running;
    return this;
  }

   /**
   * Get running
   * @return running
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")
  @JsonProperty(JSON_PROPERTY_RUNNING)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public Boolean getRunning() {
    return running;
  }


  @JsonProperty(JSON_PROPERTY_RUNNING)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setRunning(Boolean running) {
    this.running = running;
  }


  public Nic speed(Double speed) {
    this.speed = JsonNullable.<Double>of(speed);
    return this;
  }

   /**
   * Get speed
   * @return speed
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public Double getSpeed() {
        return speed.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_SPEED)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<Double> getSpeed_JsonNullable() {
    return speed;
  }
  
  @JsonProperty(JSON_PROPERTY_SPEED)
  public void setSpeed_JsonNullable(JsonNullable<Double> speed) {
    this.speed = speed;
  }

  public void setSpeed(Double speed) {
    this.speed = JsonNullable.<Double>of(speed);
  }


  public Nic subnetMask(String subnetMask) {
    this.subnetMask = JsonNullable.<String>of(subnetMask);
    return this;
  }

   /**
   * Get subnetMask
   * @return subnetMask
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getSubnetMask() {
        return subnetMask.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_SUBNET_MASK)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getSubnetMask_JsonNullable() {
    return subnetMask;
  }
  
  @JsonProperty(JSON_PROPERTY_SUBNET_MASK)
  public void setSubnetMask_JsonNullable(JsonNullable<String> subnetMask) {
    this.subnetMask = subnetMask;
  }

  public void setSubnetMask(String subnetMask) {
    this.subnetMask = JsonNullable.<String>of(subnetMask);
  }


  public Nic totalVfNum(Double totalVfNum) {
    this.totalVfNum = JsonNullable.<Double>of(totalVfNum);
    return this;
  }

   /**
   * Get totalVfNum
   * @return totalVfNum
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public Double getTotalVfNum() {
        return totalVfNum.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_TOTAL_VF_NUM)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<Double> getTotalVfNum_JsonNullable() {
    return totalVfNum;
  }
  
  @JsonProperty(JSON_PROPERTY_TOTAL_VF_NUM)
  public void setTotalVfNum_JsonNullable(JsonNullable<Double> totalVfNum) {
    this.totalVfNum = totalVfNum;
  }

  public void setTotalVfNum(Double totalVfNum) {
    this.totalVfNum = JsonNullable.<Double>of(totalVfNum);
  }


  public Nic type(NetworkType type) {
    this.type = JsonNullable.<NetworkType>of(type);
    return this;
  }

   /**
   * Get type
   * @return type
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public NetworkType getType() {
        return type.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_TYPE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<NetworkType> getType_JsonNullable() {
    return type;
  }
  
  @JsonProperty(JSON_PROPERTY_TYPE)
  public void setType_JsonNullable(JsonNullable<NetworkType> type) {
    this.type = type;
  }

  public void setType(NetworkType type) {
    this.type = JsonNullable.<NetworkType>of(type);
  }


  public Nic up(Boolean up) {
    this.up = up;
    return this;
  }

   /**
   * Get up
   * @return up
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")
  @JsonProperty(JSON_PROPERTY_UP)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public Boolean getUp() {
    return up;
  }


  @JsonProperty(JSON_PROPERTY_UP)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setUp(Boolean up) {
    this.up = up;
  }


  public Nic usedVfNum(Double usedVfNum) {
    this.usedVfNum = JsonNullable.<Double>of(usedVfNum);
    return this;
  }

   /**
   * Get usedVfNum
   * @return usedVfNum
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public Double getUsedVfNum() {
        return usedVfNum.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_USED_VF_NUM)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<Double> getUsedVfNum_JsonNullable() {
    return usedVfNum;
  }
  
  @JsonProperty(JSON_PROPERTY_USED_VF_NUM)
  public void setUsedVfNum_JsonNullable(JsonNullable<Double> usedVfNum) {
    this.usedVfNum = usedVfNum;
  }

  public void setUsedVfNum(Double usedVfNum) {
    this.usedVfNum = JsonNullable.<Double>of(usedVfNum);
  }


  public Nic vds(AlertDisk vds) {
    this.vds = JsonNullable.<AlertDisk>of(vds);
    return this;
  }

   /**
   * Get vds
   * @return vds
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public AlertDisk getVds() {
        return vds.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_VDS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<AlertDisk> getVds_JsonNullable() {
    return vds;
  }
  
  @JsonProperty(JSON_PROPERTY_VDS)
  public void setVds_JsonNullable(JsonNullable<AlertDisk> vds) {
    this.vds = vds;
  }

  public void setVds(AlertDisk vds) {
    this.vds = JsonNullable.<AlertDisk>of(vds);
  }


  /**
   * Return true if this Nic object is equal to o.
   */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Nic nic = (Nic) o;
    return equalsNullable(this.driver, nic.driver) &&
        equalsNullable(this.driverState, nic.driverState) &&
        equalsNullable(this.gatewayIp, nic.gatewayIp) &&
        Objects.equals(this.host, nic.host) &&
        equalsNullable(this.ibdev, nic.ibdev) &&
        Objects.equals(this.id, nic.id) &&
        equalsNullable(this.ipAddress, nic.ipAddress) &&
        equalsNullable(this.isSriov, nic.isSriov) &&
        equalsNullable(this.labels, nic.labels) &&
        Objects.equals(this.localId, nic.localId) &&
        Objects.equals(this.macAddress, nic.macAddress) &&
        equalsNullable(this.maxVfNum, nic.maxVfNum) &&
        equalsNullable(this.model, nic.model) &&
        Objects.equals(this.mtu, nic.mtu) &&
        Objects.equals(this.name, nic.name) &&
        equalsNullable(this.nicUuid, nic.nicUuid) &&
        Objects.equals(this.physical, nic.physical) &&
        equalsNullable(this.rdmaEnabled, nic.rdmaEnabled) &&
        Objects.equals(this.running, nic.running) &&
        equalsNullable(this.speed, nic.speed) &&
        equalsNullable(this.subnetMask, nic.subnetMask) &&
        equalsNullable(this.totalVfNum, nic.totalVfNum) &&
        equalsNullable(this.type, nic.type) &&
        Objects.equals(this.up, nic.up) &&
        equalsNullable(this.usedVfNum, nic.usedVfNum) &&
        equalsNullable(this.vds, nic.vds);
  }

  private static <T> boolean equalsNullable(JsonNullable<T> a, JsonNullable<T> b) {
    return a == b || (a != null && b != null && a.isPresent() && b.isPresent() && Objects.deepEquals(a.get(), b.get()));
  }

  @Override
  public int hashCode() {
    return Objects.hash(hashCodeNullable(driver), hashCodeNullable(driverState), hashCodeNullable(gatewayIp), host, hashCodeNullable(ibdev), id, hashCodeNullable(ipAddress), hashCodeNullable(isSriov), hashCodeNullable(labels), localId, macAddress, hashCodeNullable(maxVfNum), hashCodeNullable(model), mtu, name, hashCodeNullable(nicUuid), physical, hashCodeNullable(rdmaEnabled), running, hashCodeNullable(speed), hashCodeNullable(subnetMask), hashCodeNullable(totalVfNum), hashCodeNullable(type), up, hashCodeNullable(usedVfNum), hashCodeNullable(vds));
  }

  private static <T> int hashCodeNullable(JsonNullable<T> a) {
    if (a == null) {
      return 1;
    }
    return a.isPresent() ? Arrays.deepHashCode(new Object[]{a.get()}) : 31;
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Nic {\n");
    sb.append("    driver: ").append(toIndentedString(driver)).append("\n");
    sb.append("    driverState: ").append(toIndentedString(driverState)).append("\n");
    sb.append("    gatewayIp: ").append(toIndentedString(gatewayIp)).append("\n");
    sb.append("    host: ").append(toIndentedString(host)).append("\n");
    sb.append("    ibdev: ").append(toIndentedString(ibdev)).append("\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    ipAddress: ").append(toIndentedString(ipAddress)).append("\n");
    sb.append("    isSriov: ").append(toIndentedString(isSriov)).append("\n");
    sb.append("    labels: ").append(toIndentedString(labels)).append("\n");
    sb.append("    localId: ").append(toIndentedString(localId)).append("\n");
    sb.append("    macAddress: ").append(toIndentedString(macAddress)).append("\n");
    sb.append("    maxVfNum: ").append(toIndentedString(maxVfNum)).append("\n");
    sb.append("    model: ").append(toIndentedString(model)).append("\n");
    sb.append("    mtu: ").append(toIndentedString(mtu)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    nicUuid: ").append(toIndentedString(nicUuid)).append("\n");
    sb.append("    physical: ").append(toIndentedString(physical)).append("\n");
    sb.append("    rdmaEnabled: ").append(toIndentedString(rdmaEnabled)).append("\n");
    sb.append("    running: ").append(toIndentedString(running)).append("\n");
    sb.append("    speed: ").append(toIndentedString(speed)).append("\n");
    sb.append("    subnetMask: ").append(toIndentedString(subnetMask)).append("\n");
    sb.append("    totalVfNum: ").append(toIndentedString(totalVfNum)).append("\n");
    sb.append("    type: ").append(toIndentedString(type)).append("\n");
    sb.append("    up: ").append(toIndentedString(up)).append("\n");
    sb.append("    usedVfNum: ").append(toIndentedString(usedVfNum)).append("\n");
    sb.append("    vds: ").append(toIndentedString(vds)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

