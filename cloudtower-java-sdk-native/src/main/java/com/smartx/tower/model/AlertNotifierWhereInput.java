/*
 * Tower SDK API
 * cloudtower operation API and SDK
 *
 * The version of the OpenAPI document: 1.7.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.smartx.tower.model;

import java.util.Objects;
import java.util.Arrays;
import java.util.Map;
import java.util.HashMap;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import com.smartx.tower.model.NotifierLanguageCode;
import com.smartx.tower.model.NotifierSecurityMode;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.util.ArrayList;
import java.util.List;
import org.openapitools.jackson.nullable.JsonNullable;
import com.fasterxml.jackson.annotation.JsonIgnore;
import org.openapitools.jackson.nullable.JsonNullable;
import java.util.NoSuchElementException;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;


/**
 * AlertNotifierWhereInput
 */
@JsonPropertyOrder({
  AlertNotifierWhereInput.JSON_PROPERTY_A_N_D,
  AlertNotifierWhereInput.JSON_PROPERTY_DISABLED,
  AlertNotifierWhereInput.JSON_PROPERTY_DISABLED_NOT,
  AlertNotifierWhereInput.JSON_PROPERTY_EMAIL_FROM,
  AlertNotifierWhereInput.JSON_PROPERTY_EMAIL_FROM_CONTAINS,
  AlertNotifierWhereInput.JSON_PROPERTY_EMAIL_FROM_ENDS_WITH,
  AlertNotifierWhereInput.JSON_PROPERTY_EMAIL_FROM_GT,
  AlertNotifierWhereInput.JSON_PROPERTY_EMAIL_FROM_GTE,
  AlertNotifierWhereInput.JSON_PROPERTY_EMAIL_FROM_IN,
  AlertNotifierWhereInput.JSON_PROPERTY_EMAIL_FROM_LT,
  AlertNotifierWhereInput.JSON_PROPERTY_EMAIL_FROM_LTE,
  AlertNotifierWhereInput.JSON_PROPERTY_EMAIL_FROM_NOT,
  AlertNotifierWhereInput.JSON_PROPERTY_EMAIL_FROM_NOT_CONTAINS,
  AlertNotifierWhereInput.JSON_PROPERTY_EMAIL_FROM_NOT_ENDS_WITH,
  AlertNotifierWhereInput.JSON_PROPERTY_EMAIL_FROM_NOT_IN,
  AlertNotifierWhereInput.JSON_PROPERTY_EMAIL_FROM_NOT_STARTS_WITH,
  AlertNotifierWhereInput.JSON_PROPERTY_EMAIL_FROM_STARTS_WITH,
  AlertNotifierWhereInput.JSON_PROPERTY_ID,
  AlertNotifierWhereInput.JSON_PROPERTY_ID_CONTAINS,
  AlertNotifierWhereInput.JSON_PROPERTY_ID_ENDS_WITH,
  AlertNotifierWhereInput.JSON_PROPERTY_ID_GT,
  AlertNotifierWhereInput.JSON_PROPERTY_ID_GTE,
  AlertNotifierWhereInput.JSON_PROPERTY_ID_IN,
  AlertNotifierWhereInput.JSON_PROPERTY_ID_LT,
  AlertNotifierWhereInput.JSON_PROPERTY_ID_LTE,
  AlertNotifierWhereInput.JSON_PROPERTY_ID_NOT,
  AlertNotifierWhereInput.JSON_PROPERTY_ID_NOT_CONTAINS,
  AlertNotifierWhereInput.JSON_PROPERTY_ID_NOT_ENDS_WITH,
  AlertNotifierWhereInput.JSON_PROPERTY_ID_NOT_IN,
  AlertNotifierWhereInput.JSON_PROPERTY_ID_NOT_STARTS_WITH,
  AlertNotifierWhereInput.JSON_PROPERTY_ID_STARTS_WITH,
  AlertNotifierWhereInput.JSON_PROPERTY_LANGUAGE_CODE,
  AlertNotifierWhereInput.JSON_PROPERTY_LANGUAGE_CODE_IN,
  AlertNotifierWhereInput.JSON_PROPERTY_LANGUAGE_CODE_NOT,
  AlertNotifierWhereInput.JSON_PROPERTY_LANGUAGE_CODE_NOT_IN,
  AlertNotifierWhereInput.JSON_PROPERTY_N_O_T,
  AlertNotifierWhereInput.JSON_PROPERTY_O_R,
  AlertNotifierWhereInput.JSON_PROPERTY_PASSWORD,
  AlertNotifierWhereInput.JSON_PROPERTY_PASSWORD_CONTAINS,
  AlertNotifierWhereInput.JSON_PROPERTY_PASSWORD_ENDS_WITH,
  AlertNotifierWhereInput.JSON_PROPERTY_PASSWORD_GT,
  AlertNotifierWhereInput.JSON_PROPERTY_PASSWORD_GTE,
  AlertNotifierWhereInput.JSON_PROPERTY_PASSWORD_IN,
  AlertNotifierWhereInput.JSON_PROPERTY_PASSWORD_LT,
  AlertNotifierWhereInput.JSON_PROPERTY_PASSWORD_LTE,
  AlertNotifierWhereInput.JSON_PROPERTY_PASSWORD_NOT,
  AlertNotifierWhereInput.JSON_PROPERTY_PASSWORD_NOT_CONTAINS,
  AlertNotifierWhereInput.JSON_PROPERTY_PASSWORD_NOT_ENDS_WITH,
  AlertNotifierWhereInput.JSON_PROPERTY_PASSWORD_NOT_IN,
  AlertNotifierWhereInput.JSON_PROPERTY_PASSWORD_NOT_STARTS_WITH,
  AlertNotifierWhereInput.JSON_PROPERTY_PASSWORD_STARTS_WITH,
  AlertNotifierWhereInput.JSON_PROPERTY_SECURITY_MODE,
  AlertNotifierWhereInput.JSON_PROPERTY_SECURITY_MODE_IN,
  AlertNotifierWhereInput.JSON_PROPERTY_SECURITY_MODE_NOT,
  AlertNotifierWhereInput.JSON_PROPERTY_SECURITY_MODE_NOT_IN,
  AlertNotifierWhereInput.JSON_PROPERTY_SMTP_SERVER_HOST,
  AlertNotifierWhereInput.JSON_PROPERTY_SMTP_SERVER_HOST_CONTAINS,
  AlertNotifierWhereInput.JSON_PROPERTY_SMTP_SERVER_HOST_ENDS_WITH,
  AlertNotifierWhereInput.JSON_PROPERTY_SMTP_SERVER_HOST_GT,
  AlertNotifierWhereInput.JSON_PROPERTY_SMTP_SERVER_HOST_GTE,
  AlertNotifierWhereInput.JSON_PROPERTY_SMTP_SERVER_HOST_IN,
  AlertNotifierWhereInput.JSON_PROPERTY_SMTP_SERVER_HOST_LT,
  AlertNotifierWhereInput.JSON_PROPERTY_SMTP_SERVER_HOST_LTE,
  AlertNotifierWhereInput.JSON_PROPERTY_SMTP_SERVER_HOST_NOT,
  AlertNotifierWhereInput.JSON_PROPERTY_SMTP_SERVER_HOST_NOT_CONTAINS,
  AlertNotifierWhereInput.JSON_PROPERTY_SMTP_SERVER_HOST_NOT_ENDS_WITH,
  AlertNotifierWhereInput.JSON_PROPERTY_SMTP_SERVER_HOST_NOT_IN,
  AlertNotifierWhereInput.JSON_PROPERTY_SMTP_SERVER_HOST_NOT_STARTS_WITH,
  AlertNotifierWhereInput.JSON_PROPERTY_SMTP_SERVER_HOST_STARTS_WITH,
  AlertNotifierWhereInput.JSON_PROPERTY_SMTP_SERVER_PORT,
  AlertNotifierWhereInput.JSON_PROPERTY_SMTP_SERVER_PORT_GT,
  AlertNotifierWhereInput.JSON_PROPERTY_SMTP_SERVER_PORT_GTE,
  AlertNotifierWhereInput.JSON_PROPERTY_SMTP_SERVER_PORT_IN,
  AlertNotifierWhereInput.JSON_PROPERTY_SMTP_SERVER_PORT_LT,
  AlertNotifierWhereInput.JSON_PROPERTY_SMTP_SERVER_PORT_LTE,
  AlertNotifierWhereInput.JSON_PROPERTY_SMTP_SERVER_PORT_NOT,
  AlertNotifierWhereInput.JSON_PROPERTY_SMTP_SERVER_PORT_NOT_IN,
  AlertNotifierWhereInput.JSON_PROPERTY_USERNAME,
  AlertNotifierWhereInput.JSON_PROPERTY_USERNAME_CONTAINS,
  AlertNotifierWhereInput.JSON_PROPERTY_USERNAME_ENDS_WITH,
  AlertNotifierWhereInput.JSON_PROPERTY_USERNAME_GT,
  AlertNotifierWhereInput.JSON_PROPERTY_USERNAME_GTE,
  AlertNotifierWhereInput.JSON_PROPERTY_USERNAME_IN,
  AlertNotifierWhereInput.JSON_PROPERTY_USERNAME_LT,
  AlertNotifierWhereInput.JSON_PROPERTY_USERNAME_LTE,
  AlertNotifierWhereInput.JSON_PROPERTY_USERNAME_NOT,
  AlertNotifierWhereInput.JSON_PROPERTY_USERNAME_NOT_CONTAINS,
  AlertNotifierWhereInput.JSON_PROPERTY_USERNAME_NOT_ENDS_WITH,
  AlertNotifierWhereInput.JSON_PROPERTY_USERNAME_NOT_IN,
  AlertNotifierWhereInput.JSON_PROPERTY_USERNAME_NOT_STARTS_WITH,
  AlertNotifierWhereInput.JSON_PROPERTY_USERNAME_STARTS_WITH
})
@javax.annotation.processing.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2021-10-27T15:59:14.939791800+08:00[Asia/Shanghai]")
public class AlertNotifierWhereInput {
  public static final String JSON_PROPERTY_A_N_D = "AND";
  private JsonNullable<List<AlertNotifierWhereInput>> AND = JsonNullable.<List<AlertNotifierWhereInput>>undefined();

  public static final String JSON_PROPERTY_DISABLED = "disabled";
  private JsonNullable<Boolean> disabled = JsonNullable.<Boolean>undefined();

  public static final String JSON_PROPERTY_DISABLED_NOT = "disabled_not";
  private JsonNullable<Boolean> disabledNot = JsonNullable.<Boolean>undefined();

  public static final String JSON_PROPERTY_EMAIL_FROM = "email_from";
  private JsonNullable<String> emailFrom = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_EMAIL_FROM_CONTAINS = "email_from_contains";
  private JsonNullable<String> emailFromContains = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_EMAIL_FROM_ENDS_WITH = "email_from_ends_with";
  private JsonNullable<String> emailFromEndsWith = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_EMAIL_FROM_GT = "email_from_gt";
  private JsonNullable<String> emailFromGt = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_EMAIL_FROM_GTE = "email_from_gte";
  private JsonNullable<String> emailFromGte = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_EMAIL_FROM_IN = "email_from_in";
  private JsonNullable<List<String>> emailFromIn = JsonNullable.<List<String>>undefined();

  public static final String JSON_PROPERTY_EMAIL_FROM_LT = "email_from_lt";
  private JsonNullable<String> emailFromLt = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_EMAIL_FROM_LTE = "email_from_lte";
  private JsonNullable<String> emailFromLte = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_EMAIL_FROM_NOT = "email_from_not";
  private JsonNullable<String> emailFromNot = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_EMAIL_FROM_NOT_CONTAINS = "email_from_not_contains";
  private JsonNullable<String> emailFromNotContains = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_EMAIL_FROM_NOT_ENDS_WITH = "email_from_not_ends_with";
  private JsonNullable<String> emailFromNotEndsWith = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_EMAIL_FROM_NOT_IN = "email_from_not_in";
  private JsonNullable<List<String>> emailFromNotIn = JsonNullable.<List<String>>undefined();

  public static final String JSON_PROPERTY_EMAIL_FROM_NOT_STARTS_WITH = "email_from_not_starts_with";
  private JsonNullable<String> emailFromNotStartsWith = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_EMAIL_FROM_STARTS_WITH = "email_from_starts_with";
  private JsonNullable<String> emailFromStartsWith = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_ID = "id";
  private JsonNullable<String> id = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_ID_CONTAINS = "id_contains";
  private JsonNullable<String> idContains = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_ID_ENDS_WITH = "id_ends_with";
  private JsonNullable<String> idEndsWith = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_ID_GT = "id_gt";
  private JsonNullable<String> idGt = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_ID_GTE = "id_gte";
  private JsonNullable<String> idGte = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_ID_IN = "id_in";
  private JsonNullable<List<String>> idIn = JsonNullable.<List<String>>undefined();

  public static final String JSON_PROPERTY_ID_LT = "id_lt";
  private JsonNullable<String> idLt = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_ID_LTE = "id_lte";
  private JsonNullable<String> idLte = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_ID_NOT = "id_not";
  private JsonNullable<String> idNot = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_ID_NOT_CONTAINS = "id_not_contains";
  private JsonNullable<String> idNotContains = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_ID_NOT_ENDS_WITH = "id_not_ends_with";
  private JsonNullable<String> idNotEndsWith = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_ID_NOT_IN = "id_not_in";
  private JsonNullable<List<String>> idNotIn = JsonNullable.<List<String>>undefined();

  public static final String JSON_PROPERTY_ID_NOT_STARTS_WITH = "id_not_starts_with";
  private JsonNullable<String> idNotStartsWith = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_ID_STARTS_WITH = "id_starts_with";
  private JsonNullable<String> idStartsWith = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_LANGUAGE_CODE = "language_code";
  private JsonNullable<NotifierLanguageCode> languageCode = JsonNullable.<NotifierLanguageCode>undefined();

  public static final String JSON_PROPERTY_LANGUAGE_CODE_IN = "language_code_in";
  private JsonNullable<List<NotifierLanguageCode>> languageCodeIn = JsonNullable.<List<NotifierLanguageCode>>undefined();

  public static final String JSON_PROPERTY_LANGUAGE_CODE_NOT = "language_code_not";
  private JsonNullable<NotifierLanguageCode> languageCodeNot = JsonNullable.<NotifierLanguageCode>undefined();

  public static final String JSON_PROPERTY_LANGUAGE_CODE_NOT_IN = "language_code_not_in";
  private JsonNullable<List<NotifierLanguageCode>> languageCodeNotIn = JsonNullable.<List<NotifierLanguageCode>>undefined();

  public static final String JSON_PROPERTY_N_O_T = "NOT";
  private JsonNullable<List<AlertNotifierWhereInput>> NOT = JsonNullable.<List<AlertNotifierWhereInput>>undefined();

  public static final String JSON_PROPERTY_O_R = "OR";
  private JsonNullable<List<AlertNotifierWhereInput>> OR = JsonNullable.<List<AlertNotifierWhereInput>>undefined();

  public static final String JSON_PROPERTY_PASSWORD = "password";
  private JsonNullable<String> password = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_PASSWORD_CONTAINS = "password_contains";
  private JsonNullable<String> passwordContains = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_PASSWORD_ENDS_WITH = "password_ends_with";
  private JsonNullable<String> passwordEndsWith = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_PASSWORD_GT = "password_gt";
  private JsonNullable<String> passwordGt = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_PASSWORD_GTE = "password_gte";
  private JsonNullable<String> passwordGte = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_PASSWORD_IN = "password_in";
  private JsonNullable<List<String>> passwordIn = JsonNullable.<List<String>>undefined();

  public static final String JSON_PROPERTY_PASSWORD_LT = "password_lt";
  private JsonNullable<String> passwordLt = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_PASSWORD_LTE = "password_lte";
  private JsonNullable<String> passwordLte = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_PASSWORD_NOT = "password_not";
  private JsonNullable<String> passwordNot = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_PASSWORD_NOT_CONTAINS = "password_not_contains";
  private JsonNullable<String> passwordNotContains = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_PASSWORD_NOT_ENDS_WITH = "password_not_ends_with";
  private JsonNullable<String> passwordNotEndsWith = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_PASSWORD_NOT_IN = "password_not_in";
  private JsonNullable<List<String>> passwordNotIn = JsonNullable.<List<String>>undefined();

  public static final String JSON_PROPERTY_PASSWORD_NOT_STARTS_WITH = "password_not_starts_with";
  private JsonNullable<String> passwordNotStartsWith = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_PASSWORD_STARTS_WITH = "password_starts_with";
  private JsonNullable<String> passwordStartsWith = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_SECURITY_MODE = "security_mode";
  private JsonNullable<NotifierSecurityMode> securityMode = JsonNullable.<NotifierSecurityMode>undefined();

  public static final String JSON_PROPERTY_SECURITY_MODE_IN = "security_mode_in";
  private JsonNullable<List<NotifierSecurityMode>> securityModeIn = JsonNullable.<List<NotifierSecurityMode>>undefined();

  public static final String JSON_PROPERTY_SECURITY_MODE_NOT = "security_mode_not";
  private JsonNullable<NotifierSecurityMode> securityModeNot = JsonNullable.<NotifierSecurityMode>undefined();

  public static final String JSON_PROPERTY_SECURITY_MODE_NOT_IN = "security_mode_not_in";
  private JsonNullable<List<NotifierSecurityMode>> securityModeNotIn = JsonNullable.<List<NotifierSecurityMode>>undefined();

  public static final String JSON_PROPERTY_SMTP_SERVER_HOST = "smtp_server_host";
  private JsonNullable<String> smtpServerHost = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_SMTP_SERVER_HOST_CONTAINS = "smtp_server_host_contains";
  private JsonNullable<String> smtpServerHostContains = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_SMTP_SERVER_HOST_ENDS_WITH = "smtp_server_host_ends_with";
  private JsonNullable<String> smtpServerHostEndsWith = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_SMTP_SERVER_HOST_GT = "smtp_server_host_gt";
  private JsonNullable<String> smtpServerHostGt = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_SMTP_SERVER_HOST_GTE = "smtp_server_host_gte";
  private JsonNullable<String> smtpServerHostGte = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_SMTP_SERVER_HOST_IN = "smtp_server_host_in";
  private JsonNullable<List<String>> smtpServerHostIn = JsonNullable.<List<String>>undefined();

  public static final String JSON_PROPERTY_SMTP_SERVER_HOST_LT = "smtp_server_host_lt";
  private JsonNullable<String> smtpServerHostLt = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_SMTP_SERVER_HOST_LTE = "smtp_server_host_lte";
  private JsonNullable<String> smtpServerHostLte = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_SMTP_SERVER_HOST_NOT = "smtp_server_host_not";
  private JsonNullable<String> smtpServerHostNot = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_SMTP_SERVER_HOST_NOT_CONTAINS = "smtp_server_host_not_contains";
  private JsonNullable<String> smtpServerHostNotContains = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_SMTP_SERVER_HOST_NOT_ENDS_WITH = "smtp_server_host_not_ends_with";
  private JsonNullable<String> smtpServerHostNotEndsWith = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_SMTP_SERVER_HOST_NOT_IN = "smtp_server_host_not_in";
  private JsonNullable<List<String>> smtpServerHostNotIn = JsonNullable.<List<String>>undefined();

  public static final String JSON_PROPERTY_SMTP_SERVER_HOST_NOT_STARTS_WITH = "smtp_server_host_not_starts_with";
  private JsonNullable<String> smtpServerHostNotStartsWith = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_SMTP_SERVER_HOST_STARTS_WITH = "smtp_server_host_starts_with";
  private JsonNullable<String> smtpServerHostStartsWith = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_SMTP_SERVER_PORT = "smtp_server_port";
  private JsonNullable<Double> smtpServerPort = JsonNullable.<Double>undefined();

  public static final String JSON_PROPERTY_SMTP_SERVER_PORT_GT = "smtp_server_port_gt";
  private JsonNullable<Double> smtpServerPortGt = JsonNullable.<Double>undefined();

  public static final String JSON_PROPERTY_SMTP_SERVER_PORT_GTE = "smtp_server_port_gte";
  private JsonNullable<Double> smtpServerPortGte = JsonNullable.<Double>undefined();

  public static final String JSON_PROPERTY_SMTP_SERVER_PORT_IN = "smtp_server_port_in";
  private JsonNullable<List<Double>> smtpServerPortIn = JsonNullable.<List<Double>>undefined();

  public static final String JSON_PROPERTY_SMTP_SERVER_PORT_LT = "smtp_server_port_lt";
  private JsonNullable<Double> smtpServerPortLt = JsonNullable.<Double>undefined();

  public static final String JSON_PROPERTY_SMTP_SERVER_PORT_LTE = "smtp_server_port_lte";
  private JsonNullable<Double> smtpServerPortLte = JsonNullable.<Double>undefined();

  public static final String JSON_PROPERTY_SMTP_SERVER_PORT_NOT = "smtp_server_port_not";
  private JsonNullable<Double> smtpServerPortNot = JsonNullable.<Double>undefined();

  public static final String JSON_PROPERTY_SMTP_SERVER_PORT_NOT_IN = "smtp_server_port_not_in";
  private JsonNullable<List<Double>> smtpServerPortNotIn = JsonNullable.<List<Double>>undefined();

  public static final String JSON_PROPERTY_USERNAME = "username";
  private JsonNullable<String> username = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_USERNAME_CONTAINS = "username_contains";
  private JsonNullable<String> usernameContains = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_USERNAME_ENDS_WITH = "username_ends_with";
  private JsonNullable<String> usernameEndsWith = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_USERNAME_GT = "username_gt";
  private JsonNullable<String> usernameGt = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_USERNAME_GTE = "username_gte";
  private JsonNullable<String> usernameGte = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_USERNAME_IN = "username_in";
  private JsonNullable<List<String>> usernameIn = JsonNullable.<List<String>>undefined();

  public static final String JSON_PROPERTY_USERNAME_LT = "username_lt";
  private JsonNullable<String> usernameLt = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_USERNAME_LTE = "username_lte";
  private JsonNullable<String> usernameLte = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_USERNAME_NOT = "username_not";
  private JsonNullable<String> usernameNot = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_USERNAME_NOT_CONTAINS = "username_not_contains";
  private JsonNullable<String> usernameNotContains = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_USERNAME_NOT_ENDS_WITH = "username_not_ends_with";
  private JsonNullable<String> usernameNotEndsWith = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_USERNAME_NOT_IN = "username_not_in";
  private JsonNullable<List<String>> usernameNotIn = JsonNullable.<List<String>>undefined();

  public static final String JSON_PROPERTY_USERNAME_NOT_STARTS_WITH = "username_not_starts_with";
  private JsonNullable<String> usernameNotStartsWith = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_USERNAME_STARTS_WITH = "username_starts_with";
  private JsonNullable<String> usernameStartsWith = JsonNullable.<String>undefined();


  public AlertNotifierWhereInput AND(List<AlertNotifierWhereInput> AND) {
    this.AND = JsonNullable.<List<AlertNotifierWhereInput>>of(AND);
    return this;
  }

  public AlertNotifierWhereInput addANDItem(AlertNotifierWhereInput ANDItem) {
    if (this.AND == null || !this.AND.isPresent()) {
      this.AND = JsonNullable.<List<AlertNotifierWhereInput>>of(new ArrayList<>());
    }
    try {
      this.AND.get().add(ANDItem);
    } catch (java.util.NoSuchElementException e) {
      // this can never happen, as we make sure above that the value is present
    }
    return this;
  }

   /**
   * Get AND
   * @return AND
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public List<AlertNotifierWhereInput> getAND() {
        return AND.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_A_N_D)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<List<AlertNotifierWhereInput>> getAND_JsonNullable() {
    return AND;
  }
  
  @JsonProperty(JSON_PROPERTY_A_N_D)
  public void setAND_JsonNullable(JsonNullable<List<AlertNotifierWhereInput>> AND) {
    this.AND = AND;
  }

  public void setAND(List<AlertNotifierWhereInput> AND) {
    this.AND = JsonNullable.<List<AlertNotifierWhereInput>>of(AND);
  }


  public AlertNotifierWhereInput disabled(Boolean disabled) {
    this.disabled = JsonNullable.<Boolean>of(disabled);
    return this;
  }

   /**
   * Get disabled
   * @return disabled
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public Boolean getDisabled() {
        return disabled.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_DISABLED)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<Boolean> getDisabled_JsonNullable() {
    return disabled;
  }
  
  @JsonProperty(JSON_PROPERTY_DISABLED)
  public void setDisabled_JsonNullable(JsonNullable<Boolean> disabled) {
    this.disabled = disabled;
  }

  public void setDisabled(Boolean disabled) {
    this.disabled = JsonNullable.<Boolean>of(disabled);
  }


  public AlertNotifierWhereInput disabledNot(Boolean disabledNot) {
    this.disabledNot = JsonNullable.<Boolean>of(disabledNot);
    return this;
  }

   /**
   * Get disabledNot
   * @return disabledNot
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public Boolean getDisabledNot() {
        return disabledNot.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_DISABLED_NOT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<Boolean> getDisabledNot_JsonNullable() {
    return disabledNot;
  }
  
  @JsonProperty(JSON_PROPERTY_DISABLED_NOT)
  public void setDisabledNot_JsonNullable(JsonNullable<Boolean> disabledNot) {
    this.disabledNot = disabledNot;
  }

  public void setDisabledNot(Boolean disabledNot) {
    this.disabledNot = JsonNullable.<Boolean>of(disabledNot);
  }


  public AlertNotifierWhereInput emailFrom(String emailFrom) {
    this.emailFrom = JsonNullable.<String>of(emailFrom);
    return this;
  }

   /**
   * Get emailFrom
   * @return emailFrom
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getEmailFrom() {
        return emailFrom.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_EMAIL_FROM)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getEmailFrom_JsonNullable() {
    return emailFrom;
  }
  
  @JsonProperty(JSON_PROPERTY_EMAIL_FROM)
  public void setEmailFrom_JsonNullable(JsonNullable<String> emailFrom) {
    this.emailFrom = emailFrom;
  }

  public void setEmailFrom(String emailFrom) {
    this.emailFrom = JsonNullable.<String>of(emailFrom);
  }


  public AlertNotifierWhereInput emailFromContains(String emailFromContains) {
    this.emailFromContains = JsonNullable.<String>of(emailFromContains);
    return this;
  }

   /**
   * Get emailFromContains
   * @return emailFromContains
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getEmailFromContains() {
        return emailFromContains.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_EMAIL_FROM_CONTAINS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getEmailFromContains_JsonNullable() {
    return emailFromContains;
  }
  
  @JsonProperty(JSON_PROPERTY_EMAIL_FROM_CONTAINS)
  public void setEmailFromContains_JsonNullable(JsonNullable<String> emailFromContains) {
    this.emailFromContains = emailFromContains;
  }

  public void setEmailFromContains(String emailFromContains) {
    this.emailFromContains = JsonNullable.<String>of(emailFromContains);
  }


  public AlertNotifierWhereInput emailFromEndsWith(String emailFromEndsWith) {
    this.emailFromEndsWith = JsonNullable.<String>of(emailFromEndsWith);
    return this;
  }

   /**
   * Get emailFromEndsWith
   * @return emailFromEndsWith
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getEmailFromEndsWith() {
        return emailFromEndsWith.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_EMAIL_FROM_ENDS_WITH)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getEmailFromEndsWith_JsonNullable() {
    return emailFromEndsWith;
  }
  
  @JsonProperty(JSON_PROPERTY_EMAIL_FROM_ENDS_WITH)
  public void setEmailFromEndsWith_JsonNullable(JsonNullable<String> emailFromEndsWith) {
    this.emailFromEndsWith = emailFromEndsWith;
  }

  public void setEmailFromEndsWith(String emailFromEndsWith) {
    this.emailFromEndsWith = JsonNullable.<String>of(emailFromEndsWith);
  }


  public AlertNotifierWhereInput emailFromGt(String emailFromGt) {
    this.emailFromGt = JsonNullable.<String>of(emailFromGt);
    return this;
  }

   /**
   * Get emailFromGt
   * @return emailFromGt
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getEmailFromGt() {
        return emailFromGt.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_EMAIL_FROM_GT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getEmailFromGt_JsonNullable() {
    return emailFromGt;
  }
  
  @JsonProperty(JSON_PROPERTY_EMAIL_FROM_GT)
  public void setEmailFromGt_JsonNullable(JsonNullable<String> emailFromGt) {
    this.emailFromGt = emailFromGt;
  }

  public void setEmailFromGt(String emailFromGt) {
    this.emailFromGt = JsonNullable.<String>of(emailFromGt);
  }


  public AlertNotifierWhereInput emailFromGte(String emailFromGte) {
    this.emailFromGte = JsonNullable.<String>of(emailFromGte);
    return this;
  }

   /**
   * Get emailFromGte
   * @return emailFromGte
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getEmailFromGte() {
        return emailFromGte.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_EMAIL_FROM_GTE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getEmailFromGte_JsonNullable() {
    return emailFromGte;
  }
  
  @JsonProperty(JSON_PROPERTY_EMAIL_FROM_GTE)
  public void setEmailFromGte_JsonNullable(JsonNullable<String> emailFromGte) {
    this.emailFromGte = emailFromGte;
  }

  public void setEmailFromGte(String emailFromGte) {
    this.emailFromGte = JsonNullable.<String>of(emailFromGte);
  }


  public AlertNotifierWhereInput emailFromIn(List<String> emailFromIn) {
    this.emailFromIn = JsonNullable.<List<String>>of(emailFromIn);
    return this;
  }

  public AlertNotifierWhereInput addEmailFromInItem(String emailFromInItem) {
    if (this.emailFromIn == null || !this.emailFromIn.isPresent()) {
      this.emailFromIn = JsonNullable.<List<String>>of(new ArrayList<>());
    }
    try {
      this.emailFromIn.get().add(emailFromInItem);
    } catch (java.util.NoSuchElementException e) {
      // this can never happen, as we make sure above that the value is present
    }
    return this;
  }

   /**
   * Get emailFromIn
   * @return emailFromIn
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public List<String> getEmailFromIn() {
        return emailFromIn.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_EMAIL_FROM_IN)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<List<String>> getEmailFromIn_JsonNullable() {
    return emailFromIn;
  }
  
  @JsonProperty(JSON_PROPERTY_EMAIL_FROM_IN)
  public void setEmailFromIn_JsonNullable(JsonNullable<List<String>> emailFromIn) {
    this.emailFromIn = emailFromIn;
  }

  public void setEmailFromIn(List<String> emailFromIn) {
    this.emailFromIn = JsonNullable.<List<String>>of(emailFromIn);
  }


  public AlertNotifierWhereInput emailFromLt(String emailFromLt) {
    this.emailFromLt = JsonNullable.<String>of(emailFromLt);
    return this;
  }

   /**
   * Get emailFromLt
   * @return emailFromLt
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getEmailFromLt() {
        return emailFromLt.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_EMAIL_FROM_LT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getEmailFromLt_JsonNullable() {
    return emailFromLt;
  }
  
  @JsonProperty(JSON_PROPERTY_EMAIL_FROM_LT)
  public void setEmailFromLt_JsonNullable(JsonNullable<String> emailFromLt) {
    this.emailFromLt = emailFromLt;
  }

  public void setEmailFromLt(String emailFromLt) {
    this.emailFromLt = JsonNullable.<String>of(emailFromLt);
  }


  public AlertNotifierWhereInput emailFromLte(String emailFromLte) {
    this.emailFromLte = JsonNullable.<String>of(emailFromLte);
    return this;
  }

   /**
   * Get emailFromLte
   * @return emailFromLte
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getEmailFromLte() {
        return emailFromLte.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_EMAIL_FROM_LTE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getEmailFromLte_JsonNullable() {
    return emailFromLte;
  }
  
  @JsonProperty(JSON_PROPERTY_EMAIL_FROM_LTE)
  public void setEmailFromLte_JsonNullable(JsonNullable<String> emailFromLte) {
    this.emailFromLte = emailFromLte;
  }

  public void setEmailFromLte(String emailFromLte) {
    this.emailFromLte = JsonNullable.<String>of(emailFromLte);
  }


  public AlertNotifierWhereInput emailFromNot(String emailFromNot) {
    this.emailFromNot = JsonNullable.<String>of(emailFromNot);
    return this;
  }

   /**
   * Get emailFromNot
   * @return emailFromNot
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getEmailFromNot() {
        return emailFromNot.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_EMAIL_FROM_NOT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getEmailFromNot_JsonNullable() {
    return emailFromNot;
  }
  
  @JsonProperty(JSON_PROPERTY_EMAIL_FROM_NOT)
  public void setEmailFromNot_JsonNullable(JsonNullable<String> emailFromNot) {
    this.emailFromNot = emailFromNot;
  }

  public void setEmailFromNot(String emailFromNot) {
    this.emailFromNot = JsonNullable.<String>of(emailFromNot);
  }


  public AlertNotifierWhereInput emailFromNotContains(String emailFromNotContains) {
    this.emailFromNotContains = JsonNullable.<String>of(emailFromNotContains);
    return this;
  }

   /**
   * Get emailFromNotContains
   * @return emailFromNotContains
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getEmailFromNotContains() {
        return emailFromNotContains.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_EMAIL_FROM_NOT_CONTAINS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getEmailFromNotContains_JsonNullable() {
    return emailFromNotContains;
  }
  
  @JsonProperty(JSON_PROPERTY_EMAIL_FROM_NOT_CONTAINS)
  public void setEmailFromNotContains_JsonNullable(JsonNullable<String> emailFromNotContains) {
    this.emailFromNotContains = emailFromNotContains;
  }

  public void setEmailFromNotContains(String emailFromNotContains) {
    this.emailFromNotContains = JsonNullable.<String>of(emailFromNotContains);
  }


  public AlertNotifierWhereInput emailFromNotEndsWith(String emailFromNotEndsWith) {
    this.emailFromNotEndsWith = JsonNullable.<String>of(emailFromNotEndsWith);
    return this;
  }

   /**
   * Get emailFromNotEndsWith
   * @return emailFromNotEndsWith
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getEmailFromNotEndsWith() {
        return emailFromNotEndsWith.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_EMAIL_FROM_NOT_ENDS_WITH)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getEmailFromNotEndsWith_JsonNullable() {
    return emailFromNotEndsWith;
  }
  
  @JsonProperty(JSON_PROPERTY_EMAIL_FROM_NOT_ENDS_WITH)
  public void setEmailFromNotEndsWith_JsonNullable(JsonNullable<String> emailFromNotEndsWith) {
    this.emailFromNotEndsWith = emailFromNotEndsWith;
  }

  public void setEmailFromNotEndsWith(String emailFromNotEndsWith) {
    this.emailFromNotEndsWith = JsonNullable.<String>of(emailFromNotEndsWith);
  }


  public AlertNotifierWhereInput emailFromNotIn(List<String> emailFromNotIn) {
    this.emailFromNotIn = JsonNullable.<List<String>>of(emailFromNotIn);
    return this;
  }

  public AlertNotifierWhereInput addEmailFromNotInItem(String emailFromNotInItem) {
    if (this.emailFromNotIn == null || !this.emailFromNotIn.isPresent()) {
      this.emailFromNotIn = JsonNullable.<List<String>>of(new ArrayList<>());
    }
    try {
      this.emailFromNotIn.get().add(emailFromNotInItem);
    } catch (java.util.NoSuchElementException e) {
      // this can never happen, as we make sure above that the value is present
    }
    return this;
  }

   /**
   * Get emailFromNotIn
   * @return emailFromNotIn
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public List<String> getEmailFromNotIn() {
        return emailFromNotIn.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_EMAIL_FROM_NOT_IN)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<List<String>> getEmailFromNotIn_JsonNullable() {
    return emailFromNotIn;
  }
  
  @JsonProperty(JSON_PROPERTY_EMAIL_FROM_NOT_IN)
  public void setEmailFromNotIn_JsonNullable(JsonNullable<List<String>> emailFromNotIn) {
    this.emailFromNotIn = emailFromNotIn;
  }

  public void setEmailFromNotIn(List<String> emailFromNotIn) {
    this.emailFromNotIn = JsonNullable.<List<String>>of(emailFromNotIn);
  }


  public AlertNotifierWhereInput emailFromNotStartsWith(String emailFromNotStartsWith) {
    this.emailFromNotStartsWith = JsonNullable.<String>of(emailFromNotStartsWith);
    return this;
  }

   /**
   * Get emailFromNotStartsWith
   * @return emailFromNotStartsWith
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getEmailFromNotStartsWith() {
        return emailFromNotStartsWith.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_EMAIL_FROM_NOT_STARTS_WITH)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getEmailFromNotStartsWith_JsonNullable() {
    return emailFromNotStartsWith;
  }
  
  @JsonProperty(JSON_PROPERTY_EMAIL_FROM_NOT_STARTS_WITH)
  public void setEmailFromNotStartsWith_JsonNullable(JsonNullable<String> emailFromNotStartsWith) {
    this.emailFromNotStartsWith = emailFromNotStartsWith;
  }

  public void setEmailFromNotStartsWith(String emailFromNotStartsWith) {
    this.emailFromNotStartsWith = JsonNullable.<String>of(emailFromNotStartsWith);
  }


  public AlertNotifierWhereInput emailFromStartsWith(String emailFromStartsWith) {
    this.emailFromStartsWith = JsonNullable.<String>of(emailFromStartsWith);
    return this;
  }

   /**
   * Get emailFromStartsWith
   * @return emailFromStartsWith
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getEmailFromStartsWith() {
        return emailFromStartsWith.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_EMAIL_FROM_STARTS_WITH)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getEmailFromStartsWith_JsonNullable() {
    return emailFromStartsWith;
  }
  
  @JsonProperty(JSON_PROPERTY_EMAIL_FROM_STARTS_WITH)
  public void setEmailFromStartsWith_JsonNullable(JsonNullable<String> emailFromStartsWith) {
    this.emailFromStartsWith = emailFromStartsWith;
  }

  public void setEmailFromStartsWith(String emailFromStartsWith) {
    this.emailFromStartsWith = JsonNullable.<String>of(emailFromStartsWith);
  }


  public AlertNotifierWhereInput id(String id) {
    this.id = JsonNullable.<String>of(id);
    return this;
  }

   /**
   * Get id
   * @return id
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getId() {
        return id.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getId_JsonNullable() {
    return id;
  }
  
  @JsonProperty(JSON_PROPERTY_ID)
  public void setId_JsonNullable(JsonNullable<String> id) {
    this.id = id;
  }

  public void setId(String id) {
    this.id = JsonNullable.<String>of(id);
  }


  public AlertNotifierWhereInput idContains(String idContains) {
    this.idContains = JsonNullable.<String>of(idContains);
    return this;
  }

   /**
   * Get idContains
   * @return idContains
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getIdContains() {
        return idContains.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_ID_CONTAINS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getIdContains_JsonNullable() {
    return idContains;
  }
  
  @JsonProperty(JSON_PROPERTY_ID_CONTAINS)
  public void setIdContains_JsonNullable(JsonNullable<String> idContains) {
    this.idContains = idContains;
  }

  public void setIdContains(String idContains) {
    this.idContains = JsonNullable.<String>of(idContains);
  }


  public AlertNotifierWhereInput idEndsWith(String idEndsWith) {
    this.idEndsWith = JsonNullable.<String>of(idEndsWith);
    return this;
  }

   /**
   * Get idEndsWith
   * @return idEndsWith
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getIdEndsWith() {
        return idEndsWith.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_ID_ENDS_WITH)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getIdEndsWith_JsonNullable() {
    return idEndsWith;
  }
  
  @JsonProperty(JSON_PROPERTY_ID_ENDS_WITH)
  public void setIdEndsWith_JsonNullable(JsonNullable<String> idEndsWith) {
    this.idEndsWith = idEndsWith;
  }

  public void setIdEndsWith(String idEndsWith) {
    this.idEndsWith = JsonNullable.<String>of(idEndsWith);
  }


  public AlertNotifierWhereInput idGt(String idGt) {
    this.idGt = JsonNullable.<String>of(idGt);
    return this;
  }

   /**
   * Get idGt
   * @return idGt
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getIdGt() {
        return idGt.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_ID_GT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getIdGt_JsonNullable() {
    return idGt;
  }
  
  @JsonProperty(JSON_PROPERTY_ID_GT)
  public void setIdGt_JsonNullable(JsonNullable<String> idGt) {
    this.idGt = idGt;
  }

  public void setIdGt(String idGt) {
    this.idGt = JsonNullable.<String>of(idGt);
  }


  public AlertNotifierWhereInput idGte(String idGte) {
    this.idGte = JsonNullable.<String>of(idGte);
    return this;
  }

   /**
   * Get idGte
   * @return idGte
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getIdGte() {
        return idGte.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_ID_GTE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getIdGte_JsonNullable() {
    return idGte;
  }
  
  @JsonProperty(JSON_PROPERTY_ID_GTE)
  public void setIdGte_JsonNullable(JsonNullable<String> idGte) {
    this.idGte = idGte;
  }

  public void setIdGte(String idGte) {
    this.idGte = JsonNullable.<String>of(idGte);
  }


  public AlertNotifierWhereInput idIn(List<String> idIn) {
    this.idIn = JsonNullable.<List<String>>of(idIn);
    return this;
  }

  public AlertNotifierWhereInput addIdInItem(String idInItem) {
    if (this.idIn == null || !this.idIn.isPresent()) {
      this.idIn = JsonNullable.<List<String>>of(new ArrayList<>());
    }
    try {
      this.idIn.get().add(idInItem);
    } catch (java.util.NoSuchElementException e) {
      // this can never happen, as we make sure above that the value is present
    }
    return this;
  }

   /**
   * Get idIn
   * @return idIn
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public List<String> getIdIn() {
        return idIn.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_ID_IN)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<List<String>> getIdIn_JsonNullable() {
    return idIn;
  }
  
  @JsonProperty(JSON_PROPERTY_ID_IN)
  public void setIdIn_JsonNullable(JsonNullable<List<String>> idIn) {
    this.idIn = idIn;
  }

  public void setIdIn(List<String> idIn) {
    this.idIn = JsonNullable.<List<String>>of(idIn);
  }


  public AlertNotifierWhereInput idLt(String idLt) {
    this.idLt = JsonNullable.<String>of(idLt);
    return this;
  }

   /**
   * Get idLt
   * @return idLt
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getIdLt() {
        return idLt.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_ID_LT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getIdLt_JsonNullable() {
    return idLt;
  }
  
  @JsonProperty(JSON_PROPERTY_ID_LT)
  public void setIdLt_JsonNullable(JsonNullable<String> idLt) {
    this.idLt = idLt;
  }

  public void setIdLt(String idLt) {
    this.idLt = JsonNullable.<String>of(idLt);
  }


  public AlertNotifierWhereInput idLte(String idLte) {
    this.idLte = JsonNullable.<String>of(idLte);
    return this;
  }

   /**
   * Get idLte
   * @return idLte
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getIdLte() {
        return idLte.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_ID_LTE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getIdLte_JsonNullable() {
    return idLte;
  }
  
  @JsonProperty(JSON_PROPERTY_ID_LTE)
  public void setIdLte_JsonNullable(JsonNullable<String> idLte) {
    this.idLte = idLte;
  }

  public void setIdLte(String idLte) {
    this.idLte = JsonNullable.<String>of(idLte);
  }


  public AlertNotifierWhereInput idNot(String idNot) {
    this.idNot = JsonNullable.<String>of(idNot);
    return this;
  }

   /**
   * Get idNot
   * @return idNot
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getIdNot() {
        return idNot.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_ID_NOT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getIdNot_JsonNullable() {
    return idNot;
  }
  
  @JsonProperty(JSON_PROPERTY_ID_NOT)
  public void setIdNot_JsonNullable(JsonNullable<String> idNot) {
    this.idNot = idNot;
  }

  public void setIdNot(String idNot) {
    this.idNot = JsonNullable.<String>of(idNot);
  }


  public AlertNotifierWhereInput idNotContains(String idNotContains) {
    this.idNotContains = JsonNullable.<String>of(idNotContains);
    return this;
  }

   /**
   * Get idNotContains
   * @return idNotContains
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getIdNotContains() {
        return idNotContains.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_ID_NOT_CONTAINS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getIdNotContains_JsonNullable() {
    return idNotContains;
  }
  
  @JsonProperty(JSON_PROPERTY_ID_NOT_CONTAINS)
  public void setIdNotContains_JsonNullable(JsonNullable<String> idNotContains) {
    this.idNotContains = idNotContains;
  }

  public void setIdNotContains(String idNotContains) {
    this.idNotContains = JsonNullable.<String>of(idNotContains);
  }


  public AlertNotifierWhereInput idNotEndsWith(String idNotEndsWith) {
    this.idNotEndsWith = JsonNullable.<String>of(idNotEndsWith);
    return this;
  }

   /**
   * Get idNotEndsWith
   * @return idNotEndsWith
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getIdNotEndsWith() {
        return idNotEndsWith.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_ID_NOT_ENDS_WITH)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getIdNotEndsWith_JsonNullable() {
    return idNotEndsWith;
  }
  
  @JsonProperty(JSON_PROPERTY_ID_NOT_ENDS_WITH)
  public void setIdNotEndsWith_JsonNullable(JsonNullable<String> idNotEndsWith) {
    this.idNotEndsWith = idNotEndsWith;
  }

  public void setIdNotEndsWith(String idNotEndsWith) {
    this.idNotEndsWith = JsonNullable.<String>of(idNotEndsWith);
  }


  public AlertNotifierWhereInput idNotIn(List<String> idNotIn) {
    this.idNotIn = JsonNullable.<List<String>>of(idNotIn);
    return this;
  }

  public AlertNotifierWhereInput addIdNotInItem(String idNotInItem) {
    if (this.idNotIn == null || !this.idNotIn.isPresent()) {
      this.idNotIn = JsonNullable.<List<String>>of(new ArrayList<>());
    }
    try {
      this.idNotIn.get().add(idNotInItem);
    } catch (java.util.NoSuchElementException e) {
      // this can never happen, as we make sure above that the value is present
    }
    return this;
  }

   /**
   * Get idNotIn
   * @return idNotIn
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public List<String> getIdNotIn() {
        return idNotIn.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_ID_NOT_IN)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<List<String>> getIdNotIn_JsonNullable() {
    return idNotIn;
  }
  
  @JsonProperty(JSON_PROPERTY_ID_NOT_IN)
  public void setIdNotIn_JsonNullable(JsonNullable<List<String>> idNotIn) {
    this.idNotIn = idNotIn;
  }

  public void setIdNotIn(List<String> idNotIn) {
    this.idNotIn = JsonNullable.<List<String>>of(idNotIn);
  }


  public AlertNotifierWhereInput idNotStartsWith(String idNotStartsWith) {
    this.idNotStartsWith = JsonNullable.<String>of(idNotStartsWith);
    return this;
  }

   /**
   * Get idNotStartsWith
   * @return idNotStartsWith
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getIdNotStartsWith() {
        return idNotStartsWith.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_ID_NOT_STARTS_WITH)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getIdNotStartsWith_JsonNullable() {
    return idNotStartsWith;
  }
  
  @JsonProperty(JSON_PROPERTY_ID_NOT_STARTS_WITH)
  public void setIdNotStartsWith_JsonNullable(JsonNullable<String> idNotStartsWith) {
    this.idNotStartsWith = idNotStartsWith;
  }

  public void setIdNotStartsWith(String idNotStartsWith) {
    this.idNotStartsWith = JsonNullable.<String>of(idNotStartsWith);
  }


  public AlertNotifierWhereInput idStartsWith(String idStartsWith) {
    this.idStartsWith = JsonNullable.<String>of(idStartsWith);
    return this;
  }

   /**
   * Get idStartsWith
   * @return idStartsWith
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getIdStartsWith() {
        return idStartsWith.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_ID_STARTS_WITH)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getIdStartsWith_JsonNullable() {
    return idStartsWith;
  }
  
  @JsonProperty(JSON_PROPERTY_ID_STARTS_WITH)
  public void setIdStartsWith_JsonNullable(JsonNullable<String> idStartsWith) {
    this.idStartsWith = idStartsWith;
  }

  public void setIdStartsWith(String idStartsWith) {
    this.idStartsWith = JsonNullable.<String>of(idStartsWith);
  }


  public AlertNotifierWhereInput languageCode(NotifierLanguageCode languageCode) {
    this.languageCode = JsonNullable.<NotifierLanguageCode>of(languageCode);
    return this;
  }

   /**
   * Get languageCode
   * @return languageCode
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public NotifierLanguageCode getLanguageCode() {
        return languageCode.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_LANGUAGE_CODE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<NotifierLanguageCode> getLanguageCode_JsonNullable() {
    return languageCode;
  }
  
  @JsonProperty(JSON_PROPERTY_LANGUAGE_CODE)
  public void setLanguageCode_JsonNullable(JsonNullable<NotifierLanguageCode> languageCode) {
    this.languageCode = languageCode;
  }

  public void setLanguageCode(NotifierLanguageCode languageCode) {
    this.languageCode = JsonNullable.<NotifierLanguageCode>of(languageCode);
  }


  public AlertNotifierWhereInput languageCodeIn(List<NotifierLanguageCode> languageCodeIn) {
    this.languageCodeIn = JsonNullable.<List<NotifierLanguageCode>>of(languageCodeIn);
    return this;
  }

  public AlertNotifierWhereInput addLanguageCodeInItem(NotifierLanguageCode languageCodeInItem) {
    if (this.languageCodeIn == null || !this.languageCodeIn.isPresent()) {
      this.languageCodeIn = JsonNullable.<List<NotifierLanguageCode>>of(new ArrayList<>());
    }
    try {
      this.languageCodeIn.get().add(languageCodeInItem);
    } catch (java.util.NoSuchElementException e) {
      // this can never happen, as we make sure above that the value is present
    }
    return this;
  }

   /**
   * Get languageCodeIn
   * @return languageCodeIn
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public List<NotifierLanguageCode> getLanguageCodeIn() {
        return languageCodeIn.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_LANGUAGE_CODE_IN)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<List<NotifierLanguageCode>> getLanguageCodeIn_JsonNullable() {
    return languageCodeIn;
  }
  
  @JsonProperty(JSON_PROPERTY_LANGUAGE_CODE_IN)
  public void setLanguageCodeIn_JsonNullable(JsonNullable<List<NotifierLanguageCode>> languageCodeIn) {
    this.languageCodeIn = languageCodeIn;
  }

  public void setLanguageCodeIn(List<NotifierLanguageCode> languageCodeIn) {
    this.languageCodeIn = JsonNullable.<List<NotifierLanguageCode>>of(languageCodeIn);
  }


  public AlertNotifierWhereInput languageCodeNot(NotifierLanguageCode languageCodeNot) {
    this.languageCodeNot = JsonNullable.<NotifierLanguageCode>of(languageCodeNot);
    return this;
  }

   /**
   * Get languageCodeNot
   * @return languageCodeNot
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public NotifierLanguageCode getLanguageCodeNot() {
        return languageCodeNot.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_LANGUAGE_CODE_NOT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<NotifierLanguageCode> getLanguageCodeNot_JsonNullable() {
    return languageCodeNot;
  }
  
  @JsonProperty(JSON_PROPERTY_LANGUAGE_CODE_NOT)
  public void setLanguageCodeNot_JsonNullable(JsonNullable<NotifierLanguageCode> languageCodeNot) {
    this.languageCodeNot = languageCodeNot;
  }

  public void setLanguageCodeNot(NotifierLanguageCode languageCodeNot) {
    this.languageCodeNot = JsonNullable.<NotifierLanguageCode>of(languageCodeNot);
  }


  public AlertNotifierWhereInput languageCodeNotIn(List<NotifierLanguageCode> languageCodeNotIn) {
    this.languageCodeNotIn = JsonNullable.<List<NotifierLanguageCode>>of(languageCodeNotIn);
    return this;
  }

  public AlertNotifierWhereInput addLanguageCodeNotInItem(NotifierLanguageCode languageCodeNotInItem) {
    if (this.languageCodeNotIn == null || !this.languageCodeNotIn.isPresent()) {
      this.languageCodeNotIn = JsonNullable.<List<NotifierLanguageCode>>of(new ArrayList<>());
    }
    try {
      this.languageCodeNotIn.get().add(languageCodeNotInItem);
    } catch (java.util.NoSuchElementException e) {
      // this can never happen, as we make sure above that the value is present
    }
    return this;
  }

   /**
   * Get languageCodeNotIn
   * @return languageCodeNotIn
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public List<NotifierLanguageCode> getLanguageCodeNotIn() {
        return languageCodeNotIn.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_LANGUAGE_CODE_NOT_IN)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<List<NotifierLanguageCode>> getLanguageCodeNotIn_JsonNullable() {
    return languageCodeNotIn;
  }
  
  @JsonProperty(JSON_PROPERTY_LANGUAGE_CODE_NOT_IN)
  public void setLanguageCodeNotIn_JsonNullable(JsonNullable<List<NotifierLanguageCode>> languageCodeNotIn) {
    this.languageCodeNotIn = languageCodeNotIn;
  }

  public void setLanguageCodeNotIn(List<NotifierLanguageCode> languageCodeNotIn) {
    this.languageCodeNotIn = JsonNullable.<List<NotifierLanguageCode>>of(languageCodeNotIn);
  }


  public AlertNotifierWhereInput NOT(List<AlertNotifierWhereInput> NOT) {
    this.NOT = JsonNullable.<List<AlertNotifierWhereInput>>of(NOT);
    return this;
  }

  public AlertNotifierWhereInput addNOTItem(AlertNotifierWhereInput NOTItem) {
    if (this.NOT == null || !this.NOT.isPresent()) {
      this.NOT = JsonNullable.<List<AlertNotifierWhereInput>>of(new ArrayList<>());
    }
    try {
      this.NOT.get().add(NOTItem);
    } catch (java.util.NoSuchElementException e) {
      // this can never happen, as we make sure above that the value is present
    }
    return this;
  }

   /**
   * Get NOT
   * @return NOT
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public List<AlertNotifierWhereInput> getNOT() {
        return NOT.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_N_O_T)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<List<AlertNotifierWhereInput>> getNOT_JsonNullable() {
    return NOT;
  }
  
  @JsonProperty(JSON_PROPERTY_N_O_T)
  public void setNOT_JsonNullable(JsonNullable<List<AlertNotifierWhereInput>> NOT) {
    this.NOT = NOT;
  }

  public void setNOT(List<AlertNotifierWhereInput> NOT) {
    this.NOT = JsonNullable.<List<AlertNotifierWhereInput>>of(NOT);
  }


  public AlertNotifierWhereInput OR(List<AlertNotifierWhereInput> OR) {
    this.OR = JsonNullable.<List<AlertNotifierWhereInput>>of(OR);
    return this;
  }

  public AlertNotifierWhereInput addORItem(AlertNotifierWhereInput ORItem) {
    if (this.OR == null || !this.OR.isPresent()) {
      this.OR = JsonNullable.<List<AlertNotifierWhereInput>>of(new ArrayList<>());
    }
    try {
      this.OR.get().add(ORItem);
    } catch (java.util.NoSuchElementException e) {
      // this can never happen, as we make sure above that the value is present
    }
    return this;
  }

   /**
   * Get OR
   * @return OR
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public List<AlertNotifierWhereInput> getOR() {
        return OR.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_O_R)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<List<AlertNotifierWhereInput>> getOR_JsonNullable() {
    return OR;
  }
  
  @JsonProperty(JSON_PROPERTY_O_R)
  public void setOR_JsonNullable(JsonNullable<List<AlertNotifierWhereInput>> OR) {
    this.OR = OR;
  }

  public void setOR(List<AlertNotifierWhereInput> OR) {
    this.OR = JsonNullable.<List<AlertNotifierWhereInput>>of(OR);
  }


  public AlertNotifierWhereInput password(String password) {
    this.password = JsonNullable.<String>of(password);
    return this;
  }

   /**
   * Get password
   * @return password
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getPassword() {
        return password.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_PASSWORD)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getPassword_JsonNullable() {
    return password;
  }
  
  @JsonProperty(JSON_PROPERTY_PASSWORD)
  public void setPassword_JsonNullable(JsonNullable<String> password) {
    this.password = password;
  }

  public void setPassword(String password) {
    this.password = JsonNullable.<String>of(password);
  }


  public AlertNotifierWhereInput passwordContains(String passwordContains) {
    this.passwordContains = JsonNullable.<String>of(passwordContains);
    return this;
  }

   /**
   * Get passwordContains
   * @return passwordContains
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getPasswordContains() {
        return passwordContains.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_PASSWORD_CONTAINS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getPasswordContains_JsonNullable() {
    return passwordContains;
  }
  
  @JsonProperty(JSON_PROPERTY_PASSWORD_CONTAINS)
  public void setPasswordContains_JsonNullable(JsonNullable<String> passwordContains) {
    this.passwordContains = passwordContains;
  }

  public void setPasswordContains(String passwordContains) {
    this.passwordContains = JsonNullable.<String>of(passwordContains);
  }


  public AlertNotifierWhereInput passwordEndsWith(String passwordEndsWith) {
    this.passwordEndsWith = JsonNullable.<String>of(passwordEndsWith);
    return this;
  }

   /**
   * Get passwordEndsWith
   * @return passwordEndsWith
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getPasswordEndsWith() {
        return passwordEndsWith.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_PASSWORD_ENDS_WITH)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getPasswordEndsWith_JsonNullable() {
    return passwordEndsWith;
  }
  
  @JsonProperty(JSON_PROPERTY_PASSWORD_ENDS_WITH)
  public void setPasswordEndsWith_JsonNullable(JsonNullable<String> passwordEndsWith) {
    this.passwordEndsWith = passwordEndsWith;
  }

  public void setPasswordEndsWith(String passwordEndsWith) {
    this.passwordEndsWith = JsonNullable.<String>of(passwordEndsWith);
  }


  public AlertNotifierWhereInput passwordGt(String passwordGt) {
    this.passwordGt = JsonNullable.<String>of(passwordGt);
    return this;
  }

   /**
   * Get passwordGt
   * @return passwordGt
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getPasswordGt() {
        return passwordGt.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_PASSWORD_GT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getPasswordGt_JsonNullable() {
    return passwordGt;
  }
  
  @JsonProperty(JSON_PROPERTY_PASSWORD_GT)
  public void setPasswordGt_JsonNullable(JsonNullable<String> passwordGt) {
    this.passwordGt = passwordGt;
  }

  public void setPasswordGt(String passwordGt) {
    this.passwordGt = JsonNullable.<String>of(passwordGt);
  }


  public AlertNotifierWhereInput passwordGte(String passwordGte) {
    this.passwordGte = JsonNullable.<String>of(passwordGte);
    return this;
  }

   /**
   * Get passwordGte
   * @return passwordGte
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getPasswordGte() {
        return passwordGte.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_PASSWORD_GTE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getPasswordGte_JsonNullable() {
    return passwordGte;
  }
  
  @JsonProperty(JSON_PROPERTY_PASSWORD_GTE)
  public void setPasswordGte_JsonNullable(JsonNullable<String> passwordGte) {
    this.passwordGte = passwordGte;
  }

  public void setPasswordGte(String passwordGte) {
    this.passwordGte = JsonNullable.<String>of(passwordGte);
  }


  public AlertNotifierWhereInput passwordIn(List<String> passwordIn) {
    this.passwordIn = JsonNullable.<List<String>>of(passwordIn);
    return this;
  }

  public AlertNotifierWhereInput addPasswordInItem(String passwordInItem) {
    if (this.passwordIn == null || !this.passwordIn.isPresent()) {
      this.passwordIn = JsonNullable.<List<String>>of(new ArrayList<>());
    }
    try {
      this.passwordIn.get().add(passwordInItem);
    } catch (java.util.NoSuchElementException e) {
      // this can never happen, as we make sure above that the value is present
    }
    return this;
  }

   /**
   * Get passwordIn
   * @return passwordIn
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public List<String> getPasswordIn() {
        return passwordIn.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_PASSWORD_IN)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<List<String>> getPasswordIn_JsonNullable() {
    return passwordIn;
  }
  
  @JsonProperty(JSON_PROPERTY_PASSWORD_IN)
  public void setPasswordIn_JsonNullable(JsonNullable<List<String>> passwordIn) {
    this.passwordIn = passwordIn;
  }

  public void setPasswordIn(List<String> passwordIn) {
    this.passwordIn = JsonNullable.<List<String>>of(passwordIn);
  }


  public AlertNotifierWhereInput passwordLt(String passwordLt) {
    this.passwordLt = JsonNullable.<String>of(passwordLt);
    return this;
  }

   /**
   * Get passwordLt
   * @return passwordLt
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getPasswordLt() {
        return passwordLt.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_PASSWORD_LT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getPasswordLt_JsonNullable() {
    return passwordLt;
  }
  
  @JsonProperty(JSON_PROPERTY_PASSWORD_LT)
  public void setPasswordLt_JsonNullable(JsonNullable<String> passwordLt) {
    this.passwordLt = passwordLt;
  }

  public void setPasswordLt(String passwordLt) {
    this.passwordLt = JsonNullable.<String>of(passwordLt);
  }


  public AlertNotifierWhereInput passwordLte(String passwordLte) {
    this.passwordLte = JsonNullable.<String>of(passwordLte);
    return this;
  }

   /**
   * Get passwordLte
   * @return passwordLte
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getPasswordLte() {
        return passwordLte.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_PASSWORD_LTE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getPasswordLte_JsonNullable() {
    return passwordLte;
  }
  
  @JsonProperty(JSON_PROPERTY_PASSWORD_LTE)
  public void setPasswordLte_JsonNullable(JsonNullable<String> passwordLte) {
    this.passwordLte = passwordLte;
  }

  public void setPasswordLte(String passwordLte) {
    this.passwordLte = JsonNullable.<String>of(passwordLte);
  }


  public AlertNotifierWhereInput passwordNot(String passwordNot) {
    this.passwordNot = JsonNullable.<String>of(passwordNot);
    return this;
  }

   /**
   * Get passwordNot
   * @return passwordNot
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getPasswordNot() {
        return passwordNot.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_PASSWORD_NOT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getPasswordNot_JsonNullable() {
    return passwordNot;
  }
  
  @JsonProperty(JSON_PROPERTY_PASSWORD_NOT)
  public void setPasswordNot_JsonNullable(JsonNullable<String> passwordNot) {
    this.passwordNot = passwordNot;
  }

  public void setPasswordNot(String passwordNot) {
    this.passwordNot = JsonNullable.<String>of(passwordNot);
  }


  public AlertNotifierWhereInput passwordNotContains(String passwordNotContains) {
    this.passwordNotContains = JsonNullable.<String>of(passwordNotContains);
    return this;
  }

   /**
   * Get passwordNotContains
   * @return passwordNotContains
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getPasswordNotContains() {
        return passwordNotContains.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_PASSWORD_NOT_CONTAINS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getPasswordNotContains_JsonNullable() {
    return passwordNotContains;
  }
  
  @JsonProperty(JSON_PROPERTY_PASSWORD_NOT_CONTAINS)
  public void setPasswordNotContains_JsonNullable(JsonNullable<String> passwordNotContains) {
    this.passwordNotContains = passwordNotContains;
  }

  public void setPasswordNotContains(String passwordNotContains) {
    this.passwordNotContains = JsonNullable.<String>of(passwordNotContains);
  }


  public AlertNotifierWhereInput passwordNotEndsWith(String passwordNotEndsWith) {
    this.passwordNotEndsWith = JsonNullable.<String>of(passwordNotEndsWith);
    return this;
  }

   /**
   * Get passwordNotEndsWith
   * @return passwordNotEndsWith
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getPasswordNotEndsWith() {
        return passwordNotEndsWith.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_PASSWORD_NOT_ENDS_WITH)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getPasswordNotEndsWith_JsonNullable() {
    return passwordNotEndsWith;
  }
  
  @JsonProperty(JSON_PROPERTY_PASSWORD_NOT_ENDS_WITH)
  public void setPasswordNotEndsWith_JsonNullable(JsonNullable<String> passwordNotEndsWith) {
    this.passwordNotEndsWith = passwordNotEndsWith;
  }

  public void setPasswordNotEndsWith(String passwordNotEndsWith) {
    this.passwordNotEndsWith = JsonNullable.<String>of(passwordNotEndsWith);
  }


  public AlertNotifierWhereInput passwordNotIn(List<String> passwordNotIn) {
    this.passwordNotIn = JsonNullable.<List<String>>of(passwordNotIn);
    return this;
  }

  public AlertNotifierWhereInput addPasswordNotInItem(String passwordNotInItem) {
    if (this.passwordNotIn == null || !this.passwordNotIn.isPresent()) {
      this.passwordNotIn = JsonNullable.<List<String>>of(new ArrayList<>());
    }
    try {
      this.passwordNotIn.get().add(passwordNotInItem);
    } catch (java.util.NoSuchElementException e) {
      // this can never happen, as we make sure above that the value is present
    }
    return this;
  }

   /**
   * Get passwordNotIn
   * @return passwordNotIn
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public List<String> getPasswordNotIn() {
        return passwordNotIn.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_PASSWORD_NOT_IN)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<List<String>> getPasswordNotIn_JsonNullable() {
    return passwordNotIn;
  }
  
  @JsonProperty(JSON_PROPERTY_PASSWORD_NOT_IN)
  public void setPasswordNotIn_JsonNullable(JsonNullable<List<String>> passwordNotIn) {
    this.passwordNotIn = passwordNotIn;
  }

  public void setPasswordNotIn(List<String> passwordNotIn) {
    this.passwordNotIn = JsonNullable.<List<String>>of(passwordNotIn);
  }


  public AlertNotifierWhereInput passwordNotStartsWith(String passwordNotStartsWith) {
    this.passwordNotStartsWith = JsonNullable.<String>of(passwordNotStartsWith);
    return this;
  }

   /**
   * Get passwordNotStartsWith
   * @return passwordNotStartsWith
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getPasswordNotStartsWith() {
        return passwordNotStartsWith.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_PASSWORD_NOT_STARTS_WITH)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getPasswordNotStartsWith_JsonNullable() {
    return passwordNotStartsWith;
  }
  
  @JsonProperty(JSON_PROPERTY_PASSWORD_NOT_STARTS_WITH)
  public void setPasswordNotStartsWith_JsonNullable(JsonNullable<String> passwordNotStartsWith) {
    this.passwordNotStartsWith = passwordNotStartsWith;
  }

  public void setPasswordNotStartsWith(String passwordNotStartsWith) {
    this.passwordNotStartsWith = JsonNullable.<String>of(passwordNotStartsWith);
  }


  public AlertNotifierWhereInput passwordStartsWith(String passwordStartsWith) {
    this.passwordStartsWith = JsonNullable.<String>of(passwordStartsWith);
    return this;
  }

   /**
   * Get passwordStartsWith
   * @return passwordStartsWith
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getPasswordStartsWith() {
        return passwordStartsWith.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_PASSWORD_STARTS_WITH)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getPasswordStartsWith_JsonNullable() {
    return passwordStartsWith;
  }
  
  @JsonProperty(JSON_PROPERTY_PASSWORD_STARTS_WITH)
  public void setPasswordStartsWith_JsonNullable(JsonNullable<String> passwordStartsWith) {
    this.passwordStartsWith = passwordStartsWith;
  }

  public void setPasswordStartsWith(String passwordStartsWith) {
    this.passwordStartsWith = JsonNullable.<String>of(passwordStartsWith);
  }


  public AlertNotifierWhereInput securityMode(NotifierSecurityMode securityMode) {
    this.securityMode = JsonNullable.<NotifierSecurityMode>of(securityMode);
    return this;
  }

   /**
   * Get securityMode
   * @return securityMode
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public NotifierSecurityMode getSecurityMode() {
        return securityMode.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_SECURITY_MODE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<NotifierSecurityMode> getSecurityMode_JsonNullable() {
    return securityMode;
  }
  
  @JsonProperty(JSON_PROPERTY_SECURITY_MODE)
  public void setSecurityMode_JsonNullable(JsonNullable<NotifierSecurityMode> securityMode) {
    this.securityMode = securityMode;
  }

  public void setSecurityMode(NotifierSecurityMode securityMode) {
    this.securityMode = JsonNullable.<NotifierSecurityMode>of(securityMode);
  }


  public AlertNotifierWhereInput securityModeIn(List<NotifierSecurityMode> securityModeIn) {
    this.securityModeIn = JsonNullable.<List<NotifierSecurityMode>>of(securityModeIn);
    return this;
  }

  public AlertNotifierWhereInput addSecurityModeInItem(NotifierSecurityMode securityModeInItem) {
    if (this.securityModeIn == null || !this.securityModeIn.isPresent()) {
      this.securityModeIn = JsonNullable.<List<NotifierSecurityMode>>of(new ArrayList<>());
    }
    try {
      this.securityModeIn.get().add(securityModeInItem);
    } catch (java.util.NoSuchElementException e) {
      // this can never happen, as we make sure above that the value is present
    }
    return this;
  }

   /**
   * Get securityModeIn
   * @return securityModeIn
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public List<NotifierSecurityMode> getSecurityModeIn() {
        return securityModeIn.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_SECURITY_MODE_IN)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<List<NotifierSecurityMode>> getSecurityModeIn_JsonNullable() {
    return securityModeIn;
  }
  
  @JsonProperty(JSON_PROPERTY_SECURITY_MODE_IN)
  public void setSecurityModeIn_JsonNullable(JsonNullable<List<NotifierSecurityMode>> securityModeIn) {
    this.securityModeIn = securityModeIn;
  }

  public void setSecurityModeIn(List<NotifierSecurityMode> securityModeIn) {
    this.securityModeIn = JsonNullable.<List<NotifierSecurityMode>>of(securityModeIn);
  }


  public AlertNotifierWhereInput securityModeNot(NotifierSecurityMode securityModeNot) {
    this.securityModeNot = JsonNullable.<NotifierSecurityMode>of(securityModeNot);
    return this;
  }

   /**
   * Get securityModeNot
   * @return securityModeNot
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public NotifierSecurityMode getSecurityModeNot() {
        return securityModeNot.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_SECURITY_MODE_NOT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<NotifierSecurityMode> getSecurityModeNot_JsonNullable() {
    return securityModeNot;
  }
  
  @JsonProperty(JSON_PROPERTY_SECURITY_MODE_NOT)
  public void setSecurityModeNot_JsonNullable(JsonNullable<NotifierSecurityMode> securityModeNot) {
    this.securityModeNot = securityModeNot;
  }

  public void setSecurityModeNot(NotifierSecurityMode securityModeNot) {
    this.securityModeNot = JsonNullable.<NotifierSecurityMode>of(securityModeNot);
  }


  public AlertNotifierWhereInput securityModeNotIn(List<NotifierSecurityMode> securityModeNotIn) {
    this.securityModeNotIn = JsonNullable.<List<NotifierSecurityMode>>of(securityModeNotIn);
    return this;
  }

  public AlertNotifierWhereInput addSecurityModeNotInItem(NotifierSecurityMode securityModeNotInItem) {
    if (this.securityModeNotIn == null || !this.securityModeNotIn.isPresent()) {
      this.securityModeNotIn = JsonNullable.<List<NotifierSecurityMode>>of(new ArrayList<>());
    }
    try {
      this.securityModeNotIn.get().add(securityModeNotInItem);
    } catch (java.util.NoSuchElementException e) {
      // this can never happen, as we make sure above that the value is present
    }
    return this;
  }

   /**
   * Get securityModeNotIn
   * @return securityModeNotIn
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public List<NotifierSecurityMode> getSecurityModeNotIn() {
        return securityModeNotIn.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_SECURITY_MODE_NOT_IN)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<List<NotifierSecurityMode>> getSecurityModeNotIn_JsonNullable() {
    return securityModeNotIn;
  }
  
  @JsonProperty(JSON_PROPERTY_SECURITY_MODE_NOT_IN)
  public void setSecurityModeNotIn_JsonNullable(JsonNullable<List<NotifierSecurityMode>> securityModeNotIn) {
    this.securityModeNotIn = securityModeNotIn;
  }

  public void setSecurityModeNotIn(List<NotifierSecurityMode> securityModeNotIn) {
    this.securityModeNotIn = JsonNullable.<List<NotifierSecurityMode>>of(securityModeNotIn);
  }


  public AlertNotifierWhereInput smtpServerHost(String smtpServerHost) {
    this.smtpServerHost = JsonNullable.<String>of(smtpServerHost);
    return this;
  }

   /**
   * Get smtpServerHost
   * @return smtpServerHost
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getSmtpServerHost() {
        return smtpServerHost.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_SMTP_SERVER_HOST)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getSmtpServerHost_JsonNullable() {
    return smtpServerHost;
  }
  
  @JsonProperty(JSON_PROPERTY_SMTP_SERVER_HOST)
  public void setSmtpServerHost_JsonNullable(JsonNullable<String> smtpServerHost) {
    this.smtpServerHost = smtpServerHost;
  }

  public void setSmtpServerHost(String smtpServerHost) {
    this.smtpServerHost = JsonNullable.<String>of(smtpServerHost);
  }


  public AlertNotifierWhereInput smtpServerHostContains(String smtpServerHostContains) {
    this.smtpServerHostContains = JsonNullable.<String>of(smtpServerHostContains);
    return this;
  }

   /**
   * Get smtpServerHostContains
   * @return smtpServerHostContains
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getSmtpServerHostContains() {
        return smtpServerHostContains.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_SMTP_SERVER_HOST_CONTAINS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getSmtpServerHostContains_JsonNullable() {
    return smtpServerHostContains;
  }
  
  @JsonProperty(JSON_PROPERTY_SMTP_SERVER_HOST_CONTAINS)
  public void setSmtpServerHostContains_JsonNullable(JsonNullable<String> smtpServerHostContains) {
    this.smtpServerHostContains = smtpServerHostContains;
  }

  public void setSmtpServerHostContains(String smtpServerHostContains) {
    this.smtpServerHostContains = JsonNullable.<String>of(smtpServerHostContains);
  }


  public AlertNotifierWhereInput smtpServerHostEndsWith(String smtpServerHostEndsWith) {
    this.smtpServerHostEndsWith = JsonNullable.<String>of(smtpServerHostEndsWith);
    return this;
  }

   /**
   * Get smtpServerHostEndsWith
   * @return smtpServerHostEndsWith
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getSmtpServerHostEndsWith() {
        return smtpServerHostEndsWith.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_SMTP_SERVER_HOST_ENDS_WITH)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getSmtpServerHostEndsWith_JsonNullable() {
    return smtpServerHostEndsWith;
  }
  
  @JsonProperty(JSON_PROPERTY_SMTP_SERVER_HOST_ENDS_WITH)
  public void setSmtpServerHostEndsWith_JsonNullable(JsonNullable<String> smtpServerHostEndsWith) {
    this.smtpServerHostEndsWith = smtpServerHostEndsWith;
  }

  public void setSmtpServerHostEndsWith(String smtpServerHostEndsWith) {
    this.smtpServerHostEndsWith = JsonNullable.<String>of(smtpServerHostEndsWith);
  }


  public AlertNotifierWhereInput smtpServerHostGt(String smtpServerHostGt) {
    this.smtpServerHostGt = JsonNullable.<String>of(smtpServerHostGt);
    return this;
  }

   /**
   * Get smtpServerHostGt
   * @return smtpServerHostGt
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getSmtpServerHostGt() {
        return smtpServerHostGt.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_SMTP_SERVER_HOST_GT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getSmtpServerHostGt_JsonNullable() {
    return smtpServerHostGt;
  }
  
  @JsonProperty(JSON_PROPERTY_SMTP_SERVER_HOST_GT)
  public void setSmtpServerHostGt_JsonNullable(JsonNullable<String> smtpServerHostGt) {
    this.smtpServerHostGt = smtpServerHostGt;
  }

  public void setSmtpServerHostGt(String smtpServerHostGt) {
    this.smtpServerHostGt = JsonNullable.<String>of(smtpServerHostGt);
  }


  public AlertNotifierWhereInput smtpServerHostGte(String smtpServerHostGte) {
    this.smtpServerHostGte = JsonNullable.<String>of(smtpServerHostGte);
    return this;
  }

   /**
   * Get smtpServerHostGte
   * @return smtpServerHostGte
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getSmtpServerHostGte() {
        return smtpServerHostGte.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_SMTP_SERVER_HOST_GTE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getSmtpServerHostGte_JsonNullable() {
    return smtpServerHostGte;
  }
  
  @JsonProperty(JSON_PROPERTY_SMTP_SERVER_HOST_GTE)
  public void setSmtpServerHostGte_JsonNullable(JsonNullable<String> smtpServerHostGte) {
    this.smtpServerHostGte = smtpServerHostGte;
  }

  public void setSmtpServerHostGte(String smtpServerHostGte) {
    this.smtpServerHostGte = JsonNullable.<String>of(smtpServerHostGte);
  }


  public AlertNotifierWhereInput smtpServerHostIn(List<String> smtpServerHostIn) {
    this.smtpServerHostIn = JsonNullable.<List<String>>of(smtpServerHostIn);
    return this;
  }

  public AlertNotifierWhereInput addSmtpServerHostInItem(String smtpServerHostInItem) {
    if (this.smtpServerHostIn == null || !this.smtpServerHostIn.isPresent()) {
      this.smtpServerHostIn = JsonNullable.<List<String>>of(new ArrayList<>());
    }
    try {
      this.smtpServerHostIn.get().add(smtpServerHostInItem);
    } catch (java.util.NoSuchElementException e) {
      // this can never happen, as we make sure above that the value is present
    }
    return this;
  }

   /**
   * Get smtpServerHostIn
   * @return smtpServerHostIn
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public List<String> getSmtpServerHostIn() {
        return smtpServerHostIn.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_SMTP_SERVER_HOST_IN)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<List<String>> getSmtpServerHostIn_JsonNullable() {
    return smtpServerHostIn;
  }
  
  @JsonProperty(JSON_PROPERTY_SMTP_SERVER_HOST_IN)
  public void setSmtpServerHostIn_JsonNullable(JsonNullable<List<String>> smtpServerHostIn) {
    this.smtpServerHostIn = smtpServerHostIn;
  }

  public void setSmtpServerHostIn(List<String> smtpServerHostIn) {
    this.smtpServerHostIn = JsonNullable.<List<String>>of(smtpServerHostIn);
  }


  public AlertNotifierWhereInput smtpServerHostLt(String smtpServerHostLt) {
    this.smtpServerHostLt = JsonNullable.<String>of(smtpServerHostLt);
    return this;
  }

   /**
   * Get smtpServerHostLt
   * @return smtpServerHostLt
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getSmtpServerHostLt() {
        return smtpServerHostLt.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_SMTP_SERVER_HOST_LT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getSmtpServerHostLt_JsonNullable() {
    return smtpServerHostLt;
  }
  
  @JsonProperty(JSON_PROPERTY_SMTP_SERVER_HOST_LT)
  public void setSmtpServerHostLt_JsonNullable(JsonNullable<String> smtpServerHostLt) {
    this.smtpServerHostLt = smtpServerHostLt;
  }

  public void setSmtpServerHostLt(String smtpServerHostLt) {
    this.smtpServerHostLt = JsonNullable.<String>of(smtpServerHostLt);
  }


  public AlertNotifierWhereInput smtpServerHostLte(String smtpServerHostLte) {
    this.smtpServerHostLte = JsonNullable.<String>of(smtpServerHostLte);
    return this;
  }

   /**
   * Get smtpServerHostLte
   * @return smtpServerHostLte
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getSmtpServerHostLte() {
        return smtpServerHostLte.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_SMTP_SERVER_HOST_LTE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getSmtpServerHostLte_JsonNullable() {
    return smtpServerHostLte;
  }
  
  @JsonProperty(JSON_PROPERTY_SMTP_SERVER_HOST_LTE)
  public void setSmtpServerHostLte_JsonNullable(JsonNullable<String> smtpServerHostLte) {
    this.smtpServerHostLte = smtpServerHostLte;
  }

  public void setSmtpServerHostLte(String smtpServerHostLte) {
    this.smtpServerHostLte = JsonNullable.<String>of(smtpServerHostLte);
  }


  public AlertNotifierWhereInput smtpServerHostNot(String smtpServerHostNot) {
    this.smtpServerHostNot = JsonNullable.<String>of(smtpServerHostNot);
    return this;
  }

   /**
   * Get smtpServerHostNot
   * @return smtpServerHostNot
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getSmtpServerHostNot() {
        return smtpServerHostNot.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_SMTP_SERVER_HOST_NOT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getSmtpServerHostNot_JsonNullable() {
    return smtpServerHostNot;
  }
  
  @JsonProperty(JSON_PROPERTY_SMTP_SERVER_HOST_NOT)
  public void setSmtpServerHostNot_JsonNullable(JsonNullable<String> smtpServerHostNot) {
    this.smtpServerHostNot = smtpServerHostNot;
  }

  public void setSmtpServerHostNot(String smtpServerHostNot) {
    this.smtpServerHostNot = JsonNullable.<String>of(smtpServerHostNot);
  }


  public AlertNotifierWhereInput smtpServerHostNotContains(String smtpServerHostNotContains) {
    this.smtpServerHostNotContains = JsonNullable.<String>of(smtpServerHostNotContains);
    return this;
  }

   /**
   * Get smtpServerHostNotContains
   * @return smtpServerHostNotContains
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getSmtpServerHostNotContains() {
        return smtpServerHostNotContains.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_SMTP_SERVER_HOST_NOT_CONTAINS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getSmtpServerHostNotContains_JsonNullable() {
    return smtpServerHostNotContains;
  }
  
  @JsonProperty(JSON_PROPERTY_SMTP_SERVER_HOST_NOT_CONTAINS)
  public void setSmtpServerHostNotContains_JsonNullable(JsonNullable<String> smtpServerHostNotContains) {
    this.smtpServerHostNotContains = smtpServerHostNotContains;
  }

  public void setSmtpServerHostNotContains(String smtpServerHostNotContains) {
    this.smtpServerHostNotContains = JsonNullable.<String>of(smtpServerHostNotContains);
  }


  public AlertNotifierWhereInput smtpServerHostNotEndsWith(String smtpServerHostNotEndsWith) {
    this.smtpServerHostNotEndsWith = JsonNullable.<String>of(smtpServerHostNotEndsWith);
    return this;
  }

   /**
   * Get smtpServerHostNotEndsWith
   * @return smtpServerHostNotEndsWith
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getSmtpServerHostNotEndsWith() {
        return smtpServerHostNotEndsWith.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_SMTP_SERVER_HOST_NOT_ENDS_WITH)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getSmtpServerHostNotEndsWith_JsonNullable() {
    return smtpServerHostNotEndsWith;
  }
  
  @JsonProperty(JSON_PROPERTY_SMTP_SERVER_HOST_NOT_ENDS_WITH)
  public void setSmtpServerHostNotEndsWith_JsonNullable(JsonNullable<String> smtpServerHostNotEndsWith) {
    this.smtpServerHostNotEndsWith = smtpServerHostNotEndsWith;
  }

  public void setSmtpServerHostNotEndsWith(String smtpServerHostNotEndsWith) {
    this.smtpServerHostNotEndsWith = JsonNullable.<String>of(smtpServerHostNotEndsWith);
  }


  public AlertNotifierWhereInput smtpServerHostNotIn(List<String> smtpServerHostNotIn) {
    this.smtpServerHostNotIn = JsonNullable.<List<String>>of(smtpServerHostNotIn);
    return this;
  }

  public AlertNotifierWhereInput addSmtpServerHostNotInItem(String smtpServerHostNotInItem) {
    if (this.smtpServerHostNotIn == null || !this.smtpServerHostNotIn.isPresent()) {
      this.smtpServerHostNotIn = JsonNullable.<List<String>>of(new ArrayList<>());
    }
    try {
      this.smtpServerHostNotIn.get().add(smtpServerHostNotInItem);
    } catch (java.util.NoSuchElementException e) {
      // this can never happen, as we make sure above that the value is present
    }
    return this;
  }

   /**
   * Get smtpServerHostNotIn
   * @return smtpServerHostNotIn
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public List<String> getSmtpServerHostNotIn() {
        return smtpServerHostNotIn.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_SMTP_SERVER_HOST_NOT_IN)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<List<String>> getSmtpServerHostNotIn_JsonNullable() {
    return smtpServerHostNotIn;
  }
  
  @JsonProperty(JSON_PROPERTY_SMTP_SERVER_HOST_NOT_IN)
  public void setSmtpServerHostNotIn_JsonNullable(JsonNullable<List<String>> smtpServerHostNotIn) {
    this.smtpServerHostNotIn = smtpServerHostNotIn;
  }

  public void setSmtpServerHostNotIn(List<String> smtpServerHostNotIn) {
    this.smtpServerHostNotIn = JsonNullable.<List<String>>of(smtpServerHostNotIn);
  }


  public AlertNotifierWhereInput smtpServerHostNotStartsWith(String smtpServerHostNotStartsWith) {
    this.smtpServerHostNotStartsWith = JsonNullable.<String>of(smtpServerHostNotStartsWith);
    return this;
  }

   /**
   * Get smtpServerHostNotStartsWith
   * @return smtpServerHostNotStartsWith
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getSmtpServerHostNotStartsWith() {
        return smtpServerHostNotStartsWith.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_SMTP_SERVER_HOST_NOT_STARTS_WITH)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getSmtpServerHostNotStartsWith_JsonNullable() {
    return smtpServerHostNotStartsWith;
  }
  
  @JsonProperty(JSON_PROPERTY_SMTP_SERVER_HOST_NOT_STARTS_WITH)
  public void setSmtpServerHostNotStartsWith_JsonNullable(JsonNullable<String> smtpServerHostNotStartsWith) {
    this.smtpServerHostNotStartsWith = smtpServerHostNotStartsWith;
  }

  public void setSmtpServerHostNotStartsWith(String smtpServerHostNotStartsWith) {
    this.smtpServerHostNotStartsWith = JsonNullable.<String>of(smtpServerHostNotStartsWith);
  }


  public AlertNotifierWhereInput smtpServerHostStartsWith(String smtpServerHostStartsWith) {
    this.smtpServerHostStartsWith = JsonNullable.<String>of(smtpServerHostStartsWith);
    return this;
  }

   /**
   * Get smtpServerHostStartsWith
   * @return smtpServerHostStartsWith
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getSmtpServerHostStartsWith() {
        return smtpServerHostStartsWith.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_SMTP_SERVER_HOST_STARTS_WITH)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getSmtpServerHostStartsWith_JsonNullable() {
    return smtpServerHostStartsWith;
  }
  
  @JsonProperty(JSON_PROPERTY_SMTP_SERVER_HOST_STARTS_WITH)
  public void setSmtpServerHostStartsWith_JsonNullable(JsonNullable<String> smtpServerHostStartsWith) {
    this.smtpServerHostStartsWith = smtpServerHostStartsWith;
  }

  public void setSmtpServerHostStartsWith(String smtpServerHostStartsWith) {
    this.smtpServerHostStartsWith = JsonNullable.<String>of(smtpServerHostStartsWith);
  }


  public AlertNotifierWhereInput smtpServerPort(Double smtpServerPort) {
    this.smtpServerPort = JsonNullable.<Double>of(smtpServerPort);
    return this;
  }

   /**
   * Get smtpServerPort
   * @return smtpServerPort
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public Double getSmtpServerPort() {
        return smtpServerPort.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_SMTP_SERVER_PORT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<Double> getSmtpServerPort_JsonNullable() {
    return smtpServerPort;
  }
  
  @JsonProperty(JSON_PROPERTY_SMTP_SERVER_PORT)
  public void setSmtpServerPort_JsonNullable(JsonNullable<Double> smtpServerPort) {
    this.smtpServerPort = smtpServerPort;
  }

  public void setSmtpServerPort(Double smtpServerPort) {
    this.smtpServerPort = JsonNullable.<Double>of(smtpServerPort);
  }


  public AlertNotifierWhereInput smtpServerPortGt(Double smtpServerPortGt) {
    this.smtpServerPortGt = JsonNullable.<Double>of(smtpServerPortGt);
    return this;
  }

   /**
   * Get smtpServerPortGt
   * @return smtpServerPortGt
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public Double getSmtpServerPortGt() {
        return smtpServerPortGt.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_SMTP_SERVER_PORT_GT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<Double> getSmtpServerPortGt_JsonNullable() {
    return smtpServerPortGt;
  }
  
  @JsonProperty(JSON_PROPERTY_SMTP_SERVER_PORT_GT)
  public void setSmtpServerPortGt_JsonNullable(JsonNullable<Double> smtpServerPortGt) {
    this.smtpServerPortGt = smtpServerPortGt;
  }

  public void setSmtpServerPortGt(Double smtpServerPortGt) {
    this.smtpServerPortGt = JsonNullable.<Double>of(smtpServerPortGt);
  }


  public AlertNotifierWhereInput smtpServerPortGte(Double smtpServerPortGte) {
    this.smtpServerPortGte = JsonNullable.<Double>of(smtpServerPortGte);
    return this;
  }

   /**
   * Get smtpServerPortGte
   * @return smtpServerPortGte
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public Double getSmtpServerPortGte() {
        return smtpServerPortGte.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_SMTP_SERVER_PORT_GTE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<Double> getSmtpServerPortGte_JsonNullable() {
    return smtpServerPortGte;
  }
  
  @JsonProperty(JSON_PROPERTY_SMTP_SERVER_PORT_GTE)
  public void setSmtpServerPortGte_JsonNullable(JsonNullable<Double> smtpServerPortGte) {
    this.smtpServerPortGte = smtpServerPortGte;
  }

  public void setSmtpServerPortGte(Double smtpServerPortGte) {
    this.smtpServerPortGte = JsonNullable.<Double>of(smtpServerPortGte);
  }


  public AlertNotifierWhereInput smtpServerPortIn(List<Double> smtpServerPortIn) {
    this.smtpServerPortIn = JsonNullable.<List<Double>>of(smtpServerPortIn);
    return this;
  }

  public AlertNotifierWhereInput addSmtpServerPortInItem(Double smtpServerPortInItem) {
    if (this.smtpServerPortIn == null || !this.smtpServerPortIn.isPresent()) {
      this.smtpServerPortIn = JsonNullable.<List<Double>>of(new ArrayList<>());
    }
    try {
      this.smtpServerPortIn.get().add(smtpServerPortInItem);
    } catch (java.util.NoSuchElementException e) {
      // this can never happen, as we make sure above that the value is present
    }
    return this;
  }

   /**
   * Get smtpServerPortIn
   * @return smtpServerPortIn
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public List<Double> getSmtpServerPortIn() {
        return smtpServerPortIn.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_SMTP_SERVER_PORT_IN)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<List<Double>> getSmtpServerPortIn_JsonNullable() {
    return smtpServerPortIn;
  }
  
  @JsonProperty(JSON_PROPERTY_SMTP_SERVER_PORT_IN)
  public void setSmtpServerPortIn_JsonNullable(JsonNullable<List<Double>> smtpServerPortIn) {
    this.smtpServerPortIn = smtpServerPortIn;
  }

  public void setSmtpServerPortIn(List<Double> smtpServerPortIn) {
    this.smtpServerPortIn = JsonNullable.<List<Double>>of(smtpServerPortIn);
  }


  public AlertNotifierWhereInput smtpServerPortLt(Double smtpServerPortLt) {
    this.smtpServerPortLt = JsonNullable.<Double>of(smtpServerPortLt);
    return this;
  }

   /**
   * Get smtpServerPortLt
   * @return smtpServerPortLt
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public Double getSmtpServerPortLt() {
        return smtpServerPortLt.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_SMTP_SERVER_PORT_LT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<Double> getSmtpServerPortLt_JsonNullable() {
    return smtpServerPortLt;
  }
  
  @JsonProperty(JSON_PROPERTY_SMTP_SERVER_PORT_LT)
  public void setSmtpServerPortLt_JsonNullable(JsonNullable<Double> smtpServerPortLt) {
    this.smtpServerPortLt = smtpServerPortLt;
  }

  public void setSmtpServerPortLt(Double smtpServerPortLt) {
    this.smtpServerPortLt = JsonNullable.<Double>of(smtpServerPortLt);
  }


  public AlertNotifierWhereInput smtpServerPortLte(Double smtpServerPortLte) {
    this.smtpServerPortLte = JsonNullable.<Double>of(smtpServerPortLte);
    return this;
  }

   /**
   * Get smtpServerPortLte
   * @return smtpServerPortLte
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public Double getSmtpServerPortLte() {
        return smtpServerPortLte.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_SMTP_SERVER_PORT_LTE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<Double> getSmtpServerPortLte_JsonNullable() {
    return smtpServerPortLte;
  }
  
  @JsonProperty(JSON_PROPERTY_SMTP_SERVER_PORT_LTE)
  public void setSmtpServerPortLte_JsonNullable(JsonNullable<Double> smtpServerPortLte) {
    this.smtpServerPortLte = smtpServerPortLte;
  }

  public void setSmtpServerPortLte(Double smtpServerPortLte) {
    this.smtpServerPortLte = JsonNullable.<Double>of(smtpServerPortLte);
  }


  public AlertNotifierWhereInput smtpServerPortNot(Double smtpServerPortNot) {
    this.smtpServerPortNot = JsonNullable.<Double>of(smtpServerPortNot);
    return this;
  }

   /**
   * Get smtpServerPortNot
   * @return smtpServerPortNot
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public Double getSmtpServerPortNot() {
        return smtpServerPortNot.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_SMTP_SERVER_PORT_NOT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<Double> getSmtpServerPortNot_JsonNullable() {
    return smtpServerPortNot;
  }
  
  @JsonProperty(JSON_PROPERTY_SMTP_SERVER_PORT_NOT)
  public void setSmtpServerPortNot_JsonNullable(JsonNullable<Double> smtpServerPortNot) {
    this.smtpServerPortNot = smtpServerPortNot;
  }

  public void setSmtpServerPortNot(Double smtpServerPortNot) {
    this.smtpServerPortNot = JsonNullable.<Double>of(smtpServerPortNot);
  }


  public AlertNotifierWhereInput smtpServerPortNotIn(List<Double> smtpServerPortNotIn) {
    this.smtpServerPortNotIn = JsonNullable.<List<Double>>of(smtpServerPortNotIn);
    return this;
  }

  public AlertNotifierWhereInput addSmtpServerPortNotInItem(Double smtpServerPortNotInItem) {
    if (this.smtpServerPortNotIn == null || !this.smtpServerPortNotIn.isPresent()) {
      this.smtpServerPortNotIn = JsonNullable.<List<Double>>of(new ArrayList<>());
    }
    try {
      this.smtpServerPortNotIn.get().add(smtpServerPortNotInItem);
    } catch (java.util.NoSuchElementException e) {
      // this can never happen, as we make sure above that the value is present
    }
    return this;
  }

   /**
   * Get smtpServerPortNotIn
   * @return smtpServerPortNotIn
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public List<Double> getSmtpServerPortNotIn() {
        return smtpServerPortNotIn.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_SMTP_SERVER_PORT_NOT_IN)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<List<Double>> getSmtpServerPortNotIn_JsonNullable() {
    return smtpServerPortNotIn;
  }
  
  @JsonProperty(JSON_PROPERTY_SMTP_SERVER_PORT_NOT_IN)
  public void setSmtpServerPortNotIn_JsonNullable(JsonNullable<List<Double>> smtpServerPortNotIn) {
    this.smtpServerPortNotIn = smtpServerPortNotIn;
  }

  public void setSmtpServerPortNotIn(List<Double> smtpServerPortNotIn) {
    this.smtpServerPortNotIn = JsonNullable.<List<Double>>of(smtpServerPortNotIn);
  }


  public AlertNotifierWhereInput username(String username) {
    this.username = JsonNullable.<String>of(username);
    return this;
  }

   /**
   * Get username
   * @return username
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getUsername() {
        return username.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_USERNAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getUsername_JsonNullable() {
    return username;
  }
  
  @JsonProperty(JSON_PROPERTY_USERNAME)
  public void setUsername_JsonNullable(JsonNullable<String> username) {
    this.username = username;
  }

  public void setUsername(String username) {
    this.username = JsonNullable.<String>of(username);
  }


  public AlertNotifierWhereInput usernameContains(String usernameContains) {
    this.usernameContains = JsonNullable.<String>of(usernameContains);
    return this;
  }

   /**
   * Get usernameContains
   * @return usernameContains
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getUsernameContains() {
        return usernameContains.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_USERNAME_CONTAINS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getUsernameContains_JsonNullable() {
    return usernameContains;
  }
  
  @JsonProperty(JSON_PROPERTY_USERNAME_CONTAINS)
  public void setUsernameContains_JsonNullable(JsonNullable<String> usernameContains) {
    this.usernameContains = usernameContains;
  }

  public void setUsernameContains(String usernameContains) {
    this.usernameContains = JsonNullable.<String>of(usernameContains);
  }


  public AlertNotifierWhereInput usernameEndsWith(String usernameEndsWith) {
    this.usernameEndsWith = JsonNullable.<String>of(usernameEndsWith);
    return this;
  }

   /**
   * Get usernameEndsWith
   * @return usernameEndsWith
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getUsernameEndsWith() {
        return usernameEndsWith.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_USERNAME_ENDS_WITH)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getUsernameEndsWith_JsonNullable() {
    return usernameEndsWith;
  }
  
  @JsonProperty(JSON_PROPERTY_USERNAME_ENDS_WITH)
  public void setUsernameEndsWith_JsonNullable(JsonNullable<String> usernameEndsWith) {
    this.usernameEndsWith = usernameEndsWith;
  }

  public void setUsernameEndsWith(String usernameEndsWith) {
    this.usernameEndsWith = JsonNullable.<String>of(usernameEndsWith);
  }


  public AlertNotifierWhereInput usernameGt(String usernameGt) {
    this.usernameGt = JsonNullable.<String>of(usernameGt);
    return this;
  }

   /**
   * Get usernameGt
   * @return usernameGt
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getUsernameGt() {
        return usernameGt.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_USERNAME_GT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getUsernameGt_JsonNullable() {
    return usernameGt;
  }
  
  @JsonProperty(JSON_PROPERTY_USERNAME_GT)
  public void setUsernameGt_JsonNullable(JsonNullable<String> usernameGt) {
    this.usernameGt = usernameGt;
  }

  public void setUsernameGt(String usernameGt) {
    this.usernameGt = JsonNullable.<String>of(usernameGt);
  }


  public AlertNotifierWhereInput usernameGte(String usernameGte) {
    this.usernameGte = JsonNullable.<String>of(usernameGte);
    return this;
  }

   /**
   * Get usernameGte
   * @return usernameGte
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getUsernameGte() {
        return usernameGte.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_USERNAME_GTE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getUsernameGte_JsonNullable() {
    return usernameGte;
  }
  
  @JsonProperty(JSON_PROPERTY_USERNAME_GTE)
  public void setUsernameGte_JsonNullable(JsonNullable<String> usernameGte) {
    this.usernameGte = usernameGte;
  }

  public void setUsernameGte(String usernameGte) {
    this.usernameGte = JsonNullable.<String>of(usernameGte);
  }


  public AlertNotifierWhereInput usernameIn(List<String> usernameIn) {
    this.usernameIn = JsonNullable.<List<String>>of(usernameIn);
    return this;
  }

  public AlertNotifierWhereInput addUsernameInItem(String usernameInItem) {
    if (this.usernameIn == null || !this.usernameIn.isPresent()) {
      this.usernameIn = JsonNullable.<List<String>>of(new ArrayList<>());
    }
    try {
      this.usernameIn.get().add(usernameInItem);
    } catch (java.util.NoSuchElementException e) {
      // this can never happen, as we make sure above that the value is present
    }
    return this;
  }

   /**
   * Get usernameIn
   * @return usernameIn
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public List<String> getUsernameIn() {
        return usernameIn.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_USERNAME_IN)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<List<String>> getUsernameIn_JsonNullable() {
    return usernameIn;
  }
  
  @JsonProperty(JSON_PROPERTY_USERNAME_IN)
  public void setUsernameIn_JsonNullable(JsonNullable<List<String>> usernameIn) {
    this.usernameIn = usernameIn;
  }

  public void setUsernameIn(List<String> usernameIn) {
    this.usernameIn = JsonNullable.<List<String>>of(usernameIn);
  }


  public AlertNotifierWhereInput usernameLt(String usernameLt) {
    this.usernameLt = JsonNullable.<String>of(usernameLt);
    return this;
  }

   /**
   * Get usernameLt
   * @return usernameLt
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getUsernameLt() {
        return usernameLt.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_USERNAME_LT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getUsernameLt_JsonNullable() {
    return usernameLt;
  }
  
  @JsonProperty(JSON_PROPERTY_USERNAME_LT)
  public void setUsernameLt_JsonNullable(JsonNullable<String> usernameLt) {
    this.usernameLt = usernameLt;
  }

  public void setUsernameLt(String usernameLt) {
    this.usernameLt = JsonNullable.<String>of(usernameLt);
  }


  public AlertNotifierWhereInput usernameLte(String usernameLte) {
    this.usernameLte = JsonNullable.<String>of(usernameLte);
    return this;
  }

   /**
   * Get usernameLte
   * @return usernameLte
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getUsernameLte() {
        return usernameLte.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_USERNAME_LTE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getUsernameLte_JsonNullable() {
    return usernameLte;
  }
  
  @JsonProperty(JSON_PROPERTY_USERNAME_LTE)
  public void setUsernameLte_JsonNullable(JsonNullable<String> usernameLte) {
    this.usernameLte = usernameLte;
  }

  public void setUsernameLte(String usernameLte) {
    this.usernameLte = JsonNullable.<String>of(usernameLte);
  }


  public AlertNotifierWhereInput usernameNot(String usernameNot) {
    this.usernameNot = JsonNullable.<String>of(usernameNot);
    return this;
  }

   /**
   * Get usernameNot
   * @return usernameNot
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getUsernameNot() {
        return usernameNot.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_USERNAME_NOT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getUsernameNot_JsonNullable() {
    return usernameNot;
  }
  
  @JsonProperty(JSON_PROPERTY_USERNAME_NOT)
  public void setUsernameNot_JsonNullable(JsonNullable<String> usernameNot) {
    this.usernameNot = usernameNot;
  }

  public void setUsernameNot(String usernameNot) {
    this.usernameNot = JsonNullable.<String>of(usernameNot);
  }


  public AlertNotifierWhereInput usernameNotContains(String usernameNotContains) {
    this.usernameNotContains = JsonNullable.<String>of(usernameNotContains);
    return this;
  }

   /**
   * Get usernameNotContains
   * @return usernameNotContains
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getUsernameNotContains() {
        return usernameNotContains.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_USERNAME_NOT_CONTAINS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getUsernameNotContains_JsonNullable() {
    return usernameNotContains;
  }
  
  @JsonProperty(JSON_PROPERTY_USERNAME_NOT_CONTAINS)
  public void setUsernameNotContains_JsonNullable(JsonNullable<String> usernameNotContains) {
    this.usernameNotContains = usernameNotContains;
  }

  public void setUsernameNotContains(String usernameNotContains) {
    this.usernameNotContains = JsonNullable.<String>of(usernameNotContains);
  }


  public AlertNotifierWhereInput usernameNotEndsWith(String usernameNotEndsWith) {
    this.usernameNotEndsWith = JsonNullable.<String>of(usernameNotEndsWith);
    return this;
  }

   /**
   * Get usernameNotEndsWith
   * @return usernameNotEndsWith
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getUsernameNotEndsWith() {
        return usernameNotEndsWith.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_USERNAME_NOT_ENDS_WITH)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getUsernameNotEndsWith_JsonNullable() {
    return usernameNotEndsWith;
  }
  
  @JsonProperty(JSON_PROPERTY_USERNAME_NOT_ENDS_WITH)
  public void setUsernameNotEndsWith_JsonNullable(JsonNullable<String> usernameNotEndsWith) {
    this.usernameNotEndsWith = usernameNotEndsWith;
  }

  public void setUsernameNotEndsWith(String usernameNotEndsWith) {
    this.usernameNotEndsWith = JsonNullable.<String>of(usernameNotEndsWith);
  }


  public AlertNotifierWhereInput usernameNotIn(List<String> usernameNotIn) {
    this.usernameNotIn = JsonNullable.<List<String>>of(usernameNotIn);
    return this;
  }

  public AlertNotifierWhereInput addUsernameNotInItem(String usernameNotInItem) {
    if (this.usernameNotIn == null || !this.usernameNotIn.isPresent()) {
      this.usernameNotIn = JsonNullable.<List<String>>of(new ArrayList<>());
    }
    try {
      this.usernameNotIn.get().add(usernameNotInItem);
    } catch (java.util.NoSuchElementException e) {
      // this can never happen, as we make sure above that the value is present
    }
    return this;
  }

   /**
   * Get usernameNotIn
   * @return usernameNotIn
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public List<String> getUsernameNotIn() {
        return usernameNotIn.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_USERNAME_NOT_IN)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<List<String>> getUsernameNotIn_JsonNullable() {
    return usernameNotIn;
  }
  
  @JsonProperty(JSON_PROPERTY_USERNAME_NOT_IN)
  public void setUsernameNotIn_JsonNullable(JsonNullable<List<String>> usernameNotIn) {
    this.usernameNotIn = usernameNotIn;
  }

  public void setUsernameNotIn(List<String> usernameNotIn) {
    this.usernameNotIn = JsonNullable.<List<String>>of(usernameNotIn);
  }


  public AlertNotifierWhereInput usernameNotStartsWith(String usernameNotStartsWith) {
    this.usernameNotStartsWith = JsonNullable.<String>of(usernameNotStartsWith);
    return this;
  }

   /**
   * Get usernameNotStartsWith
   * @return usernameNotStartsWith
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getUsernameNotStartsWith() {
        return usernameNotStartsWith.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_USERNAME_NOT_STARTS_WITH)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getUsernameNotStartsWith_JsonNullable() {
    return usernameNotStartsWith;
  }
  
  @JsonProperty(JSON_PROPERTY_USERNAME_NOT_STARTS_WITH)
  public void setUsernameNotStartsWith_JsonNullable(JsonNullable<String> usernameNotStartsWith) {
    this.usernameNotStartsWith = usernameNotStartsWith;
  }

  public void setUsernameNotStartsWith(String usernameNotStartsWith) {
    this.usernameNotStartsWith = JsonNullable.<String>of(usernameNotStartsWith);
  }


  public AlertNotifierWhereInput usernameStartsWith(String usernameStartsWith) {
    this.usernameStartsWith = JsonNullable.<String>of(usernameStartsWith);
    return this;
  }

   /**
   * Get usernameStartsWith
   * @return usernameStartsWith
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getUsernameStartsWith() {
        return usernameStartsWith.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_USERNAME_STARTS_WITH)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getUsernameStartsWith_JsonNullable() {
    return usernameStartsWith;
  }
  
  @JsonProperty(JSON_PROPERTY_USERNAME_STARTS_WITH)
  public void setUsernameStartsWith_JsonNullable(JsonNullable<String> usernameStartsWith) {
    this.usernameStartsWith = usernameStartsWith;
  }

  public void setUsernameStartsWith(String usernameStartsWith) {
    this.usernameStartsWith = JsonNullable.<String>of(usernameStartsWith);
  }


  /**
   * Return true if this AlertNotifierWhereInput object is equal to o.
   */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    AlertNotifierWhereInput alertNotifierWhereInput = (AlertNotifierWhereInput) o;
    return equalsNullable(this.AND, alertNotifierWhereInput.AND) &&
        equalsNullable(this.disabled, alertNotifierWhereInput.disabled) &&
        equalsNullable(this.disabledNot, alertNotifierWhereInput.disabledNot) &&
        equalsNullable(this.emailFrom, alertNotifierWhereInput.emailFrom) &&
        equalsNullable(this.emailFromContains, alertNotifierWhereInput.emailFromContains) &&
        equalsNullable(this.emailFromEndsWith, alertNotifierWhereInput.emailFromEndsWith) &&
        equalsNullable(this.emailFromGt, alertNotifierWhereInput.emailFromGt) &&
        equalsNullable(this.emailFromGte, alertNotifierWhereInput.emailFromGte) &&
        equalsNullable(this.emailFromIn, alertNotifierWhereInput.emailFromIn) &&
        equalsNullable(this.emailFromLt, alertNotifierWhereInput.emailFromLt) &&
        equalsNullable(this.emailFromLte, alertNotifierWhereInput.emailFromLte) &&
        equalsNullable(this.emailFromNot, alertNotifierWhereInput.emailFromNot) &&
        equalsNullable(this.emailFromNotContains, alertNotifierWhereInput.emailFromNotContains) &&
        equalsNullable(this.emailFromNotEndsWith, alertNotifierWhereInput.emailFromNotEndsWith) &&
        equalsNullable(this.emailFromNotIn, alertNotifierWhereInput.emailFromNotIn) &&
        equalsNullable(this.emailFromNotStartsWith, alertNotifierWhereInput.emailFromNotStartsWith) &&
        equalsNullable(this.emailFromStartsWith, alertNotifierWhereInput.emailFromStartsWith) &&
        equalsNullable(this.id, alertNotifierWhereInput.id) &&
        equalsNullable(this.idContains, alertNotifierWhereInput.idContains) &&
        equalsNullable(this.idEndsWith, alertNotifierWhereInput.idEndsWith) &&
        equalsNullable(this.idGt, alertNotifierWhereInput.idGt) &&
        equalsNullable(this.idGte, alertNotifierWhereInput.idGte) &&
        equalsNullable(this.idIn, alertNotifierWhereInput.idIn) &&
        equalsNullable(this.idLt, alertNotifierWhereInput.idLt) &&
        equalsNullable(this.idLte, alertNotifierWhereInput.idLte) &&
        equalsNullable(this.idNot, alertNotifierWhereInput.idNot) &&
        equalsNullable(this.idNotContains, alertNotifierWhereInput.idNotContains) &&
        equalsNullable(this.idNotEndsWith, alertNotifierWhereInput.idNotEndsWith) &&
        equalsNullable(this.idNotIn, alertNotifierWhereInput.idNotIn) &&
        equalsNullable(this.idNotStartsWith, alertNotifierWhereInput.idNotStartsWith) &&
        equalsNullable(this.idStartsWith, alertNotifierWhereInput.idStartsWith) &&
        equalsNullable(this.languageCode, alertNotifierWhereInput.languageCode) &&
        equalsNullable(this.languageCodeIn, alertNotifierWhereInput.languageCodeIn) &&
        equalsNullable(this.languageCodeNot, alertNotifierWhereInput.languageCodeNot) &&
        equalsNullable(this.languageCodeNotIn, alertNotifierWhereInput.languageCodeNotIn) &&
        equalsNullable(this.NOT, alertNotifierWhereInput.NOT) &&
        equalsNullable(this.OR, alertNotifierWhereInput.OR) &&
        equalsNullable(this.password, alertNotifierWhereInput.password) &&
        equalsNullable(this.passwordContains, alertNotifierWhereInput.passwordContains) &&
        equalsNullable(this.passwordEndsWith, alertNotifierWhereInput.passwordEndsWith) &&
        equalsNullable(this.passwordGt, alertNotifierWhereInput.passwordGt) &&
        equalsNullable(this.passwordGte, alertNotifierWhereInput.passwordGte) &&
        equalsNullable(this.passwordIn, alertNotifierWhereInput.passwordIn) &&
        equalsNullable(this.passwordLt, alertNotifierWhereInput.passwordLt) &&
        equalsNullable(this.passwordLte, alertNotifierWhereInput.passwordLte) &&
        equalsNullable(this.passwordNot, alertNotifierWhereInput.passwordNot) &&
        equalsNullable(this.passwordNotContains, alertNotifierWhereInput.passwordNotContains) &&
        equalsNullable(this.passwordNotEndsWith, alertNotifierWhereInput.passwordNotEndsWith) &&
        equalsNullable(this.passwordNotIn, alertNotifierWhereInput.passwordNotIn) &&
        equalsNullable(this.passwordNotStartsWith, alertNotifierWhereInput.passwordNotStartsWith) &&
        equalsNullable(this.passwordStartsWith, alertNotifierWhereInput.passwordStartsWith) &&
        equalsNullable(this.securityMode, alertNotifierWhereInput.securityMode) &&
        equalsNullable(this.securityModeIn, alertNotifierWhereInput.securityModeIn) &&
        equalsNullable(this.securityModeNot, alertNotifierWhereInput.securityModeNot) &&
        equalsNullable(this.securityModeNotIn, alertNotifierWhereInput.securityModeNotIn) &&
        equalsNullable(this.smtpServerHost, alertNotifierWhereInput.smtpServerHost) &&
        equalsNullable(this.smtpServerHostContains, alertNotifierWhereInput.smtpServerHostContains) &&
        equalsNullable(this.smtpServerHostEndsWith, alertNotifierWhereInput.smtpServerHostEndsWith) &&
        equalsNullable(this.smtpServerHostGt, alertNotifierWhereInput.smtpServerHostGt) &&
        equalsNullable(this.smtpServerHostGte, alertNotifierWhereInput.smtpServerHostGte) &&
        equalsNullable(this.smtpServerHostIn, alertNotifierWhereInput.smtpServerHostIn) &&
        equalsNullable(this.smtpServerHostLt, alertNotifierWhereInput.smtpServerHostLt) &&
        equalsNullable(this.smtpServerHostLte, alertNotifierWhereInput.smtpServerHostLte) &&
        equalsNullable(this.smtpServerHostNot, alertNotifierWhereInput.smtpServerHostNot) &&
        equalsNullable(this.smtpServerHostNotContains, alertNotifierWhereInput.smtpServerHostNotContains) &&
        equalsNullable(this.smtpServerHostNotEndsWith, alertNotifierWhereInput.smtpServerHostNotEndsWith) &&
        equalsNullable(this.smtpServerHostNotIn, alertNotifierWhereInput.smtpServerHostNotIn) &&
        equalsNullable(this.smtpServerHostNotStartsWith, alertNotifierWhereInput.smtpServerHostNotStartsWith) &&
        equalsNullable(this.smtpServerHostStartsWith, alertNotifierWhereInput.smtpServerHostStartsWith) &&
        equalsNullable(this.smtpServerPort, alertNotifierWhereInput.smtpServerPort) &&
        equalsNullable(this.smtpServerPortGt, alertNotifierWhereInput.smtpServerPortGt) &&
        equalsNullable(this.smtpServerPortGte, alertNotifierWhereInput.smtpServerPortGte) &&
        equalsNullable(this.smtpServerPortIn, alertNotifierWhereInput.smtpServerPortIn) &&
        equalsNullable(this.smtpServerPortLt, alertNotifierWhereInput.smtpServerPortLt) &&
        equalsNullable(this.smtpServerPortLte, alertNotifierWhereInput.smtpServerPortLte) &&
        equalsNullable(this.smtpServerPortNot, alertNotifierWhereInput.smtpServerPortNot) &&
        equalsNullable(this.smtpServerPortNotIn, alertNotifierWhereInput.smtpServerPortNotIn) &&
        equalsNullable(this.username, alertNotifierWhereInput.username) &&
        equalsNullable(this.usernameContains, alertNotifierWhereInput.usernameContains) &&
        equalsNullable(this.usernameEndsWith, alertNotifierWhereInput.usernameEndsWith) &&
        equalsNullable(this.usernameGt, alertNotifierWhereInput.usernameGt) &&
        equalsNullable(this.usernameGte, alertNotifierWhereInput.usernameGte) &&
        equalsNullable(this.usernameIn, alertNotifierWhereInput.usernameIn) &&
        equalsNullable(this.usernameLt, alertNotifierWhereInput.usernameLt) &&
        equalsNullable(this.usernameLte, alertNotifierWhereInput.usernameLte) &&
        equalsNullable(this.usernameNot, alertNotifierWhereInput.usernameNot) &&
        equalsNullable(this.usernameNotContains, alertNotifierWhereInput.usernameNotContains) &&
        equalsNullable(this.usernameNotEndsWith, alertNotifierWhereInput.usernameNotEndsWith) &&
        equalsNullable(this.usernameNotIn, alertNotifierWhereInput.usernameNotIn) &&
        equalsNullable(this.usernameNotStartsWith, alertNotifierWhereInput.usernameNotStartsWith) &&
        equalsNullable(this.usernameStartsWith, alertNotifierWhereInput.usernameStartsWith);
  }

  private static <T> boolean equalsNullable(JsonNullable<T> a, JsonNullable<T> b) {
    return a == b || (a != null && b != null && a.isPresent() && b.isPresent() && Objects.deepEquals(a.get(), b.get()));
  }

  @Override
  public int hashCode() {
    return Objects.hash(hashCodeNullable(AND), hashCodeNullable(disabled), hashCodeNullable(disabledNot), hashCodeNullable(emailFrom), hashCodeNullable(emailFromContains), hashCodeNullable(emailFromEndsWith), hashCodeNullable(emailFromGt), hashCodeNullable(emailFromGte), hashCodeNullable(emailFromIn), hashCodeNullable(emailFromLt), hashCodeNullable(emailFromLte), hashCodeNullable(emailFromNot), hashCodeNullable(emailFromNotContains), hashCodeNullable(emailFromNotEndsWith), hashCodeNullable(emailFromNotIn), hashCodeNullable(emailFromNotStartsWith), hashCodeNullable(emailFromStartsWith), hashCodeNullable(id), hashCodeNullable(idContains), hashCodeNullable(idEndsWith), hashCodeNullable(idGt), hashCodeNullable(idGte), hashCodeNullable(idIn), hashCodeNullable(idLt), hashCodeNullable(idLte), hashCodeNullable(idNot), hashCodeNullable(idNotContains), hashCodeNullable(idNotEndsWith), hashCodeNullable(idNotIn), hashCodeNullable(idNotStartsWith), hashCodeNullable(idStartsWith), hashCodeNullable(languageCode), hashCodeNullable(languageCodeIn), hashCodeNullable(languageCodeNot), hashCodeNullable(languageCodeNotIn), hashCodeNullable(NOT), hashCodeNullable(OR), hashCodeNullable(password), hashCodeNullable(passwordContains), hashCodeNullable(passwordEndsWith), hashCodeNullable(passwordGt), hashCodeNullable(passwordGte), hashCodeNullable(passwordIn), hashCodeNullable(passwordLt), hashCodeNullable(passwordLte), hashCodeNullable(passwordNot), hashCodeNullable(passwordNotContains), hashCodeNullable(passwordNotEndsWith), hashCodeNullable(passwordNotIn), hashCodeNullable(passwordNotStartsWith), hashCodeNullable(passwordStartsWith), hashCodeNullable(securityMode), hashCodeNullable(securityModeIn), hashCodeNullable(securityModeNot), hashCodeNullable(securityModeNotIn), hashCodeNullable(smtpServerHost), hashCodeNullable(smtpServerHostContains), hashCodeNullable(smtpServerHostEndsWith), hashCodeNullable(smtpServerHostGt), hashCodeNullable(smtpServerHostGte), hashCodeNullable(smtpServerHostIn), hashCodeNullable(smtpServerHostLt), hashCodeNullable(smtpServerHostLte), hashCodeNullable(smtpServerHostNot), hashCodeNullable(smtpServerHostNotContains), hashCodeNullable(smtpServerHostNotEndsWith), hashCodeNullable(smtpServerHostNotIn), hashCodeNullable(smtpServerHostNotStartsWith), hashCodeNullable(smtpServerHostStartsWith), hashCodeNullable(smtpServerPort), hashCodeNullable(smtpServerPortGt), hashCodeNullable(smtpServerPortGte), hashCodeNullable(smtpServerPortIn), hashCodeNullable(smtpServerPortLt), hashCodeNullable(smtpServerPortLte), hashCodeNullable(smtpServerPortNot), hashCodeNullable(smtpServerPortNotIn), hashCodeNullable(username), hashCodeNullable(usernameContains), hashCodeNullable(usernameEndsWith), hashCodeNullable(usernameGt), hashCodeNullable(usernameGte), hashCodeNullable(usernameIn), hashCodeNullable(usernameLt), hashCodeNullable(usernameLte), hashCodeNullable(usernameNot), hashCodeNullable(usernameNotContains), hashCodeNullable(usernameNotEndsWith), hashCodeNullable(usernameNotIn), hashCodeNullable(usernameNotStartsWith), hashCodeNullable(usernameStartsWith));
  }

  private static <T> int hashCodeNullable(JsonNullable<T> a) {
    if (a == null) {
      return 1;
    }
    return a.isPresent() ? Arrays.deepHashCode(new Object[]{a.get()}) : 31;
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class AlertNotifierWhereInput {\n");
    sb.append("    AND: ").append(toIndentedString(AND)).append("\n");
    sb.append("    disabled: ").append(toIndentedString(disabled)).append("\n");
    sb.append("    disabledNot: ").append(toIndentedString(disabledNot)).append("\n");
    sb.append("    emailFrom: ").append(toIndentedString(emailFrom)).append("\n");
    sb.append("    emailFromContains: ").append(toIndentedString(emailFromContains)).append("\n");
    sb.append("    emailFromEndsWith: ").append(toIndentedString(emailFromEndsWith)).append("\n");
    sb.append("    emailFromGt: ").append(toIndentedString(emailFromGt)).append("\n");
    sb.append("    emailFromGte: ").append(toIndentedString(emailFromGte)).append("\n");
    sb.append("    emailFromIn: ").append(toIndentedString(emailFromIn)).append("\n");
    sb.append("    emailFromLt: ").append(toIndentedString(emailFromLt)).append("\n");
    sb.append("    emailFromLte: ").append(toIndentedString(emailFromLte)).append("\n");
    sb.append("    emailFromNot: ").append(toIndentedString(emailFromNot)).append("\n");
    sb.append("    emailFromNotContains: ").append(toIndentedString(emailFromNotContains)).append("\n");
    sb.append("    emailFromNotEndsWith: ").append(toIndentedString(emailFromNotEndsWith)).append("\n");
    sb.append("    emailFromNotIn: ").append(toIndentedString(emailFromNotIn)).append("\n");
    sb.append("    emailFromNotStartsWith: ").append(toIndentedString(emailFromNotStartsWith)).append("\n");
    sb.append("    emailFromStartsWith: ").append(toIndentedString(emailFromStartsWith)).append("\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    idContains: ").append(toIndentedString(idContains)).append("\n");
    sb.append("    idEndsWith: ").append(toIndentedString(idEndsWith)).append("\n");
    sb.append("    idGt: ").append(toIndentedString(idGt)).append("\n");
    sb.append("    idGte: ").append(toIndentedString(idGte)).append("\n");
    sb.append("    idIn: ").append(toIndentedString(idIn)).append("\n");
    sb.append("    idLt: ").append(toIndentedString(idLt)).append("\n");
    sb.append("    idLte: ").append(toIndentedString(idLte)).append("\n");
    sb.append("    idNot: ").append(toIndentedString(idNot)).append("\n");
    sb.append("    idNotContains: ").append(toIndentedString(idNotContains)).append("\n");
    sb.append("    idNotEndsWith: ").append(toIndentedString(idNotEndsWith)).append("\n");
    sb.append("    idNotIn: ").append(toIndentedString(idNotIn)).append("\n");
    sb.append("    idNotStartsWith: ").append(toIndentedString(idNotStartsWith)).append("\n");
    sb.append("    idStartsWith: ").append(toIndentedString(idStartsWith)).append("\n");
    sb.append("    languageCode: ").append(toIndentedString(languageCode)).append("\n");
    sb.append("    languageCodeIn: ").append(toIndentedString(languageCodeIn)).append("\n");
    sb.append("    languageCodeNot: ").append(toIndentedString(languageCodeNot)).append("\n");
    sb.append("    languageCodeNotIn: ").append(toIndentedString(languageCodeNotIn)).append("\n");
    sb.append("    NOT: ").append(toIndentedString(NOT)).append("\n");
    sb.append("    OR: ").append(toIndentedString(OR)).append("\n");
    sb.append("    password: ").append(toIndentedString(password)).append("\n");
    sb.append("    passwordContains: ").append(toIndentedString(passwordContains)).append("\n");
    sb.append("    passwordEndsWith: ").append(toIndentedString(passwordEndsWith)).append("\n");
    sb.append("    passwordGt: ").append(toIndentedString(passwordGt)).append("\n");
    sb.append("    passwordGte: ").append(toIndentedString(passwordGte)).append("\n");
    sb.append("    passwordIn: ").append(toIndentedString(passwordIn)).append("\n");
    sb.append("    passwordLt: ").append(toIndentedString(passwordLt)).append("\n");
    sb.append("    passwordLte: ").append(toIndentedString(passwordLte)).append("\n");
    sb.append("    passwordNot: ").append(toIndentedString(passwordNot)).append("\n");
    sb.append("    passwordNotContains: ").append(toIndentedString(passwordNotContains)).append("\n");
    sb.append("    passwordNotEndsWith: ").append(toIndentedString(passwordNotEndsWith)).append("\n");
    sb.append("    passwordNotIn: ").append(toIndentedString(passwordNotIn)).append("\n");
    sb.append("    passwordNotStartsWith: ").append(toIndentedString(passwordNotStartsWith)).append("\n");
    sb.append("    passwordStartsWith: ").append(toIndentedString(passwordStartsWith)).append("\n");
    sb.append("    securityMode: ").append(toIndentedString(securityMode)).append("\n");
    sb.append("    securityModeIn: ").append(toIndentedString(securityModeIn)).append("\n");
    sb.append("    securityModeNot: ").append(toIndentedString(securityModeNot)).append("\n");
    sb.append("    securityModeNotIn: ").append(toIndentedString(securityModeNotIn)).append("\n");
    sb.append("    smtpServerHost: ").append(toIndentedString(smtpServerHost)).append("\n");
    sb.append("    smtpServerHostContains: ").append(toIndentedString(smtpServerHostContains)).append("\n");
    sb.append("    smtpServerHostEndsWith: ").append(toIndentedString(smtpServerHostEndsWith)).append("\n");
    sb.append("    smtpServerHostGt: ").append(toIndentedString(smtpServerHostGt)).append("\n");
    sb.append("    smtpServerHostGte: ").append(toIndentedString(smtpServerHostGte)).append("\n");
    sb.append("    smtpServerHostIn: ").append(toIndentedString(smtpServerHostIn)).append("\n");
    sb.append("    smtpServerHostLt: ").append(toIndentedString(smtpServerHostLt)).append("\n");
    sb.append("    smtpServerHostLte: ").append(toIndentedString(smtpServerHostLte)).append("\n");
    sb.append("    smtpServerHostNot: ").append(toIndentedString(smtpServerHostNot)).append("\n");
    sb.append("    smtpServerHostNotContains: ").append(toIndentedString(smtpServerHostNotContains)).append("\n");
    sb.append("    smtpServerHostNotEndsWith: ").append(toIndentedString(smtpServerHostNotEndsWith)).append("\n");
    sb.append("    smtpServerHostNotIn: ").append(toIndentedString(smtpServerHostNotIn)).append("\n");
    sb.append("    smtpServerHostNotStartsWith: ").append(toIndentedString(smtpServerHostNotStartsWith)).append("\n");
    sb.append("    smtpServerHostStartsWith: ").append(toIndentedString(smtpServerHostStartsWith)).append("\n");
    sb.append("    smtpServerPort: ").append(toIndentedString(smtpServerPort)).append("\n");
    sb.append("    smtpServerPortGt: ").append(toIndentedString(smtpServerPortGt)).append("\n");
    sb.append("    smtpServerPortGte: ").append(toIndentedString(smtpServerPortGte)).append("\n");
    sb.append("    smtpServerPortIn: ").append(toIndentedString(smtpServerPortIn)).append("\n");
    sb.append("    smtpServerPortLt: ").append(toIndentedString(smtpServerPortLt)).append("\n");
    sb.append("    smtpServerPortLte: ").append(toIndentedString(smtpServerPortLte)).append("\n");
    sb.append("    smtpServerPortNot: ").append(toIndentedString(smtpServerPortNot)).append("\n");
    sb.append("    smtpServerPortNotIn: ").append(toIndentedString(smtpServerPortNotIn)).append("\n");
    sb.append("    username: ").append(toIndentedString(username)).append("\n");
    sb.append("    usernameContains: ").append(toIndentedString(usernameContains)).append("\n");
    sb.append("    usernameEndsWith: ").append(toIndentedString(usernameEndsWith)).append("\n");
    sb.append("    usernameGt: ").append(toIndentedString(usernameGt)).append("\n");
    sb.append("    usernameGte: ").append(toIndentedString(usernameGte)).append("\n");
    sb.append("    usernameIn: ").append(toIndentedString(usernameIn)).append("\n");
    sb.append("    usernameLt: ").append(toIndentedString(usernameLt)).append("\n");
    sb.append("    usernameLte: ").append(toIndentedString(usernameLte)).append("\n");
    sb.append("    usernameNot: ").append(toIndentedString(usernameNot)).append("\n");
    sb.append("    usernameNotContains: ").append(toIndentedString(usernameNotContains)).append("\n");
    sb.append("    usernameNotEndsWith: ").append(toIndentedString(usernameNotEndsWith)).append("\n");
    sb.append("    usernameNotIn: ").append(toIndentedString(usernameNotIn)).append("\n");
    sb.append("    usernameNotStartsWith: ").append(toIndentedString(usernameNotStartsWith)).append("\n");
    sb.append("    usernameStartsWith: ").append(toIndentedString(usernameStartsWith)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

