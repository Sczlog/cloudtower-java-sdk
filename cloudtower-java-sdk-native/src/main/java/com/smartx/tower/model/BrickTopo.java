/*
 * Tower SDK API
 * cloudtower operation API and SDK
 *
 * The version of the OpenAPI document: 1.7.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.smartx.tower.model;

import java.util.Objects;
import java.util.Arrays;
import java.util.Map;
import java.util.HashMap;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import com.smartx.tower.model.AlertDisk;
import com.smartx.tower.model.AlertRuleCluster;
import com.smartx.tower.model.BrickTopoCapacity;
import com.smartx.tower.model.BrickTopoDiskLayout;
import com.smartx.tower.model.BrickTopoPowers;
import com.smartx.tower.model.BrickTopoTagPositionInBrick;
import com.smartx.tower.model.Direction;
import com.smartx.tower.model.PowerPosition;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.util.ArrayList;
import java.util.List;
import org.openapitools.jackson.nullable.JsonNullable;
import com.fasterxml.jackson.annotation.JsonIgnore;
import org.openapitools.jackson.nullable.JsonNullable;
import java.util.NoSuchElementException;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;


/**
 * BrickTopo
 */
@JsonPropertyOrder({
  BrickTopo.JSON_PROPERTY_CAPACITY,
  BrickTopo.JSON_PROPERTY_CLUSTER,
  BrickTopo.JSON_PROPERTY_CLUSTER_TOPO,
  BrickTopo.JSON_PROPERTY_DISK_LAYOUT,
  BrickTopo.JSON_PROPERTY_HEIGHT,
  BrickTopo.JSON_PROPERTY_ID,
  BrickTopo.JSON_PROPERTY_LOCAL_ID,
  BrickTopo.JSON_PROPERTY_MODEL,
  BrickTopo.JSON_PROPERTY_NAME,
  BrickTopo.JSON_PROPERTY_NODE_TOPOES,
  BrickTopo.JSON_PROPERTY_POSITION,
  BrickTopo.JSON_PROPERTY_POWER_LAYOUT,
  BrickTopo.JSON_PROPERTY_POWER_POSITION,
  BrickTopo.JSON_PROPERTY_POWERS,
  BrickTopo.JSON_PROPERTY_RACK_TOPO,
  BrickTopo.JSON_PROPERTY_TAG_POSITION_IN_BRICK
})
@javax.annotation.processing.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2021-10-27T15:59:14.939791800+08:00[Asia/Shanghai]")
public class BrickTopo {
  public static final String JSON_PROPERTY_CAPACITY = "capacity";
  private BrickTopoCapacity capacity;

  public static final String JSON_PROPERTY_CLUSTER = "cluster";
  private AlertRuleCluster cluster;

  public static final String JSON_PROPERTY_CLUSTER_TOPO = "cluster_topo";
  private JsonNullable<AlertDisk> clusterTopo = JsonNullable.<AlertDisk>undefined();

  public static final String JSON_PROPERTY_DISK_LAYOUT = "disk_layout";
  private JsonNullable<BrickTopoDiskLayout> diskLayout = JsonNullable.<BrickTopoDiskLayout>undefined();

  public static final String JSON_PROPERTY_HEIGHT = "height";
  private Double height;

  public static final String JSON_PROPERTY_ID = "id";
  private String id;

  public static final String JSON_PROPERTY_LOCAL_ID = "local_id";
  private String localId;

  public static final String JSON_PROPERTY_MODEL = "model";
  private JsonNullable<String> model = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_NAME = "name";
  private String name;

  public static final String JSON_PROPERTY_NODE_TOPOES = "node_topoes";
  private JsonNullable<List<AlertRuleCluster>> nodeTopoes = JsonNullable.<List<AlertRuleCluster>>undefined();

  public static final String JSON_PROPERTY_POSITION = "position";
  private Double position;

  public static final String JSON_PROPERTY_POWER_LAYOUT = "power_layout";
  private JsonNullable<Direction> powerLayout = JsonNullable.<Direction>undefined();

  public static final String JSON_PROPERTY_POWER_POSITION = "power_position";
  private JsonNullable<PowerPosition> powerPosition = JsonNullable.<PowerPosition>undefined();

  public static final String JSON_PROPERTY_POWERS = "powers";
  private JsonNullable<List<BrickTopoPowers>> powers = JsonNullable.<List<BrickTopoPowers>>undefined();

  public static final String JSON_PROPERTY_RACK_TOPO = "rack_topo";
  private JsonNullable<AlertDisk> rackTopo = JsonNullable.<AlertDisk>undefined();

  public static final String JSON_PROPERTY_TAG_POSITION_IN_BRICK = "tag_position_in_brick";
  private JsonNullable<List<BrickTopoTagPositionInBrick>> tagPositionInBrick = JsonNullable.<List<BrickTopoTagPositionInBrick>>undefined();


  public BrickTopo capacity(BrickTopoCapacity capacity) {
    this.capacity = capacity;
    return this;
  }

   /**
   * Get capacity
   * @return capacity
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")
  @JsonProperty(JSON_PROPERTY_CAPACITY)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public BrickTopoCapacity getCapacity() {
    return capacity;
  }


  @JsonProperty(JSON_PROPERTY_CAPACITY)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setCapacity(BrickTopoCapacity capacity) {
    this.capacity = capacity;
  }


  public BrickTopo cluster(AlertRuleCluster cluster) {
    this.cluster = cluster;
    return this;
  }

   /**
   * Get cluster
   * @return cluster
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")
  @JsonProperty(JSON_PROPERTY_CLUSTER)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public AlertRuleCluster getCluster() {
    return cluster;
  }


  @JsonProperty(JSON_PROPERTY_CLUSTER)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setCluster(AlertRuleCluster cluster) {
    this.cluster = cluster;
  }


  public BrickTopo clusterTopo(AlertDisk clusterTopo) {
    this.clusterTopo = JsonNullable.<AlertDisk>of(clusterTopo);
    return this;
  }

   /**
   * Get clusterTopo
   * @return clusterTopo
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public AlertDisk getClusterTopo() {
        return clusterTopo.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_CLUSTER_TOPO)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<AlertDisk> getClusterTopo_JsonNullable() {
    return clusterTopo;
  }
  
  @JsonProperty(JSON_PROPERTY_CLUSTER_TOPO)
  public void setClusterTopo_JsonNullable(JsonNullable<AlertDisk> clusterTopo) {
    this.clusterTopo = clusterTopo;
  }

  public void setClusterTopo(AlertDisk clusterTopo) {
    this.clusterTopo = JsonNullable.<AlertDisk>of(clusterTopo);
  }


  public BrickTopo diskLayout(BrickTopoDiskLayout diskLayout) {
    this.diskLayout = JsonNullable.<BrickTopoDiskLayout>of(diskLayout);
    return this;
  }

   /**
   * Get diskLayout
   * @return diskLayout
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public BrickTopoDiskLayout getDiskLayout() {
        return diskLayout.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_DISK_LAYOUT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<BrickTopoDiskLayout> getDiskLayout_JsonNullable() {
    return diskLayout;
  }
  
  @JsonProperty(JSON_PROPERTY_DISK_LAYOUT)
  public void setDiskLayout_JsonNullable(JsonNullable<BrickTopoDiskLayout> diskLayout) {
    this.diskLayout = diskLayout;
  }

  public void setDiskLayout(BrickTopoDiskLayout diskLayout) {
    this.diskLayout = JsonNullable.<BrickTopoDiskLayout>of(diskLayout);
  }


  public BrickTopo height(Double height) {
    this.height = height;
    return this;
  }

   /**
   * Get height
   * @return height
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")
  @JsonProperty(JSON_PROPERTY_HEIGHT)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public Double getHeight() {
    return height;
  }


  @JsonProperty(JSON_PROPERTY_HEIGHT)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setHeight(Double height) {
    this.height = height;
  }


  public BrickTopo id(String id) {
    this.id = id;
    return this;
  }

   /**
   * Get id
   * @return id
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")
  @JsonProperty(JSON_PROPERTY_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getId() {
    return id;
  }


  @JsonProperty(JSON_PROPERTY_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setId(String id) {
    this.id = id;
  }


  public BrickTopo localId(String localId) {
    this.localId = localId;
    return this;
  }

   /**
   * Get localId
   * @return localId
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")
  @JsonProperty(JSON_PROPERTY_LOCAL_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getLocalId() {
    return localId;
  }


  @JsonProperty(JSON_PROPERTY_LOCAL_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setLocalId(String localId) {
    this.localId = localId;
  }


  public BrickTopo model(String model) {
    this.model = JsonNullable.<String>of(model);
    return this;
  }

   /**
   * Get model
   * @return model
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getModel() {
        return model.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_MODEL)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getModel_JsonNullable() {
    return model;
  }
  
  @JsonProperty(JSON_PROPERTY_MODEL)
  public void setModel_JsonNullable(JsonNullable<String> model) {
    this.model = model;
  }

  public void setModel(String model) {
    this.model = JsonNullable.<String>of(model);
  }


  public BrickTopo name(String name) {
    this.name = name;
    return this;
  }

   /**
   * Get name
   * @return name
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")
  @JsonProperty(JSON_PROPERTY_NAME)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getName() {
    return name;
  }


  @JsonProperty(JSON_PROPERTY_NAME)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setName(String name) {
    this.name = name;
  }


  public BrickTopo nodeTopoes(List<AlertRuleCluster> nodeTopoes) {
    this.nodeTopoes = JsonNullable.<List<AlertRuleCluster>>of(nodeTopoes);
    return this;
  }

  public BrickTopo addNodeTopoesItem(AlertRuleCluster nodeTopoesItem) {
    if (this.nodeTopoes == null || !this.nodeTopoes.isPresent()) {
      this.nodeTopoes = JsonNullable.<List<AlertRuleCluster>>of(new ArrayList<>());
    }
    try {
      this.nodeTopoes.get().add(nodeTopoesItem);
    } catch (java.util.NoSuchElementException e) {
      // this can never happen, as we make sure above that the value is present
    }
    return this;
  }

   /**
   * Get nodeTopoes
   * @return nodeTopoes
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public List<AlertRuleCluster> getNodeTopoes() {
        return nodeTopoes.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_NODE_TOPOES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<List<AlertRuleCluster>> getNodeTopoes_JsonNullable() {
    return nodeTopoes;
  }
  
  @JsonProperty(JSON_PROPERTY_NODE_TOPOES)
  public void setNodeTopoes_JsonNullable(JsonNullable<List<AlertRuleCluster>> nodeTopoes) {
    this.nodeTopoes = nodeTopoes;
  }

  public void setNodeTopoes(List<AlertRuleCluster> nodeTopoes) {
    this.nodeTopoes = JsonNullable.<List<AlertRuleCluster>>of(nodeTopoes);
  }


  public BrickTopo position(Double position) {
    this.position = position;
    return this;
  }

   /**
   * Get position
   * @return position
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")
  @JsonProperty(JSON_PROPERTY_POSITION)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public Double getPosition() {
    return position;
  }


  @JsonProperty(JSON_PROPERTY_POSITION)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setPosition(Double position) {
    this.position = position;
  }


  public BrickTopo powerLayout(Direction powerLayout) {
    this.powerLayout = JsonNullable.<Direction>of(powerLayout);
    return this;
  }

   /**
   * Get powerLayout
   * @return powerLayout
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public Direction getPowerLayout() {
        return powerLayout.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_POWER_LAYOUT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<Direction> getPowerLayout_JsonNullable() {
    return powerLayout;
  }
  
  @JsonProperty(JSON_PROPERTY_POWER_LAYOUT)
  public void setPowerLayout_JsonNullable(JsonNullable<Direction> powerLayout) {
    this.powerLayout = powerLayout;
  }

  public void setPowerLayout(Direction powerLayout) {
    this.powerLayout = JsonNullable.<Direction>of(powerLayout);
  }


  public BrickTopo powerPosition(PowerPosition powerPosition) {
    this.powerPosition = JsonNullable.<PowerPosition>of(powerPosition);
    return this;
  }

   /**
   * Get powerPosition
   * @return powerPosition
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public PowerPosition getPowerPosition() {
        return powerPosition.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_POWER_POSITION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<PowerPosition> getPowerPosition_JsonNullable() {
    return powerPosition;
  }
  
  @JsonProperty(JSON_PROPERTY_POWER_POSITION)
  public void setPowerPosition_JsonNullable(JsonNullable<PowerPosition> powerPosition) {
    this.powerPosition = powerPosition;
  }

  public void setPowerPosition(PowerPosition powerPosition) {
    this.powerPosition = JsonNullable.<PowerPosition>of(powerPosition);
  }


  public BrickTopo powers(List<BrickTopoPowers> powers) {
    this.powers = JsonNullable.<List<BrickTopoPowers>>of(powers);
    return this;
  }

  public BrickTopo addPowersItem(BrickTopoPowers powersItem) {
    if (this.powers == null || !this.powers.isPresent()) {
      this.powers = JsonNullable.<List<BrickTopoPowers>>of(new ArrayList<>());
    }
    try {
      this.powers.get().add(powersItem);
    } catch (java.util.NoSuchElementException e) {
      // this can never happen, as we make sure above that the value is present
    }
    return this;
  }

   /**
   * Get powers
   * @return powers
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public List<BrickTopoPowers> getPowers() {
        return powers.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_POWERS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<List<BrickTopoPowers>> getPowers_JsonNullable() {
    return powers;
  }
  
  @JsonProperty(JSON_PROPERTY_POWERS)
  public void setPowers_JsonNullable(JsonNullable<List<BrickTopoPowers>> powers) {
    this.powers = powers;
  }

  public void setPowers(List<BrickTopoPowers> powers) {
    this.powers = JsonNullable.<List<BrickTopoPowers>>of(powers);
  }


  public BrickTopo rackTopo(AlertDisk rackTopo) {
    this.rackTopo = JsonNullable.<AlertDisk>of(rackTopo);
    return this;
  }

   /**
   * Get rackTopo
   * @return rackTopo
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public AlertDisk getRackTopo() {
        return rackTopo.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_RACK_TOPO)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<AlertDisk> getRackTopo_JsonNullable() {
    return rackTopo;
  }
  
  @JsonProperty(JSON_PROPERTY_RACK_TOPO)
  public void setRackTopo_JsonNullable(JsonNullable<AlertDisk> rackTopo) {
    this.rackTopo = rackTopo;
  }

  public void setRackTopo(AlertDisk rackTopo) {
    this.rackTopo = JsonNullable.<AlertDisk>of(rackTopo);
  }


  public BrickTopo tagPositionInBrick(List<BrickTopoTagPositionInBrick> tagPositionInBrick) {
    this.tagPositionInBrick = JsonNullable.<List<BrickTopoTagPositionInBrick>>of(tagPositionInBrick);
    return this;
  }

  public BrickTopo addTagPositionInBrickItem(BrickTopoTagPositionInBrick tagPositionInBrickItem) {
    if (this.tagPositionInBrick == null || !this.tagPositionInBrick.isPresent()) {
      this.tagPositionInBrick = JsonNullable.<List<BrickTopoTagPositionInBrick>>of(new ArrayList<>());
    }
    try {
      this.tagPositionInBrick.get().add(tagPositionInBrickItem);
    } catch (java.util.NoSuchElementException e) {
      // this can never happen, as we make sure above that the value is present
    }
    return this;
  }

   /**
   * Get tagPositionInBrick
   * @return tagPositionInBrick
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public List<BrickTopoTagPositionInBrick> getTagPositionInBrick() {
        return tagPositionInBrick.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_TAG_POSITION_IN_BRICK)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<List<BrickTopoTagPositionInBrick>> getTagPositionInBrick_JsonNullable() {
    return tagPositionInBrick;
  }
  
  @JsonProperty(JSON_PROPERTY_TAG_POSITION_IN_BRICK)
  public void setTagPositionInBrick_JsonNullable(JsonNullable<List<BrickTopoTagPositionInBrick>> tagPositionInBrick) {
    this.tagPositionInBrick = tagPositionInBrick;
  }

  public void setTagPositionInBrick(List<BrickTopoTagPositionInBrick> tagPositionInBrick) {
    this.tagPositionInBrick = JsonNullable.<List<BrickTopoTagPositionInBrick>>of(tagPositionInBrick);
  }


  /**
   * Return true if this BrickTopo object is equal to o.
   */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    BrickTopo brickTopo = (BrickTopo) o;
    return Objects.equals(this.capacity, brickTopo.capacity) &&
        Objects.equals(this.cluster, brickTopo.cluster) &&
        equalsNullable(this.clusterTopo, brickTopo.clusterTopo) &&
        equalsNullable(this.diskLayout, brickTopo.diskLayout) &&
        Objects.equals(this.height, brickTopo.height) &&
        Objects.equals(this.id, brickTopo.id) &&
        Objects.equals(this.localId, brickTopo.localId) &&
        equalsNullable(this.model, brickTopo.model) &&
        Objects.equals(this.name, brickTopo.name) &&
        equalsNullable(this.nodeTopoes, brickTopo.nodeTopoes) &&
        Objects.equals(this.position, brickTopo.position) &&
        equalsNullable(this.powerLayout, brickTopo.powerLayout) &&
        equalsNullable(this.powerPosition, brickTopo.powerPosition) &&
        equalsNullable(this.powers, brickTopo.powers) &&
        equalsNullable(this.rackTopo, brickTopo.rackTopo) &&
        equalsNullable(this.tagPositionInBrick, brickTopo.tagPositionInBrick);
  }

  private static <T> boolean equalsNullable(JsonNullable<T> a, JsonNullable<T> b) {
    return a == b || (a != null && b != null && a.isPresent() && b.isPresent() && Objects.deepEquals(a.get(), b.get()));
  }

  @Override
  public int hashCode() {
    return Objects.hash(capacity, cluster, hashCodeNullable(clusterTopo), hashCodeNullable(diskLayout), height, id, localId, hashCodeNullable(model), name, hashCodeNullable(nodeTopoes), position, hashCodeNullable(powerLayout), hashCodeNullable(powerPosition), hashCodeNullable(powers), hashCodeNullable(rackTopo), hashCodeNullable(tagPositionInBrick));
  }

  private static <T> int hashCodeNullable(JsonNullable<T> a) {
    if (a == null) {
      return 1;
    }
    return a.isPresent() ? Arrays.deepHashCode(new Object[]{a.get()}) : 31;
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class BrickTopo {\n");
    sb.append("    capacity: ").append(toIndentedString(capacity)).append("\n");
    sb.append("    cluster: ").append(toIndentedString(cluster)).append("\n");
    sb.append("    clusterTopo: ").append(toIndentedString(clusterTopo)).append("\n");
    sb.append("    diskLayout: ").append(toIndentedString(diskLayout)).append("\n");
    sb.append("    height: ").append(toIndentedString(height)).append("\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    localId: ").append(toIndentedString(localId)).append("\n");
    sb.append("    model: ").append(toIndentedString(model)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    nodeTopoes: ").append(toIndentedString(nodeTopoes)).append("\n");
    sb.append("    position: ").append(toIndentedString(position)).append("\n");
    sb.append("    powerLayout: ").append(toIndentedString(powerLayout)).append("\n");
    sb.append("    powerPosition: ").append(toIndentedString(powerPosition)).append("\n");
    sb.append("    powers: ").append(toIndentedString(powers)).append("\n");
    sb.append("    rackTopo: ").append(toIndentedString(rackTopo)).append("\n");
    sb.append("    tagPositionInBrick: ").append(toIndentedString(tagPositionInBrick)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

