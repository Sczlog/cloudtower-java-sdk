/*
 * Tower SDK API
 * cloudtower operation API and SDK
 *
 * The version of the OpenAPI document: 1.7.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.smartx.tower.model;

import java.util.Objects;
import java.util.Arrays;
import java.util.Map;
import java.util.HashMap;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import com.smartx.tower.model.HostWhereInput;
import com.smartx.tower.model.LabelWhereInput;
import com.smartx.tower.model.NetworkType;
import com.smartx.tower.model.NicDriverState;
import com.smartx.tower.model.VdsWhereInput;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.util.ArrayList;
import java.util.List;
import org.openapitools.jackson.nullable.JsonNullable;
import com.fasterxml.jackson.annotation.JsonIgnore;
import org.openapitools.jackson.nullable.JsonNullable;
import java.util.NoSuchElementException;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;


/**
 * NicWhereInput
 */
@JsonPropertyOrder({
  NicWhereInput.JSON_PROPERTY_A_N_D,
  NicWhereInput.JSON_PROPERTY_DRIVER,
  NicWhereInput.JSON_PROPERTY_DRIVER_CONTAINS,
  NicWhereInput.JSON_PROPERTY_DRIVER_ENDS_WITH,
  NicWhereInput.JSON_PROPERTY_DRIVER_GT,
  NicWhereInput.JSON_PROPERTY_DRIVER_GTE,
  NicWhereInput.JSON_PROPERTY_DRIVER_IN,
  NicWhereInput.JSON_PROPERTY_DRIVER_LT,
  NicWhereInput.JSON_PROPERTY_DRIVER_LTE,
  NicWhereInput.JSON_PROPERTY_DRIVER_NOT,
  NicWhereInput.JSON_PROPERTY_DRIVER_NOT_CONTAINS,
  NicWhereInput.JSON_PROPERTY_DRIVER_NOT_ENDS_WITH,
  NicWhereInput.JSON_PROPERTY_DRIVER_NOT_IN,
  NicWhereInput.JSON_PROPERTY_DRIVER_NOT_STARTS_WITH,
  NicWhereInput.JSON_PROPERTY_DRIVER_STARTS_WITH,
  NicWhereInput.JSON_PROPERTY_DRIVER_STATE,
  NicWhereInput.JSON_PROPERTY_DRIVER_STATE_IN,
  NicWhereInput.JSON_PROPERTY_DRIVER_STATE_NOT,
  NicWhereInput.JSON_PROPERTY_DRIVER_STATE_NOT_IN,
  NicWhereInput.JSON_PROPERTY_GATEWAY_IP,
  NicWhereInput.JSON_PROPERTY_GATEWAY_IP_CONTAINS,
  NicWhereInput.JSON_PROPERTY_GATEWAY_IP_ENDS_WITH,
  NicWhereInput.JSON_PROPERTY_GATEWAY_IP_GT,
  NicWhereInput.JSON_PROPERTY_GATEWAY_IP_GTE,
  NicWhereInput.JSON_PROPERTY_GATEWAY_IP_IN,
  NicWhereInput.JSON_PROPERTY_GATEWAY_IP_LT,
  NicWhereInput.JSON_PROPERTY_GATEWAY_IP_LTE,
  NicWhereInput.JSON_PROPERTY_GATEWAY_IP_NOT,
  NicWhereInput.JSON_PROPERTY_GATEWAY_IP_NOT_CONTAINS,
  NicWhereInput.JSON_PROPERTY_GATEWAY_IP_NOT_ENDS_WITH,
  NicWhereInput.JSON_PROPERTY_GATEWAY_IP_NOT_IN,
  NicWhereInput.JSON_PROPERTY_GATEWAY_IP_NOT_STARTS_WITH,
  NicWhereInput.JSON_PROPERTY_GATEWAY_IP_STARTS_WITH,
  NicWhereInput.JSON_PROPERTY_HOST,
  NicWhereInput.JSON_PROPERTY_IBDEV,
  NicWhereInput.JSON_PROPERTY_IBDEV_CONTAINS,
  NicWhereInput.JSON_PROPERTY_IBDEV_ENDS_WITH,
  NicWhereInput.JSON_PROPERTY_IBDEV_GT,
  NicWhereInput.JSON_PROPERTY_IBDEV_GTE,
  NicWhereInput.JSON_PROPERTY_IBDEV_IN,
  NicWhereInput.JSON_PROPERTY_IBDEV_LT,
  NicWhereInput.JSON_PROPERTY_IBDEV_LTE,
  NicWhereInput.JSON_PROPERTY_IBDEV_NOT,
  NicWhereInput.JSON_PROPERTY_IBDEV_NOT_CONTAINS,
  NicWhereInput.JSON_PROPERTY_IBDEV_NOT_ENDS_WITH,
  NicWhereInput.JSON_PROPERTY_IBDEV_NOT_IN,
  NicWhereInput.JSON_PROPERTY_IBDEV_NOT_STARTS_WITH,
  NicWhereInput.JSON_PROPERTY_IBDEV_STARTS_WITH,
  NicWhereInput.JSON_PROPERTY_ID,
  NicWhereInput.JSON_PROPERTY_ID_CONTAINS,
  NicWhereInput.JSON_PROPERTY_ID_ENDS_WITH,
  NicWhereInput.JSON_PROPERTY_ID_GT,
  NicWhereInput.JSON_PROPERTY_ID_GTE,
  NicWhereInput.JSON_PROPERTY_ID_IN,
  NicWhereInput.JSON_PROPERTY_ID_LT,
  NicWhereInput.JSON_PROPERTY_ID_LTE,
  NicWhereInput.JSON_PROPERTY_ID_NOT,
  NicWhereInput.JSON_PROPERTY_ID_NOT_CONTAINS,
  NicWhereInput.JSON_PROPERTY_ID_NOT_ENDS_WITH,
  NicWhereInput.JSON_PROPERTY_ID_NOT_IN,
  NicWhereInput.JSON_PROPERTY_ID_NOT_STARTS_WITH,
  NicWhereInput.JSON_PROPERTY_ID_STARTS_WITH,
  NicWhereInput.JSON_PROPERTY_IP_ADDRESS,
  NicWhereInput.JSON_PROPERTY_IP_ADDRESS_CONTAINS,
  NicWhereInput.JSON_PROPERTY_IP_ADDRESS_ENDS_WITH,
  NicWhereInput.JSON_PROPERTY_IP_ADDRESS_GT,
  NicWhereInput.JSON_PROPERTY_IP_ADDRESS_GTE,
  NicWhereInput.JSON_PROPERTY_IP_ADDRESS_IN,
  NicWhereInput.JSON_PROPERTY_IP_ADDRESS_LT,
  NicWhereInput.JSON_PROPERTY_IP_ADDRESS_LTE,
  NicWhereInput.JSON_PROPERTY_IP_ADDRESS_NOT,
  NicWhereInput.JSON_PROPERTY_IP_ADDRESS_NOT_CONTAINS,
  NicWhereInput.JSON_PROPERTY_IP_ADDRESS_NOT_ENDS_WITH,
  NicWhereInput.JSON_PROPERTY_IP_ADDRESS_NOT_IN,
  NicWhereInput.JSON_PROPERTY_IP_ADDRESS_NOT_STARTS_WITH,
  NicWhereInput.JSON_PROPERTY_IP_ADDRESS_STARTS_WITH,
  NicWhereInput.JSON_PROPERTY_IS_SRIOV,
  NicWhereInput.JSON_PROPERTY_IS_SRIOV_NOT,
  NicWhereInput.JSON_PROPERTY_LABELS_EVERY,
  NicWhereInput.JSON_PROPERTY_LABELS_NONE,
  NicWhereInput.JSON_PROPERTY_LABELS_SOME,
  NicWhereInput.JSON_PROPERTY_LOCAL_ID,
  NicWhereInput.JSON_PROPERTY_LOCAL_ID_CONTAINS,
  NicWhereInput.JSON_PROPERTY_LOCAL_ID_ENDS_WITH,
  NicWhereInput.JSON_PROPERTY_LOCAL_ID_GT,
  NicWhereInput.JSON_PROPERTY_LOCAL_ID_GTE,
  NicWhereInput.JSON_PROPERTY_LOCAL_ID_IN,
  NicWhereInput.JSON_PROPERTY_LOCAL_ID_LT,
  NicWhereInput.JSON_PROPERTY_LOCAL_ID_LTE,
  NicWhereInput.JSON_PROPERTY_LOCAL_ID_NOT,
  NicWhereInput.JSON_PROPERTY_LOCAL_ID_NOT_CONTAINS,
  NicWhereInput.JSON_PROPERTY_LOCAL_ID_NOT_ENDS_WITH,
  NicWhereInput.JSON_PROPERTY_LOCAL_ID_NOT_IN,
  NicWhereInput.JSON_PROPERTY_LOCAL_ID_NOT_STARTS_WITH,
  NicWhereInput.JSON_PROPERTY_LOCAL_ID_STARTS_WITH,
  NicWhereInput.JSON_PROPERTY_MAC_ADDRESS,
  NicWhereInput.JSON_PROPERTY_MAC_ADDRESS_CONTAINS,
  NicWhereInput.JSON_PROPERTY_MAC_ADDRESS_ENDS_WITH,
  NicWhereInput.JSON_PROPERTY_MAC_ADDRESS_GT,
  NicWhereInput.JSON_PROPERTY_MAC_ADDRESS_GTE,
  NicWhereInput.JSON_PROPERTY_MAC_ADDRESS_IN,
  NicWhereInput.JSON_PROPERTY_MAC_ADDRESS_LT,
  NicWhereInput.JSON_PROPERTY_MAC_ADDRESS_LTE,
  NicWhereInput.JSON_PROPERTY_MAC_ADDRESS_NOT,
  NicWhereInput.JSON_PROPERTY_MAC_ADDRESS_NOT_CONTAINS,
  NicWhereInput.JSON_PROPERTY_MAC_ADDRESS_NOT_ENDS_WITH,
  NicWhereInput.JSON_PROPERTY_MAC_ADDRESS_NOT_IN,
  NicWhereInput.JSON_PROPERTY_MAC_ADDRESS_NOT_STARTS_WITH,
  NicWhereInput.JSON_PROPERTY_MAC_ADDRESS_STARTS_WITH,
  NicWhereInput.JSON_PROPERTY_MAX_VF_NUM,
  NicWhereInput.JSON_PROPERTY_MAX_VF_NUM_GT,
  NicWhereInput.JSON_PROPERTY_MAX_VF_NUM_GTE,
  NicWhereInput.JSON_PROPERTY_MAX_VF_NUM_IN,
  NicWhereInput.JSON_PROPERTY_MAX_VF_NUM_LT,
  NicWhereInput.JSON_PROPERTY_MAX_VF_NUM_LTE,
  NicWhereInput.JSON_PROPERTY_MAX_VF_NUM_NOT,
  NicWhereInput.JSON_PROPERTY_MAX_VF_NUM_NOT_IN,
  NicWhereInput.JSON_PROPERTY_MODEL,
  NicWhereInput.JSON_PROPERTY_MODEL_CONTAINS,
  NicWhereInput.JSON_PROPERTY_MODEL_ENDS_WITH,
  NicWhereInput.JSON_PROPERTY_MODEL_GT,
  NicWhereInput.JSON_PROPERTY_MODEL_GTE,
  NicWhereInput.JSON_PROPERTY_MODEL_IN,
  NicWhereInput.JSON_PROPERTY_MODEL_LT,
  NicWhereInput.JSON_PROPERTY_MODEL_LTE,
  NicWhereInput.JSON_PROPERTY_MODEL_NOT,
  NicWhereInput.JSON_PROPERTY_MODEL_NOT_CONTAINS,
  NicWhereInput.JSON_PROPERTY_MODEL_NOT_ENDS_WITH,
  NicWhereInput.JSON_PROPERTY_MODEL_NOT_IN,
  NicWhereInput.JSON_PROPERTY_MODEL_NOT_STARTS_WITH,
  NicWhereInput.JSON_PROPERTY_MODEL_STARTS_WITH,
  NicWhereInput.JSON_PROPERTY_MTU,
  NicWhereInput.JSON_PROPERTY_MTU_GT,
  NicWhereInput.JSON_PROPERTY_MTU_GTE,
  NicWhereInput.JSON_PROPERTY_MTU_IN,
  NicWhereInput.JSON_PROPERTY_MTU_LT,
  NicWhereInput.JSON_PROPERTY_MTU_LTE,
  NicWhereInput.JSON_PROPERTY_MTU_NOT,
  NicWhereInput.JSON_PROPERTY_MTU_NOT_IN,
  NicWhereInput.JSON_PROPERTY_NAME,
  NicWhereInput.JSON_PROPERTY_NAME_CONTAINS,
  NicWhereInput.JSON_PROPERTY_NAME_ENDS_WITH,
  NicWhereInput.JSON_PROPERTY_NAME_GT,
  NicWhereInput.JSON_PROPERTY_NAME_GTE,
  NicWhereInput.JSON_PROPERTY_NAME_IN,
  NicWhereInput.JSON_PROPERTY_NAME_LT,
  NicWhereInput.JSON_PROPERTY_NAME_LTE,
  NicWhereInput.JSON_PROPERTY_NAME_NOT,
  NicWhereInput.JSON_PROPERTY_NAME_NOT_CONTAINS,
  NicWhereInput.JSON_PROPERTY_NAME_NOT_ENDS_WITH,
  NicWhereInput.JSON_PROPERTY_NAME_NOT_IN,
  NicWhereInput.JSON_PROPERTY_NAME_NOT_STARTS_WITH,
  NicWhereInput.JSON_PROPERTY_NAME_STARTS_WITH,
  NicWhereInput.JSON_PROPERTY_NIC_UUID,
  NicWhereInput.JSON_PROPERTY_NIC_UUID_CONTAINS,
  NicWhereInput.JSON_PROPERTY_NIC_UUID_ENDS_WITH,
  NicWhereInput.JSON_PROPERTY_NIC_UUID_GT,
  NicWhereInput.JSON_PROPERTY_NIC_UUID_GTE,
  NicWhereInput.JSON_PROPERTY_NIC_UUID_IN,
  NicWhereInput.JSON_PROPERTY_NIC_UUID_LT,
  NicWhereInput.JSON_PROPERTY_NIC_UUID_LTE,
  NicWhereInput.JSON_PROPERTY_NIC_UUID_NOT,
  NicWhereInput.JSON_PROPERTY_NIC_UUID_NOT_CONTAINS,
  NicWhereInput.JSON_PROPERTY_NIC_UUID_NOT_ENDS_WITH,
  NicWhereInput.JSON_PROPERTY_NIC_UUID_NOT_IN,
  NicWhereInput.JSON_PROPERTY_NIC_UUID_NOT_STARTS_WITH,
  NicWhereInput.JSON_PROPERTY_NIC_UUID_STARTS_WITH,
  NicWhereInput.JSON_PROPERTY_N_O_T,
  NicWhereInput.JSON_PROPERTY_O_R,
  NicWhereInput.JSON_PROPERTY_PHYSICAL,
  NicWhereInput.JSON_PROPERTY_PHYSICAL_NOT,
  NicWhereInput.JSON_PROPERTY_RDMA_ENABLED,
  NicWhereInput.JSON_PROPERTY_RDMA_ENABLED_NOT,
  NicWhereInput.JSON_PROPERTY_RUNNING,
  NicWhereInput.JSON_PROPERTY_RUNNING_NOT,
  NicWhereInput.JSON_PROPERTY_SPEED,
  NicWhereInput.JSON_PROPERTY_SPEED_GT,
  NicWhereInput.JSON_PROPERTY_SPEED_GTE,
  NicWhereInput.JSON_PROPERTY_SPEED_IN,
  NicWhereInput.JSON_PROPERTY_SPEED_LT,
  NicWhereInput.JSON_PROPERTY_SPEED_LTE,
  NicWhereInput.JSON_PROPERTY_SPEED_NOT,
  NicWhereInput.JSON_PROPERTY_SPEED_NOT_IN,
  NicWhereInput.JSON_PROPERTY_SUBNET_MASK,
  NicWhereInput.JSON_PROPERTY_SUBNET_MASK_CONTAINS,
  NicWhereInput.JSON_PROPERTY_SUBNET_MASK_ENDS_WITH,
  NicWhereInput.JSON_PROPERTY_SUBNET_MASK_GT,
  NicWhereInput.JSON_PROPERTY_SUBNET_MASK_GTE,
  NicWhereInput.JSON_PROPERTY_SUBNET_MASK_IN,
  NicWhereInput.JSON_PROPERTY_SUBNET_MASK_LT,
  NicWhereInput.JSON_PROPERTY_SUBNET_MASK_LTE,
  NicWhereInput.JSON_PROPERTY_SUBNET_MASK_NOT,
  NicWhereInput.JSON_PROPERTY_SUBNET_MASK_NOT_CONTAINS,
  NicWhereInput.JSON_PROPERTY_SUBNET_MASK_NOT_ENDS_WITH,
  NicWhereInput.JSON_PROPERTY_SUBNET_MASK_NOT_IN,
  NicWhereInput.JSON_PROPERTY_SUBNET_MASK_NOT_STARTS_WITH,
  NicWhereInput.JSON_PROPERTY_SUBNET_MASK_STARTS_WITH,
  NicWhereInput.JSON_PROPERTY_TOTAL_VF_NUM,
  NicWhereInput.JSON_PROPERTY_TOTAL_VF_NUM_GT,
  NicWhereInput.JSON_PROPERTY_TOTAL_VF_NUM_GTE,
  NicWhereInput.JSON_PROPERTY_TOTAL_VF_NUM_IN,
  NicWhereInput.JSON_PROPERTY_TOTAL_VF_NUM_LT,
  NicWhereInput.JSON_PROPERTY_TOTAL_VF_NUM_LTE,
  NicWhereInput.JSON_PROPERTY_TOTAL_VF_NUM_NOT,
  NicWhereInput.JSON_PROPERTY_TOTAL_VF_NUM_NOT_IN,
  NicWhereInput.JSON_PROPERTY_TYPE,
  NicWhereInput.JSON_PROPERTY_TYPE_IN,
  NicWhereInput.JSON_PROPERTY_TYPE_NOT,
  NicWhereInput.JSON_PROPERTY_TYPE_NOT_IN,
  NicWhereInput.JSON_PROPERTY_UP,
  NicWhereInput.JSON_PROPERTY_UP_NOT,
  NicWhereInput.JSON_PROPERTY_USED_VF_NUM,
  NicWhereInput.JSON_PROPERTY_USED_VF_NUM_GT,
  NicWhereInput.JSON_PROPERTY_USED_VF_NUM_GTE,
  NicWhereInput.JSON_PROPERTY_USED_VF_NUM_IN,
  NicWhereInput.JSON_PROPERTY_USED_VF_NUM_LT,
  NicWhereInput.JSON_PROPERTY_USED_VF_NUM_LTE,
  NicWhereInput.JSON_PROPERTY_USED_VF_NUM_NOT,
  NicWhereInput.JSON_PROPERTY_USED_VF_NUM_NOT_IN,
  NicWhereInput.JSON_PROPERTY_VDS
})
@javax.annotation.processing.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2021-10-27T15:59:14.939791800+08:00[Asia/Shanghai]")
public class NicWhereInput {
  public static final String JSON_PROPERTY_A_N_D = "AND";
  private JsonNullable<List<NicWhereInput>> AND = JsonNullable.<List<NicWhereInput>>undefined();

  public static final String JSON_PROPERTY_DRIVER = "driver";
  private JsonNullable<String> driver = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_DRIVER_CONTAINS = "driver_contains";
  private JsonNullable<String> driverContains = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_DRIVER_ENDS_WITH = "driver_ends_with";
  private JsonNullable<String> driverEndsWith = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_DRIVER_GT = "driver_gt";
  private JsonNullable<String> driverGt = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_DRIVER_GTE = "driver_gte";
  private JsonNullable<String> driverGte = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_DRIVER_IN = "driver_in";
  private JsonNullable<List<String>> driverIn = JsonNullable.<List<String>>undefined();

  public static final String JSON_PROPERTY_DRIVER_LT = "driver_lt";
  private JsonNullable<String> driverLt = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_DRIVER_LTE = "driver_lte";
  private JsonNullable<String> driverLte = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_DRIVER_NOT = "driver_not";
  private JsonNullable<String> driverNot = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_DRIVER_NOT_CONTAINS = "driver_not_contains";
  private JsonNullable<String> driverNotContains = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_DRIVER_NOT_ENDS_WITH = "driver_not_ends_with";
  private JsonNullable<String> driverNotEndsWith = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_DRIVER_NOT_IN = "driver_not_in";
  private JsonNullable<List<String>> driverNotIn = JsonNullable.<List<String>>undefined();

  public static final String JSON_PROPERTY_DRIVER_NOT_STARTS_WITH = "driver_not_starts_with";
  private JsonNullable<String> driverNotStartsWith = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_DRIVER_STARTS_WITH = "driver_starts_with";
  private JsonNullable<String> driverStartsWith = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_DRIVER_STATE = "driver_state";
  private JsonNullable<NicDriverState> driverState = JsonNullable.<NicDriverState>undefined();

  public static final String JSON_PROPERTY_DRIVER_STATE_IN = "driver_state_in";
  private JsonNullable<List<NicDriverState>> driverStateIn = JsonNullable.<List<NicDriverState>>undefined();

  public static final String JSON_PROPERTY_DRIVER_STATE_NOT = "driver_state_not";
  private JsonNullable<NicDriverState> driverStateNot = JsonNullable.<NicDriverState>undefined();

  public static final String JSON_PROPERTY_DRIVER_STATE_NOT_IN = "driver_state_not_in";
  private JsonNullable<List<NicDriverState>> driverStateNotIn = JsonNullable.<List<NicDriverState>>undefined();

  public static final String JSON_PROPERTY_GATEWAY_IP = "gateway_ip";
  private JsonNullable<String> gatewayIp = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_GATEWAY_IP_CONTAINS = "gateway_ip_contains";
  private JsonNullable<String> gatewayIpContains = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_GATEWAY_IP_ENDS_WITH = "gateway_ip_ends_with";
  private JsonNullable<String> gatewayIpEndsWith = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_GATEWAY_IP_GT = "gateway_ip_gt";
  private JsonNullable<String> gatewayIpGt = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_GATEWAY_IP_GTE = "gateway_ip_gte";
  private JsonNullable<String> gatewayIpGte = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_GATEWAY_IP_IN = "gateway_ip_in";
  private JsonNullable<List<String>> gatewayIpIn = JsonNullable.<List<String>>undefined();

  public static final String JSON_PROPERTY_GATEWAY_IP_LT = "gateway_ip_lt";
  private JsonNullable<String> gatewayIpLt = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_GATEWAY_IP_LTE = "gateway_ip_lte";
  private JsonNullable<String> gatewayIpLte = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_GATEWAY_IP_NOT = "gateway_ip_not";
  private JsonNullable<String> gatewayIpNot = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_GATEWAY_IP_NOT_CONTAINS = "gateway_ip_not_contains";
  private JsonNullable<String> gatewayIpNotContains = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_GATEWAY_IP_NOT_ENDS_WITH = "gateway_ip_not_ends_with";
  private JsonNullable<String> gatewayIpNotEndsWith = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_GATEWAY_IP_NOT_IN = "gateway_ip_not_in";
  private JsonNullable<List<String>> gatewayIpNotIn = JsonNullable.<List<String>>undefined();

  public static final String JSON_PROPERTY_GATEWAY_IP_NOT_STARTS_WITH = "gateway_ip_not_starts_with";
  private JsonNullable<String> gatewayIpNotStartsWith = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_GATEWAY_IP_STARTS_WITH = "gateway_ip_starts_with";
  private JsonNullable<String> gatewayIpStartsWith = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_HOST = "host";
  private JsonNullable<HostWhereInput> host = JsonNullable.<HostWhereInput>undefined();

  public static final String JSON_PROPERTY_IBDEV = "ibdev";
  private JsonNullable<String> ibdev = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_IBDEV_CONTAINS = "ibdev_contains";
  private JsonNullable<String> ibdevContains = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_IBDEV_ENDS_WITH = "ibdev_ends_with";
  private JsonNullable<String> ibdevEndsWith = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_IBDEV_GT = "ibdev_gt";
  private JsonNullable<String> ibdevGt = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_IBDEV_GTE = "ibdev_gte";
  private JsonNullable<String> ibdevGte = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_IBDEV_IN = "ibdev_in";
  private JsonNullable<List<String>> ibdevIn = JsonNullable.<List<String>>undefined();

  public static final String JSON_PROPERTY_IBDEV_LT = "ibdev_lt";
  private JsonNullable<String> ibdevLt = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_IBDEV_LTE = "ibdev_lte";
  private JsonNullable<String> ibdevLte = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_IBDEV_NOT = "ibdev_not";
  private JsonNullable<String> ibdevNot = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_IBDEV_NOT_CONTAINS = "ibdev_not_contains";
  private JsonNullable<String> ibdevNotContains = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_IBDEV_NOT_ENDS_WITH = "ibdev_not_ends_with";
  private JsonNullable<String> ibdevNotEndsWith = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_IBDEV_NOT_IN = "ibdev_not_in";
  private JsonNullable<List<String>> ibdevNotIn = JsonNullable.<List<String>>undefined();

  public static final String JSON_PROPERTY_IBDEV_NOT_STARTS_WITH = "ibdev_not_starts_with";
  private JsonNullable<String> ibdevNotStartsWith = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_IBDEV_STARTS_WITH = "ibdev_starts_with";
  private JsonNullable<String> ibdevStartsWith = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_ID = "id";
  private JsonNullable<String> id = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_ID_CONTAINS = "id_contains";
  private JsonNullable<String> idContains = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_ID_ENDS_WITH = "id_ends_with";
  private JsonNullable<String> idEndsWith = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_ID_GT = "id_gt";
  private JsonNullable<String> idGt = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_ID_GTE = "id_gte";
  private JsonNullable<String> idGte = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_ID_IN = "id_in";
  private JsonNullable<List<String>> idIn = JsonNullable.<List<String>>undefined();

  public static final String JSON_PROPERTY_ID_LT = "id_lt";
  private JsonNullable<String> idLt = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_ID_LTE = "id_lte";
  private JsonNullable<String> idLte = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_ID_NOT = "id_not";
  private JsonNullable<String> idNot = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_ID_NOT_CONTAINS = "id_not_contains";
  private JsonNullable<String> idNotContains = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_ID_NOT_ENDS_WITH = "id_not_ends_with";
  private JsonNullable<String> idNotEndsWith = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_ID_NOT_IN = "id_not_in";
  private JsonNullable<List<String>> idNotIn = JsonNullable.<List<String>>undefined();

  public static final String JSON_PROPERTY_ID_NOT_STARTS_WITH = "id_not_starts_with";
  private JsonNullable<String> idNotStartsWith = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_ID_STARTS_WITH = "id_starts_with";
  private JsonNullable<String> idStartsWith = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_IP_ADDRESS = "ip_address";
  private JsonNullable<String> ipAddress = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_IP_ADDRESS_CONTAINS = "ip_address_contains";
  private JsonNullable<String> ipAddressContains = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_IP_ADDRESS_ENDS_WITH = "ip_address_ends_with";
  private JsonNullable<String> ipAddressEndsWith = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_IP_ADDRESS_GT = "ip_address_gt";
  private JsonNullable<String> ipAddressGt = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_IP_ADDRESS_GTE = "ip_address_gte";
  private JsonNullable<String> ipAddressGte = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_IP_ADDRESS_IN = "ip_address_in";
  private JsonNullable<List<String>> ipAddressIn = JsonNullable.<List<String>>undefined();

  public static final String JSON_PROPERTY_IP_ADDRESS_LT = "ip_address_lt";
  private JsonNullable<String> ipAddressLt = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_IP_ADDRESS_LTE = "ip_address_lte";
  private JsonNullable<String> ipAddressLte = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_IP_ADDRESS_NOT = "ip_address_not";
  private JsonNullable<String> ipAddressNot = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_IP_ADDRESS_NOT_CONTAINS = "ip_address_not_contains";
  private JsonNullable<String> ipAddressNotContains = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_IP_ADDRESS_NOT_ENDS_WITH = "ip_address_not_ends_with";
  private JsonNullable<String> ipAddressNotEndsWith = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_IP_ADDRESS_NOT_IN = "ip_address_not_in";
  private JsonNullable<List<String>> ipAddressNotIn = JsonNullable.<List<String>>undefined();

  public static final String JSON_PROPERTY_IP_ADDRESS_NOT_STARTS_WITH = "ip_address_not_starts_with";
  private JsonNullable<String> ipAddressNotStartsWith = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_IP_ADDRESS_STARTS_WITH = "ip_address_starts_with";
  private JsonNullable<String> ipAddressStartsWith = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_IS_SRIOV = "is_sriov";
  private JsonNullable<Boolean> isSriov = JsonNullable.<Boolean>undefined();

  public static final String JSON_PROPERTY_IS_SRIOV_NOT = "is_sriov_not";
  private JsonNullable<Boolean> isSriovNot = JsonNullable.<Boolean>undefined();

  public static final String JSON_PROPERTY_LABELS_EVERY = "labels_every";
  private JsonNullable<LabelWhereInput> labelsEvery = JsonNullable.<LabelWhereInput>undefined();

  public static final String JSON_PROPERTY_LABELS_NONE = "labels_none";
  private JsonNullable<LabelWhereInput> labelsNone = JsonNullable.<LabelWhereInput>undefined();

  public static final String JSON_PROPERTY_LABELS_SOME = "labels_some";
  private JsonNullable<LabelWhereInput> labelsSome = JsonNullable.<LabelWhereInput>undefined();

  public static final String JSON_PROPERTY_LOCAL_ID = "local_id";
  private JsonNullable<String> localId = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_LOCAL_ID_CONTAINS = "local_id_contains";
  private JsonNullable<String> localIdContains = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_LOCAL_ID_ENDS_WITH = "local_id_ends_with";
  private JsonNullable<String> localIdEndsWith = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_LOCAL_ID_GT = "local_id_gt";
  private JsonNullable<String> localIdGt = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_LOCAL_ID_GTE = "local_id_gte";
  private JsonNullable<String> localIdGte = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_LOCAL_ID_IN = "local_id_in";
  private JsonNullable<List<String>> localIdIn = JsonNullable.<List<String>>undefined();

  public static final String JSON_PROPERTY_LOCAL_ID_LT = "local_id_lt";
  private JsonNullable<String> localIdLt = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_LOCAL_ID_LTE = "local_id_lte";
  private JsonNullable<String> localIdLte = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_LOCAL_ID_NOT = "local_id_not";
  private JsonNullable<String> localIdNot = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_LOCAL_ID_NOT_CONTAINS = "local_id_not_contains";
  private JsonNullable<String> localIdNotContains = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_LOCAL_ID_NOT_ENDS_WITH = "local_id_not_ends_with";
  private JsonNullable<String> localIdNotEndsWith = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_LOCAL_ID_NOT_IN = "local_id_not_in";
  private JsonNullable<List<String>> localIdNotIn = JsonNullable.<List<String>>undefined();

  public static final String JSON_PROPERTY_LOCAL_ID_NOT_STARTS_WITH = "local_id_not_starts_with";
  private JsonNullable<String> localIdNotStartsWith = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_LOCAL_ID_STARTS_WITH = "local_id_starts_with";
  private JsonNullable<String> localIdStartsWith = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_MAC_ADDRESS = "mac_address";
  private JsonNullable<String> macAddress = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_MAC_ADDRESS_CONTAINS = "mac_address_contains";
  private JsonNullable<String> macAddressContains = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_MAC_ADDRESS_ENDS_WITH = "mac_address_ends_with";
  private JsonNullable<String> macAddressEndsWith = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_MAC_ADDRESS_GT = "mac_address_gt";
  private JsonNullable<String> macAddressGt = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_MAC_ADDRESS_GTE = "mac_address_gte";
  private JsonNullable<String> macAddressGte = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_MAC_ADDRESS_IN = "mac_address_in";
  private JsonNullable<List<String>> macAddressIn = JsonNullable.<List<String>>undefined();

  public static final String JSON_PROPERTY_MAC_ADDRESS_LT = "mac_address_lt";
  private JsonNullable<String> macAddressLt = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_MAC_ADDRESS_LTE = "mac_address_lte";
  private JsonNullable<String> macAddressLte = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_MAC_ADDRESS_NOT = "mac_address_not";
  private JsonNullable<String> macAddressNot = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_MAC_ADDRESS_NOT_CONTAINS = "mac_address_not_contains";
  private JsonNullable<String> macAddressNotContains = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_MAC_ADDRESS_NOT_ENDS_WITH = "mac_address_not_ends_with";
  private JsonNullable<String> macAddressNotEndsWith = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_MAC_ADDRESS_NOT_IN = "mac_address_not_in";
  private JsonNullable<List<String>> macAddressNotIn = JsonNullable.<List<String>>undefined();

  public static final String JSON_PROPERTY_MAC_ADDRESS_NOT_STARTS_WITH = "mac_address_not_starts_with";
  private JsonNullable<String> macAddressNotStartsWith = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_MAC_ADDRESS_STARTS_WITH = "mac_address_starts_with";
  private JsonNullable<String> macAddressStartsWith = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_MAX_VF_NUM = "max_vf_num";
  private JsonNullable<Double> maxVfNum = JsonNullable.<Double>undefined();

  public static final String JSON_PROPERTY_MAX_VF_NUM_GT = "max_vf_num_gt";
  private JsonNullable<Double> maxVfNumGt = JsonNullable.<Double>undefined();

  public static final String JSON_PROPERTY_MAX_VF_NUM_GTE = "max_vf_num_gte";
  private JsonNullable<Double> maxVfNumGte = JsonNullable.<Double>undefined();

  public static final String JSON_PROPERTY_MAX_VF_NUM_IN = "max_vf_num_in";
  private JsonNullable<List<Double>> maxVfNumIn = JsonNullable.<List<Double>>undefined();

  public static final String JSON_PROPERTY_MAX_VF_NUM_LT = "max_vf_num_lt";
  private JsonNullable<Double> maxVfNumLt = JsonNullable.<Double>undefined();

  public static final String JSON_PROPERTY_MAX_VF_NUM_LTE = "max_vf_num_lte";
  private JsonNullable<Double> maxVfNumLte = JsonNullable.<Double>undefined();

  public static final String JSON_PROPERTY_MAX_VF_NUM_NOT = "max_vf_num_not";
  private JsonNullable<Double> maxVfNumNot = JsonNullable.<Double>undefined();

  public static final String JSON_PROPERTY_MAX_VF_NUM_NOT_IN = "max_vf_num_not_in";
  private JsonNullable<List<Double>> maxVfNumNotIn = JsonNullable.<List<Double>>undefined();

  public static final String JSON_PROPERTY_MODEL = "model";
  private JsonNullable<String> model = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_MODEL_CONTAINS = "model_contains";
  private JsonNullable<String> modelContains = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_MODEL_ENDS_WITH = "model_ends_with";
  private JsonNullable<String> modelEndsWith = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_MODEL_GT = "model_gt";
  private JsonNullable<String> modelGt = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_MODEL_GTE = "model_gte";
  private JsonNullable<String> modelGte = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_MODEL_IN = "model_in";
  private JsonNullable<List<String>> modelIn = JsonNullable.<List<String>>undefined();

  public static final String JSON_PROPERTY_MODEL_LT = "model_lt";
  private JsonNullable<String> modelLt = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_MODEL_LTE = "model_lte";
  private JsonNullable<String> modelLte = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_MODEL_NOT = "model_not";
  private JsonNullable<String> modelNot = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_MODEL_NOT_CONTAINS = "model_not_contains";
  private JsonNullable<String> modelNotContains = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_MODEL_NOT_ENDS_WITH = "model_not_ends_with";
  private JsonNullable<String> modelNotEndsWith = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_MODEL_NOT_IN = "model_not_in";
  private JsonNullable<List<String>> modelNotIn = JsonNullable.<List<String>>undefined();

  public static final String JSON_PROPERTY_MODEL_NOT_STARTS_WITH = "model_not_starts_with";
  private JsonNullable<String> modelNotStartsWith = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_MODEL_STARTS_WITH = "model_starts_with";
  private JsonNullable<String> modelStartsWith = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_MTU = "mtu";
  private JsonNullable<Double> mtu = JsonNullable.<Double>undefined();

  public static final String JSON_PROPERTY_MTU_GT = "mtu_gt";
  private JsonNullable<Double> mtuGt = JsonNullable.<Double>undefined();

  public static final String JSON_PROPERTY_MTU_GTE = "mtu_gte";
  private JsonNullable<Double> mtuGte = JsonNullable.<Double>undefined();

  public static final String JSON_PROPERTY_MTU_IN = "mtu_in";
  private JsonNullable<List<Double>> mtuIn = JsonNullable.<List<Double>>undefined();

  public static final String JSON_PROPERTY_MTU_LT = "mtu_lt";
  private JsonNullable<Double> mtuLt = JsonNullable.<Double>undefined();

  public static final String JSON_PROPERTY_MTU_LTE = "mtu_lte";
  private JsonNullable<Double> mtuLte = JsonNullable.<Double>undefined();

  public static final String JSON_PROPERTY_MTU_NOT = "mtu_not";
  private JsonNullable<Double> mtuNot = JsonNullable.<Double>undefined();

  public static final String JSON_PROPERTY_MTU_NOT_IN = "mtu_not_in";
  private JsonNullable<List<Double>> mtuNotIn = JsonNullable.<List<Double>>undefined();

  public static final String JSON_PROPERTY_NAME = "name";
  private JsonNullable<String> name = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_NAME_CONTAINS = "name_contains";
  private JsonNullable<String> nameContains = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_NAME_ENDS_WITH = "name_ends_with";
  private JsonNullable<String> nameEndsWith = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_NAME_GT = "name_gt";
  private JsonNullable<String> nameGt = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_NAME_GTE = "name_gte";
  private JsonNullable<String> nameGte = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_NAME_IN = "name_in";
  private JsonNullable<List<String>> nameIn = JsonNullable.<List<String>>undefined();

  public static final String JSON_PROPERTY_NAME_LT = "name_lt";
  private JsonNullable<String> nameLt = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_NAME_LTE = "name_lte";
  private JsonNullable<String> nameLte = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_NAME_NOT = "name_not";
  private JsonNullable<String> nameNot = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_NAME_NOT_CONTAINS = "name_not_contains";
  private JsonNullable<String> nameNotContains = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_NAME_NOT_ENDS_WITH = "name_not_ends_with";
  private JsonNullable<String> nameNotEndsWith = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_NAME_NOT_IN = "name_not_in";
  private JsonNullable<List<String>> nameNotIn = JsonNullable.<List<String>>undefined();

  public static final String JSON_PROPERTY_NAME_NOT_STARTS_WITH = "name_not_starts_with";
  private JsonNullable<String> nameNotStartsWith = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_NAME_STARTS_WITH = "name_starts_with";
  private JsonNullable<String> nameStartsWith = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_NIC_UUID = "nic_uuid";
  private JsonNullable<String> nicUuid = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_NIC_UUID_CONTAINS = "nic_uuid_contains";
  private JsonNullable<String> nicUuidContains = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_NIC_UUID_ENDS_WITH = "nic_uuid_ends_with";
  private JsonNullable<String> nicUuidEndsWith = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_NIC_UUID_GT = "nic_uuid_gt";
  private JsonNullable<String> nicUuidGt = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_NIC_UUID_GTE = "nic_uuid_gte";
  private JsonNullable<String> nicUuidGte = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_NIC_UUID_IN = "nic_uuid_in";
  private JsonNullable<List<String>> nicUuidIn = JsonNullable.<List<String>>undefined();

  public static final String JSON_PROPERTY_NIC_UUID_LT = "nic_uuid_lt";
  private JsonNullable<String> nicUuidLt = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_NIC_UUID_LTE = "nic_uuid_lte";
  private JsonNullable<String> nicUuidLte = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_NIC_UUID_NOT = "nic_uuid_not";
  private JsonNullable<String> nicUuidNot = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_NIC_UUID_NOT_CONTAINS = "nic_uuid_not_contains";
  private JsonNullable<String> nicUuidNotContains = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_NIC_UUID_NOT_ENDS_WITH = "nic_uuid_not_ends_with";
  private JsonNullable<String> nicUuidNotEndsWith = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_NIC_UUID_NOT_IN = "nic_uuid_not_in";
  private JsonNullable<List<String>> nicUuidNotIn = JsonNullable.<List<String>>undefined();

  public static final String JSON_PROPERTY_NIC_UUID_NOT_STARTS_WITH = "nic_uuid_not_starts_with";
  private JsonNullable<String> nicUuidNotStartsWith = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_NIC_UUID_STARTS_WITH = "nic_uuid_starts_with";
  private JsonNullable<String> nicUuidStartsWith = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_N_O_T = "NOT";
  private JsonNullable<List<NicWhereInput>> NOT = JsonNullable.<List<NicWhereInput>>undefined();

  public static final String JSON_PROPERTY_O_R = "OR";
  private JsonNullable<List<NicWhereInput>> OR = JsonNullable.<List<NicWhereInput>>undefined();

  public static final String JSON_PROPERTY_PHYSICAL = "physical";
  private JsonNullable<Boolean> physical = JsonNullable.<Boolean>undefined();

  public static final String JSON_PROPERTY_PHYSICAL_NOT = "physical_not";
  private JsonNullable<Boolean> physicalNot = JsonNullable.<Boolean>undefined();

  public static final String JSON_PROPERTY_RDMA_ENABLED = "rdma_enabled";
  private JsonNullable<Boolean> rdmaEnabled = JsonNullable.<Boolean>undefined();

  public static final String JSON_PROPERTY_RDMA_ENABLED_NOT = "rdma_enabled_not";
  private JsonNullable<Boolean> rdmaEnabledNot = JsonNullable.<Boolean>undefined();

  public static final String JSON_PROPERTY_RUNNING = "running";
  private JsonNullable<Boolean> running = JsonNullable.<Boolean>undefined();

  public static final String JSON_PROPERTY_RUNNING_NOT = "running_not";
  private JsonNullable<Boolean> runningNot = JsonNullable.<Boolean>undefined();

  public static final String JSON_PROPERTY_SPEED = "speed";
  private JsonNullable<Double> speed = JsonNullable.<Double>undefined();

  public static final String JSON_PROPERTY_SPEED_GT = "speed_gt";
  private JsonNullable<Double> speedGt = JsonNullable.<Double>undefined();

  public static final String JSON_PROPERTY_SPEED_GTE = "speed_gte";
  private JsonNullable<Double> speedGte = JsonNullable.<Double>undefined();

  public static final String JSON_PROPERTY_SPEED_IN = "speed_in";
  private JsonNullable<List<Double>> speedIn = JsonNullable.<List<Double>>undefined();

  public static final String JSON_PROPERTY_SPEED_LT = "speed_lt";
  private JsonNullable<Double> speedLt = JsonNullable.<Double>undefined();

  public static final String JSON_PROPERTY_SPEED_LTE = "speed_lte";
  private JsonNullable<Double> speedLte = JsonNullable.<Double>undefined();

  public static final String JSON_PROPERTY_SPEED_NOT = "speed_not";
  private JsonNullable<Double> speedNot = JsonNullable.<Double>undefined();

  public static final String JSON_PROPERTY_SPEED_NOT_IN = "speed_not_in";
  private JsonNullable<List<Double>> speedNotIn = JsonNullable.<List<Double>>undefined();

  public static final String JSON_PROPERTY_SUBNET_MASK = "subnet_mask";
  private JsonNullable<String> subnetMask = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_SUBNET_MASK_CONTAINS = "subnet_mask_contains";
  private JsonNullable<String> subnetMaskContains = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_SUBNET_MASK_ENDS_WITH = "subnet_mask_ends_with";
  private JsonNullable<String> subnetMaskEndsWith = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_SUBNET_MASK_GT = "subnet_mask_gt";
  private JsonNullable<String> subnetMaskGt = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_SUBNET_MASK_GTE = "subnet_mask_gte";
  private JsonNullable<String> subnetMaskGte = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_SUBNET_MASK_IN = "subnet_mask_in";
  private JsonNullable<List<String>> subnetMaskIn = JsonNullable.<List<String>>undefined();

  public static final String JSON_PROPERTY_SUBNET_MASK_LT = "subnet_mask_lt";
  private JsonNullable<String> subnetMaskLt = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_SUBNET_MASK_LTE = "subnet_mask_lte";
  private JsonNullable<String> subnetMaskLte = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_SUBNET_MASK_NOT = "subnet_mask_not";
  private JsonNullable<String> subnetMaskNot = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_SUBNET_MASK_NOT_CONTAINS = "subnet_mask_not_contains";
  private JsonNullable<String> subnetMaskNotContains = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_SUBNET_MASK_NOT_ENDS_WITH = "subnet_mask_not_ends_with";
  private JsonNullable<String> subnetMaskNotEndsWith = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_SUBNET_MASK_NOT_IN = "subnet_mask_not_in";
  private JsonNullable<List<String>> subnetMaskNotIn = JsonNullable.<List<String>>undefined();

  public static final String JSON_PROPERTY_SUBNET_MASK_NOT_STARTS_WITH = "subnet_mask_not_starts_with";
  private JsonNullable<String> subnetMaskNotStartsWith = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_SUBNET_MASK_STARTS_WITH = "subnet_mask_starts_with";
  private JsonNullable<String> subnetMaskStartsWith = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_TOTAL_VF_NUM = "total_vf_num";
  private JsonNullable<Double> totalVfNum = JsonNullable.<Double>undefined();

  public static final String JSON_PROPERTY_TOTAL_VF_NUM_GT = "total_vf_num_gt";
  private JsonNullable<Double> totalVfNumGt = JsonNullable.<Double>undefined();

  public static final String JSON_PROPERTY_TOTAL_VF_NUM_GTE = "total_vf_num_gte";
  private JsonNullable<Double> totalVfNumGte = JsonNullable.<Double>undefined();

  public static final String JSON_PROPERTY_TOTAL_VF_NUM_IN = "total_vf_num_in";
  private JsonNullable<List<Double>> totalVfNumIn = JsonNullable.<List<Double>>undefined();

  public static final String JSON_PROPERTY_TOTAL_VF_NUM_LT = "total_vf_num_lt";
  private JsonNullable<Double> totalVfNumLt = JsonNullable.<Double>undefined();

  public static final String JSON_PROPERTY_TOTAL_VF_NUM_LTE = "total_vf_num_lte";
  private JsonNullable<Double> totalVfNumLte = JsonNullable.<Double>undefined();

  public static final String JSON_PROPERTY_TOTAL_VF_NUM_NOT = "total_vf_num_not";
  private JsonNullable<Double> totalVfNumNot = JsonNullable.<Double>undefined();

  public static final String JSON_PROPERTY_TOTAL_VF_NUM_NOT_IN = "total_vf_num_not_in";
  private JsonNullable<List<Double>> totalVfNumNotIn = JsonNullable.<List<Double>>undefined();

  public static final String JSON_PROPERTY_TYPE = "type";
  private JsonNullable<NetworkType> type = JsonNullable.<NetworkType>undefined();

  public static final String JSON_PROPERTY_TYPE_IN = "type_in";
  private JsonNullable<List<NetworkType>> typeIn = JsonNullable.<List<NetworkType>>undefined();

  public static final String JSON_PROPERTY_TYPE_NOT = "type_not";
  private JsonNullable<NetworkType> typeNot = JsonNullable.<NetworkType>undefined();

  public static final String JSON_PROPERTY_TYPE_NOT_IN = "type_not_in";
  private JsonNullable<List<NetworkType>> typeNotIn = JsonNullable.<List<NetworkType>>undefined();

  public static final String JSON_PROPERTY_UP = "up";
  private JsonNullable<Boolean> up = JsonNullable.<Boolean>undefined();

  public static final String JSON_PROPERTY_UP_NOT = "up_not";
  private JsonNullable<Boolean> upNot = JsonNullable.<Boolean>undefined();

  public static final String JSON_PROPERTY_USED_VF_NUM = "used_vf_num";
  private JsonNullable<Double> usedVfNum = JsonNullable.<Double>undefined();

  public static final String JSON_PROPERTY_USED_VF_NUM_GT = "used_vf_num_gt";
  private JsonNullable<Double> usedVfNumGt = JsonNullable.<Double>undefined();

  public static final String JSON_PROPERTY_USED_VF_NUM_GTE = "used_vf_num_gte";
  private JsonNullable<Double> usedVfNumGte = JsonNullable.<Double>undefined();

  public static final String JSON_PROPERTY_USED_VF_NUM_IN = "used_vf_num_in";
  private JsonNullable<List<Double>> usedVfNumIn = JsonNullable.<List<Double>>undefined();

  public static final String JSON_PROPERTY_USED_VF_NUM_LT = "used_vf_num_lt";
  private JsonNullable<Double> usedVfNumLt = JsonNullable.<Double>undefined();

  public static final String JSON_PROPERTY_USED_VF_NUM_LTE = "used_vf_num_lte";
  private JsonNullable<Double> usedVfNumLte = JsonNullable.<Double>undefined();

  public static final String JSON_PROPERTY_USED_VF_NUM_NOT = "used_vf_num_not";
  private JsonNullable<Double> usedVfNumNot = JsonNullable.<Double>undefined();

  public static final String JSON_PROPERTY_USED_VF_NUM_NOT_IN = "used_vf_num_not_in";
  private JsonNullable<List<Double>> usedVfNumNotIn = JsonNullable.<List<Double>>undefined();

  public static final String JSON_PROPERTY_VDS = "vds";
  private JsonNullable<VdsWhereInput> vds = JsonNullable.<VdsWhereInput>undefined();


  public NicWhereInput AND(List<NicWhereInput> AND) {
    this.AND = JsonNullable.<List<NicWhereInput>>of(AND);
    return this;
  }

  public NicWhereInput addANDItem(NicWhereInput ANDItem) {
    if (this.AND == null || !this.AND.isPresent()) {
      this.AND = JsonNullable.<List<NicWhereInput>>of(new ArrayList<>());
    }
    try {
      this.AND.get().add(ANDItem);
    } catch (java.util.NoSuchElementException e) {
      // this can never happen, as we make sure above that the value is present
    }
    return this;
  }

   /**
   * Get AND
   * @return AND
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public List<NicWhereInput> getAND() {
        return AND.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_A_N_D)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<List<NicWhereInput>> getAND_JsonNullable() {
    return AND;
  }
  
  @JsonProperty(JSON_PROPERTY_A_N_D)
  public void setAND_JsonNullable(JsonNullable<List<NicWhereInput>> AND) {
    this.AND = AND;
  }

  public void setAND(List<NicWhereInput> AND) {
    this.AND = JsonNullable.<List<NicWhereInput>>of(AND);
  }


  public NicWhereInput driver(String driver) {
    this.driver = JsonNullable.<String>of(driver);
    return this;
  }

   /**
   * Get driver
   * @return driver
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getDriver() {
        return driver.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_DRIVER)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getDriver_JsonNullable() {
    return driver;
  }
  
  @JsonProperty(JSON_PROPERTY_DRIVER)
  public void setDriver_JsonNullable(JsonNullable<String> driver) {
    this.driver = driver;
  }

  public void setDriver(String driver) {
    this.driver = JsonNullable.<String>of(driver);
  }


  public NicWhereInput driverContains(String driverContains) {
    this.driverContains = JsonNullable.<String>of(driverContains);
    return this;
  }

   /**
   * Get driverContains
   * @return driverContains
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getDriverContains() {
        return driverContains.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_DRIVER_CONTAINS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getDriverContains_JsonNullable() {
    return driverContains;
  }
  
  @JsonProperty(JSON_PROPERTY_DRIVER_CONTAINS)
  public void setDriverContains_JsonNullable(JsonNullable<String> driverContains) {
    this.driverContains = driverContains;
  }

  public void setDriverContains(String driverContains) {
    this.driverContains = JsonNullable.<String>of(driverContains);
  }


  public NicWhereInput driverEndsWith(String driverEndsWith) {
    this.driverEndsWith = JsonNullable.<String>of(driverEndsWith);
    return this;
  }

   /**
   * Get driverEndsWith
   * @return driverEndsWith
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getDriverEndsWith() {
        return driverEndsWith.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_DRIVER_ENDS_WITH)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getDriverEndsWith_JsonNullable() {
    return driverEndsWith;
  }
  
  @JsonProperty(JSON_PROPERTY_DRIVER_ENDS_WITH)
  public void setDriverEndsWith_JsonNullable(JsonNullable<String> driverEndsWith) {
    this.driverEndsWith = driverEndsWith;
  }

  public void setDriverEndsWith(String driverEndsWith) {
    this.driverEndsWith = JsonNullable.<String>of(driverEndsWith);
  }


  public NicWhereInput driverGt(String driverGt) {
    this.driverGt = JsonNullable.<String>of(driverGt);
    return this;
  }

   /**
   * Get driverGt
   * @return driverGt
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getDriverGt() {
        return driverGt.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_DRIVER_GT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getDriverGt_JsonNullable() {
    return driverGt;
  }
  
  @JsonProperty(JSON_PROPERTY_DRIVER_GT)
  public void setDriverGt_JsonNullable(JsonNullable<String> driverGt) {
    this.driverGt = driverGt;
  }

  public void setDriverGt(String driverGt) {
    this.driverGt = JsonNullable.<String>of(driverGt);
  }


  public NicWhereInput driverGte(String driverGte) {
    this.driverGte = JsonNullable.<String>of(driverGte);
    return this;
  }

   /**
   * Get driverGte
   * @return driverGte
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getDriverGte() {
        return driverGte.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_DRIVER_GTE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getDriverGte_JsonNullable() {
    return driverGte;
  }
  
  @JsonProperty(JSON_PROPERTY_DRIVER_GTE)
  public void setDriverGte_JsonNullable(JsonNullable<String> driverGte) {
    this.driverGte = driverGte;
  }

  public void setDriverGte(String driverGte) {
    this.driverGte = JsonNullable.<String>of(driverGte);
  }


  public NicWhereInput driverIn(List<String> driverIn) {
    this.driverIn = JsonNullable.<List<String>>of(driverIn);
    return this;
  }

  public NicWhereInput addDriverInItem(String driverInItem) {
    if (this.driverIn == null || !this.driverIn.isPresent()) {
      this.driverIn = JsonNullable.<List<String>>of(new ArrayList<>());
    }
    try {
      this.driverIn.get().add(driverInItem);
    } catch (java.util.NoSuchElementException e) {
      // this can never happen, as we make sure above that the value is present
    }
    return this;
  }

   /**
   * Get driverIn
   * @return driverIn
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public List<String> getDriverIn() {
        return driverIn.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_DRIVER_IN)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<List<String>> getDriverIn_JsonNullable() {
    return driverIn;
  }
  
  @JsonProperty(JSON_PROPERTY_DRIVER_IN)
  public void setDriverIn_JsonNullable(JsonNullable<List<String>> driverIn) {
    this.driverIn = driverIn;
  }

  public void setDriverIn(List<String> driverIn) {
    this.driverIn = JsonNullable.<List<String>>of(driverIn);
  }


  public NicWhereInput driverLt(String driverLt) {
    this.driverLt = JsonNullable.<String>of(driverLt);
    return this;
  }

   /**
   * Get driverLt
   * @return driverLt
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getDriverLt() {
        return driverLt.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_DRIVER_LT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getDriverLt_JsonNullable() {
    return driverLt;
  }
  
  @JsonProperty(JSON_PROPERTY_DRIVER_LT)
  public void setDriverLt_JsonNullable(JsonNullable<String> driverLt) {
    this.driverLt = driverLt;
  }

  public void setDriverLt(String driverLt) {
    this.driverLt = JsonNullable.<String>of(driverLt);
  }


  public NicWhereInput driverLte(String driverLte) {
    this.driverLte = JsonNullable.<String>of(driverLte);
    return this;
  }

   /**
   * Get driverLte
   * @return driverLte
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getDriverLte() {
        return driverLte.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_DRIVER_LTE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getDriverLte_JsonNullable() {
    return driverLte;
  }
  
  @JsonProperty(JSON_PROPERTY_DRIVER_LTE)
  public void setDriverLte_JsonNullable(JsonNullable<String> driverLte) {
    this.driverLte = driverLte;
  }

  public void setDriverLte(String driverLte) {
    this.driverLte = JsonNullable.<String>of(driverLte);
  }


  public NicWhereInput driverNot(String driverNot) {
    this.driverNot = JsonNullable.<String>of(driverNot);
    return this;
  }

   /**
   * Get driverNot
   * @return driverNot
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getDriverNot() {
        return driverNot.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_DRIVER_NOT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getDriverNot_JsonNullable() {
    return driverNot;
  }
  
  @JsonProperty(JSON_PROPERTY_DRIVER_NOT)
  public void setDriverNot_JsonNullable(JsonNullable<String> driverNot) {
    this.driverNot = driverNot;
  }

  public void setDriverNot(String driverNot) {
    this.driverNot = JsonNullable.<String>of(driverNot);
  }


  public NicWhereInput driverNotContains(String driverNotContains) {
    this.driverNotContains = JsonNullable.<String>of(driverNotContains);
    return this;
  }

   /**
   * Get driverNotContains
   * @return driverNotContains
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getDriverNotContains() {
        return driverNotContains.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_DRIVER_NOT_CONTAINS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getDriverNotContains_JsonNullable() {
    return driverNotContains;
  }
  
  @JsonProperty(JSON_PROPERTY_DRIVER_NOT_CONTAINS)
  public void setDriverNotContains_JsonNullable(JsonNullable<String> driverNotContains) {
    this.driverNotContains = driverNotContains;
  }

  public void setDriverNotContains(String driverNotContains) {
    this.driverNotContains = JsonNullable.<String>of(driverNotContains);
  }


  public NicWhereInput driverNotEndsWith(String driverNotEndsWith) {
    this.driverNotEndsWith = JsonNullable.<String>of(driverNotEndsWith);
    return this;
  }

   /**
   * Get driverNotEndsWith
   * @return driverNotEndsWith
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getDriverNotEndsWith() {
        return driverNotEndsWith.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_DRIVER_NOT_ENDS_WITH)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getDriverNotEndsWith_JsonNullable() {
    return driverNotEndsWith;
  }
  
  @JsonProperty(JSON_PROPERTY_DRIVER_NOT_ENDS_WITH)
  public void setDriverNotEndsWith_JsonNullable(JsonNullable<String> driverNotEndsWith) {
    this.driverNotEndsWith = driverNotEndsWith;
  }

  public void setDriverNotEndsWith(String driverNotEndsWith) {
    this.driverNotEndsWith = JsonNullable.<String>of(driverNotEndsWith);
  }


  public NicWhereInput driverNotIn(List<String> driverNotIn) {
    this.driverNotIn = JsonNullable.<List<String>>of(driverNotIn);
    return this;
  }

  public NicWhereInput addDriverNotInItem(String driverNotInItem) {
    if (this.driverNotIn == null || !this.driverNotIn.isPresent()) {
      this.driverNotIn = JsonNullable.<List<String>>of(new ArrayList<>());
    }
    try {
      this.driverNotIn.get().add(driverNotInItem);
    } catch (java.util.NoSuchElementException e) {
      // this can never happen, as we make sure above that the value is present
    }
    return this;
  }

   /**
   * Get driverNotIn
   * @return driverNotIn
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public List<String> getDriverNotIn() {
        return driverNotIn.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_DRIVER_NOT_IN)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<List<String>> getDriverNotIn_JsonNullable() {
    return driverNotIn;
  }
  
  @JsonProperty(JSON_PROPERTY_DRIVER_NOT_IN)
  public void setDriverNotIn_JsonNullable(JsonNullable<List<String>> driverNotIn) {
    this.driverNotIn = driverNotIn;
  }

  public void setDriverNotIn(List<String> driverNotIn) {
    this.driverNotIn = JsonNullable.<List<String>>of(driverNotIn);
  }


  public NicWhereInput driverNotStartsWith(String driverNotStartsWith) {
    this.driverNotStartsWith = JsonNullable.<String>of(driverNotStartsWith);
    return this;
  }

   /**
   * Get driverNotStartsWith
   * @return driverNotStartsWith
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getDriverNotStartsWith() {
        return driverNotStartsWith.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_DRIVER_NOT_STARTS_WITH)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getDriverNotStartsWith_JsonNullable() {
    return driverNotStartsWith;
  }
  
  @JsonProperty(JSON_PROPERTY_DRIVER_NOT_STARTS_WITH)
  public void setDriverNotStartsWith_JsonNullable(JsonNullable<String> driverNotStartsWith) {
    this.driverNotStartsWith = driverNotStartsWith;
  }

  public void setDriverNotStartsWith(String driverNotStartsWith) {
    this.driverNotStartsWith = JsonNullable.<String>of(driverNotStartsWith);
  }


  public NicWhereInput driverStartsWith(String driverStartsWith) {
    this.driverStartsWith = JsonNullable.<String>of(driverStartsWith);
    return this;
  }

   /**
   * Get driverStartsWith
   * @return driverStartsWith
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getDriverStartsWith() {
        return driverStartsWith.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_DRIVER_STARTS_WITH)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getDriverStartsWith_JsonNullable() {
    return driverStartsWith;
  }
  
  @JsonProperty(JSON_PROPERTY_DRIVER_STARTS_WITH)
  public void setDriverStartsWith_JsonNullable(JsonNullable<String> driverStartsWith) {
    this.driverStartsWith = driverStartsWith;
  }

  public void setDriverStartsWith(String driverStartsWith) {
    this.driverStartsWith = JsonNullable.<String>of(driverStartsWith);
  }


  public NicWhereInput driverState(NicDriverState driverState) {
    this.driverState = JsonNullable.<NicDriverState>of(driverState);
    return this;
  }

   /**
   * Get driverState
   * @return driverState
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public NicDriverState getDriverState() {
        return driverState.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_DRIVER_STATE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<NicDriverState> getDriverState_JsonNullable() {
    return driverState;
  }
  
  @JsonProperty(JSON_PROPERTY_DRIVER_STATE)
  public void setDriverState_JsonNullable(JsonNullable<NicDriverState> driverState) {
    this.driverState = driverState;
  }

  public void setDriverState(NicDriverState driverState) {
    this.driverState = JsonNullable.<NicDriverState>of(driverState);
  }


  public NicWhereInput driverStateIn(List<NicDriverState> driverStateIn) {
    this.driverStateIn = JsonNullable.<List<NicDriverState>>of(driverStateIn);
    return this;
  }

  public NicWhereInput addDriverStateInItem(NicDriverState driverStateInItem) {
    if (this.driverStateIn == null || !this.driverStateIn.isPresent()) {
      this.driverStateIn = JsonNullable.<List<NicDriverState>>of(new ArrayList<>());
    }
    try {
      this.driverStateIn.get().add(driverStateInItem);
    } catch (java.util.NoSuchElementException e) {
      // this can never happen, as we make sure above that the value is present
    }
    return this;
  }

   /**
   * Get driverStateIn
   * @return driverStateIn
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public List<NicDriverState> getDriverStateIn() {
        return driverStateIn.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_DRIVER_STATE_IN)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<List<NicDriverState>> getDriverStateIn_JsonNullable() {
    return driverStateIn;
  }
  
  @JsonProperty(JSON_PROPERTY_DRIVER_STATE_IN)
  public void setDriverStateIn_JsonNullable(JsonNullable<List<NicDriverState>> driverStateIn) {
    this.driverStateIn = driverStateIn;
  }

  public void setDriverStateIn(List<NicDriverState> driverStateIn) {
    this.driverStateIn = JsonNullable.<List<NicDriverState>>of(driverStateIn);
  }


  public NicWhereInput driverStateNot(NicDriverState driverStateNot) {
    this.driverStateNot = JsonNullable.<NicDriverState>of(driverStateNot);
    return this;
  }

   /**
   * Get driverStateNot
   * @return driverStateNot
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public NicDriverState getDriverStateNot() {
        return driverStateNot.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_DRIVER_STATE_NOT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<NicDriverState> getDriverStateNot_JsonNullable() {
    return driverStateNot;
  }
  
  @JsonProperty(JSON_PROPERTY_DRIVER_STATE_NOT)
  public void setDriverStateNot_JsonNullable(JsonNullable<NicDriverState> driverStateNot) {
    this.driverStateNot = driverStateNot;
  }

  public void setDriverStateNot(NicDriverState driverStateNot) {
    this.driverStateNot = JsonNullable.<NicDriverState>of(driverStateNot);
  }


  public NicWhereInput driverStateNotIn(List<NicDriverState> driverStateNotIn) {
    this.driverStateNotIn = JsonNullable.<List<NicDriverState>>of(driverStateNotIn);
    return this;
  }

  public NicWhereInput addDriverStateNotInItem(NicDriverState driverStateNotInItem) {
    if (this.driverStateNotIn == null || !this.driverStateNotIn.isPresent()) {
      this.driverStateNotIn = JsonNullable.<List<NicDriverState>>of(new ArrayList<>());
    }
    try {
      this.driverStateNotIn.get().add(driverStateNotInItem);
    } catch (java.util.NoSuchElementException e) {
      // this can never happen, as we make sure above that the value is present
    }
    return this;
  }

   /**
   * Get driverStateNotIn
   * @return driverStateNotIn
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public List<NicDriverState> getDriverStateNotIn() {
        return driverStateNotIn.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_DRIVER_STATE_NOT_IN)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<List<NicDriverState>> getDriverStateNotIn_JsonNullable() {
    return driverStateNotIn;
  }
  
  @JsonProperty(JSON_PROPERTY_DRIVER_STATE_NOT_IN)
  public void setDriverStateNotIn_JsonNullable(JsonNullable<List<NicDriverState>> driverStateNotIn) {
    this.driverStateNotIn = driverStateNotIn;
  }

  public void setDriverStateNotIn(List<NicDriverState> driverStateNotIn) {
    this.driverStateNotIn = JsonNullable.<List<NicDriverState>>of(driverStateNotIn);
  }


  public NicWhereInput gatewayIp(String gatewayIp) {
    this.gatewayIp = JsonNullable.<String>of(gatewayIp);
    return this;
  }

   /**
   * Get gatewayIp
   * @return gatewayIp
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getGatewayIp() {
        return gatewayIp.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_GATEWAY_IP)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getGatewayIp_JsonNullable() {
    return gatewayIp;
  }
  
  @JsonProperty(JSON_PROPERTY_GATEWAY_IP)
  public void setGatewayIp_JsonNullable(JsonNullable<String> gatewayIp) {
    this.gatewayIp = gatewayIp;
  }

  public void setGatewayIp(String gatewayIp) {
    this.gatewayIp = JsonNullable.<String>of(gatewayIp);
  }


  public NicWhereInput gatewayIpContains(String gatewayIpContains) {
    this.gatewayIpContains = JsonNullable.<String>of(gatewayIpContains);
    return this;
  }

   /**
   * Get gatewayIpContains
   * @return gatewayIpContains
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getGatewayIpContains() {
        return gatewayIpContains.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_GATEWAY_IP_CONTAINS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getGatewayIpContains_JsonNullable() {
    return gatewayIpContains;
  }
  
  @JsonProperty(JSON_PROPERTY_GATEWAY_IP_CONTAINS)
  public void setGatewayIpContains_JsonNullable(JsonNullable<String> gatewayIpContains) {
    this.gatewayIpContains = gatewayIpContains;
  }

  public void setGatewayIpContains(String gatewayIpContains) {
    this.gatewayIpContains = JsonNullable.<String>of(gatewayIpContains);
  }


  public NicWhereInput gatewayIpEndsWith(String gatewayIpEndsWith) {
    this.gatewayIpEndsWith = JsonNullable.<String>of(gatewayIpEndsWith);
    return this;
  }

   /**
   * Get gatewayIpEndsWith
   * @return gatewayIpEndsWith
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getGatewayIpEndsWith() {
        return gatewayIpEndsWith.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_GATEWAY_IP_ENDS_WITH)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getGatewayIpEndsWith_JsonNullable() {
    return gatewayIpEndsWith;
  }
  
  @JsonProperty(JSON_PROPERTY_GATEWAY_IP_ENDS_WITH)
  public void setGatewayIpEndsWith_JsonNullable(JsonNullable<String> gatewayIpEndsWith) {
    this.gatewayIpEndsWith = gatewayIpEndsWith;
  }

  public void setGatewayIpEndsWith(String gatewayIpEndsWith) {
    this.gatewayIpEndsWith = JsonNullable.<String>of(gatewayIpEndsWith);
  }


  public NicWhereInput gatewayIpGt(String gatewayIpGt) {
    this.gatewayIpGt = JsonNullable.<String>of(gatewayIpGt);
    return this;
  }

   /**
   * Get gatewayIpGt
   * @return gatewayIpGt
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getGatewayIpGt() {
        return gatewayIpGt.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_GATEWAY_IP_GT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getGatewayIpGt_JsonNullable() {
    return gatewayIpGt;
  }
  
  @JsonProperty(JSON_PROPERTY_GATEWAY_IP_GT)
  public void setGatewayIpGt_JsonNullable(JsonNullable<String> gatewayIpGt) {
    this.gatewayIpGt = gatewayIpGt;
  }

  public void setGatewayIpGt(String gatewayIpGt) {
    this.gatewayIpGt = JsonNullable.<String>of(gatewayIpGt);
  }


  public NicWhereInput gatewayIpGte(String gatewayIpGte) {
    this.gatewayIpGte = JsonNullable.<String>of(gatewayIpGte);
    return this;
  }

   /**
   * Get gatewayIpGte
   * @return gatewayIpGte
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getGatewayIpGte() {
        return gatewayIpGte.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_GATEWAY_IP_GTE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getGatewayIpGte_JsonNullable() {
    return gatewayIpGte;
  }
  
  @JsonProperty(JSON_PROPERTY_GATEWAY_IP_GTE)
  public void setGatewayIpGte_JsonNullable(JsonNullable<String> gatewayIpGte) {
    this.gatewayIpGte = gatewayIpGte;
  }

  public void setGatewayIpGte(String gatewayIpGte) {
    this.gatewayIpGte = JsonNullable.<String>of(gatewayIpGte);
  }


  public NicWhereInput gatewayIpIn(List<String> gatewayIpIn) {
    this.gatewayIpIn = JsonNullable.<List<String>>of(gatewayIpIn);
    return this;
  }

  public NicWhereInput addGatewayIpInItem(String gatewayIpInItem) {
    if (this.gatewayIpIn == null || !this.gatewayIpIn.isPresent()) {
      this.gatewayIpIn = JsonNullable.<List<String>>of(new ArrayList<>());
    }
    try {
      this.gatewayIpIn.get().add(gatewayIpInItem);
    } catch (java.util.NoSuchElementException e) {
      // this can never happen, as we make sure above that the value is present
    }
    return this;
  }

   /**
   * Get gatewayIpIn
   * @return gatewayIpIn
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public List<String> getGatewayIpIn() {
        return gatewayIpIn.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_GATEWAY_IP_IN)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<List<String>> getGatewayIpIn_JsonNullable() {
    return gatewayIpIn;
  }
  
  @JsonProperty(JSON_PROPERTY_GATEWAY_IP_IN)
  public void setGatewayIpIn_JsonNullable(JsonNullable<List<String>> gatewayIpIn) {
    this.gatewayIpIn = gatewayIpIn;
  }

  public void setGatewayIpIn(List<String> gatewayIpIn) {
    this.gatewayIpIn = JsonNullable.<List<String>>of(gatewayIpIn);
  }


  public NicWhereInput gatewayIpLt(String gatewayIpLt) {
    this.gatewayIpLt = JsonNullable.<String>of(gatewayIpLt);
    return this;
  }

   /**
   * Get gatewayIpLt
   * @return gatewayIpLt
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getGatewayIpLt() {
        return gatewayIpLt.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_GATEWAY_IP_LT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getGatewayIpLt_JsonNullable() {
    return gatewayIpLt;
  }
  
  @JsonProperty(JSON_PROPERTY_GATEWAY_IP_LT)
  public void setGatewayIpLt_JsonNullable(JsonNullable<String> gatewayIpLt) {
    this.gatewayIpLt = gatewayIpLt;
  }

  public void setGatewayIpLt(String gatewayIpLt) {
    this.gatewayIpLt = JsonNullable.<String>of(gatewayIpLt);
  }


  public NicWhereInput gatewayIpLte(String gatewayIpLte) {
    this.gatewayIpLte = JsonNullable.<String>of(gatewayIpLte);
    return this;
  }

   /**
   * Get gatewayIpLte
   * @return gatewayIpLte
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getGatewayIpLte() {
        return gatewayIpLte.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_GATEWAY_IP_LTE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getGatewayIpLte_JsonNullable() {
    return gatewayIpLte;
  }
  
  @JsonProperty(JSON_PROPERTY_GATEWAY_IP_LTE)
  public void setGatewayIpLte_JsonNullable(JsonNullable<String> gatewayIpLte) {
    this.gatewayIpLte = gatewayIpLte;
  }

  public void setGatewayIpLte(String gatewayIpLte) {
    this.gatewayIpLte = JsonNullable.<String>of(gatewayIpLte);
  }


  public NicWhereInput gatewayIpNot(String gatewayIpNot) {
    this.gatewayIpNot = JsonNullable.<String>of(gatewayIpNot);
    return this;
  }

   /**
   * Get gatewayIpNot
   * @return gatewayIpNot
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getGatewayIpNot() {
        return gatewayIpNot.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_GATEWAY_IP_NOT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getGatewayIpNot_JsonNullable() {
    return gatewayIpNot;
  }
  
  @JsonProperty(JSON_PROPERTY_GATEWAY_IP_NOT)
  public void setGatewayIpNot_JsonNullable(JsonNullable<String> gatewayIpNot) {
    this.gatewayIpNot = gatewayIpNot;
  }

  public void setGatewayIpNot(String gatewayIpNot) {
    this.gatewayIpNot = JsonNullable.<String>of(gatewayIpNot);
  }


  public NicWhereInput gatewayIpNotContains(String gatewayIpNotContains) {
    this.gatewayIpNotContains = JsonNullable.<String>of(gatewayIpNotContains);
    return this;
  }

   /**
   * Get gatewayIpNotContains
   * @return gatewayIpNotContains
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getGatewayIpNotContains() {
        return gatewayIpNotContains.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_GATEWAY_IP_NOT_CONTAINS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getGatewayIpNotContains_JsonNullable() {
    return gatewayIpNotContains;
  }
  
  @JsonProperty(JSON_PROPERTY_GATEWAY_IP_NOT_CONTAINS)
  public void setGatewayIpNotContains_JsonNullable(JsonNullable<String> gatewayIpNotContains) {
    this.gatewayIpNotContains = gatewayIpNotContains;
  }

  public void setGatewayIpNotContains(String gatewayIpNotContains) {
    this.gatewayIpNotContains = JsonNullable.<String>of(gatewayIpNotContains);
  }


  public NicWhereInput gatewayIpNotEndsWith(String gatewayIpNotEndsWith) {
    this.gatewayIpNotEndsWith = JsonNullable.<String>of(gatewayIpNotEndsWith);
    return this;
  }

   /**
   * Get gatewayIpNotEndsWith
   * @return gatewayIpNotEndsWith
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getGatewayIpNotEndsWith() {
        return gatewayIpNotEndsWith.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_GATEWAY_IP_NOT_ENDS_WITH)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getGatewayIpNotEndsWith_JsonNullable() {
    return gatewayIpNotEndsWith;
  }
  
  @JsonProperty(JSON_PROPERTY_GATEWAY_IP_NOT_ENDS_WITH)
  public void setGatewayIpNotEndsWith_JsonNullable(JsonNullable<String> gatewayIpNotEndsWith) {
    this.gatewayIpNotEndsWith = gatewayIpNotEndsWith;
  }

  public void setGatewayIpNotEndsWith(String gatewayIpNotEndsWith) {
    this.gatewayIpNotEndsWith = JsonNullable.<String>of(gatewayIpNotEndsWith);
  }


  public NicWhereInput gatewayIpNotIn(List<String> gatewayIpNotIn) {
    this.gatewayIpNotIn = JsonNullable.<List<String>>of(gatewayIpNotIn);
    return this;
  }

  public NicWhereInput addGatewayIpNotInItem(String gatewayIpNotInItem) {
    if (this.gatewayIpNotIn == null || !this.gatewayIpNotIn.isPresent()) {
      this.gatewayIpNotIn = JsonNullable.<List<String>>of(new ArrayList<>());
    }
    try {
      this.gatewayIpNotIn.get().add(gatewayIpNotInItem);
    } catch (java.util.NoSuchElementException e) {
      // this can never happen, as we make sure above that the value is present
    }
    return this;
  }

   /**
   * Get gatewayIpNotIn
   * @return gatewayIpNotIn
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public List<String> getGatewayIpNotIn() {
        return gatewayIpNotIn.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_GATEWAY_IP_NOT_IN)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<List<String>> getGatewayIpNotIn_JsonNullable() {
    return gatewayIpNotIn;
  }
  
  @JsonProperty(JSON_PROPERTY_GATEWAY_IP_NOT_IN)
  public void setGatewayIpNotIn_JsonNullable(JsonNullable<List<String>> gatewayIpNotIn) {
    this.gatewayIpNotIn = gatewayIpNotIn;
  }

  public void setGatewayIpNotIn(List<String> gatewayIpNotIn) {
    this.gatewayIpNotIn = JsonNullable.<List<String>>of(gatewayIpNotIn);
  }


  public NicWhereInput gatewayIpNotStartsWith(String gatewayIpNotStartsWith) {
    this.gatewayIpNotStartsWith = JsonNullable.<String>of(gatewayIpNotStartsWith);
    return this;
  }

   /**
   * Get gatewayIpNotStartsWith
   * @return gatewayIpNotStartsWith
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getGatewayIpNotStartsWith() {
        return gatewayIpNotStartsWith.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_GATEWAY_IP_NOT_STARTS_WITH)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getGatewayIpNotStartsWith_JsonNullable() {
    return gatewayIpNotStartsWith;
  }
  
  @JsonProperty(JSON_PROPERTY_GATEWAY_IP_NOT_STARTS_WITH)
  public void setGatewayIpNotStartsWith_JsonNullable(JsonNullable<String> gatewayIpNotStartsWith) {
    this.gatewayIpNotStartsWith = gatewayIpNotStartsWith;
  }

  public void setGatewayIpNotStartsWith(String gatewayIpNotStartsWith) {
    this.gatewayIpNotStartsWith = JsonNullable.<String>of(gatewayIpNotStartsWith);
  }


  public NicWhereInput gatewayIpStartsWith(String gatewayIpStartsWith) {
    this.gatewayIpStartsWith = JsonNullable.<String>of(gatewayIpStartsWith);
    return this;
  }

   /**
   * Get gatewayIpStartsWith
   * @return gatewayIpStartsWith
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getGatewayIpStartsWith() {
        return gatewayIpStartsWith.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_GATEWAY_IP_STARTS_WITH)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getGatewayIpStartsWith_JsonNullable() {
    return gatewayIpStartsWith;
  }
  
  @JsonProperty(JSON_PROPERTY_GATEWAY_IP_STARTS_WITH)
  public void setGatewayIpStartsWith_JsonNullable(JsonNullable<String> gatewayIpStartsWith) {
    this.gatewayIpStartsWith = gatewayIpStartsWith;
  }

  public void setGatewayIpStartsWith(String gatewayIpStartsWith) {
    this.gatewayIpStartsWith = JsonNullable.<String>of(gatewayIpStartsWith);
  }


  public NicWhereInput host(HostWhereInput host) {
    this.host = JsonNullable.<HostWhereInput>of(host);
    return this;
  }

   /**
   * Get host
   * @return host
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public HostWhereInput getHost() {
        return host.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_HOST)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<HostWhereInput> getHost_JsonNullable() {
    return host;
  }
  
  @JsonProperty(JSON_PROPERTY_HOST)
  public void setHost_JsonNullable(JsonNullable<HostWhereInput> host) {
    this.host = host;
  }

  public void setHost(HostWhereInput host) {
    this.host = JsonNullable.<HostWhereInput>of(host);
  }


  public NicWhereInput ibdev(String ibdev) {
    this.ibdev = JsonNullable.<String>of(ibdev);
    return this;
  }

   /**
   * Get ibdev
   * @return ibdev
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getIbdev() {
        return ibdev.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_IBDEV)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getIbdev_JsonNullable() {
    return ibdev;
  }
  
  @JsonProperty(JSON_PROPERTY_IBDEV)
  public void setIbdev_JsonNullable(JsonNullable<String> ibdev) {
    this.ibdev = ibdev;
  }

  public void setIbdev(String ibdev) {
    this.ibdev = JsonNullable.<String>of(ibdev);
  }


  public NicWhereInput ibdevContains(String ibdevContains) {
    this.ibdevContains = JsonNullable.<String>of(ibdevContains);
    return this;
  }

   /**
   * Get ibdevContains
   * @return ibdevContains
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getIbdevContains() {
        return ibdevContains.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_IBDEV_CONTAINS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getIbdevContains_JsonNullable() {
    return ibdevContains;
  }
  
  @JsonProperty(JSON_PROPERTY_IBDEV_CONTAINS)
  public void setIbdevContains_JsonNullable(JsonNullable<String> ibdevContains) {
    this.ibdevContains = ibdevContains;
  }

  public void setIbdevContains(String ibdevContains) {
    this.ibdevContains = JsonNullable.<String>of(ibdevContains);
  }


  public NicWhereInput ibdevEndsWith(String ibdevEndsWith) {
    this.ibdevEndsWith = JsonNullable.<String>of(ibdevEndsWith);
    return this;
  }

   /**
   * Get ibdevEndsWith
   * @return ibdevEndsWith
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getIbdevEndsWith() {
        return ibdevEndsWith.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_IBDEV_ENDS_WITH)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getIbdevEndsWith_JsonNullable() {
    return ibdevEndsWith;
  }
  
  @JsonProperty(JSON_PROPERTY_IBDEV_ENDS_WITH)
  public void setIbdevEndsWith_JsonNullable(JsonNullable<String> ibdevEndsWith) {
    this.ibdevEndsWith = ibdevEndsWith;
  }

  public void setIbdevEndsWith(String ibdevEndsWith) {
    this.ibdevEndsWith = JsonNullable.<String>of(ibdevEndsWith);
  }


  public NicWhereInput ibdevGt(String ibdevGt) {
    this.ibdevGt = JsonNullable.<String>of(ibdevGt);
    return this;
  }

   /**
   * Get ibdevGt
   * @return ibdevGt
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getIbdevGt() {
        return ibdevGt.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_IBDEV_GT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getIbdevGt_JsonNullable() {
    return ibdevGt;
  }
  
  @JsonProperty(JSON_PROPERTY_IBDEV_GT)
  public void setIbdevGt_JsonNullable(JsonNullable<String> ibdevGt) {
    this.ibdevGt = ibdevGt;
  }

  public void setIbdevGt(String ibdevGt) {
    this.ibdevGt = JsonNullable.<String>of(ibdevGt);
  }


  public NicWhereInput ibdevGte(String ibdevGte) {
    this.ibdevGte = JsonNullable.<String>of(ibdevGte);
    return this;
  }

   /**
   * Get ibdevGte
   * @return ibdevGte
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getIbdevGte() {
        return ibdevGte.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_IBDEV_GTE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getIbdevGte_JsonNullable() {
    return ibdevGte;
  }
  
  @JsonProperty(JSON_PROPERTY_IBDEV_GTE)
  public void setIbdevGte_JsonNullable(JsonNullable<String> ibdevGte) {
    this.ibdevGte = ibdevGte;
  }

  public void setIbdevGte(String ibdevGte) {
    this.ibdevGte = JsonNullable.<String>of(ibdevGte);
  }


  public NicWhereInput ibdevIn(List<String> ibdevIn) {
    this.ibdevIn = JsonNullable.<List<String>>of(ibdevIn);
    return this;
  }

  public NicWhereInput addIbdevInItem(String ibdevInItem) {
    if (this.ibdevIn == null || !this.ibdevIn.isPresent()) {
      this.ibdevIn = JsonNullable.<List<String>>of(new ArrayList<>());
    }
    try {
      this.ibdevIn.get().add(ibdevInItem);
    } catch (java.util.NoSuchElementException e) {
      // this can never happen, as we make sure above that the value is present
    }
    return this;
  }

   /**
   * Get ibdevIn
   * @return ibdevIn
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public List<String> getIbdevIn() {
        return ibdevIn.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_IBDEV_IN)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<List<String>> getIbdevIn_JsonNullable() {
    return ibdevIn;
  }
  
  @JsonProperty(JSON_PROPERTY_IBDEV_IN)
  public void setIbdevIn_JsonNullable(JsonNullable<List<String>> ibdevIn) {
    this.ibdevIn = ibdevIn;
  }

  public void setIbdevIn(List<String> ibdevIn) {
    this.ibdevIn = JsonNullable.<List<String>>of(ibdevIn);
  }


  public NicWhereInput ibdevLt(String ibdevLt) {
    this.ibdevLt = JsonNullable.<String>of(ibdevLt);
    return this;
  }

   /**
   * Get ibdevLt
   * @return ibdevLt
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getIbdevLt() {
        return ibdevLt.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_IBDEV_LT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getIbdevLt_JsonNullable() {
    return ibdevLt;
  }
  
  @JsonProperty(JSON_PROPERTY_IBDEV_LT)
  public void setIbdevLt_JsonNullable(JsonNullable<String> ibdevLt) {
    this.ibdevLt = ibdevLt;
  }

  public void setIbdevLt(String ibdevLt) {
    this.ibdevLt = JsonNullable.<String>of(ibdevLt);
  }


  public NicWhereInput ibdevLte(String ibdevLte) {
    this.ibdevLte = JsonNullable.<String>of(ibdevLte);
    return this;
  }

   /**
   * Get ibdevLte
   * @return ibdevLte
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getIbdevLte() {
        return ibdevLte.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_IBDEV_LTE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getIbdevLte_JsonNullable() {
    return ibdevLte;
  }
  
  @JsonProperty(JSON_PROPERTY_IBDEV_LTE)
  public void setIbdevLte_JsonNullable(JsonNullable<String> ibdevLte) {
    this.ibdevLte = ibdevLte;
  }

  public void setIbdevLte(String ibdevLte) {
    this.ibdevLte = JsonNullable.<String>of(ibdevLte);
  }


  public NicWhereInput ibdevNot(String ibdevNot) {
    this.ibdevNot = JsonNullable.<String>of(ibdevNot);
    return this;
  }

   /**
   * Get ibdevNot
   * @return ibdevNot
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getIbdevNot() {
        return ibdevNot.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_IBDEV_NOT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getIbdevNot_JsonNullable() {
    return ibdevNot;
  }
  
  @JsonProperty(JSON_PROPERTY_IBDEV_NOT)
  public void setIbdevNot_JsonNullable(JsonNullable<String> ibdevNot) {
    this.ibdevNot = ibdevNot;
  }

  public void setIbdevNot(String ibdevNot) {
    this.ibdevNot = JsonNullable.<String>of(ibdevNot);
  }


  public NicWhereInput ibdevNotContains(String ibdevNotContains) {
    this.ibdevNotContains = JsonNullable.<String>of(ibdevNotContains);
    return this;
  }

   /**
   * Get ibdevNotContains
   * @return ibdevNotContains
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getIbdevNotContains() {
        return ibdevNotContains.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_IBDEV_NOT_CONTAINS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getIbdevNotContains_JsonNullable() {
    return ibdevNotContains;
  }
  
  @JsonProperty(JSON_PROPERTY_IBDEV_NOT_CONTAINS)
  public void setIbdevNotContains_JsonNullable(JsonNullable<String> ibdevNotContains) {
    this.ibdevNotContains = ibdevNotContains;
  }

  public void setIbdevNotContains(String ibdevNotContains) {
    this.ibdevNotContains = JsonNullable.<String>of(ibdevNotContains);
  }


  public NicWhereInput ibdevNotEndsWith(String ibdevNotEndsWith) {
    this.ibdevNotEndsWith = JsonNullable.<String>of(ibdevNotEndsWith);
    return this;
  }

   /**
   * Get ibdevNotEndsWith
   * @return ibdevNotEndsWith
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getIbdevNotEndsWith() {
        return ibdevNotEndsWith.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_IBDEV_NOT_ENDS_WITH)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getIbdevNotEndsWith_JsonNullable() {
    return ibdevNotEndsWith;
  }
  
  @JsonProperty(JSON_PROPERTY_IBDEV_NOT_ENDS_WITH)
  public void setIbdevNotEndsWith_JsonNullable(JsonNullable<String> ibdevNotEndsWith) {
    this.ibdevNotEndsWith = ibdevNotEndsWith;
  }

  public void setIbdevNotEndsWith(String ibdevNotEndsWith) {
    this.ibdevNotEndsWith = JsonNullable.<String>of(ibdevNotEndsWith);
  }


  public NicWhereInput ibdevNotIn(List<String> ibdevNotIn) {
    this.ibdevNotIn = JsonNullable.<List<String>>of(ibdevNotIn);
    return this;
  }

  public NicWhereInput addIbdevNotInItem(String ibdevNotInItem) {
    if (this.ibdevNotIn == null || !this.ibdevNotIn.isPresent()) {
      this.ibdevNotIn = JsonNullable.<List<String>>of(new ArrayList<>());
    }
    try {
      this.ibdevNotIn.get().add(ibdevNotInItem);
    } catch (java.util.NoSuchElementException e) {
      // this can never happen, as we make sure above that the value is present
    }
    return this;
  }

   /**
   * Get ibdevNotIn
   * @return ibdevNotIn
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public List<String> getIbdevNotIn() {
        return ibdevNotIn.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_IBDEV_NOT_IN)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<List<String>> getIbdevNotIn_JsonNullable() {
    return ibdevNotIn;
  }
  
  @JsonProperty(JSON_PROPERTY_IBDEV_NOT_IN)
  public void setIbdevNotIn_JsonNullable(JsonNullable<List<String>> ibdevNotIn) {
    this.ibdevNotIn = ibdevNotIn;
  }

  public void setIbdevNotIn(List<String> ibdevNotIn) {
    this.ibdevNotIn = JsonNullable.<List<String>>of(ibdevNotIn);
  }


  public NicWhereInput ibdevNotStartsWith(String ibdevNotStartsWith) {
    this.ibdevNotStartsWith = JsonNullable.<String>of(ibdevNotStartsWith);
    return this;
  }

   /**
   * Get ibdevNotStartsWith
   * @return ibdevNotStartsWith
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getIbdevNotStartsWith() {
        return ibdevNotStartsWith.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_IBDEV_NOT_STARTS_WITH)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getIbdevNotStartsWith_JsonNullable() {
    return ibdevNotStartsWith;
  }
  
  @JsonProperty(JSON_PROPERTY_IBDEV_NOT_STARTS_WITH)
  public void setIbdevNotStartsWith_JsonNullable(JsonNullable<String> ibdevNotStartsWith) {
    this.ibdevNotStartsWith = ibdevNotStartsWith;
  }

  public void setIbdevNotStartsWith(String ibdevNotStartsWith) {
    this.ibdevNotStartsWith = JsonNullable.<String>of(ibdevNotStartsWith);
  }


  public NicWhereInput ibdevStartsWith(String ibdevStartsWith) {
    this.ibdevStartsWith = JsonNullable.<String>of(ibdevStartsWith);
    return this;
  }

   /**
   * Get ibdevStartsWith
   * @return ibdevStartsWith
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getIbdevStartsWith() {
        return ibdevStartsWith.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_IBDEV_STARTS_WITH)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getIbdevStartsWith_JsonNullable() {
    return ibdevStartsWith;
  }
  
  @JsonProperty(JSON_PROPERTY_IBDEV_STARTS_WITH)
  public void setIbdevStartsWith_JsonNullable(JsonNullable<String> ibdevStartsWith) {
    this.ibdevStartsWith = ibdevStartsWith;
  }

  public void setIbdevStartsWith(String ibdevStartsWith) {
    this.ibdevStartsWith = JsonNullable.<String>of(ibdevStartsWith);
  }


  public NicWhereInput id(String id) {
    this.id = JsonNullable.<String>of(id);
    return this;
  }

   /**
   * Get id
   * @return id
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getId() {
        return id.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getId_JsonNullable() {
    return id;
  }
  
  @JsonProperty(JSON_PROPERTY_ID)
  public void setId_JsonNullable(JsonNullable<String> id) {
    this.id = id;
  }

  public void setId(String id) {
    this.id = JsonNullable.<String>of(id);
  }


  public NicWhereInput idContains(String idContains) {
    this.idContains = JsonNullable.<String>of(idContains);
    return this;
  }

   /**
   * Get idContains
   * @return idContains
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getIdContains() {
        return idContains.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_ID_CONTAINS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getIdContains_JsonNullable() {
    return idContains;
  }
  
  @JsonProperty(JSON_PROPERTY_ID_CONTAINS)
  public void setIdContains_JsonNullable(JsonNullable<String> idContains) {
    this.idContains = idContains;
  }

  public void setIdContains(String idContains) {
    this.idContains = JsonNullable.<String>of(idContains);
  }


  public NicWhereInput idEndsWith(String idEndsWith) {
    this.idEndsWith = JsonNullable.<String>of(idEndsWith);
    return this;
  }

   /**
   * Get idEndsWith
   * @return idEndsWith
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getIdEndsWith() {
        return idEndsWith.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_ID_ENDS_WITH)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getIdEndsWith_JsonNullable() {
    return idEndsWith;
  }
  
  @JsonProperty(JSON_PROPERTY_ID_ENDS_WITH)
  public void setIdEndsWith_JsonNullable(JsonNullable<String> idEndsWith) {
    this.idEndsWith = idEndsWith;
  }

  public void setIdEndsWith(String idEndsWith) {
    this.idEndsWith = JsonNullable.<String>of(idEndsWith);
  }


  public NicWhereInput idGt(String idGt) {
    this.idGt = JsonNullable.<String>of(idGt);
    return this;
  }

   /**
   * Get idGt
   * @return idGt
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getIdGt() {
        return idGt.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_ID_GT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getIdGt_JsonNullable() {
    return idGt;
  }
  
  @JsonProperty(JSON_PROPERTY_ID_GT)
  public void setIdGt_JsonNullable(JsonNullable<String> idGt) {
    this.idGt = idGt;
  }

  public void setIdGt(String idGt) {
    this.idGt = JsonNullable.<String>of(idGt);
  }


  public NicWhereInput idGte(String idGte) {
    this.idGte = JsonNullable.<String>of(idGte);
    return this;
  }

   /**
   * Get idGte
   * @return idGte
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getIdGte() {
        return idGte.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_ID_GTE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getIdGte_JsonNullable() {
    return idGte;
  }
  
  @JsonProperty(JSON_PROPERTY_ID_GTE)
  public void setIdGte_JsonNullable(JsonNullable<String> idGte) {
    this.idGte = idGte;
  }

  public void setIdGte(String idGte) {
    this.idGte = JsonNullable.<String>of(idGte);
  }


  public NicWhereInput idIn(List<String> idIn) {
    this.idIn = JsonNullable.<List<String>>of(idIn);
    return this;
  }

  public NicWhereInput addIdInItem(String idInItem) {
    if (this.idIn == null || !this.idIn.isPresent()) {
      this.idIn = JsonNullable.<List<String>>of(new ArrayList<>());
    }
    try {
      this.idIn.get().add(idInItem);
    } catch (java.util.NoSuchElementException e) {
      // this can never happen, as we make sure above that the value is present
    }
    return this;
  }

   /**
   * Get idIn
   * @return idIn
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public List<String> getIdIn() {
        return idIn.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_ID_IN)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<List<String>> getIdIn_JsonNullable() {
    return idIn;
  }
  
  @JsonProperty(JSON_PROPERTY_ID_IN)
  public void setIdIn_JsonNullable(JsonNullable<List<String>> idIn) {
    this.idIn = idIn;
  }

  public void setIdIn(List<String> idIn) {
    this.idIn = JsonNullable.<List<String>>of(idIn);
  }


  public NicWhereInput idLt(String idLt) {
    this.idLt = JsonNullable.<String>of(idLt);
    return this;
  }

   /**
   * Get idLt
   * @return idLt
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getIdLt() {
        return idLt.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_ID_LT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getIdLt_JsonNullable() {
    return idLt;
  }
  
  @JsonProperty(JSON_PROPERTY_ID_LT)
  public void setIdLt_JsonNullable(JsonNullable<String> idLt) {
    this.idLt = idLt;
  }

  public void setIdLt(String idLt) {
    this.idLt = JsonNullable.<String>of(idLt);
  }


  public NicWhereInput idLte(String idLte) {
    this.idLte = JsonNullable.<String>of(idLte);
    return this;
  }

   /**
   * Get idLte
   * @return idLte
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getIdLte() {
        return idLte.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_ID_LTE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getIdLte_JsonNullable() {
    return idLte;
  }
  
  @JsonProperty(JSON_PROPERTY_ID_LTE)
  public void setIdLte_JsonNullable(JsonNullable<String> idLte) {
    this.idLte = idLte;
  }

  public void setIdLte(String idLte) {
    this.idLte = JsonNullable.<String>of(idLte);
  }


  public NicWhereInput idNot(String idNot) {
    this.idNot = JsonNullable.<String>of(idNot);
    return this;
  }

   /**
   * Get idNot
   * @return idNot
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getIdNot() {
        return idNot.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_ID_NOT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getIdNot_JsonNullable() {
    return idNot;
  }
  
  @JsonProperty(JSON_PROPERTY_ID_NOT)
  public void setIdNot_JsonNullable(JsonNullable<String> idNot) {
    this.idNot = idNot;
  }

  public void setIdNot(String idNot) {
    this.idNot = JsonNullable.<String>of(idNot);
  }


  public NicWhereInput idNotContains(String idNotContains) {
    this.idNotContains = JsonNullable.<String>of(idNotContains);
    return this;
  }

   /**
   * Get idNotContains
   * @return idNotContains
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getIdNotContains() {
        return idNotContains.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_ID_NOT_CONTAINS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getIdNotContains_JsonNullable() {
    return idNotContains;
  }
  
  @JsonProperty(JSON_PROPERTY_ID_NOT_CONTAINS)
  public void setIdNotContains_JsonNullable(JsonNullable<String> idNotContains) {
    this.idNotContains = idNotContains;
  }

  public void setIdNotContains(String idNotContains) {
    this.idNotContains = JsonNullable.<String>of(idNotContains);
  }


  public NicWhereInput idNotEndsWith(String idNotEndsWith) {
    this.idNotEndsWith = JsonNullable.<String>of(idNotEndsWith);
    return this;
  }

   /**
   * Get idNotEndsWith
   * @return idNotEndsWith
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getIdNotEndsWith() {
        return idNotEndsWith.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_ID_NOT_ENDS_WITH)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getIdNotEndsWith_JsonNullable() {
    return idNotEndsWith;
  }
  
  @JsonProperty(JSON_PROPERTY_ID_NOT_ENDS_WITH)
  public void setIdNotEndsWith_JsonNullable(JsonNullable<String> idNotEndsWith) {
    this.idNotEndsWith = idNotEndsWith;
  }

  public void setIdNotEndsWith(String idNotEndsWith) {
    this.idNotEndsWith = JsonNullable.<String>of(idNotEndsWith);
  }


  public NicWhereInput idNotIn(List<String> idNotIn) {
    this.idNotIn = JsonNullable.<List<String>>of(idNotIn);
    return this;
  }

  public NicWhereInput addIdNotInItem(String idNotInItem) {
    if (this.idNotIn == null || !this.idNotIn.isPresent()) {
      this.idNotIn = JsonNullable.<List<String>>of(new ArrayList<>());
    }
    try {
      this.idNotIn.get().add(idNotInItem);
    } catch (java.util.NoSuchElementException e) {
      // this can never happen, as we make sure above that the value is present
    }
    return this;
  }

   /**
   * Get idNotIn
   * @return idNotIn
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public List<String> getIdNotIn() {
        return idNotIn.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_ID_NOT_IN)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<List<String>> getIdNotIn_JsonNullable() {
    return idNotIn;
  }
  
  @JsonProperty(JSON_PROPERTY_ID_NOT_IN)
  public void setIdNotIn_JsonNullable(JsonNullable<List<String>> idNotIn) {
    this.idNotIn = idNotIn;
  }

  public void setIdNotIn(List<String> idNotIn) {
    this.idNotIn = JsonNullable.<List<String>>of(idNotIn);
  }


  public NicWhereInput idNotStartsWith(String idNotStartsWith) {
    this.idNotStartsWith = JsonNullable.<String>of(idNotStartsWith);
    return this;
  }

   /**
   * Get idNotStartsWith
   * @return idNotStartsWith
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getIdNotStartsWith() {
        return idNotStartsWith.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_ID_NOT_STARTS_WITH)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getIdNotStartsWith_JsonNullable() {
    return idNotStartsWith;
  }
  
  @JsonProperty(JSON_PROPERTY_ID_NOT_STARTS_WITH)
  public void setIdNotStartsWith_JsonNullable(JsonNullable<String> idNotStartsWith) {
    this.idNotStartsWith = idNotStartsWith;
  }

  public void setIdNotStartsWith(String idNotStartsWith) {
    this.idNotStartsWith = JsonNullable.<String>of(idNotStartsWith);
  }


  public NicWhereInput idStartsWith(String idStartsWith) {
    this.idStartsWith = JsonNullable.<String>of(idStartsWith);
    return this;
  }

   /**
   * Get idStartsWith
   * @return idStartsWith
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getIdStartsWith() {
        return idStartsWith.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_ID_STARTS_WITH)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getIdStartsWith_JsonNullable() {
    return idStartsWith;
  }
  
  @JsonProperty(JSON_PROPERTY_ID_STARTS_WITH)
  public void setIdStartsWith_JsonNullable(JsonNullable<String> idStartsWith) {
    this.idStartsWith = idStartsWith;
  }

  public void setIdStartsWith(String idStartsWith) {
    this.idStartsWith = JsonNullable.<String>of(idStartsWith);
  }


  public NicWhereInput ipAddress(String ipAddress) {
    this.ipAddress = JsonNullable.<String>of(ipAddress);
    return this;
  }

   /**
   * Get ipAddress
   * @return ipAddress
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getIpAddress() {
        return ipAddress.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_IP_ADDRESS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getIpAddress_JsonNullable() {
    return ipAddress;
  }
  
  @JsonProperty(JSON_PROPERTY_IP_ADDRESS)
  public void setIpAddress_JsonNullable(JsonNullable<String> ipAddress) {
    this.ipAddress = ipAddress;
  }

  public void setIpAddress(String ipAddress) {
    this.ipAddress = JsonNullable.<String>of(ipAddress);
  }


  public NicWhereInput ipAddressContains(String ipAddressContains) {
    this.ipAddressContains = JsonNullable.<String>of(ipAddressContains);
    return this;
  }

   /**
   * Get ipAddressContains
   * @return ipAddressContains
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getIpAddressContains() {
        return ipAddressContains.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_IP_ADDRESS_CONTAINS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getIpAddressContains_JsonNullable() {
    return ipAddressContains;
  }
  
  @JsonProperty(JSON_PROPERTY_IP_ADDRESS_CONTAINS)
  public void setIpAddressContains_JsonNullable(JsonNullable<String> ipAddressContains) {
    this.ipAddressContains = ipAddressContains;
  }

  public void setIpAddressContains(String ipAddressContains) {
    this.ipAddressContains = JsonNullable.<String>of(ipAddressContains);
  }


  public NicWhereInput ipAddressEndsWith(String ipAddressEndsWith) {
    this.ipAddressEndsWith = JsonNullable.<String>of(ipAddressEndsWith);
    return this;
  }

   /**
   * Get ipAddressEndsWith
   * @return ipAddressEndsWith
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getIpAddressEndsWith() {
        return ipAddressEndsWith.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_IP_ADDRESS_ENDS_WITH)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getIpAddressEndsWith_JsonNullable() {
    return ipAddressEndsWith;
  }
  
  @JsonProperty(JSON_PROPERTY_IP_ADDRESS_ENDS_WITH)
  public void setIpAddressEndsWith_JsonNullable(JsonNullable<String> ipAddressEndsWith) {
    this.ipAddressEndsWith = ipAddressEndsWith;
  }

  public void setIpAddressEndsWith(String ipAddressEndsWith) {
    this.ipAddressEndsWith = JsonNullable.<String>of(ipAddressEndsWith);
  }


  public NicWhereInput ipAddressGt(String ipAddressGt) {
    this.ipAddressGt = JsonNullable.<String>of(ipAddressGt);
    return this;
  }

   /**
   * Get ipAddressGt
   * @return ipAddressGt
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getIpAddressGt() {
        return ipAddressGt.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_IP_ADDRESS_GT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getIpAddressGt_JsonNullable() {
    return ipAddressGt;
  }
  
  @JsonProperty(JSON_PROPERTY_IP_ADDRESS_GT)
  public void setIpAddressGt_JsonNullable(JsonNullable<String> ipAddressGt) {
    this.ipAddressGt = ipAddressGt;
  }

  public void setIpAddressGt(String ipAddressGt) {
    this.ipAddressGt = JsonNullable.<String>of(ipAddressGt);
  }


  public NicWhereInput ipAddressGte(String ipAddressGte) {
    this.ipAddressGte = JsonNullable.<String>of(ipAddressGte);
    return this;
  }

   /**
   * Get ipAddressGte
   * @return ipAddressGte
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getIpAddressGte() {
        return ipAddressGte.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_IP_ADDRESS_GTE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getIpAddressGte_JsonNullable() {
    return ipAddressGte;
  }
  
  @JsonProperty(JSON_PROPERTY_IP_ADDRESS_GTE)
  public void setIpAddressGte_JsonNullable(JsonNullable<String> ipAddressGte) {
    this.ipAddressGte = ipAddressGte;
  }

  public void setIpAddressGte(String ipAddressGte) {
    this.ipAddressGte = JsonNullable.<String>of(ipAddressGte);
  }


  public NicWhereInput ipAddressIn(List<String> ipAddressIn) {
    this.ipAddressIn = JsonNullable.<List<String>>of(ipAddressIn);
    return this;
  }

  public NicWhereInput addIpAddressInItem(String ipAddressInItem) {
    if (this.ipAddressIn == null || !this.ipAddressIn.isPresent()) {
      this.ipAddressIn = JsonNullable.<List<String>>of(new ArrayList<>());
    }
    try {
      this.ipAddressIn.get().add(ipAddressInItem);
    } catch (java.util.NoSuchElementException e) {
      // this can never happen, as we make sure above that the value is present
    }
    return this;
  }

   /**
   * Get ipAddressIn
   * @return ipAddressIn
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public List<String> getIpAddressIn() {
        return ipAddressIn.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_IP_ADDRESS_IN)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<List<String>> getIpAddressIn_JsonNullable() {
    return ipAddressIn;
  }
  
  @JsonProperty(JSON_PROPERTY_IP_ADDRESS_IN)
  public void setIpAddressIn_JsonNullable(JsonNullable<List<String>> ipAddressIn) {
    this.ipAddressIn = ipAddressIn;
  }

  public void setIpAddressIn(List<String> ipAddressIn) {
    this.ipAddressIn = JsonNullable.<List<String>>of(ipAddressIn);
  }


  public NicWhereInput ipAddressLt(String ipAddressLt) {
    this.ipAddressLt = JsonNullable.<String>of(ipAddressLt);
    return this;
  }

   /**
   * Get ipAddressLt
   * @return ipAddressLt
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getIpAddressLt() {
        return ipAddressLt.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_IP_ADDRESS_LT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getIpAddressLt_JsonNullable() {
    return ipAddressLt;
  }
  
  @JsonProperty(JSON_PROPERTY_IP_ADDRESS_LT)
  public void setIpAddressLt_JsonNullable(JsonNullable<String> ipAddressLt) {
    this.ipAddressLt = ipAddressLt;
  }

  public void setIpAddressLt(String ipAddressLt) {
    this.ipAddressLt = JsonNullable.<String>of(ipAddressLt);
  }


  public NicWhereInput ipAddressLte(String ipAddressLte) {
    this.ipAddressLte = JsonNullable.<String>of(ipAddressLte);
    return this;
  }

   /**
   * Get ipAddressLte
   * @return ipAddressLte
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getIpAddressLte() {
        return ipAddressLte.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_IP_ADDRESS_LTE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getIpAddressLte_JsonNullable() {
    return ipAddressLte;
  }
  
  @JsonProperty(JSON_PROPERTY_IP_ADDRESS_LTE)
  public void setIpAddressLte_JsonNullable(JsonNullable<String> ipAddressLte) {
    this.ipAddressLte = ipAddressLte;
  }

  public void setIpAddressLte(String ipAddressLte) {
    this.ipAddressLte = JsonNullable.<String>of(ipAddressLte);
  }


  public NicWhereInput ipAddressNot(String ipAddressNot) {
    this.ipAddressNot = JsonNullable.<String>of(ipAddressNot);
    return this;
  }

   /**
   * Get ipAddressNot
   * @return ipAddressNot
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getIpAddressNot() {
        return ipAddressNot.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_IP_ADDRESS_NOT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getIpAddressNot_JsonNullable() {
    return ipAddressNot;
  }
  
  @JsonProperty(JSON_PROPERTY_IP_ADDRESS_NOT)
  public void setIpAddressNot_JsonNullable(JsonNullable<String> ipAddressNot) {
    this.ipAddressNot = ipAddressNot;
  }

  public void setIpAddressNot(String ipAddressNot) {
    this.ipAddressNot = JsonNullable.<String>of(ipAddressNot);
  }


  public NicWhereInput ipAddressNotContains(String ipAddressNotContains) {
    this.ipAddressNotContains = JsonNullable.<String>of(ipAddressNotContains);
    return this;
  }

   /**
   * Get ipAddressNotContains
   * @return ipAddressNotContains
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getIpAddressNotContains() {
        return ipAddressNotContains.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_IP_ADDRESS_NOT_CONTAINS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getIpAddressNotContains_JsonNullable() {
    return ipAddressNotContains;
  }
  
  @JsonProperty(JSON_PROPERTY_IP_ADDRESS_NOT_CONTAINS)
  public void setIpAddressNotContains_JsonNullable(JsonNullable<String> ipAddressNotContains) {
    this.ipAddressNotContains = ipAddressNotContains;
  }

  public void setIpAddressNotContains(String ipAddressNotContains) {
    this.ipAddressNotContains = JsonNullable.<String>of(ipAddressNotContains);
  }


  public NicWhereInput ipAddressNotEndsWith(String ipAddressNotEndsWith) {
    this.ipAddressNotEndsWith = JsonNullable.<String>of(ipAddressNotEndsWith);
    return this;
  }

   /**
   * Get ipAddressNotEndsWith
   * @return ipAddressNotEndsWith
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getIpAddressNotEndsWith() {
        return ipAddressNotEndsWith.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_IP_ADDRESS_NOT_ENDS_WITH)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getIpAddressNotEndsWith_JsonNullable() {
    return ipAddressNotEndsWith;
  }
  
  @JsonProperty(JSON_PROPERTY_IP_ADDRESS_NOT_ENDS_WITH)
  public void setIpAddressNotEndsWith_JsonNullable(JsonNullable<String> ipAddressNotEndsWith) {
    this.ipAddressNotEndsWith = ipAddressNotEndsWith;
  }

  public void setIpAddressNotEndsWith(String ipAddressNotEndsWith) {
    this.ipAddressNotEndsWith = JsonNullable.<String>of(ipAddressNotEndsWith);
  }


  public NicWhereInput ipAddressNotIn(List<String> ipAddressNotIn) {
    this.ipAddressNotIn = JsonNullable.<List<String>>of(ipAddressNotIn);
    return this;
  }

  public NicWhereInput addIpAddressNotInItem(String ipAddressNotInItem) {
    if (this.ipAddressNotIn == null || !this.ipAddressNotIn.isPresent()) {
      this.ipAddressNotIn = JsonNullable.<List<String>>of(new ArrayList<>());
    }
    try {
      this.ipAddressNotIn.get().add(ipAddressNotInItem);
    } catch (java.util.NoSuchElementException e) {
      // this can never happen, as we make sure above that the value is present
    }
    return this;
  }

   /**
   * Get ipAddressNotIn
   * @return ipAddressNotIn
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public List<String> getIpAddressNotIn() {
        return ipAddressNotIn.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_IP_ADDRESS_NOT_IN)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<List<String>> getIpAddressNotIn_JsonNullable() {
    return ipAddressNotIn;
  }
  
  @JsonProperty(JSON_PROPERTY_IP_ADDRESS_NOT_IN)
  public void setIpAddressNotIn_JsonNullable(JsonNullable<List<String>> ipAddressNotIn) {
    this.ipAddressNotIn = ipAddressNotIn;
  }

  public void setIpAddressNotIn(List<String> ipAddressNotIn) {
    this.ipAddressNotIn = JsonNullable.<List<String>>of(ipAddressNotIn);
  }


  public NicWhereInput ipAddressNotStartsWith(String ipAddressNotStartsWith) {
    this.ipAddressNotStartsWith = JsonNullable.<String>of(ipAddressNotStartsWith);
    return this;
  }

   /**
   * Get ipAddressNotStartsWith
   * @return ipAddressNotStartsWith
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getIpAddressNotStartsWith() {
        return ipAddressNotStartsWith.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_IP_ADDRESS_NOT_STARTS_WITH)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getIpAddressNotStartsWith_JsonNullable() {
    return ipAddressNotStartsWith;
  }
  
  @JsonProperty(JSON_PROPERTY_IP_ADDRESS_NOT_STARTS_WITH)
  public void setIpAddressNotStartsWith_JsonNullable(JsonNullable<String> ipAddressNotStartsWith) {
    this.ipAddressNotStartsWith = ipAddressNotStartsWith;
  }

  public void setIpAddressNotStartsWith(String ipAddressNotStartsWith) {
    this.ipAddressNotStartsWith = JsonNullable.<String>of(ipAddressNotStartsWith);
  }


  public NicWhereInput ipAddressStartsWith(String ipAddressStartsWith) {
    this.ipAddressStartsWith = JsonNullable.<String>of(ipAddressStartsWith);
    return this;
  }

   /**
   * Get ipAddressStartsWith
   * @return ipAddressStartsWith
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getIpAddressStartsWith() {
        return ipAddressStartsWith.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_IP_ADDRESS_STARTS_WITH)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getIpAddressStartsWith_JsonNullable() {
    return ipAddressStartsWith;
  }
  
  @JsonProperty(JSON_PROPERTY_IP_ADDRESS_STARTS_WITH)
  public void setIpAddressStartsWith_JsonNullable(JsonNullable<String> ipAddressStartsWith) {
    this.ipAddressStartsWith = ipAddressStartsWith;
  }

  public void setIpAddressStartsWith(String ipAddressStartsWith) {
    this.ipAddressStartsWith = JsonNullable.<String>of(ipAddressStartsWith);
  }


  public NicWhereInput isSriov(Boolean isSriov) {
    this.isSriov = JsonNullable.<Boolean>of(isSriov);
    return this;
  }

   /**
   * Get isSriov
   * @return isSriov
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public Boolean getIsSriov() {
        return isSriov.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_IS_SRIOV)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<Boolean> getIsSriov_JsonNullable() {
    return isSriov;
  }
  
  @JsonProperty(JSON_PROPERTY_IS_SRIOV)
  public void setIsSriov_JsonNullable(JsonNullable<Boolean> isSriov) {
    this.isSriov = isSriov;
  }

  public void setIsSriov(Boolean isSriov) {
    this.isSriov = JsonNullable.<Boolean>of(isSriov);
  }


  public NicWhereInput isSriovNot(Boolean isSriovNot) {
    this.isSriovNot = JsonNullable.<Boolean>of(isSriovNot);
    return this;
  }

   /**
   * Get isSriovNot
   * @return isSriovNot
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public Boolean getIsSriovNot() {
        return isSriovNot.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_IS_SRIOV_NOT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<Boolean> getIsSriovNot_JsonNullable() {
    return isSriovNot;
  }
  
  @JsonProperty(JSON_PROPERTY_IS_SRIOV_NOT)
  public void setIsSriovNot_JsonNullable(JsonNullable<Boolean> isSriovNot) {
    this.isSriovNot = isSriovNot;
  }

  public void setIsSriovNot(Boolean isSriovNot) {
    this.isSriovNot = JsonNullable.<Boolean>of(isSriovNot);
  }


  public NicWhereInput labelsEvery(LabelWhereInput labelsEvery) {
    this.labelsEvery = JsonNullable.<LabelWhereInput>of(labelsEvery);
    return this;
  }

   /**
   * Get labelsEvery
   * @return labelsEvery
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public LabelWhereInput getLabelsEvery() {
        return labelsEvery.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_LABELS_EVERY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<LabelWhereInput> getLabelsEvery_JsonNullable() {
    return labelsEvery;
  }
  
  @JsonProperty(JSON_PROPERTY_LABELS_EVERY)
  public void setLabelsEvery_JsonNullable(JsonNullable<LabelWhereInput> labelsEvery) {
    this.labelsEvery = labelsEvery;
  }

  public void setLabelsEvery(LabelWhereInput labelsEvery) {
    this.labelsEvery = JsonNullable.<LabelWhereInput>of(labelsEvery);
  }


  public NicWhereInput labelsNone(LabelWhereInput labelsNone) {
    this.labelsNone = JsonNullable.<LabelWhereInput>of(labelsNone);
    return this;
  }

   /**
   * Get labelsNone
   * @return labelsNone
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public LabelWhereInput getLabelsNone() {
        return labelsNone.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_LABELS_NONE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<LabelWhereInput> getLabelsNone_JsonNullable() {
    return labelsNone;
  }
  
  @JsonProperty(JSON_PROPERTY_LABELS_NONE)
  public void setLabelsNone_JsonNullable(JsonNullable<LabelWhereInput> labelsNone) {
    this.labelsNone = labelsNone;
  }

  public void setLabelsNone(LabelWhereInput labelsNone) {
    this.labelsNone = JsonNullable.<LabelWhereInput>of(labelsNone);
  }


  public NicWhereInput labelsSome(LabelWhereInput labelsSome) {
    this.labelsSome = JsonNullable.<LabelWhereInput>of(labelsSome);
    return this;
  }

   /**
   * Get labelsSome
   * @return labelsSome
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public LabelWhereInput getLabelsSome() {
        return labelsSome.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_LABELS_SOME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<LabelWhereInput> getLabelsSome_JsonNullable() {
    return labelsSome;
  }
  
  @JsonProperty(JSON_PROPERTY_LABELS_SOME)
  public void setLabelsSome_JsonNullable(JsonNullable<LabelWhereInput> labelsSome) {
    this.labelsSome = labelsSome;
  }

  public void setLabelsSome(LabelWhereInput labelsSome) {
    this.labelsSome = JsonNullable.<LabelWhereInput>of(labelsSome);
  }


  public NicWhereInput localId(String localId) {
    this.localId = JsonNullable.<String>of(localId);
    return this;
  }

   /**
   * Get localId
   * @return localId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getLocalId() {
        return localId.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_LOCAL_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getLocalId_JsonNullable() {
    return localId;
  }
  
  @JsonProperty(JSON_PROPERTY_LOCAL_ID)
  public void setLocalId_JsonNullable(JsonNullable<String> localId) {
    this.localId = localId;
  }

  public void setLocalId(String localId) {
    this.localId = JsonNullable.<String>of(localId);
  }


  public NicWhereInput localIdContains(String localIdContains) {
    this.localIdContains = JsonNullable.<String>of(localIdContains);
    return this;
  }

   /**
   * Get localIdContains
   * @return localIdContains
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getLocalIdContains() {
        return localIdContains.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_LOCAL_ID_CONTAINS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getLocalIdContains_JsonNullable() {
    return localIdContains;
  }
  
  @JsonProperty(JSON_PROPERTY_LOCAL_ID_CONTAINS)
  public void setLocalIdContains_JsonNullable(JsonNullable<String> localIdContains) {
    this.localIdContains = localIdContains;
  }

  public void setLocalIdContains(String localIdContains) {
    this.localIdContains = JsonNullable.<String>of(localIdContains);
  }


  public NicWhereInput localIdEndsWith(String localIdEndsWith) {
    this.localIdEndsWith = JsonNullable.<String>of(localIdEndsWith);
    return this;
  }

   /**
   * Get localIdEndsWith
   * @return localIdEndsWith
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getLocalIdEndsWith() {
        return localIdEndsWith.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_LOCAL_ID_ENDS_WITH)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getLocalIdEndsWith_JsonNullable() {
    return localIdEndsWith;
  }
  
  @JsonProperty(JSON_PROPERTY_LOCAL_ID_ENDS_WITH)
  public void setLocalIdEndsWith_JsonNullable(JsonNullable<String> localIdEndsWith) {
    this.localIdEndsWith = localIdEndsWith;
  }

  public void setLocalIdEndsWith(String localIdEndsWith) {
    this.localIdEndsWith = JsonNullable.<String>of(localIdEndsWith);
  }


  public NicWhereInput localIdGt(String localIdGt) {
    this.localIdGt = JsonNullable.<String>of(localIdGt);
    return this;
  }

   /**
   * Get localIdGt
   * @return localIdGt
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getLocalIdGt() {
        return localIdGt.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_LOCAL_ID_GT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getLocalIdGt_JsonNullable() {
    return localIdGt;
  }
  
  @JsonProperty(JSON_PROPERTY_LOCAL_ID_GT)
  public void setLocalIdGt_JsonNullable(JsonNullable<String> localIdGt) {
    this.localIdGt = localIdGt;
  }

  public void setLocalIdGt(String localIdGt) {
    this.localIdGt = JsonNullable.<String>of(localIdGt);
  }


  public NicWhereInput localIdGte(String localIdGte) {
    this.localIdGte = JsonNullable.<String>of(localIdGte);
    return this;
  }

   /**
   * Get localIdGte
   * @return localIdGte
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getLocalIdGte() {
        return localIdGte.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_LOCAL_ID_GTE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getLocalIdGte_JsonNullable() {
    return localIdGte;
  }
  
  @JsonProperty(JSON_PROPERTY_LOCAL_ID_GTE)
  public void setLocalIdGte_JsonNullable(JsonNullable<String> localIdGte) {
    this.localIdGte = localIdGte;
  }

  public void setLocalIdGte(String localIdGte) {
    this.localIdGte = JsonNullable.<String>of(localIdGte);
  }


  public NicWhereInput localIdIn(List<String> localIdIn) {
    this.localIdIn = JsonNullable.<List<String>>of(localIdIn);
    return this;
  }

  public NicWhereInput addLocalIdInItem(String localIdInItem) {
    if (this.localIdIn == null || !this.localIdIn.isPresent()) {
      this.localIdIn = JsonNullable.<List<String>>of(new ArrayList<>());
    }
    try {
      this.localIdIn.get().add(localIdInItem);
    } catch (java.util.NoSuchElementException e) {
      // this can never happen, as we make sure above that the value is present
    }
    return this;
  }

   /**
   * Get localIdIn
   * @return localIdIn
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public List<String> getLocalIdIn() {
        return localIdIn.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_LOCAL_ID_IN)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<List<String>> getLocalIdIn_JsonNullable() {
    return localIdIn;
  }
  
  @JsonProperty(JSON_PROPERTY_LOCAL_ID_IN)
  public void setLocalIdIn_JsonNullable(JsonNullable<List<String>> localIdIn) {
    this.localIdIn = localIdIn;
  }

  public void setLocalIdIn(List<String> localIdIn) {
    this.localIdIn = JsonNullable.<List<String>>of(localIdIn);
  }


  public NicWhereInput localIdLt(String localIdLt) {
    this.localIdLt = JsonNullable.<String>of(localIdLt);
    return this;
  }

   /**
   * Get localIdLt
   * @return localIdLt
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getLocalIdLt() {
        return localIdLt.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_LOCAL_ID_LT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getLocalIdLt_JsonNullable() {
    return localIdLt;
  }
  
  @JsonProperty(JSON_PROPERTY_LOCAL_ID_LT)
  public void setLocalIdLt_JsonNullable(JsonNullable<String> localIdLt) {
    this.localIdLt = localIdLt;
  }

  public void setLocalIdLt(String localIdLt) {
    this.localIdLt = JsonNullable.<String>of(localIdLt);
  }


  public NicWhereInput localIdLte(String localIdLte) {
    this.localIdLte = JsonNullable.<String>of(localIdLte);
    return this;
  }

   /**
   * Get localIdLte
   * @return localIdLte
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getLocalIdLte() {
        return localIdLte.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_LOCAL_ID_LTE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getLocalIdLte_JsonNullable() {
    return localIdLte;
  }
  
  @JsonProperty(JSON_PROPERTY_LOCAL_ID_LTE)
  public void setLocalIdLte_JsonNullable(JsonNullable<String> localIdLte) {
    this.localIdLte = localIdLte;
  }

  public void setLocalIdLte(String localIdLte) {
    this.localIdLte = JsonNullable.<String>of(localIdLte);
  }


  public NicWhereInput localIdNot(String localIdNot) {
    this.localIdNot = JsonNullable.<String>of(localIdNot);
    return this;
  }

   /**
   * Get localIdNot
   * @return localIdNot
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getLocalIdNot() {
        return localIdNot.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_LOCAL_ID_NOT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getLocalIdNot_JsonNullable() {
    return localIdNot;
  }
  
  @JsonProperty(JSON_PROPERTY_LOCAL_ID_NOT)
  public void setLocalIdNot_JsonNullable(JsonNullable<String> localIdNot) {
    this.localIdNot = localIdNot;
  }

  public void setLocalIdNot(String localIdNot) {
    this.localIdNot = JsonNullable.<String>of(localIdNot);
  }


  public NicWhereInput localIdNotContains(String localIdNotContains) {
    this.localIdNotContains = JsonNullable.<String>of(localIdNotContains);
    return this;
  }

   /**
   * Get localIdNotContains
   * @return localIdNotContains
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getLocalIdNotContains() {
        return localIdNotContains.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_LOCAL_ID_NOT_CONTAINS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getLocalIdNotContains_JsonNullable() {
    return localIdNotContains;
  }
  
  @JsonProperty(JSON_PROPERTY_LOCAL_ID_NOT_CONTAINS)
  public void setLocalIdNotContains_JsonNullable(JsonNullable<String> localIdNotContains) {
    this.localIdNotContains = localIdNotContains;
  }

  public void setLocalIdNotContains(String localIdNotContains) {
    this.localIdNotContains = JsonNullable.<String>of(localIdNotContains);
  }


  public NicWhereInput localIdNotEndsWith(String localIdNotEndsWith) {
    this.localIdNotEndsWith = JsonNullable.<String>of(localIdNotEndsWith);
    return this;
  }

   /**
   * Get localIdNotEndsWith
   * @return localIdNotEndsWith
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getLocalIdNotEndsWith() {
        return localIdNotEndsWith.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_LOCAL_ID_NOT_ENDS_WITH)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getLocalIdNotEndsWith_JsonNullable() {
    return localIdNotEndsWith;
  }
  
  @JsonProperty(JSON_PROPERTY_LOCAL_ID_NOT_ENDS_WITH)
  public void setLocalIdNotEndsWith_JsonNullable(JsonNullable<String> localIdNotEndsWith) {
    this.localIdNotEndsWith = localIdNotEndsWith;
  }

  public void setLocalIdNotEndsWith(String localIdNotEndsWith) {
    this.localIdNotEndsWith = JsonNullable.<String>of(localIdNotEndsWith);
  }


  public NicWhereInput localIdNotIn(List<String> localIdNotIn) {
    this.localIdNotIn = JsonNullable.<List<String>>of(localIdNotIn);
    return this;
  }

  public NicWhereInput addLocalIdNotInItem(String localIdNotInItem) {
    if (this.localIdNotIn == null || !this.localIdNotIn.isPresent()) {
      this.localIdNotIn = JsonNullable.<List<String>>of(new ArrayList<>());
    }
    try {
      this.localIdNotIn.get().add(localIdNotInItem);
    } catch (java.util.NoSuchElementException e) {
      // this can never happen, as we make sure above that the value is present
    }
    return this;
  }

   /**
   * Get localIdNotIn
   * @return localIdNotIn
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public List<String> getLocalIdNotIn() {
        return localIdNotIn.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_LOCAL_ID_NOT_IN)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<List<String>> getLocalIdNotIn_JsonNullable() {
    return localIdNotIn;
  }
  
  @JsonProperty(JSON_PROPERTY_LOCAL_ID_NOT_IN)
  public void setLocalIdNotIn_JsonNullable(JsonNullable<List<String>> localIdNotIn) {
    this.localIdNotIn = localIdNotIn;
  }

  public void setLocalIdNotIn(List<String> localIdNotIn) {
    this.localIdNotIn = JsonNullable.<List<String>>of(localIdNotIn);
  }


  public NicWhereInput localIdNotStartsWith(String localIdNotStartsWith) {
    this.localIdNotStartsWith = JsonNullable.<String>of(localIdNotStartsWith);
    return this;
  }

   /**
   * Get localIdNotStartsWith
   * @return localIdNotStartsWith
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getLocalIdNotStartsWith() {
        return localIdNotStartsWith.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_LOCAL_ID_NOT_STARTS_WITH)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getLocalIdNotStartsWith_JsonNullable() {
    return localIdNotStartsWith;
  }
  
  @JsonProperty(JSON_PROPERTY_LOCAL_ID_NOT_STARTS_WITH)
  public void setLocalIdNotStartsWith_JsonNullable(JsonNullable<String> localIdNotStartsWith) {
    this.localIdNotStartsWith = localIdNotStartsWith;
  }

  public void setLocalIdNotStartsWith(String localIdNotStartsWith) {
    this.localIdNotStartsWith = JsonNullable.<String>of(localIdNotStartsWith);
  }


  public NicWhereInput localIdStartsWith(String localIdStartsWith) {
    this.localIdStartsWith = JsonNullable.<String>of(localIdStartsWith);
    return this;
  }

   /**
   * Get localIdStartsWith
   * @return localIdStartsWith
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getLocalIdStartsWith() {
        return localIdStartsWith.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_LOCAL_ID_STARTS_WITH)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getLocalIdStartsWith_JsonNullable() {
    return localIdStartsWith;
  }
  
  @JsonProperty(JSON_PROPERTY_LOCAL_ID_STARTS_WITH)
  public void setLocalIdStartsWith_JsonNullable(JsonNullable<String> localIdStartsWith) {
    this.localIdStartsWith = localIdStartsWith;
  }

  public void setLocalIdStartsWith(String localIdStartsWith) {
    this.localIdStartsWith = JsonNullable.<String>of(localIdStartsWith);
  }


  public NicWhereInput macAddress(String macAddress) {
    this.macAddress = JsonNullable.<String>of(macAddress);
    return this;
  }

   /**
   * Get macAddress
   * @return macAddress
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getMacAddress() {
        return macAddress.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_MAC_ADDRESS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getMacAddress_JsonNullable() {
    return macAddress;
  }
  
  @JsonProperty(JSON_PROPERTY_MAC_ADDRESS)
  public void setMacAddress_JsonNullable(JsonNullable<String> macAddress) {
    this.macAddress = macAddress;
  }

  public void setMacAddress(String macAddress) {
    this.macAddress = JsonNullable.<String>of(macAddress);
  }


  public NicWhereInput macAddressContains(String macAddressContains) {
    this.macAddressContains = JsonNullable.<String>of(macAddressContains);
    return this;
  }

   /**
   * Get macAddressContains
   * @return macAddressContains
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getMacAddressContains() {
        return macAddressContains.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_MAC_ADDRESS_CONTAINS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getMacAddressContains_JsonNullable() {
    return macAddressContains;
  }
  
  @JsonProperty(JSON_PROPERTY_MAC_ADDRESS_CONTAINS)
  public void setMacAddressContains_JsonNullable(JsonNullable<String> macAddressContains) {
    this.macAddressContains = macAddressContains;
  }

  public void setMacAddressContains(String macAddressContains) {
    this.macAddressContains = JsonNullable.<String>of(macAddressContains);
  }


  public NicWhereInput macAddressEndsWith(String macAddressEndsWith) {
    this.macAddressEndsWith = JsonNullable.<String>of(macAddressEndsWith);
    return this;
  }

   /**
   * Get macAddressEndsWith
   * @return macAddressEndsWith
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getMacAddressEndsWith() {
        return macAddressEndsWith.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_MAC_ADDRESS_ENDS_WITH)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getMacAddressEndsWith_JsonNullable() {
    return macAddressEndsWith;
  }
  
  @JsonProperty(JSON_PROPERTY_MAC_ADDRESS_ENDS_WITH)
  public void setMacAddressEndsWith_JsonNullable(JsonNullable<String> macAddressEndsWith) {
    this.macAddressEndsWith = macAddressEndsWith;
  }

  public void setMacAddressEndsWith(String macAddressEndsWith) {
    this.macAddressEndsWith = JsonNullable.<String>of(macAddressEndsWith);
  }


  public NicWhereInput macAddressGt(String macAddressGt) {
    this.macAddressGt = JsonNullable.<String>of(macAddressGt);
    return this;
  }

   /**
   * Get macAddressGt
   * @return macAddressGt
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getMacAddressGt() {
        return macAddressGt.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_MAC_ADDRESS_GT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getMacAddressGt_JsonNullable() {
    return macAddressGt;
  }
  
  @JsonProperty(JSON_PROPERTY_MAC_ADDRESS_GT)
  public void setMacAddressGt_JsonNullable(JsonNullable<String> macAddressGt) {
    this.macAddressGt = macAddressGt;
  }

  public void setMacAddressGt(String macAddressGt) {
    this.macAddressGt = JsonNullable.<String>of(macAddressGt);
  }


  public NicWhereInput macAddressGte(String macAddressGte) {
    this.macAddressGte = JsonNullable.<String>of(macAddressGte);
    return this;
  }

   /**
   * Get macAddressGte
   * @return macAddressGte
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getMacAddressGte() {
        return macAddressGte.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_MAC_ADDRESS_GTE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getMacAddressGte_JsonNullable() {
    return macAddressGte;
  }
  
  @JsonProperty(JSON_PROPERTY_MAC_ADDRESS_GTE)
  public void setMacAddressGte_JsonNullable(JsonNullable<String> macAddressGte) {
    this.macAddressGte = macAddressGte;
  }

  public void setMacAddressGte(String macAddressGte) {
    this.macAddressGte = JsonNullable.<String>of(macAddressGte);
  }


  public NicWhereInput macAddressIn(List<String> macAddressIn) {
    this.macAddressIn = JsonNullable.<List<String>>of(macAddressIn);
    return this;
  }

  public NicWhereInput addMacAddressInItem(String macAddressInItem) {
    if (this.macAddressIn == null || !this.macAddressIn.isPresent()) {
      this.macAddressIn = JsonNullable.<List<String>>of(new ArrayList<>());
    }
    try {
      this.macAddressIn.get().add(macAddressInItem);
    } catch (java.util.NoSuchElementException e) {
      // this can never happen, as we make sure above that the value is present
    }
    return this;
  }

   /**
   * Get macAddressIn
   * @return macAddressIn
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public List<String> getMacAddressIn() {
        return macAddressIn.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_MAC_ADDRESS_IN)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<List<String>> getMacAddressIn_JsonNullable() {
    return macAddressIn;
  }
  
  @JsonProperty(JSON_PROPERTY_MAC_ADDRESS_IN)
  public void setMacAddressIn_JsonNullable(JsonNullable<List<String>> macAddressIn) {
    this.macAddressIn = macAddressIn;
  }

  public void setMacAddressIn(List<String> macAddressIn) {
    this.macAddressIn = JsonNullable.<List<String>>of(macAddressIn);
  }


  public NicWhereInput macAddressLt(String macAddressLt) {
    this.macAddressLt = JsonNullable.<String>of(macAddressLt);
    return this;
  }

   /**
   * Get macAddressLt
   * @return macAddressLt
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getMacAddressLt() {
        return macAddressLt.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_MAC_ADDRESS_LT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getMacAddressLt_JsonNullable() {
    return macAddressLt;
  }
  
  @JsonProperty(JSON_PROPERTY_MAC_ADDRESS_LT)
  public void setMacAddressLt_JsonNullable(JsonNullable<String> macAddressLt) {
    this.macAddressLt = macAddressLt;
  }

  public void setMacAddressLt(String macAddressLt) {
    this.macAddressLt = JsonNullable.<String>of(macAddressLt);
  }


  public NicWhereInput macAddressLte(String macAddressLte) {
    this.macAddressLte = JsonNullable.<String>of(macAddressLte);
    return this;
  }

   /**
   * Get macAddressLte
   * @return macAddressLte
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getMacAddressLte() {
        return macAddressLte.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_MAC_ADDRESS_LTE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getMacAddressLte_JsonNullable() {
    return macAddressLte;
  }
  
  @JsonProperty(JSON_PROPERTY_MAC_ADDRESS_LTE)
  public void setMacAddressLte_JsonNullable(JsonNullable<String> macAddressLte) {
    this.macAddressLte = macAddressLte;
  }

  public void setMacAddressLte(String macAddressLte) {
    this.macAddressLte = JsonNullable.<String>of(macAddressLte);
  }


  public NicWhereInput macAddressNot(String macAddressNot) {
    this.macAddressNot = JsonNullable.<String>of(macAddressNot);
    return this;
  }

   /**
   * Get macAddressNot
   * @return macAddressNot
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getMacAddressNot() {
        return macAddressNot.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_MAC_ADDRESS_NOT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getMacAddressNot_JsonNullable() {
    return macAddressNot;
  }
  
  @JsonProperty(JSON_PROPERTY_MAC_ADDRESS_NOT)
  public void setMacAddressNot_JsonNullable(JsonNullable<String> macAddressNot) {
    this.macAddressNot = macAddressNot;
  }

  public void setMacAddressNot(String macAddressNot) {
    this.macAddressNot = JsonNullable.<String>of(macAddressNot);
  }


  public NicWhereInput macAddressNotContains(String macAddressNotContains) {
    this.macAddressNotContains = JsonNullable.<String>of(macAddressNotContains);
    return this;
  }

   /**
   * Get macAddressNotContains
   * @return macAddressNotContains
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getMacAddressNotContains() {
        return macAddressNotContains.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_MAC_ADDRESS_NOT_CONTAINS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getMacAddressNotContains_JsonNullable() {
    return macAddressNotContains;
  }
  
  @JsonProperty(JSON_PROPERTY_MAC_ADDRESS_NOT_CONTAINS)
  public void setMacAddressNotContains_JsonNullable(JsonNullable<String> macAddressNotContains) {
    this.macAddressNotContains = macAddressNotContains;
  }

  public void setMacAddressNotContains(String macAddressNotContains) {
    this.macAddressNotContains = JsonNullable.<String>of(macAddressNotContains);
  }


  public NicWhereInput macAddressNotEndsWith(String macAddressNotEndsWith) {
    this.macAddressNotEndsWith = JsonNullable.<String>of(macAddressNotEndsWith);
    return this;
  }

   /**
   * Get macAddressNotEndsWith
   * @return macAddressNotEndsWith
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getMacAddressNotEndsWith() {
        return macAddressNotEndsWith.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_MAC_ADDRESS_NOT_ENDS_WITH)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getMacAddressNotEndsWith_JsonNullable() {
    return macAddressNotEndsWith;
  }
  
  @JsonProperty(JSON_PROPERTY_MAC_ADDRESS_NOT_ENDS_WITH)
  public void setMacAddressNotEndsWith_JsonNullable(JsonNullable<String> macAddressNotEndsWith) {
    this.macAddressNotEndsWith = macAddressNotEndsWith;
  }

  public void setMacAddressNotEndsWith(String macAddressNotEndsWith) {
    this.macAddressNotEndsWith = JsonNullable.<String>of(macAddressNotEndsWith);
  }


  public NicWhereInput macAddressNotIn(List<String> macAddressNotIn) {
    this.macAddressNotIn = JsonNullable.<List<String>>of(macAddressNotIn);
    return this;
  }

  public NicWhereInput addMacAddressNotInItem(String macAddressNotInItem) {
    if (this.macAddressNotIn == null || !this.macAddressNotIn.isPresent()) {
      this.macAddressNotIn = JsonNullable.<List<String>>of(new ArrayList<>());
    }
    try {
      this.macAddressNotIn.get().add(macAddressNotInItem);
    } catch (java.util.NoSuchElementException e) {
      // this can never happen, as we make sure above that the value is present
    }
    return this;
  }

   /**
   * Get macAddressNotIn
   * @return macAddressNotIn
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public List<String> getMacAddressNotIn() {
        return macAddressNotIn.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_MAC_ADDRESS_NOT_IN)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<List<String>> getMacAddressNotIn_JsonNullable() {
    return macAddressNotIn;
  }
  
  @JsonProperty(JSON_PROPERTY_MAC_ADDRESS_NOT_IN)
  public void setMacAddressNotIn_JsonNullable(JsonNullable<List<String>> macAddressNotIn) {
    this.macAddressNotIn = macAddressNotIn;
  }

  public void setMacAddressNotIn(List<String> macAddressNotIn) {
    this.macAddressNotIn = JsonNullable.<List<String>>of(macAddressNotIn);
  }


  public NicWhereInput macAddressNotStartsWith(String macAddressNotStartsWith) {
    this.macAddressNotStartsWith = JsonNullable.<String>of(macAddressNotStartsWith);
    return this;
  }

   /**
   * Get macAddressNotStartsWith
   * @return macAddressNotStartsWith
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getMacAddressNotStartsWith() {
        return macAddressNotStartsWith.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_MAC_ADDRESS_NOT_STARTS_WITH)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getMacAddressNotStartsWith_JsonNullable() {
    return macAddressNotStartsWith;
  }
  
  @JsonProperty(JSON_PROPERTY_MAC_ADDRESS_NOT_STARTS_WITH)
  public void setMacAddressNotStartsWith_JsonNullable(JsonNullable<String> macAddressNotStartsWith) {
    this.macAddressNotStartsWith = macAddressNotStartsWith;
  }

  public void setMacAddressNotStartsWith(String macAddressNotStartsWith) {
    this.macAddressNotStartsWith = JsonNullable.<String>of(macAddressNotStartsWith);
  }


  public NicWhereInput macAddressStartsWith(String macAddressStartsWith) {
    this.macAddressStartsWith = JsonNullable.<String>of(macAddressStartsWith);
    return this;
  }

   /**
   * Get macAddressStartsWith
   * @return macAddressStartsWith
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getMacAddressStartsWith() {
        return macAddressStartsWith.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_MAC_ADDRESS_STARTS_WITH)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getMacAddressStartsWith_JsonNullable() {
    return macAddressStartsWith;
  }
  
  @JsonProperty(JSON_PROPERTY_MAC_ADDRESS_STARTS_WITH)
  public void setMacAddressStartsWith_JsonNullable(JsonNullable<String> macAddressStartsWith) {
    this.macAddressStartsWith = macAddressStartsWith;
  }

  public void setMacAddressStartsWith(String macAddressStartsWith) {
    this.macAddressStartsWith = JsonNullable.<String>of(macAddressStartsWith);
  }


  public NicWhereInput maxVfNum(Double maxVfNum) {
    this.maxVfNum = JsonNullable.<Double>of(maxVfNum);
    return this;
  }

   /**
   * Get maxVfNum
   * @return maxVfNum
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public Double getMaxVfNum() {
        return maxVfNum.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_MAX_VF_NUM)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<Double> getMaxVfNum_JsonNullable() {
    return maxVfNum;
  }
  
  @JsonProperty(JSON_PROPERTY_MAX_VF_NUM)
  public void setMaxVfNum_JsonNullable(JsonNullable<Double> maxVfNum) {
    this.maxVfNum = maxVfNum;
  }

  public void setMaxVfNum(Double maxVfNum) {
    this.maxVfNum = JsonNullable.<Double>of(maxVfNum);
  }


  public NicWhereInput maxVfNumGt(Double maxVfNumGt) {
    this.maxVfNumGt = JsonNullable.<Double>of(maxVfNumGt);
    return this;
  }

   /**
   * Get maxVfNumGt
   * @return maxVfNumGt
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public Double getMaxVfNumGt() {
        return maxVfNumGt.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_MAX_VF_NUM_GT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<Double> getMaxVfNumGt_JsonNullable() {
    return maxVfNumGt;
  }
  
  @JsonProperty(JSON_PROPERTY_MAX_VF_NUM_GT)
  public void setMaxVfNumGt_JsonNullable(JsonNullable<Double> maxVfNumGt) {
    this.maxVfNumGt = maxVfNumGt;
  }

  public void setMaxVfNumGt(Double maxVfNumGt) {
    this.maxVfNumGt = JsonNullable.<Double>of(maxVfNumGt);
  }


  public NicWhereInput maxVfNumGte(Double maxVfNumGte) {
    this.maxVfNumGte = JsonNullable.<Double>of(maxVfNumGte);
    return this;
  }

   /**
   * Get maxVfNumGte
   * @return maxVfNumGte
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public Double getMaxVfNumGte() {
        return maxVfNumGte.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_MAX_VF_NUM_GTE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<Double> getMaxVfNumGte_JsonNullable() {
    return maxVfNumGte;
  }
  
  @JsonProperty(JSON_PROPERTY_MAX_VF_NUM_GTE)
  public void setMaxVfNumGte_JsonNullable(JsonNullable<Double> maxVfNumGte) {
    this.maxVfNumGte = maxVfNumGte;
  }

  public void setMaxVfNumGte(Double maxVfNumGte) {
    this.maxVfNumGte = JsonNullable.<Double>of(maxVfNumGte);
  }


  public NicWhereInput maxVfNumIn(List<Double> maxVfNumIn) {
    this.maxVfNumIn = JsonNullable.<List<Double>>of(maxVfNumIn);
    return this;
  }

  public NicWhereInput addMaxVfNumInItem(Double maxVfNumInItem) {
    if (this.maxVfNumIn == null || !this.maxVfNumIn.isPresent()) {
      this.maxVfNumIn = JsonNullable.<List<Double>>of(new ArrayList<>());
    }
    try {
      this.maxVfNumIn.get().add(maxVfNumInItem);
    } catch (java.util.NoSuchElementException e) {
      // this can never happen, as we make sure above that the value is present
    }
    return this;
  }

   /**
   * Get maxVfNumIn
   * @return maxVfNumIn
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public List<Double> getMaxVfNumIn() {
        return maxVfNumIn.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_MAX_VF_NUM_IN)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<List<Double>> getMaxVfNumIn_JsonNullable() {
    return maxVfNumIn;
  }
  
  @JsonProperty(JSON_PROPERTY_MAX_VF_NUM_IN)
  public void setMaxVfNumIn_JsonNullable(JsonNullable<List<Double>> maxVfNumIn) {
    this.maxVfNumIn = maxVfNumIn;
  }

  public void setMaxVfNumIn(List<Double> maxVfNumIn) {
    this.maxVfNumIn = JsonNullable.<List<Double>>of(maxVfNumIn);
  }


  public NicWhereInput maxVfNumLt(Double maxVfNumLt) {
    this.maxVfNumLt = JsonNullable.<Double>of(maxVfNumLt);
    return this;
  }

   /**
   * Get maxVfNumLt
   * @return maxVfNumLt
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public Double getMaxVfNumLt() {
        return maxVfNumLt.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_MAX_VF_NUM_LT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<Double> getMaxVfNumLt_JsonNullable() {
    return maxVfNumLt;
  }
  
  @JsonProperty(JSON_PROPERTY_MAX_VF_NUM_LT)
  public void setMaxVfNumLt_JsonNullable(JsonNullable<Double> maxVfNumLt) {
    this.maxVfNumLt = maxVfNumLt;
  }

  public void setMaxVfNumLt(Double maxVfNumLt) {
    this.maxVfNumLt = JsonNullable.<Double>of(maxVfNumLt);
  }


  public NicWhereInput maxVfNumLte(Double maxVfNumLte) {
    this.maxVfNumLte = JsonNullable.<Double>of(maxVfNumLte);
    return this;
  }

   /**
   * Get maxVfNumLte
   * @return maxVfNumLte
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public Double getMaxVfNumLte() {
        return maxVfNumLte.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_MAX_VF_NUM_LTE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<Double> getMaxVfNumLte_JsonNullable() {
    return maxVfNumLte;
  }
  
  @JsonProperty(JSON_PROPERTY_MAX_VF_NUM_LTE)
  public void setMaxVfNumLte_JsonNullable(JsonNullable<Double> maxVfNumLte) {
    this.maxVfNumLte = maxVfNumLte;
  }

  public void setMaxVfNumLte(Double maxVfNumLte) {
    this.maxVfNumLte = JsonNullable.<Double>of(maxVfNumLte);
  }


  public NicWhereInput maxVfNumNot(Double maxVfNumNot) {
    this.maxVfNumNot = JsonNullable.<Double>of(maxVfNumNot);
    return this;
  }

   /**
   * Get maxVfNumNot
   * @return maxVfNumNot
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public Double getMaxVfNumNot() {
        return maxVfNumNot.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_MAX_VF_NUM_NOT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<Double> getMaxVfNumNot_JsonNullable() {
    return maxVfNumNot;
  }
  
  @JsonProperty(JSON_PROPERTY_MAX_VF_NUM_NOT)
  public void setMaxVfNumNot_JsonNullable(JsonNullable<Double> maxVfNumNot) {
    this.maxVfNumNot = maxVfNumNot;
  }

  public void setMaxVfNumNot(Double maxVfNumNot) {
    this.maxVfNumNot = JsonNullable.<Double>of(maxVfNumNot);
  }


  public NicWhereInput maxVfNumNotIn(List<Double> maxVfNumNotIn) {
    this.maxVfNumNotIn = JsonNullable.<List<Double>>of(maxVfNumNotIn);
    return this;
  }

  public NicWhereInput addMaxVfNumNotInItem(Double maxVfNumNotInItem) {
    if (this.maxVfNumNotIn == null || !this.maxVfNumNotIn.isPresent()) {
      this.maxVfNumNotIn = JsonNullable.<List<Double>>of(new ArrayList<>());
    }
    try {
      this.maxVfNumNotIn.get().add(maxVfNumNotInItem);
    } catch (java.util.NoSuchElementException e) {
      // this can never happen, as we make sure above that the value is present
    }
    return this;
  }

   /**
   * Get maxVfNumNotIn
   * @return maxVfNumNotIn
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public List<Double> getMaxVfNumNotIn() {
        return maxVfNumNotIn.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_MAX_VF_NUM_NOT_IN)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<List<Double>> getMaxVfNumNotIn_JsonNullable() {
    return maxVfNumNotIn;
  }
  
  @JsonProperty(JSON_PROPERTY_MAX_VF_NUM_NOT_IN)
  public void setMaxVfNumNotIn_JsonNullable(JsonNullable<List<Double>> maxVfNumNotIn) {
    this.maxVfNumNotIn = maxVfNumNotIn;
  }

  public void setMaxVfNumNotIn(List<Double> maxVfNumNotIn) {
    this.maxVfNumNotIn = JsonNullable.<List<Double>>of(maxVfNumNotIn);
  }


  public NicWhereInput model(String model) {
    this.model = JsonNullable.<String>of(model);
    return this;
  }

   /**
   * Get model
   * @return model
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getModel() {
        return model.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_MODEL)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getModel_JsonNullable() {
    return model;
  }
  
  @JsonProperty(JSON_PROPERTY_MODEL)
  public void setModel_JsonNullable(JsonNullable<String> model) {
    this.model = model;
  }

  public void setModel(String model) {
    this.model = JsonNullable.<String>of(model);
  }


  public NicWhereInput modelContains(String modelContains) {
    this.modelContains = JsonNullable.<String>of(modelContains);
    return this;
  }

   /**
   * Get modelContains
   * @return modelContains
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getModelContains() {
        return modelContains.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_MODEL_CONTAINS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getModelContains_JsonNullable() {
    return modelContains;
  }
  
  @JsonProperty(JSON_PROPERTY_MODEL_CONTAINS)
  public void setModelContains_JsonNullable(JsonNullable<String> modelContains) {
    this.modelContains = modelContains;
  }

  public void setModelContains(String modelContains) {
    this.modelContains = JsonNullable.<String>of(modelContains);
  }


  public NicWhereInput modelEndsWith(String modelEndsWith) {
    this.modelEndsWith = JsonNullable.<String>of(modelEndsWith);
    return this;
  }

   /**
   * Get modelEndsWith
   * @return modelEndsWith
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getModelEndsWith() {
        return modelEndsWith.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_MODEL_ENDS_WITH)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getModelEndsWith_JsonNullable() {
    return modelEndsWith;
  }
  
  @JsonProperty(JSON_PROPERTY_MODEL_ENDS_WITH)
  public void setModelEndsWith_JsonNullable(JsonNullable<String> modelEndsWith) {
    this.modelEndsWith = modelEndsWith;
  }

  public void setModelEndsWith(String modelEndsWith) {
    this.modelEndsWith = JsonNullable.<String>of(modelEndsWith);
  }


  public NicWhereInput modelGt(String modelGt) {
    this.modelGt = JsonNullable.<String>of(modelGt);
    return this;
  }

   /**
   * Get modelGt
   * @return modelGt
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getModelGt() {
        return modelGt.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_MODEL_GT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getModelGt_JsonNullable() {
    return modelGt;
  }
  
  @JsonProperty(JSON_PROPERTY_MODEL_GT)
  public void setModelGt_JsonNullable(JsonNullable<String> modelGt) {
    this.modelGt = modelGt;
  }

  public void setModelGt(String modelGt) {
    this.modelGt = JsonNullable.<String>of(modelGt);
  }


  public NicWhereInput modelGte(String modelGte) {
    this.modelGte = JsonNullable.<String>of(modelGte);
    return this;
  }

   /**
   * Get modelGte
   * @return modelGte
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getModelGte() {
        return modelGte.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_MODEL_GTE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getModelGte_JsonNullable() {
    return modelGte;
  }
  
  @JsonProperty(JSON_PROPERTY_MODEL_GTE)
  public void setModelGte_JsonNullable(JsonNullable<String> modelGte) {
    this.modelGte = modelGte;
  }

  public void setModelGte(String modelGte) {
    this.modelGte = JsonNullable.<String>of(modelGte);
  }


  public NicWhereInput modelIn(List<String> modelIn) {
    this.modelIn = JsonNullable.<List<String>>of(modelIn);
    return this;
  }

  public NicWhereInput addModelInItem(String modelInItem) {
    if (this.modelIn == null || !this.modelIn.isPresent()) {
      this.modelIn = JsonNullable.<List<String>>of(new ArrayList<>());
    }
    try {
      this.modelIn.get().add(modelInItem);
    } catch (java.util.NoSuchElementException e) {
      // this can never happen, as we make sure above that the value is present
    }
    return this;
  }

   /**
   * Get modelIn
   * @return modelIn
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public List<String> getModelIn() {
        return modelIn.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_MODEL_IN)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<List<String>> getModelIn_JsonNullable() {
    return modelIn;
  }
  
  @JsonProperty(JSON_PROPERTY_MODEL_IN)
  public void setModelIn_JsonNullable(JsonNullable<List<String>> modelIn) {
    this.modelIn = modelIn;
  }

  public void setModelIn(List<String> modelIn) {
    this.modelIn = JsonNullable.<List<String>>of(modelIn);
  }


  public NicWhereInput modelLt(String modelLt) {
    this.modelLt = JsonNullable.<String>of(modelLt);
    return this;
  }

   /**
   * Get modelLt
   * @return modelLt
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getModelLt() {
        return modelLt.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_MODEL_LT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getModelLt_JsonNullable() {
    return modelLt;
  }
  
  @JsonProperty(JSON_PROPERTY_MODEL_LT)
  public void setModelLt_JsonNullable(JsonNullable<String> modelLt) {
    this.modelLt = modelLt;
  }

  public void setModelLt(String modelLt) {
    this.modelLt = JsonNullable.<String>of(modelLt);
  }


  public NicWhereInput modelLte(String modelLte) {
    this.modelLte = JsonNullable.<String>of(modelLte);
    return this;
  }

   /**
   * Get modelLte
   * @return modelLte
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getModelLte() {
        return modelLte.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_MODEL_LTE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getModelLte_JsonNullable() {
    return modelLte;
  }
  
  @JsonProperty(JSON_PROPERTY_MODEL_LTE)
  public void setModelLte_JsonNullable(JsonNullable<String> modelLte) {
    this.modelLte = modelLte;
  }

  public void setModelLte(String modelLte) {
    this.modelLte = JsonNullable.<String>of(modelLte);
  }


  public NicWhereInput modelNot(String modelNot) {
    this.modelNot = JsonNullable.<String>of(modelNot);
    return this;
  }

   /**
   * Get modelNot
   * @return modelNot
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getModelNot() {
        return modelNot.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_MODEL_NOT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getModelNot_JsonNullable() {
    return modelNot;
  }
  
  @JsonProperty(JSON_PROPERTY_MODEL_NOT)
  public void setModelNot_JsonNullable(JsonNullable<String> modelNot) {
    this.modelNot = modelNot;
  }

  public void setModelNot(String modelNot) {
    this.modelNot = JsonNullable.<String>of(modelNot);
  }


  public NicWhereInput modelNotContains(String modelNotContains) {
    this.modelNotContains = JsonNullable.<String>of(modelNotContains);
    return this;
  }

   /**
   * Get modelNotContains
   * @return modelNotContains
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getModelNotContains() {
        return modelNotContains.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_MODEL_NOT_CONTAINS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getModelNotContains_JsonNullable() {
    return modelNotContains;
  }
  
  @JsonProperty(JSON_PROPERTY_MODEL_NOT_CONTAINS)
  public void setModelNotContains_JsonNullable(JsonNullable<String> modelNotContains) {
    this.modelNotContains = modelNotContains;
  }

  public void setModelNotContains(String modelNotContains) {
    this.modelNotContains = JsonNullable.<String>of(modelNotContains);
  }


  public NicWhereInput modelNotEndsWith(String modelNotEndsWith) {
    this.modelNotEndsWith = JsonNullable.<String>of(modelNotEndsWith);
    return this;
  }

   /**
   * Get modelNotEndsWith
   * @return modelNotEndsWith
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getModelNotEndsWith() {
        return modelNotEndsWith.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_MODEL_NOT_ENDS_WITH)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getModelNotEndsWith_JsonNullable() {
    return modelNotEndsWith;
  }
  
  @JsonProperty(JSON_PROPERTY_MODEL_NOT_ENDS_WITH)
  public void setModelNotEndsWith_JsonNullable(JsonNullable<String> modelNotEndsWith) {
    this.modelNotEndsWith = modelNotEndsWith;
  }

  public void setModelNotEndsWith(String modelNotEndsWith) {
    this.modelNotEndsWith = JsonNullable.<String>of(modelNotEndsWith);
  }


  public NicWhereInput modelNotIn(List<String> modelNotIn) {
    this.modelNotIn = JsonNullable.<List<String>>of(modelNotIn);
    return this;
  }

  public NicWhereInput addModelNotInItem(String modelNotInItem) {
    if (this.modelNotIn == null || !this.modelNotIn.isPresent()) {
      this.modelNotIn = JsonNullable.<List<String>>of(new ArrayList<>());
    }
    try {
      this.modelNotIn.get().add(modelNotInItem);
    } catch (java.util.NoSuchElementException e) {
      // this can never happen, as we make sure above that the value is present
    }
    return this;
  }

   /**
   * Get modelNotIn
   * @return modelNotIn
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public List<String> getModelNotIn() {
        return modelNotIn.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_MODEL_NOT_IN)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<List<String>> getModelNotIn_JsonNullable() {
    return modelNotIn;
  }
  
  @JsonProperty(JSON_PROPERTY_MODEL_NOT_IN)
  public void setModelNotIn_JsonNullable(JsonNullable<List<String>> modelNotIn) {
    this.modelNotIn = modelNotIn;
  }

  public void setModelNotIn(List<String> modelNotIn) {
    this.modelNotIn = JsonNullable.<List<String>>of(modelNotIn);
  }


  public NicWhereInput modelNotStartsWith(String modelNotStartsWith) {
    this.modelNotStartsWith = JsonNullable.<String>of(modelNotStartsWith);
    return this;
  }

   /**
   * Get modelNotStartsWith
   * @return modelNotStartsWith
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getModelNotStartsWith() {
        return modelNotStartsWith.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_MODEL_NOT_STARTS_WITH)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getModelNotStartsWith_JsonNullable() {
    return modelNotStartsWith;
  }
  
  @JsonProperty(JSON_PROPERTY_MODEL_NOT_STARTS_WITH)
  public void setModelNotStartsWith_JsonNullable(JsonNullable<String> modelNotStartsWith) {
    this.modelNotStartsWith = modelNotStartsWith;
  }

  public void setModelNotStartsWith(String modelNotStartsWith) {
    this.modelNotStartsWith = JsonNullable.<String>of(modelNotStartsWith);
  }


  public NicWhereInput modelStartsWith(String modelStartsWith) {
    this.modelStartsWith = JsonNullable.<String>of(modelStartsWith);
    return this;
  }

   /**
   * Get modelStartsWith
   * @return modelStartsWith
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getModelStartsWith() {
        return modelStartsWith.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_MODEL_STARTS_WITH)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getModelStartsWith_JsonNullable() {
    return modelStartsWith;
  }
  
  @JsonProperty(JSON_PROPERTY_MODEL_STARTS_WITH)
  public void setModelStartsWith_JsonNullable(JsonNullable<String> modelStartsWith) {
    this.modelStartsWith = modelStartsWith;
  }

  public void setModelStartsWith(String modelStartsWith) {
    this.modelStartsWith = JsonNullable.<String>of(modelStartsWith);
  }


  public NicWhereInput mtu(Double mtu) {
    this.mtu = JsonNullable.<Double>of(mtu);
    return this;
  }

   /**
   * Get mtu
   * @return mtu
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public Double getMtu() {
        return mtu.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_MTU)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<Double> getMtu_JsonNullable() {
    return mtu;
  }
  
  @JsonProperty(JSON_PROPERTY_MTU)
  public void setMtu_JsonNullable(JsonNullable<Double> mtu) {
    this.mtu = mtu;
  }

  public void setMtu(Double mtu) {
    this.mtu = JsonNullable.<Double>of(mtu);
  }


  public NicWhereInput mtuGt(Double mtuGt) {
    this.mtuGt = JsonNullable.<Double>of(mtuGt);
    return this;
  }

   /**
   * Get mtuGt
   * @return mtuGt
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public Double getMtuGt() {
        return mtuGt.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_MTU_GT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<Double> getMtuGt_JsonNullable() {
    return mtuGt;
  }
  
  @JsonProperty(JSON_PROPERTY_MTU_GT)
  public void setMtuGt_JsonNullable(JsonNullable<Double> mtuGt) {
    this.mtuGt = mtuGt;
  }

  public void setMtuGt(Double mtuGt) {
    this.mtuGt = JsonNullable.<Double>of(mtuGt);
  }


  public NicWhereInput mtuGte(Double mtuGte) {
    this.mtuGte = JsonNullable.<Double>of(mtuGte);
    return this;
  }

   /**
   * Get mtuGte
   * @return mtuGte
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public Double getMtuGte() {
        return mtuGte.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_MTU_GTE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<Double> getMtuGte_JsonNullable() {
    return mtuGte;
  }
  
  @JsonProperty(JSON_PROPERTY_MTU_GTE)
  public void setMtuGte_JsonNullable(JsonNullable<Double> mtuGte) {
    this.mtuGte = mtuGte;
  }

  public void setMtuGte(Double mtuGte) {
    this.mtuGte = JsonNullable.<Double>of(mtuGte);
  }


  public NicWhereInput mtuIn(List<Double> mtuIn) {
    this.mtuIn = JsonNullable.<List<Double>>of(mtuIn);
    return this;
  }

  public NicWhereInput addMtuInItem(Double mtuInItem) {
    if (this.mtuIn == null || !this.mtuIn.isPresent()) {
      this.mtuIn = JsonNullable.<List<Double>>of(new ArrayList<>());
    }
    try {
      this.mtuIn.get().add(mtuInItem);
    } catch (java.util.NoSuchElementException e) {
      // this can never happen, as we make sure above that the value is present
    }
    return this;
  }

   /**
   * Get mtuIn
   * @return mtuIn
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public List<Double> getMtuIn() {
        return mtuIn.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_MTU_IN)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<List<Double>> getMtuIn_JsonNullable() {
    return mtuIn;
  }
  
  @JsonProperty(JSON_PROPERTY_MTU_IN)
  public void setMtuIn_JsonNullable(JsonNullable<List<Double>> mtuIn) {
    this.mtuIn = mtuIn;
  }

  public void setMtuIn(List<Double> mtuIn) {
    this.mtuIn = JsonNullable.<List<Double>>of(mtuIn);
  }


  public NicWhereInput mtuLt(Double mtuLt) {
    this.mtuLt = JsonNullable.<Double>of(mtuLt);
    return this;
  }

   /**
   * Get mtuLt
   * @return mtuLt
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public Double getMtuLt() {
        return mtuLt.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_MTU_LT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<Double> getMtuLt_JsonNullable() {
    return mtuLt;
  }
  
  @JsonProperty(JSON_PROPERTY_MTU_LT)
  public void setMtuLt_JsonNullable(JsonNullable<Double> mtuLt) {
    this.mtuLt = mtuLt;
  }

  public void setMtuLt(Double mtuLt) {
    this.mtuLt = JsonNullable.<Double>of(mtuLt);
  }


  public NicWhereInput mtuLte(Double mtuLte) {
    this.mtuLte = JsonNullable.<Double>of(mtuLte);
    return this;
  }

   /**
   * Get mtuLte
   * @return mtuLte
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public Double getMtuLte() {
        return mtuLte.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_MTU_LTE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<Double> getMtuLte_JsonNullable() {
    return mtuLte;
  }
  
  @JsonProperty(JSON_PROPERTY_MTU_LTE)
  public void setMtuLte_JsonNullable(JsonNullable<Double> mtuLte) {
    this.mtuLte = mtuLte;
  }

  public void setMtuLte(Double mtuLte) {
    this.mtuLte = JsonNullable.<Double>of(mtuLte);
  }


  public NicWhereInput mtuNot(Double mtuNot) {
    this.mtuNot = JsonNullable.<Double>of(mtuNot);
    return this;
  }

   /**
   * Get mtuNot
   * @return mtuNot
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public Double getMtuNot() {
        return mtuNot.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_MTU_NOT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<Double> getMtuNot_JsonNullable() {
    return mtuNot;
  }
  
  @JsonProperty(JSON_PROPERTY_MTU_NOT)
  public void setMtuNot_JsonNullable(JsonNullable<Double> mtuNot) {
    this.mtuNot = mtuNot;
  }

  public void setMtuNot(Double mtuNot) {
    this.mtuNot = JsonNullable.<Double>of(mtuNot);
  }


  public NicWhereInput mtuNotIn(List<Double> mtuNotIn) {
    this.mtuNotIn = JsonNullable.<List<Double>>of(mtuNotIn);
    return this;
  }

  public NicWhereInput addMtuNotInItem(Double mtuNotInItem) {
    if (this.mtuNotIn == null || !this.mtuNotIn.isPresent()) {
      this.mtuNotIn = JsonNullable.<List<Double>>of(new ArrayList<>());
    }
    try {
      this.mtuNotIn.get().add(mtuNotInItem);
    } catch (java.util.NoSuchElementException e) {
      // this can never happen, as we make sure above that the value is present
    }
    return this;
  }

   /**
   * Get mtuNotIn
   * @return mtuNotIn
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public List<Double> getMtuNotIn() {
        return mtuNotIn.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_MTU_NOT_IN)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<List<Double>> getMtuNotIn_JsonNullable() {
    return mtuNotIn;
  }
  
  @JsonProperty(JSON_PROPERTY_MTU_NOT_IN)
  public void setMtuNotIn_JsonNullable(JsonNullable<List<Double>> mtuNotIn) {
    this.mtuNotIn = mtuNotIn;
  }

  public void setMtuNotIn(List<Double> mtuNotIn) {
    this.mtuNotIn = JsonNullable.<List<Double>>of(mtuNotIn);
  }


  public NicWhereInput name(String name) {
    this.name = JsonNullable.<String>of(name);
    return this;
  }

   /**
   * Get name
   * @return name
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getName() {
        return name.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getName_JsonNullable() {
    return name;
  }
  
  @JsonProperty(JSON_PROPERTY_NAME)
  public void setName_JsonNullable(JsonNullable<String> name) {
    this.name = name;
  }

  public void setName(String name) {
    this.name = JsonNullable.<String>of(name);
  }


  public NicWhereInput nameContains(String nameContains) {
    this.nameContains = JsonNullable.<String>of(nameContains);
    return this;
  }

   /**
   * Get nameContains
   * @return nameContains
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getNameContains() {
        return nameContains.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_NAME_CONTAINS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getNameContains_JsonNullable() {
    return nameContains;
  }
  
  @JsonProperty(JSON_PROPERTY_NAME_CONTAINS)
  public void setNameContains_JsonNullable(JsonNullable<String> nameContains) {
    this.nameContains = nameContains;
  }

  public void setNameContains(String nameContains) {
    this.nameContains = JsonNullable.<String>of(nameContains);
  }


  public NicWhereInput nameEndsWith(String nameEndsWith) {
    this.nameEndsWith = JsonNullable.<String>of(nameEndsWith);
    return this;
  }

   /**
   * Get nameEndsWith
   * @return nameEndsWith
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getNameEndsWith() {
        return nameEndsWith.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_NAME_ENDS_WITH)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getNameEndsWith_JsonNullable() {
    return nameEndsWith;
  }
  
  @JsonProperty(JSON_PROPERTY_NAME_ENDS_WITH)
  public void setNameEndsWith_JsonNullable(JsonNullable<String> nameEndsWith) {
    this.nameEndsWith = nameEndsWith;
  }

  public void setNameEndsWith(String nameEndsWith) {
    this.nameEndsWith = JsonNullable.<String>of(nameEndsWith);
  }


  public NicWhereInput nameGt(String nameGt) {
    this.nameGt = JsonNullable.<String>of(nameGt);
    return this;
  }

   /**
   * Get nameGt
   * @return nameGt
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getNameGt() {
        return nameGt.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_NAME_GT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getNameGt_JsonNullable() {
    return nameGt;
  }
  
  @JsonProperty(JSON_PROPERTY_NAME_GT)
  public void setNameGt_JsonNullable(JsonNullable<String> nameGt) {
    this.nameGt = nameGt;
  }

  public void setNameGt(String nameGt) {
    this.nameGt = JsonNullable.<String>of(nameGt);
  }


  public NicWhereInput nameGte(String nameGte) {
    this.nameGte = JsonNullable.<String>of(nameGte);
    return this;
  }

   /**
   * Get nameGte
   * @return nameGte
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getNameGte() {
        return nameGte.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_NAME_GTE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getNameGte_JsonNullable() {
    return nameGte;
  }
  
  @JsonProperty(JSON_PROPERTY_NAME_GTE)
  public void setNameGte_JsonNullable(JsonNullable<String> nameGte) {
    this.nameGte = nameGte;
  }

  public void setNameGte(String nameGte) {
    this.nameGte = JsonNullable.<String>of(nameGte);
  }


  public NicWhereInput nameIn(List<String> nameIn) {
    this.nameIn = JsonNullable.<List<String>>of(nameIn);
    return this;
  }

  public NicWhereInput addNameInItem(String nameInItem) {
    if (this.nameIn == null || !this.nameIn.isPresent()) {
      this.nameIn = JsonNullable.<List<String>>of(new ArrayList<>());
    }
    try {
      this.nameIn.get().add(nameInItem);
    } catch (java.util.NoSuchElementException e) {
      // this can never happen, as we make sure above that the value is present
    }
    return this;
  }

   /**
   * Get nameIn
   * @return nameIn
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public List<String> getNameIn() {
        return nameIn.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_NAME_IN)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<List<String>> getNameIn_JsonNullable() {
    return nameIn;
  }
  
  @JsonProperty(JSON_PROPERTY_NAME_IN)
  public void setNameIn_JsonNullable(JsonNullable<List<String>> nameIn) {
    this.nameIn = nameIn;
  }

  public void setNameIn(List<String> nameIn) {
    this.nameIn = JsonNullable.<List<String>>of(nameIn);
  }


  public NicWhereInput nameLt(String nameLt) {
    this.nameLt = JsonNullable.<String>of(nameLt);
    return this;
  }

   /**
   * Get nameLt
   * @return nameLt
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getNameLt() {
        return nameLt.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_NAME_LT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getNameLt_JsonNullable() {
    return nameLt;
  }
  
  @JsonProperty(JSON_PROPERTY_NAME_LT)
  public void setNameLt_JsonNullable(JsonNullable<String> nameLt) {
    this.nameLt = nameLt;
  }

  public void setNameLt(String nameLt) {
    this.nameLt = JsonNullable.<String>of(nameLt);
  }


  public NicWhereInput nameLte(String nameLte) {
    this.nameLte = JsonNullable.<String>of(nameLte);
    return this;
  }

   /**
   * Get nameLte
   * @return nameLte
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getNameLte() {
        return nameLte.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_NAME_LTE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getNameLte_JsonNullable() {
    return nameLte;
  }
  
  @JsonProperty(JSON_PROPERTY_NAME_LTE)
  public void setNameLte_JsonNullable(JsonNullable<String> nameLte) {
    this.nameLte = nameLte;
  }

  public void setNameLte(String nameLte) {
    this.nameLte = JsonNullable.<String>of(nameLte);
  }


  public NicWhereInput nameNot(String nameNot) {
    this.nameNot = JsonNullable.<String>of(nameNot);
    return this;
  }

   /**
   * Get nameNot
   * @return nameNot
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getNameNot() {
        return nameNot.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_NAME_NOT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getNameNot_JsonNullable() {
    return nameNot;
  }
  
  @JsonProperty(JSON_PROPERTY_NAME_NOT)
  public void setNameNot_JsonNullable(JsonNullable<String> nameNot) {
    this.nameNot = nameNot;
  }

  public void setNameNot(String nameNot) {
    this.nameNot = JsonNullable.<String>of(nameNot);
  }


  public NicWhereInput nameNotContains(String nameNotContains) {
    this.nameNotContains = JsonNullable.<String>of(nameNotContains);
    return this;
  }

   /**
   * Get nameNotContains
   * @return nameNotContains
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getNameNotContains() {
        return nameNotContains.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_NAME_NOT_CONTAINS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getNameNotContains_JsonNullable() {
    return nameNotContains;
  }
  
  @JsonProperty(JSON_PROPERTY_NAME_NOT_CONTAINS)
  public void setNameNotContains_JsonNullable(JsonNullable<String> nameNotContains) {
    this.nameNotContains = nameNotContains;
  }

  public void setNameNotContains(String nameNotContains) {
    this.nameNotContains = JsonNullable.<String>of(nameNotContains);
  }


  public NicWhereInput nameNotEndsWith(String nameNotEndsWith) {
    this.nameNotEndsWith = JsonNullable.<String>of(nameNotEndsWith);
    return this;
  }

   /**
   * Get nameNotEndsWith
   * @return nameNotEndsWith
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getNameNotEndsWith() {
        return nameNotEndsWith.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_NAME_NOT_ENDS_WITH)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getNameNotEndsWith_JsonNullable() {
    return nameNotEndsWith;
  }
  
  @JsonProperty(JSON_PROPERTY_NAME_NOT_ENDS_WITH)
  public void setNameNotEndsWith_JsonNullable(JsonNullable<String> nameNotEndsWith) {
    this.nameNotEndsWith = nameNotEndsWith;
  }

  public void setNameNotEndsWith(String nameNotEndsWith) {
    this.nameNotEndsWith = JsonNullable.<String>of(nameNotEndsWith);
  }


  public NicWhereInput nameNotIn(List<String> nameNotIn) {
    this.nameNotIn = JsonNullable.<List<String>>of(nameNotIn);
    return this;
  }

  public NicWhereInput addNameNotInItem(String nameNotInItem) {
    if (this.nameNotIn == null || !this.nameNotIn.isPresent()) {
      this.nameNotIn = JsonNullable.<List<String>>of(new ArrayList<>());
    }
    try {
      this.nameNotIn.get().add(nameNotInItem);
    } catch (java.util.NoSuchElementException e) {
      // this can never happen, as we make sure above that the value is present
    }
    return this;
  }

   /**
   * Get nameNotIn
   * @return nameNotIn
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public List<String> getNameNotIn() {
        return nameNotIn.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_NAME_NOT_IN)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<List<String>> getNameNotIn_JsonNullable() {
    return nameNotIn;
  }
  
  @JsonProperty(JSON_PROPERTY_NAME_NOT_IN)
  public void setNameNotIn_JsonNullable(JsonNullable<List<String>> nameNotIn) {
    this.nameNotIn = nameNotIn;
  }

  public void setNameNotIn(List<String> nameNotIn) {
    this.nameNotIn = JsonNullable.<List<String>>of(nameNotIn);
  }


  public NicWhereInput nameNotStartsWith(String nameNotStartsWith) {
    this.nameNotStartsWith = JsonNullable.<String>of(nameNotStartsWith);
    return this;
  }

   /**
   * Get nameNotStartsWith
   * @return nameNotStartsWith
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getNameNotStartsWith() {
        return nameNotStartsWith.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_NAME_NOT_STARTS_WITH)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getNameNotStartsWith_JsonNullable() {
    return nameNotStartsWith;
  }
  
  @JsonProperty(JSON_PROPERTY_NAME_NOT_STARTS_WITH)
  public void setNameNotStartsWith_JsonNullable(JsonNullable<String> nameNotStartsWith) {
    this.nameNotStartsWith = nameNotStartsWith;
  }

  public void setNameNotStartsWith(String nameNotStartsWith) {
    this.nameNotStartsWith = JsonNullable.<String>of(nameNotStartsWith);
  }


  public NicWhereInput nameStartsWith(String nameStartsWith) {
    this.nameStartsWith = JsonNullable.<String>of(nameStartsWith);
    return this;
  }

   /**
   * Get nameStartsWith
   * @return nameStartsWith
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getNameStartsWith() {
        return nameStartsWith.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_NAME_STARTS_WITH)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getNameStartsWith_JsonNullable() {
    return nameStartsWith;
  }
  
  @JsonProperty(JSON_PROPERTY_NAME_STARTS_WITH)
  public void setNameStartsWith_JsonNullable(JsonNullable<String> nameStartsWith) {
    this.nameStartsWith = nameStartsWith;
  }

  public void setNameStartsWith(String nameStartsWith) {
    this.nameStartsWith = JsonNullable.<String>of(nameStartsWith);
  }


  public NicWhereInput nicUuid(String nicUuid) {
    this.nicUuid = JsonNullable.<String>of(nicUuid);
    return this;
  }

   /**
   * Get nicUuid
   * @return nicUuid
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getNicUuid() {
        return nicUuid.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_NIC_UUID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getNicUuid_JsonNullable() {
    return nicUuid;
  }
  
  @JsonProperty(JSON_PROPERTY_NIC_UUID)
  public void setNicUuid_JsonNullable(JsonNullable<String> nicUuid) {
    this.nicUuid = nicUuid;
  }

  public void setNicUuid(String nicUuid) {
    this.nicUuid = JsonNullable.<String>of(nicUuid);
  }


  public NicWhereInput nicUuidContains(String nicUuidContains) {
    this.nicUuidContains = JsonNullable.<String>of(nicUuidContains);
    return this;
  }

   /**
   * Get nicUuidContains
   * @return nicUuidContains
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getNicUuidContains() {
        return nicUuidContains.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_NIC_UUID_CONTAINS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getNicUuidContains_JsonNullable() {
    return nicUuidContains;
  }
  
  @JsonProperty(JSON_PROPERTY_NIC_UUID_CONTAINS)
  public void setNicUuidContains_JsonNullable(JsonNullable<String> nicUuidContains) {
    this.nicUuidContains = nicUuidContains;
  }

  public void setNicUuidContains(String nicUuidContains) {
    this.nicUuidContains = JsonNullable.<String>of(nicUuidContains);
  }


  public NicWhereInput nicUuidEndsWith(String nicUuidEndsWith) {
    this.nicUuidEndsWith = JsonNullable.<String>of(nicUuidEndsWith);
    return this;
  }

   /**
   * Get nicUuidEndsWith
   * @return nicUuidEndsWith
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getNicUuidEndsWith() {
        return nicUuidEndsWith.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_NIC_UUID_ENDS_WITH)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getNicUuidEndsWith_JsonNullable() {
    return nicUuidEndsWith;
  }
  
  @JsonProperty(JSON_PROPERTY_NIC_UUID_ENDS_WITH)
  public void setNicUuidEndsWith_JsonNullable(JsonNullable<String> nicUuidEndsWith) {
    this.nicUuidEndsWith = nicUuidEndsWith;
  }

  public void setNicUuidEndsWith(String nicUuidEndsWith) {
    this.nicUuidEndsWith = JsonNullable.<String>of(nicUuidEndsWith);
  }


  public NicWhereInput nicUuidGt(String nicUuidGt) {
    this.nicUuidGt = JsonNullable.<String>of(nicUuidGt);
    return this;
  }

   /**
   * Get nicUuidGt
   * @return nicUuidGt
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getNicUuidGt() {
        return nicUuidGt.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_NIC_UUID_GT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getNicUuidGt_JsonNullable() {
    return nicUuidGt;
  }
  
  @JsonProperty(JSON_PROPERTY_NIC_UUID_GT)
  public void setNicUuidGt_JsonNullable(JsonNullable<String> nicUuidGt) {
    this.nicUuidGt = nicUuidGt;
  }

  public void setNicUuidGt(String nicUuidGt) {
    this.nicUuidGt = JsonNullable.<String>of(nicUuidGt);
  }


  public NicWhereInput nicUuidGte(String nicUuidGte) {
    this.nicUuidGte = JsonNullable.<String>of(nicUuidGte);
    return this;
  }

   /**
   * Get nicUuidGte
   * @return nicUuidGte
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getNicUuidGte() {
        return nicUuidGte.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_NIC_UUID_GTE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getNicUuidGte_JsonNullable() {
    return nicUuidGte;
  }
  
  @JsonProperty(JSON_PROPERTY_NIC_UUID_GTE)
  public void setNicUuidGte_JsonNullable(JsonNullable<String> nicUuidGte) {
    this.nicUuidGte = nicUuidGte;
  }

  public void setNicUuidGte(String nicUuidGte) {
    this.nicUuidGte = JsonNullable.<String>of(nicUuidGte);
  }


  public NicWhereInput nicUuidIn(List<String> nicUuidIn) {
    this.nicUuidIn = JsonNullable.<List<String>>of(nicUuidIn);
    return this;
  }

  public NicWhereInput addNicUuidInItem(String nicUuidInItem) {
    if (this.nicUuidIn == null || !this.nicUuidIn.isPresent()) {
      this.nicUuidIn = JsonNullable.<List<String>>of(new ArrayList<>());
    }
    try {
      this.nicUuidIn.get().add(nicUuidInItem);
    } catch (java.util.NoSuchElementException e) {
      // this can never happen, as we make sure above that the value is present
    }
    return this;
  }

   /**
   * Get nicUuidIn
   * @return nicUuidIn
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public List<String> getNicUuidIn() {
        return nicUuidIn.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_NIC_UUID_IN)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<List<String>> getNicUuidIn_JsonNullable() {
    return nicUuidIn;
  }
  
  @JsonProperty(JSON_PROPERTY_NIC_UUID_IN)
  public void setNicUuidIn_JsonNullable(JsonNullable<List<String>> nicUuidIn) {
    this.nicUuidIn = nicUuidIn;
  }

  public void setNicUuidIn(List<String> nicUuidIn) {
    this.nicUuidIn = JsonNullable.<List<String>>of(nicUuidIn);
  }


  public NicWhereInput nicUuidLt(String nicUuidLt) {
    this.nicUuidLt = JsonNullable.<String>of(nicUuidLt);
    return this;
  }

   /**
   * Get nicUuidLt
   * @return nicUuidLt
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getNicUuidLt() {
        return nicUuidLt.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_NIC_UUID_LT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getNicUuidLt_JsonNullable() {
    return nicUuidLt;
  }
  
  @JsonProperty(JSON_PROPERTY_NIC_UUID_LT)
  public void setNicUuidLt_JsonNullable(JsonNullable<String> nicUuidLt) {
    this.nicUuidLt = nicUuidLt;
  }

  public void setNicUuidLt(String nicUuidLt) {
    this.nicUuidLt = JsonNullable.<String>of(nicUuidLt);
  }


  public NicWhereInput nicUuidLte(String nicUuidLte) {
    this.nicUuidLte = JsonNullable.<String>of(nicUuidLte);
    return this;
  }

   /**
   * Get nicUuidLte
   * @return nicUuidLte
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getNicUuidLte() {
        return nicUuidLte.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_NIC_UUID_LTE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getNicUuidLte_JsonNullable() {
    return nicUuidLte;
  }
  
  @JsonProperty(JSON_PROPERTY_NIC_UUID_LTE)
  public void setNicUuidLte_JsonNullable(JsonNullable<String> nicUuidLte) {
    this.nicUuidLte = nicUuidLte;
  }

  public void setNicUuidLte(String nicUuidLte) {
    this.nicUuidLte = JsonNullable.<String>of(nicUuidLte);
  }


  public NicWhereInput nicUuidNot(String nicUuidNot) {
    this.nicUuidNot = JsonNullable.<String>of(nicUuidNot);
    return this;
  }

   /**
   * Get nicUuidNot
   * @return nicUuidNot
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getNicUuidNot() {
        return nicUuidNot.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_NIC_UUID_NOT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getNicUuidNot_JsonNullable() {
    return nicUuidNot;
  }
  
  @JsonProperty(JSON_PROPERTY_NIC_UUID_NOT)
  public void setNicUuidNot_JsonNullable(JsonNullable<String> nicUuidNot) {
    this.nicUuidNot = nicUuidNot;
  }

  public void setNicUuidNot(String nicUuidNot) {
    this.nicUuidNot = JsonNullable.<String>of(nicUuidNot);
  }


  public NicWhereInput nicUuidNotContains(String nicUuidNotContains) {
    this.nicUuidNotContains = JsonNullable.<String>of(nicUuidNotContains);
    return this;
  }

   /**
   * Get nicUuidNotContains
   * @return nicUuidNotContains
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getNicUuidNotContains() {
        return nicUuidNotContains.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_NIC_UUID_NOT_CONTAINS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getNicUuidNotContains_JsonNullable() {
    return nicUuidNotContains;
  }
  
  @JsonProperty(JSON_PROPERTY_NIC_UUID_NOT_CONTAINS)
  public void setNicUuidNotContains_JsonNullable(JsonNullable<String> nicUuidNotContains) {
    this.nicUuidNotContains = nicUuidNotContains;
  }

  public void setNicUuidNotContains(String nicUuidNotContains) {
    this.nicUuidNotContains = JsonNullable.<String>of(nicUuidNotContains);
  }


  public NicWhereInput nicUuidNotEndsWith(String nicUuidNotEndsWith) {
    this.nicUuidNotEndsWith = JsonNullable.<String>of(nicUuidNotEndsWith);
    return this;
  }

   /**
   * Get nicUuidNotEndsWith
   * @return nicUuidNotEndsWith
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getNicUuidNotEndsWith() {
        return nicUuidNotEndsWith.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_NIC_UUID_NOT_ENDS_WITH)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getNicUuidNotEndsWith_JsonNullable() {
    return nicUuidNotEndsWith;
  }
  
  @JsonProperty(JSON_PROPERTY_NIC_UUID_NOT_ENDS_WITH)
  public void setNicUuidNotEndsWith_JsonNullable(JsonNullable<String> nicUuidNotEndsWith) {
    this.nicUuidNotEndsWith = nicUuidNotEndsWith;
  }

  public void setNicUuidNotEndsWith(String nicUuidNotEndsWith) {
    this.nicUuidNotEndsWith = JsonNullable.<String>of(nicUuidNotEndsWith);
  }


  public NicWhereInput nicUuidNotIn(List<String> nicUuidNotIn) {
    this.nicUuidNotIn = JsonNullable.<List<String>>of(nicUuidNotIn);
    return this;
  }

  public NicWhereInput addNicUuidNotInItem(String nicUuidNotInItem) {
    if (this.nicUuidNotIn == null || !this.nicUuidNotIn.isPresent()) {
      this.nicUuidNotIn = JsonNullable.<List<String>>of(new ArrayList<>());
    }
    try {
      this.nicUuidNotIn.get().add(nicUuidNotInItem);
    } catch (java.util.NoSuchElementException e) {
      // this can never happen, as we make sure above that the value is present
    }
    return this;
  }

   /**
   * Get nicUuidNotIn
   * @return nicUuidNotIn
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public List<String> getNicUuidNotIn() {
        return nicUuidNotIn.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_NIC_UUID_NOT_IN)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<List<String>> getNicUuidNotIn_JsonNullable() {
    return nicUuidNotIn;
  }
  
  @JsonProperty(JSON_PROPERTY_NIC_UUID_NOT_IN)
  public void setNicUuidNotIn_JsonNullable(JsonNullable<List<String>> nicUuidNotIn) {
    this.nicUuidNotIn = nicUuidNotIn;
  }

  public void setNicUuidNotIn(List<String> nicUuidNotIn) {
    this.nicUuidNotIn = JsonNullable.<List<String>>of(nicUuidNotIn);
  }


  public NicWhereInput nicUuidNotStartsWith(String nicUuidNotStartsWith) {
    this.nicUuidNotStartsWith = JsonNullable.<String>of(nicUuidNotStartsWith);
    return this;
  }

   /**
   * Get nicUuidNotStartsWith
   * @return nicUuidNotStartsWith
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getNicUuidNotStartsWith() {
        return nicUuidNotStartsWith.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_NIC_UUID_NOT_STARTS_WITH)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getNicUuidNotStartsWith_JsonNullable() {
    return nicUuidNotStartsWith;
  }
  
  @JsonProperty(JSON_PROPERTY_NIC_UUID_NOT_STARTS_WITH)
  public void setNicUuidNotStartsWith_JsonNullable(JsonNullable<String> nicUuidNotStartsWith) {
    this.nicUuidNotStartsWith = nicUuidNotStartsWith;
  }

  public void setNicUuidNotStartsWith(String nicUuidNotStartsWith) {
    this.nicUuidNotStartsWith = JsonNullable.<String>of(nicUuidNotStartsWith);
  }


  public NicWhereInput nicUuidStartsWith(String nicUuidStartsWith) {
    this.nicUuidStartsWith = JsonNullable.<String>of(nicUuidStartsWith);
    return this;
  }

   /**
   * Get nicUuidStartsWith
   * @return nicUuidStartsWith
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getNicUuidStartsWith() {
        return nicUuidStartsWith.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_NIC_UUID_STARTS_WITH)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getNicUuidStartsWith_JsonNullable() {
    return nicUuidStartsWith;
  }
  
  @JsonProperty(JSON_PROPERTY_NIC_UUID_STARTS_WITH)
  public void setNicUuidStartsWith_JsonNullable(JsonNullable<String> nicUuidStartsWith) {
    this.nicUuidStartsWith = nicUuidStartsWith;
  }

  public void setNicUuidStartsWith(String nicUuidStartsWith) {
    this.nicUuidStartsWith = JsonNullable.<String>of(nicUuidStartsWith);
  }


  public NicWhereInput NOT(List<NicWhereInput> NOT) {
    this.NOT = JsonNullable.<List<NicWhereInput>>of(NOT);
    return this;
  }

  public NicWhereInput addNOTItem(NicWhereInput NOTItem) {
    if (this.NOT == null || !this.NOT.isPresent()) {
      this.NOT = JsonNullable.<List<NicWhereInput>>of(new ArrayList<>());
    }
    try {
      this.NOT.get().add(NOTItem);
    } catch (java.util.NoSuchElementException e) {
      // this can never happen, as we make sure above that the value is present
    }
    return this;
  }

   /**
   * Get NOT
   * @return NOT
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public List<NicWhereInput> getNOT() {
        return NOT.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_N_O_T)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<List<NicWhereInput>> getNOT_JsonNullable() {
    return NOT;
  }
  
  @JsonProperty(JSON_PROPERTY_N_O_T)
  public void setNOT_JsonNullable(JsonNullable<List<NicWhereInput>> NOT) {
    this.NOT = NOT;
  }

  public void setNOT(List<NicWhereInput> NOT) {
    this.NOT = JsonNullable.<List<NicWhereInput>>of(NOT);
  }


  public NicWhereInput OR(List<NicWhereInput> OR) {
    this.OR = JsonNullable.<List<NicWhereInput>>of(OR);
    return this;
  }

  public NicWhereInput addORItem(NicWhereInput ORItem) {
    if (this.OR == null || !this.OR.isPresent()) {
      this.OR = JsonNullable.<List<NicWhereInput>>of(new ArrayList<>());
    }
    try {
      this.OR.get().add(ORItem);
    } catch (java.util.NoSuchElementException e) {
      // this can never happen, as we make sure above that the value is present
    }
    return this;
  }

   /**
   * Get OR
   * @return OR
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public List<NicWhereInput> getOR() {
        return OR.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_O_R)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<List<NicWhereInput>> getOR_JsonNullable() {
    return OR;
  }
  
  @JsonProperty(JSON_PROPERTY_O_R)
  public void setOR_JsonNullable(JsonNullable<List<NicWhereInput>> OR) {
    this.OR = OR;
  }

  public void setOR(List<NicWhereInput> OR) {
    this.OR = JsonNullable.<List<NicWhereInput>>of(OR);
  }


  public NicWhereInput physical(Boolean physical) {
    this.physical = JsonNullable.<Boolean>of(physical);
    return this;
  }

   /**
   * Get physical
   * @return physical
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public Boolean getPhysical() {
        return physical.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_PHYSICAL)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<Boolean> getPhysical_JsonNullable() {
    return physical;
  }
  
  @JsonProperty(JSON_PROPERTY_PHYSICAL)
  public void setPhysical_JsonNullable(JsonNullable<Boolean> physical) {
    this.physical = physical;
  }

  public void setPhysical(Boolean physical) {
    this.physical = JsonNullable.<Boolean>of(physical);
  }


  public NicWhereInput physicalNot(Boolean physicalNot) {
    this.physicalNot = JsonNullable.<Boolean>of(physicalNot);
    return this;
  }

   /**
   * Get physicalNot
   * @return physicalNot
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public Boolean getPhysicalNot() {
        return physicalNot.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_PHYSICAL_NOT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<Boolean> getPhysicalNot_JsonNullable() {
    return physicalNot;
  }
  
  @JsonProperty(JSON_PROPERTY_PHYSICAL_NOT)
  public void setPhysicalNot_JsonNullable(JsonNullable<Boolean> physicalNot) {
    this.physicalNot = physicalNot;
  }

  public void setPhysicalNot(Boolean physicalNot) {
    this.physicalNot = JsonNullable.<Boolean>of(physicalNot);
  }


  public NicWhereInput rdmaEnabled(Boolean rdmaEnabled) {
    this.rdmaEnabled = JsonNullable.<Boolean>of(rdmaEnabled);
    return this;
  }

   /**
   * Get rdmaEnabled
   * @return rdmaEnabled
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public Boolean getRdmaEnabled() {
        return rdmaEnabled.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_RDMA_ENABLED)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<Boolean> getRdmaEnabled_JsonNullable() {
    return rdmaEnabled;
  }
  
  @JsonProperty(JSON_PROPERTY_RDMA_ENABLED)
  public void setRdmaEnabled_JsonNullable(JsonNullable<Boolean> rdmaEnabled) {
    this.rdmaEnabled = rdmaEnabled;
  }

  public void setRdmaEnabled(Boolean rdmaEnabled) {
    this.rdmaEnabled = JsonNullable.<Boolean>of(rdmaEnabled);
  }


  public NicWhereInput rdmaEnabledNot(Boolean rdmaEnabledNot) {
    this.rdmaEnabledNot = JsonNullable.<Boolean>of(rdmaEnabledNot);
    return this;
  }

   /**
   * Get rdmaEnabledNot
   * @return rdmaEnabledNot
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public Boolean getRdmaEnabledNot() {
        return rdmaEnabledNot.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_RDMA_ENABLED_NOT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<Boolean> getRdmaEnabledNot_JsonNullable() {
    return rdmaEnabledNot;
  }
  
  @JsonProperty(JSON_PROPERTY_RDMA_ENABLED_NOT)
  public void setRdmaEnabledNot_JsonNullable(JsonNullable<Boolean> rdmaEnabledNot) {
    this.rdmaEnabledNot = rdmaEnabledNot;
  }

  public void setRdmaEnabledNot(Boolean rdmaEnabledNot) {
    this.rdmaEnabledNot = JsonNullable.<Boolean>of(rdmaEnabledNot);
  }


  public NicWhereInput running(Boolean running) {
    this.running = JsonNullable.<Boolean>of(running);
    return this;
  }

   /**
   * Get running
   * @return running
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public Boolean getRunning() {
        return running.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_RUNNING)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<Boolean> getRunning_JsonNullable() {
    return running;
  }
  
  @JsonProperty(JSON_PROPERTY_RUNNING)
  public void setRunning_JsonNullable(JsonNullable<Boolean> running) {
    this.running = running;
  }

  public void setRunning(Boolean running) {
    this.running = JsonNullable.<Boolean>of(running);
  }


  public NicWhereInput runningNot(Boolean runningNot) {
    this.runningNot = JsonNullable.<Boolean>of(runningNot);
    return this;
  }

   /**
   * Get runningNot
   * @return runningNot
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public Boolean getRunningNot() {
        return runningNot.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_RUNNING_NOT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<Boolean> getRunningNot_JsonNullable() {
    return runningNot;
  }
  
  @JsonProperty(JSON_PROPERTY_RUNNING_NOT)
  public void setRunningNot_JsonNullable(JsonNullable<Boolean> runningNot) {
    this.runningNot = runningNot;
  }

  public void setRunningNot(Boolean runningNot) {
    this.runningNot = JsonNullable.<Boolean>of(runningNot);
  }


  public NicWhereInput speed(Double speed) {
    this.speed = JsonNullable.<Double>of(speed);
    return this;
  }

   /**
   * Get speed
   * @return speed
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public Double getSpeed() {
        return speed.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_SPEED)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<Double> getSpeed_JsonNullable() {
    return speed;
  }
  
  @JsonProperty(JSON_PROPERTY_SPEED)
  public void setSpeed_JsonNullable(JsonNullable<Double> speed) {
    this.speed = speed;
  }

  public void setSpeed(Double speed) {
    this.speed = JsonNullable.<Double>of(speed);
  }


  public NicWhereInput speedGt(Double speedGt) {
    this.speedGt = JsonNullable.<Double>of(speedGt);
    return this;
  }

   /**
   * Get speedGt
   * @return speedGt
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public Double getSpeedGt() {
        return speedGt.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_SPEED_GT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<Double> getSpeedGt_JsonNullable() {
    return speedGt;
  }
  
  @JsonProperty(JSON_PROPERTY_SPEED_GT)
  public void setSpeedGt_JsonNullable(JsonNullable<Double> speedGt) {
    this.speedGt = speedGt;
  }

  public void setSpeedGt(Double speedGt) {
    this.speedGt = JsonNullable.<Double>of(speedGt);
  }


  public NicWhereInput speedGte(Double speedGte) {
    this.speedGte = JsonNullable.<Double>of(speedGte);
    return this;
  }

   /**
   * Get speedGte
   * @return speedGte
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public Double getSpeedGte() {
        return speedGte.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_SPEED_GTE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<Double> getSpeedGte_JsonNullable() {
    return speedGte;
  }
  
  @JsonProperty(JSON_PROPERTY_SPEED_GTE)
  public void setSpeedGte_JsonNullable(JsonNullable<Double> speedGte) {
    this.speedGte = speedGte;
  }

  public void setSpeedGte(Double speedGte) {
    this.speedGte = JsonNullable.<Double>of(speedGte);
  }


  public NicWhereInput speedIn(List<Double> speedIn) {
    this.speedIn = JsonNullable.<List<Double>>of(speedIn);
    return this;
  }

  public NicWhereInput addSpeedInItem(Double speedInItem) {
    if (this.speedIn == null || !this.speedIn.isPresent()) {
      this.speedIn = JsonNullable.<List<Double>>of(new ArrayList<>());
    }
    try {
      this.speedIn.get().add(speedInItem);
    } catch (java.util.NoSuchElementException e) {
      // this can never happen, as we make sure above that the value is present
    }
    return this;
  }

   /**
   * Get speedIn
   * @return speedIn
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public List<Double> getSpeedIn() {
        return speedIn.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_SPEED_IN)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<List<Double>> getSpeedIn_JsonNullable() {
    return speedIn;
  }
  
  @JsonProperty(JSON_PROPERTY_SPEED_IN)
  public void setSpeedIn_JsonNullable(JsonNullable<List<Double>> speedIn) {
    this.speedIn = speedIn;
  }

  public void setSpeedIn(List<Double> speedIn) {
    this.speedIn = JsonNullable.<List<Double>>of(speedIn);
  }


  public NicWhereInput speedLt(Double speedLt) {
    this.speedLt = JsonNullable.<Double>of(speedLt);
    return this;
  }

   /**
   * Get speedLt
   * @return speedLt
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public Double getSpeedLt() {
        return speedLt.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_SPEED_LT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<Double> getSpeedLt_JsonNullable() {
    return speedLt;
  }
  
  @JsonProperty(JSON_PROPERTY_SPEED_LT)
  public void setSpeedLt_JsonNullable(JsonNullable<Double> speedLt) {
    this.speedLt = speedLt;
  }

  public void setSpeedLt(Double speedLt) {
    this.speedLt = JsonNullable.<Double>of(speedLt);
  }


  public NicWhereInput speedLte(Double speedLte) {
    this.speedLte = JsonNullable.<Double>of(speedLte);
    return this;
  }

   /**
   * Get speedLte
   * @return speedLte
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public Double getSpeedLte() {
        return speedLte.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_SPEED_LTE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<Double> getSpeedLte_JsonNullable() {
    return speedLte;
  }
  
  @JsonProperty(JSON_PROPERTY_SPEED_LTE)
  public void setSpeedLte_JsonNullable(JsonNullable<Double> speedLte) {
    this.speedLte = speedLte;
  }

  public void setSpeedLte(Double speedLte) {
    this.speedLte = JsonNullable.<Double>of(speedLte);
  }


  public NicWhereInput speedNot(Double speedNot) {
    this.speedNot = JsonNullable.<Double>of(speedNot);
    return this;
  }

   /**
   * Get speedNot
   * @return speedNot
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public Double getSpeedNot() {
        return speedNot.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_SPEED_NOT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<Double> getSpeedNot_JsonNullable() {
    return speedNot;
  }
  
  @JsonProperty(JSON_PROPERTY_SPEED_NOT)
  public void setSpeedNot_JsonNullable(JsonNullable<Double> speedNot) {
    this.speedNot = speedNot;
  }

  public void setSpeedNot(Double speedNot) {
    this.speedNot = JsonNullable.<Double>of(speedNot);
  }


  public NicWhereInput speedNotIn(List<Double> speedNotIn) {
    this.speedNotIn = JsonNullable.<List<Double>>of(speedNotIn);
    return this;
  }

  public NicWhereInput addSpeedNotInItem(Double speedNotInItem) {
    if (this.speedNotIn == null || !this.speedNotIn.isPresent()) {
      this.speedNotIn = JsonNullable.<List<Double>>of(new ArrayList<>());
    }
    try {
      this.speedNotIn.get().add(speedNotInItem);
    } catch (java.util.NoSuchElementException e) {
      // this can never happen, as we make sure above that the value is present
    }
    return this;
  }

   /**
   * Get speedNotIn
   * @return speedNotIn
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public List<Double> getSpeedNotIn() {
        return speedNotIn.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_SPEED_NOT_IN)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<List<Double>> getSpeedNotIn_JsonNullable() {
    return speedNotIn;
  }
  
  @JsonProperty(JSON_PROPERTY_SPEED_NOT_IN)
  public void setSpeedNotIn_JsonNullable(JsonNullable<List<Double>> speedNotIn) {
    this.speedNotIn = speedNotIn;
  }

  public void setSpeedNotIn(List<Double> speedNotIn) {
    this.speedNotIn = JsonNullable.<List<Double>>of(speedNotIn);
  }


  public NicWhereInput subnetMask(String subnetMask) {
    this.subnetMask = JsonNullable.<String>of(subnetMask);
    return this;
  }

   /**
   * Get subnetMask
   * @return subnetMask
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getSubnetMask() {
        return subnetMask.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_SUBNET_MASK)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getSubnetMask_JsonNullable() {
    return subnetMask;
  }
  
  @JsonProperty(JSON_PROPERTY_SUBNET_MASK)
  public void setSubnetMask_JsonNullable(JsonNullable<String> subnetMask) {
    this.subnetMask = subnetMask;
  }

  public void setSubnetMask(String subnetMask) {
    this.subnetMask = JsonNullable.<String>of(subnetMask);
  }


  public NicWhereInput subnetMaskContains(String subnetMaskContains) {
    this.subnetMaskContains = JsonNullable.<String>of(subnetMaskContains);
    return this;
  }

   /**
   * Get subnetMaskContains
   * @return subnetMaskContains
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getSubnetMaskContains() {
        return subnetMaskContains.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_SUBNET_MASK_CONTAINS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getSubnetMaskContains_JsonNullable() {
    return subnetMaskContains;
  }
  
  @JsonProperty(JSON_PROPERTY_SUBNET_MASK_CONTAINS)
  public void setSubnetMaskContains_JsonNullable(JsonNullable<String> subnetMaskContains) {
    this.subnetMaskContains = subnetMaskContains;
  }

  public void setSubnetMaskContains(String subnetMaskContains) {
    this.subnetMaskContains = JsonNullable.<String>of(subnetMaskContains);
  }


  public NicWhereInput subnetMaskEndsWith(String subnetMaskEndsWith) {
    this.subnetMaskEndsWith = JsonNullable.<String>of(subnetMaskEndsWith);
    return this;
  }

   /**
   * Get subnetMaskEndsWith
   * @return subnetMaskEndsWith
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getSubnetMaskEndsWith() {
        return subnetMaskEndsWith.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_SUBNET_MASK_ENDS_WITH)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getSubnetMaskEndsWith_JsonNullable() {
    return subnetMaskEndsWith;
  }
  
  @JsonProperty(JSON_PROPERTY_SUBNET_MASK_ENDS_WITH)
  public void setSubnetMaskEndsWith_JsonNullable(JsonNullable<String> subnetMaskEndsWith) {
    this.subnetMaskEndsWith = subnetMaskEndsWith;
  }

  public void setSubnetMaskEndsWith(String subnetMaskEndsWith) {
    this.subnetMaskEndsWith = JsonNullable.<String>of(subnetMaskEndsWith);
  }


  public NicWhereInput subnetMaskGt(String subnetMaskGt) {
    this.subnetMaskGt = JsonNullable.<String>of(subnetMaskGt);
    return this;
  }

   /**
   * Get subnetMaskGt
   * @return subnetMaskGt
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getSubnetMaskGt() {
        return subnetMaskGt.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_SUBNET_MASK_GT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getSubnetMaskGt_JsonNullable() {
    return subnetMaskGt;
  }
  
  @JsonProperty(JSON_PROPERTY_SUBNET_MASK_GT)
  public void setSubnetMaskGt_JsonNullable(JsonNullable<String> subnetMaskGt) {
    this.subnetMaskGt = subnetMaskGt;
  }

  public void setSubnetMaskGt(String subnetMaskGt) {
    this.subnetMaskGt = JsonNullable.<String>of(subnetMaskGt);
  }


  public NicWhereInput subnetMaskGte(String subnetMaskGte) {
    this.subnetMaskGte = JsonNullable.<String>of(subnetMaskGte);
    return this;
  }

   /**
   * Get subnetMaskGte
   * @return subnetMaskGte
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getSubnetMaskGte() {
        return subnetMaskGte.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_SUBNET_MASK_GTE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getSubnetMaskGte_JsonNullable() {
    return subnetMaskGte;
  }
  
  @JsonProperty(JSON_PROPERTY_SUBNET_MASK_GTE)
  public void setSubnetMaskGte_JsonNullable(JsonNullable<String> subnetMaskGte) {
    this.subnetMaskGte = subnetMaskGte;
  }

  public void setSubnetMaskGte(String subnetMaskGte) {
    this.subnetMaskGte = JsonNullable.<String>of(subnetMaskGte);
  }


  public NicWhereInput subnetMaskIn(List<String> subnetMaskIn) {
    this.subnetMaskIn = JsonNullable.<List<String>>of(subnetMaskIn);
    return this;
  }

  public NicWhereInput addSubnetMaskInItem(String subnetMaskInItem) {
    if (this.subnetMaskIn == null || !this.subnetMaskIn.isPresent()) {
      this.subnetMaskIn = JsonNullable.<List<String>>of(new ArrayList<>());
    }
    try {
      this.subnetMaskIn.get().add(subnetMaskInItem);
    } catch (java.util.NoSuchElementException e) {
      // this can never happen, as we make sure above that the value is present
    }
    return this;
  }

   /**
   * Get subnetMaskIn
   * @return subnetMaskIn
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public List<String> getSubnetMaskIn() {
        return subnetMaskIn.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_SUBNET_MASK_IN)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<List<String>> getSubnetMaskIn_JsonNullable() {
    return subnetMaskIn;
  }
  
  @JsonProperty(JSON_PROPERTY_SUBNET_MASK_IN)
  public void setSubnetMaskIn_JsonNullable(JsonNullable<List<String>> subnetMaskIn) {
    this.subnetMaskIn = subnetMaskIn;
  }

  public void setSubnetMaskIn(List<String> subnetMaskIn) {
    this.subnetMaskIn = JsonNullable.<List<String>>of(subnetMaskIn);
  }


  public NicWhereInput subnetMaskLt(String subnetMaskLt) {
    this.subnetMaskLt = JsonNullable.<String>of(subnetMaskLt);
    return this;
  }

   /**
   * Get subnetMaskLt
   * @return subnetMaskLt
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getSubnetMaskLt() {
        return subnetMaskLt.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_SUBNET_MASK_LT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getSubnetMaskLt_JsonNullable() {
    return subnetMaskLt;
  }
  
  @JsonProperty(JSON_PROPERTY_SUBNET_MASK_LT)
  public void setSubnetMaskLt_JsonNullable(JsonNullable<String> subnetMaskLt) {
    this.subnetMaskLt = subnetMaskLt;
  }

  public void setSubnetMaskLt(String subnetMaskLt) {
    this.subnetMaskLt = JsonNullable.<String>of(subnetMaskLt);
  }


  public NicWhereInput subnetMaskLte(String subnetMaskLte) {
    this.subnetMaskLte = JsonNullable.<String>of(subnetMaskLte);
    return this;
  }

   /**
   * Get subnetMaskLte
   * @return subnetMaskLte
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getSubnetMaskLte() {
        return subnetMaskLte.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_SUBNET_MASK_LTE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getSubnetMaskLte_JsonNullable() {
    return subnetMaskLte;
  }
  
  @JsonProperty(JSON_PROPERTY_SUBNET_MASK_LTE)
  public void setSubnetMaskLte_JsonNullable(JsonNullable<String> subnetMaskLte) {
    this.subnetMaskLte = subnetMaskLte;
  }

  public void setSubnetMaskLte(String subnetMaskLte) {
    this.subnetMaskLte = JsonNullable.<String>of(subnetMaskLte);
  }


  public NicWhereInput subnetMaskNot(String subnetMaskNot) {
    this.subnetMaskNot = JsonNullable.<String>of(subnetMaskNot);
    return this;
  }

   /**
   * Get subnetMaskNot
   * @return subnetMaskNot
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getSubnetMaskNot() {
        return subnetMaskNot.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_SUBNET_MASK_NOT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getSubnetMaskNot_JsonNullable() {
    return subnetMaskNot;
  }
  
  @JsonProperty(JSON_PROPERTY_SUBNET_MASK_NOT)
  public void setSubnetMaskNot_JsonNullable(JsonNullable<String> subnetMaskNot) {
    this.subnetMaskNot = subnetMaskNot;
  }

  public void setSubnetMaskNot(String subnetMaskNot) {
    this.subnetMaskNot = JsonNullable.<String>of(subnetMaskNot);
  }


  public NicWhereInput subnetMaskNotContains(String subnetMaskNotContains) {
    this.subnetMaskNotContains = JsonNullable.<String>of(subnetMaskNotContains);
    return this;
  }

   /**
   * Get subnetMaskNotContains
   * @return subnetMaskNotContains
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getSubnetMaskNotContains() {
        return subnetMaskNotContains.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_SUBNET_MASK_NOT_CONTAINS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getSubnetMaskNotContains_JsonNullable() {
    return subnetMaskNotContains;
  }
  
  @JsonProperty(JSON_PROPERTY_SUBNET_MASK_NOT_CONTAINS)
  public void setSubnetMaskNotContains_JsonNullable(JsonNullable<String> subnetMaskNotContains) {
    this.subnetMaskNotContains = subnetMaskNotContains;
  }

  public void setSubnetMaskNotContains(String subnetMaskNotContains) {
    this.subnetMaskNotContains = JsonNullable.<String>of(subnetMaskNotContains);
  }


  public NicWhereInput subnetMaskNotEndsWith(String subnetMaskNotEndsWith) {
    this.subnetMaskNotEndsWith = JsonNullable.<String>of(subnetMaskNotEndsWith);
    return this;
  }

   /**
   * Get subnetMaskNotEndsWith
   * @return subnetMaskNotEndsWith
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getSubnetMaskNotEndsWith() {
        return subnetMaskNotEndsWith.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_SUBNET_MASK_NOT_ENDS_WITH)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getSubnetMaskNotEndsWith_JsonNullable() {
    return subnetMaskNotEndsWith;
  }
  
  @JsonProperty(JSON_PROPERTY_SUBNET_MASK_NOT_ENDS_WITH)
  public void setSubnetMaskNotEndsWith_JsonNullable(JsonNullable<String> subnetMaskNotEndsWith) {
    this.subnetMaskNotEndsWith = subnetMaskNotEndsWith;
  }

  public void setSubnetMaskNotEndsWith(String subnetMaskNotEndsWith) {
    this.subnetMaskNotEndsWith = JsonNullable.<String>of(subnetMaskNotEndsWith);
  }


  public NicWhereInput subnetMaskNotIn(List<String> subnetMaskNotIn) {
    this.subnetMaskNotIn = JsonNullable.<List<String>>of(subnetMaskNotIn);
    return this;
  }

  public NicWhereInput addSubnetMaskNotInItem(String subnetMaskNotInItem) {
    if (this.subnetMaskNotIn == null || !this.subnetMaskNotIn.isPresent()) {
      this.subnetMaskNotIn = JsonNullable.<List<String>>of(new ArrayList<>());
    }
    try {
      this.subnetMaskNotIn.get().add(subnetMaskNotInItem);
    } catch (java.util.NoSuchElementException e) {
      // this can never happen, as we make sure above that the value is present
    }
    return this;
  }

   /**
   * Get subnetMaskNotIn
   * @return subnetMaskNotIn
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public List<String> getSubnetMaskNotIn() {
        return subnetMaskNotIn.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_SUBNET_MASK_NOT_IN)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<List<String>> getSubnetMaskNotIn_JsonNullable() {
    return subnetMaskNotIn;
  }
  
  @JsonProperty(JSON_PROPERTY_SUBNET_MASK_NOT_IN)
  public void setSubnetMaskNotIn_JsonNullable(JsonNullable<List<String>> subnetMaskNotIn) {
    this.subnetMaskNotIn = subnetMaskNotIn;
  }

  public void setSubnetMaskNotIn(List<String> subnetMaskNotIn) {
    this.subnetMaskNotIn = JsonNullable.<List<String>>of(subnetMaskNotIn);
  }


  public NicWhereInput subnetMaskNotStartsWith(String subnetMaskNotStartsWith) {
    this.subnetMaskNotStartsWith = JsonNullable.<String>of(subnetMaskNotStartsWith);
    return this;
  }

   /**
   * Get subnetMaskNotStartsWith
   * @return subnetMaskNotStartsWith
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getSubnetMaskNotStartsWith() {
        return subnetMaskNotStartsWith.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_SUBNET_MASK_NOT_STARTS_WITH)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getSubnetMaskNotStartsWith_JsonNullable() {
    return subnetMaskNotStartsWith;
  }
  
  @JsonProperty(JSON_PROPERTY_SUBNET_MASK_NOT_STARTS_WITH)
  public void setSubnetMaskNotStartsWith_JsonNullable(JsonNullable<String> subnetMaskNotStartsWith) {
    this.subnetMaskNotStartsWith = subnetMaskNotStartsWith;
  }

  public void setSubnetMaskNotStartsWith(String subnetMaskNotStartsWith) {
    this.subnetMaskNotStartsWith = JsonNullable.<String>of(subnetMaskNotStartsWith);
  }


  public NicWhereInput subnetMaskStartsWith(String subnetMaskStartsWith) {
    this.subnetMaskStartsWith = JsonNullable.<String>of(subnetMaskStartsWith);
    return this;
  }

   /**
   * Get subnetMaskStartsWith
   * @return subnetMaskStartsWith
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getSubnetMaskStartsWith() {
        return subnetMaskStartsWith.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_SUBNET_MASK_STARTS_WITH)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getSubnetMaskStartsWith_JsonNullable() {
    return subnetMaskStartsWith;
  }
  
  @JsonProperty(JSON_PROPERTY_SUBNET_MASK_STARTS_WITH)
  public void setSubnetMaskStartsWith_JsonNullable(JsonNullable<String> subnetMaskStartsWith) {
    this.subnetMaskStartsWith = subnetMaskStartsWith;
  }

  public void setSubnetMaskStartsWith(String subnetMaskStartsWith) {
    this.subnetMaskStartsWith = JsonNullable.<String>of(subnetMaskStartsWith);
  }


  public NicWhereInput totalVfNum(Double totalVfNum) {
    this.totalVfNum = JsonNullable.<Double>of(totalVfNum);
    return this;
  }

   /**
   * Get totalVfNum
   * @return totalVfNum
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public Double getTotalVfNum() {
        return totalVfNum.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_TOTAL_VF_NUM)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<Double> getTotalVfNum_JsonNullable() {
    return totalVfNum;
  }
  
  @JsonProperty(JSON_PROPERTY_TOTAL_VF_NUM)
  public void setTotalVfNum_JsonNullable(JsonNullable<Double> totalVfNum) {
    this.totalVfNum = totalVfNum;
  }

  public void setTotalVfNum(Double totalVfNum) {
    this.totalVfNum = JsonNullable.<Double>of(totalVfNum);
  }


  public NicWhereInput totalVfNumGt(Double totalVfNumGt) {
    this.totalVfNumGt = JsonNullable.<Double>of(totalVfNumGt);
    return this;
  }

   /**
   * Get totalVfNumGt
   * @return totalVfNumGt
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public Double getTotalVfNumGt() {
        return totalVfNumGt.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_TOTAL_VF_NUM_GT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<Double> getTotalVfNumGt_JsonNullable() {
    return totalVfNumGt;
  }
  
  @JsonProperty(JSON_PROPERTY_TOTAL_VF_NUM_GT)
  public void setTotalVfNumGt_JsonNullable(JsonNullable<Double> totalVfNumGt) {
    this.totalVfNumGt = totalVfNumGt;
  }

  public void setTotalVfNumGt(Double totalVfNumGt) {
    this.totalVfNumGt = JsonNullable.<Double>of(totalVfNumGt);
  }


  public NicWhereInput totalVfNumGte(Double totalVfNumGte) {
    this.totalVfNumGte = JsonNullable.<Double>of(totalVfNumGte);
    return this;
  }

   /**
   * Get totalVfNumGte
   * @return totalVfNumGte
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public Double getTotalVfNumGte() {
        return totalVfNumGte.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_TOTAL_VF_NUM_GTE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<Double> getTotalVfNumGte_JsonNullable() {
    return totalVfNumGte;
  }
  
  @JsonProperty(JSON_PROPERTY_TOTAL_VF_NUM_GTE)
  public void setTotalVfNumGte_JsonNullable(JsonNullable<Double> totalVfNumGte) {
    this.totalVfNumGte = totalVfNumGte;
  }

  public void setTotalVfNumGte(Double totalVfNumGte) {
    this.totalVfNumGte = JsonNullable.<Double>of(totalVfNumGte);
  }


  public NicWhereInput totalVfNumIn(List<Double> totalVfNumIn) {
    this.totalVfNumIn = JsonNullable.<List<Double>>of(totalVfNumIn);
    return this;
  }

  public NicWhereInput addTotalVfNumInItem(Double totalVfNumInItem) {
    if (this.totalVfNumIn == null || !this.totalVfNumIn.isPresent()) {
      this.totalVfNumIn = JsonNullable.<List<Double>>of(new ArrayList<>());
    }
    try {
      this.totalVfNumIn.get().add(totalVfNumInItem);
    } catch (java.util.NoSuchElementException e) {
      // this can never happen, as we make sure above that the value is present
    }
    return this;
  }

   /**
   * Get totalVfNumIn
   * @return totalVfNumIn
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public List<Double> getTotalVfNumIn() {
        return totalVfNumIn.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_TOTAL_VF_NUM_IN)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<List<Double>> getTotalVfNumIn_JsonNullable() {
    return totalVfNumIn;
  }
  
  @JsonProperty(JSON_PROPERTY_TOTAL_VF_NUM_IN)
  public void setTotalVfNumIn_JsonNullable(JsonNullable<List<Double>> totalVfNumIn) {
    this.totalVfNumIn = totalVfNumIn;
  }

  public void setTotalVfNumIn(List<Double> totalVfNumIn) {
    this.totalVfNumIn = JsonNullable.<List<Double>>of(totalVfNumIn);
  }


  public NicWhereInput totalVfNumLt(Double totalVfNumLt) {
    this.totalVfNumLt = JsonNullable.<Double>of(totalVfNumLt);
    return this;
  }

   /**
   * Get totalVfNumLt
   * @return totalVfNumLt
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public Double getTotalVfNumLt() {
        return totalVfNumLt.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_TOTAL_VF_NUM_LT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<Double> getTotalVfNumLt_JsonNullable() {
    return totalVfNumLt;
  }
  
  @JsonProperty(JSON_PROPERTY_TOTAL_VF_NUM_LT)
  public void setTotalVfNumLt_JsonNullable(JsonNullable<Double> totalVfNumLt) {
    this.totalVfNumLt = totalVfNumLt;
  }

  public void setTotalVfNumLt(Double totalVfNumLt) {
    this.totalVfNumLt = JsonNullable.<Double>of(totalVfNumLt);
  }


  public NicWhereInput totalVfNumLte(Double totalVfNumLte) {
    this.totalVfNumLte = JsonNullable.<Double>of(totalVfNumLte);
    return this;
  }

   /**
   * Get totalVfNumLte
   * @return totalVfNumLte
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public Double getTotalVfNumLte() {
        return totalVfNumLte.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_TOTAL_VF_NUM_LTE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<Double> getTotalVfNumLte_JsonNullable() {
    return totalVfNumLte;
  }
  
  @JsonProperty(JSON_PROPERTY_TOTAL_VF_NUM_LTE)
  public void setTotalVfNumLte_JsonNullable(JsonNullable<Double> totalVfNumLte) {
    this.totalVfNumLte = totalVfNumLte;
  }

  public void setTotalVfNumLte(Double totalVfNumLte) {
    this.totalVfNumLte = JsonNullable.<Double>of(totalVfNumLte);
  }


  public NicWhereInput totalVfNumNot(Double totalVfNumNot) {
    this.totalVfNumNot = JsonNullable.<Double>of(totalVfNumNot);
    return this;
  }

   /**
   * Get totalVfNumNot
   * @return totalVfNumNot
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public Double getTotalVfNumNot() {
        return totalVfNumNot.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_TOTAL_VF_NUM_NOT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<Double> getTotalVfNumNot_JsonNullable() {
    return totalVfNumNot;
  }
  
  @JsonProperty(JSON_PROPERTY_TOTAL_VF_NUM_NOT)
  public void setTotalVfNumNot_JsonNullable(JsonNullable<Double> totalVfNumNot) {
    this.totalVfNumNot = totalVfNumNot;
  }

  public void setTotalVfNumNot(Double totalVfNumNot) {
    this.totalVfNumNot = JsonNullable.<Double>of(totalVfNumNot);
  }


  public NicWhereInput totalVfNumNotIn(List<Double> totalVfNumNotIn) {
    this.totalVfNumNotIn = JsonNullable.<List<Double>>of(totalVfNumNotIn);
    return this;
  }

  public NicWhereInput addTotalVfNumNotInItem(Double totalVfNumNotInItem) {
    if (this.totalVfNumNotIn == null || !this.totalVfNumNotIn.isPresent()) {
      this.totalVfNumNotIn = JsonNullable.<List<Double>>of(new ArrayList<>());
    }
    try {
      this.totalVfNumNotIn.get().add(totalVfNumNotInItem);
    } catch (java.util.NoSuchElementException e) {
      // this can never happen, as we make sure above that the value is present
    }
    return this;
  }

   /**
   * Get totalVfNumNotIn
   * @return totalVfNumNotIn
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public List<Double> getTotalVfNumNotIn() {
        return totalVfNumNotIn.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_TOTAL_VF_NUM_NOT_IN)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<List<Double>> getTotalVfNumNotIn_JsonNullable() {
    return totalVfNumNotIn;
  }
  
  @JsonProperty(JSON_PROPERTY_TOTAL_VF_NUM_NOT_IN)
  public void setTotalVfNumNotIn_JsonNullable(JsonNullable<List<Double>> totalVfNumNotIn) {
    this.totalVfNumNotIn = totalVfNumNotIn;
  }

  public void setTotalVfNumNotIn(List<Double> totalVfNumNotIn) {
    this.totalVfNumNotIn = JsonNullable.<List<Double>>of(totalVfNumNotIn);
  }


  public NicWhereInput type(NetworkType type) {
    this.type = JsonNullable.<NetworkType>of(type);
    return this;
  }

   /**
   * Get type
   * @return type
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public NetworkType getType() {
        return type.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_TYPE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<NetworkType> getType_JsonNullable() {
    return type;
  }
  
  @JsonProperty(JSON_PROPERTY_TYPE)
  public void setType_JsonNullable(JsonNullable<NetworkType> type) {
    this.type = type;
  }

  public void setType(NetworkType type) {
    this.type = JsonNullable.<NetworkType>of(type);
  }


  public NicWhereInput typeIn(List<NetworkType> typeIn) {
    this.typeIn = JsonNullable.<List<NetworkType>>of(typeIn);
    return this;
  }

  public NicWhereInput addTypeInItem(NetworkType typeInItem) {
    if (this.typeIn == null || !this.typeIn.isPresent()) {
      this.typeIn = JsonNullable.<List<NetworkType>>of(new ArrayList<>());
    }
    try {
      this.typeIn.get().add(typeInItem);
    } catch (java.util.NoSuchElementException e) {
      // this can never happen, as we make sure above that the value is present
    }
    return this;
  }

   /**
   * Get typeIn
   * @return typeIn
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public List<NetworkType> getTypeIn() {
        return typeIn.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_TYPE_IN)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<List<NetworkType>> getTypeIn_JsonNullable() {
    return typeIn;
  }
  
  @JsonProperty(JSON_PROPERTY_TYPE_IN)
  public void setTypeIn_JsonNullable(JsonNullable<List<NetworkType>> typeIn) {
    this.typeIn = typeIn;
  }

  public void setTypeIn(List<NetworkType> typeIn) {
    this.typeIn = JsonNullable.<List<NetworkType>>of(typeIn);
  }


  public NicWhereInput typeNot(NetworkType typeNot) {
    this.typeNot = JsonNullable.<NetworkType>of(typeNot);
    return this;
  }

   /**
   * Get typeNot
   * @return typeNot
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public NetworkType getTypeNot() {
        return typeNot.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_TYPE_NOT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<NetworkType> getTypeNot_JsonNullable() {
    return typeNot;
  }
  
  @JsonProperty(JSON_PROPERTY_TYPE_NOT)
  public void setTypeNot_JsonNullable(JsonNullable<NetworkType> typeNot) {
    this.typeNot = typeNot;
  }

  public void setTypeNot(NetworkType typeNot) {
    this.typeNot = JsonNullable.<NetworkType>of(typeNot);
  }


  public NicWhereInput typeNotIn(List<NetworkType> typeNotIn) {
    this.typeNotIn = JsonNullable.<List<NetworkType>>of(typeNotIn);
    return this;
  }

  public NicWhereInput addTypeNotInItem(NetworkType typeNotInItem) {
    if (this.typeNotIn == null || !this.typeNotIn.isPresent()) {
      this.typeNotIn = JsonNullable.<List<NetworkType>>of(new ArrayList<>());
    }
    try {
      this.typeNotIn.get().add(typeNotInItem);
    } catch (java.util.NoSuchElementException e) {
      // this can never happen, as we make sure above that the value is present
    }
    return this;
  }

   /**
   * Get typeNotIn
   * @return typeNotIn
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public List<NetworkType> getTypeNotIn() {
        return typeNotIn.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_TYPE_NOT_IN)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<List<NetworkType>> getTypeNotIn_JsonNullable() {
    return typeNotIn;
  }
  
  @JsonProperty(JSON_PROPERTY_TYPE_NOT_IN)
  public void setTypeNotIn_JsonNullable(JsonNullable<List<NetworkType>> typeNotIn) {
    this.typeNotIn = typeNotIn;
  }

  public void setTypeNotIn(List<NetworkType> typeNotIn) {
    this.typeNotIn = JsonNullable.<List<NetworkType>>of(typeNotIn);
  }


  public NicWhereInput up(Boolean up) {
    this.up = JsonNullable.<Boolean>of(up);
    return this;
  }

   /**
   * Get up
   * @return up
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public Boolean getUp() {
        return up.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_UP)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<Boolean> getUp_JsonNullable() {
    return up;
  }
  
  @JsonProperty(JSON_PROPERTY_UP)
  public void setUp_JsonNullable(JsonNullable<Boolean> up) {
    this.up = up;
  }

  public void setUp(Boolean up) {
    this.up = JsonNullable.<Boolean>of(up);
  }


  public NicWhereInput upNot(Boolean upNot) {
    this.upNot = JsonNullable.<Boolean>of(upNot);
    return this;
  }

   /**
   * Get upNot
   * @return upNot
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public Boolean getUpNot() {
        return upNot.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_UP_NOT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<Boolean> getUpNot_JsonNullable() {
    return upNot;
  }
  
  @JsonProperty(JSON_PROPERTY_UP_NOT)
  public void setUpNot_JsonNullable(JsonNullable<Boolean> upNot) {
    this.upNot = upNot;
  }

  public void setUpNot(Boolean upNot) {
    this.upNot = JsonNullable.<Boolean>of(upNot);
  }


  public NicWhereInput usedVfNum(Double usedVfNum) {
    this.usedVfNum = JsonNullable.<Double>of(usedVfNum);
    return this;
  }

   /**
   * Get usedVfNum
   * @return usedVfNum
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public Double getUsedVfNum() {
        return usedVfNum.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_USED_VF_NUM)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<Double> getUsedVfNum_JsonNullable() {
    return usedVfNum;
  }
  
  @JsonProperty(JSON_PROPERTY_USED_VF_NUM)
  public void setUsedVfNum_JsonNullable(JsonNullable<Double> usedVfNum) {
    this.usedVfNum = usedVfNum;
  }

  public void setUsedVfNum(Double usedVfNum) {
    this.usedVfNum = JsonNullable.<Double>of(usedVfNum);
  }


  public NicWhereInput usedVfNumGt(Double usedVfNumGt) {
    this.usedVfNumGt = JsonNullable.<Double>of(usedVfNumGt);
    return this;
  }

   /**
   * Get usedVfNumGt
   * @return usedVfNumGt
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public Double getUsedVfNumGt() {
        return usedVfNumGt.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_USED_VF_NUM_GT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<Double> getUsedVfNumGt_JsonNullable() {
    return usedVfNumGt;
  }
  
  @JsonProperty(JSON_PROPERTY_USED_VF_NUM_GT)
  public void setUsedVfNumGt_JsonNullable(JsonNullable<Double> usedVfNumGt) {
    this.usedVfNumGt = usedVfNumGt;
  }

  public void setUsedVfNumGt(Double usedVfNumGt) {
    this.usedVfNumGt = JsonNullable.<Double>of(usedVfNumGt);
  }


  public NicWhereInput usedVfNumGte(Double usedVfNumGte) {
    this.usedVfNumGte = JsonNullable.<Double>of(usedVfNumGte);
    return this;
  }

   /**
   * Get usedVfNumGte
   * @return usedVfNumGte
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public Double getUsedVfNumGte() {
        return usedVfNumGte.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_USED_VF_NUM_GTE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<Double> getUsedVfNumGte_JsonNullable() {
    return usedVfNumGte;
  }
  
  @JsonProperty(JSON_PROPERTY_USED_VF_NUM_GTE)
  public void setUsedVfNumGte_JsonNullable(JsonNullable<Double> usedVfNumGte) {
    this.usedVfNumGte = usedVfNumGte;
  }

  public void setUsedVfNumGte(Double usedVfNumGte) {
    this.usedVfNumGte = JsonNullable.<Double>of(usedVfNumGte);
  }


  public NicWhereInput usedVfNumIn(List<Double> usedVfNumIn) {
    this.usedVfNumIn = JsonNullable.<List<Double>>of(usedVfNumIn);
    return this;
  }

  public NicWhereInput addUsedVfNumInItem(Double usedVfNumInItem) {
    if (this.usedVfNumIn == null || !this.usedVfNumIn.isPresent()) {
      this.usedVfNumIn = JsonNullable.<List<Double>>of(new ArrayList<>());
    }
    try {
      this.usedVfNumIn.get().add(usedVfNumInItem);
    } catch (java.util.NoSuchElementException e) {
      // this can never happen, as we make sure above that the value is present
    }
    return this;
  }

   /**
   * Get usedVfNumIn
   * @return usedVfNumIn
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public List<Double> getUsedVfNumIn() {
        return usedVfNumIn.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_USED_VF_NUM_IN)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<List<Double>> getUsedVfNumIn_JsonNullable() {
    return usedVfNumIn;
  }
  
  @JsonProperty(JSON_PROPERTY_USED_VF_NUM_IN)
  public void setUsedVfNumIn_JsonNullable(JsonNullable<List<Double>> usedVfNumIn) {
    this.usedVfNumIn = usedVfNumIn;
  }

  public void setUsedVfNumIn(List<Double> usedVfNumIn) {
    this.usedVfNumIn = JsonNullable.<List<Double>>of(usedVfNumIn);
  }


  public NicWhereInput usedVfNumLt(Double usedVfNumLt) {
    this.usedVfNumLt = JsonNullable.<Double>of(usedVfNumLt);
    return this;
  }

   /**
   * Get usedVfNumLt
   * @return usedVfNumLt
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public Double getUsedVfNumLt() {
        return usedVfNumLt.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_USED_VF_NUM_LT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<Double> getUsedVfNumLt_JsonNullable() {
    return usedVfNumLt;
  }
  
  @JsonProperty(JSON_PROPERTY_USED_VF_NUM_LT)
  public void setUsedVfNumLt_JsonNullable(JsonNullable<Double> usedVfNumLt) {
    this.usedVfNumLt = usedVfNumLt;
  }

  public void setUsedVfNumLt(Double usedVfNumLt) {
    this.usedVfNumLt = JsonNullable.<Double>of(usedVfNumLt);
  }


  public NicWhereInput usedVfNumLte(Double usedVfNumLte) {
    this.usedVfNumLte = JsonNullable.<Double>of(usedVfNumLte);
    return this;
  }

   /**
   * Get usedVfNumLte
   * @return usedVfNumLte
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public Double getUsedVfNumLte() {
        return usedVfNumLte.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_USED_VF_NUM_LTE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<Double> getUsedVfNumLte_JsonNullable() {
    return usedVfNumLte;
  }
  
  @JsonProperty(JSON_PROPERTY_USED_VF_NUM_LTE)
  public void setUsedVfNumLte_JsonNullable(JsonNullable<Double> usedVfNumLte) {
    this.usedVfNumLte = usedVfNumLte;
  }

  public void setUsedVfNumLte(Double usedVfNumLte) {
    this.usedVfNumLte = JsonNullable.<Double>of(usedVfNumLte);
  }


  public NicWhereInput usedVfNumNot(Double usedVfNumNot) {
    this.usedVfNumNot = JsonNullable.<Double>of(usedVfNumNot);
    return this;
  }

   /**
   * Get usedVfNumNot
   * @return usedVfNumNot
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public Double getUsedVfNumNot() {
        return usedVfNumNot.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_USED_VF_NUM_NOT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<Double> getUsedVfNumNot_JsonNullable() {
    return usedVfNumNot;
  }
  
  @JsonProperty(JSON_PROPERTY_USED_VF_NUM_NOT)
  public void setUsedVfNumNot_JsonNullable(JsonNullable<Double> usedVfNumNot) {
    this.usedVfNumNot = usedVfNumNot;
  }

  public void setUsedVfNumNot(Double usedVfNumNot) {
    this.usedVfNumNot = JsonNullable.<Double>of(usedVfNumNot);
  }


  public NicWhereInput usedVfNumNotIn(List<Double> usedVfNumNotIn) {
    this.usedVfNumNotIn = JsonNullable.<List<Double>>of(usedVfNumNotIn);
    return this;
  }

  public NicWhereInput addUsedVfNumNotInItem(Double usedVfNumNotInItem) {
    if (this.usedVfNumNotIn == null || !this.usedVfNumNotIn.isPresent()) {
      this.usedVfNumNotIn = JsonNullable.<List<Double>>of(new ArrayList<>());
    }
    try {
      this.usedVfNumNotIn.get().add(usedVfNumNotInItem);
    } catch (java.util.NoSuchElementException e) {
      // this can never happen, as we make sure above that the value is present
    }
    return this;
  }

   /**
   * Get usedVfNumNotIn
   * @return usedVfNumNotIn
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public List<Double> getUsedVfNumNotIn() {
        return usedVfNumNotIn.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_USED_VF_NUM_NOT_IN)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<List<Double>> getUsedVfNumNotIn_JsonNullable() {
    return usedVfNumNotIn;
  }
  
  @JsonProperty(JSON_PROPERTY_USED_VF_NUM_NOT_IN)
  public void setUsedVfNumNotIn_JsonNullable(JsonNullable<List<Double>> usedVfNumNotIn) {
    this.usedVfNumNotIn = usedVfNumNotIn;
  }

  public void setUsedVfNumNotIn(List<Double> usedVfNumNotIn) {
    this.usedVfNumNotIn = JsonNullable.<List<Double>>of(usedVfNumNotIn);
  }


  public NicWhereInput vds(VdsWhereInput vds) {
    this.vds = JsonNullable.<VdsWhereInput>of(vds);
    return this;
  }

   /**
   * Get vds
   * @return vds
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public VdsWhereInput getVds() {
        return vds.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_VDS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<VdsWhereInput> getVds_JsonNullable() {
    return vds;
  }
  
  @JsonProperty(JSON_PROPERTY_VDS)
  public void setVds_JsonNullable(JsonNullable<VdsWhereInput> vds) {
    this.vds = vds;
  }

  public void setVds(VdsWhereInput vds) {
    this.vds = JsonNullable.<VdsWhereInput>of(vds);
  }


  /**
   * Return true if this NicWhereInput object is equal to o.
   */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    NicWhereInput nicWhereInput = (NicWhereInput) o;
    return equalsNullable(this.AND, nicWhereInput.AND) &&
        equalsNullable(this.driver, nicWhereInput.driver) &&
        equalsNullable(this.driverContains, nicWhereInput.driverContains) &&
        equalsNullable(this.driverEndsWith, nicWhereInput.driverEndsWith) &&
        equalsNullable(this.driverGt, nicWhereInput.driverGt) &&
        equalsNullable(this.driverGte, nicWhereInput.driverGte) &&
        equalsNullable(this.driverIn, nicWhereInput.driverIn) &&
        equalsNullable(this.driverLt, nicWhereInput.driverLt) &&
        equalsNullable(this.driverLte, nicWhereInput.driverLte) &&
        equalsNullable(this.driverNot, nicWhereInput.driverNot) &&
        equalsNullable(this.driverNotContains, nicWhereInput.driverNotContains) &&
        equalsNullable(this.driverNotEndsWith, nicWhereInput.driverNotEndsWith) &&
        equalsNullable(this.driverNotIn, nicWhereInput.driverNotIn) &&
        equalsNullable(this.driverNotStartsWith, nicWhereInput.driverNotStartsWith) &&
        equalsNullable(this.driverStartsWith, nicWhereInput.driverStartsWith) &&
        equalsNullable(this.driverState, nicWhereInput.driverState) &&
        equalsNullable(this.driverStateIn, nicWhereInput.driverStateIn) &&
        equalsNullable(this.driverStateNot, nicWhereInput.driverStateNot) &&
        equalsNullable(this.driverStateNotIn, nicWhereInput.driverStateNotIn) &&
        equalsNullable(this.gatewayIp, nicWhereInput.gatewayIp) &&
        equalsNullable(this.gatewayIpContains, nicWhereInput.gatewayIpContains) &&
        equalsNullable(this.gatewayIpEndsWith, nicWhereInput.gatewayIpEndsWith) &&
        equalsNullable(this.gatewayIpGt, nicWhereInput.gatewayIpGt) &&
        equalsNullable(this.gatewayIpGte, nicWhereInput.gatewayIpGte) &&
        equalsNullable(this.gatewayIpIn, nicWhereInput.gatewayIpIn) &&
        equalsNullable(this.gatewayIpLt, nicWhereInput.gatewayIpLt) &&
        equalsNullable(this.gatewayIpLte, nicWhereInput.gatewayIpLte) &&
        equalsNullable(this.gatewayIpNot, nicWhereInput.gatewayIpNot) &&
        equalsNullable(this.gatewayIpNotContains, nicWhereInput.gatewayIpNotContains) &&
        equalsNullable(this.gatewayIpNotEndsWith, nicWhereInput.gatewayIpNotEndsWith) &&
        equalsNullable(this.gatewayIpNotIn, nicWhereInput.gatewayIpNotIn) &&
        equalsNullable(this.gatewayIpNotStartsWith, nicWhereInput.gatewayIpNotStartsWith) &&
        equalsNullable(this.gatewayIpStartsWith, nicWhereInput.gatewayIpStartsWith) &&
        equalsNullable(this.host, nicWhereInput.host) &&
        equalsNullable(this.ibdev, nicWhereInput.ibdev) &&
        equalsNullable(this.ibdevContains, nicWhereInput.ibdevContains) &&
        equalsNullable(this.ibdevEndsWith, nicWhereInput.ibdevEndsWith) &&
        equalsNullable(this.ibdevGt, nicWhereInput.ibdevGt) &&
        equalsNullable(this.ibdevGte, nicWhereInput.ibdevGte) &&
        equalsNullable(this.ibdevIn, nicWhereInput.ibdevIn) &&
        equalsNullable(this.ibdevLt, nicWhereInput.ibdevLt) &&
        equalsNullable(this.ibdevLte, nicWhereInput.ibdevLte) &&
        equalsNullable(this.ibdevNot, nicWhereInput.ibdevNot) &&
        equalsNullable(this.ibdevNotContains, nicWhereInput.ibdevNotContains) &&
        equalsNullable(this.ibdevNotEndsWith, nicWhereInput.ibdevNotEndsWith) &&
        equalsNullable(this.ibdevNotIn, nicWhereInput.ibdevNotIn) &&
        equalsNullable(this.ibdevNotStartsWith, nicWhereInput.ibdevNotStartsWith) &&
        equalsNullable(this.ibdevStartsWith, nicWhereInput.ibdevStartsWith) &&
        equalsNullable(this.id, nicWhereInput.id) &&
        equalsNullable(this.idContains, nicWhereInput.idContains) &&
        equalsNullable(this.idEndsWith, nicWhereInput.idEndsWith) &&
        equalsNullable(this.idGt, nicWhereInput.idGt) &&
        equalsNullable(this.idGte, nicWhereInput.idGte) &&
        equalsNullable(this.idIn, nicWhereInput.idIn) &&
        equalsNullable(this.idLt, nicWhereInput.idLt) &&
        equalsNullable(this.idLte, nicWhereInput.idLte) &&
        equalsNullable(this.idNot, nicWhereInput.idNot) &&
        equalsNullable(this.idNotContains, nicWhereInput.idNotContains) &&
        equalsNullable(this.idNotEndsWith, nicWhereInput.idNotEndsWith) &&
        equalsNullable(this.idNotIn, nicWhereInput.idNotIn) &&
        equalsNullable(this.idNotStartsWith, nicWhereInput.idNotStartsWith) &&
        equalsNullable(this.idStartsWith, nicWhereInput.idStartsWith) &&
        equalsNullable(this.ipAddress, nicWhereInput.ipAddress) &&
        equalsNullable(this.ipAddressContains, nicWhereInput.ipAddressContains) &&
        equalsNullable(this.ipAddressEndsWith, nicWhereInput.ipAddressEndsWith) &&
        equalsNullable(this.ipAddressGt, nicWhereInput.ipAddressGt) &&
        equalsNullable(this.ipAddressGte, nicWhereInput.ipAddressGte) &&
        equalsNullable(this.ipAddressIn, nicWhereInput.ipAddressIn) &&
        equalsNullable(this.ipAddressLt, nicWhereInput.ipAddressLt) &&
        equalsNullable(this.ipAddressLte, nicWhereInput.ipAddressLte) &&
        equalsNullable(this.ipAddressNot, nicWhereInput.ipAddressNot) &&
        equalsNullable(this.ipAddressNotContains, nicWhereInput.ipAddressNotContains) &&
        equalsNullable(this.ipAddressNotEndsWith, nicWhereInput.ipAddressNotEndsWith) &&
        equalsNullable(this.ipAddressNotIn, nicWhereInput.ipAddressNotIn) &&
        equalsNullable(this.ipAddressNotStartsWith, nicWhereInput.ipAddressNotStartsWith) &&
        equalsNullable(this.ipAddressStartsWith, nicWhereInput.ipAddressStartsWith) &&
        equalsNullable(this.isSriov, nicWhereInput.isSriov) &&
        equalsNullable(this.isSriovNot, nicWhereInput.isSriovNot) &&
        equalsNullable(this.labelsEvery, nicWhereInput.labelsEvery) &&
        equalsNullable(this.labelsNone, nicWhereInput.labelsNone) &&
        equalsNullable(this.labelsSome, nicWhereInput.labelsSome) &&
        equalsNullable(this.localId, nicWhereInput.localId) &&
        equalsNullable(this.localIdContains, nicWhereInput.localIdContains) &&
        equalsNullable(this.localIdEndsWith, nicWhereInput.localIdEndsWith) &&
        equalsNullable(this.localIdGt, nicWhereInput.localIdGt) &&
        equalsNullable(this.localIdGte, nicWhereInput.localIdGte) &&
        equalsNullable(this.localIdIn, nicWhereInput.localIdIn) &&
        equalsNullable(this.localIdLt, nicWhereInput.localIdLt) &&
        equalsNullable(this.localIdLte, nicWhereInput.localIdLte) &&
        equalsNullable(this.localIdNot, nicWhereInput.localIdNot) &&
        equalsNullable(this.localIdNotContains, nicWhereInput.localIdNotContains) &&
        equalsNullable(this.localIdNotEndsWith, nicWhereInput.localIdNotEndsWith) &&
        equalsNullable(this.localIdNotIn, nicWhereInput.localIdNotIn) &&
        equalsNullable(this.localIdNotStartsWith, nicWhereInput.localIdNotStartsWith) &&
        equalsNullable(this.localIdStartsWith, nicWhereInput.localIdStartsWith) &&
        equalsNullable(this.macAddress, nicWhereInput.macAddress) &&
        equalsNullable(this.macAddressContains, nicWhereInput.macAddressContains) &&
        equalsNullable(this.macAddressEndsWith, nicWhereInput.macAddressEndsWith) &&
        equalsNullable(this.macAddressGt, nicWhereInput.macAddressGt) &&
        equalsNullable(this.macAddressGte, nicWhereInput.macAddressGte) &&
        equalsNullable(this.macAddressIn, nicWhereInput.macAddressIn) &&
        equalsNullable(this.macAddressLt, nicWhereInput.macAddressLt) &&
        equalsNullable(this.macAddressLte, nicWhereInput.macAddressLte) &&
        equalsNullable(this.macAddressNot, nicWhereInput.macAddressNot) &&
        equalsNullable(this.macAddressNotContains, nicWhereInput.macAddressNotContains) &&
        equalsNullable(this.macAddressNotEndsWith, nicWhereInput.macAddressNotEndsWith) &&
        equalsNullable(this.macAddressNotIn, nicWhereInput.macAddressNotIn) &&
        equalsNullable(this.macAddressNotStartsWith, nicWhereInput.macAddressNotStartsWith) &&
        equalsNullable(this.macAddressStartsWith, nicWhereInput.macAddressStartsWith) &&
        equalsNullable(this.maxVfNum, nicWhereInput.maxVfNum) &&
        equalsNullable(this.maxVfNumGt, nicWhereInput.maxVfNumGt) &&
        equalsNullable(this.maxVfNumGte, nicWhereInput.maxVfNumGte) &&
        equalsNullable(this.maxVfNumIn, nicWhereInput.maxVfNumIn) &&
        equalsNullable(this.maxVfNumLt, nicWhereInput.maxVfNumLt) &&
        equalsNullable(this.maxVfNumLte, nicWhereInput.maxVfNumLte) &&
        equalsNullable(this.maxVfNumNot, nicWhereInput.maxVfNumNot) &&
        equalsNullable(this.maxVfNumNotIn, nicWhereInput.maxVfNumNotIn) &&
        equalsNullable(this.model, nicWhereInput.model) &&
        equalsNullable(this.modelContains, nicWhereInput.modelContains) &&
        equalsNullable(this.modelEndsWith, nicWhereInput.modelEndsWith) &&
        equalsNullable(this.modelGt, nicWhereInput.modelGt) &&
        equalsNullable(this.modelGte, nicWhereInput.modelGte) &&
        equalsNullable(this.modelIn, nicWhereInput.modelIn) &&
        equalsNullable(this.modelLt, nicWhereInput.modelLt) &&
        equalsNullable(this.modelLte, nicWhereInput.modelLte) &&
        equalsNullable(this.modelNot, nicWhereInput.modelNot) &&
        equalsNullable(this.modelNotContains, nicWhereInput.modelNotContains) &&
        equalsNullable(this.modelNotEndsWith, nicWhereInput.modelNotEndsWith) &&
        equalsNullable(this.modelNotIn, nicWhereInput.modelNotIn) &&
        equalsNullable(this.modelNotStartsWith, nicWhereInput.modelNotStartsWith) &&
        equalsNullable(this.modelStartsWith, nicWhereInput.modelStartsWith) &&
        equalsNullable(this.mtu, nicWhereInput.mtu) &&
        equalsNullable(this.mtuGt, nicWhereInput.mtuGt) &&
        equalsNullable(this.mtuGte, nicWhereInput.mtuGte) &&
        equalsNullable(this.mtuIn, nicWhereInput.mtuIn) &&
        equalsNullable(this.mtuLt, nicWhereInput.mtuLt) &&
        equalsNullable(this.mtuLte, nicWhereInput.mtuLte) &&
        equalsNullable(this.mtuNot, nicWhereInput.mtuNot) &&
        equalsNullable(this.mtuNotIn, nicWhereInput.mtuNotIn) &&
        equalsNullable(this.name, nicWhereInput.name) &&
        equalsNullable(this.nameContains, nicWhereInput.nameContains) &&
        equalsNullable(this.nameEndsWith, nicWhereInput.nameEndsWith) &&
        equalsNullable(this.nameGt, nicWhereInput.nameGt) &&
        equalsNullable(this.nameGte, nicWhereInput.nameGte) &&
        equalsNullable(this.nameIn, nicWhereInput.nameIn) &&
        equalsNullable(this.nameLt, nicWhereInput.nameLt) &&
        equalsNullable(this.nameLte, nicWhereInput.nameLte) &&
        equalsNullable(this.nameNot, nicWhereInput.nameNot) &&
        equalsNullable(this.nameNotContains, nicWhereInput.nameNotContains) &&
        equalsNullable(this.nameNotEndsWith, nicWhereInput.nameNotEndsWith) &&
        equalsNullable(this.nameNotIn, nicWhereInput.nameNotIn) &&
        equalsNullable(this.nameNotStartsWith, nicWhereInput.nameNotStartsWith) &&
        equalsNullable(this.nameStartsWith, nicWhereInput.nameStartsWith) &&
        equalsNullable(this.nicUuid, nicWhereInput.nicUuid) &&
        equalsNullable(this.nicUuidContains, nicWhereInput.nicUuidContains) &&
        equalsNullable(this.nicUuidEndsWith, nicWhereInput.nicUuidEndsWith) &&
        equalsNullable(this.nicUuidGt, nicWhereInput.nicUuidGt) &&
        equalsNullable(this.nicUuidGte, nicWhereInput.nicUuidGte) &&
        equalsNullable(this.nicUuidIn, nicWhereInput.nicUuidIn) &&
        equalsNullable(this.nicUuidLt, nicWhereInput.nicUuidLt) &&
        equalsNullable(this.nicUuidLte, nicWhereInput.nicUuidLte) &&
        equalsNullable(this.nicUuidNot, nicWhereInput.nicUuidNot) &&
        equalsNullable(this.nicUuidNotContains, nicWhereInput.nicUuidNotContains) &&
        equalsNullable(this.nicUuidNotEndsWith, nicWhereInput.nicUuidNotEndsWith) &&
        equalsNullable(this.nicUuidNotIn, nicWhereInput.nicUuidNotIn) &&
        equalsNullable(this.nicUuidNotStartsWith, nicWhereInput.nicUuidNotStartsWith) &&
        equalsNullable(this.nicUuidStartsWith, nicWhereInput.nicUuidStartsWith) &&
        equalsNullable(this.NOT, nicWhereInput.NOT) &&
        equalsNullable(this.OR, nicWhereInput.OR) &&
        equalsNullable(this.physical, nicWhereInput.physical) &&
        equalsNullable(this.physicalNot, nicWhereInput.physicalNot) &&
        equalsNullable(this.rdmaEnabled, nicWhereInput.rdmaEnabled) &&
        equalsNullable(this.rdmaEnabledNot, nicWhereInput.rdmaEnabledNot) &&
        equalsNullable(this.running, nicWhereInput.running) &&
        equalsNullable(this.runningNot, nicWhereInput.runningNot) &&
        equalsNullable(this.speed, nicWhereInput.speed) &&
        equalsNullable(this.speedGt, nicWhereInput.speedGt) &&
        equalsNullable(this.speedGte, nicWhereInput.speedGte) &&
        equalsNullable(this.speedIn, nicWhereInput.speedIn) &&
        equalsNullable(this.speedLt, nicWhereInput.speedLt) &&
        equalsNullable(this.speedLte, nicWhereInput.speedLte) &&
        equalsNullable(this.speedNot, nicWhereInput.speedNot) &&
        equalsNullable(this.speedNotIn, nicWhereInput.speedNotIn) &&
        equalsNullable(this.subnetMask, nicWhereInput.subnetMask) &&
        equalsNullable(this.subnetMaskContains, nicWhereInput.subnetMaskContains) &&
        equalsNullable(this.subnetMaskEndsWith, nicWhereInput.subnetMaskEndsWith) &&
        equalsNullable(this.subnetMaskGt, nicWhereInput.subnetMaskGt) &&
        equalsNullable(this.subnetMaskGte, nicWhereInput.subnetMaskGte) &&
        equalsNullable(this.subnetMaskIn, nicWhereInput.subnetMaskIn) &&
        equalsNullable(this.subnetMaskLt, nicWhereInput.subnetMaskLt) &&
        equalsNullable(this.subnetMaskLte, nicWhereInput.subnetMaskLte) &&
        equalsNullable(this.subnetMaskNot, nicWhereInput.subnetMaskNot) &&
        equalsNullable(this.subnetMaskNotContains, nicWhereInput.subnetMaskNotContains) &&
        equalsNullable(this.subnetMaskNotEndsWith, nicWhereInput.subnetMaskNotEndsWith) &&
        equalsNullable(this.subnetMaskNotIn, nicWhereInput.subnetMaskNotIn) &&
        equalsNullable(this.subnetMaskNotStartsWith, nicWhereInput.subnetMaskNotStartsWith) &&
        equalsNullable(this.subnetMaskStartsWith, nicWhereInput.subnetMaskStartsWith) &&
        equalsNullable(this.totalVfNum, nicWhereInput.totalVfNum) &&
        equalsNullable(this.totalVfNumGt, nicWhereInput.totalVfNumGt) &&
        equalsNullable(this.totalVfNumGte, nicWhereInput.totalVfNumGte) &&
        equalsNullable(this.totalVfNumIn, nicWhereInput.totalVfNumIn) &&
        equalsNullable(this.totalVfNumLt, nicWhereInput.totalVfNumLt) &&
        equalsNullable(this.totalVfNumLte, nicWhereInput.totalVfNumLte) &&
        equalsNullable(this.totalVfNumNot, nicWhereInput.totalVfNumNot) &&
        equalsNullable(this.totalVfNumNotIn, nicWhereInput.totalVfNumNotIn) &&
        equalsNullable(this.type, nicWhereInput.type) &&
        equalsNullable(this.typeIn, nicWhereInput.typeIn) &&
        equalsNullable(this.typeNot, nicWhereInput.typeNot) &&
        equalsNullable(this.typeNotIn, nicWhereInput.typeNotIn) &&
        equalsNullable(this.up, nicWhereInput.up) &&
        equalsNullable(this.upNot, nicWhereInput.upNot) &&
        equalsNullable(this.usedVfNum, nicWhereInput.usedVfNum) &&
        equalsNullable(this.usedVfNumGt, nicWhereInput.usedVfNumGt) &&
        equalsNullable(this.usedVfNumGte, nicWhereInput.usedVfNumGte) &&
        equalsNullable(this.usedVfNumIn, nicWhereInput.usedVfNumIn) &&
        equalsNullable(this.usedVfNumLt, nicWhereInput.usedVfNumLt) &&
        equalsNullable(this.usedVfNumLte, nicWhereInput.usedVfNumLte) &&
        equalsNullable(this.usedVfNumNot, nicWhereInput.usedVfNumNot) &&
        equalsNullable(this.usedVfNumNotIn, nicWhereInput.usedVfNumNotIn) &&
        equalsNullable(this.vds, nicWhereInput.vds);
  }

  private static <T> boolean equalsNullable(JsonNullable<T> a, JsonNullable<T> b) {
    return a == b || (a != null && b != null && a.isPresent() && b.isPresent() && Objects.deepEquals(a.get(), b.get()));
  }

  @Override
  public int hashCode() {
    return Objects.hash(hashCodeNullable(AND), hashCodeNullable(driver), hashCodeNullable(driverContains), hashCodeNullable(driverEndsWith), hashCodeNullable(driverGt), hashCodeNullable(driverGte), hashCodeNullable(driverIn), hashCodeNullable(driverLt), hashCodeNullable(driverLte), hashCodeNullable(driverNot), hashCodeNullable(driverNotContains), hashCodeNullable(driverNotEndsWith), hashCodeNullable(driverNotIn), hashCodeNullable(driverNotStartsWith), hashCodeNullable(driverStartsWith), hashCodeNullable(driverState), hashCodeNullable(driverStateIn), hashCodeNullable(driverStateNot), hashCodeNullable(driverStateNotIn), hashCodeNullable(gatewayIp), hashCodeNullable(gatewayIpContains), hashCodeNullable(gatewayIpEndsWith), hashCodeNullable(gatewayIpGt), hashCodeNullable(gatewayIpGte), hashCodeNullable(gatewayIpIn), hashCodeNullable(gatewayIpLt), hashCodeNullable(gatewayIpLte), hashCodeNullable(gatewayIpNot), hashCodeNullable(gatewayIpNotContains), hashCodeNullable(gatewayIpNotEndsWith), hashCodeNullable(gatewayIpNotIn), hashCodeNullable(gatewayIpNotStartsWith), hashCodeNullable(gatewayIpStartsWith), hashCodeNullable(host), hashCodeNullable(ibdev), hashCodeNullable(ibdevContains), hashCodeNullable(ibdevEndsWith), hashCodeNullable(ibdevGt), hashCodeNullable(ibdevGte), hashCodeNullable(ibdevIn), hashCodeNullable(ibdevLt), hashCodeNullable(ibdevLte), hashCodeNullable(ibdevNot), hashCodeNullable(ibdevNotContains), hashCodeNullable(ibdevNotEndsWith), hashCodeNullable(ibdevNotIn), hashCodeNullable(ibdevNotStartsWith), hashCodeNullable(ibdevStartsWith), hashCodeNullable(id), hashCodeNullable(idContains), hashCodeNullable(idEndsWith), hashCodeNullable(idGt), hashCodeNullable(idGte), hashCodeNullable(idIn), hashCodeNullable(idLt), hashCodeNullable(idLte), hashCodeNullable(idNot), hashCodeNullable(idNotContains), hashCodeNullable(idNotEndsWith), hashCodeNullable(idNotIn), hashCodeNullable(idNotStartsWith), hashCodeNullable(idStartsWith), hashCodeNullable(ipAddress), hashCodeNullable(ipAddressContains), hashCodeNullable(ipAddressEndsWith), hashCodeNullable(ipAddressGt), hashCodeNullable(ipAddressGte), hashCodeNullable(ipAddressIn), hashCodeNullable(ipAddressLt), hashCodeNullable(ipAddressLte), hashCodeNullable(ipAddressNot), hashCodeNullable(ipAddressNotContains), hashCodeNullable(ipAddressNotEndsWith), hashCodeNullable(ipAddressNotIn), hashCodeNullable(ipAddressNotStartsWith), hashCodeNullable(ipAddressStartsWith), hashCodeNullable(isSriov), hashCodeNullable(isSriovNot), hashCodeNullable(labelsEvery), hashCodeNullable(labelsNone), hashCodeNullable(labelsSome), hashCodeNullable(localId), hashCodeNullable(localIdContains), hashCodeNullable(localIdEndsWith), hashCodeNullable(localIdGt), hashCodeNullable(localIdGte), hashCodeNullable(localIdIn), hashCodeNullable(localIdLt), hashCodeNullable(localIdLte), hashCodeNullable(localIdNot), hashCodeNullable(localIdNotContains), hashCodeNullable(localIdNotEndsWith), hashCodeNullable(localIdNotIn), hashCodeNullable(localIdNotStartsWith), hashCodeNullable(localIdStartsWith), hashCodeNullable(macAddress), hashCodeNullable(macAddressContains), hashCodeNullable(macAddressEndsWith), hashCodeNullable(macAddressGt), hashCodeNullable(macAddressGte), hashCodeNullable(macAddressIn), hashCodeNullable(macAddressLt), hashCodeNullable(macAddressLte), hashCodeNullable(macAddressNot), hashCodeNullable(macAddressNotContains), hashCodeNullable(macAddressNotEndsWith), hashCodeNullable(macAddressNotIn), hashCodeNullable(macAddressNotStartsWith), hashCodeNullable(macAddressStartsWith), hashCodeNullable(maxVfNum), hashCodeNullable(maxVfNumGt), hashCodeNullable(maxVfNumGte), hashCodeNullable(maxVfNumIn), hashCodeNullable(maxVfNumLt), hashCodeNullable(maxVfNumLte), hashCodeNullable(maxVfNumNot), hashCodeNullable(maxVfNumNotIn), hashCodeNullable(model), hashCodeNullable(modelContains), hashCodeNullable(modelEndsWith), hashCodeNullable(modelGt), hashCodeNullable(modelGte), hashCodeNullable(modelIn), hashCodeNullable(modelLt), hashCodeNullable(modelLte), hashCodeNullable(modelNot), hashCodeNullable(modelNotContains), hashCodeNullable(modelNotEndsWith), hashCodeNullable(modelNotIn), hashCodeNullable(modelNotStartsWith), hashCodeNullable(modelStartsWith), hashCodeNullable(mtu), hashCodeNullable(mtuGt), hashCodeNullable(mtuGte), hashCodeNullable(mtuIn), hashCodeNullable(mtuLt), hashCodeNullable(mtuLte), hashCodeNullable(mtuNot), hashCodeNullable(mtuNotIn), hashCodeNullable(name), hashCodeNullable(nameContains), hashCodeNullable(nameEndsWith), hashCodeNullable(nameGt), hashCodeNullable(nameGte), hashCodeNullable(nameIn), hashCodeNullable(nameLt), hashCodeNullable(nameLte), hashCodeNullable(nameNot), hashCodeNullable(nameNotContains), hashCodeNullable(nameNotEndsWith), hashCodeNullable(nameNotIn), hashCodeNullable(nameNotStartsWith), hashCodeNullable(nameStartsWith), hashCodeNullable(nicUuid), hashCodeNullable(nicUuidContains), hashCodeNullable(nicUuidEndsWith), hashCodeNullable(nicUuidGt), hashCodeNullable(nicUuidGte), hashCodeNullable(nicUuidIn), hashCodeNullable(nicUuidLt), hashCodeNullable(nicUuidLte), hashCodeNullable(nicUuidNot), hashCodeNullable(nicUuidNotContains), hashCodeNullable(nicUuidNotEndsWith), hashCodeNullable(nicUuidNotIn), hashCodeNullable(nicUuidNotStartsWith), hashCodeNullable(nicUuidStartsWith), hashCodeNullable(NOT), hashCodeNullable(OR), hashCodeNullable(physical), hashCodeNullable(physicalNot), hashCodeNullable(rdmaEnabled), hashCodeNullable(rdmaEnabledNot), hashCodeNullable(running), hashCodeNullable(runningNot), hashCodeNullable(speed), hashCodeNullable(speedGt), hashCodeNullable(speedGte), hashCodeNullable(speedIn), hashCodeNullable(speedLt), hashCodeNullable(speedLte), hashCodeNullable(speedNot), hashCodeNullable(speedNotIn), hashCodeNullable(subnetMask), hashCodeNullable(subnetMaskContains), hashCodeNullable(subnetMaskEndsWith), hashCodeNullable(subnetMaskGt), hashCodeNullable(subnetMaskGte), hashCodeNullable(subnetMaskIn), hashCodeNullable(subnetMaskLt), hashCodeNullable(subnetMaskLte), hashCodeNullable(subnetMaskNot), hashCodeNullable(subnetMaskNotContains), hashCodeNullable(subnetMaskNotEndsWith), hashCodeNullable(subnetMaskNotIn), hashCodeNullable(subnetMaskNotStartsWith), hashCodeNullable(subnetMaskStartsWith), hashCodeNullable(totalVfNum), hashCodeNullable(totalVfNumGt), hashCodeNullable(totalVfNumGte), hashCodeNullable(totalVfNumIn), hashCodeNullable(totalVfNumLt), hashCodeNullable(totalVfNumLte), hashCodeNullable(totalVfNumNot), hashCodeNullable(totalVfNumNotIn), hashCodeNullable(type), hashCodeNullable(typeIn), hashCodeNullable(typeNot), hashCodeNullable(typeNotIn), hashCodeNullable(up), hashCodeNullable(upNot), hashCodeNullable(usedVfNum), hashCodeNullable(usedVfNumGt), hashCodeNullable(usedVfNumGte), hashCodeNullable(usedVfNumIn), hashCodeNullable(usedVfNumLt), hashCodeNullable(usedVfNumLte), hashCodeNullable(usedVfNumNot), hashCodeNullable(usedVfNumNotIn), hashCodeNullable(vds));
  }

  private static <T> int hashCodeNullable(JsonNullable<T> a) {
    if (a == null) {
      return 1;
    }
    return a.isPresent() ? Arrays.deepHashCode(new Object[]{a.get()}) : 31;
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class NicWhereInput {\n");
    sb.append("    AND: ").append(toIndentedString(AND)).append("\n");
    sb.append("    driver: ").append(toIndentedString(driver)).append("\n");
    sb.append("    driverContains: ").append(toIndentedString(driverContains)).append("\n");
    sb.append("    driverEndsWith: ").append(toIndentedString(driverEndsWith)).append("\n");
    sb.append("    driverGt: ").append(toIndentedString(driverGt)).append("\n");
    sb.append("    driverGte: ").append(toIndentedString(driverGte)).append("\n");
    sb.append("    driverIn: ").append(toIndentedString(driverIn)).append("\n");
    sb.append("    driverLt: ").append(toIndentedString(driverLt)).append("\n");
    sb.append("    driverLte: ").append(toIndentedString(driverLte)).append("\n");
    sb.append("    driverNot: ").append(toIndentedString(driverNot)).append("\n");
    sb.append("    driverNotContains: ").append(toIndentedString(driverNotContains)).append("\n");
    sb.append("    driverNotEndsWith: ").append(toIndentedString(driverNotEndsWith)).append("\n");
    sb.append("    driverNotIn: ").append(toIndentedString(driverNotIn)).append("\n");
    sb.append("    driverNotStartsWith: ").append(toIndentedString(driverNotStartsWith)).append("\n");
    sb.append("    driverStartsWith: ").append(toIndentedString(driverStartsWith)).append("\n");
    sb.append("    driverState: ").append(toIndentedString(driverState)).append("\n");
    sb.append("    driverStateIn: ").append(toIndentedString(driverStateIn)).append("\n");
    sb.append("    driverStateNot: ").append(toIndentedString(driverStateNot)).append("\n");
    sb.append("    driverStateNotIn: ").append(toIndentedString(driverStateNotIn)).append("\n");
    sb.append("    gatewayIp: ").append(toIndentedString(gatewayIp)).append("\n");
    sb.append("    gatewayIpContains: ").append(toIndentedString(gatewayIpContains)).append("\n");
    sb.append("    gatewayIpEndsWith: ").append(toIndentedString(gatewayIpEndsWith)).append("\n");
    sb.append("    gatewayIpGt: ").append(toIndentedString(gatewayIpGt)).append("\n");
    sb.append("    gatewayIpGte: ").append(toIndentedString(gatewayIpGte)).append("\n");
    sb.append("    gatewayIpIn: ").append(toIndentedString(gatewayIpIn)).append("\n");
    sb.append("    gatewayIpLt: ").append(toIndentedString(gatewayIpLt)).append("\n");
    sb.append("    gatewayIpLte: ").append(toIndentedString(gatewayIpLte)).append("\n");
    sb.append("    gatewayIpNot: ").append(toIndentedString(gatewayIpNot)).append("\n");
    sb.append("    gatewayIpNotContains: ").append(toIndentedString(gatewayIpNotContains)).append("\n");
    sb.append("    gatewayIpNotEndsWith: ").append(toIndentedString(gatewayIpNotEndsWith)).append("\n");
    sb.append("    gatewayIpNotIn: ").append(toIndentedString(gatewayIpNotIn)).append("\n");
    sb.append("    gatewayIpNotStartsWith: ").append(toIndentedString(gatewayIpNotStartsWith)).append("\n");
    sb.append("    gatewayIpStartsWith: ").append(toIndentedString(gatewayIpStartsWith)).append("\n");
    sb.append("    host: ").append(toIndentedString(host)).append("\n");
    sb.append("    ibdev: ").append(toIndentedString(ibdev)).append("\n");
    sb.append("    ibdevContains: ").append(toIndentedString(ibdevContains)).append("\n");
    sb.append("    ibdevEndsWith: ").append(toIndentedString(ibdevEndsWith)).append("\n");
    sb.append("    ibdevGt: ").append(toIndentedString(ibdevGt)).append("\n");
    sb.append("    ibdevGte: ").append(toIndentedString(ibdevGte)).append("\n");
    sb.append("    ibdevIn: ").append(toIndentedString(ibdevIn)).append("\n");
    sb.append("    ibdevLt: ").append(toIndentedString(ibdevLt)).append("\n");
    sb.append("    ibdevLte: ").append(toIndentedString(ibdevLte)).append("\n");
    sb.append("    ibdevNot: ").append(toIndentedString(ibdevNot)).append("\n");
    sb.append("    ibdevNotContains: ").append(toIndentedString(ibdevNotContains)).append("\n");
    sb.append("    ibdevNotEndsWith: ").append(toIndentedString(ibdevNotEndsWith)).append("\n");
    sb.append("    ibdevNotIn: ").append(toIndentedString(ibdevNotIn)).append("\n");
    sb.append("    ibdevNotStartsWith: ").append(toIndentedString(ibdevNotStartsWith)).append("\n");
    sb.append("    ibdevStartsWith: ").append(toIndentedString(ibdevStartsWith)).append("\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    idContains: ").append(toIndentedString(idContains)).append("\n");
    sb.append("    idEndsWith: ").append(toIndentedString(idEndsWith)).append("\n");
    sb.append("    idGt: ").append(toIndentedString(idGt)).append("\n");
    sb.append("    idGte: ").append(toIndentedString(idGte)).append("\n");
    sb.append("    idIn: ").append(toIndentedString(idIn)).append("\n");
    sb.append("    idLt: ").append(toIndentedString(idLt)).append("\n");
    sb.append("    idLte: ").append(toIndentedString(idLte)).append("\n");
    sb.append("    idNot: ").append(toIndentedString(idNot)).append("\n");
    sb.append("    idNotContains: ").append(toIndentedString(idNotContains)).append("\n");
    sb.append("    idNotEndsWith: ").append(toIndentedString(idNotEndsWith)).append("\n");
    sb.append("    idNotIn: ").append(toIndentedString(idNotIn)).append("\n");
    sb.append("    idNotStartsWith: ").append(toIndentedString(idNotStartsWith)).append("\n");
    sb.append("    idStartsWith: ").append(toIndentedString(idStartsWith)).append("\n");
    sb.append("    ipAddress: ").append(toIndentedString(ipAddress)).append("\n");
    sb.append("    ipAddressContains: ").append(toIndentedString(ipAddressContains)).append("\n");
    sb.append("    ipAddressEndsWith: ").append(toIndentedString(ipAddressEndsWith)).append("\n");
    sb.append("    ipAddressGt: ").append(toIndentedString(ipAddressGt)).append("\n");
    sb.append("    ipAddressGte: ").append(toIndentedString(ipAddressGte)).append("\n");
    sb.append("    ipAddressIn: ").append(toIndentedString(ipAddressIn)).append("\n");
    sb.append("    ipAddressLt: ").append(toIndentedString(ipAddressLt)).append("\n");
    sb.append("    ipAddressLte: ").append(toIndentedString(ipAddressLte)).append("\n");
    sb.append("    ipAddressNot: ").append(toIndentedString(ipAddressNot)).append("\n");
    sb.append("    ipAddressNotContains: ").append(toIndentedString(ipAddressNotContains)).append("\n");
    sb.append("    ipAddressNotEndsWith: ").append(toIndentedString(ipAddressNotEndsWith)).append("\n");
    sb.append("    ipAddressNotIn: ").append(toIndentedString(ipAddressNotIn)).append("\n");
    sb.append("    ipAddressNotStartsWith: ").append(toIndentedString(ipAddressNotStartsWith)).append("\n");
    sb.append("    ipAddressStartsWith: ").append(toIndentedString(ipAddressStartsWith)).append("\n");
    sb.append("    isSriov: ").append(toIndentedString(isSriov)).append("\n");
    sb.append("    isSriovNot: ").append(toIndentedString(isSriovNot)).append("\n");
    sb.append("    labelsEvery: ").append(toIndentedString(labelsEvery)).append("\n");
    sb.append("    labelsNone: ").append(toIndentedString(labelsNone)).append("\n");
    sb.append("    labelsSome: ").append(toIndentedString(labelsSome)).append("\n");
    sb.append("    localId: ").append(toIndentedString(localId)).append("\n");
    sb.append("    localIdContains: ").append(toIndentedString(localIdContains)).append("\n");
    sb.append("    localIdEndsWith: ").append(toIndentedString(localIdEndsWith)).append("\n");
    sb.append("    localIdGt: ").append(toIndentedString(localIdGt)).append("\n");
    sb.append("    localIdGte: ").append(toIndentedString(localIdGte)).append("\n");
    sb.append("    localIdIn: ").append(toIndentedString(localIdIn)).append("\n");
    sb.append("    localIdLt: ").append(toIndentedString(localIdLt)).append("\n");
    sb.append("    localIdLte: ").append(toIndentedString(localIdLte)).append("\n");
    sb.append("    localIdNot: ").append(toIndentedString(localIdNot)).append("\n");
    sb.append("    localIdNotContains: ").append(toIndentedString(localIdNotContains)).append("\n");
    sb.append("    localIdNotEndsWith: ").append(toIndentedString(localIdNotEndsWith)).append("\n");
    sb.append("    localIdNotIn: ").append(toIndentedString(localIdNotIn)).append("\n");
    sb.append("    localIdNotStartsWith: ").append(toIndentedString(localIdNotStartsWith)).append("\n");
    sb.append("    localIdStartsWith: ").append(toIndentedString(localIdStartsWith)).append("\n");
    sb.append("    macAddress: ").append(toIndentedString(macAddress)).append("\n");
    sb.append("    macAddressContains: ").append(toIndentedString(macAddressContains)).append("\n");
    sb.append("    macAddressEndsWith: ").append(toIndentedString(macAddressEndsWith)).append("\n");
    sb.append("    macAddressGt: ").append(toIndentedString(macAddressGt)).append("\n");
    sb.append("    macAddressGte: ").append(toIndentedString(macAddressGte)).append("\n");
    sb.append("    macAddressIn: ").append(toIndentedString(macAddressIn)).append("\n");
    sb.append("    macAddressLt: ").append(toIndentedString(macAddressLt)).append("\n");
    sb.append("    macAddressLte: ").append(toIndentedString(macAddressLte)).append("\n");
    sb.append("    macAddressNot: ").append(toIndentedString(macAddressNot)).append("\n");
    sb.append("    macAddressNotContains: ").append(toIndentedString(macAddressNotContains)).append("\n");
    sb.append("    macAddressNotEndsWith: ").append(toIndentedString(macAddressNotEndsWith)).append("\n");
    sb.append("    macAddressNotIn: ").append(toIndentedString(macAddressNotIn)).append("\n");
    sb.append("    macAddressNotStartsWith: ").append(toIndentedString(macAddressNotStartsWith)).append("\n");
    sb.append("    macAddressStartsWith: ").append(toIndentedString(macAddressStartsWith)).append("\n");
    sb.append("    maxVfNum: ").append(toIndentedString(maxVfNum)).append("\n");
    sb.append("    maxVfNumGt: ").append(toIndentedString(maxVfNumGt)).append("\n");
    sb.append("    maxVfNumGte: ").append(toIndentedString(maxVfNumGte)).append("\n");
    sb.append("    maxVfNumIn: ").append(toIndentedString(maxVfNumIn)).append("\n");
    sb.append("    maxVfNumLt: ").append(toIndentedString(maxVfNumLt)).append("\n");
    sb.append("    maxVfNumLte: ").append(toIndentedString(maxVfNumLte)).append("\n");
    sb.append("    maxVfNumNot: ").append(toIndentedString(maxVfNumNot)).append("\n");
    sb.append("    maxVfNumNotIn: ").append(toIndentedString(maxVfNumNotIn)).append("\n");
    sb.append("    model: ").append(toIndentedString(model)).append("\n");
    sb.append("    modelContains: ").append(toIndentedString(modelContains)).append("\n");
    sb.append("    modelEndsWith: ").append(toIndentedString(modelEndsWith)).append("\n");
    sb.append("    modelGt: ").append(toIndentedString(modelGt)).append("\n");
    sb.append("    modelGte: ").append(toIndentedString(modelGte)).append("\n");
    sb.append("    modelIn: ").append(toIndentedString(modelIn)).append("\n");
    sb.append("    modelLt: ").append(toIndentedString(modelLt)).append("\n");
    sb.append("    modelLte: ").append(toIndentedString(modelLte)).append("\n");
    sb.append("    modelNot: ").append(toIndentedString(modelNot)).append("\n");
    sb.append("    modelNotContains: ").append(toIndentedString(modelNotContains)).append("\n");
    sb.append("    modelNotEndsWith: ").append(toIndentedString(modelNotEndsWith)).append("\n");
    sb.append("    modelNotIn: ").append(toIndentedString(modelNotIn)).append("\n");
    sb.append("    modelNotStartsWith: ").append(toIndentedString(modelNotStartsWith)).append("\n");
    sb.append("    modelStartsWith: ").append(toIndentedString(modelStartsWith)).append("\n");
    sb.append("    mtu: ").append(toIndentedString(mtu)).append("\n");
    sb.append("    mtuGt: ").append(toIndentedString(mtuGt)).append("\n");
    sb.append("    mtuGte: ").append(toIndentedString(mtuGte)).append("\n");
    sb.append("    mtuIn: ").append(toIndentedString(mtuIn)).append("\n");
    sb.append("    mtuLt: ").append(toIndentedString(mtuLt)).append("\n");
    sb.append("    mtuLte: ").append(toIndentedString(mtuLte)).append("\n");
    sb.append("    mtuNot: ").append(toIndentedString(mtuNot)).append("\n");
    sb.append("    mtuNotIn: ").append(toIndentedString(mtuNotIn)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    nameContains: ").append(toIndentedString(nameContains)).append("\n");
    sb.append("    nameEndsWith: ").append(toIndentedString(nameEndsWith)).append("\n");
    sb.append("    nameGt: ").append(toIndentedString(nameGt)).append("\n");
    sb.append("    nameGte: ").append(toIndentedString(nameGte)).append("\n");
    sb.append("    nameIn: ").append(toIndentedString(nameIn)).append("\n");
    sb.append("    nameLt: ").append(toIndentedString(nameLt)).append("\n");
    sb.append("    nameLte: ").append(toIndentedString(nameLte)).append("\n");
    sb.append("    nameNot: ").append(toIndentedString(nameNot)).append("\n");
    sb.append("    nameNotContains: ").append(toIndentedString(nameNotContains)).append("\n");
    sb.append("    nameNotEndsWith: ").append(toIndentedString(nameNotEndsWith)).append("\n");
    sb.append("    nameNotIn: ").append(toIndentedString(nameNotIn)).append("\n");
    sb.append("    nameNotStartsWith: ").append(toIndentedString(nameNotStartsWith)).append("\n");
    sb.append("    nameStartsWith: ").append(toIndentedString(nameStartsWith)).append("\n");
    sb.append("    nicUuid: ").append(toIndentedString(nicUuid)).append("\n");
    sb.append("    nicUuidContains: ").append(toIndentedString(nicUuidContains)).append("\n");
    sb.append("    nicUuidEndsWith: ").append(toIndentedString(nicUuidEndsWith)).append("\n");
    sb.append("    nicUuidGt: ").append(toIndentedString(nicUuidGt)).append("\n");
    sb.append("    nicUuidGte: ").append(toIndentedString(nicUuidGte)).append("\n");
    sb.append("    nicUuidIn: ").append(toIndentedString(nicUuidIn)).append("\n");
    sb.append("    nicUuidLt: ").append(toIndentedString(nicUuidLt)).append("\n");
    sb.append("    nicUuidLte: ").append(toIndentedString(nicUuidLte)).append("\n");
    sb.append("    nicUuidNot: ").append(toIndentedString(nicUuidNot)).append("\n");
    sb.append("    nicUuidNotContains: ").append(toIndentedString(nicUuidNotContains)).append("\n");
    sb.append("    nicUuidNotEndsWith: ").append(toIndentedString(nicUuidNotEndsWith)).append("\n");
    sb.append("    nicUuidNotIn: ").append(toIndentedString(nicUuidNotIn)).append("\n");
    sb.append("    nicUuidNotStartsWith: ").append(toIndentedString(nicUuidNotStartsWith)).append("\n");
    sb.append("    nicUuidStartsWith: ").append(toIndentedString(nicUuidStartsWith)).append("\n");
    sb.append("    NOT: ").append(toIndentedString(NOT)).append("\n");
    sb.append("    OR: ").append(toIndentedString(OR)).append("\n");
    sb.append("    physical: ").append(toIndentedString(physical)).append("\n");
    sb.append("    physicalNot: ").append(toIndentedString(physicalNot)).append("\n");
    sb.append("    rdmaEnabled: ").append(toIndentedString(rdmaEnabled)).append("\n");
    sb.append("    rdmaEnabledNot: ").append(toIndentedString(rdmaEnabledNot)).append("\n");
    sb.append("    running: ").append(toIndentedString(running)).append("\n");
    sb.append("    runningNot: ").append(toIndentedString(runningNot)).append("\n");
    sb.append("    speed: ").append(toIndentedString(speed)).append("\n");
    sb.append("    speedGt: ").append(toIndentedString(speedGt)).append("\n");
    sb.append("    speedGte: ").append(toIndentedString(speedGte)).append("\n");
    sb.append("    speedIn: ").append(toIndentedString(speedIn)).append("\n");
    sb.append("    speedLt: ").append(toIndentedString(speedLt)).append("\n");
    sb.append("    speedLte: ").append(toIndentedString(speedLte)).append("\n");
    sb.append("    speedNot: ").append(toIndentedString(speedNot)).append("\n");
    sb.append("    speedNotIn: ").append(toIndentedString(speedNotIn)).append("\n");
    sb.append("    subnetMask: ").append(toIndentedString(subnetMask)).append("\n");
    sb.append("    subnetMaskContains: ").append(toIndentedString(subnetMaskContains)).append("\n");
    sb.append("    subnetMaskEndsWith: ").append(toIndentedString(subnetMaskEndsWith)).append("\n");
    sb.append("    subnetMaskGt: ").append(toIndentedString(subnetMaskGt)).append("\n");
    sb.append("    subnetMaskGte: ").append(toIndentedString(subnetMaskGte)).append("\n");
    sb.append("    subnetMaskIn: ").append(toIndentedString(subnetMaskIn)).append("\n");
    sb.append("    subnetMaskLt: ").append(toIndentedString(subnetMaskLt)).append("\n");
    sb.append("    subnetMaskLte: ").append(toIndentedString(subnetMaskLte)).append("\n");
    sb.append("    subnetMaskNot: ").append(toIndentedString(subnetMaskNot)).append("\n");
    sb.append("    subnetMaskNotContains: ").append(toIndentedString(subnetMaskNotContains)).append("\n");
    sb.append("    subnetMaskNotEndsWith: ").append(toIndentedString(subnetMaskNotEndsWith)).append("\n");
    sb.append("    subnetMaskNotIn: ").append(toIndentedString(subnetMaskNotIn)).append("\n");
    sb.append("    subnetMaskNotStartsWith: ").append(toIndentedString(subnetMaskNotStartsWith)).append("\n");
    sb.append("    subnetMaskStartsWith: ").append(toIndentedString(subnetMaskStartsWith)).append("\n");
    sb.append("    totalVfNum: ").append(toIndentedString(totalVfNum)).append("\n");
    sb.append("    totalVfNumGt: ").append(toIndentedString(totalVfNumGt)).append("\n");
    sb.append("    totalVfNumGte: ").append(toIndentedString(totalVfNumGte)).append("\n");
    sb.append("    totalVfNumIn: ").append(toIndentedString(totalVfNumIn)).append("\n");
    sb.append("    totalVfNumLt: ").append(toIndentedString(totalVfNumLt)).append("\n");
    sb.append("    totalVfNumLte: ").append(toIndentedString(totalVfNumLte)).append("\n");
    sb.append("    totalVfNumNot: ").append(toIndentedString(totalVfNumNot)).append("\n");
    sb.append("    totalVfNumNotIn: ").append(toIndentedString(totalVfNumNotIn)).append("\n");
    sb.append("    type: ").append(toIndentedString(type)).append("\n");
    sb.append("    typeIn: ").append(toIndentedString(typeIn)).append("\n");
    sb.append("    typeNot: ").append(toIndentedString(typeNot)).append("\n");
    sb.append("    typeNotIn: ").append(toIndentedString(typeNotIn)).append("\n");
    sb.append("    up: ").append(toIndentedString(up)).append("\n");
    sb.append("    upNot: ").append(toIndentedString(upNot)).append("\n");
    sb.append("    usedVfNum: ").append(toIndentedString(usedVfNum)).append("\n");
    sb.append("    usedVfNumGt: ").append(toIndentedString(usedVfNumGt)).append("\n");
    sb.append("    usedVfNumGte: ").append(toIndentedString(usedVfNumGte)).append("\n");
    sb.append("    usedVfNumIn: ").append(toIndentedString(usedVfNumIn)).append("\n");
    sb.append("    usedVfNumLt: ").append(toIndentedString(usedVfNumLt)).append("\n");
    sb.append("    usedVfNumLte: ").append(toIndentedString(usedVfNumLte)).append("\n");
    sb.append("    usedVfNumNot: ").append(toIndentedString(usedVfNumNot)).append("\n");
    sb.append("    usedVfNumNotIn: ").append(toIndentedString(usedVfNumNotIn)).append("\n");
    sb.append("    vds: ").append(toIndentedString(vds)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

