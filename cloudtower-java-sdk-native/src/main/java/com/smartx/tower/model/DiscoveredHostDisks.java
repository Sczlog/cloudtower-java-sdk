/*
 * Tower SDK API
 * cloudtower operation API and SDK
 *
 * The version of the OpenAPI document: 1.7.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.smartx.tower.model;

import java.util.Objects;
import java.util.Arrays;
import java.util.Map;
import java.util.HashMap;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import com.smartx.tower.model.DiskFunction;
import com.smartx.tower.model.DiskType;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.util.ArrayList;
import java.util.List;
import org.openapitools.jackson.nullable.JsonNullable;
import com.fasterxml.jackson.annotation.JsonIgnore;
import org.openapitools.jackson.nullable.JsonNullable;
import java.util.NoSuchElementException;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;


/**
 * DiscoveredHostDisks
 */
@JsonPropertyOrder({
  DiscoveredHostDisks.JSON_PROPERTY_TYPE,
  DiscoveredHostDisks.JSON_PROPERTY_SIZE,
  DiscoveredHostDisks.JSON_PROPERTY_SERIAL,
  DiscoveredHostDisks.JSON_PROPERTY_PERSISTENT_MEMORY_TYPE,
  DiscoveredHostDisks.JSON_PROPERTY_NUMA_NODE,
  DiscoveredHostDisks.JSON_PROPERTY_MODEL,
  DiscoveredHostDisks.JSON_PROPERTY_FUNCTION,
  DiscoveredHostDisks.JSON_PROPERTY_DRIVE,
  DiscoveredHostDisks.JSON_PROPERTY_DIMM_IDS
})
@javax.annotation.processing.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2021-10-27T15:59:14.939791800+08:00[Asia/Shanghai]")
public class DiscoveredHostDisks {
  public static final String JSON_PROPERTY_TYPE = "type";
  private DiskType type;

  public static final String JSON_PROPERTY_SIZE = "size";
  private Double size;

  public static final String JSON_PROPERTY_SERIAL = "serial";
  private String serial;

  public static final String JSON_PROPERTY_PERSISTENT_MEMORY_TYPE = "persistent_memory_type";
  private JsonNullable<String> persistentMemoryType = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_NUMA_NODE = "numa_node";
  private JsonNullable<Double> numaNode = JsonNullable.<Double>undefined();

  public static final String JSON_PROPERTY_MODEL = "model";
  private String model;

  public static final String JSON_PROPERTY_FUNCTION = "function";
  private JsonNullable<DiskFunction> function = JsonNullable.<DiskFunction>undefined();

  public static final String JSON_PROPERTY_DRIVE = "drive";
  private String drive;

  public static final String JSON_PROPERTY_DIMM_IDS = "dimm_ids";
  private JsonNullable<List<String>> dimmIds = JsonNullable.<List<String>>undefined();


  public DiscoveredHostDisks type(DiskType type) {
    this.type = type;
    return this;
  }

   /**
   * Get type
   * @return type
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")
  @JsonProperty(JSON_PROPERTY_TYPE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public DiskType getType() {
    return type;
  }


  @JsonProperty(JSON_PROPERTY_TYPE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setType(DiskType type) {
    this.type = type;
  }


  public DiscoveredHostDisks size(Double size) {
    this.size = size;
    return this;
  }

   /**
   * Get size
   * @return size
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")
  @JsonProperty(JSON_PROPERTY_SIZE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public Double getSize() {
    return size;
  }


  @JsonProperty(JSON_PROPERTY_SIZE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setSize(Double size) {
    this.size = size;
  }


  public DiscoveredHostDisks serial(String serial) {
    this.serial = serial;
    return this;
  }

   /**
   * Get serial
   * @return serial
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")
  @JsonProperty(JSON_PROPERTY_SERIAL)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getSerial() {
    return serial;
  }


  @JsonProperty(JSON_PROPERTY_SERIAL)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setSerial(String serial) {
    this.serial = serial;
  }


  public DiscoveredHostDisks persistentMemoryType(String persistentMemoryType) {
    this.persistentMemoryType = JsonNullable.<String>of(persistentMemoryType);
    return this;
  }

   /**
   * Get persistentMemoryType
   * @return persistentMemoryType
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getPersistentMemoryType() {
        return persistentMemoryType.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_PERSISTENT_MEMORY_TYPE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getPersistentMemoryType_JsonNullable() {
    return persistentMemoryType;
  }
  
  @JsonProperty(JSON_PROPERTY_PERSISTENT_MEMORY_TYPE)
  public void setPersistentMemoryType_JsonNullable(JsonNullable<String> persistentMemoryType) {
    this.persistentMemoryType = persistentMemoryType;
  }

  public void setPersistentMemoryType(String persistentMemoryType) {
    this.persistentMemoryType = JsonNullable.<String>of(persistentMemoryType);
  }


  public DiscoveredHostDisks numaNode(Double numaNode) {
    this.numaNode = JsonNullable.<Double>of(numaNode);
    return this;
  }

   /**
   * Get numaNode
   * @return numaNode
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public Double getNumaNode() {
        return numaNode.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_NUMA_NODE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<Double> getNumaNode_JsonNullable() {
    return numaNode;
  }
  
  @JsonProperty(JSON_PROPERTY_NUMA_NODE)
  public void setNumaNode_JsonNullable(JsonNullable<Double> numaNode) {
    this.numaNode = numaNode;
  }

  public void setNumaNode(Double numaNode) {
    this.numaNode = JsonNullable.<Double>of(numaNode);
  }


  public DiscoveredHostDisks model(String model) {
    this.model = model;
    return this;
  }

   /**
   * Get model
   * @return model
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")
  @JsonProperty(JSON_PROPERTY_MODEL)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getModel() {
    return model;
  }


  @JsonProperty(JSON_PROPERTY_MODEL)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setModel(String model) {
    this.model = model;
  }


  public DiscoveredHostDisks function(DiskFunction function) {
    this.function = JsonNullable.<DiskFunction>of(function);
    return this;
  }

   /**
   * Get function
   * @return function
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public DiskFunction getFunction() {
        return function.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_FUNCTION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<DiskFunction> getFunction_JsonNullable() {
    return function;
  }
  
  @JsonProperty(JSON_PROPERTY_FUNCTION)
  public void setFunction_JsonNullable(JsonNullable<DiskFunction> function) {
    this.function = function;
  }

  public void setFunction(DiskFunction function) {
    this.function = JsonNullable.<DiskFunction>of(function);
  }


  public DiscoveredHostDisks drive(String drive) {
    this.drive = drive;
    return this;
  }

   /**
   * Get drive
   * @return drive
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")
  @JsonProperty(JSON_PROPERTY_DRIVE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getDrive() {
    return drive;
  }


  @JsonProperty(JSON_PROPERTY_DRIVE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setDrive(String drive) {
    this.drive = drive;
  }


  public DiscoveredHostDisks dimmIds(List<String> dimmIds) {
    this.dimmIds = JsonNullable.<List<String>>of(dimmIds);
    return this;
  }

  public DiscoveredHostDisks addDimmIdsItem(String dimmIdsItem) {
    if (this.dimmIds == null || !this.dimmIds.isPresent()) {
      this.dimmIds = JsonNullable.<List<String>>of(new ArrayList<>());
    }
    try {
      this.dimmIds.get().add(dimmIdsItem);
    } catch (java.util.NoSuchElementException e) {
      // this can never happen, as we make sure above that the value is present
    }
    return this;
  }

   /**
   * Get dimmIds
   * @return dimmIds
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public List<String> getDimmIds() {
        return dimmIds.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_DIMM_IDS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<List<String>> getDimmIds_JsonNullable() {
    return dimmIds;
  }
  
  @JsonProperty(JSON_PROPERTY_DIMM_IDS)
  public void setDimmIds_JsonNullable(JsonNullable<List<String>> dimmIds) {
    this.dimmIds = dimmIds;
  }

  public void setDimmIds(List<String> dimmIds) {
    this.dimmIds = JsonNullable.<List<String>>of(dimmIds);
  }


  /**
   * Return true if this DiscoveredHost_disks object is equal to o.
   */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    DiscoveredHostDisks discoveredHostDisks = (DiscoveredHostDisks) o;
    return Objects.equals(this.type, discoveredHostDisks.type) &&
        Objects.equals(this.size, discoveredHostDisks.size) &&
        Objects.equals(this.serial, discoveredHostDisks.serial) &&
        equalsNullable(this.persistentMemoryType, discoveredHostDisks.persistentMemoryType) &&
        equalsNullable(this.numaNode, discoveredHostDisks.numaNode) &&
        Objects.equals(this.model, discoveredHostDisks.model) &&
        equalsNullable(this.function, discoveredHostDisks.function) &&
        Objects.equals(this.drive, discoveredHostDisks.drive) &&
        equalsNullable(this.dimmIds, discoveredHostDisks.dimmIds);
  }

  private static <T> boolean equalsNullable(JsonNullable<T> a, JsonNullable<T> b) {
    return a == b || (a != null && b != null && a.isPresent() && b.isPresent() && Objects.deepEquals(a.get(), b.get()));
  }

  @Override
  public int hashCode() {
    return Objects.hash(type, size, serial, hashCodeNullable(persistentMemoryType), hashCodeNullable(numaNode), model, hashCodeNullable(function), drive, hashCodeNullable(dimmIds));
  }

  private static <T> int hashCodeNullable(JsonNullable<T> a) {
    if (a == null) {
      return 1;
    }
    return a.isPresent() ? Arrays.deepHashCode(new Object[]{a.get()}) : 31;
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class DiscoveredHostDisks {\n");
    sb.append("    type: ").append(toIndentedString(type)).append("\n");
    sb.append("    size: ").append(toIndentedString(size)).append("\n");
    sb.append("    serial: ").append(toIndentedString(serial)).append("\n");
    sb.append("    persistentMemoryType: ").append(toIndentedString(persistentMemoryType)).append("\n");
    sb.append("    numaNode: ").append(toIndentedString(numaNode)).append("\n");
    sb.append("    model: ").append(toIndentedString(model)).append("\n");
    sb.append("    function: ").append(toIndentedString(function)).append("\n");
    sb.append("    drive: ").append(toIndentedString(drive)).append("\n");
    sb.append("    dimmIds: ").append(toIndentedString(dimmIds)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

