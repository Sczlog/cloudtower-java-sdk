/*
 * Tower SDK API
 * cloudtower operation API and SDK
 *
 * The version of the OpenAPI document: 1.7.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.smartx.tower.model;

import java.util.Objects;
import java.util.Arrays;
import java.util.Map;
import java.util.HashMap;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import com.smartx.tower.model.ClusterWhereInput;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.util.ArrayList;
import java.util.List;
import org.openapitools.jackson.nullable.JsonNullable;
import com.fasterxml.jackson.annotation.JsonIgnore;
import org.openapitools.jackson.nullable.JsonNullable;
import java.util.NoSuchElementException;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;


/**
 * ClusterUpgradeHistoryWhereInput
 */
@JsonPropertyOrder({
  ClusterUpgradeHistoryWhereInput.JSON_PROPERTY_A_N_D,
  ClusterUpgradeHistoryWhereInput.JSON_PROPERTY_CLUSTER,
  ClusterUpgradeHistoryWhereInput.JSON_PROPERTY_DATE,
  ClusterUpgradeHistoryWhereInput.JSON_PROPERTY_DATE_GT,
  ClusterUpgradeHistoryWhereInput.JSON_PROPERTY_DATE_GTE,
  ClusterUpgradeHistoryWhereInput.JSON_PROPERTY_DATE_IN,
  ClusterUpgradeHistoryWhereInput.JSON_PROPERTY_DATE_LT,
  ClusterUpgradeHistoryWhereInput.JSON_PROPERTY_DATE_LTE,
  ClusterUpgradeHistoryWhereInput.JSON_PROPERTY_DATE_NOT,
  ClusterUpgradeHistoryWhereInput.JSON_PROPERTY_DATE_NOT_IN,
  ClusterUpgradeHistoryWhereInput.JSON_PROPERTY_ID,
  ClusterUpgradeHistoryWhereInput.JSON_PROPERTY_ID_CONTAINS,
  ClusterUpgradeHistoryWhereInput.JSON_PROPERTY_ID_ENDS_WITH,
  ClusterUpgradeHistoryWhereInput.JSON_PROPERTY_ID_GT,
  ClusterUpgradeHistoryWhereInput.JSON_PROPERTY_ID_GTE,
  ClusterUpgradeHistoryWhereInput.JSON_PROPERTY_ID_IN,
  ClusterUpgradeHistoryWhereInput.JSON_PROPERTY_ID_LT,
  ClusterUpgradeHistoryWhereInput.JSON_PROPERTY_ID_LTE,
  ClusterUpgradeHistoryWhereInput.JSON_PROPERTY_ID_NOT,
  ClusterUpgradeHistoryWhereInput.JSON_PROPERTY_ID_NOT_CONTAINS,
  ClusterUpgradeHistoryWhereInput.JSON_PROPERTY_ID_NOT_ENDS_WITH,
  ClusterUpgradeHistoryWhereInput.JSON_PROPERTY_ID_NOT_IN,
  ClusterUpgradeHistoryWhereInput.JSON_PROPERTY_ID_NOT_STARTS_WITH,
  ClusterUpgradeHistoryWhereInput.JSON_PROPERTY_ID_STARTS_WITH,
  ClusterUpgradeHistoryWhereInput.JSON_PROPERTY_LOCAL_ID,
  ClusterUpgradeHistoryWhereInput.JSON_PROPERTY_LOCAL_ID_CONTAINS,
  ClusterUpgradeHistoryWhereInput.JSON_PROPERTY_LOCAL_ID_ENDS_WITH,
  ClusterUpgradeHistoryWhereInput.JSON_PROPERTY_LOCAL_ID_GT,
  ClusterUpgradeHistoryWhereInput.JSON_PROPERTY_LOCAL_ID_GTE,
  ClusterUpgradeHistoryWhereInput.JSON_PROPERTY_LOCAL_ID_IN,
  ClusterUpgradeHistoryWhereInput.JSON_PROPERTY_LOCAL_ID_LT,
  ClusterUpgradeHistoryWhereInput.JSON_PROPERTY_LOCAL_ID_LTE,
  ClusterUpgradeHistoryWhereInput.JSON_PROPERTY_LOCAL_ID_NOT,
  ClusterUpgradeHistoryWhereInput.JSON_PROPERTY_LOCAL_ID_NOT_CONTAINS,
  ClusterUpgradeHistoryWhereInput.JSON_PROPERTY_LOCAL_ID_NOT_ENDS_WITH,
  ClusterUpgradeHistoryWhereInput.JSON_PROPERTY_LOCAL_ID_NOT_IN,
  ClusterUpgradeHistoryWhereInput.JSON_PROPERTY_LOCAL_ID_NOT_STARTS_WITH,
  ClusterUpgradeHistoryWhereInput.JSON_PROPERTY_LOCAL_ID_STARTS_WITH,
  ClusterUpgradeHistoryWhereInput.JSON_PROPERTY_N_O_T,
  ClusterUpgradeHistoryWhereInput.JSON_PROPERTY_O_R,
  ClusterUpgradeHistoryWhereInput.JSON_PROPERTY_RESULT,
  ClusterUpgradeHistoryWhereInput.JSON_PROPERTY_RESULT_CONTAINS,
  ClusterUpgradeHistoryWhereInput.JSON_PROPERTY_RESULT_ENDS_WITH,
  ClusterUpgradeHistoryWhereInput.JSON_PROPERTY_RESULT_GT,
  ClusterUpgradeHistoryWhereInput.JSON_PROPERTY_RESULT_GTE,
  ClusterUpgradeHistoryWhereInput.JSON_PROPERTY_RESULT_IN,
  ClusterUpgradeHistoryWhereInput.JSON_PROPERTY_RESULT_LT,
  ClusterUpgradeHistoryWhereInput.JSON_PROPERTY_RESULT_LTE,
  ClusterUpgradeHistoryWhereInput.JSON_PROPERTY_RESULT_NOT,
  ClusterUpgradeHistoryWhereInput.JSON_PROPERTY_RESULT_NOT_CONTAINS,
  ClusterUpgradeHistoryWhereInput.JSON_PROPERTY_RESULT_NOT_ENDS_WITH,
  ClusterUpgradeHistoryWhereInput.JSON_PROPERTY_RESULT_NOT_IN,
  ClusterUpgradeHistoryWhereInput.JSON_PROPERTY_RESULT_NOT_STARTS_WITH,
  ClusterUpgradeHistoryWhereInput.JSON_PROPERTY_RESULT_STARTS_WITH,
  ClusterUpgradeHistoryWhereInput.JSON_PROPERTY_TASK_UUID,
  ClusterUpgradeHistoryWhereInput.JSON_PROPERTY_TASK_UUID_CONTAINS,
  ClusterUpgradeHistoryWhereInput.JSON_PROPERTY_TASK_UUID_ENDS_WITH,
  ClusterUpgradeHistoryWhereInput.JSON_PROPERTY_TASK_UUID_GT,
  ClusterUpgradeHistoryWhereInput.JSON_PROPERTY_TASK_UUID_GTE,
  ClusterUpgradeHistoryWhereInput.JSON_PROPERTY_TASK_UUID_IN,
  ClusterUpgradeHistoryWhereInput.JSON_PROPERTY_TASK_UUID_LT,
  ClusterUpgradeHistoryWhereInput.JSON_PROPERTY_TASK_UUID_LTE,
  ClusterUpgradeHistoryWhereInput.JSON_PROPERTY_TASK_UUID_NOT,
  ClusterUpgradeHistoryWhereInput.JSON_PROPERTY_TASK_UUID_NOT_CONTAINS,
  ClusterUpgradeHistoryWhereInput.JSON_PROPERTY_TASK_UUID_NOT_ENDS_WITH,
  ClusterUpgradeHistoryWhereInput.JSON_PROPERTY_TASK_UUID_NOT_IN,
  ClusterUpgradeHistoryWhereInput.JSON_PROPERTY_TASK_UUID_NOT_STARTS_WITH,
  ClusterUpgradeHistoryWhereInput.JSON_PROPERTY_TASK_UUID_STARTS_WITH,
  ClusterUpgradeHistoryWhereInput.JSON_PROPERTY_VERSION,
  ClusterUpgradeHistoryWhereInput.JSON_PROPERTY_VERSION_CONTAINS,
  ClusterUpgradeHistoryWhereInput.JSON_PROPERTY_VERSION_ENDS_WITH,
  ClusterUpgradeHistoryWhereInput.JSON_PROPERTY_VERSION_GT,
  ClusterUpgradeHistoryWhereInput.JSON_PROPERTY_VERSION_GTE,
  ClusterUpgradeHistoryWhereInput.JSON_PROPERTY_VERSION_IN,
  ClusterUpgradeHistoryWhereInput.JSON_PROPERTY_VERSION_LT,
  ClusterUpgradeHistoryWhereInput.JSON_PROPERTY_VERSION_LTE,
  ClusterUpgradeHistoryWhereInput.JSON_PROPERTY_VERSION_NOT,
  ClusterUpgradeHistoryWhereInput.JSON_PROPERTY_VERSION_NOT_CONTAINS,
  ClusterUpgradeHistoryWhereInput.JSON_PROPERTY_VERSION_NOT_ENDS_WITH,
  ClusterUpgradeHistoryWhereInput.JSON_PROPERTY_VERSION_NOT_IN,
  ClusterUpgradeHistoryWhereInput.JSON_PROPERTY_VERSION_NOT_STARTS_WITH,
  ClusterUpgradeHistoryWhereInput.JSON_PROPERTY_VERSION_STARTS_WITH
})
@javax.annotation.processing.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2021-10-27T15:59:14.939791800+08:00[Asia/Shanghai]")
public class ClusterUpgradeHistoryWhereInput {
  public static final String JSON_PROPERTY_A_N_D = "AND";
  private JsonNullable<List<ClusterUpgradeHistoryWhereInput>> AND = JsonNullable.<List<ClusterUpgradeHistoryWhereInput>>undefined();

  public static final String JSON_PROPERTY_CLUSTER = "cluster";
  private JsonNullable<ClusterWhereInput> cluster = JsonNullable.<ClusterWhereInput>undefined();

  public static final String JSON_PROPERTY_DATE = "date";
  private JsonNullable<String> date = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_DATE_GT = "date_gt";
  private JsonNullable<String> dateGt = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_DATE_GTE = "date_gte";
  private JsonNullable<String> dateGte = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_DATE_IN = "date_in";
  private JsonNullable<List<String>> dateIn = JsonNullable.<List<String>>undefined();

  public static final String JSON_PROPERTY_DATE_LT = "date_lt";
  private JsonNullable<String> dateLt = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_DATE_LTE = "date_lte";
  private JsonNullable<String> dateLte = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_DATE_NOT = "date_not";
  private JsonNullable<String> dateNot = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_DATE_NOT_IN = "date_not_in";
  private JsonNullable<List<String>> dateNotIn = JsonNullable.<List<String>>undefined();

  public static final String JSON_PROPERTY_ID = "id";
  private JsonNullable<String> id = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_ID_CONTAINS = "id_contains";
  private JsonNullable<String> idContains = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_ID_ENDS_WITH = "id_ends_with";
  private JsonNullable<String> idEndsWith = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_ID_GT = "id_gt";
  private JsonNullable<String> idGt = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_ID_GTE = "id_gte";
  private JsonNullable<String> idGte = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_ID_IN = "id_in";
  private JsonNullable<List<String>> idIn = JsonNullable.<List<String>>undefined();

  public static final String JSON_PROPERTY_ID_LT = "id_lt";
  private JsonNullable<String> idLt = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_ID_LTE = "id_lte";
  private JsonNullable<String> idLte = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_ID_NOT = "id_not";
  private JsonNullable<String> idNot = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_ID_NOT_CONTAINS = "id_not_contains";
  private JsonNullable<String> idNotContains = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_ID_NOT_ENDS_WITH = "id_not_ends_with";
  private JsonNullable<String> idNotEndsWith = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_ID_NOT_IN = "id_not_in";
  private JsonNullable<List<String>> idNotIn = JsonNullable.<List<String>>undefined();

  public static final String JSON_PROPERTY_ID_NOT_STARTS_WITH = "id_not_starts_with";
  private JsonNullable<String> idNotStartsWith = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_ID_STARTS_WITH = "id_starts_with";
  private JsonNullable<String> idStartsWith = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_LOCAL_ID = "local_id";
  private JsonNullable<String> localId = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_LOCAL_ID_CONTAINS = "local_id_contains";
  private JsonNullable<String> localIdContains = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_LOCAL_ID_ENDS_WITH = "local_id_ends_with";
  private JsonNullable<String> localIdEndsWith = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_LOCAL_ID_GT = "local_id_gt";
  private JsonNullable<String> localIdGt = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_LOCAL_ID_GTE = "local_id_gte";
  private JsonNullable<String> localIdGte = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_LOCAL_ID_IN = "local_id_in";
  private JsonNullable<List<String>> localIdIn = JsonNullable.<List<String>>undefined();

  public static final String JSON_PROPERTY_LOCAL_ID_LT = "local_id_lt";
  private JsonNullable<String> localIdLt = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_LOCAL_ID_LTE = "local_id_lte";
  private JsonNullable<String> localIdLte = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_LOCAL_ID_NOT = "local_id_not";
  private JsonNullable<String> localIdNot = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_LOCAL_ID_NOT_CONTAINS = "local_id_not_contains";
  private JsonNullable<String> localIdNotContains = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_LOCAL_ID_NOT_ENDS_WITH = "local_id_not_ends_with";
  private JsonNullable<String> localIdNotEndsWith = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_LOCAL_ID_NOT_IN = "local_id_not_in";
  private JsonNullable<List<String>> localIdNotIn = JsonNullable.<List<String>>undefined();

  public static final String JSON_PROPERTY_LOCAL_ID_NOT_STARTS_WITH = "local_id_not_starts_with";
  private JsonNullable<String> localIdNotStartsWith = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_LOCAL_ID_STARTS_WITH = "local_id_starts_with";
  private JsonNullable<String> localIdStartsWith = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_N_O_T = "NOT";
  private JsonNullable<List<ClusterUpgradeHistoryWhereInput>> NOT = JsonNullable.<List<ClusterUpgradeHistoryWhereInput>>undefined();

  public static final String JSON_PROPERTY_O_R = "OR";
  private JsonNullable<List<ClusterUpgradeHistoryWhereInput>> OR = JsonNullable.<List<ClusterUpgradeHistoryWhereInput>>undefined();

  public static final String JSON_PROPERTY_RESULT = "result";
  private JsonNullable<String> result = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_RESULT_CONTAINS = "result_contains";
  private JsonNullable<String> resultContains = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_RESULT_ENDS_WITH = "result_ends_with";
  private JsonNullable<String> resultEndsWith = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_RESULT_GT = "result_gt";
  private JsonNullable<String> resultGt = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_RESULT_GTE = "result_gte";
  private JsonNullable<String> resultGte = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_RESULT_IN = "result_in";
  private JsonNullable<List<String>> resultIn = JsonNullable.<List<String>>undefined();

  public static final String JSON_PROPERTY_RESULT_LT = "result_lt";
  private JsonNullable<String> resultLt = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_RESULT_LTE = "result_lte";
  private JsonNullable<String> resultLte = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_RESULT_NOT = "result_not";
  private JsonNullable<String> resultNot = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_RESULT_NOT_CONTAINS = "result_not_contains";
  private JsonNullable<String> resultNotContains = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_RESULT_NOT_ENDS_WITH = "result_not_ends_with";
  private JsonNullable<String> resultNotEndsWith = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_RESULT_NOT_IN = "result_not_in";
  private JsonNullable<List<String>> resultNotIn = JsonNullable.<List<String>>undefined();

  public static final String JSON_PROPERTY_RESULT_NOT_STARTS_WITH = "result_not_starts_with";
  private JsonNullable<String> resultNotStartsWith = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_RESULT_STARTS_WITH = "result_starts_with";
  private JsonNullable<String> resultStartsWith = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_TASK_UUID = "task_uuid";
  private JsonNullable<String> taskUuid = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_TASK_UUID_CONTAINS = "task_uuid_contains";
  private JsonNullable<String> taskUuidContains = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_TASK_UUID_ENDS_WITH = "task_uuid_ends_with";
  private JsonNullable<String> taskUuidEndsWith = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_TASK_UUID_GT = "task_uuid_gt";
  private JsonNullable<String> taskUuidGt = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_TASK_UUID_GTE = "task_uuid_gte";
  private JsonNullable<String> taskUuidGte = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_TASK_UUID_IN = "task_uuid_in";
  private JsonNullable<List<String>> taskUuidIn = JsonNullable.<List<String>>undefined();

  public static final String JSON_PROPERTY_TASK_UUID_LT = "task_uuid_lt";
  private JsonNullable<String> taskUuidLt = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_TASK_UUID_LTE = "task_uuid_lte";
  private JsonNullable<String> taskUuidLte = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_TASK_UUID_NOT = "task_uuid_not";
  private JsonNullable<String> taskUuidNot = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_TASK_UUID_NOT_CONTAINS = "task_uuid_not_contains";
  private JsonNullable<String> taskUuidNotContains = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_TASK_UUID_NOT_ENDS_WITH = "task_uuid_not_ends_with";
  private JsonNullable<String> taskUuidNotEndsWith = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_TASK_UUID_NOT_IN = "task_uuid_not_in";
  private JsonNullable<List<String>> taskUuidNotIn = JsonNullable.<List<String>>undefined();

  public static final String JSON_PROPERTY_TASK_UUID_NOT_STARTS_WITH = "task_uuid_not_starts_with";
  private JsonNullable<String> taskUuidNotStartsWith = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_TASK_UUID_STARTS_WITH = "task_uuid_starts_with";
  private JsonNullable<String> taskUuidStartsWith = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_VERSION = "version";
  private JsonNullable<String> version = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_VERSION_CONTAINS = "version_contains";
  private JsonNullable<String> versionContains = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_VERSION_ENDS_WITH = "version_ends_with";
  private JsonNullable<String> versionEndsWith = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_VERSION_GT = "version_gt";
  private JsonNullable<String> versionGt = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_VERSION_GTE = "version_gte";
  private JsonNullable<String> versionGte = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_VERSION_IN = "version_in";
  private JsonNullable<List<String>> versionIn = JsonNullable.<List<String>>undefined();

  public static final String JSON_PROPERTY_VERSION_LT = "version_lt";
  private JsonNullable<String> versionLt = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_VERSION_LTE = "version_lte";
  private JsonNullable<String> versionLte = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_VERSION_NOT = "version_not";
  private JsonNullable<String> versionNot = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_VERSION_NOT_CONTAINS = "version_not_contains";
  private JsonNullable<String> versionNotContains = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_VERSION_NOT_ENDS_WITH = "version_not_ends_with";
  private JsonNullable<String> versionNotEndsWith = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_VERSION_NOT_IN = "version_not_in";
  private JsonNullable<List<String>> versionNotIn = JsonNullable.<List<String>>undefined();

  public static final String JSON_PROPERTY_VERSION_NOT_STARTS_WITH = "version_not_starts_with";
  private JsonNullable<String> versionNotStartsWith = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_VERSION_STARTS_WITH = "version_starts_with";
  private JsonNullable<String> versionStartsWith = JsonNullable.<String>undefined();


  public ClusterUpgradeHistoryWhereInput AND(List<ClusterUpgradeHistoryWhereInput> AND) {
    this.AND = JsonNullable.<List<ClusterUpgradeHistoryWhereInput>>of(AND);
    return this;
  }

  public ClusterUpgradeHistoryWhereInput addANDItem(ClusterUpgradeHistoryWhereInput ANDItem) {
    if (this.AND == null || !this.AND.isPresent()) {
      this.AND = JsonNullable.<List<ClusterUpgradeHistoryWhereInput>>of(new ArrayList<>());
    }
    try {
      this.AND.get().add(ANDItem);
    } catch (java.util.NoSuchElementException e) {
      // this can never happen, as we make sure above that the value is present
    }
    return this;
  }

   /**
   * Get AND
   * @return AND
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public List<ClusterUpgradeHistoryWhereInput> getAND() {
        return AND.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_A_N_D)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<List<ClusterUpgradeHistoryWhereInput>> getAND_JsonNullable() {
    return AND;
  }
  
  @JsonProperty(JSON_PROPERTY_A_N_D)
  public void setAND_JsonNullable(JsonNullable<List<ClusterUpgradeHistoryWhereInput>> AND) {
    this.AND = AND;
  }

  public void setAND(List<ClusterUpgradeHistoryWhereInput> AND) {
    this.AND = JsonNullable.<List<ClusterUpgradeHistoryWhereInput>>of(AND);
  }


  public ClusterUpgradeHistoryWhereInput cluster(ClusterWhereInput cluster) {
    this.cluster = JsonNullable.<ClusterWhereInput>of(cluster);
    return this;
  }

   /**
   * Get cluster
   * @return cluster
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public ClusterWhereInput getCluster() {
        return cluster.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_CLUSTER)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<ClusterWhereInput> getCluster_JsonNullable() {
    return cluster;
  }
  
  @JsonProperty(JSON_PROPERTY_CLUSTER)
  public void setCluster_JsonNullable(JsonNullable<ClusterWhereInput> cluster) {
    this.cluster = cluster;
  }

  public void setCluster(ClusterWhereInput cluster) {
    this.cluster = JsonNullable.<ClusterWhereInput>of(cluster);
  }


  public ClusterUpgradeHistoryWhereInput date(String date) {
    this.date = JsonNullable.<String>of(date);
    return this;
  }

   /**
   * Get date
   * @return date
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getDate() {
        return date.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_DATE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getDate_JsonNullable() {
    return date;
  }
  
  @JsonProperty(JSON_PROPERTY_DATE)
  public void setDate_JsonNullable(JsonNullable<String> date) {
    this.date = date;
  }

  public void setDate(String date) {
    this.date = JsonNullable.<String>of(date);
  }


  public ClusterUpgradeHistoryWhereInput dateGt(String dateGt) {
    this.dateGt = JsonNullable.<String>of(dateGt);
    return this;
  }

   /**
   * Get dateGt
   * @return dateGt
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getDateGt() {
        return dateGt.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_DATE_GT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getDateGt_JsonNullable() {
    return dateGt;
  }
  
  @JsonProperty(JSON_PROPERTY_DATE_GT)
  public void setDateGt_JsonNullable(JsonNullable<String> dateGt) {
    this.dateGt = dateGt;
  }

  public void setDateGt(String dateGt) {
    this.dateGt = JsonNullable.<String>of(dateGt);
  }


  public ClusterUpgradeHistoryWhereInput dateGte(String dateGte) {
    this.dateGte = JsonNullable.<String>of(dateGte);
    return this;
  }

   /**
   * Get dateGte
   * @return dateGte
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getDateGte() {
        return dateGte.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_DATE_GTE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getDateGte_JsonNullable() {
    return dateGte;
  }
  
  @JsonProperty(JSON_PROPERTY_DATE_GTE)
  public void setDateGte_JsonNullable(JsonNullable<String> dateGte) {
    this.dateGte = dateGte;
  }

  public void setDateGte(String dateGte) {
    this.dateGte = JsonNullable.<String>of(dateGte);
  }


  public ClusterUpgradeHistoryWhereInput dateIn(List<String> dateIn) {
    this.dateIn = JsonNullable.<List<String>>of(dateIn);
    return this;
  }

  public ClusterUpgradeHistoryWhereInput addDateInItem(String dateInItem) {
    if (this.dateIn == null || !this.dateIn.isPresent()) {
      this.dateIn = JsonNullable.<List<String>>of(new ArrayList<>());
    }
    try {
      this.dateIn.get().add(dateInItem);
    } catch (java.util.NoSuchElementException e) {
      // this can never happen, as we make sure above that the value is present
    }
    return this;
  }

   /**
   * Get dateIn
   * @return dateIn
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public List<String> getDateIn() {
        return dateIn.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_DATE_IN)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<List<String>> getDateIn_JsonNullable() {
    return dateIn;
  }
  
  @JsonProperty(JSON_PROPERTY_DATE_IN)
  public void setDateIn_JsonNullable(JsonNullable<List<String>> dateIn) {
    this.dateIn = dateIn;
  }

  public void setDateIn(List<String> dateIn) {
    this.dateIn = JsonNullable.<List<String>>of(dateIn);
  }


  public ClusterUpgradeHistoryWhereInput dateLt(String dateLt) {
    this.dateLt = JsonNullable.<String>of(dateLt);
    return this;
  }

   /**
   * Get dateLt
   * @return dateLt
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getDateLt() {
        return dateLt.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_DATE_LT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getDateLt_JsonNullable() {
    return dateLt;
  }
  
  @JsonProperty(JSON_PROPERTY_DATE_LT)
  public void setDateLt_JsonNullable(JsonNullable<String> dateLt) {
    this.dateLt = dateLt;
  }

  public void setDateLt(String dateLt) {
    this.dateLt = JsonNullable.<String>of(dateLt);
  }


  public ClusterUpgradeHistoryWhereInput dateLte(String dateLte) {
    this.dateLte = JsonNullable.<String>of(dateLte);
    return this;
  }

   /**
   * Get dateLte
   * @return dateLte
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getDateLte() {
        return dateLte.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_DATE_LTE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getDateLte_JsonNullable() {
    return dateLte;
  }
  
  @JsonProperty(JSON_PROPERTY_DATE_LTE)
  public void setDateLte_JsonNullable(JsonNullable<String> dateLte) {
    this.dateLte = dateLte;
  }

  public void setDateLte(String dateLte) {
    this.dateLte = JsonNullable.<String>of(dateLte);
  }


  public ClusterUpgradeHistoryWhereInput dateNot(String dateNot) {
    this.dateNot = JsonNullable.<String>of(dateNot);
    return this;
  }

   /**
   * Get dateNot
   * @return dateNot
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getDateNot() {
        return dateNot.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_DATE_NOT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getDateNot_JsonNullable() {
    return dateNot;
  }
  
  @JsonProperty(JSON_PROPERTY_DATE_NOT)
  public void setDateNot_JsonNullable(JsonNullable<String> dateNot) {
    this.dateNot = dateNot;
  }

  public void setDateNot(String dateNot) {
    this.dateNot = JsonNullable.<String>of(dateNot);
  }


  public ClusterUpgradeHistoryWhereInput dateNotIn(List<String> dateNotIn) {
    this.dateNotIn = JsonNullable.<List<String>>of(dateNotIn);
    return this;
  }

  public ClusterUpgradeHistoryWhereInput addDateNotInItem(String dateNotInItem) {
    if (this.dateNotIn == null || !this.dateNotIn.isPresent()) {
      this.dateNotIn = JsonNullable.<List<String>>of(new ArrayList<>());
    }
    try {
      this.dateNotIn.get().add(dateNotInItem);
    } catch (java.util.NoSuchElementException e) {
      // this can never happen, as we make sure above that the value is present
    }
    return this;
  }

   /**
   * Get dateNotIn
   * @return dateNotIn
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public List<String> getDateNotIn() {
        return dateNotIn.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_DATE_NOT_IN)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<List<String>> getDateNotIn_JsonNullable() {
    return dateNotIn;
  }
  
  @JsonProperty(JSON_PROPERTY_DATE_NOT_IN)
  public void setDateNotIn_JsonNullable(JsonNullable<List<String>> dateNotIn) {
    this.dateNotIn = dateNotIn;
  }

  public void setDateNotIn(List<String> dateNotIn) {
    this.dateNotIn = JsonNullable.<List<String>>of(dateNotIn);
  }


  public ClusterUpgradeHistoryWhereInput id(String id) {
    this.id = JsonNullable.<String>of(id);
    return this;
  }

   /**
   * Get id
   * @return id
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getId() {
        return id.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getId_JsonNullable() {
    return id;
  }
  
  @JsonProperty(JSON_PROPERTY_ID)
  public void setId_JsonNullable(JsonNullable<String> id) {
    this.id = id;
  }

  public void setId(String id) {
    this.id = JsonNullable.<String>of(id);
  }


  public ClusterUpgradeHistoryWhereInput idContains(String idContains) {
    this.idContains = JsonNullable.<String>of(idContains);
    return this;
  }

   /**
   * Get idContains
   * @return idContains
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getIdContains() {
        return idContains.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_ID_CONTAINS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getIdContains_JsonNullable() {
    return idContains;
  }
  
  @JsonProperty(JSON_PROPERTY_ID_CONTAINS)
  public void setIdContains_JsonNullable(JsonNullable<String> idContains) {
    this.idContains = idContains;
  }

  public void setIdContains(String idContains) {
    this.idContains = JsonNullable.<String>of(idContains);
  }


  public ClusterUpgradeHistoryWhereInput idEndsWith(String idEndsWith) {
    this.idEndsWith = JsonNullable.<String>of(idEndsWith);
    return this;
  }

   /**
   * Get idEndsWith
   * @return idEndsWith
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getIdEndsWith() {
        return idEndsWith.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_ID_ENDS_WITH)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getIdEndsWith_JsonNullable() {
    return idEndsWith;
  }
  
  @JsonProperty(JSON_PROPERTY_ID_ENDS_WITH)
  public void setIdEndsWith_JsonNullable(JsonNullable<String> idEndsWith) {
    this.idEndsWith = idEndsWith;
  }

  public void setIdEndsWith(String idEndsWith) {
    this.idEndsWith = JsonNullable.<String>of(idEndsWith);
  }


  public ClusterUpgradeHistoryWhereInput idGt(String idGt) {
    this.idGt = JsonNullable.<String>of(idGt);
    return this;
  }

   /**
   * Get idGt
   * @return idGt
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getIdGt() {
        return idGt.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_ID_GT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getIdGt_JsonNullable() {
    return idGt;
  }
  
  @JsonProperty(JSON_PROPERTY_ID_GT)
  public void setIdGt_JsonNullable(JsonNullable<String> idGt) {
    this.idGt = idGt;
  }

  public void setIdGt(String idGt) {
    this.idGt = JsonNullable.<String>of(idGt);
  }


  public ClusterUpgradeHistoryWhereInput idGte(String idGte) {
    this.idGte = JsonNullable.<String>of(idGte);
    return this;
  }

   /**
   * Get idGte
   * @return idGte
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getIdGte() {
        return idGte.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_ID_GTE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getIdGte_JsonNullable() {
    return idGte;
  }
  
  @JsonProperty(JSON_PROPERTY_ID_GTE)
  public void setIdGte_JsonNullable(JsonNullable<String> idGte) {
    this.idGte = idGte;
  }

  public void setIdGte(String idGte) {
    this.idGte = JsonNullable.<String>of(idGte);
  }


  public ClusterUpgradeHistoryWhereInput idIn(List<String> idIn) {
    this.idIn = JsonNullable.<List<String>>of(idIn);
    return this;
  }

  public ClusterUpgradeHistoryWhereInput addIdInItem(String idInItem) {
    if (this.idIn == null || !this.idIn.isPresent()) {
      this.idIn = JsonNullable.<List<String>>of(new ArrayList<>());
    }
    try {
      this.idIn.get().add(idInItem);
    } catch (java.util.NoSuchElementException e) {
      // this can never happen, as we make sure above that the value is present
    }
    return this;
  }

   /**
   * Get idIn
   * @return idIn
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public List<String> getIdIn() {
        return idIn.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_ID_IN)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<List<String>> getIdIn_JsonNullable() {
    return idIn;
  }
  
  @JsonProperty(JSON_PROPERTY_ID_IN)
  public void setIdIn_JsonNullable(JsonNullable<List<String>> idIn) {
    this.idIn = idIn;
  }

  public void setIdIn(List<String> idIn) {
    this.idIn = JsonNullable.<List<String>>of(idIn);
  }


  public ClusterUpgradeHistoryWhereInput idLt(String idLt) {
    this.idLt = JsonNullable.<String>of(idLt);
    return this;
  }

   /**
   * Get idLt
   * @return idLt
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getIdLt() {
        return idLt.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_ID_LT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getIdLt_JsonNullable() {
    return idLt;
  }
  
  @JsonProperty(JSON_PROPERTY_ID_LT)
  public void setIdLt_JsonNullable(JsonNullable<String> idLt) {
    this.idLt = idLt;
  }

  public void setIdLt(String idLt) {
    this.idLt = JsonNullable.<String>of(idLt);
  }


  public ClusterUpgradeHistoryWhereInput idLte(String idLte) {
    this.idLte = JsonNullable.<String>of(idLte);
    return this;
  }

   /**
   * Get idLte
   * @return idLte
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getIdLte() {
        return idLte.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_ID_LTE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getIdLte_JsonNullable() {
    return idLte;
  }
  
  @JsonProperty(JSON_PROPERTY_ID_LTE)
  public void setIdLte_JsonNullable(JsonNullable<String> idLte) {
    this.idLte = idLte;
  }

  public void setIdLte(String idLte) {
    this.idLte = JsonNullable.<String>of(idLte);
  }


  public ClusterUpgradeHistoryWhereInput idNot(String idNot) {
    this.idNot = JsonNullable.<String>of(idNot);
    return this;
  }

   /**
   * Get idNot
   * @return idNot
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getIdNot() {
        return idNot.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_ID_NOT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getIdNot_JsonNullable() {
    return idNot;
  }
  
  @JsonProperty(JSON_PROPERTY_ID_NOT)
  public void setIdNot_JsonNullable(JsonNullable<String> idNot) {
    this.idNot = idNot;
  }

  public void setIdNot(String idNot) {
    this.idNot = JsonNullable.<String>of(idNot);
  }


  public ClusterUpgradeHistoryWhereInput idNotContains(String idNotContains) {
    this.idNotContains = JsonNullable.<String>of(idNotContains);
    return this;
  }

   /**
   * Get idNotContains
   * @return idNotContains
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getIdNotContains() {
        return idNotContains.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_ID_NOT_CONTAINS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getIdNotContains_JsonNullable() {
    return idNotContains;
  }
  
  @JsonProperty(JSON_PROPERTY_ID_NOT_CONTAINS)
  public void setIdNotContains_JsonNullable(JsonNullable<String> idNotContains) {
    this.idNotContains = idNotContains;
  }

  public void setIdNotContains(String idNotContains) {
    this.idNotContains = JsonNullable.<String>of(idNotContains);
  }


  public ClusterUpgradeHistoryWhereInput idNotEndsWith(String idNotEndsWith) {
    this.idNotEndsWith = JsonNullable.<String>of(idNotEndsWith);
    return this;
  }

   /**
   * Get idNotEndsWith
   * @return idNotEndsWith
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getIdNotEndsWith() {
        return idNotEndsWith.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_ID_NOT_ENDS_WITH)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getIdNotEndsWith_JsonNullable() {
    return idNotEndsWith;
  }
  
  @JsonProperty(JSON_PROPERTY_ID_NOT_ENDS_WITH)
  public void setIdNotEndsWith_JsonNullable(JsonNullable<String> idNotEndsWith) {
    this.idNotEndsWith = idNotEndsWith;
  }

  public void setIdNotEndsWith(String idNotEndsWith) {
    this.idNotEndsWith = JsonNullable.<String>of(idNotEndsWith);
  }


  public ClusterUpgradeHistoryWhereInput idNotIn(List<String> idNotIn) {
    this.idNotIn = JsonNullable.<List<String>>of(idNotIn);
    return this;
  }

  public ClusterUpgradeHistoryWhereInput addIdNotInItem(String idNotInItem) {
    if (this.idNotIn == null || !this.idNotIn.isPresent()) {
      this.idNotIn = JsonNullable.<List<String>>of(new ArrayList<>());
    }
    try {
      this.idNotIn.get().add(idNotInItem);
    } catch (java.util.NoSuchElementException e) {
      // this can never happen, as we make sure above that the value is present
    }
    return this;
  }

   /**
   * Get idNotIn
   * @return idNotIn
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public List<String> getIdNotIn() {
        return idNotIn.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_ID_NOT_IN)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<List<String>> getIdNotIn_JsonNullable() {
    return idNotIn;
  }
  
  @JsonProperty(JSON_PROPERTY_ID_NOT_IN)
  public void setIdNotIn_JsonNullable(JsonNullable<List<String>> idNotIn) {
    this.idNotIn = idNotIn;
  }

  public void setIdNotIn(List<String> idNotIn) {
    this.idNotIn = JsonNullable.<List<String>>of(idNotIn);
  }


  public ClusterUpgradeHistoryWhereInput idNotStartsWith(String idNotStartsWith) {
    this.idNotStartsWith = JsonNullable.<String>of(idNotStartsWith);
    return this;
  }

   /**
   * Get idNotStartsWith
   * @return idNotStartsWith
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getIdNotStartsWith() {
        return idNotStartsWith.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_ID_NOT_STARTS_WITH)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getIdNotStartsWith_JsonNullable() {
    return idNotStartsWith;
  }
  
  @JsonProperty(JSON_PROPERTY_ID_NOT_STARTS_WITH)
  public void setIdNotStartsWith_JsonNullable(JsonNullable<String> idNotStartsWith) {
    this.idNotStartsWith = idNotStartsWith;
  }

  public void setIdNotStartsWith(String idNotStartsWith) {
    this.idNotStartsWith = JsonNullable.<String>of(idNotStartsWith);
  }


  public ClusterUpgradeHistoryWhereInput idStartsWith(String idStartsWith) {
    this.idStartsWith = JsonNullable.<String>of(idStartsWith);
    return this;
  }

   /**
   * Get idStartsWith
   * @return idStartsWith
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getIdStartsWith() {
        return idStartsWith.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_ID_STARTS_WITH)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getIdStartsWith_JsonNullable() {
    return idStartsWith;
  }
  
  @JsonProperty(JSON_PROPERTY_ID_STARTS_WITH)
  public void setIdStartsWith_JsonNullable(JsonNullable<String> idStartsWith) {
    this.idStartsWith = idStartsWith;
  }

  public void setIdStartsWith(String idStartsWith) {
    this.idStartsWith = JsonNullable.<String>of(idStartsWith);
  }


  public ClusterUpgradeHistoryWhereInput localId(String localId) {
    this.localId = JsonNullable.<String>of(localId);
    return this;
  }

   /**
   * Get localId
   * @return localId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getLocalId() {
        return localId.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_LOCAL_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getLocalId_JsonNullable() {
    return localId;
  }
  
  @JsonProperty(JSON_PROPERTY_LOCAL_ID)
  public void setLocalId_JsonNullable(JsonNullable<String> localId) {
    this.localId = localId;
  }

  public void setLocalId(String localId) {
    this.localId = JsonNullable.<String>of(localId);
  }


  public ClusterUpgradeHistoryWhereInput localIdContains(String localIdContains) {
    this.localIdContains = JsonNullable.<String>of(localIdContains);
    return this;
  }

   /**
   * Get localIdContains
   * @return localIdContains
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getLocalIdContains() {
        return localIdContains.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_LOCAL_ID_CONTAINS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getLocalIdContains_JsonNullable() {
    return localIdContains;
  }
  
  @JsonProperty(JSON_PROPERTY_LOCAL_ID_CONTAINS)
  public void setLocalIdContains_JsonNullable(JsonNullable<String> localIdContains) {
    this.localIdContains = localIdContains;
  }

  public void setLocalIdContains(String localIdContains) {
    this.localIdContains = JsonNullable.<String>of(localIdContains);
  }


  public ClusterUpgradeHistoryWhereInput localIdEndsWith(String localIdEndsWith) {
    this.localIdEndsWith = JsonNullable.<String>of(localIdEndsWith);
    return this;
  }

   /**
   * Get localIdEndsWith
   * @return localIdEndsWith
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getLocalIdEndsWith() {
        return localIdEndsWith.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_LOCAL_ID_ENDS_WITH)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getLocalIdEndsWith_JsonNullable() {
    return localIdEndsWith;
  }
  
  @JsonProperty(JSON_PROPERTY_LOCAL_ID_ENDS_WITH)
  public void setLocalIdEndsWith_JsonNullable(JsonNullable<String> localIdEndsWith) {
    this.localIdEndsWith = localIdEndsWith;
  }

  public void setLocalIdEndsWith(String localIdEndsWith) {
    this.localIdEndsWith = JsonNullable.<String>of(localIdEndsWith);
  }


  public ClusterUpgradeHistoryWhereInput localIdGt(String localIdGt) {
    this.localIdGt = JsonNullable.<String>of(localIdGt);
    return this;
  }

   /**
   * Get localIdGt
   * @return localIdGt
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getLocalIdGt() {
        return localIdGt.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_LOCAL_ID_GT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getLocalIdGt_JsonNullable() {
    return localIdGt;
  }
  
  @JsonProperty(JSON_PROPERTY_LOCAL_ID_GT)
  public void setLocalIdGt_JsonNullable(JsonNullable<String> localIdGt) {
    this.localIdGt = localIdGt;
  }

  public void setLocalIdGt(String localIdGt) {
    this.localIdGt = JsonNullable.<String>of(localIdGt);
  }


  public ClusterUpgradeHistoryWhereInput localIdGte(String localIdGte) {
    this.localIdGte = JsonNullable.<String>of(localIdGte);
    return this;
  }

   /**
   * Get localIdGte
   * @return localIdGte
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getLocalIdGte() {
        return localIdGte.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_LOCAL_ID_GTE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getLocalIdGte_JsonNullable() {
    return localIdGte;
  }
  
  @JsonProperty(JSON_PROPERTY_LOCAL_ID_GTE)
  public void setLocalIdGte_JsonNullable(JsonNullable<String> localIdGte) {
    this.localIdGte = localIdGte;
  }

  public void setLocalIdGte(String localIdGte) {
    this.localIdGte = JsonNullable.<String>of(localIdGte);
  }


  public ClusterUpgradeHistoryWhereInput localIdIn(List<String> localIdIn) {
    this.localIdIn = JsonNullable.<List<String>>of(localIdIn);
    return this;
  }

  public ClusterUpgradeHistoryWhereInput addLocalIdInItem(String localIdInItem) {
    if (this.localIdIn == null || !this.localIdIn.isPresent()) {
      this.localIdIn = JsonNullable.<List<String>>of(new ArrayList<>());
    }
    try {
      this.localIdIn.get().add(localIdInItem);
    } catch (java.util.NoSuchElementException e) {
      // this can never happen, as we make sure above that the value is present
    }
    return this;
  }

   /**
   * Get localIdIn
   * @return localIdIn
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public List<String> getLocalIdIn() {
        return localIdIn.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_LOCAL_ID_IN)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<List<String>> getLocalIdIn_JsonNullable() {
    return localIdIn;
  }
  
  @JsonProperty(JSON_PROPERTY_LOCAL_ID_IN)
  public void setLocalIdIn_JsonNullable(JsonNullable<List<String>> localIdIn) {
    this.localIdIn = localIdIn;
  }

  public void setLocalIdIn(List<String> localIdIn) {
    this.localIdIn = JsonNullable.<List<String>>of(localIdIn);
  }


  public ClusterUpgradeHistoryWhereInput localIdLt(String localIdLt) {
    this.localIdLt = JsonNullable.<String>of(localIdLt);
    return this;
  }

   /**
   * Get localIdLt
   * @return localIdLt
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getLocalIdLt() {
        return localIdLt.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_LOCAL_ID_LT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getLocalIdLt_JsonNullable() {
    return localIdLt;
  }
  
  @JsonProperty(JSON_PROPERTY_LOCAL_ID_LT)
  public void setLocalIdLt_JsonNullable(JsonNullable<String> localIdLt) {
    this.localIdLt = localIdLt;
  }

  public void setLocalIdLt(String localIdLt) {
    this.localIdLt = JsonNullable.<String>of(localIdLt);
  }


  public ClusterUpgradeHistoryWhereInput localIdLte(String localIdLte) {
    this.localIdLte = JsonNullable.<String>of(localIdLte);
    return this;
  }

   /**
   * Get localIdLte
   * @return localIdLte
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getLocalIdLte() {
        return localIdLte.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_LOCAL_ID_LTE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getLocalIdLte_JsonNullable() {
    return localIdLte;
  }
  
  @JsonProperty(JSON_PROPERTY_LOCAL_ID_LTE)
  public void setLocalIdLte_JsonNullable(JsonNullable<String> localIdLte) {
    this.localIdLte = localIdLte;
  }

  public void setLocalIdLte(String localIdLte) {
    this.localIdLte = JsonNullable.<String>of(localIdLte);
  }


  public ClusterUpgradeHistoryWhereInput localIdNot(String localIdNot) {
    this.localIdNot = JsonNullable.<String>of(localIdNot);
    return this;
  }

   /**
   * Get localIdNot
   * @return localIdNot
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getLocalIdNot() {
        return localIdNot.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_LOCAL_ID_NOT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getLocalIdNot_JsonNullable() {
    return localIdNot;
  }
  
  @JsonProperty(JSON_PROPERTY_LOCAL_ID_NOT)
  public void setLocalIdNot_JsonNullable(JsonNullable<String> localIdNot) {
    this.localIdNot = localIdNot;
  }

  public void setLocalIdNot(String localIdNot) {
    this.localIdNot = JsonNullable.<String>of(localIdNot);
  }


  public ClusterUpgradeHistoryWhereInput localIdNotContains(String localIdNotContains) {
    this.localIdNotContains = JsonNullable.<String>of(localIdNotContains);
    return this;
  }

   /**
   * Get localIdNotContains
   * @return localIdNotContains
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getLocalIdNotContains() {
        return localIdNotContains.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_LOCAL_ID_NOT_CONTAINS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getLocalIdNotContains_JsonNullable() {
    return localIdNotContains;
  }
  
  @JsonProperty(JSON_PROPERTY_LOCAL_ID_NOT_CONTAINS)
  public void setLocalIdNotContains_JsonNullable(JsonNullable<String> localIdNotContains) {
    this.localIdNotContains = localIdNotContains;
  }

  public void setLocalIdNotContains(String localIdNotContains) {
    this.localIdNotContains = JsonNullable.<String>of(localIdNotContains);
  }


  public ClusterUpgradeHistoryWhereInput localIdNotEndsWith(String localIdNotEndsWith) {
    this.localIdNotEndsWith = JsonNullable.<String>of(localIdNotEndsWith);
    return this;
  }

   /**
   * Get localIdNotEndsWith
   * @return localIdNotEndsWith
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getLocalIdNotEndsWith() {
        return localIdNotEndsWith.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_LOCAL_ID_NOT_ENDS_WITH)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getLocalIdNotEndsWith_JsonNullable() {
    return localIdNotEndsWith;
  }
  
  @JsonProperty(JSON_PROPERTY_LOCAL_ID_NOT_ENDS_WITH)
  public void setLocalIdNotEndsWith_JsonNullable(JsonNullable<String> localIdNotEndsWith) {
    this.localIdNotEndsWith = localIdNotEndsWith;
  }

  public void setLocalIdNotEndsWith(String localIdNotEndsWith) {
    this.localIdNotEndsWith = JsonNullable.<String>of(localIdNotEndsWith);
  }


  public ClusterUpgradeHistoryWhereInput localIdNotIn(List<String> localIdNotIn) {
    this.localIdNotIn = JsonNullable.<List<String>>of(localIdNotIn);
    return this;
  }

  public ClusterUpgradeHistoryWhereInput addLocalIdNotInItem(String localIdNotInItem) {
    if (this.localIdNotIn == null || !this.localIdNotIn.isPresent()) {
      this.localIdNotIn = JsonNullable.<List<String>>of(new ArrayList<>());
    }
    try {
      this.localIdNotIn.get().add(localIdNotInItem);
    } catch (java.util.NoSuchElementException e) {
      // this can never happen, as we make sure above that the value is present
    }
    return this;
  }

   /**
   * Get localIdNotIn
   * @return localIdNotIn
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public List<String> getLocalIdNotIn() {
        return localIdNotIn.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_LOCAL_ID_NOT_IN)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<List<String>> getLocalIdNotIn_JsonNullable() {
    return localIdNotIn;
  }
  
  @JsonProperty(JSON_PROPERTY_LOCAL_ID_NOT_IN)
  public void setLocalIdNotIn_JsonNullable(JsonNullable<List<String>> localIdNotIn) {
    this.localIdNotIn = localIdNotIn;
  }

  public void setLocalIdNotIn(List<String> localIdNotIn) {
    this.localIdNotIn = JsonNullable.<List<String>>of(localIdNotIn);
  }


  public ClusterUpgradeHistoryWhereInput localIdNotStartsWith(String localIdNotStartsWith) {
    this.localIdNotStartsWith = JsonNullable.<String>of(localIdNotStartsWith);
    return this;
  }

   /**
   * Get localIdNotStartsWith
   * @return localIdNotStartsWith
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getLocalIdNotStartsWith() {
        return localIdNotStartsWith.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_LOCAL_ID_NOT_STARTS_WITH)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getLocalIdNotStartsWith_JsonNullable() {
    return localIdNotStartsWith;
  }
  
  @JsonProperty(JSON_PROPERTY_LOCAL_ID_NOT_STARTS_WITH)
  public void setLocalIdNotStartsWith_JsonNullable(JsonNullable<String> localIdNotStartsWith) {
    this.localIdNotStartsWith = localIdNotStartsWith;
  }

  public void setLocalIdNotStartsWith(String localIdNotStartsWith) {
    this.localIdNotStartsWith = JsonNullable.<String>of(localIdNotStartsWith);
  }


  public ClusterUpgradeHistoryWhereInput localIdStartsWith(String localIdStartsWith) {
    this.localIdStartsWith = JsonNullable.<String>of(localIdStartsWith);
    return this;
  }

   /**
   * Get localIdStartsWith
   * @return localIdStartsWith
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getLocalIdStartsWith() {
        return localIdStartsWith.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_LOCAL_ID_STARTS_WITH)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getLocalIdStartsWith_JsonNullable() {
    return localIdStartsWith;
  }
  
  @JsonProperty(JSON_PROPERTY_LOCAL_ID_STARTS_WITH)
  public void setLocalIdStartsWith_JsonNullable(JsonNullable<String> localIdStartsWith) {
    this.localIdStartsWith = localIdStartsWith;
  }

  public void setLocalIdStartsWith(String localIdStartsWith) {
    this.localIdStartsWith = JsonNullable.<String>of(localIdStartsWith);
  }


  public ClusterUpgradeHistoryWhereInput NOT(List<ClusterUpgradeHistoryWhereInput> NOT) {
    this.NOT = JsonNullable.<List<ClusterUpgradeHistoryWhereInput>>of(NOT);
    return this;
  }

  public ClusterUpgradeHistoryWhereInput addNOTItem(ClusterUpgradeHistoryWhereInput NOTItem) {
    if (this.NOT == null || !this.NOT.isPresent()) {
      this.NOT = JsonNullable.<List<ClusterUpgradeHistoryWhereInput>>of(new ArrayList<>());
    }
    try {
      this.NOT.get().add(NOTItem);
    } catch (java.util.NoSuchElementException e) {
      // this can never happen, as we make sure above that the value is present
    }
    return this;
  }

   /**
   * Get NOT
   * @return NOT
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public List<ClusterUpgradeHistoryWhereInput> getNOT() {
        return NOT.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_N_O_T)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<List<ClusterUpgradeHistoryWhereInput>> getNOT_JsonNullable() {
    return NOT;
  }
  
  @JsonProperty(JSON_PROPERTY_N_O_T)
  public void setNOT_JsonNullable(JsonNullable<List<ClusterUpgradeHistoryWhereInput>> NOT) {
    this.NOT = NOT;
  }

  public void setNOT(List<ClusterUpgradeHistoryWhereInput> NOT) {
    this.NOT = JsonNullable.<List<ClusterUpgradeHistoryWhereInput>>of(NOT);
  }


  public ClusterUpgradeHistoryWhereInput OR(List<ClusterUpgradeHistoryWhereInput> OR) {
    this.OR = JsonNullable.<List<ClusterUpgradeHistoryWhereInput>>of(OR);
    return this;
  }

  public ClusterUpgradeHistoryWhereInput addORItem(ClusterUpgradeHistoryWhereInput ORItem) {
    if (this.OR == null || !this.OR.isPresent()) {
      this.OR = JsonNullable.<List<ClusterUpgradeHistoryWhereInput>>of(new ArrayList<>());
    }
    try {
      this.OR.get().add(ORItem);
    } catch (java.util.NoSuchElementException e) {
      // this can never happen, as we make sure above that the value is present
    }
    return this;
  }

   /**
   * Get OR
   * @return OR
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public List<ClusterUpgradeHistoryWhereInput> getOR() {
        return OR.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_O_R)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<List<ClusterUpgradeHistoryWhereInput>> getOR_JsonNullable() {
    return OR;
  }
  
  @JsonProperty(JSON_PROPERTY_O_R)
  public void setOR_JsonNullable(JsonNullable<List<ClusterUpgradeHistoryWhereInput>> OR) {
    this.OR = OR;
  }

  public void setOR(List<ClusterUpgradeHistoryWhereInput> OR) {
    this.OR = JsonNullable.<List<ClusterUpgradeHistoryWhereInput>>of(OR);
  }


  public ClusterUpgradeHistoryWhereInput result(String result) {
    this.result = JsonNullable.<String>of(result);
    return this;
  }

   /**
   * Get result
   * @return result
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getResult() {
        return result.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_RESULT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getResult_JsonNullable() {
    return result;
  }
  
  @JsonProperty(JSON_PROPERTY_RESULT)
  public void setResult_JsonNullable(JsonNullable<String> result) {
    this.result = result;
  }

  public void setResult(String result) {
    this.result = JsonNullable.<String>of(result);
  }


  public ClusterUpgradeHistoryWhereInput resultContains(String resultContains) {
    this.resultContains = JsonNullable.<String>of(resultContains);
    return this;
  }

   /**
   * Get resultContains
   * @return resultContains
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getResultContains() {
        return resultContains.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_RESULT_CONTAINS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getResultContains_JsonNullable() {
    return resultContains;
  }
  
  @JsonProperty(JSON_PROPERTY_RESULT_CONTAINS)
  public void setResultContains_JsonNullable(JsonNullable<String> resultContains) {
    this.resultContains = resultContains;
  }

  public void setResultContains(String resultContains) {
    this.resultContains = JsonNullable.<String>of(resultContains);
  }


  public ClusterUpgradeHistoryWhereInput resultEndsWith(String resultEndsWith) {
    this.resultEndsWith = JsonNullable.<String>of(resultEndsWith);
    return this;
  }

   /**
   * Get resultEndsWith
   * @return resultEndsWith
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getResultEndsWith() {
        return resultEndsWith.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_RESULT_ENDS_WITH)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getResultEndsWith_JsonNullable() {
    return resultEndsWith;
  }
  
  @JsonProperty(JSON_PROPERTY_RESULT_ENDS_WITH)
  public void setResultEndsWith_JsonNullable(JsonNullable<String> resultEndsWith) {
    this.resultEndsWith = resultEndsWith;
  }

  public void setResultEndsWith(String resultEndsWith) {
    this.resultEndsWith = JsonNullable.<String>of(resultEndsWith);
  }


  public ClusterUpgradeHistoryWhereInput resultGt(String resultGt) {
    this.resultGt = JsonNullable.<String>of(resultGt);
    return this;
  }

   /**
   * Get resultGt
   * @return resultGt
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getResultGt() {
        return resultGt.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_RESULT_GT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getResultGt_JsonNullable() {
    return resultGt;
  }
  
  @JsonProperty(JSON_PROPERTY_RESULT_GT)
  public void setResultGt_JsonNullable(JsonNullable<String> resultGt) {
    this.resultGt = resultGt;
  }

  public void setResultGt(String resultGt) {
    this.resultGt = JsonNullable.<String>of(resultGt);
  }


  public ClusterUpgradeHistoryWhereInput resultGte(String resultGte) {
    this.resultGte = JsonNullable.<String>of(resultGte);
    return this;
  }

   /**
   * Get resultGte
   * @return resultGte
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getResultGte() {
        return resultGte.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_RESULT_GTE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getResultGte_JsonNullable() {
    return resultGte;
  }
  
  @JsonProperty(JSON_PROPERTY_RESULT_GTE)
  public void setResultGte_JsonNullable(JsonNullable<String> resultGte) {
    this.resultGte = resultGte;
  }

  public void setResultGte(String resultGte) {
    this.resultGte = JsonNullable.<String>of(resultGte);
  }


  public ClusterUpgradeHistoryWhereInput resultIn(List<String> resultIn) {
    this.resultIn = JsonNullable.<List<String>>of(resultIn);
    return this;
  }

  public ClusterUpgradeHistoryWhereInput addResultInItem(String resultInItem) {
    if (this.resultIn == null || !this.resultIn.isPresent()) {
      this.resultIn = JsonNullable.<List<String>>of(new ArrayList<>());
    }
    try {
      this.resultIn.get().add(resultInItem);
    } catch (java.util.NoSuchElementException e) {
      // this can never happen, as we make sure above that the value is present
    }
    return this;
  }

   /**
   * Get resultIn
   * @return resultIn
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public List<String> getResultIn() {
        return resultIn.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_RESULT_IN)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<List<String>> getResultIn_JsonNullable() {
    return resultIn;
  }
  
  @JsonProperty(JSON_PROPERTY_RESULT_IN)
  public void setResultIn_JsonNullable(JsonNullable<List<String>> resultIn) {
    this.resultIn = resultIn;
  }

  public void setResultIn(List<String> resultIn) {
    this.resultIn = JsonNullable.<List<String>>of(resultIn);
  }


  public ClusterUpgradeHistoryWhereInput resultLt(String resultLt) {
    this.resultLt = JsonNullable.<String>of(resultLt);
    return this;
  }

   /**
   * Get resultLt
   * @return resultLt
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getResultLt() {
        return resultLt.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_RESULT_LT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getResultLt_JsonNullable() {
    return resultLt;
  }
  
  @JsonProperty(JSON_PROPERTY_RESULT_LT)
  public void setResultLt_JsonNullable(JsonNullable<String> resultLt) {
    this.resultLt = resultLt;
  }

  public void setResultLt(String resultLt) {
    this.resultLt = JsonNullable.<String>of(resultLt);
  }


  public ClusterUpgradeHistoryWhereInput resultLte(String resultLte) {
    this.resultLte = JsonNullable.<String>of(resultLte);
    return this;
  }

   /**
   * Get resultLte
   * @return resultLte
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getResultLte() {
        return resultLte.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_RESULT_LTE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getResultLte_JsonNullable() {
    return resultLte;
  }
  
  @JsonProperty(JSON_PROPERTY_RESULT_LTE)
  public void setResultLte_JsonNullable(JsonNullable<String> resultLte) {
    this.resultLte = resultLte;
  }

  public void setResultLte(String resultLte) {
    this.resultLte = JsonNullable.<String>of(resultLte);
  }


  public ClusterUpgradeHistoryWhereInput resultNot(String resultNot) {
    this.resultNot = JsonNullable.<String>of(resultNot);
    return this;
  }

   /**
   * Get resultNot
   * @return resultNot
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getResultNot() {
        return resultNot.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_RESULT_NOT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getResultNot_JsonNullable() {
    return resultNot;
  }
  
  @JsonProperty(JSON_PROPERTY_RESULT_NOT)
  public void setResultNot_JsonNullable(JsonNullable<String> resultNot) {
    this.resultNot = resultNot;
  }

  public void setResultNot(String resultNot) {
    this.resultNot = JsonNullable.<String>of(resultNot);
  }


  public ClusterUpgradeHistoryWhereInput resultNotContains(String resultNotContains) {
    this.resultNotContains = JsonNullable.<String>of(resultNotContains);
    return this;
  }

   /**
   * Get resultNotContains
   * @return resultNotContains
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getResultNotContains() {
        return resultNotContains.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_RESULT_NOT_CONTAINS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getResultNotContains_JsonNullable() {
    return resultNotContains;
  }
  
  @JsonProperty(JSON_PROPERTY_RESULT_NOT_CONTAINS)
  public void setResultNotContains_JsonNullable(JsonNullable<String> resultNotContains) {
    this.resultNotContains = resultNotContains;
  }

  public void setResultNotContains(String resultNotContains) {
    this.resultNotContains = JsonNullable.<String>of(resultNotContains);
  }


  public ClusterUpgradeHistoryWhereInput resultNotEndsWith(String resultNotEndsWith) {
    this.resultNotEndsWith = JsonNullable.<String>of(resultNotEndsWith);
    return this;
  }

   /**
   * Get resultNotEndsWith
   * @return resultNotEndsWith
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getResultNotEndsWith() {
        return resultNotEndsWith.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_RESULT_NOT_ENDS_WITH)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getResultNotEndsWith_JsonNullable() {
    return resultNotEndsWith;
  }
  
  @JsonProperty(JSON_PROPERTY_RESULT_NOT_ENDS_WITH)
  public void setResultNotEndsWith_JsonNullable(JsonNullable<String> resultNotEndsWith) {
    this.resultNotEndsWith = resultNotEndsWith;
  }

  public void setResultNotEndsWith(String resultNotEndsWith) {
    this.resultNotEndsWith = JsonNullable.<String>of(resultNotEndsWith);
  }


  public ClusterUpgradeHistoryWhereInput resultNotIn(List<String> resultNotIn) {
    this.resultNotIn = JsonNullable.<List<String>>of(resultNotIn);
    return this;
  }

  public ClusterUpgradeHistoryWhereInput addResultNotInItem(String resultNotInItem) {
    if (this.resultNotIn == null || !this.resultNotIn.isPresent()) {
      this.resultNotIn = JsonNullable.<List<String>>of(new ArrayList<>());
    }
    try {
      this.resultNotIn.get().add(resultNotInItem);
    } catch (java.util.NoSuchElementException e) {
      // this can never happen, as we make sure above that the value is present
    }
    return this;
  }

   /**
   * Get resultNotIn
   * @return resultNotIn
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public List<String> getResultNotIn() {
        return resultNotIn.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_RESULT_NOT_IN)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<List<String>> getResultNotIn_JsonNullable() {
    return resultNotIn;
  }
  
  @JsonProperty(JSON_PROPERTY_RESULT_NOT_IN)
  public void setResultNotIn_JsonNullable(JsonNullable<List<String>> resultNotIn) {
    this.resultNotIn = resultNotIn;
  }

  public void setResultNotIn(List<String> resultNotIn) {
    this.resultNotIn = JsonNullable.<List<String>>of(resultNotIn);
  }


  public ClusterUpgradeHistoryWhereInput resultNotStartsWith(String resultNotStartsWith) {
    this.resultNotStartsWith = JsonNullable.<String>of(resultNotStartsWith);
    return this;
  }

   /**
   * Get resultNotStartsWith
   * @return resultNotStartsWith
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getResultNotStartsWith() {
        return resultNotStartsWith.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_RESULT_NOT_STARTS_WITH)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getResultNotStartsWith_JsonNullable() {
    return resultNotStartsWith;
  }
  
  @JsonProperty(JSON_PROPERTY_RESULT_NOT_STARTS_WITH)
  public void setResultNotStartsWith_JsonNullable(JsonNullable<String> resultNotStartsWith) {
    this.resultNotStartsWith = resultNotStartsWith;
  }

  public void setResultNotStartsWith(String resultNotStartsWith) {
    this.resultNotStartsWith = JsonNullable.<String>of(resultNotStartsWith);
  }


  public ClusterUpgradeHistoryWhereInput resultStartsWith(String resultStartsWith) {
    this.resultStartsWith = JsonNullable.<String>of(resultStartsWith);
    return this;
  }

   /**
   * Get resultStartsWith
   * @return resultStartsWith
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getResultStartsWith() {
        return resultStartsWith.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_RESULT_STARTS_WITH)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getResultStartsWith_JsonNullable() {
    return resultStartsWith;
  }
  
  @JsonProperty(JSON_PROPERTY_RESULT_STARTS_WITH)
  public void setResultStartsWith_JsonNullable(JsonNullable<String> resultStartsWith) {
    this.resultStartsWith = resultStartsWith;
  }

  public void setResultStartsWith(String resultStartsWith) {
    this.resultStartsWith = JsonNullable.<String>of(resultStartsWith);
  }


  public ClusterUpgradeHistoryWhereInput taskUuid(String taskUuid) {
    this.taskUuid = JsonNullable.<String>of(taskUuid);
    return this;
  }

   /**
   * Get taskUuid
   * @return taskUuid
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getTaskUuid() {
        return taskUuid.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_TASK_UUID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getTaskUuid_JsonNullable() {
    return taskUuid;
  }
  
  @JsonProperty(JSON_PROPERTY_TASK_UUID)
  public void setTaskUuid_JsonNullable(JsonNullable<String> taskUuid) {
    this.taskUuid = taskUuid;
  }

  public void setTaskUuid(String taskUuid) {
    this.taskUuid = JsonNullable.<String>of(taskUuid);
  }


  public ClusterUpgradeHistoryWhereInput taskUuidContains(String taskUuidContains) {
    this.taskUuidContains = JsonNullable.<String>of(taskUuidContains);
    return this;
  }

   /**
   * Get taskUuidContains
   * @return taskUuidContains
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getTaskUuidContains() {
        return taskUuidContains.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_TASK_UUID_CONTAINS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getTaskUuidContains_JsonNullable() {
    return taskUuidContains;
  }
  
  @JsonProperty(JSON_PROPERTY_TASK_UUID_CONTAINS)
  public void setTaskUuidContains_JsonNullable(JsonNullable<String> taskUuidContains) {
    this.taskUuidContains = taskUuidContains;
  }

  public void setTaskUuidContains(String taskUuidContains) {
    this.taskUuidContains = JsonNullable.<String>of(taskUuidContains);
  }


  public ClusterUpgradeHistoryWhereInput taskUuidEndsWith(String taskUuidEndsWith) {
    this.taskUuidEndsWith = JsonNullable.<String>of(taskUuidEndsWith);
    return this;
  }

   /**
   * Get taskUuidEndsWith
   * @return taskUuidEndsWith
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getTaskUuidEndsWith() {
        return taskUuidEndsWith.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_TASK_UUID_ENDS_WITH)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getTaskUuidEndsWith_JsonNullable() {
    return taskUuidEndsWith;
  }
  
  @JsonProperty(JSON_PROPERTY_TASK_UUID_ENDS_WITH)
  public void setTaskUuidEndsWith_JsonNullable(JsonNullable<String> taskUuidEndsWith) {
    this.taskUuidEndsWith = taskUuidEndsWith;
  }

  public void setTaskUuidEndsWith(String taskUuidEndsWith) {
    this.taskUuidEndsWith = JsonNullable.<String>of(taskUuidEndsWith);
  }


  public ClusterUpgradeHistoryWhereInput taskUuidGt(String taskUuidGt) {
    this.taskUuidGt = JsonNullable.<String>of(taskUuidGt);
    return this;
  }

   /**
   * Get taskUuidGt
   * @return taskUuidGt
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getTaskUuidGt() {
        return taskUuidGt.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_TASK_UUID_GT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getTaskUuidGt_JsonNullable() {
    return taskUuidGt;
  }
  
  @JsonProperty(JSON_PROPERTY_TASK_UUID_GT)
  public void setTaskUuidGt_JsonNullable(JsonNullable<String> taskUuidGt) {
    this.taskUuidGt = taskUuidGt;
  }

  public void setTaskUuidGt(String taskUuidGt) {
    this.taskUuidGt = JsonNullable.<String>of(taskUuidGt);
  }


  public ClusterUpgradeHistoryWhereInput taskUuidGte(String taskUuidGte) {
    this.taskUuidGte = JsonNullable.<String>of(taskUuidGte);
    return this;
  }

   /**
   * Get taskUuidGte
   * @return taskUuidGte
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getTaskUuidGte() {
        return taskUuidGte.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_TASK_UUID_GTE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getTaskUuidGte_JsonNullable() {
    return taskUuidGte;
  }
  
  @JsonProperty(JSON_PROPERTY_TASK_UUID_GTE)
  public void setTaskUuidGte_JsonNullable(JsonNullable<String> taskUuidGte) {
    this.taskUuidGte = taskUuidGte;
  }

  public void setTaskUuidGte(String taskUuidGte) {
    this.taskUuidGte = JsonNullable.<String>of(taskUuidGte);
  }


  public ClusterUpgradeHistoryWhereInput taskUuidIn(List<String> taskUuidIn) {
    this.taskUuidIn = JsonNullable.<List<String>>of(taskUuidIn);
    return this;
  }

  public ClusterUpgradeHistoryWhereInput addTaskUuidInItem(String taskUuidInItem) {
    if (this.taskUuidIn == null || !this.taskUuidIn.isPresent()) {
      this.taskUuidIn = JsonNullable.<List<String>>of(new ArrayList<>());
    }
    try {
      this.taskUuidIn.get().add(taskUuidInItem);
    } catch (java.util.NoSuchElementException e) {
      // this can never happen, as we make sure above that the value is present
    }
    return this;
  }

   /**
   * Get taskUuidIn
   * @return taskUuidIn
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public List<String> getTaskUuidIn() {
        return taskUuidIn.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_TASK_UUID_IN)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<List<String>> getTaskUuidIn_JsonNullable() {
    return taskUuidIn;
  }
  
  @JsonProperty(JSON_PROPERTY_TASK_UUID_IN)
  public void setTaskUuidIn_JsonNullable(JsonNullable<List<String>> taskUuidIn) {
    this.taskUuidIn = taskUuidIn;
  }

  public void setTaskUuidIn(List<String> taskUuidIn) {
    this.taskUuidIn = JsonNullable.<List<String>>of(taskUuidIn);
  }


  public ClusterUpgradeHistoryWhereInput taskUuidLt(String taskUuidLt) {
    this.taskUuidLt = JsonNullable.<String>of(taskUuidLt);
    return this;
  }

   /**
   * Get taskUuidLt
   * @return taskUuidLt
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getTaskUuidLt() {
        return taskUuidLt.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_TASK_UUID_LT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getTaskUuidLt_JsonNullable() {
    return taskUuidLt;
  }
  
  @JsonProperty(JSON_PROPERTY_TASK_UUID_LT)
  public void setTaskUuidLt_JsonNullable(JsonNullable<String> taskUuidLt) {
    this.taskUuidLt = taskUuidLt;
  }

  public void setTaskUuidLt(String taskUuidLt) {
    this.taskUuidLt = JsonNullable.<String>of(taskUuidLt);
  }


  public ClusterUpgradeHistoryWhereInput taskUuidLte(String taskUuidLte) {
    this.taskUuidLte = JsonNullable.<String>of(taskUuidLte);
    return this;
  }

   /**
   * Get taskUuidLte
   * @return taskUuidLte
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getTaskUuidLte() {
        return taskUuidLte.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_TASK_UUID_LTE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getTaskUuidLte_JsonNullable() {
    return taskUuidLte;
  }
  
  @JsonProperty(JSON_PROPERTY_TASK_UUID_LTE)
  public void setTaskUuidLte_JsonNullable(JsonNullable<String> taskUuidLte) {
    this.taskUuidLte = taskUuidLte;
  }

  public void setTaskUuidLte(String taskUuidLte) {
    this.taskUuidLte = JsonNullable.<String>of(taskUuidLte);
  }


  public ClusterUpgradeHistoryWhereInput taskUuidNot(String taskUuidNot) {
    this.taskUuidNot = JsonNullable.<String>of(taskUuidNot);
    return this;
  }

   /**
   * Get taskUuidNot
   * @return taskUuidNot
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getTaskUuidNot() {
        return taskUuidNot.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_TASK_UUID_NOT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getTaskUuidNot_JsonNullable() {
    return taskUuidNot;
  }
  
  @JsonProperty(JSON_PROPERTY_TASK_UUID_NOT)
  public void setTaskUuidNot_JsonNullable(JsonNullable<String> taskUuidNot) {
    this.taskUuidNot = taskUuidNot;
  }

  public void setTaskUuidNot(String taskUuidNot) {
    this.taskUuidNot = JsonNullable.<String>of(taskUuidNot);
  }


  public ClusterUpgradeHistoryWhereInput taskUuidNotContains(String taskUuidNotContains) {
    this.taskUuidNotContains = JsonNullable.<String>of(taskUuidNotContains);
    return this;
  }

   /**
   * Get taskUuidNotContains
   * @return taskUuidNotContains
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getTaskUuidNotContains() {
        return taskUuidNotContains.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_TASK_UUID_NOT_CONTAINS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getTaskUuidNotContains_JsonNullable() {
    return taskUuidNotContains;
  }
  
  @JsonProperty(JSON_PROPERTY_TASK_UUID_NOT_CONTAINS)
  public void setTaskUuidNotContains_JsonNullable(JsonNullable<String> taskUuidNotContains) {
    this.taskUuidNotContains = taskUuidNotContains;
  }

  public void setTaskUuidNotContains(String taskUuidNotContains) {
    this.taskUuidNotContains = JsonNullable.<String>of(taskUuidNotContains);
  }


  public ClusterUpgradeHistoryWhereInput taskUuidNotEndsWith(String taskUuidNotEndsWith) {
    this.taskUuidNotEndsWith = JsonNullable.<String>of(taskUuidNotEndsWith);
    return this;
  }

   /**
   * Get taskUuidNotEndsWith
   * @return taskUuidNotEndsWith
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getTaskUuidNotEndsWith() {
        return taskUuidNotEndsWith.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_TASK_UUID_NOT_ENDS_WITH)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getTaskUuidNotEndsWith_JsonNullable() {
    return taskUuidNotEndsWith;
  }
  
  @JsonProperty(JSON_PROPERTY_TASK_UUID_NOT_ENDS_WITH)
  public void setTaskUuidNotEndsWith_JsonNullable(JsonNullable<String> taskUuidNotEndsWith) {
    this.taskUuidNotEndsWith = taskUuidNotEndsWith;
  }

  public void setTaskUuidNotEndsWith(String taskUuidNotEndsWith) {
    this.taskUuidNotEndsWith = JsonNullable.<String>of(taskUuidNotEndsWith);
  }


  public ClusterUpgradeHistoryWhereInput taskUuidNotIn(List<String> taskUuidNotIn) {
    this.taskUuidNotIn = JsonNullable.<List<String>>of(taskUuidNotIn);
    return this;
  }

  public ClusterUpgradeHistoryWhereInput addTaskUuidNotInItem(String taskUuidNotInItem) {
    if (this.taskUuidNotIn == null || !this.taskUuidNotIn.isPresent()) {
      this.taskUuidNotIn = JsonNullable.<List<String>>of(new ArrayList<>());
    }
    try {
      this.taskUuidNotIn.get().add(taskUuidNotInItem);
    } catch (java.util.NoSuchElementException e) {
      // this can never happen, as we make sure above that the value is present
    }
    return this;
  }

   /**
   * Get taskUuidNotIn
   * @return taskUuidNotIn
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public List<String> getTaskUuidNotIn() {
        return taskUuidNotIn.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_TASK_UUID_NOT_IN)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<List<String>> getTaskUuidNotIn_JsonNullable() {
    return taskUuidNotIn;
  }
  
  @JsonProperty(JSON_PROPERTY_TASK_UUID_NOT_IN)
  public void setTaskUuidNotIn_JsonNullable(JsonNullable<List<String>> taskUuidNotIn) {
    this.taskUuidNotIn = taskUuidNotIn;
  }

  public void setTaskUuidNotIn(List<String> taskUuidNotIn) {
    this.taskUuidNotIn = JsonNullable.<List<String>>of(taskUuidNotIn);
  }


  public ClusterUpgradeHistoryWhereInput taskUuidNotStartsWith(String taskUuidNotStartsWith) {
    this.taskUuidNotStartsWith = JsonNullable.<String>of(taskUuidNotStartsWith);
    return this;
  }

   /**
   * Get taskUuidNotStartsWith
   * @return taskUuidNotStartsWith
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getTaskUuidNotStartsWith() {
        return taskUuidNotStartsWith.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_TASK_UUID_NOT_STARTS_WITH)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getTaskUuidNotStartsWith_JsonNullable() {
    return taskUuidNotStartsWith;
  }
  
  @JsonProperty(JSON_PROPERTY_TASK_UUID_NOT_STARTS_WITH)
  public void setTaskUuidNotStartsWith_JsonNullable(JsonNullable<String> taskUuidNotStartsWith) {
    this.taskUuidNotStartsWith = taskUuidNotStartsWith;
  }

  public void setTaskUuidNotStartsWith(String taskUuidNotStartsWith) {
    this.taskUuidNotStartsWith = JsonNullable.<String>of(taskUuidNotStartsWith);
  }


  public ClusterUpgradeHistoryWhereInput taskUuidStartsWith(String taskUuidStartsWith) {
    this.taskUuidStartsWith = JsonNullable.<String>of(taskUuidStartsWith);
    return this;
  }

   /**
   * Get taskUuidStartsWith
   * @return taskUuidStartsWith
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getTaskUuidStartsWith() {
        return taskUuidStartsWith.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_TASK_UUID_STARTS_WITH)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getTaskUuidStartsWith_JsonNullable() {
    return taskUuidStartsWith;
  }
  
  @JsonProperty(JSON_PROPERTY_TASK_UUID_STARTS_WITH)
  public void setTaskUuidStartsWith_JsonNullable(JsonNullable<String> taskUuidStartsWith) {
    this.taskUuidStartsWith = taskUuidStartsWith;
  }

  public void setTaskUuidStartsWith(String taskUuidStartsWith) {
    this.taskUuidStartsWith = JsonNullable.<String>of(taskUuidStartsWith);
  }


  public ClusterUpgradeHistoryWhereInput version(String version) {
    this.version = JsonNullable.<String>of(version);
    return this;
  }

   /**
   * Get version
   * @return version
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getVersion() {
        return version.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_VERSION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getVersion_JsonNullable() {
    return version;
  }
  
  @JsonProperty(JSON_PROPERTY_VERSION)
  public void setVersion_JsonNullable(JsonNullable<String> version) {
    this.version = version;
  }

  public void setVersion(String version) {
    this.version = JsonNullable.<String>of(version);
  }


  public ClusterUpgradeHistoryWhereInput versionContains(String versionContains) {
    this.versionContains = JsonNullable.<String>of(versionContains);
    return this;
  }

   /**
   * Get versionContains
   * @return versionContains
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getVersionContains() {
        return versionContains.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_VERSION_CONTAINS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getVersionContains_JsonNullable() {
    return versionContains;
  }
  
  @JsonProperty(JSON_PROPERTY_VERSION_CONTAINS)
  public void setVersionContains_JsonNullable(JsonNullable<String> versionContains) {
    this.versionContains = versionContains;
  }

  public void setVersionContains(String versionContains) {
    this.versionContains = JsonNullable.<String>of(versionContains);
  }


  public ClusterUpgradeHistoryWhereInput versionEndsWith(String versionEndsWith) {
    this.versionEndsWith = JsonNullable.<String>of(versionEndsWith);
    return this;
  }

   /**
   * Get versionEndsWith
   * @return versionEndsWith
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getVersionEndsWith() {
        return versionEndsWith.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_VERSION_ENDS_WITH)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getVersionEndsWith_JsonNullable() {
    return versionEndsWith;
  }
  
  @JsonProperty(JSON_PROPERTY_VERSION_ENDS_WITH)
  public void setVersionEndsWith_JsonNullable(JsonNullable<String> versionEndsWith) {
    this.versionEndsWith = versionEndsWith;
  }

  public void setVersionEndsWith(String versionEndsWith) {
    this.versionEndsWith = JsonNullable.<String>of(versionEndsWith);
  }


  public ClusterUpgradeHistoryWhereInput versionGt(String versionGt) {
    this.versionGt = JsonNullable.<String>of(versionGt);
    return this;
  }

   /**
   * Get versionGt
   * @return versionGt
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getVersionGt() {
        return versionGt.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_VERSION_GT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getVersionGt_JsonNullable() {
    return versionGt;
  }
  
  @JsonProperty(JSON_PROPERTY_VERSION_GT)
  public void setVersionGt_JsonNullable(JsonNullable<String> versionGt) {
    this.versionGt = versionGt;
  }

  public void setVersionGt(String versionGt) {
    this.versionGt = JsonNullable.<String>of(versionGt);
  }


  public ClusterUpgradeHistoryWhereInput versionGte(String versionGte) {
    this.versionGte = JsonNullable.<String>of(versionGte);
    return this;
  }

   /**
   * Get versionGte
   * @return versionGte
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getVersionGte() {
        return versionGte.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_VERSION_GTE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getVersionGte_JsonNullable() {
    return versionGte;
  }
  
  @JsonProperty(JSON_PROPERTY_VERSION_GTE)
  public void setVersionGte_JsonNullable(JsonNullable<String> versionGte) {
    this.versionGte = versionGte;
  }

  public void setVersionGte(String versionGte) {
    this.versionGte = JsonNullable.<String>of(versionGte);
  }


  public ClusterUpgradeHistoryWhereInput versionIn(List<String> versionIn) {
    this.versionIn = JsonNullable.<List<String>>of(versionIn);
    return this;
  }

  public ClusterUpgradeHistoryWhereInput addVersionInItem(String versionInItem) {
    if (this.versionIn == null || !this.versionIn.isPresent()) {
      this.versionIn = JsonNullable.<List<String>>of(new ArrayList<>());
    }
    try {
      this.versionIn.get().add(versionInItem);
    } catch (java.util.NoSuchElementException e) {
      // this can never happen, as we make sure above that the value is present
    }
    return this;
  }

   /**
   * Get versionIn
   * @return versionIn
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public List<String> getVersionIn() {
        return versionIn.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_VERSION_IN)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<List<String>> getVersionIn_JsonNullable() {
    return versionIn;
  }
  
  @JsonProperty(JSON_PROPERTY_VERSION_IN)
  public void setVersionIn_JsonNullable(JsonNullable<List<String>> versionIn) {
    this.versionIn = versionIn;
  }

  public void setVersionIn(List<String> versionIn) {
    this.versionIn = JsonNullable.<List<String>>of(versionIn);
  }


  public ClusterUpgradeHistoryWhereInput versionLt(String versionLt) {
    this.versionLt = JsonNullable.<String>of(versionLt);
    return this;
  }

   /**
   * Get versionLt
   * @return versionLt
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getVersionLt() {
        return versionLt.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_VERSION_LT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getVersionLt_JsonNullable() {
    return versionLt;
  }
  
  @JsonProperty(JSON_PROPERTY_VERSION_LT)
  public void setVersionLt_JsonNullable(JsonNullable<String> versionLt) {
    this.versionLt = versionLt;
  }

  public void setVersionLt(String versionLt) {
    this.versionLt = JsonNullable.<String>of(versionLt);
  }


  public ClusterUpgradeHistoryWhereInput versionLte(String versionLte) {
    this.versionLte = JsonNullable.<String>of(versionLte);
    return this;
  }

   /**
   * Get versionLte
   * @return versionLte
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getVersionLte() {
        return versionLte.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_VERSION_LTE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getVersionLte_JsonNullable() {
    return versionLte;
  }
  
  @JsonProperty(JSON_PROPERTY_VERSION_LTE)
  public void setVersionLte_JsonNullable(JsonNullable<String> versionLte) {
    this.versionLte = versionLte;
  }

  public void setVersionLte(String versionLte) {
    this.versionLte = JsonNullable.<String>of(versionLte);
  }


  public ClusterUpgradeHistoryWhereInput versionNot(String versionNot) {
    this.versionNot = JsonNullable.<String>of(versionNot);
    return this;
  }

   /**
   * Get versionNot
   * @return versionNot
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getVersionNot() {
        return versionNot.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_VERSION_NOT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getVersionNot_JsonNullable() {
    return versionNot;
  }
  
  @JsonProperty(JSON_PROPERTY_VERSION_NOT)
  public void setVersionNot_JsonNullable(JsonNullable<String> versionNot) {
    this.versionNot = versionNot;
  }

  public void setVersionNot(String versionNot) {
    this.versionNot = JsonNullable.<String>of(versionNot);
  }


  public ClusterUpgradeHistoryWhereInput versionNotContains(String versionNotContains) {
    this.versionNotContains = JsonNullable.<String>of(versionNotContains);
    return this;
  }

   /**
   * Get versionNotContains
   * @return versionNotContains
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getVersionNotContains() {
        return versionNotContains.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_VERSION_NOT_CONTAINS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getVersionNotContains_JsonNullable() {
    return versionNotContains;
  }
  
  @JsonProperty(JSON_PROPERTY_VERSION_NOT_CONTAINS)
  public void setVersionNotContains_JsonNullable(JsonNullable<String> versionNotContains) {
    this.versionNotContains = versionNotContains;
  }

  public void setVersionNotContains(String versionNotContains) {
    this.versionNotContains = JsonNullable.<String>of(versionNotContains);
  }


  public ClusterUpgradeHistoryWhereInput versionNotEndsWith(String versionNotEndsWith) {
    this.versionNotEndsWith = JsonNullable.<String>of(versionNotEndsWith);
    return this;
  }

   /**
   * Get versionNotEndsWith
   * @return versionNotEndsWith
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getVersionNotEndsWith() {
        return versionNotEndsWith.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_VERSION_NOT_ENDS_WITH)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getVersionNotEndsWith_JsonNullable() {
    return versionNotEndsWith;
  }
  
  @JsonProperty(JSON_PROPERTY_VERSION_NOT_ENDS_WITH)
  public void setVersionNotEndsWith_JsonNullable(JsonNullable<String> versionNotEndsWith) {
    this.versionNotEndsWith = versionNotEndsWith;
  }

  public void setVersionNotEndsWith(String versionNotEndsWith) {
    this.versionNotEndsWith = JsonNullable.<String>of(versionNotEndsWith);
  }


  public ClusterUpgradeHistoryWhereInput versionNotIn(List<String> versionNotIn) {
    this.versionNotIn = JsonNullable.<List<String>>of(versionNotIn);
    return this;
  }

  public ClusterUpgradeHistoryWhereInput addVersionNotInItem(String versionNotInItem) {
    if (this.versionNotIn == null || !this.versionNotIn.isPresent()) {
      this.versionNotIn = JsonNullable.<List<String>>of(new ArrayList<>());
    }
    try {
      this.versionNotIn.get().add(versionNotInItem);
    } catch (java.util.NoSuchElementException e) {
      // this can never happen, as we make sure above that the value is present
    }
    return this;
  }

   /**
   * Get versionNotIn
   * @return versionNotIn
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public List<String> getVersionNotIn() {
        return versionNotIn.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_VERSION_NOT_IN)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<List<String>> getVersionNotIn_JsonNullable() {
    return versionNotIn;
  }
  
  @JsonProperty(JSON_PROPERTY_VERSION_NOT_IN)
  public void setVersionNotIn_JsonNullable(JsonNullable<List<String>> versionNotIn) {
    this.versionNotIn = versionNotIn;
  }

  public void setVersionNotIn(List<String> versionNotIn) {
    this.versionNotIn = JsonNullable.<List<String>>of(versionNotIn);
  }


  public ClusterUpgradeHistoryWhereInput versionNotStartsWith(String versionNotStartsWith) {
    this.versionNotStartsWith = JsonNullable.<String>of(versionNotStartsWith);
    return this;
  }

   /**
   * Get versionNotStartsWith
   * @return versionNotStartsWith
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getVersionNotStartsWith() {
        return versionNotStartsWith.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_VERSION_NOT_STARTS_WITH)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getVersionNotStartsWith_JsonNullable() {
    return versionNotStartsWith;
  }
  
  @JsonProperty(JSON_PROPERTY_VERSION_NOT_STARTS_WITH)
  public void setVersionNotStartsWith_JsonNullable(JsonNullable<String> versionNotStartsWith) {
    this.versionNotStartsWith = versionNotStartsWith;
  }

  public void setVersionNotStartsWith(String versionNotStartsWith) {
    this.versionNotStartsWith = JsonNullable.<String>of(versionNotStartsWith);
  }


  public ClusterUpgradeHistoryWhereInput versionStartsWith(String versionStartsWith) {
    this.versionStartsWith = JsonNullable.<String>of(versionStartsWith);
    return this;
  }

   /**
   * Get versionStartsWith
   * @return versionStartsWith
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getVersionStartsWith() {
        return versionStartsWith.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_VERSION_STARTS_WITH)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getVersionStartsWith_JsonNullable() {
    return versionStartsWith;
  }
  
  @JsonProperty(JSON_PROPERTY_VERSION_STARTS_WITH)
  public void setVersionStartsWith_JsonNullable(JsonNullable<String> versionStartsWith) {
    this.versionStartsWith = versionStartsWith;
  }

  public void setVersionStartsWith(String versionStartsWith) {
    this.versionStartsWith = JsonNullable.<String>of(versionStartsWith);
  }


  /**
   * Return true if this ClusterUpgradeHistoryWhereInput object is equal to o.
   */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ClusterUpgradeHistoryWhereInput clusterUpgradeHistoryWhereInput = (ClusterUpgradeHistoryWhereInput) o;
    return equalsNullable(this.AND, clusterUpgradeHistoryWhereInput.AND) &&
        equalsNullable(this.cluster, clusterUpgradeHistoryWhereInput.cluster) &&
        equalsNullable(this.date, clusterUpgradeHistoryWhereInput.date) &&
        equalsNullable(this.dateGt, clusterUpgradeHistoryWhereInput.dateGt) &&
        equalsNullable(this.dateGte, clusterUpgradeHistoryWhereInput.dateGte) &&
        equalsNullable(this.dateIn, clusterUpgradeHistoryWhereInput.dateIn) &&
        equalsNullable(this.dateLt, clusterUpgradeHistoryWhereInput.dateLt) &&
        equalsNullable(this.dateLte, clusterUpgradeHistoryWhereInput.dateLte) &&
        equalsNullable(this.dateNot, clusterUpgradeHistoryWhereInput.dateNot) &&
        equalsNullable(this.dateNotIn, clusterUpgradeHistoryWhereInput.dateNotIn) &&
        equalsNullable(this.id, clusterUpgradeHistoryWhereInput.id) &&
        equalsNullable(this.idContains, clusterUpgradeHistoryWhereInput.idContains) &&
        equalsNullable(this.idEndsWith, clusterUpgradeHistoryWhereInput.idEndsWith) &&
        equalsNullable(this.idGt, clusterUpgradeHistoryWhereInput.idGt) &&
        equalsNullable(this.idGte, clusterUpgradeHistoryWhereInput.idGte) &&
        equalsNullable(this.idIn, clusterUpgradeHistoryWhereInput.idIn) &&
        equalsNullable(this.idLt, clusterUpgradeHistoryWhereInput.idLt) &&
        equalsNullable(this.idLte, clusterUpgradeHistoryWhereInput.idLte) &&
        equalsNullable(this.idNot, clusterUpgradeHistoryWhereInput.idNot) &&
        equalsNullable(this.idNotContains, clusterUpgradeHistoryWhereInput.idNotContains) &&
        equalsNullable(this.idNotEndsWith, clusterUpgradeHistoryWhereInput.idNotEndsWith) &&
        equalsNullable(this.idNotIn, clusterUpgradeHistoryWhereInput.idNotIn) &&
        equalsNullable(this.idNotStartsWith, clusterUpgradeHistoryWhereInput.idNotStartsWith) &&
        equalsNullable(this.idStartsWith, clusterUpgradeHistoryWhereInput.idStartsWith) &&
        equalsNullable(this.localId, clusterUpgradeHistoryWhereInput.localId) &&
        equalsNullable(this.localIdContains, clusterUpgradeHistoryWhereInput.localIdContains) &&
        equalsNullable(this.localIdEndsWith, clusterUpgradeHistoryWhereInput.localIdEndsWith) &&
        equalsNullable(this.localIdGt, clusterUpgradeHistoryWhereInput.localIdGt) &&
        equalsNullable(this.localIdGte, clusterUpgradeHistoryWhereInput.localIdGte) &&
        equalsNullable(this.localIdIn, clusterUpgradeHistoryWhereInput.localIdIn) &&
        equalsNullable(this.localIdLt, clusterUpgradeHistoryWhereInput.localIdLt) &&
        equalsNullable(this.localIdLte, clusterUpgradeHistoryWhereInput.localIdLte) &&
        equalsNullable(this.localIdNot, clusterUpgradeHistoryWhereInput.localIdNot) &&
        equalsNullable(this.localIdNotContains, clusterUpgradeHistoryWhereInput.localIdNotContains) &&
        equalsNullable(this.localIdNotEndsWith, clusterUpgradeHistoryWhereInput.localIdNotEndsWith) &&
        equalsNullable(this.localIdNotIn, clusterUpgradeHistoryWhereInput.localIdNotIn) &&
        equalsNullable(this.localIdNotStartsWith, clusterUpgradeHistoryWhereInput.localIdNotStartsWith) &&
        equalsNullable(this.localIdStartsWith, clusterUpgradeHistoryWhereInput.localIdStartsWith) &&
        equalsNullable(this.NOT, clusterUpgradeHistoryWhereInput.NOT) &&
        equalsNullable(this.OR, clusterUpgradeHistoryWhereInput.OR) &&
        equalsNullable(this.result, clusterUpgradeHistoryWhereInput.result) &&
        equalsNullable(this.resultContains, clusterUpgradeHistoryWhereInput.resultContains) &&
        equalsNullable(this.resultEndsWith, clusterUpgradeHistoryWhereInput.resultEndsWith) &&
        equalsNullable(this.resultGt, clusterUpgradeHistoryWhereInput.resultGt) &&
        equalsNullable(this.resultGte, clusterUpgradeHistoryWhereInput.resultGte) &&
        equalsNullable(this.resultIn, clusterUpgradeHistoryWhereInput.resultIn) &&
        equalsNullable(this.resultLt, clusterUpgradeHistoryWhereInput.resultLt) &&
        equalsNullable(this.resultLte, clusterUpgradeHistoryWhereInput.resultLte) &&
        equalsNullable(this.resultNot, clusterUpgradeHistoryWhereInput.resultNot) &&
        equalsNullable(this.resultNotContains, clusterUpgradeHistoryWhereInput.resultNotContains) &&
        equalsNullable(this.resultNotEndsWith, clusterUpgradeHistoryWhereInput.resultNotEndsWith) &&
        equalsNullable(this.resultNotIn, clusterUpgradeHistoryWhereInput.resultNotIn) &&
        equalsNullable(this.resultNotStartsWith, clusterUpgradeHistoryWhereInput.resultNotStartsWith) &&
        equalsNullable(this.resultStartsWith, clusterUpgradeHistoryWhereInput.resultStartsWith) &&
        equalsNullable(this.taskUuid, clusterUpgradeHistoryWhereInput.taskUuid) &&
        equalsNullable(this.taskUuidContains, clusterUpgradeHistoryWhereInput.taskUuidContains) &&
        equalsNullable(this.taskUuidEndsWith, clusterUpgradeHistoryWhereInput.taskUuidEndsWith) &&
        equalsNullable(this.taskUuidGt, clusterUpgradeHistoryWhereInput.taskUuidGt) &&
        equalsNullable(this.taskUuidGte, clusterUpgradeHistoryWhereInput.taskUuidGte) &&
        equalsNullable(this.taskUuidIn, clusterUpgradeHistoryWhereInput.taskUuidIn) &&
        equalsNullable(this.taskUuidLt, clusterUpgradeHistoryWhereInput.taskUuidLt) &&
        equalsNullable(this.taskUuidLte, clusterUpgradeHistoryWhereInput.taskUuidLte) &&
        equalsNullable(this.taskUuidNot, clusterUpgradeHistoryWhereInput.taskUuidNot) &&
        equalsNullable(this.taskUuidNotContains, clusterUpgradeHistoryWhereInput.taskUuidNotContains) &&
        equalsNullable(this.taskUuidNotEndsWith, clusterUpgradeHistoryWhereInput.taskUuidNotEndsWith) &&
        equalsNullable(this.taskUuidNotIn, clusterUpgradeHistoryWhereInput.taskUuidNotIn) &&
        equalsNullable(this.taskUuidNotStartsWith, clusterUpgradeHistoryWhereInput.taskUuidNotStartsWith) &&
        equalsNullable(this.taskUuidStartsWith, clusterUpgradeHistoryWhereInput.taskUuidStartsWith) &&
        equalsNullable(this.version, clusterUpgradeHistoryWhereInput.version) &&
        equalsNullable(this.versionContains, clusterUpgradeHistoryWhereInput.versionContains) &&
        equalsNullable(this.versionEndsWith, clusterUpgradeHistoryWhereInput.versionEndsWith) &&
        equalsNullable(this.versionGt, clusterUpgradeHistoryWhereInput.versionGt) &&
        equalsNullable(this.versionGte, clusterUpgradeHistoryWhereInput.versionGte) &&
        equalsNullable(this.versionIn, clusterUpgradeHistoryWhereInput.versionIn) &&
        equalsNullable(this.versionLt, clusterUpgradeHistoryWhereInput.versionLt) &&
        equalsNullable(this.versionLte, clusterUpgradeHistoryWhereInput.versionLte) &&
        equalsNullable(this.versionNot, clusterUpgradeHistoryWhereInput.versionNot) &&
        equalsNullable(this.versionNotContains, clusterUpgradeHistoryWhereInput.versionNotContains) &&
        equalsNullable(this.versionNotEndsWith, clusterUpgradeHistoryWhereInput.versionNotEndsWith) &&
        equalsNullable(this.versionNotIn, clusterUpgradeHistoryWhereInput.versionNotIn) &&
        equalsNullable(this.versionNotStartsWith, clusterUpgradeHistoryWhereInput.versionNotStartsWith) &&
        equalsNullable(this.versionStartsWith, clusterUpgradeHistoryWhereInput.versionStartsWith);
  }

  private static <T> boolean equalsNullable(JsonNullable<T> a, JsonNullable<T> b) {
    return a == b || (a != null && b != null && a.isPresent() && b.isPresent() && Objects.deepEquals(a.get(), b.get()));
  }

  @Override
  public int hashCode() {
    return Objects.hash(hashCodeNullable(AND), hashCodeNullable(cluster), hashCodeNullable(date), hashCodeNullable(dateGt), hashCodeNullable(dateGte), hashCodeNullable(dateIn), hashCodeNullable(dateLt), hashCodeNullable(dateLte), hashCodeNullable(dateNot), hashCodeNullable(dateNotIn), hashCodeNullable(id), hashCodeNullable(idContains), hashCodeNullable(idEndsWith), hashCodeNullable(idGt), hashCodeNullable(idGte), hashCodeNullable(idIn), hashCodeNullable(idLt), hashCodeNullable(idLte), hashCodeNullable(idNot), hashCodeNullable(idNotContains), hashCodeNullable(idNotEndsWith), hashCodeNullable(idNotIn), hashCodeNullable(idNotStartsWith), hashCodeNullable(idStartsWith), hashCodeNullable(localId), hashCodeNullable(localIdContains), hashCodeNullable(localIdEndsWith), hashCodeNullable(localIdGt), hashCodeNullable(localIdGte), hashCodeNullable(localIdIn), hashCodeNullable(localIdLt), hashCodeNullable(localIdLte), hashCodeNullable(localIdNot), hashCodeNullable(localIdNotContains), hashCodeNullable(localIdNotEndsWith), hashCodeNullable(localIdNotIn), hashCodeNullable(localIdNotStartsWith), hashCodeNullable(localIdStartsWith), hashCodeNullable(NOT), hashCodeNullable(OR), hashCodeNullable(result), hashCodeNullable(resultContains), hashCodeNullable(resultEndsWith), hashCodeNullable(resultGt), hashCodeNullable(resultGte), hashCodeNullable(resultIn), hashCodeNullable(resultLt), hashCodeNullable(resultLte), hashCodeNullable(resultNot), hashCodeNullable(resultNotContains), hashCodeNullable(resultNotEndsWith), hashCodeNullable(resultNotIn), hashCodeNullable(resultNotStartsWith), hashCodeNullable(resultStartsWith), hashCodeNullable(taskUuid), hashCodeNullable(taskUuidContains), hashCodeNullable(taskUuidEndsWith), hashCodeNullable(taskUuidGt), hashCodeNullable(taskUuidGte), hashCodeNullable(taskUuidIn), hashCodeNullable(taskUuidLt), hashCodeNullable(taskUuidLte), hashCodeNullable(taskUuidNot), hashCodeNullable(taskUuidNotContains), hashCodeNullable(taskUuidNotEndsWith), hashCodeNullable(taskUuidNotIn), hashCodeNullable(taskUuidNotStartsWith), hashCodeNullable(taskUuidStartsWith), hashCodeNullable(version), hashCodeNullable(versionContains), hashCodeNullable(versionEndsWith), hashCodeNullable(versionGt), hashCodeNullable(versionGte), hashCodeNullable(versionIn), hashCodeNullable(versionLt), hashCodeNullable(versionLte), hashCodeNullable(versionNot), hashCodeNullable(versionNotContains), hashCodeNullable(versionNotEndsWith), hashCodeNullable(versionNotIn), hashCodeNullable(versionNotStartsWith), hashCodeNullable(versionStartsWith));
  }

  private static <T> int hashCodeNullable(JsonNullable<T> a) {
    if (a == null) {
      return 1;
    }
    return a.isPresent() ? Arrays.deepHashCode(new Object[]{a.get()}) : 31;
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ClusterUpgradeHistoryWhereInput {\n");
    sb.append("    AND: ").append(toIndentedString(AND)).append("\n");
    sb.append("    cluster: ").append(toIndentedString(cluster)).append("\n");
    sb.append("    date: ").append(toIndentedString(date)).append("\n");
    sb.append("    dateGt: ").append(toIndentedString(dateGt)).append("\n");
    sb.append("    dateGte: ").append(toIndentedString(dateGte)).append("\n");
    sb.append("    dateIn: ").append(toIndentedString(dateIn)).append("\n");
    sb.append("    dateLt: ").append(toIndentedString(dateLt)).append("\n");
    sb.append("    dateLte: ").append(toIndentedString(dateLte)).append("\n");
    sb.append("    dateNot: ").append(toIndentedString(dateNot)).append("\n");
    sb.append("    dateNotIn: ").append(toIndentedString(dateNotIn)).append("\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    idContains: ").append(toIndentedString(idContains)).append("\n");
    sb.append("    idEndsWith: ").append(toIndentedString(idEndsWith)).append("\n");
    sb.append("    idGt: ").append(toIndentedString(idGt)).append("\n");
    sb.append("    idGte: ").append(toIndentedString(idGte)).append("\n");
    sb.append("    idIn: ").append(toIndentedString(idIn)).append("\n");
    sb.append("    idLt: ").append(toIndentedString(idLt)).append("\n");
    sb.append("    idLte: ").append(toIndentedString(idLte)).append("\n");
    sb.append("    idNot: ").append(toIndentedString(idNot)).append("\n");
    sb.append("    idNotContains: ").append(toIndentedString(idNotContains)).append("\n");
    sb.append("    idNotEndsWith: ").append(toIndentedString(idNotEndsWith)).append("\n");
    sb.append("    idNotIn: ").append(toIndentedString(idNotIn)).append("\n");
    sb.append("    idNotStartsWith: ").append(toIndentedString(idNotStartsWith)).append("\n");
    sb.append("    idStartsWith: ").append(toIndentedString(idStartsWith)).append("\n");
    sb.append("    localId: ").append(toIndentedString(localId)).append("\n");
    sb.append("    localIdContains: ").append(toIndentedString(localIdContains)).append("\n");
    sb.append("    localIdEndsWith: ").append(toIndentedString(localIdEndsWith)).append("\n");
    sb.append("    localIdGt: ").append(toIndentedString(localIdGt)).append("\n");
    sb.append("    localIdGte: ").append(toIndentedString(localIdGte)).append("\n");
    sb.append("    localIdIn: ").append(toIndentedString(localIdIn)).append("\n");
    sb.append("    localIdLt: ").append(toIndentedString(localIdLt)).append("\n");
    sb.append("    localIdLte: ").append(toIndentedString(localIdLte)).append("\n");
    sb.append("    localIdNot: ").append(toIndentedString(localIdNot)).append("\n");
    sb.append("    localIdNotContains: ").append(toIndentedString(localIdNotContains)).append("\n");
    sb.append("    localIdNotEndsWith: ").append(toIndentedString(localIdNotEndsWith)).append("\n");
    sb.append("    localIdNotIn: ").append(toIndentedString(localIdNotIn)).append("\n");
    sb.append("    localIdNotStartsWith: ").append(toIndentedString(localIdNotStartsWith)).append("\n");
    sb.append("    localIdStartsWith: ").append(toIndentedString(localIdStartsWith)).append("\n");
    sb.append("    NOT: ").append(toIndentedString(NOT)).append("\n");
    sb.append("    OR: ").append(toIndentedString(OR)).append("\n");
    sb.append("    result: ").append(toIndentedString(result)).append("\n");
    sb.append("    resultContains: ").append(toIndentedString(resultContains)).append("\n");
    sb.append("    resultEndsWith: ").append(toIndentedString(resultEndsWith)).append("\n");
    sb.append("    resultGt: ").append(toIndentedString(resultGt)).append("\n");
    sb.append("    resultGte: ").append(toIndentedString(resultGte)).append("\n");
    sb.append("    resultIn: ").append(toIndentedString(resultIn)).append("\n");
    sb.append("    resultLt: ").append(toIndentedString(resultLt)).append("\n");
    sb.append("    resultLte: ").append(toIndentedString(resultLte)).append("\n");
    sb.append("    resultNot: ").append(toIndentedString(resultNot)).append("\n");
    sb.append("    resultNotContains: ").append(toIndentedString(resultNotContains)).append("\n");
    sb.append("    resultNotEndsWith: ").append(toIndentedString(resultNotEndsWith)).append("\n");
    sb.append("    resultNotIn: ").append(toIndentedString(resultNotIn)).append("\n");
    sb.append("    resultNotStartsWith: ").append(toIndentedString(resultNotStartsWith)).append("\n");
    sb.append("    resultStartsWith: ").append(toIndentedString(resultStartsWith)).append("\n");
    sb.append("    taskUuid: ").append(toIndentedString(taskUuid)).append("\n");
    sb.append("    taskUuidContains: ").append(toIndentedString(taskUuidContains)).append("\n");
    sb.append("    taskUuidEndsWith: ").append(toIndentedString(taskUuidEndsWith)).append("\n");
    sb.append("    taskUuidGt: ").append(toIndentedString(taskUuidGt)).append("\n");
    sb.append("    taskUuidGte: ").append(toIndentedString(taskUuidGte)).append("\n");
    sb.append("    taskUuidIn: ").append(toIndentedString(taskUuidIn)).append("\n");
    sb.append("    taskUuidLt: ").append(toIndentedString(taskUuidLt)).append("\n");
    sb.append("    taskUuidLte: ").append(toIndentedString(taskUuidLte)).append("\n");
    sb.append("    taskUuidNot: ").append(toIndentedString(taskUuidNot)).append("\n");
    sb.append("    taskUuidNotContains: ").append(toIndentedString(taskUuidNotContains)).append("\n");
    sb.append("    taskUuidNotEndsWith: ").append(toIndentedString(taskUuidNotEndsWith)).append("\n");
    sb.append("    taskUuidNotIn: ").append(toIndentedString(taskUuidNotIn)).append("\n");
    sb.append("    taskUuidNotStartsWith: ").append(toIndentedString(taskUuidNotStartsWith)).append("\n");
    sb.append("    taskUuidStartsWith: ").append(toIndentedString(taskUuidStartsWith)).append("\n");
    sb.append("    version: ").append(toIndentedString(version)).append("\n");
    sb.append("    versionContains: ").append(toIndentedString(versionContains)).append("\n");
    sb.append("    versionEndsWith: ").append(toIndentedString(versionEndsWith)).append("\n");
    sb.append("    versionGt: ").append(toIndentedString(versionGt)).append("\n");
    sb.append("    versionGte: ").append(toIndentedString(versionGte)).append("\n");
    sb.append("    versionIn: ").append(toIndentedString(versionIn)).append("\n");
    sb.append("    versionLt: ").append(toIndentedString(versionLt)).append("\n");
    sb.append("    versionLte: ").append(toIndentedString(versionLte)).append("\n");
    sb.append("    versionNot: ").append(toIndentedString(versionNot)).append("\n");
    sb.append("    versionNotContains: ").append(toIndentedString(versionNotContains)).append("\n");
    sb.append("    versionNotEndsWith: ").append(toIndentedString(versionNotEndsWith)).append("\n");
    sb.append("    versionNotIn: ").append(toIndentedString(versionNotIn)).append("\n");
    sb.append("    versionNotStartsWith: ").append(toIndentedString(versionNotStartsWith)).append("\n");
    sb.append("    versionStartsWith: ").append(toIndentedString(versionStartsWith)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

