/*
 * Tower SDK API
 * cloudtower operation API and SDK
 *
 * The version of the OpenAPI document: 1.7.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.smartx.tower.model;

import java.util.Objects;
import java.util.Arrays;
import java.util.Map;
import java.util.HashMap;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import com.smartx.tower.model.AlertDisk;
import com.smartx.tower.model.AlertRuleCluster;
import com.smartx.tower.model.UsbDeviceStatus;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import org.openapitools.jackson.nullable.JsonNullable;
import com.fasterxml.jackson.annotation.JsonIgnore;
import org.openapitools.jackson.nullable.JsonNullable;
import java.util.NoSuchElementException;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;


/**
 * UsbDevice
 */
@JsonPropertyOrder({
  UsbDevice.JSON_PROPERTY_BINDED,
  UsbDevice.JSON_PROPERTY_DESCRIPTION,
  UsbDevice.JSON_PROPERTY_HOST,
  UsbDevice.JSON_PROPERTY_ID,
  UsbDevice.JSON_PROPERTY_LOCAL_CREATED_AT,
  UsbDevice.JSON_PROPERTY_LOCAL_ID,
  UsbDevice.JSON_PROPERTY_MANUFACTURER,
  UsbDevice.JSON_PROPERTY_NAME,
  UsbDevice.JSON_PROPERTY_SIZE,
  UsbDevice.JSON_PROPERTY_STATUS,
  UsbDevice.JSON_PROPERTY_USB_TYPE,
  UsbDevice.JSON_PROPERTY_VM
})
@javax.annotation.processing.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2021-10-27T15:59:14.939791800+08:00[Asia/Shanghai]")
public class UsbDevice {
  public static final String JSON_PROPERTY_BINDED = "binded";
  private Boolean binded;

  public static final String JSON_PROPERTY_DESCRIPTION = "description";
  private String description;

  public static final String JSON_PROPERTY_HOST = "host";
  private AlertRuleCluster host;

  public static final String JSON_PROPERTY_ID = "id";
  private String id;

  public static final String JSON_PROPERTY_LOCAL_CREATED_AT = "local_created_at";
  private String localCreatedAt;

  public static final String JSON_PROPERTY_LOCAL_ID = "local_id";
  private String localId;

  public static final String JSON_PROPERTY_MANUFACTURER = "manufacturer";
  private String manufacturer;

  public static final String JSON_PROPERTY_NAME = "name";
  private String name;

  public static final String JSON_PROPERTY_SIZE = "size";
  private Double size;

  public static final String JSON_PROPERTY_STATUS = "status";
  private UsbDeviceStatus status;

  public static final String JSON_PROPERTY_USB_TYPE = "usb_type";
  private String usbType;

  public static final String JSON_PROPERTY_VM = "vm";
  private JsonNullable<AlertDisk> vm = JsonNullable.<AlertDisk>undefined();


  public UsbDevice binded(Boolean binded) {
    this.binded = binded;
    return this;
  }

   /**
   * Get binded
   * @return binded
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")
  @JsonProperty(JSON_PROPERTY_BINDED)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public Boolean getBinded() {
    return binded;
  }


  @JsonProperty(JSON_PROPERTY_BINDED)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setBinded(Boolean binded) {
    this.binded = binded;
  }


  public UsbDevice description(String description) {
    this.description = description;
    return this;
  }

   /**
   * Get description
   * @return description
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")
  @JsonProperty(JSON_PROPERTY_DESCRIPTION)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getDescription() {
    return description;
  }


  @JsonProperty(JSON_PROPERTY_DESCRIPTION)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setDescription(String description) {
    this.description = description;
  }


  public UsbDevice host(AlertRuleCluster host) {
    this.host = host;
    return this;
  }

   /**
   * Get host
   * @return host
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")
  @JsonProperty(JSON_PROPERTY_HOST)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public AlertRuleCluster getHost() {
    return host;
  }


  @JsonProperty(JSON_PROPERTY_HOST)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setHost(AlertRuleCluster host) {
    this.host = host;
  }


  public UsbDevice id(String id) {
    this.id = id;
    return this;
  }

   /**
   * Get id
   * @return id
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")
  @JsonProperty(JSON_PROPERTY_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getId() {
    return id;
  }


  @JsonProperty(JSON_PROPERTY_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setId(String id) {
    this.id = id;
  }


  public UsbDevice localCreatedAt(String localCreatedAt) {
    this.localCreatedAt = localCreatedAt;
    return this;
  }

   /**
   * Get localCreatedAt
   * @return localCreatedAt
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")
  @JsonProperty(JSON_PROPERTY_LOCAL_CREATED_AT)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getLocalCreatedAt() {
    return localCreatedAt;
  }


  @JsonProperty(JSON_PROPERTY_LOCAL_CREATED_AT)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setLocalCreatedAt(String localCreatedAt) {
    this.localCreatedAt = localCreatedAt;
  }


  public UsbDevice localId(String localId) {
    this.localId = localId;
    return this;
  }

   /**
   * Get localId
   * @return localId
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")
  @JsonProperty(JSON_PROPERTY_LOCAL_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getLocalId() {
    return localId;
  }


  @JsonProperty(JSON_PROPERTY_LOCAL_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setLocalId(String localId) {
    this.localId = localId;
  }


  public UsbDevice manufacturer(String manufacturer) {
    this.manufacturer = manufacturer;
    return this;
  }

   /**
   * Get manufacturer
   * @return manufacturer
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")
  @JsonProperty(JSON_PROPERTY_MANUFACTURER)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getManufacturer() {
    return manufacturer;
  }


  @JsonProperty(JSON_PROPERTY_MANUFACTURER)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setManufacturer(String manufacturer) {
    this.manufacturer = manufacturer;
  }


  public UsbDevice name(String name) {
    this.name = name;
    return this;
  }

   /**
   * Get name
   * @return name
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")
  @JsonProperty(JSON_PROPERTY_NAME)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getName() {
    return name;
  }


  @JsonProperty(JSON_PROPERTY_NAME)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setName(String name) {
    this.name = name;
  }


  public UsbDevice size(Double size) {
    this.size = size;
    return this;
  }

   /**
   * Get size
   * @return size
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")
  @JsonProperty(JSON_PROPERTY_SIZE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public Double getSize() {
    return size;
  }


  @JsonProperty(JSON_PROPERTY_SIZE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setSize(Double size) {
    this.size = size;
  }


  public UsbDevice status(UsbDeviceStatus status) {
    this.status = status;
    return this;
  }

   /**
   * Get status
   * @return status
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")
  @JsonProperty(JSON_PROPERTY_STATUS)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public UsbDeviceStatus getStatus() {
    return status;
  }


  @JsonProperty(JSON_PROPERTY_STATUS)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setStatus(UsbDeviceStatus status) {
    this.status = status;
  }


  public UsbDevice usbType(String usbType) {
    this.usbType = usbType;
    return this;
  }

   /**
   * Get usbType
   * @return usbType
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")
  @JsonProperty(JSON_PROPERTY_USB_TYPE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getUsbType() {
    return usbType;
  }


  @JsonProperty(JSON_PROPERTY_USB_TYPE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setUsbType(String usbType) {
    this.usbType = usbType;
  }


  public UsbDevice vm(AlertDisk vm) {
    this.vm = JsonNullable.<AlertDisk>of(vm);
    return this;
  }

   /**
   * Get vm
   * @return vm
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public AlertDisk getVm() {
        return vm.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_VM)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<AlertDisk> getVm_JsonNullable() {
    return vm;
  }
  
  @JsonProperty(JSON_PROPERTY_VM)
  public void setVm_JsonNullable(JsonNullable<AlertDisk> vm) {
    this.vm = vm;
  }

  public void setVm(AlertDisk vm) {
    this.vm = JsonNullable.<AlertDisk>of(vm);
  }


  /**
   * Return true if this UsbDevice object is equal to o.
   */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    UsbDevice usbDevice = (UsbDevice) o;
    return Objects.equals(this.binded, usbDevice.binded) &&
        Objects.equals(this.description, usbDevice.description) &&
        Objects.equals(this.host, usbDevice.host) &&
        Objects.equals(this.id, usbDevice.id) &&
        Objects.equals(this.localCreatedAt, usbDevice.localCreatedAt) &&
        Objects.equals(this.localId, usbDevice.localId) &&
        Objects.equals(this.manufacturer, usbDevice.manufacturer) &&
        Objects.equals(this.name, usbDevice.name) &&
        Objects.equals(this.size, usbDevice.size) &&
        Objects.equals(this.status, usbDevice.status) &&
        Objects.equals(this.usbType, usbDevice.usbType) &&
        equalsNullable(this.vm, usbDevice.vm);
  }

  private static <T> boolean equalsNullable(JsonNullable<T> a, JsonNullable<T> b) {
    return a == b || (a != null && b != null && a.isPresent() && b.isPresent() && Objects.deepEquals(a.get(), b.get()));
  }

  @Override
  public int hashCode() {
    return Objects.hash(binded, description, host, id, localCreatedAt, localId, manufacturer, name, size, status, usbType, hashCodeNullable(vm));
  }

  private static <T> int hashCodeNullable(JsonNullable<T> a) {
    if (a == null) {
      return 1;
    }
    return a.isPresent() ? Arrays.deepHashCode(new Object[]{a.get()}) : 31;
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class UsbDevice {\n");
    sb.append("    binded: ").append(toIndentedString(binded)).append("\n");
    sb.append("    description: ").append(toIndentedString(description)).append("\n");
    sb.append("    host: ").append(toIndentedString(host)).append("\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    localCreatedAt: ").append(toIndentedString(localCreatedAt)).append("\n");
    sb.append("    localId: ").append(toIndentedString(localId)).append("\n");
    sb.append("    manufacturer: ").append(toIndentedString(manufacturer)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    size: ").append(toIndentedString(size)).append("\n");
    sb.append("    status: ").append(toIndentedString(status)).append("\n");
    sb.append("    usbType: ").append(toIndentedString(usbType)).append("\n");
    sb.append("    vm: ").append(toIndentedString(vm)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

