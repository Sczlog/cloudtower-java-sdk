/*
 * Tower SDK API
 * cloudtower operation API and SDK
 *
 * The version of the OpenAPI document: 1.7.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.smartx.tower.model;

import java.util.Objects;
import java.util.Arrays;
import java.util.Map;
import java.util.HashMap;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import com.smartx.tower.model.Bus;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import org.openapitools.jackson.nullable.JsonNullable;
import com.fasterxml.jackson.annotation.JsonIgnore;
import org.openapitools.jackson.nullable.JsonNullable;
import java.util.NoSuchElementException;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;


/**
 * VmUpdateDiskParamsData
 */
@JsonPropertyOrder({
  VmUpdateDiskParamsData.JSON_PROPERTY_ELF_IMAGE_ID,
  VmUpdateDiskParamsData.JSON_PROPERTY_VM_VOLUME_ID,
  VmUpdateDiskParamsData.JSON_PROPERTY_VM_DISK_ID,
  VmUpdateDiskParamsData.JSON_PROPERTY_BUS
})
@javax.annotation.processing.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2021-10-27T15:59:14.939791800+08:00[Asia/Shanghai]")
public class VmUpdateDiskParamsData {
  public static final String JSON_PROPERTY_ELF_IMAGE_ID = "elf_image_id";
  private JsonNullable<String> elfImageId = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_VM_VOLUME_ID = "vm_volume_id";
  private String vmVolumeId;

  public static final String JSON_PROPERTY_VM_DISK_ID = "vm_disk_id";
  private String vmDiskId;

  public static final String JSON_PROPERTY_BUS = "bus";
  private Bus bus;


  public VmUpdateDiskParamsData elfImageId(String elfImageId) {
    this.elfImageId = JsonNullable.<String>of(elfImageId);
    return this;
  }

   /**
   * Get elfImageId
   * @return elfImageId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getElfImageId() {
        return elfImageId.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_ELF_IMAGE_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getElfImageId_JsonNullable() {
    return elfImageId;
  }
  
  @JsonProperty(JSON_PROPERTY_ELF_IMAGE_ID)
  public void setElfImageId_JsonNullable(JsonNullable<String> elfImageId) {
    this.elfImageId = elfImageId;
  }

  public void setElfImageId(String elfImageId) {
    this.elfImageId = JsonNullable.<String>of(elfImageId);
  }


  public VmUpdateDiskParamsData vmVolumeId(String vmVolumeId) {
    this.vmVolumeId = vmVolumeId;
    return this;
  }

   /**
   * Get vmVolumeId
   * @return vmVolumeId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_VM_VOLUME_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getVmVolumeId() {
    return vmVolumeId;
  }


  @JsonProperty(JSON_PROPERTY_VM_VOLUME_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setVmVolumeId(String vmVolumeId) {
    this.vmVolumeId = vmVolumeId;
  }


  public VmUpdateDiskParamsData vmDiskId(String vmDiskId) {
    this.vmDiskId = vmDiskId;
    return this;
  }

   /**
   * Get vmDiskId
   * @return vmDiskId
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")
  @JsonProperty(JSON_PROPERTY_VM_DISK_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getVmDiskId() {
    return vmDiskId;
  }


  @JsonProperty(JSON_PROPERTY_VM_DISK_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setVmDiskId(String vmDiskId) {
    this.vmDiskId = vmDiskId;
  }


  public VmUpdateDiskParamsData bus(Bus bus) {
    this.bus = bus;
    return this;
  }

   /**
   * Get bus
   * @return bus
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_BUS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Bus getBus() {
    return bus;
  }


  @JsonProperty(JSON_PROPERTY_BUS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setBus(Bus bus) {
    this.bus = bus;
  }


  /**
   * Return true if this VmUpdateDiskParams_data object is equal to o.
   */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    VmUpdateDiskParamsData vmUpdateDiskParamsData = (VmUpdateDiskParamsData) o;
    return equalsNullable(this.elfImageId, vmUpdateDiskParamsData.elfImageId) &&
        Objects.equals(this.vmVolumeId, vmUpdateDiskParamsData.vmVolumeId) &&
        Objects.equals(this.vmDiskId, vmUpdateDiskParamsData.vmDiskId) &&
        Objects.equals(this.bus, vmUpdateDiskParamsData.bus);
  }

  private static <T> boolean equalsNullable(JsonNullable<T> a, JsonNullable<T> b) {
    return a == b || (a != null && b != null && a.isPresent() && b.isPresent() && Objects.deepEquals(a.get(), b.get()));
  }

  @Override
  public int hashCode() {
    return Objects.hash(hashCodeNullable(elfImageId), vmVolumeId, vmDiskId, bus);
  }

  private static <T> int hashCodeNullable(JsonNullable<T> a) {
    if (a == null) {
      return 1;
    }
    return a.isPresent() ? Arrays.deepHashCode(new Object[]{a.get()}) : 31;
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class VmUpdateDiskParamsData {\n");
    sb.append("    elfImageId: ").append(toIndentedString(elfImageId)).append("\n");
    sb.append("    vmVolumeId: ").append(toIndentedString(vmVolumeId)).append("\n");
    sb.append("    vmDiskId: ").append(toIndentedString(vmDiskId)).append("\n");
    sb.append("    bus: ").append(toIndentedString(bus)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

