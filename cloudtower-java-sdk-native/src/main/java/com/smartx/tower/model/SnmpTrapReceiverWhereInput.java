/*
 * Tower SDK API
 * cloudtower operation API and SDK
 *
 * The version of the OpenAPI document: 1.7.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.smartx.tower.model;

import java.util.Objects;
import java.util.Arrays;
import java.util.Map;
import java.util.HashMap;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import com.smartx.tower.model.ClusterWhereInput;
import com.smartx.tower.model.EntityAsyncStatus;
import com.smartx.tower.model.SnmpAuthProtocol;
import com.smartx.tower.model.SnmpLanguageCode;
import com.smartx.tower.model.SnmpPrivacyProtocol;
import com.smartx.tower.model.SnmpProtocol;
import com.smartx.tower.model.SnmpVersion;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.util.ArrayList;
import java.util.List;
import org.openapitools.jackson.nullable.JsonNullable;
import com.fasterxml.jackson.annotation.JsonIgnore;
import org.openapitools.jackson.nullable.JsonNullable;
import java.util.NoSuchElementException;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;


/**
 * SnmpTrapReceiverWhereInput
 */
@JsonPropertyOrder({
  SnmpTrapReceiverWhereInput.JSON_PROPERTY_A_N_D,
  SnmpTrapReceiverWhereInput.JSON_PROPERTY_AUTH_PASS_PHRASE,
  SnmpTrapReceiverWhereInput.JSON_PROPERTY_AUTH_PASS_PHRASE_CONTAINS,
  SnmpTrapReceiverWhereInput.JSON_PROPERTY_AUTH_PASS_PHRASE_ENDS_WITH,
  SnmpTrapReceiverWhereInput.JSON_PROPERTY_AUTH_PASS_PHRASE_GT,
  SnmpTrapReceiverWhereInput.JSON_PROPERTY_AUTH_PASS_PHRASE_GTE,
  SnmpTrapReceiverWhereInput.JSON_PROPERTY_AUTH_PASS_PHRASE_IN,
  SnmpTrapReceiverWhereInput.JSON_PROPERTY_AUTH_PASS_PHRASE_LT,
  SnmpTrapReceiverWhereInput.JSON_PROPERTY_AUTH_PASS_PHRASE_LTE,
  SnmpTrapReceiverWhereInput.JSON_PROPERTY_AUTH_PASS_PHRASE_NOT,
  SnmpTrapReceiverWhereInput.JSON_PROPERTY_AUTH_PASS_PHRASE_NOT_CONTAINS,
  SnmpTrapReceiverWhereInput.JSON_PROPERTY_AUTH_PASS_PHRASE_NOT_ENDS_WITH,
  SnmpTrapReceiverWhereInput.JSON_PROPERTY_AUTH_PASS_PHRASE_NOT_IN,
  SnmpTrapReceiverWhereInput.JSON_PROPERTY_AUTH_PASS_PHRASE_NOT_STARTS_WITH,
  SnmpTrapReceiverWhereInput.JSON_PROPERTY_AUTH_PASS_PHRASE_STARTS_WITH,
  SnmpTrapReceiverWhereInput.JSON_PROPERTY_AUTH_PROTOCOL,
  SnmpTrapReceiverWhereInput.JSON_PROPERTY_AUTH_PROTOCOL_IN,
  SnmpTrapReceiverWhereInput.JSON_PROPERTY_AUTH_PROTOCOL_NOT,
  SnmpTrapReceiverWhereInput.JSON_PROPERTY_AUTH_PROTOCOL_NOT_IN,
  SnmpTrapReceiverWhereInput.JSON_PROPERTY_CLUSTER,
  SnmpTrapReceiverWhereInput.JSON_PROPERTY_COMMUNITY,
  SnmpTrapReceiverWhereInput.JSON_PROPERTY_COMMUNITY_CONTAINS,
  SnmpTrapReceiverWhereInput.JSON_PROPERTY_COMMUNITY_ENDS_WITH,
  SnmpTrapReceiverWhereInput.JSON_PROPERTY_COMMUNITY_GT,
  SnmpTrapReceiverWhereInput.JSON_PROPERTY_COMMUNITY_GTE,
  SnmpTrapReceiverWhereInput.JSON_PROPERTY_COMMUNITY_IN,
  SnmpTrapReceiverWhereInput.JSON_PROPERTY_COMMUNITY_LT,
  SnmpTrapReceiverWhereInput.JSON_PROPERTY_COMMUNITY_LTE,
  SnmpTrapReceiverWhereInput.JSON_PROPERTY_COMMUNITY_NOT,
  SnmpTrapReceiverWhereInput.JSON_PROPERTY_COMMUNITY_NOT_CONTAINS,
  SnmpTrapReceiverWhereInput.JSON_PROPERTY_COMMUNITY_NOT_ENDS_WITH,
  SnmpTrapReceiverWhereInput.JSON_PROPERTY_COMMUNITY_NOT_IN,
  SnmpTrapReceiverWhereInput.JSON_PROPERTY_COMMUNITY_NOT_STARTS_WITH,
  SnmpTrapReceiverWhereInput.JSON_PROPERTY_COMMUNITY_STARTS_WITH,
  SnmpTrapReceiverWhereInput.JSON_PROPERTY_DISABLED,
  SnmpTrapReceiverWhereInput.JSON_PROPERTY_DISABLED_NOT,
  SnmpTrapReceiverWhereInput.JSON_PROPERTY_ENGINE_ID,
  SnmpTrapReceiverWhereInput.JSON_PROPERTY_ENGINE_ID_CONTAINS,
  SnmpTrapReceiverWhereInput.JSON_PROPERTY_ENGINE_ID_ENDS_WITH,
  SnmpTrapReceiverWhereInput.JSON_PROPERTY_ENGINE_ID_GT,
  SnmpTrapReceiverWhereInput.JSON_PROPERTY_ENGINE_ID_GTE,
  SnmpTrapReceiverWhereInput.JSON_PROPERTY_ENGINE_ID_IN,
  SnmpTrapReceiverWhereInput.JSON_PROPERTY_ENGINE_ID_LT,
  SnmpTrapReceiverWhereInput.JSON_PROPERTY_ENGINE_ID_LTE,
  SnmpTrapReceiverWhereInput.JSON_PROPERTY_ENGINE_ID_NOT,
  SnmpTrapReceiverWhereInput.JSON_PROPERTY_ENGINE_ID_NOT_CONTAINS,
  SnmpTrapReceiverWhereInput.JSON_PROPERTY_ENGINE_ID_NOT_ENDS_WITH,
  SnmpTrapReceiverWhereInput.JSON_PROPERTY_ENGINE_ID_NOT_IN,
  SnmpTrapReceiverWhereInput.JSON_PROPERTY_ENGINE_ID_NOT_STARTS_WITH,
  SnmpTrapReceiverWhereInput.JSON_PROPERTY_ENGINE_ID_STARTS_WITH,
  SnmpTrapReceiverWhereInput.JSON_PROPERTY_ENTITY_ASYNC_STATUS,
  SnmpTrapReceiverWhereInput.JSON_PROPERTY_ENTITY_ASYNC_STATUS_IN,
  SnmpTrapReceiverWhereInput.JSON_PROPERTY_ENTITY_ASYNC_STATUS_NOT,
  SnmpTrapReceiverWhereInput.JSON_PROPERTY_ENTITY_ASYNC_STATUS_NOT_IN,
  SnmpTrapReceiverWhereInput.JSON_PROPERTY_HOST,
  SnmpTrapReceiverWhereInput.JSON_PROPERTY_HOST_CONTAINS,
  SnmpTrapReceiverWhereInput.JSON_PROPERTY_HOST_ENDS_WITH,
  SnmpTrapReceiverWhereInput.JSON_PROPERTY_HOST_GT,
  SnmpTrapReceiverWhereInput.JSON_PROPERTY_HOST_GTE,
  SnmpTrapReceiverWhereInput.JSON_PROPERTY_HOST_IN,
  SnmpTrapReceiverWhereInput.JSON_PROPERTY_HOST_LT,
  SnmpTrapReceiverWhereInput.JSON_PROPERTY_HOST_LTE,
  SnmpTrapReceiverWhereInput.JSON_PROPERTY_HOST_NOT,
  SnmpTrapReceiverWhereInput.JSON_PROPERTY_HOST_NOT_CONTAINS,
  SnmpTrapReceiverWhereInput.JSON_PROPERTY_HOST_NOT_ENDS_WITH,
  SnmpTrapReceiverWhereInput.JSON_PROPERTY_HOST_NOT_IN,
  SnmpTrapReceiverWhereInput.JSON_PROPERTY_HOST_NOT_STARTS_WITH,
  SnmpTrapReceiverWhereInput.JSON_PROPERTY_HOST_STARTS_WITH,
  SnmpTrapReceiverWhereInput.JSON_PROPERTY_ID,
  SnmpTrapReceiverWhereInput.JSON_PROPERTY_ID_CONTAINS,
  SnmpTrapReceiverWhereInput.JSON_PROPERTY_ID_ENDS_WITH,
  SnmpTrapReceiverWhereInput.JSON_PROPERTY_ID_GT,
  SnmpTrapReceiverWhereInput.JSON_PROPERTY_ID_GTE,
  SnmpTrapReceiverWhereInput.JSON_PROPERTY_ID_IN,
  SnmpTrapReceiverWhereInput.JSON_PROPERTY_ID_LT,
  SnmpTrapReceiverWhereInput.JSON_PROPERTY_ID_LTE,
  SnmpTrapReceiverWhereInput.JSON_PROPERTY_ID_NOT,
  SnmpTrapReceiverWhereInput.JSON_PROPERTY_ID_NOT_CONTAINS,
  SnmpTrapReceiverWhereInput.JSON_PROPERTY_ID_NOT_ENDS_WITH,
  SnmpTrapReceiverWhereInput.JSON_PROPERTY_ID_NOT_IN,
  SnmpTrapReceiverWhereInput.JSON_PROPERTY_ID_NOT_STARTS_WITH,
  SnmpTrapReceiverWhereInput.JSON_PROPERTY_ID_STARTS_WITH,
  SnmpTrapReceiverWhereInput.JSON_PROPERTY_INFORM,
  SnmpTrapReceiverWhereInput.JSON_PROPERTY_INFORM_NOT,
  SnmpTrapReceiverWhereInput.JSON_PROPERTY_LANGUAGE_CODE,
  SnmpTrapReceiverWhereInput.JSON_PROPERTY_LANGUAGE_CODE_IN,
  SnmpTrapReceiverWhereInput.JSON_PROPERTY_LANGUAGE_CODE_NOT,
  SnmpTrapReceiverWhereInput.JSON_PROPERTY_LANGUAGE_CODE_NOT_IN,
  SnmpTrapReceiverWhereInput.JSON_PROPERTY_LOCAL_ID,
  SnmpTrapReceiverWhereInput.JSON_PROPERTY_LOCAL_ID_CONTAINS,
  SnmpTrapReceiverWhereInput.JSON_PROPERTY_LOCAL_ID_ENDS_WITH,
  SnmpTrapReceiverWhereInput.JSON_PROPERTY_LOCAL_ID_GT,
  SnmpTrapReceiverWhereInput.JSON_PROPERTY_LOCAL_ID_GTE,
  SnmpTrapReceiverWhereInput.JSON_PROPERTY_LOCAL_ID_IN,
  SnmpTrapReceiverWhereInput.JSON_PROPERTY_LOCAL_ID_LT,
  SnmpTrapReceiverWhereInput.JSON_PROPERTY_LOCAL_ID_LTE,
  SnmpTrapReceiverWhereInput.JSON_PROPERTY_LOCAL_ID_NOT,
  SnmpTrapReceiverWhereInput.JSON_PROPERTY_LOCAL_ID_NOT_CONTAINS,
  SnmpTrapReceiverWhereInput.JSON_PROPERTY_LOCAL_ID_NOT_ENDS_WITH,
  SnmpTrapReceiverWhereInput.JSON_PROPERTY_LOCAL_ID_NOT_IN,
  SnmpTrapReceiverWhereInput.JSON_PROPERTY_LOCAL_ID_NOT_STARTS_WITH,
  SnmpTrapReceiverWhereInput.JSON_PROPERTY_LOCAL_ID_STARTS_WITH,
  SnmpTrapReceiverWhereInput.JSON_PROPERTY_NAME,
  SnmpTrapReceiverWhereInput.JSON_PROPERTY_NAME_CONTAINS,
  SnmpTrapReceiverWhereInput.JSON_PROPERTY_NAME_ENDS_WITH,
  SnmpTrapReceiverWhereInput.JSON_PROPERTY_NAME_GT,
  SnmpTrapReceiverWhereInput.JSON_PROPERTY_NAME_GTE,
  SnmpTrapReceiverWhereInput.JSON_PROPERTY_NAME_IN,
  SnmpTrapReceiverWhereInput.JSON_PROPERTY_NAME_LT,
  SnmpTrapReceiverWhereInput.JSON_PROPERTY_NAME_LTE,
  SnmpTrapReceiverWhereInput.JSON_PROPERTY_NAME_NOT,
  SnmpTrapReceiverWhereInput.JSON_PROPERTY_NAME_NOT_CONTAINS,
  SnmpTrapReceiverWhereInput.JSON_PROPERTY_NAME_NOT_ENDS_WITH,
  SnmpTrapReceiverWhereInput.JSON_PROPERTY_NAME_NOT_IN,
  SnmpTrapReceiverWhereInput.JSON_PROPERTY_NAME_NOT_STARTS_WITH,
  SnmpTrapReceiverWhereInput.JSON_PROPERTY_NAME_STARTS_WITH,
  SnmpTrapReceiverWhereInput.JSON_PROPERTY_N_O_T,
  SnmpTrapReceiverWhereInput.JSON_PROPERTY_O_R,
  SnmpTrapReceiverWhereInput.JSON_PROPERTY_PORT,
  SnmpTrapReceiverWhereInput.JSON_PROPERTY_PORT_GT,
  SnmpTrapReceiverWhereInput.JSON_PROPERTY_PORT_GTE,
  SnmpTrapReceiverWhereInput.JSON_PROPERTY_PORT_IN,
  SnmpTrapReceiverWhereInput.JSON_PROPERTY_PORT_LT,
  SnmpTrapReceiverWhereInput.JSON_PROPERTY_PORT_LTE,
  SnmpTrapReceiverWhereInput.JSON_PROPERTY_PORT_NOT,
  SnmpTrapReceiverWhereInput.JSON_PROPERTY_PORT_NOT_IN,
  SnmpTrapReceiverWhereInput.JSON_PROPERTY_PRIVACY_PASS_PHRASE,
  SnmpTrapReceiverWhereInput.JSON_PROPERTY_PRIVACY_PASS_PHRASE_CONTAINS,
  SnmpTrapReceiverWhereInput.JSON_PROPERTY_PRIVACY_PASS_PHRASE_ENDS_WITH,
  SnmpTrapReceiverWhereInput.JSON_PROPERTY_PRIVACY_PASS_PHRASE_GT,
  SnmpTrapReceiverWhereInput.JSON_PROPERTY_PRIVACY_PASS_PHRASE_GTE,
  SnmpTrapReceiverWhereInput.JSON_PROPERTY_PRIVACY_PASS_PHRASE_IN,
  SnmpTrapReceiverWhereInput.JSON_PROPERTY_PRIVACY_PASS_PHRASE_LT,
  SnmpTrapReceiverWhereInput.JSON_PROPERTY_PRIVACY_PASS_PHRASE_LTE,
  SnmpTrapReceiverWhereInput.JSON_PROPERTY_PRIVACY_PASS_PHRASE_NOT,
  SnmpTrapReceiverWhereInput.JSON_PROPERTY_PRIVACY_PASS_PHRASE_NOT_CONTAINS,
  SnmpTrapReceiverWhereInput.JSON_PROPERTY_PRIVACY_PASS_PHRASE_NOT_ENDS_WITH,
  SnmpTrapReceiverWhereInput.JSON_PROPERTY_PRIVACY_PASS_PHRASE_NOT_IN,
  SnmpTrapReceiverWhereInput.JSON_PROPERTY_PRIVACY_PASS_PHRASE_NOT_STARTS_WITH,
  SnmpTrapReceiverWhereInput.JSON_PROPERTY_PRIVACY_PASS_PHRASE_STARTS_WITH,
  SnmpTrapReceiverWhereInput.JSON_PROPERTY_PRIVACY_PROTOCOL,
  SnmpTrapReceiverWhereInput.JSON_PROPERTY_PRIVACY_PROTOCOL_IN,
  SnmpTrapReceiverWhereInput.JSON_PROPERTY_PRIVACY_PROTOCOL_NOT,
  SnmpTrapReceiverWhereInput.JSON_PROPERTY_PRIVACY_PROTOCOL_NOT_IN,
  SnmpTrapReceiverWhereInput.JSON_PROPERTY_PROTOCOL,
  SnmpTrapReceiverWhereInput.JSON_PROPERTY_PROTOCOL_IN,
  SnmpTrapReceiverWhereInput.JSON_PROPERTY_PROTOCOL_NOT,
  SnmpTrapReceiverWhereInput.JSON_PROPERTY_PROTOCOL_NOT_IN,
  SnmpTrapReceiverWhereInput.JSON_PROPERTY_USERNAME,
  SnmpTrapReceiverWhereInput.JSON_PROPERTY_USERNAME_CONTAINS,
  SnmpTrapReceiverWhereInput.JSON_PROPERTY_USERNAME_ENDS_WITH,
  SnmpTrapReceiverWhereInput.JSON_PROPERTY_USERNAME_GT,
  SnmpTrapReceiverWhereInput.JSON_PROPERTY_USERNAME_GTE,
  SnmpTrapReceiverWhereInput.JSON_PROPERTY_USERNAME_IN,
  SnmpTrapReceiverWhereInput.JSON_PROPERTY_USERNAME_LT,
  SnmpTrapReceiverWhereInput.JSON_PROPERTY_USERNAME_LTE,
  SnmpTrapReceiverWhereInput.JSON_PROPERTY_USERNAME_NOT,
  SnmpTrapReceiverWhereInput.JSON_PROPERTY_USERNAME_NOT_CONTAINS,
  SnmpTrapReceiverWhereInput.JSON_PROPERTY_USERNAME_NOT_ENDS_WITH,
  SnmpTrapReceiverWhereInput.JSON_PROPERTY_USERNAME_NOT_IN,
  SnmpTrapReceiverWhereInput.JSON_PROPERTY_USERNAME_NOT_STARTS_WITH,
  SnmpTrapReceiverWhereInput.JSON_PROPERTY_USERNAME_STARTS_WITH,
  SnmpTrapReceiverWhereInput.JSON_PROPERTY_VERSION,
  SnmpTrapReceiverWhereInput.JSON_PROPERTY_VERSION_IN,
  SnmpTrapReceiverWhereInput.JSON_PROPERTY_VERSION_NOT,
  SnmpTrapReceiverWhereInput.JSON_PROPERTY_VERSION_NOT_IN
})
@javax.annotation.processing.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2021-10-27T15:59:14.939791800+08:00[Asia/Shanghai]")
public class SnmpTrapReceiverWhereInput {
  public static final String JSON_PROPERTY_A_N_D = "AND";
  private JsonNullable<List<SnmpTrapReceiverWhereInput>> AND = JsonNullable.<List<SnmpTrapReceiverWhereInput>>undefined();

  public static final String JSON_PROPERTY_AUTH_PASS_PHRASE = "auth_pass_phrase";
  private JsonNullable<String> authPassPhrase = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_AUTH_PASS_PHRASE_CONTAINS = "auth_pass_phrase_contains";
  private JsonNullable<String> authPassPhraseContains = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_AUTH_PASS_PHRASE_ENDS_WITH = "auth_pass_phrase_ends_with";
  private JsonNullable<String> authPassPhraseEndsWith = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_AUTH_PASS_PHRASE_GT = "auth_pass_phrase_gt";
  private JsonNullable<String> authPassPhraseGt = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_AUTH_PASS_PHRASE_GTE = "auth_pass_phrase_gte";
  private JsonNullable<String> authPassPhraseGte = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_AUTH_PASS_PHRASE_IN = "auth_pass_phrase_in";
  private JsonNullable<List<String>> authPassPhraseIn = JsonNullable.<List<String>>undefined();

  public static final String JSON_PROPERTY_AUTH_PASS_PHRASE_LT = "auth_pass_phrase_lt";
  private JsonNullable<String> authPassPhraseLt = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_AUTH_PASS_PHRASE_LTE = "auth_pass_phrase_lte";
  private JsonNullable<String> authPassPhraseLte = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_AUTH_PASS_PHRASE_NOT = "auth_pass_phrase_not";
  private JsonNullable<String> authPassPhraseNot = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_AUTH_PASS_PHRASE_NOT_CONTAINS = "auth_pass_phrase_not_contains";
  private JsonNullable<String> authPassPhraseNotContains = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_AUTH_PASS_PHRASE_NOT_ENDS_WITH = "auth_pass_phrase_not_ends_with";
  private JsonNullable<String> authPassPhraseNotEndsWith = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_AUTH_PASS_PHRASE_NOT_IN = "auth_pass_phrase_not_in";
  private JsonNullable<List<String>> authPassPhraseNotIn = JsonNullable.<List<String>>undefined();

  public static final String JSON_PROPERTY_AUTH_PASS_PHRASE_NOT_STARTS_WITH = "auth_pass_phrase_not_starts_with";
  private JsonNullable<String> authPassPhraseNotStartsWith = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_AUTH_PASS_PHRASE_STARTS_WITH = "auth_pass_phrase_starts_with";
  private JsonNullable<String> authPassPhraseStartsWith = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_AUTH_PROTOCOL = "auth_protocol";
  private JsonNullable<SnmpAuthProtocol> authProtocol = JsonNullable.<SnmpAuthProtocol>undefined();

  public static final String JSON_PROPERTY_AUTH_PROTOCOL_IN = "auth_protocol_in";
  private JsonNullable<List<SnmpAuthProtocol>> authProtocolIn = JsonNullable.<List<SnmpAuthProtocol>>undefined();

  public static final String JSON_PROPERTY_AUTH_PROTOCOL_NOT = "auth_protocol_not";
  private JsonNullable<SnmpAuthProtocol> authProtocolNot = JsonNullable.<SnmpAuthProtocol>undefined();

  public static final String JSON_PROPERTY_AUTH_PROTOCOL_NOT_IN = "auth_protocol_not_in";
  private JsonNullable<List<SnmpAuthProtocol>> authProtocolNotIn = JsonNullable.<List<SnmpAuthProtocol>>undefined();

  public static final String JSON_PROPERTY_CLUSTER = "cluster";
  private JsonNullable<ClusterWhereInput> cluster = JsonNullable.<ClusterWhereInput>undefined();

  public static final String JSON_PROPERTY_COMMUNITY = "community";
  private JsonNullable<String> community = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_COMMUNITY_CONTAINS = "community_contains";
  private JsonNullable<String> communityContains = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_COMMUNITY_ENDS_WITH = "community_ends_with";
  private JsonNullable<String> communityEndsWith = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_COMMUNITY_GT = "community_gt";
  private JsonNullable<String> communityGt = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_COMMUNITY_GTE = "community_gte";
  private JsonNullable<String> communityGte = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_COMMUNITY_IN = "community_in";
  private JsonNullable<List<String>> communityIn = JsonNullable.<List<String>>undefined();

  public static final String JSON_PROPERTY_COMMUNITY_LT = "community_lt";
  private JsonNullable<String> communityLt = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_COMMUNITY_LTE = "community_lte";
  private JsonNullable<String> communityLte = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_COMMUNITY_NOT = "community_not";
  private JsonNullable<String> communityNot = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_COMMUNITY_NOT_CONTAINS = "community_not_contains";
  private JsonNullable<String> communityNotContains = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_COMMUNITY_NOT_ENDS_WITH = "community_not_ends_with";
  private JsonNullable<String> communityNotEndsWith = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_COMMUNITY_NOT_IN = "community_not_in";
  private JsonNullable<List<String>> communityNotIn = JsonNullable.<List<String>>undefined();

  public static final String JSON_PROPERTY_COMMUNITY_NOT_STARTS_WITH = "community_not_starts_with";
  private JsonNullable<String> communityNotStartsWith = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_COMMUNITY_STARTS_WITH = "community_starts_with";
  private JsonNullable<String> communityStartsWith = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_DISABLED = "disabled";
  private JsonNullable<Boolean> disabled = JsonNullable.<Boolean>undefined();

  public static final String JSON_PROPERTY_DISABLED_NOT = "disabled_not";
  private JsonNullable<Boolean> disabledNot = JsonNullable.<Boolean>undefined();

  public static final String JSON_PROPERTY_ENGINE_ID = "engine_id";
  private JsonNullable<String> engineId = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_ENGINE_ID_CONTAINS = "engine_id_contains";
  private JsonNullable<String> engineIdContains = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_ENGINE_ID_ENDS_WITH = "engine_id_ends_with";
  private JsonNullable<String> engineIdEndsWith = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_ENGINE_ID_GT = "engine_id_gt";
  private JsonNullable<String> engineIdGt = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_ENGINE_ID_GTE = "engine_id_gte";
  private JsonNullable<String> engineIdGte = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_ENGINE_ID_IN = "engine_id_in";
  private JsonNullable<List<String>> engineIdIn = JsonNullable.<List<String>>undefined();

  public static final String JSON_PROPERTY_ENGINE_ID_LT = "engine_id_lt";
  private JsonNullable<String> engineIdLt = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_ENGINE_ID_LTE = "engine_id_lte";
  private JsonNullable<String> engineIdLte = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_ENGINE_ID_NOT = "engine_id_not";
  private JsonNullable<String> engineIdNot = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_ENGINE_ID_NOT_CONTAINS = "engine_id_not_contains";
  private JsonNullable<String> engineIdNotContains = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_ENGINE_ID_NOT_ENDS_WITH = "engine_id_not_ends_with";
  private JsonNullable<String> engineIdNotEndsWith = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_ENGINE_ID_NOT_IN = "engine_id_not_in";
  private JsonNullable<List<String>> engineIdNotIn = JsonNullable.<List<String>>undefined();

  public static final String JSON_PROPERTY_ENGINE_ID_NOT_STARTS_WITH = "engine_id_not_starts_with";
  private JsonNullable<String> engineIdNotStartsWith = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_ENGINE_ID_STARTS_WITH = "engine_id_starts_with";
  private JsonNullable<String> engineIdStartsWith = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_ENTITY_ASYNC_STATUS = "entityAsyncStatus";
  private JsonNullable<EntityAsyncStatus> entityAsyncStatus = JsonNullable.<EntityAsyncStatus>undefined();

  public static final String JSON_PROPERTY_ENTITY_ASYNC_STATUS_IN = "entityAsyncStatus_in";
  private JsonNullable<List<EntityAsyncStatus>> entityAsyncStatusIn = JsonNullable.<List<EntityAsyncStatus>>undefined();

  public static final String JSON_PROPERTY_ENTITY_ASYNC_STATUS_NOT = "entityAsyncStatus_not";
  private JsonNullable<EntityAsyncStatus> entityAsyncStatusNot = JsonNullable.<EntityAsyncStatus>undefined();

  public static final String JSON_PROPERTY_ENTITY_ASYNC_STATUS_NOT_IN = "entityAsyncStatus_not_in";
  private JsonNullable<List<EntityAsyncStatus>> entityAsyncStatusNotIn = JsonNullable.<List<EntityAsyncStatus>>undefined();

  public static final String JSON_PROPERTY_HOST = "host";
  private JsonNullable<String> host = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_HOST_CONTAINS = "host_contains";
  private JsonNullable<String> hostContains = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_HOST_ENDS_WITH = "host_ends_with";
  private JsonNullable<String> hostEndsWith = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_HOST_GT = "host_gt";
  private JsonNullable<String> hostGt = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_HOST_GTE = "host_gte";
  private JsonNullable<String> hostGte = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_HOST_IN = "host_in";
  private JsonNullable<List<String>> hostIn = JsonNullable.<List<String>>undefined();

  public static final String JSON_PROPERTY_HOST_LT = "host_lt";
  private JsonNullable<String> hostLt = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_HOST_LTE = "host_lte";
  private JsonNullable<String> hostLte = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_HOST_NOT = "host_not";
  private JsonNullable<String> hostNot = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_HOST_NOT_CONTAINS = "host_not_contains";
  private JsonNullable<String> hostNotContains = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_HOST_NOT_ENDS_WITH = "host_not_ends_with";
  private JsonNullable<String> hostNotEndsWith = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_HOST_NOT_IN = "host_not_in";
  private JsonNullable<List<String>> hostNotIn = JsonNullable.<List<String>>undefined();

  public static final String JSON_PROPERTY_HOST_NOT_STARTS_WITH = "host_not_starts_with";
  private JsonNullable<String> hostNotStartsWith = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_HOST_STARTS_WITH = "host_starts_with";
  private JsonNullable<String> hostStartsWith = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_ID = "id";
  private JsonNullable<String> id = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_ID_CONTAINS = "id_contains";
  private JsonNullable<String> idContains = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_ID_ENDS_WITH = "id_ends_with";
  private JsonNullable<String> idEndsWith = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_ID_GT = "id_gt";
  private JsonNullable<String> idGt = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_ID_GTE = "id_gte";
  private JsonNullable<String> idGte = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_ID_IN = "id_in";
  private JsonNullable<List<String>> idIn = JsonNullable.<List<String>>undefined();

  public static final String JSON_PROPERTY_ID_LT = "id_lt";
  private JsonNullable<String> idLt = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_ID_LTE = "id_lte";
  private JsonNullable<String> idLte = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_ID_NOT = "id_not";
  private JsonNullable<String> idNot = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_ID_NOT_CONTAINS = "id_not_contains";
  private JsonNullable<String> idNotContains = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_ID_NOT_ENDS_WITH = "id_not_ends_with";
  private JsonNullable<String> idNotEndsWith = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_ID_NOT_IN = "id_not_in";
  private JsonNullable<List<String>> idNotIn = JsonNullable.<List<String>>undefined();

  public static final String JSON_PROPERTY_ID_NOT_STARTS_WITH = "id_not_starts_with";
  private JsonNullable<String> idNotStartsWith = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_ID_STARTS_WITH = "id_starts_with";
  private JsonNullable<String> idStartsWith = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_INFORM = "inform";
  private JsonNullable<Boolean> inform = JsonNullable.<Boolean>undefined();

  public static final String JSON_PROPERTY_INFORM_NOT = "inform_not";
  private JsonNullable<Boolean> informNot = JsonNullable.<Boolean>undefined();

  public static final String JSON_PROPERTY_LANGUAGE_CODE = "language_code";
  private JsonNullable<SnmpLanguageCode> languageCode = JsonNullable.<SnmpLanguageCode>undefined();

  public static final String JSON_PROPERTY_LANGUAGE_CODE_IN = "language_code_in";
  private JsonNullable<List<SnmpLanguageCode>> languageCodeIn = JsonNullable.<List<SnmpLanguageCode>>undefined();

  public static final String JSON_PROPERTY_LANGUAGE_CODE_NOT = "language_code_not";
  private JsonNullable<SnmpLanguageCode> languageCodeNot = JsonNullable.<SnmpLanguageCode>undefined();

  public static final String JSON_PROPERTY_LANGUAGE_CODE_NOT_IN = "language_code_not_in";
  private JsonNullable<List<SnmpLanguageCode>> languageCodeNotIn = JsonNullable.<List<SnmpLanguageCode>>undefined();

  public static final String JSON_PROPERTY_LOCAL_ID = "local_id";
  private JsonNullable<String> localId = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_LOCAL_ID_CONTAINS = "local_id_contains";
  private JsonNullable<String> localIdContains = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_LOCAL_ID_ENDS_WITH = "local_id_ends_with";
  private JsonNullable<String> localIdEndsWith = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_LOCAL_ID_GT = "local_id_gt";
  private JsonNullable<String> localIdGt = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_LOCAL_ID_GTE = "local_id_gte";
  private JsonNullable<String> localIdGte = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_LOCAL_ID_IN = "local_id_in";
  private JsonNullable<List<String>> localIdIn = JsonNullable.<List<String>>undefined();

  public static final String JSON_PROPERTY_LOCAL_ID_LT = "local_id_lt";
  private JsonNullable<String> localIdLt = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_LOCAL_ID_LTE = "local_id_lte";
  private JsonNullable<String> localIdLte = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_LOCAL_ID_NOT = "local_id_not";
  private JsonNullable<String> localIdNot = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_LOCAL_ID_NOT_CONTAINS = "local_id_not_contains";
  private JsonNullable<String> localIdNotContains = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_LOCAL_ID_NOT_ENDS_WITH = "local_id_not_ends_with";
  private JsonNullable<String> localIdNotEndsWith = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_LOCAL_ID_NOT_IN = "local_id_not_in";
  private JsonNullable<List<String>> localIdNotIn = JsonNullable.<List<String>>undefined();

  public static final String JSON_PROPERTY_LOCAL_ID_NOT_STARTS_WITH = "local_id_not_starts_with";
  private JsonNullable<String> localIdNotStartsWith = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_LOCAL_ID_STARTS_WITH = "local_id_starts_with";
  private JsonNullable<String> localIdStartsWith = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_NAME = "name";
  private JsonNullable<String> name = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_NAME_CONTAINS = "name_contains";
  private JsonNullable<String> nameContains = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_NAME_ENDS_WITH = "name_ends_with";
  private JsonNullable<String> nameEndsWith = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_NAME_GT = "name_gt";
  private JsonNullable<String> nameGt = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_NAME_GTE = "name_gte";
  private JsonNullable<String> nameGte = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_NAME_IN = "name_in";
  private JsonNullable<List<String>> nameIn = JsonNullable.<List<String>>undefined();

  public static final String JSON_PROPERTY_NAME_LT = "name_lt";
  private JsonNullable<String> nameLt = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_NAME_LTE = "name_lte";
  private JsonNullable<String> nameLte = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_NAME_NOT = "name_not";
  private JsonNullable<String> nameNot = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_NAME_NOT_CONTAINS = "name_not_contains";
  private JsonNullable<String> nameNotContains = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_NAME_NOT_ENDS_WITH = "name_not_ends_with";
  private JsonNullable<String> nameNotEndsWith = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_NAME_NOT_IN = "name_not_in";
  private JsonNullable<List<String>> nameNotIn = JsonNullable.<List<String>>undefined();

  public static final String JSON_PROPERTY_NAME_NOT_STARTS_WITH = "name_not_starts_with";
  private JsonNullable<String> nameNotStartsWith = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_NAME_STARTS_WITH = "name_starts_with";
  private JsonNullable<String> nameStartsWith = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_N_O_T = "NOT";
  private JsonNullable<List<SnmpTrapReceiverWhereInput>> NOT = JsonNullable.<List<SnmpTrapReceiverWhereInput>>undefined();

  public static final String JSON_PROPERTY_O_R = "OR";
  private JsonNullable<List<SnmpTrapReceiverWhereInput>> OR = JsonNullable.<List<SnmpTrapReceiverWhereInput>>undefined();

  public static final String JSON_PROPERTY_PORT = "port";
  private JsonNullable<Double> port = JsonNullable.<Double>undefined();

  public static final String JSON_PROPERTY_PORT_GT = "port_gt";
  private JsonNullable<Double> portGt = JsonNullable.<Double>undefined();

  public static final String JSON_PROPERTY_PORT_GTE = "port_gte";
  private JsonNullable<Double> portGte = JsonNullable.<Double>undefined();

  public static final String JSON_PROPERTY_PORT_IN = "port_in";
  private JsonNullable<List<Double>> portIn = JsonNullable.<List<Double>>undefined();

  public static final String JSON_PROPERTY_PORT_LT = "port_lt";
  private JsonNullable<Double> portLt = JsonNullable.<Double>undefined();

  public static final String JSON_PROPERTY_PORT_LTE = "port_lte";
  private JsonNullable<Double> portLte = JsonNullable.<Double>undefined();

  public static final String JSON_PROPERTY_PORT_NOT = "port_not";
  private JsonNullable<Double> portNot = JsonNullable.<Double>undefined();

  public static final String JSON_PROPERTY_PORT_NOT_IN = "port_not_in";
  private JsonNullable<List<Double>> portNotIn = JsonNullable.<List<Double>>undefined();

  public static final String JSON_PROPERTY_PRIVACY_PASS_PHRASE = "privacy_pass_phrase";
  private JsonNullable<String> privacyPassPhrase = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_PRIVACY_PASS_PHRASE_CONTAINS = "privacy_pass_phrase_contains";
  private JsonNullable<String> privacyPassPhraseContains = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_PRIVACY_PASS_PHRASE_ENDS_WITH = "privacy_pass_phrase_ends_with";
  private JsonNullable<String> privacyPassPhraseEndsWith = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_PRIVACY_PASS_PHRASE_GT = "privacy_pass_phrase_gt";
  private JsonNullable<String> privacyPassPhraseGt = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_PRIVACY_PASS_PHRASE_GTE = "privacy_pass_phrase_gte";
  private JsonNullable<String> privacyPassPhraseGte = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_PRIVACY_PASS_PHRASE_IN = "privacy_pass_phrase_in";
  private JsonNullable<List<String>> privacyPassPhraseIn = JsonNullable.<List<String>>undefined();

  public static final String JSON_PROPERTY_PRIVACY_PASS_PHRASE_LT = "privacy_pass_phrase_lt";
  private JsonNullable<String> privacyPassPhraseLt = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_PRIVACY_PASS_PHRASE_LTE = "privacy_pass_phrase_lte";
  private JsonNullable<String> privacyPassPhraseLte = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_PRIVACY_PASS_PHRASE_NOT = "privacy_pass_phrase_not";
  private JsonNullable<String> privacyPassPhraseNot = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_PRIVACY_PASS_PHRASE_NOT_CONTAINS = "privacy_pass_phrase_not_contains";
  private JsonNullable<String> privacyPassPhraseNotContains = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_PRIVACY_PASS_PHRASE_NOT_ENDS_WITH = "privacy_pass_phrase_not_ends_with";
  private JsonNullable<String> privacyPassPhraseNotEndsWith = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_PRIVACY_PASS_PHRASE_NOT_IN = "privacy_pass_phrase_not_in";
  private JsonNullable<List<String>> privacyPassPhraseNotIn = JsonNullable.<List<String>>undefined();

  public static final String JSON_PROPERTY_PRIVACY_PASS_PHRASE_NOT_STARTS_WITH = "privacy_pass_phrase_not_starts_with";
  private JsonNullable<String> privacyPassPhraseNotStartsWith = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_PRIVACY_PASS_PHRASE_STARTS_WITH = "privacy_pass_phrase_starts_with";
  private JsonNullable<String> privacyPassPhraseStartsWith = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_PRIVACY_PROTOCOL = "privacy_protocol";
  private JsonNullable<SnmpPrivacyProtocol> privacyProtocol = JsonNullable.<SnmpPrivacyProtocol>undefined();

  public static final String JSON_PROPERTY_PRIVACY_PROTOCOL_IN = "privacy_protocol_in";
  private JsonNullable<List<SnmpPrivacyProtocol>> privacyProtocolIn = JsonNullable.<List<SnmpPrivacyProtocol>>undefined();

  public static final String JSON_PROPERTY_PRIVACY_PROTOCOL_NOT = "privacy_protocol_not";
  private JsonNullable<SnmpPrivacyProtocol> privacyProtocolNot = JsonNullable.<SnmpPrivacyProtocol>undefined();

  public static final String JSON_PROPERTY_PRIVACY_PROTOCOL_NOT_IN = "privacy_protocol_not_in";
  private JsonNullable<List<SnmpPrivacyProtocol>> privacyProtocolNotIn = JsonNullable.<List<SnmpPrivacyProtocol>>undefined();

  public static final String JSON_PROPERTY_PROTOCOL = "protocol";
  private JsonNullable<SnmpProtocol> protocol = JsonNullable.<SnmpProtocol>undefined();

  public static final String JSON_PROPERTY_PROTOCOL_IN = "protocol_in";
  private JsonNullable<List<SnmpProtocol>> protocolIn = JsonNullable.<List<SnmpProtocol>>undefined();

  public static final String JSON_PROPERTY_PROTOCOL_NOT = "protocol_not";
  private JsonNullable<SnmpProtocol> protocolNot = JsonNullable.<SnmpProtocol>undefined();

  public static final String JSON_PROPERTY_PROTOCOL_NOT_IN = "protocol_not_in";
  private JsonNullable<List<SnmpProtocol>> protocolNotIn = JsonNullable.<List<SnmpProtocol>>undefined();

  public static final String JSON_PROPERTY_USERNAME = "username";
  private JsonNullable<String> username = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_USERNAME_CONTAINS = "username_contains";
  private JsonNullable<String> usernameContains = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_USERNAME_ENDS_WITH = "username_ends_with";
  private JsonNullable<String> usernameEndsWith = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_USERNAME_GT = "username_gt";
  private JsonNullable<String> usernameGt = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_USERNAME_GTE = "username_gte";
  private JsonNullable<String> usernameGte = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_USERNAME_IN = "username_in";
  private JsonNullable<List<String>> usernameIn = JsonNullable.<List<String>>undefined();

  public static final String JSON_PROPERTY_USERNAME_LT = "username_lt";
  private JsonNullable<String> usernameLt = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_USERNAME_LTE = "username_lte";
  private JsonNullable<String> usernameLte = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_USERNAME_NOT = "username_not";
  private JsonNullable<String> usernameNot = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_USERNAME_NOT_CONTAINS = "username_not_contains";
  private JsonNullable<String> usernameNotContains = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_USERNAME_NOT_ENDS_WITH = "username_not_ends_with";
  private JsonNullable<String> usernameNotEndsWith = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_USERNAME_NOT_IN = "username_not_in";
  private JsonNullable<List<String>> usernameNotIn = JsonNullable.<List<String>>undefined();

  public static final String JSON_PROPERTY_USERNAME_NOT_STARTS_WITH = "username_not_starts_with";
  private JsonNullable<String> usernameNotStartsWith = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_USERNAME_STARTS_WITH = "username_starts_with";
  private JsonNullable<String> usernameStartsWith = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_VERSION = "version";
  private JsonNullable<SnmpVersion> version = JsonNullable.<SnmpVersion>undefined();

  public static final String JSON_PROPERTY_VERSION_IN = "version_in";
  private JsonNullable<List<SnmpVersion>> versionIn = JsonNullable.<List<SnmpVersion>>undefined();

  public static final String JSON_PROPERTY_VERSION_NOT = "version_not";
  private JsonNullable<SnmpVersion> versionNot = JsonNullable.<SnmpVersion>undefined();

  public static final String JSON_PROPERTY_VERSION_NOT_IN = "version_not_in";
  private JsonNullable<List<SnmpVersion>> versionNotIn = JsonNullable.<List<SnmpVersion>>undefined();


  public SnmpTrapReceiverWhereInput AND(List<SnmpTrapReceiverWhereInput> AND) {
    this.AND = JsonNullable.<List<SnmpTrapReceiverWhereInput>>of(AND);
    return this;
  }

  public SnmpTrapReceiverWhereInput addANDItem(SnmpTrapReceiverWhereInput ANDItem) {
    if (this.AND == null || !this.AND.isPresent()) {
      this.AND = JsonNullable.<List<SnmpTrapReceiverWhereInput>>of(new ArrayList<>());
    }
    try {
      this.AND.get().add(ANDItem);
    } catch (java.util.NoSuchElementException e) {
      // this can never happen, as we make sure above that the value is present
    }
    return this;
  }

   /**
   * Get AND
   * @return AND
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public List<SnmpTrapReceiverWhereInput> getAND() {
        return AND.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_A_N_D)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<List<SnmpTrapReceiverWhereInput>> getAND_JsonNullable() {
    return AND;
  }
  
  @JsonProperty(JSON_PROPERTY_A_N_D)
  public void setAND_JsonNullable(JsonNullable<List<SnmpTrapReceiverWhereInput>> AND) {
    this.AND = AND;
  }

  public void setAND(List<SnmpTrapReceiverWhereInput> AND) {
    this.AND = JsonNullable.<List<SnmpTrapReceiverWhereInput>>of(AND);
  }


  public SnmpTrapReceiverWhereInput authPassPhrase(String authPassPhrase) {
    this.authPassPhrase = JsonNullable.<String>of(authPassPhrase);
    return this;
  }

   /**
   * Get authPassPhrase
   * @return authPassPhrase
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getAuthPassPhrase() {
        return authPassPhrase.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_AUTH_PASS_PHRASE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getAuthPassPhrase_JsonNullable() {
    return authPassPhrase;
  }
  
  @JsonProperty(JSON_PROPERTY_AUTH_PASS_PHRASE)
  public void setAuthPassPhrase_JsonNullable(JsonNullable<String> authPassPhrase) {
    this.authPassPhrase = authPassPhrase;
  }

  public void setAuthPassPhrase(String authPassPhrase) {
    this.authPassPhrase = JsonNullable.<String>of(authPassPhrase);
  }


  public SnmpTrapReceiverWhereInput authPassPhraseContains(String authPassPhraseContains) {
    this.authPassPhraseContains = JsonNullable.<String>of(authPassPhraseContains);
    return this;
  }

   /**
   * Get authPassPhraseContains
   * @return authPassPhraseContains
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getAuthPassPhraseContains() {
        return authPassPhraseContains.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_AUTH_PASS_PHRASE_CONTAINS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getAuthPassPhraseContains_JsonNullable() {
    return authPassPhraseContains;
  }
  
  @JsonProperty(JSON_PROPERTY_AUTH_PASS_PHRASE_CONTAINS)
  public void setAuthPassPhraseContains_JsonNullable(JsonNullable<String> authPassPhraseContains) {
    this.authPassPhraseContains = authPassPhraseContains;
  }

  public void setAuthPassPhraseContains(String authPassPhraseContains) {
    this.authPassPhraseContains = JsonNullable.<String>of(authPassPhraseContains);
  }


  public SnmpTrapReceiverWhereInput authPassPhraseEndsWith(String authPassPhraseEndsWith) {
    this.authPassPhraseEndsWith = JsonNullable.<String>of(authPassPhraseEndsWith);
    return this;
  }

   /**
   * Get authPassPhraseEndsWith
   * @return authPassPhraseEndsWith
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getAuthPassPhraseEndsWith() {
        return authPassPhraseEndsWith.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_AUTH_PASS_PHRASE_ENDS_WITH)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getAuthPassPhraseEndsWith_JsonNullable() {
    return authPassPhraseEndsWith;
  }
  
  @JsonProperty(JSON_PROPERTY_AUTH_PASS_PHRASE_ENDS_WITH)
  public void setAuthPassPhraseEndsWith_JsonNullable(JsonNullable<String> authPassPhraseEndsWith) {
    this.authPassPhraseEndsWith = authPassPhraseEndsWith;
  }

  public void setAuthPassPhraseEndsWith(String authPassPhraseEndsWith) {
    this.authPassPhraseEndsWith = JsonNullable.<String>of(authPassPhraseEndsWith);
  }


  public SnmpTrapReceiverWhereInput authPassPhraseGt(String authPassPhraseGt) {
    this.authPassPhraseGt = JsonNullable.<String>of(authPassPhraseGt);
    return this;
  }

   /**
   * Get authPassPhraseGt
   * @return authPassPhraseGt
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getAuthPassPhraseGt() {
        return authPassPhraseGt.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_AUTH_PASS_PHRASE_GT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getAuthPassPhraseGt_JsonNullable() {
    return authPassPhraseGt;
  }
  
  @JsonProperty(JSON_PROPERTY_AUTH_PASS_PHRASE_GT)
  public void setAuthPassPhraseGt_JsonNullable(JsonNullable<String> authPassPhraseGt) {
    this.authPassPhraseGt = authPassPhraseGt;
  }

  public void setAuthPassPhraseGt(String authPassPhraseGt) {
    this.authPassPhraseGt = JsonNullable.<String>of(authPassPhraseGt);
  }


  public SnmpTrapReceiverWhereInput authPassPhraseGte(String authPassPhraseGte) {
    this.authPassPhraseGte = JsonNullable.<String>of(authPassPhraseGte);
    return this;
  }

   /**
   * Get authPassPhraseGte
   * @return authPassPhraseGte
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getAuthPassPhraseGte() {
        return authPassPhraseGte.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_AUTH_PASS_PHRASE_GTE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getAuthPassPhraseGte_JsonNullable() {
    return authPassPhraseGte;
  }
  
  @JsonProperty(JSON_PROPERTY_AUTH_PASS_PHRASE_GTE)
  public void setAuthPassPhraseGte_JsonNullable(JsonNullable<String> authPassPhraseGte) {
    this.authPassPhraseGte = authPassPhraseGte;
  }

  public void setAuthPassPhraseGte(String authPassPhraseGte) {
    this.authPassPhraseGte = JsonNullable.<String>of(authPassPhraseGte);
  }


  public SnmpTrapReceiverWhereInput authPassPhraseIn(List<String> authPassPhraseIn) {
    this.authPassPhraseIn = JsonNullable.<List<String>>of(authPassPhraseIn);
    return this;
  }

  public SnmpTrapReceiverWhereInput addAuthPassPhraseInItem(String authPassPhraseInItem) {
    if (this.authPassPhraseIn == null || !this.authPassPhraseIn.isPresent()) {
      this.authPassPhraseIn = JsonNullable.<List<String>>of(new ArrayList<>());
    }
    try {
      this.authPassPhraseIn.get().add(authPassPhraseInItem);
    } catch (java.util.NoSuchElementException e) {
      // this can never happen, as we make sure above that the value is present
    }
    return this;
  }

   /**
   * Get authPassPhraseIn
   * @return authPassPhraseIn
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public List<String> getAuthPassPhraseIn() {
        return authPassPhraseIn.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_AUTH_PASS_PHRASE_IN)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<List<String>> getAuthPassPhraseIn_JsonNullable() {
    return authPassPhraseIn;
  }
  
  @JsonProperty(JSON_PROPERTY_AUTH_PASS_PHRASE_IN)
  public void setAuthPassPhraseIn_JsonNullable(JsonNullable<List<String>> authPassPhraseIn) {
    this.authPassPhraseIn = authPassPhraseIn;
  }

  public void setAuthPassPhraseIn(List<String> authPassPhraseIn) {
    this.authPassPhraseIn = JsonNullable.<List<String>>of(authPassPhraseIn);
  }


  public SnmpTrapReceiverWhereInput authPassPhraseLt(String authPassPhraseLt) {
    this.authPassPhraseLt = JsonNullable.<String>of(authPassPhraseLt);
    return this;
  }

   /**
   * Get authPassPhraseLt
   * @return authPassPhraseLt
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getAuthPassPhraseLt() {
        return authPassPhraseLt.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_AUTH_PASS_PHRASE_LT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getAuthPassPhraseLt_JsonNullable() {
    return authPassPhraseLt;
  }
  
  @JsonProperty(JSON_PROPERTY_AUTH_PASS_PHRASE_LT)
  public void setAuthPassPhraseLt_JsonNullable(JsonNullable<String> authPassPhraseLt) {
    this.authPassPhraseLt = authPassPhraseLt;
  }

  public void setAuthPassPhraseLt(String authPassPhraseLt) {
    this.authPassPhraseLt = JsonNullable.<String>of(authPassPhraseLt);
  }


  public SnmpTrapReceiverWhereInput authPassPhraseLte(String authPassPhraseLte) {
    this.authPassPhraseLte = JsonNullable.<String>of(authPassPhraseLte);
    return this;
  }

   /**
   * Get authPassPhraseLte
   * @return authPassPhraseLte
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getAuthPassPhraseLte() {
        return authPassPhraseLte.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_AUTH_PASS_PHRASE_LTE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getAuthPassPhraseLte_JsonNullable() {
    return authPassPhraseLte;
  }
  
  @JsonProperty(JSON_PROPERTY_AUTH_PASS_PHRASE_LTE)
  public void setAuthPassPhraseLte_JsonNullable(JsonNullable<String> authPassPhraseLte) {
    this.authPassPhraseLte = authPassPhraseLte;
  }

  public void setAuthPassPhraseLte(String authPassPhraseLte) {
    this.authPassPhraseLte = JsonNullable.<String>of(authPassPhraseLte);
  }


  public SnmpTrapReceiverWhereInput authPassPhraseNot(String authPassPhraseNot) {
    this.authPassPhraseNot = JsonNullable.<String>of(authPassPhraseNot);
    return this;
  }

   /**
   * Get authPassPhraseNot
   * @return authPassPhraseNot
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getAuthPassPhraseNot() {
        return authPassPhraseNot.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_AUTH_PASS_PHRASE_NOT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getAuthPassPhraseNot_JsonNullable() {
    return authPassPhraseNot;
  }
  
  @JsonProperty(JSON_PROPERTY_AUTH_PASS_PHRASE_NOT)
  public void setAuthPassPhraseNot_JsonNullable(JsonNullable<String> authPassPhraseNot) {
    this.authPassPhraseNot = authPassPhraseNot;
  }

  public void setAuthPassPhraseNot(String authPassPhraseNot) {
    this.authPassPhraseNot = JsonNullable.<String>of(authPassPhraseNot);
  }


  public SnmpTrapReceiverWhereInput authPassPhraseNotContains(String authPassPhraseNotContains) {
    this.authPassPhraseNotContains = JsonNullable.<String>of(authPassPhraseNotContains);
    return this;
  }

   /**
   * Get authPassPhraseNotContains
   * @return authPassPhraseNotContains
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getAuthPassPhraseNotContains() {
        return authPassPhraseNotContains.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_AUTH_PASS_PHRASE_NOT_CONTAINS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getAuthPassPhraseNotContains_JsonNullable() {
    return authPassPhraseNotContains;
  }
  
  @JsonProperty(JSON_PROPERTY_AUTH_PASS_PHRASE_NOT_CONTAINS)
  public void setAuthPassPhraseNotContains_JsonNullable(JsonNullable<String> authPassPhraseNotContains) {
    this.authPassPhraseNotContains = authPassPhraseNotContains;
  }

  public void setAuthPassPhraseNotContains(String authPassPhraseNotContains) {
    this.authPassPhraseNotContains = JsonNullable.<String>of(authPassPhraseNotContains);
  }


  public SnmpTrapReceiverWhereInput authPassPhraseNotEndsWith(String authPassPhraseNotEndsWith) {
    this.authPassPhraseNotEndsWith = JsonNullable.<String>of(authPassPhraseNotEndsWith);
    return this;
  }

   /**
   * Get authPassPhraseNotEndsWith
   * @return authPassPhraseNotEndsWith
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getAuthPassPhraseNotEndsWith() {
        return authPassPhraseNotEndsWith.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_AUTH_PASS_PHRASE_NOT_ENDS_WITH)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getAuthPassPhraseNotEndsWith_JsonNullable() {
    return authPassPhraseNotEndsWith;
  }
  
  @JsonProperty(JSON_PROPERTY_AUTH_PASS_PHRASE_NOT_ENDS_WITH)
  public void setAuthPassPhraseNotEndsWith_JsonNullable(JsonNullable<String> authPassPhraseNotEndsWith) {
    this.authPassPhraseNotEndsWith = authPassPhraseNotEndsWith;
  }

  public void setAuthPassPhraseNotEndsWith(String authPassPhraseNotEndsWith) {
    this.authPassPhraseNotEndsWith = JsonNullable.<String>of(authPassPhraseNotEndsWith);
  }


  public SnmpTrapReceiverWhereInput authPassPhraseNotIn(List<String> authPassPhraseNotIn) {
    this.authPassPhraseNotIn = JsonNullable.<List<String>>of(authPassPhraseNotIn);
    return this;
  }

  public SnmpTrapReceiverWhereInput addAuthPassPhraseNotInItem(String authPassPhraseNotInItem) {
    if (this.authPassPhraseNotIn == null || !this.authPassPhraseNotIn.isPresent()) {
      this.authPassPhraseNotIn = JsonNullable.<List<String>>of(new ArrayList<>());
    }
    try {
      this.authPassPhraseNotIn.get().add(authPassPhraseNotInItem);
    } catch (java.util.NoSuchElementException e) {
      // this can never happen, as we make sure above that the value is present
    }
    return this;
  }

   /**
   * Get authPassPhraseNotIn
   * @return authPassPhraseNotIn
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public List<String> getAuthPassPhraseNotIn() {
        return authPassPhraseNotIn.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_AUTH_PASS_PHRASE_NOT_IN)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<List<String>> getAuthPassPhraseNotIn_JsonNullable() {
    return authPassPhraseNotIn;
  }
  
  @JsonProperty(JSON_PROPERTY_AUTH_PASS_PHRASE_NOT_IN)
  public void setAuthPassPhraseNotIn_JsonNullable(JsonNullable<List<String>> authPassPhraseNotIn) {
    this.authPassPhraseNotIn = authPassPhraseNotIn;
  }

  public void setAuthPassPhraseNotIn(List<String> authPassPhraseNotIn) {
    this.authPassPhraseNotIn = JsonNullable.<List<String>>of(authPassPhraseNotIn);
  }


  public SnmpTrapReceiverWhereInput authPassPhraseNotStartsWith(String authPassPhraseNotStartsWith) {
    this.authPassPhraseNotStartsWith = JsonNullable.<String>of(authPassPhraseNotStartsWith);
    return this;
  }

   /**
   * Get authPassPhraseNotStartsWith
   * @return authPassPhraseNotStartsWith
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getAuthPassPhraseNotStartsWith() {
        return authPassPhraseNotStartsWith.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_AUTH_PASS_PHRASE_NOT_STARTS_WITH)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getAuthPassPhraseNotStartsWith_JsonNullable() {
    return authPassPhraseNotStartsWith;
  }
  
  @JsonProperty(JSON_PROPERTY_AUTH_PASS_PHRASE_NOT_STARTS_WITH)
  public void setAuthPassPhraseNotStartsWith_JsonNullable(JsonNullable<String> authPassPhraseNotStartsWith) {
    this.authPassPhraseNotStartsWith = authPassPhraseNotStartsWith;
  }

  public void setAuthPassPhraseNotStartsWith(String authPassPhraseNotStartsWith) {
    this.authPassPhraseNotStartsWith = JsonNullable.<String>of(authPassPhraseNotStartsWith);
  }


  public SnmpTrapReceiverWhereInput authPassPhraseStartsWith(String authPassPhraseStartsWith) {
    this.authPassPhraseStartsWith = JsonNullable.<String>of(authPassPhraseStartsWith);
    return this;
  }

   /**
   * Get authPassPhraseStartsWith
   * @return authPassPhraseStartsWith
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getAuthPassPhraseStartsWith() {
        return authPassPhraseStartsWith.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_AUTH_PASS_PHRASE_STARTS_WITH)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getAuthPassPhraseStartsWith_JsonNullable() {
    return authPassPhraseStartsWith;
  }
  
  @JsonProperty(JSON_PROPERTY_AUTH_PASS_PHRASE_STARTS_WITH)
  public void setAuthPassPhraseStartsWith_JsonNullable(JsonNullable<String> authPassPhraseStartsWith) {
    this.authPassPhraseStartsWith = authPassPhraseStartsWith;
  }

  public void setAuthPassPhraseStartsWith(String authPassPhraseStartsWith) {
    this.authPassPhraseStartsWith = JsonNullable.<String>of(authPassPhraseStartsWith);
  }


  public SnmpTrapReceiverWhereInput authProtocol(SnmpAuthProtocol authProtocol) {
    this.authProtocol = JsonNullable.<SnmpAuthProtocol>of(authProtocol);
    return this;
  }

   /**
   * Get authProtocol
   * @return authProtocol
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public SnmpAuthProtocol getAuthProtocol() {
        return authProtocol.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_AUTH_PROTOCOL)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<SnmpAuthProtocol> getAuthProtocol_JsonNullable() {
    return authProtocol;
  }
  
  @JsonProperty(JSON_PROPERTY_AUTH_PROTOCOL)
  public void setAuthProtocol_JsonNullable(JsonNullable<SnmpAuthProtocol> authProtocol) {
    this.authProtocol = authProtocol;
  }

  public void setAuthProtocol(SnmpAuthProtocol authProtocol) {
    this.authProtocol = JsonNullable.<SnmpAuthProtocol>of(authProtocol);
  }


  public SnmpTrapReceiverWhereInput authProtocolIn(List<SnmpAuthProtocol> authProtocolIn) {
    this.authProtocolIn = JsonNullable.<List<SnmpAuthProtocol>>of(authProtocolIn);
    return this;
  }

  public SnmpTrapReceiverWhereInput addAuthProtocolInItem(SnmpAuthProtocol authProtocolInItem) {
    if (this.authProtocolIn == null || !this.authProtocolIn.isPresent()) {
      this.authProtocolIn = JsonNullable.<List<SnmpAuthProtocol>>of(new ArrayList<>());
    }
    try {
      this.authProtocolIn.get().add(authProtocolInItem);
    } catch (java.util.NoSuchElementException e) {
      // this can never happen, as we make sure above that the value is present
    }
    return this;
  }

   /**
   * Get authProtocolIn
   * @return authProtocolIn
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public List<SnmpAuthProtocol> getAuthProtocolIn() {
        return authProtocolIn.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_AUTH_PROTOCOL_IN)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<List<SnmpAuthProtocol>> getAuthProtocolIn_JsonNullable() {
    return authProtocolIn;
  }
  
  @JsonProperty(JSON_PROPERTY_AUTH_PROTOCOL_IN)
  public void setAuthProtocolIn_JsonNullable(JsonNullable<List<SnmpAuthProtocol>> authProtocolIn) {
    this.authProtocolIn = authProtocolIn;
  }

  public void setAuthProtocolIn(List<SnmpAuthProtocol> authProtocolIn) {
    this.authProtocolIn = JsonNullable.<List<SnmpAuthProtocol>>of(authProtocolIn);
  }


  public SnmpTrapReceiverWhereInput authProtocolNot(SnmpAuthProtocol authProtocolNot) {
    this.authProtocolNot = JsonNullable.<SnmpAuthProtocol>of(authProtocolNot);
    return this;
  }

   /**
   * Get authProtocolNot
   * @return authProtocolNot
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public SnmpAuthProtocol getAuthProtocolNot() {
        return authProtocolNot.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_AUTH_PROTOCOL_NOT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<SnmpAuthProtocol> getAuthProtocolNot_JsonNullable() {
    return authProtocolNot;
  }
  
  @JsonProperty(JSON_PROPERTY_AUTH_PROTOCOL_NOT)
  public void setAuthProtocolNot_JsonNullable(JsonNullable<SnmpAuthProtocol> authProtocolNot) {
    this.authProtocolNot = authProtocolNot;
  }

  public void setAuthProtocolNot(SnmpAuthProtocol authProtocolNot) {
    this.authProtocolNot = JsonNullable.<SnmpAuthProtocol>of(authProtocolNot);
  }


  public SnmpTrapReceiverWhereInput authProtocolNotIn(List<SnmpAuthProtocol> authProtocolNotIn) {
    this.authProtocolNotIn = JsonNullable.<List<SnmpAuthProtocol>>of(authProtocolNotIn);
    return this;
  }

  public SnmpTrapReceiverWhereInput addAuthProtocolNotInItem(SnmpAuthProtocol authProtocolNotInItem) {
    if (this.authProtocolNotIn == null || !this.authProtocolNotIn.isPresent()) {
      this.authProtocolNotIn = JsonNullable.<List<SnmpAuthProtocol>>of(new ArrayList<>());
    }
    try {
      this.authProtocolNotIn.get().add(authProtocolNotInItem);
    } catch (java.util.NoSuchElementException e) {
      // this can never happen, as we make sure above that the value is present
    }
    return this;
  }

   /**
   * Get authProtocolNotIn
   * @return authProtocolNotIn
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public List<SnmpAuthProtocol> getAuthProtocolNotIn() {
        return authProtocolNotIn.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_AUTH_PROTOCOL_NOT_IN)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<List<SnmpAuthProtocol>> getAuthProtocolNotIn_JsonNullable() {
    return authProtocolNotIn;
  }
  
  @JsonProperty(JSON_PROPERTY_AUTH_PROTOCOL_NOT_IN)
  public void setAuthProtocolNotIn_JsonNullable(JsonNullable<List<SnmpAuthProtocol>> authProtocolNotIn) {
    this.authProtocolNotIn = authProtocolNotIn;
  }

  public void setAuthProtocolNotIn(List<SnmpAuthProtocol> authProtocolNotIn) {
    this.authProtocolNotIn = JsonNullable.<List<SnmpAuthProtocol>>of(authProtocolNotIn);
  }


  public SnmpTrapReceiverWhereInput cluster(ClusterWhereInput cluster) {
    this.cluster = JsonNullable.<ClusterWhereInput>of(cluster);
    return this;
  }

   /**
   * Get cluster
   * @return cluster
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public ClusterWhereInput getCluster() {
        return cluster.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_CLUSTER)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<ClusterWhereInput> getCluster_JsonNullable() {
    return cluster;
  }
  
  @JsonProperty(JSON_PROPERTY_CLUSTER)
  public void setCluster_JsonNullable(JsonNullable<ClusterWhereInput> cluster) {
    this.cluster = cluster;
  }

  public void setCluster(ClusterWhereInput cluster) {
    this.cluster = JsonNullable.<ClusterWhereInput>of(cluster);
  }


  public SnmpTrapReceiverWhereInput community(String community) {
    this.community = JsonNullable.<String>of(community);
    return this;
  }

   /**
   * Get community
   * @return community
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getCommunity() {
        return community.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_COMMUNITY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getCommunity_JsonNullable() {
    return community;
  }
  
  @JsonProperty(JSON_PROPERTY_COMMUNITY)
  public void setCommunity_JsonNullable(JsonNullable<String> community) {
    this.community = community;
  }

  public void setCommunity(String community) {
    this.community = JsonNullable.<String>of(community);
  }


  public SnmpTrapReceiverWhereInput communityContains(String communityContains) {
    this.communityContains = JsonNullable.<String>of(communityContains);
    return this;
  }

   /**
   * Get communityContains
   * @return communityContains
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getCommunityContains() {
        return communityContains.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_COMMUNITY_CONTAINS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getCommunityContains_JsonNullable() {
    return communityContains;
  }
  
  @JsonProperty(JSON_PROPERTY_COMMUNITY_CONTAINS)
  public void setCommunityContains_JsonNullable(JsonNullable<String> communityContains) {
    this.communityContains = communityContains;
  }

  public void setCommunityContains(String communityContains) {
    this.communityContains = JsonNullable.<String>of(communityContains);
  }


  public SnmpTrapReceiverWhereInput communityEndsWith(String communityEndsWith) {
    this.communityEndsWith = JsonNullable.<String>of(communityEndsWith);
    return this;
  }

   /**
   * Get communityEndsWith
   * @return communityEndsWith
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getCommunityEndsWith() {
        return communityEndsWith.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_COMMUNITY_ENDS_WITH)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getCommunityEndsWith_JsonNullable() {
    return communityEndsWith;
  }
  
  @JsonProperty(JSON_PROPERTY_COMMUNITY_ENDS_WITH)
  public void setCommunityEndsWith_JsonNullable(JsonNullable<String> communityEndsWith) {
    this.communityEndsWith = communityEndsWith;
  }

  public void setCommunityEndsWith(String communityEndsWith) {
    this.communityEndsWith = JsonNullable.<String>of(communityEndsWith);
  }


  public SnmpTrapReceiverWhereInput communityGt(String communityGt) {
    this.communityGt = JsonNullable.<String>of(communityGt);
    return this;
  }

   /**
   * Get communityGt
   * @return communityGt
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getCommunityGt() {
        return communityGt.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_COMMUNITY_GT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getCommunityGt_JsonNullable() {
    return communityGt;
  }
  
  @JsonProperty(JSON_PROPERTY_COMMUNITY_GT)
  public void setCommunityGt_JsonNullable(JsonNullable<String> communityGt) {
    this.communityGt = communityGt;
  }

  public void setCommunityGt(String communityGt) {
    this.communityGt = JsonNullable.<String>of(communityGt);
  }


  public SnmpTrapReceiverWhereInput communityGte(String communityGte) {
    this.communityGte = JsonNullable.<String>of(communityGte);
    return this;
  }

   /**
   * Get communityGte
   * @return communityGte
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getCommunityGte() {
        return communityGte.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_COMMUNITY_GTE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getCommunityGte_JsonNullable() {
    return communityGte;
  }
  
  @JsonProperty(JSON_PROPERTY_COMMUNITY_GTE)
  public void setCommunityGte_JsonNullable(JsonNullable<String> communityGte) {
    this.communityGte = communityGte;
  }

  public void setCommunityGte(String communityGte) {
    this.communityGte = JsonNullable.<String>of(communityGte);
  }


  public SnmpTrapReceiverWhereInput communityIn(List<String> communityIn) {
    this.communityIn = JsonNullable.<List<String>>of(communityIn);
    return this;
  }

  public SnmpTrapReceiverWhereInput addCommunityInItem(String communityInItem) {
    if (this.communityIn == null || !this.communityIn.isPresent()) {
      this.communityIn = JsonNullable.<List<String>>of(new ArrayList<>());
    }
    try {
      this.communityIn.get().add(communityInItem);
    } catch (java.util.NoSuchElementException e) {
      // this can never happen, as we make sure above that the value is present
    }
    return this;
  }

   /**
   * Get communityIn
   * @return communityIn
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public List<String> getCommunityIn() {
        return communityIn.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_COMMUNITY_IN)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<List<String>> getCommunityIn_JsonNullable() {
    return communityIn;
  }
  
  @JsonProperty(JSON_PROPERTY_COMMUNITY_IN)
  public void setCommunityIn_JsonNullable(JsonNullable<List<String>> communityIn) {
    this.communityIn = communityIn;
  }

  public void setCommunityIn(List<String> communityIn) {
    this.communityIn = JsonNullable.<List<String>>of(communityIn);
  }


  public SnmpTrapReceiverWhereInput communityLt(String communityLt) {
    this.communityLt = JsonNullable.<String>of(communityLt);
    return this;
  }

   /**
   * Get communityLt
   * @return communityLt
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getCommunityLt() {
        return communityLt.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_COMMUNITY_LT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getCommunityLt_JsonNullable() {
    return communityLt;
  }
  
  @JsonProperty(JSON_PROPERTY_COMMUNITY_LT)
  public void setCommunityLt_JsonNullable(JsonNullable<String> communityLt) {
    this.communityLt = communityLt;
  }

  public void setCommunityLt(String communityLt) {
    this.communityLt = JsonNullable.<String>of(communityLt);
  }


  public SnmpTrapReceiverWhereInput communityLte(String communityLte) {
    this.communityLte = JsonNullable.<String>of(communityLte);
    return this;
  }

   /**
   * Get communityLte
   * @return communityLte
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getCommunityLte() {
        return communityLte.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_COMMUNITY_LTE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getCommunityLte_JsonNullable() {
    return communityLte;
  }
  
  @JsonProperty(JSON_PROPERTY_COMMUNITY_LTE)
  public void setCommunityLte_JsonNullable(JsonNullable<String> communityLte) {
    this.communityLte = communityLte;
  }

  public void setCommunityLte(String communityLte) {
    this.communityLte = JsonNullable.<String>of(communityLte);
  }


  public SnmpTrapReceiverWhereInput communityNot(String communityNot) {
    this.communityNot = JsonNullable.<String>of(communityNot);
    return this;
  }

   /**
   * Get communityNot
   * @return communityNot
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getCommunityNot() {
        return communityNot.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_COMMUNITY_NOT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getCommunityNot_JsonNullable() {
    return communityNot;
  }
  
  @JsonProperty(JSON_PROPERTY_COMMUNITY_NOT)
  public void setCommunityNot_JsonNullable(JsonNullable<String> communityNot) {
    this.communityNot = communityNot;
  }

  public void setCommunityNot(String communityNot) {
    this.communityNot = JsonNullable.<String>of(communityNot);
  }


  public SnmpTrapReceiverWhereInput communityNotContains(String communityNotContains) {
    this.communityNotContains = JsonNullable.<String>of(communityNotContains);
    return this;
  }

   /**
   * Get communityNotContains
   * @return communityNotContains
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getCommunityNotContains() {
        return communityNotContains.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_COMMUNITY_NOT_CONTAINS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getCommunityNotContains_JsonNullable() {
    return communityNotContains;
  }
  
  @JsonProperty(JSON_PROPERTY_COMMUNITY_NOT_CONTAINS)
  public void setCommunityNotContains_JsonNullable(JsonNullable<String> communityNotContains) {
    this.communityNotContains = communityNotContains;
  }

  public void setCommunityNotContains(String communityNotContains) {
    this.communityNotContains = JsonNullable.<String>of(communityNotContains);
  }


  public SnmpTrapReceiverWhereInput communityNotEndsWith(String communityNotEndsWith) {
    this.communityNotEndsWith = JsonNullable.<String>of(communityNotEndsWith);
    return this;
  }

   /**
   * Get communityNotEndsWith
   * @return communityNotEndsWith
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getCommunityNotEndsWith() {
        return communityNotEndsWith.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_COMMUNITY_NOT_ENDS_WITH)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getCommunityNotEndsWith_JsonNullable() {
    return communityNotEndsWith;
  }
  
  @JsonProperty(JSON_PROPERTY_COMMUNITY_NOT_ENDS_WITH)
  public void setCommunityNotEndsWith_JsonNullable(JsonNullable<String> communityNotEndsWith) {
    this.communityNotEndsWith = communityNotEndsWith;
  }

  public void setCommunityNotEndsWith(String communityNotEndsWith) {
    this.communityNotEndsWith = JsonNullable.<String>of(communityNotEndsWith);
  }


  public SnmpTrapReceiverWhereInput communityNotIn(List<String> communityNotIn) {
    this.communityNotIn = JsonNullable.<List<String>>of(communityNotIn);
    return this;
  }

  public SnmpTrapReceiverWhereInput addCommunityNotInItem(String communityNotInItem) {
    if (this.communityNotIn == null || !this.communityNotIn.isPresent()) {
      this.communityNotIn = JsonNullable.<List<String>>of(new ArrayList<>());
    }
    try {
      this.communityNotIn.get().add(communityNotInItem);
    } catch (java.util.NoSuchElementException e) {
      // this can never happen, as we make sure above that the value is present
    }
    return this;
  }

   /**
   * Get communityNotIn
   * @return communityNotIn
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public List<String> getCommunityNotIn() {
        return communityNotIn.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_COMMUNITY_NOT_IN)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<List<String>> getCommunityNotIn_JsonNullable() {
    return communityNotIn;
  }
  
  @JsonProperty(JSON_PROPERTY_COMMUNITY_NOT_IN)
  public void setCommunityNotIn_JsonNullable(JsonNullable<List<String>> communityNotIn) {
    this.communityNotIn = communityNotIn;
  }

  public void setCommunityNotIn(List<String> communityNotIn) {
    this.communityNotIn = JsonNullable.<List<String>>of(communityNotIn);
  }


  public SnmpTrapReceiverWhereInput communityNotStartsWith(String communityNotStartsWith) {
    this.communityNotStartsWith = JsonNullable.<String>of(communityNotStartsWith);
    return this;
  }

   /**
   * Get communityNotStartsWith
   * @return communityNotStartsWith
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getCommunityNotStartsWith() {
        return communityNotStartsWith.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_COMMUNITY_NOT_STARTS_WITH)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getCommunityNotStartsWith_JsonNullable() {
    return communityNotStartsWith;
  }
  
  @JsonProperty(JSON_PROPERTY_COMMUNITY_NOT_STARTS_WITH)
  public void setCommunityNotStartsWith_JsonNullable(JsonNullable<String> communityNotStartsWith) {
    this.communityNotStartsWith = communityNotStartsWith;
  }

  public void setCommunityNotStartsWith(String communityNotStartsWith) {
    this.communityNotStartsWith = JsonNullable.<String>of(communityNotStartsWith);
  }


  public SnmpTrapReceiverWhereInput communityStartsWith(String communityStartsWith) {
    this.communityStartsWith = JsonNullable.<String>of(communityStartsWith);
    return this;
  }

   /**
   * Get communityStartsWith
   * @return communityStartsWith
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getCommunityStartsWith() {
        return communityStartsWith.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_COMMUNITY_STARTS_WITH)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getCommunityStartsWith_JsonNullable() {
    return communityStartsWith;
  }
  
  @JsonProperty(JSON_PROPERTY_COMMUNITY_STARTS_WITH)
  public void setCommunityStartsWith_JsonNullable(JsonNullable<String> communityStartsWith) {
    this.communityStartsWith = communityStartsWith;
  }

  public void setCommunityStartsWith(String communityStartsWith) {
    this.communityStartsWith = JsonNullable.<String>of(communityStartsWith);
  }


  public SnmpTrapReceiverWhereInput disabled(Boolean disabled) {
    this.disabled = JsonNullable.<Boolean>of(disabled);
    return this;
  }

   /**
   * Get disabled
   * @return disabled
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public Boolean getDisabled() {
        return disabled.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_DISABLED)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<Boolean> getDisabled_JsonNullable() {
    return disabled;
  }
  
  @JsonProperty(JSON_PROPERTY_DISABLED)
  public void setDisabled_JsonNullable(JsonNullable<Boolean> disabled) {
    this.disabled = disabled;
  }

  public void setDisabled(Boolean disabled) {
    this.disabled = JsonNullable.<Boolean>of(disabled);
  }


  public SnmpTrapReceiverWhereInput disabledNot(Boolean disabledNot) {
    this.disabledNot = JsonNullable.<Boolean>of(disabledNot);
    return this;
  }

   /**
   * Get disabledNot
   * @return disabledNot
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public Boolean getDisabledNot() {
        return disabledNot.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_DISABLED_NOT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<Boolean> getDisabledNot_JsonNullable() {
    return disabledNot;
  }
  
  @JsonProperty(JSON_PROPERTY_DISABLED_NOT)
  public void setDisabledNot_JsonNullable(JsonNullable<Boolean> disabledNot) {
    this.disabledNot = disabledNot;
  }

  public void setDisabledNot(Boolean disabledNot) {
    this.disabledNot = JsonNullable.<Boolean>of(disabledNot);
  }


  public SnmpTrapReceiverWhereInput engineId(String engineId) {
    this.engineId = JsonNullable.<String>of(engineId);
    return this;
  }

   /**
   * Get engineId
   * @return engineId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getEngineId() {
        return engineId.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_ENGINE_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getEngineId_JsonNullable() {
    return engineId;
  }
  
  @JsonProperty(JSON_PROPERTY_ENGINE_ID)
  public void setEngineId_JsonNullable(JsonNullable<String> engineId) {
    this.engineId = engineId;
  }

  public void setEngineId(String engineId) {
    this.engineId = JsonNullable.<String>of(engineId);
  }


  public SnmpTrapReceiverWhereInput engineIdContains(String engineIdContains) {
    this.engineIdContains = JsonNullable.<String>of(engineIdContains);
    return this;
  }

   /**
   * Get engineIdContains
   * @return engineIdContains
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getEngineIdContains() {
        return engineIdContains.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_ENGINE_ID_CONTAINS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getEngineIdContains_JsonNullable() {
    return engineIdContains;
  }
  
  @JsonProperty(JSON_PROPERTY_ENGINE_ID_CONTAINS)
  public void setEngineIdContains_JsonNullable(JsonNullable<String> engineIdContains) {
    this.engineIdContains = engineIdContains;
  }

  public void setEngineIdContains(String engineIdContains) {
    this.engineIdContains = JsonNullable.<String>of(engineIdContains);
  }


  public SnmpTrapReceiverWhereInput engineIdEndsWith(String engineIdEndsWith) {
    this.engineIdEndsWith = JsonNullable.<String>of(engineIdEndsWith);
    return this;
  }

   /**
   * Get engineIdEndsWith
   * @return engineIdEndsWith
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getEngineIdEndsWith() {
        return engineIdEndsWith.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_ENGINE_ID_ENDS_WITH)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getEngineIdEndsWith_JsonNullable() {
    return engineIdEndsWith;
  }
  
  @JsonProperty(JSON_PROPERTY_ENGINE_ID_ENDS_WITH)
  public void setEngineIdEndsWith_JsonNullable(JsonNullable<String> engineIdEndsWith) {
    this.engineIdEndsWith = engineIdEndsWith;
  }

  public void setEngineIdEndsWith(String engineIdEndsWith) {
    this.engineIdEndsWith = JsonNullable.<String>of(engineIdEndsWith);
  }


  public SnmpTrapReceiverWhereInput engineIdGt(String engineIdGt) {
    this.engineIdGt = JsonNullable.<String>of(engineIdGt);
    return this;
  }

   /**
   * Get engineIdGt
   * @return engineIdGt
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getEngineIdGt() {
        return engineIdGt.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_ENGINE_ID_GT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getEngineIdGt_JsonNullable() {
    return engineIdGt;
  }
  
  @JsonProperty(JSON_PROPERTY_ENGINE_ID_GT)
  public void setEngineIdGt_JsonNullable(JsonNullable<String> engineIdGt) {
    this.engineIdGt = engineIdGt;
  }

  public void setEngineIdGt(String engineIdGt) {
    this.engineIdGt = JsonNullable.<String>of(engineIdGt);
  }


  public SnmpTrapReceiverWhereInput engineIdGte(String engineIdGte) {
    this.engineIdGte = JsonNullable.<String>of(engineIdGte);
    return this;
  }

   /**
   * Get engineIdGte
   * @return engineIdGte
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getEngineIdGte() {
        return engineIdGte.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_ENGINE_ID_GTE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getEngineIdGte_JsonNullable() {
    return engineIdGte;
  }
  
  @JsonProperty(JSON_PROPERTY_ENGINE_ID_GTE)
  public void setEngineIdGte_JsonNullable(JsonNullable<String> engineIdGte) {
    this.engineIdGte = engineIdGte;
  }

  public void setEngineIdGte(String engineIdGte) {
    this.engineIdGte = JsonNullable.<String>of(engineIdGte);
  }


  public SnmpTrapReceiverWhereInput engineIdIn(List<String> engineIdIn) {
    this.engineIdIn = JsonNullable.<List<String>>of(engineIdIn);
    return this;
  }

  public SnmpTrapReceiverWhereInput addEngineIdInItem(String engineIdInItem) {
    if (this.engineIdIn == null || !this.engineIdIn.isPresent()) {
      this.engineIdIn = JsonNullable.<List<String>>of(new ArrayList<>());
    }
    try {
      this.engineIdIn.get().add(engineIdInItem);
    } catch (java.util.NoSuchElementException e) {
      // this can never happen, as we make sure above that the value is present
    }
    return this;
  }

   /**
   * Get engineIdIn
   * @return engineIdIn
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public List<String> getEngineIdIn() {
        return engineIdIn.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_ENGINE_ID_IN)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<List<String>> getEngineIdIn_JsonNullable() {
    return engineIdIn;
  }
  
  @JsonProperty(JSON_PROPERTY_ENGINE_ID_IN)
  public void setEngineIdIn_JsonNullable(JsonNullable<List<String>> engineIdIn) {
    this.engineIdIn = engineIdIn;
  }

  public void setEngineIdIn(List<String> engineIdIn) {
    this.engineIdIn = JsonNullable.<List<String>>of(engineIdIn);
  }


  public SnmpTrapReceiverWhereInput engineIdLt(String engineIdLt) {
    this.engineIdLt = JsonNullable.<String>of(engineIdLt);
    return this;
  }

   /**
   * Get engineIdLt
   * @return engineIdLt
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getEngineIdLt() {
        return engineIdLt.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_ENGINE_ID_LT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getEngineIdLt_JsonNullable() {
    return engineIdLt;
  }
  
  @JsonProperty(JSON_PROPERTY_ENGINE_ID_LT)
  public void setEngineIdLt_JsonNullable(JsonNullable<String> engineIdLt) {
    this.engineIdLt = engineIdLt;
  }

  public void setEngineIdLt(String engineIdLt) {
    this.engineIdLt = JsonNullable.<String>of(engineIdLt);
  }


  public SnmpTrapReceiverWhereInput engineIdLte(String engineIdLte) {
    this.engineIdLte = JsonNullable.<String>of(engineIdLte);
    return this;
  }

   /**
   * Get engineIdLte
   * @return engineIdLte
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getEngineIdLte() {
        return engineIdLte.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_ENGINE_ID_LTE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getEngineIdLte_JsonNullable() {
    return engineIdLte;
  }
  
  @JsonProperty(JSON_PROPERTY_ENGINE_ID_LTE)
  public void setEngineIdLte_JsonNullable(JsonNullable<String> engineIdLte) {
    this.engineIdLte = engineIdLte;
  }

  public void setEngineIdLte(String engineIdLte) {
    this.engineIdLte = JsonNullable.<String>of(engineIdLte);
  }


  public SnmpTrapReceiverWhereInput engineIdNot(String engineIdNot) {
    this.engineIdNot = JsonNullable.<String>of(engineIdNot);
    return this;
  }

   /**
   * Get engineIdNot
   * @return engineIdNot
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getEngineIdNot() {
        return engineIdNot.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_ENGINE_ID_NOT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getEngineIdNot_JsonNullable() {
    return engineIdNot;
  }
  
  @JsonProperty(JSON_PROPERTY_ENGINE_ID_NOT)
  public void setEngineIdNot_JsonNullable(JsonNullable<String> engineIdNot) {
    this.engineIdNot = engineIdNot;
  }

  public void setEngineIdNot(String engineIdNot) {
    this.engineIdNot = JsonNullable.<String>of(engineIdNot);
  }


  public SnmpTrapReceiverWhereInput engineIdNotContains(String engineIdNotContains) {
    this.engineIdNotContains = JsonNullable.<String>of(engineIdNotContains);
    return this;
  }

   /**
   * Get engineIdNotContains
   * @return engineIdNotContains
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getEngineIdNotContains() {
        return engineIdNotContains.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_ENGINE_ID_NOT_CONTAINS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getEngineIdNotContains_JsonNullable() {
    return engineIdNotContains;
  }
  
  @JsonProperty(JSON_PROPERTY_ENGINE_ID_NOT_CONTAINS)
  public void setEngineIdNotContains_JsonNullable(JsonNullable<String> engineIdNotContains) {
    this.engineIdNotContains = engineIdNotContains;
  }

  public void setEngineIdNotContains(String engineIdNotContains) {
    this.engineIdNotContains = JsonNullable.<String>of(engineIdNotContains);
  }


  public SnmpTrapReceiverWhereInput engineIdNotEndsWith(String engineIdNotEndsWith) {
    this.engineIdNotEndsWith = JsonNullable.<String>of(engineIdNotEndsWith);
    return this;
  }

   /**
   * Get engineIdNotEndsWith
   * @return engineIdNotEndsWith
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getEngineIdNotEndsWith() {
        return engineIdNotEndsWith.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_ENGINE_ID_NOT_ENDS_WITH)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getEngineIdNotEndsWith_JsonNullable() {
    return engineIdNotEndsWith;
  }
  
  @JsonProperty(JSON_PROPERTY_ENGINE_ID_NOT_ENDS_WITH)
  public void setEngineIdNotEndsWith_JsonNullable(JsonNullable<String> engineIdNotEndsWith) {
    this.engineIdNotEndsWith = engineIdNotEndsWith;
  }

  public void setEngineIdNotEndsWith(String engineIdNotEndsWith) {
    this.engineIdNotEndsWith = JsonNullable.<String>of(engineIdNotEndsWith);
  }


  public SnmpTrapReceiverWhereInput engineIdNotIn(List<String> engineIdNotIn) {
    this.engineIdNotIn = JsonNullable.<List<String>>of(engineIdNotIn);
    return this;
  }

  public SnmpTrapReceiverWhereInput addEngineIdNotInItem(String engineIdNotInItem) {
    if (this.engineIdNotIn == null || !this.engineIdNotIn.isPresent()) {
      this.engineIdNotIn = JsonNullable.<List<String>>of(new ArrayList<>());
    }
    try {
      this.engineIdNotIn.get().add(engineIdNotInItem);
    } catch (java.util.NoSuchElementException e) {
      // this can never happen, as we make sure above that the value is present
    }
    return this;
  }

   /**
   * Get engineIdNotIn
   * @return engineIdNotIn
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public List<String> getEngineIdNotIn() {
        return engineIdNotIn.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_ENGINE_ID_NOT_IN)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<List<String>> getEngineIdNotIn_JsonNullable() {
    return engineIdNotIn;
  }
  
  @JsonProperty(JSON_PROPERTY_ENGINE_ID_NOT_IN)
  public void setEngineIdNotIn_JsonNullable(JsonNullable<List<String>> engineIdNotIn) {
    this.engineIdNotIn = engineIdNotIn;
  }

  public void setEngineIdNotIn(List<String> engineIdNotIn) {
    this.engineIdNotIn = JsonNullable.<List<String>>of(engineIdNotIn);
  }


  public SnmpTrapReceiverWhereInput engineIdNotStartsWith(String engineIdNotStartsWith) {
    this.engineIdNotStartsWith = JsonNullable.<String>of(engineIdNotStartsWith);
    return this;
  }

   /**
   * Get engineIdNotStartsWith
   * @return engineIdNotStartsWith
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getEngineIdNotStartsWith() {
        return engineIdNotStartsWith.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_ENGINE_ID_NOT_STARTS_WITH)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getEngineIdNotStartsWith_JsonNullable() {
    return engineIdNotStartsWith;
  }
  
  @JsonProperty(JSON_PROPERTY_ENGINE_ID_NOT_STARTS_WITH)
  public void setEngineIdNotStartsWith_JsonNullable(JsonNullable<String> engineIdNotStartsWith) {
    this.engineIdNotStartsWith = engineIdNotStartsWith;
  }

  public void setEngineIdNotStartsWith(String engineIdNotStartsWith) {
    this.engineIdNotStartsWith = JsonNullable.<String>of(engineIdNotStartsWith);
  }


  public SnmpTrapReceiverWhereInput engineIdStartsWith(String engineIdStartsWith) {
    this.engineIdStartsWith = JsonNullable.<String>of(engineIdStartsWith);
    return this;
  }

   /**
   * Get engineIdStartsWith
   * @return engineIdStartsWith
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getEngineIdStartsWith() {
        return engineIdStartsWith.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_ENGINE_ID_STARTS_WITH)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getEngineIdStartsWith_JsonNullable() {
    return engineIdStartsWith;
  }
  
  @JsonProperty(JSON_PROPERTY_ENGINE_ID_STARTS_WITH)
  public void setEngineIdStartsWith_JsonNullable(JsonNullable<String> engineIdStartsWith) {
    this.engineIdStartsWith = engineIdStartsWith;
  }

  public void setEngineIdStartsWith(String engineIdStartsWith) {
    this.engineIdStartsWith = JsonNullable.<String>of(engineIdStartsWith);
  }


  public SnmpTrapReceiverWhereInput entityAsyncStatus(EntityAsyncStatus entityAsyncStatus) {
    this.entityAsyncStatus = JsonNullable.<EntityAsyncStatus>of(entityAsyncStatus);
    return this;
  }

   /**
   * Get entityAsyncStatus
   * @return entityAsyncStatus
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public EntityAsyncStatus getEntityAsyncStatus() {
        return entityAsyncStatus.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_ENTITY_ASYNC_STATUS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<EntityAsyncStatus> getEntityAsyncStatus_JsonNullable() {
    return entityAsyncStatus;
  }
  
  @JsonProperty(JSON_PROPERTY_ENTITY_ASYNC_STATUS)
  public void setEntityAsyncStatus_JsonNullable(JsonNullable<EntityAsyncStatus> entityAsyncStatus) {
    this.entityAsyncStatus = entityAsyncStatus;
  }

  public void setEntityAsyncStatus(EntityAsyncStatus entityAsyncStatus) {
    this.entityAsyncStatus = JsonNullable.<EntityAsyncStatus>of(entityAsyncStatus);
  }


  public SnmpTrapReceiverWhereInput entityAsyncStatusIn(List<EntityAsyncStatus> entityAsyncStatusIn) {
    this.entityAsyncStatusIn = JsonNullable.<List<EntityAsyncStatus>>of(entityAsyncStatusIn);
    return this;
  }

  public SnmpTrapReceiverWhereInput addEntityAsyncStatusInItem(EntityAsyncStatus entityAsyncStatusInItem) {
    if (this.entityAsyncStatusIn == null || !this.entityAsyncStatusIn.isPresent()) {
      this.entityAsyncStatusIn = JsonNullable.<List<EntityAsyncStatus>>of(new ArrayList<>());
    }
    try {
      this.entityAsyncStatusIn.get().add(entityAsyncStatusInItem);
    } catch (java.util.NoSuchElementException e) {
      // this can never happen, as we make sure above that the value is present
    }
    return this;
  }

   /**
   * Get entityAsyncStatusIn
   * @return entityAsyncStatusIn
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public List<EntityAsyncStatus> getEntityAsyncStatusIn() {
        return entityAsyncStatusIn.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_ENTITY_ASYNC_STATUS_IN)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<List<EntityAsyncStatus>> getEntityAsyncStatusIn_JsonNullable() {
    return entityAsyncStatusIn;
  }
  
  @JsonProperty(JSON_PROPERTY_ENTITY_ASYNC_STATUS_IN)
  public void setEntityAsyncStatusIn_JsonNullable(JsonNullable<List<EntityAsyncStatus>> entityAsyncStatusIn) {
    this.entityAsyncStatusIn = entityAsyncStatusIn;
  }

  public void setEntityAsyncStatusIn(List<EntityAsyncStatus> entityAsyncStatusIn) {
    this.entityAsyncStatusIn = JsonNullable.<List<EntityAsyncStatus>>of(entityAsyncStatusIn);
  }


  public SnmpTrapReceiverWhereInput entityAsyncStatusNot(EntityAsyncStatus entityAsyncStatusNot) {
    this.entityAsyncStatusNot = JsonNullable.<EntityAsyncStatus>of(entityAsyncStatusNot);
    return this;
  }

   /**
   * Get entityAsyncStatusNot
   * @return entityAsyncStatusNot
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public EntityAsyncStatus getEntityAsyncStatusNot() {
        return entityAsyncStatusNot.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_ENTITY_ASYNC_STATUS_NOT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<EntityAsyncStatus> getEntityAsyncStatusNot_JsonNullable() {
    return entityAsyncStatusNot;
  }
  
  @JsonProperty(JSON_PROPERTY_ENTITY_ASYNC_STATUS_NOT)
  public void setEntityAsyncStatusNot_JsonNullable(JsonNullable<EntityAsyncStatus> entityAsyncStatusNot) {
    this.entityAsyncStatusNot = entityAsyncStatusNot;
  }

  public void setEntityAsyncStatusNot(EntityAsyncStatus entityAsyncStatusNot) {
    this.entityAsyncStatusNot = JsonNullable.<EntityAsyncStatus>of(entityAsyncStatusNot);
  }


  public SnmpTrapReceiverWhereInput entityAsyncStatusNotIn(List<EntityAsyncStatus> entityAsyncStatusNotIn) {
    this.entityAsyncStatusNotIn = JsonNullable.<List<EntityAsyncStatus>>of(entityAsyncStatusNotIn);
    return this;
  }

  public SnmpTrapReceiverWhereInput addEntityAsyncStatusNotInItem(EntityAsyncStatus entityAsyncStatusNotInItem) {
    if (this.entityAsyncStatusNotIn == null || !this.entityAsyncStatusNotIn.isPresent()) {
      this.entityAsyncStatusNotIn = JsonNullable.<List<EntityAsyncStatus>>of(new ArrayList<>());
    }
    try {
      this.entityAsyncStatusNotIn.get().add(entityAsyncStatusNotInItem);
    } catch (java.util.NoSuchElementException e) {
      // this can never happen, as we make sure above that the value is present
    }
    return this;
  }

   /**
   * Get entityAsyncStatusNotIn
   * @return entityAsyncStatusNotIn
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public List<EntityAsyncStatus> getEntityAsyncStatusNotIn() {
        return entityAsyncStatusNotIn.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_ENTITY_ASYNC_STATUS_NOT_IN)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<List<EntityAsyncStatus>> getEntityAsyncStatusNotIn_JsonNullable() {
    return entityAsyncStatusNotIn;
  }
  
  @JsonProperty(JSON_PROPERTY_ENTITY_ASYNC_STATUS_NOT_IN)
  public void setEntityAsyncStatusNotIn_JsonNullable(JsonNullable<List<EntityAsyncStatus>> entityAsyncStatusNotIn) {
    this.entityAsyncStatusNotIn = entityAsyncStatusNotIn;
  }

  public void setEntityAsyncStatusNotIn(List<EntityAsyncStatus> entityAsyncStatusNotIn) {
    this.entityAsyncStatusNotIn = JsonNullable.<List<EntityAsyncStatus>>of(entityAsyncStatusNotIn);
  }


  public SnmpTrapReceiverWhereInput host(String host) {
    this.host = JsonNullable.<String>of(host);
    return this;
  }

   /**
   * Get host
   * @return host
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getHost() {
        return host.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_HOST)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getHost_JsonNullable() {
    return host;
  }
  
  @JsonProperty(JSON_PROPERTY_HOST)
  public void setHost_JsonNullable(JsonNullable<String> host) {
    this.host = host;
  }

  public void setHost(String host) {
    this.host = JsonNullable.<String>of(host);
  }


  public SnmpTrapReceiverWhereInput hostContains(String hostContains) {
    this.hostContains = JsonNullable.<String>of(hostContains);
    return this;
  }

   /**
   * Get hostContains
   * @return hostContains
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getHostContains() {
        return hostContains.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_HOST_CONTAINS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getHostContains_JsonNullable() {
    return hostContains;
  }
  
  @JsonProperty(JSON_PROPERTY_HOST_CONTAINS)
  public void setHostContains_JsonNullable(JsonNullable<String> hostContains) {
    this.hostContains = hostContains;
  }

  public void setHostContains(String hostContains) {
    this.hostContains = JsonNullable.<String>of(hostContains);
  }


  public SnmpTrapReceiverWhereInput hostEndsWith(String hostEndsWith) {
    this.hostEndsWith = JsonNullable.<String>of(hostEndsWith);
    return this;
  }

   /**
   * Get hostEndsWith
   * @return hostEndsWith
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getHostEndsWith() {
        return hostEndsWith.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_HOST_ENDS_WITH)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getHostEndsWith_JsonNullable() {
    return hostEndsWith;
  }
  
  @JsonProperty(JSON_PROPERTY_HOST_ENDS_WITH)
  public void setHostEndsWith_JsonNullable(JsonNullable<String> hostEndsWith) {
    this.hostEndsWith = hostEndsWith;
  }

  public void setHostEndsWith(String hostEndsWith) {
    this.hostEndsWith = JsonNullable.<String>of(hostEndsWith);
  }


  public SnmpTrapReceiverWhereInput hostGt(String hostGt) {
    this.hostGt = JsonNullable.<String>of(hostGt);
    return this;
  }

   /**
   * Get hostGt
   * @return hostGt
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getHostGt() {
        return hostGt.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_HOST_GT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getHostGt_JsonNullable() {
    return hostGt;
  }
  
  @JsonProperty(JSON_PROPERTY_HOST_GT)
  public void setHostGt_JsonNullable(JsonNullable<String> hostGt) {
    this.hostGt = hostGt;
  }

  public void setHostGt(String hostGt) {
    this.hostGt = JsonNullable.<String>of(hostGt);
  }


  public SnmpTrapReceiverWhereInput hostGte(String hostGte) {
    this.hostGte = JsonNullable.<String>of(hostGte);
    return this;
  }

   /**
   * Get hostGte
   * @return hostGte
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getHostGte() {
        return hostGte.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_HOST_GTE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getHostGte_JsonNullable() {
    return hostGte;
  }
  
  @JsonProperty(JSON_PROPERTY_HOST_GTE)
  public void setHostGte_JsonNullable(JsonNullable<String> hostGte) {
    this.hostGte = hostGte;
  }

  public void setHostGte(String hostGte) {
    this.hostGte = JsonNullable.<String>of(hostGte);
  }


  public SnmpTrapReceiverWhereInput hostIn(List<String> hostIn) {
    this.hostIn = JsonNullable.<List<String>>of(hostIn);
    return this;
  }

  public SnmpTrapReceiverWhereInput addHostInItem(String hostInItem) {
    if (this.hostIn == null || !this.hostIn.isPresent()) {
      this.hostIn = JsonNullable.<List<String>>of(new ArrayList<>());
    }
    try {
      this.hostIn.get().add(hostInItem);
    } catch (java.util.NoSuchElementException e) {
      // this can never happen, as we make sure above that the value is present
    }
    return this;
  }

   /**
   * Get hostIn
   * @return hostIn
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public List<String> getHostIn() {
        return hostIn.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_HOST_IN)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<List<String>> getHostIn_JsonNullable() {
    return hostIn;
  }
  
  @JsonProperty(JSON_PROPERTY_HOST_IN)
  public void setHostIn_JsonNullable(JsonNullable<List<String>> hostIn) {
    this.hostIn = hostIn;
  }

  public void setHostIn(List<String> hostIn) {
    this.hostIn = JsonNullable.<List<String>>of(hostIn);
  }


  public SnmpTrapReceiverWhereInput hostLt(String hostLt) {
    this.hostLt = JsonNullable.<String>of(hostLt);
    return this;
  }

   /**
   * Get hostLt
   * @return hostLt
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getHostLt() {
        return hostLt.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_HOST_LT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getHostLt_JsonNullable() {
    return hostLt;
  }
  
  @JsonProperty(JSON_PROPERTY_HOST_LT)
  public void setHostLt_JsonNullable(JsonNullable<String> hostLt) {
    this.hostLt = hostLt;
  }

  public void setHostLt(String hostLt) {
    this.hostLt = JsonNullable.<String>of(hostLt);
  }


  public SnmpTrapReceiverWhereInput hostLte(String hostLte) {
    this.hostLte = JsonNullable.<String>of(hostLte);
    return this;
  }

   /**
   * Get hostLte
   * @return hostLte
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getHostLte() {
        return hostLte.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_HOST_LTE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getHostLte_JsonNullable() {
    return hostLte;
  }
  
  @JsonProperty(JSON_PROPERTY_HOST_LTE)
  public void setHostLte_JsonNullable(JsonNullable<String> hostLte) {
    this.hostLte = hostLte;
  }

  public void setHostLte(String hostLte) {
    this.hostLte = JsonNullable.<String>of(hostLte);
  }


  public SnmpTrapReceiverWhereInput hostNot(String hostNot) {
    this.hostNot = JsonNullable.<String>of(hostNot);
    return this;
  }

   /**
   * Get hostNot
   * @return hostNot
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getHostNot() {
        return hostNot.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_HOST_NOT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getHostNot_JsonNullable() {
    return hostNot;
  }
  
  @JsonProperty(JSON_PROPERTY_HOST_NOT)
  public void setHostNot_JsonNullable(JsonNullable<String> hostNot) {
    this.hostNot = hostNot;
  }

  public void setHostNot(String hostNot) {
    this.hostNot = JsonNullable.<String>of(hostNot);
  }


  public SnmpTrapReceiverWhereInput hostNotContains(String hostNotContains) {
    this.hostNotContains = JsonNullable.<String>of(hostNotContains);
    return this;
  }

   /**
   * Get hostNotContains
   * @return hostNotContains
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getHostNotContains() {
        return hostNotContains.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_HOST_NOT_CONTAINS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getHostNotContains_JsonNullable() {
    return hostNotContains;
  }
  
  @JsonProperty(JSON_PROPERTY_HOST_NOT_CONTAINS)
  public void setHostNotContains_JsonNullable(JsonNullable<String> hostNotContains) {
    this.hostNotContains = hostNotContains;
  }

  public void setHostNotContains(String hostNotContains) {
    this.hostNotContains = JsonNullable.<String>of(hostNotContains);
  }


  public SnmpTrapReceiverWhereInput hostNotEndsWith(String hostNotEndsWith) {
    this.hostNotEndsWith = JsonNullable.<String>of(hostNotEndsWith);
    return this;
  }

   /**
   * Get hostNotEndsWith
   * @return hostNotEndsWith
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getHostNotEndsWith() {
        return hostNotEndsWith.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_HOST_NOT_ENDS_WITH)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getHostNotEndsWith_JsonNullable() {
    return hostNotEndsWith;
  }
  
  @JsonProperty(JSON_PROPERTY_HOST_NOT_ENDS_WITH)
  public void setHostNotEndsWith_JsonNullable(JsonNullable<String> hostNotEndsWith) {
    this.hostNotEndsWith = hostNotEndsWith;
  }

  public void setHostNotEndsWith(String hostNotEndsWith) {
    this.hostNotEndsWith = JsonNullable.<String>of(hostNotEndsWith);
  }


  public SnmpTrapReceiverWhereInput hostNotIn(List<String> hostNotIn) {
    this.hostNotIn = JsonNullable.<List<String>>of(hostNotIn);
    return this;
  }

  public SnmpTrapReceiverWhereInput addHostNotInItem(String hostNotInItem) {
    if (this.hostNotIn == null || !this.hostNotIn.isPresent()) {
      this.hostNotIn = JsonNullable.<List<String>>of(new ArrayList<>());
    }
    try {
      this.hostNotIn.get().add(hostNotInItem);
    } catch (java.util.NoSuchElementException e) {
      // this can never happen, as we make sure above that the value is present
    }
    return this;
  }

   /**
   * Get hostNotIn
   * @return hostNotIn
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public List<String> getHostNotIn() {
        return hostNotIn.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_HOST_NOT_IN)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<List<String>> getHostNotIn_JsonNullable() {
    return hostNotIn;
  }
  
  @JsonProperty(JSON_PROPERTY_HOST_NOT_IN)
  public void setHostNotIn_JsonNullable(JsonNullable<List<String>> hostNotIn) {
    this.hostNotIn = hostNotIn;
  }

  public void setHostNotIn(List<String> hostNotIn) {
    this.hostNotIn = JsonNullable.<List<String>>of(hostNotIn);
  }


  public SnmpTrapReceiverWhereInput hostNotStartsWith(String hostNotStartsWith) {
    this.hostNotStartsWith = JsonNullable.<String>of(hostNotStartsWith);
    return this;
  }

   /**
   * Get hostNotStartsWith
   * @return hostNotStartsWith
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getHostNotStartsWith() {
        return hostNotStartsWith.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_HOST_NOT_STARTS_WITH)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getHostNotStartsWith_JsonNullable() {
    return hostNotStartsWith;
  }
  
  @JsonProperty(JSON_PROPERTY_HOST_NOT_STARTS_WITH)
  public void setHostNotStartsWith_JsonNullable(JsonNullable<String> hostNotStartsWith) {
    this.hostNotStartsWith = hostNotStartsWith;
  }

  public void setHostNotStartsWith(String hostNotStartsWith) {
    this.hostNotStartsWith = JsonNullable.<String>of(hostNotStartsWith);
  }


  public SnmpTrapReceiverWhereInput hostStartsWith(String hostStartsWith) {
    this.hostStartsWith = JsonNullable.<String>of(hostStartsWith);
    return this;
  }

   /**
   * Get hostStartsWith
   * @return hostStartsWith
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getHostStartsWith() {
        return hostStartsWith.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_HOST_STARTS_WITH)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getHostStartsWith_JsonNullable() {
    return hostStartsWith;
  }
  
  @JsonProperty(JSON_PROPERTY_HOST_STARTS_WITH)
  public void setHostStartsWith_JsonNullable(JsonNullable<String> hostStartsWith) {
    this.hostStartsWith = hostStartsWith;
  }

  public void setHostStartsWith(String hostStartsWith) {
    this.hostStartsWith = JsonNullable.<String>of(hostStartsWith);
  }


  public SnmpTrapReceiverWhereInput id(String id) {
    this.id = JsonNullable.<String>of(id);
    return this;
  }

   /**
   * Get id
   * @return id
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getId() {
        return id.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getId_JsonNullable() {
    return id;
  }
  
  @JsonProperty(JSON_PROPERTY_ID)
  public void setId_JsonNullable(JsonNullable<String> id) {
    this.id = id;
  }

  public void setId(String id) {
    this.id = JsonNullable.<String>of(id);
  }


  public SnmpTrapReceiverWhereInput idContains(String idContains) {
    this.idContains = JsonNullable.<String>of(idContains);
    return this;
  }

   /**
   * Get idContains
   * @return idContains
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getIdContains() {
        return idContains.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_ID_CONTAINS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getIdContains_JsonNullable() {
    return idContains;
  }
  
  @JsonProperty(JSON_PROPERTY_ID_CONTAINS)
  public void setIdContains_JsonNullable(JsonNullable<String> idContains) {
    this.idContains = idContains;
  }

  public void setIdContains(String idContains) {
    this.idContains = JsonNullable.<String>of(idContains);
  }


  public SnmpTrapReceiverWhereInput idEndsWith(String idEndsWith) {
    this.idEndsWith = JsonNullable.<String>of(idEndsWith);
    return this;
  }

   /**
   * Get idEndsWith
   * @return idEndsWith
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getIdEndsWith() {
        return idEndsWith.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_ID_ENDS_WITH)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getIdEndsWith_JsonNullable() {
    return idEndsWith;
  }
  
  @JsonProperty(JSON_PROPERTY_ID_ENDS_WITH)
  public void setIdEndsWith_JsonNullable(JsonNullable<String> idEndsWith) {
    this.idEndsWith = idEndsWith;
  }

  public void setIdEndsWith(String idEndsWith) {
    this.idEndsWith = JsonNullable.<String>of(idEndsWith);
  }


  public SnmpTrapReceiverWhereInput idGt(String idGt) {
    this.idGt = JsonNullable.<String>of(idGt);
    return this;
  }

   /**
   * Get idGt
   * @return idGt
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getIdGt() {
        return idGt.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_ID_GT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getIdGt_JsonNullable() {
    return idGt;
  }
  
  @JsonProperty(JSON_PROPERTY_ID_GT)
  public void setIdGt_JsonNullable(JsonNullable<String> idGt) {
    this.idGt = idGt;
  }

  public void setIdGt(String idGt) {
    this.idGt = JsonNullable.<String>of(idGt);
  }


  public SnmpTrapReceiverWhereInput idGte(String idGte) {
    this.idGte = JsonNullable.<String>of(idGte);
    return this;
  }

   /**
   * Get idGte
   * @return idGte
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getIdGte() {
        return idGte.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_ID_GTE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getIdGte_JsonNullable() {
    return idGte;
  }
  
  @JsonProperty(JSON_PROPERTY_ID_GTE)
  public void setIdGte_JsonNullable(JsonNullable<String> idGte) {
    this.idGte = idGte;
  }

  public void setIdGte(String idGte) {
    this.idGte = JsonNullable.<String>of(idGte);
  }


  public SnmpTrapReceiverWhereInput idIn(List<String> idIn) {
    this.idIn = JsonNullable.<List<String>>of(idIn);
    return this;
  }

  public SnmpTrapReceiverWhereInput addIdInItem(String idInItem) {
    if (this.idIn == null || !this.idIn.isPresent()) {
      this.idIn = JsonNullable.<List<String>>of(new ArrayList<>());
    }
    try {
      this.idIn.get().add(idInItem);
    } catch (java.util.NoSuchElementException e) {
      // this can never happen, as we make sure above that the value is present
    }
    return this;
  }

   /**
   * Get idIn
   * @return idIn
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public List<String> getIdIn() {
        return idIn.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_ID_IN)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<List<String>> getIdIn_JsonNullable() {
    return idIn;
  }
  
  @JsonProperty(JSON_PROPERTY_ID_IN)
  public void setIdIn_JsonNullable(JsonNullable<List<String>> idIn) {
    this.idIn = idIn;
  }

  public void setIdIn(List<String> idIn) {
    this.idIn = JsonNullable.<List<String>>of(idIn);
  }


  public SnmpTrapReceiverWhereInput idLt(String idLt) {
    this.idLt = JsonNullable.<String>of(idLt);
    return this;
  }

   /**
   * Get idLt
   * @return idLt
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getIdLt() {
        return idLt.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_ID_LT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getIdLt_JsonNullable() {
    return idLt;
  }
  
  @JsonProperty(JSON_PROPERTY_ID_LT)
  public void setIdLt_JsonNullable(JsonNullable<String> idLt) {
    this.idLt = idLt;
  }

  public void setIdLt(String idLt) {
    this.idLt = JsonNullable.<String>of(idLt);
  }


  public SnmpTrapReceiverWhereInput idLte(String idLte) {
    this.idLte = JsonNullable.<String>of(idLte);
    return this;
  }

   /**
   * Get idLte
   * @return idLte
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getIdLte() {
        return idLte.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_ID_LTE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getIdLte_JsonNullable() {
    return idLte;
  }
  
  @JsonProperty(JSON_PROPERTY_ID_LTE)
  public void setIdLte_JsonNullable(JsonNullable<String> idLte) {
    this.idLte = idLte;
  }

  public void setIdLte(String idLte) {
    this.idLte = JsonNullable.<String>of(idLte);
  }


  public SnmpTrapReceiverWhereInput idNot(String idNot) {
    this.idNot = JsonNullable.<String>of(idNot);
    return this;
  }

   /**
   * Get idNot
   * @return idNot
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getIdNot() {
        return idNot.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_ID_NOT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getIdNot_JsonNullable() {
    return idNot;
  }
  
  @JsonProperty(JSON_PROPERTY_ID_NOT)
  public void setIdNot_JsonNullable(JsonNullable<String> idNot) {
    this.idNot = idNot;
  }

  public void setIdNot(String idNot) {
    this.idNot = JsonNullable.<String>of(idNot);
  }


  public SnmpTrapReceiverWhereInput idNotContains(String idNotContains) {
    this.idNotContains = JsonNullable.<String>of(idNotContains);
    return this;
  }

   /**
   * Get idNotContains
   * @return idNotContains
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getIdNotContains() {
        return idNotContains.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_ID_NOT_CONTAINS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getIdNotContains_JsonNullable() {
    return idNotContains;
  }
  
  @JsonProperty(JSON_PROPERTY_ID_NOT_CONTAINS)
  public void setIdNotContains_JsonNullable(JsonNullable<String> idNotContains) {
    this.idNotContains = idNotContains;
  }

  public void setIdNotContains(String idNotContains) {
    this.idNotContains = JsonNullable.<String>of(idNotContains);
  }


  public SnmpTrapReceiverWhereInput idNotEndsWith(String idNotEndsWith) {
    this.idNotEndsWith = JsonNullable.<String>of(idNotEndsWith);
    return this;
  }

   /**
   * Get idNotEndsWith
   * @return idNotEndsWith
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getIdNotEndsWith() {
        return idNotEndsWith.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_ID_NOT_ENDS_WITH)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getIdNotEndsWith_JsonNullable() {
    return idNotEndsWith;
  }
  
  @JsonProperty(JSON_PROPERTY_ID_NOT_ENDS_WITH)
  public void setIdNotEndsWith_JsonNullable(JsonNullable<String> idNotEndsWith) {
    this.idNotEndsWith = idNotEndsWith;
  }

  public void setIdNotEndsWith(String idNotEndsWith) {
    this.idNotEndsWith = JsonNullable.<String>of(idNotEndsWith);
  }


  public SnmpTrapReceiverWhereInput idNotIn(List<String> idNotIn) {
    this.idNotIn = JsonNullable.<List<String>>of(idNotIn);
    return this;
  }

  public SnmpTrapReceiverWhereInput addIdNotInItem(String idNotInItem) {
    if (this.idNotIn == null || !this.idNotIn.isPresent()) {
      this.idNotIn = JsonNullable.<List<String>>of(new ArrayList<>());
    }
    try {
      this.idNotIn.get().add(idNotInItem);
    } catch (java.util.NoSuchElementException e) {
      // this can never happen, as we make sure above that the value is present
    }
    return this;
  }

   /**
   * Get idNotIn
   * @return idNotIn
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public List<String> getIdNotIn() {
        return idNotIn.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_ID_NOT_IN)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<List<String>> getIdNotIn_JsonNullable() {
    return idNotIn;
  }
  
  @JsonProperty(JSON_PROPERTY_ID_NOT_IN)
  public void setIdNotIn_JsonNullable(JsonNullable<List<String>> idNotIn) {
    this.idNotIn = idNotIn;
  }

  public void setIdNotIn(List<String> idNotIn) {
    this.idNotIn = JsonNullable.<List<String>>of(idNotIn);
  }


  public SnmpTrapReceiverWhereInput idNotStartsWith(String idNotStartsWith) {
    this.idNotStartsWith = JsonNullable.<String>of(idNotStartsWith);
    return this;
  }

   /**
   * Get idNotStartsWith
   * @return idNotStartsWith
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getIdNotStartsWith() {
        return idNotStartsWith.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_ID_NOT_STARTS_WITH)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getIdNotStartsWith_JsonNullable() {
    return idNotStartsWith;
  }
  
  @JsonProperty(JSON_PROPERTY_ID_NOT_STARTS_WITH)
  public void setIdNotStartsWith_JsonNullable(JsonNullable<String> idNotStartsWith) {
    this.idNotStartsWith = idNotStartsWith;
  }

  public void setIdNotStartsWith(String idNotStartsWith) {
    this.idNotStartsWith = JsonNullable.<String>of(idNotStartsWith);
  }


  public SnmpTrapReceiverWhereInput idStartsWith(String idStartsWith) {
    this.idStartsWith = JsonNullable.<String>of(idStartsWith);
    return this;
  }

   /**
   * Get idStartsWith
   * @return idStartsWith
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getIdStartsWith() {
        return idStartsWith.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_ID_STARTS_WITH)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getIdStartsWith_JsonNullable() {
    return idStartsWith;
  }
  
  @JsonProperty(JSON_PROPERTY_ID_STARTS_WITH)
  public void setIdStartsWith_JsonNullable(JsonNullable<String> idStartsWith) {
    this.idStartsWith = idStartsWith;
  }

  public void setIdStartsWith(String idStartsWith) {
    this.idStartsWith = JsonNullable.<String>of(idStartsWith);
  }


  public SnmpTrapReceiverWhereInput inform(Boolean inform) {
    this.inform = JsonNullable.<Boolean>of(inform);
    return this;
  }

   /**
   * Get inform
   * @return inform
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public Boolean getInform() {
        return inform.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_INFORM)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<Boolean> getInform_JsonNullable() {
    return inform;
  }
  
  @JsonProperty(JSON_PROPERTY_INFORM)
  public void setInform_JsonNullable(JsonNullable<Boolean> inform) {
    this.inform = inform;
  }

  public void setInform(Boolean inform) {
    this.inform = JsonNullable.<Boolean>of(inform);
  }


  public SnmpTrapReceiverWhereInput informNot(Boolean informNot) {
    this.informNot = JsonNullable.<Boolean>of(informNot);
    return this;
  }

   /**
   * Get informNot
   * @return informNot
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public Boolean getInformNot() {
        return informNot.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_INFORM_NOT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<Boolean> getInformNot_JsonNullable() {
    return informNot;
  }
  
  @JsonProperty(JSON_PROPERTY_INFORM_NOT)
  public void setInformNot_JsonNullable(JsonNullable<Boolean> informNot) {
    this.informNot = informNot;
  }

  public void setInformNot(Boolean informNot) {
    this.informNot = JsonNullable.<Boolean>of(informNot);
  }


  public SnmpTrapReceiverWhereInput languageCode(SnmpLanguageCode languageCode) {
    this.languageCode = JsonNullable.<SnmpLanguageCode>of(languageCode);
    return this;
  }

   /**
   * Get languageCode
   * @return languageCode
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public SnmpLanguageCode getLanguageCode() {
        return languageCode.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_LANGUAGE_CODE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<SnmpLanguageCode> getLanguageCode_JsonNullable() {
    return languageCode;
  }
  
  @JsonProperty(JSON_PROPERTY_LANGUAGE_CODE)
  public void setLanguageCode_JsonNullable(JsonNullable<SnmpLanguageCode> languageCode) {
    this.languageCode = languageCode;
  }

  public void setLanguageCode(SnmpLanguageCode languageCode) {
    this.languageCode = JsonNullable.<SnmpLanguageCode>of(languageCode);
  }


  public SnmpTrapReceiverWhereInput languageCodeIn(List<SnmpLanguageCode> languageCodeIn) {
    this.languageCodeIn = JsonNullable.<List<SnmpLanguageCode>>of(languageCodeIn);
    return this;
  }

  public SnmpTrapReceiverWhereInput addLanguageCodeInItem(SnmpLanguageCode languageCodeInItem) {
    if (this.languageCodeIn == null || !this.languageCodeIn.isPresent()) {
      this.languageCodeIn = JsonNullable.<List<SnmpLanguageCode>>of(new ArrayList<>());
    }
    try {
      this.languageCodeIn.get().add(languageCodeInItem);
    } catch (java.util.NoSuchElementException e) {
      // this can never happen, as we make sure above that the value is present
    }
    return this;
  }

   /**
   * Get languageCodeIn
   * @return languageCodeIn
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public List<SnmpLanguageCode> getLanguageCodeIn() {
        return languageCodeIn.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_LANGUAGE_CODE_IN)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<List<SnmpLanguageCode>> getLanguageCodeIn_JsonNullable() {
    return languageCodeIn;
  }
  
  @JsonProperty(JSON_PROPERTY_LANGUAGE_CODE_IN)
  public void setLanguageCodeIn_JsonNullable(JsonNullable<List<SnmpLanguageCode>> languageCodeIn) {
    this.languageCodeIn = languageCodeIn;
  }

  public void setLanguageCodeIn(List<SnmpLanguageCode> languageCodeIn) {
    this.languageCodeIn = JsonNullable.<List<SnmpLanguageCode>>of(languageCodeIn);
  }


  public SnmpTrapReceiverWhereInput languageCodeNot(SnmpLanguageCode languageCodeNot) {
    this.languageCodeNot = JsonNullable.<SnmpLanguageCode>of(languageCodeNot);
    return this;
  }

   /**
   * Get languageCodeNot
   * @return languageCodeNot
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public SnmpLanguageCode getLanguageCodeNot() {
        return languageCodeNot.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_LANGUAGE_CODE_NOT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<SnmpLanguageCode> getLanguageCodeNot_JsonNullable() {
    return languageCodeNot;
  }
  
  @JsonProperty(JSON_PROPERTY_LANGUAGE_CODE_NOT)
  public void setLanguageCodeNot_JsonNullable(JsonNullable<SnmpLanguageCode> languageCodeNot) {
    this.languageCodeNot = languageCodeNot;
  }

  public void setLanguageCodeNot(SnmpLanguageCode languageCodeNot) {
    this.languageCodeNot = JsonNullable.<SnmpLanguageCode>of(languageCodeNot);
  }


  public SnmpTrapReceiverWhereInput languageCodeNotIn(List<SnmpLanguageCode> languageCodeNotIn) {
    this.languageCodeNotIn = JsonNullable.<List<SnmpLanguageCode>>of(languageCodeNotIn);
    return this;
  }

  public SnmpTrapReceiverWhereInput addLanguageCodeNotInItem(SnmpLanguageCode languageCodeNotInItem) {
    if (this.languageCodeNotIn == null || !this.languageCodeNotIn.isPresent()) {
      this.languageCodeNotIn = JsonNullable.<List<SnmpLanguageCode>>of(new ArrayList<>());
    }
    try {
      this.languageCodeNotIn.get().add(languageCodeNotInItem);
    } catch (java.util.NoSuchElementException e) {
      // this can never happen, as we make sure above that the value is present
    }
    return this;
  }

   /**
   * Get languageCodeNotIn
   * @return languageCodeNotIn
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public List<SnmpLanguageCode> getLanguageCodeNotIn() {
        return languageCodeNotIn.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_LANGUAGE_CODE_NOT_IN)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<List<SnmpLanguageCode>> getLanguageCodeNotIn_JsonNullable() {
    return languageCodeNotIn;
  }
  
  @JsonProperty(JSON_PROPERTY_LANGUAGE_CODE_NOT_IN)
  public void setLanguageCodeNotIn_JsonNullable(JsonNullable<List<SnmpLanguageCode>> languageCodeNotIn) {
    this.languageCodeNotIn = languageCodeNotIn;
  }

  public void setLanguageCodeNotIn(List<SnmpLanguageCode> languageCodeNotIn) {
    this.languageCodeNotIn = JsonNullable.<List<SnmpLanguageCode>>of(languageCodeNotIn);
  }


  public SnmpTrapReceiverWhereInput localId(String localId) {
    this.localId = JsonNullable.<String>of(localId);
    return this;
  }

   /**
   * Get localId
   * @return localId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getLocalId() {
        return localId.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_LOCAL_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getLocalId_JsonNullable() {
    return localId;
  }
  
  @JsonProperty(JSON_PROPERTY_LOCAL_ID)
  public void setLocalId_JsonNullable(JsonNullable<String> localId) {
    this.localId = localId;
  }

  public void setLocalId(String localId) {
    this.localId = JsonNullable.<String>of(localId);
  }


  public SnmpTrapReceiverWhereInput localIdContains(String localIdContains) {
    this.localIdContains = JsonNullable.<String>of(localIdContains);
    return this;
  }

   /**
   * Get localIdContains
   * @return localIdContains
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getLocalIdContains() {
        return localIdContains.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_LOCAL_ID_CONTAINS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getLocalIdContains_JsonNullable() {
    return localIdContains;
  }
  
  @JsonProperty(JSON_PROPERTY_LOCAL_ID_CONTAINS)
  public void setLocalIdContains_JsonNullable(JsonNullable<String> localIdContains) {
    this.localIdContains = localIdContains;
  }

  public void setLocalIdContains(String localIdContains) {
    this.localIdContains = JsonNullable.<String>of(localIdContains);
  }


  public SnmpTrapReceiverWhereInput localIdEndsWith(String localIdEndsWith) {
    this.localIdEndsWith = JsonNullable.<String>of(localIdEndsWith);
    return this;
  }

   /**
   * Get localIdEndsWith
   * @return localIdEndsWith
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getLocalIdEndsWith() {
        return localIdEndsWith.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_LOCAL_ID_ENDS_WITH)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getLocalIdEndsWith_JsonNullable() {
    return localIdEndsWith;
  }
  
  @JsonProperty(JSON_PROPERTY_LOCAL_ID_ENDS_WITH)
  public void setLocalIdEndsWith_JsonNullable(JsonNullable<String> localIdEndsWith) {
    this.localIdEndsWith = localIdEndsWith;
  }

  public void setLocalIdEndsWith(String localIdEndsWith) {
    this.localIdEndsWith = JsonNullable.<String>of(localIdEndsWith);
  }


  public SnmpTrapReceiverWhereInput localIdGt(String localIdGt) {
    this.localIdGt = JsonNullable.<String>of(localIdGt);
    return this;
  }

   /**
   * Get localIdGt
   * @return localIdGt
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getLocalIdGt() {
        return localIdGt.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_LOCAL_ID_GT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getLocalIdGt_JsonNullable() {
    return localIdGt;
  }
  
  @JsonProperty(JSON_PROPERTY_LOCAL_ID_GT)
  public void setLocalIdGt_JsonNullable(JsonNullable<String> localIdGt) {
    this.localIdGt = localIdGt;
  }

  public void setLocalIdGt(String localIdGt) {
    this.localIdGt = JsonNullable.<String>of(localIdGt);
  }


  public SnmpTrapReceiverWhereInput localIdGte(String localIdGte) {
    this.localIdGte = JsonNullable.<String>of(localIdGte);
    return this;
  }

   /**
   * Get localIdGte
   * @return localIdGte
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getLocalIdGte() {
        return localIdGte.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_LOCAL_ID_GTE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getLocalIdGte_JsonNullable() {
    return localIdGte;
  }
  
  @JsonProperty(JSON_PROPERTY_LOCAL_ID_GTE)
  public void setLocalIdGte_JsonNullable(JsonNullable<String> localIdGte) {
    this.localIdGte = localIdGte;
  }

  public void setLocalIdGte(String localIdGte) {
    this.localIdGte = JsonNullable.<String>of(localIdGte);
  }


  public SnmpTrapReceiverWhereInput localIdIn(List<String> localIdIn) {
    this.localIdIn = JsonNullable.<List<String>>of(localIdIn);
    return this;
  }

  public SnmpTrapReceiverWhereInput addLocalIdInItem(String localIdInItem) {
    if (this.localIdIn == null || !this.localIdIn.isPresent()) {
      this.localIdIn = JsonNullable.<List<String>>of(new ArrayList<>());
    }
    try {
      this.localIdIn.get().add(localIdInItem);
    } catch (java.util.NoSuchElementException e) {
      // this can never happen, as we make sure above that the value is present
    }
    return this;
  }

   /**
   * Get localIdIn
   * @return localIdIn
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public List<String> getLocalIdIn() {
        return localIdIn.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_LOCAL_ID_IN)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<List<String>> getLocalIdIn_JsonNullable() {
    return localIdIn;
  }
  
  @JsonProperty(JSON_PROPERTY_LOCAL_ID_IN)
  public void setLocalIdIn_JsonNullable(JsonNullable<List<String>> localIdIn) {
    this.localIdIn = localIdIn;
  }

  public void setLocalIdIn(List<String> localIdIn) {
    this.localIdIn = JsonNullable.<List<String>>of(localIdIn);
  }


  public SnmpTrapReceiverWhereInput localIdLt(String localIdLt) {
    this.localIdLt = JsonNullable.<String>of(localIdLt);
    return this;
  }

   /**
   * Get localIdLt
   * @return localIdLt
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getLocalIdLt() {
        return localIdLt.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_LOCAL_ID_LT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getLocalIdLt_JsonNullable() {
    return localIdLt;
  }
  
  @JsonProperty(JSON_PROPERTY_LOCAL_ID_LT)
  public void setLocalIdLt_JsonNullable(JsonNullable<String> localIdLt) {
    this.localIdLt = localIdLt;
  }

  public void setLocalIdLt(String localIdLt) {
    this.localIdLt = JsonNullable.<String>of(localIdLt);
  }


  public SnmpTrapReceiverWhereInput localIdLte(String localIdLte) {
    this.localIdLte = JsonNullable.<String>of(localIdLte);
    return this;
  }

   /**
   * Get localIdLte
   * @return localIdLte
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getLocalIdLte() {
        return localIdLte.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_LOCAL_ID_LTE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getLocalIdLte_JsonNullable() {
    return localIdLte;
  }
  
  @JsonProperty(JSON_PROPERTY_LOCAL_ID_LTE)
  public void setLocalIdLte_JsonNullable(JsonNullable<String> localIdLte) {
    this.localIdLte = localIdLte;
  }

  public void setLocalIdLte(String localIdLte) {
    this.localIdLte = JsonNullable.<String>of(localIdLte);
  }


  public SnmpTrapReceiverWhereInput localIdNot(String localIdNot) {
    this.localIdNot = JsonNullable.<String>of(localIdNot);
    return this;
  }

   /**
   * Get localIdNot
   * @return localIdNot
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getLocalIdNot() {
        return localIdNot.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_LOCAL_ID_NOT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getLocalIdNot_JsonNullable() {
    return localIdNot;
  }
  
  @JsonProperty(JSON_PROPERTY_LOCAL_ID_NOT)
  public void setLocalIdNot_JsonNullable(JsonNullable<String> localIdNot) {
    this.localIdNot = localIdNot;
  }

  public void setLocalIdNot(String localIdNot) {
    this.localIdNot = JsonNullable.<String>of(localIdNot);
  }


  public SnmpTrapReceiverWhereInput localIdNotContains(String localIdNotContains) {
    this.localIdNotContains = JsonNullable.<String>of(localIdNotContains);
    return this;
  }

   /**
   * Get localIdNotContains
   * @return localIdNotContains
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getLocalIdNotContains() {
        return localIdNotContains.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_LOCAL_ID_NOT_CONTAINS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getLocalIdNotContains_JsonNullable() {
    return localIdNotContains;
  }
  
  @JsonProperty(JSON_PROPERTY_LOCAL_ID_NOT_CONTAINS)
  public void setLocalIdNotContains_JsonNullable(JsonNullable<String> localIdNotContains) {
    this.localIdNotContains = localIdNotContains;
  }

  public void setLocalIdNotContains(String localIdNotContains) {
    this.localIdNotContains = JsonNullable.<String>of(localIdNotContains);
  }


  public SnmpTrapReceiverWhereInput localIdNotEndsWith(String localIdNotEndsWith) {
    this.localIdNotEndsWith = JsonNullable.<String>of(localIdNotEndsWith);
    return this;
  }

   /**
   * Get localIdNotEndsWith
   * @return localIdNotEndsWith
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getLocalIdNotEndsWith() {
        return localIdNotEndsWith.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_LOCAL_ID_NOT_ENDS_WITH)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getLocalIdNotEndsWith_JsonNullable() {
    return localIdNotEndsWith;
  }
  
  @JsonProperty(JSON_PROPERTY_LOCAL_ID_NOT_ENDS_WITH)
  public void setLocalIdNotEndsWith_JsonNullable(JsonNullable<String> localIdNotEndsWith) {
    this.localIdNotEndsWith = localIdNotEndsWith;
  }

  public void setLocalIdNotEndsWith(String localIdNotEndsWith) {
    this.localIdNotEndsWith = JsonNullable.<String>of(localIdNotEndsWith);
  }


  public SnmpTrapReceiverWhereInput localIdNotIn(List<String> localIdNotIn) {
    this.localIdNotIn = JsonNullable.<List<String>>of(localIdNotIn);
    return this;
  }

  public SnmpTrapReceiverWhereInput addLocalIdNotInItem(String localIdNotInItem) {
    if (this.localIdNotIn == null || !this.localIdNotIn.isPresent()) {
      this.localIdNotIn = JsonNullable.<List<String>>of(new ArrayList<>());
    }
    try {
      this.localIdNotIn.get().add(localIdNotInItem);
    } catch (java.util.NoSuchElementException e) {
      // this can never happen, as we make sure above that the value is present
    }
    return this;
  }

   /**
   * Get localIdNotIn
   * @return localIdNotIn
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public List<String> getLocalIdNotIn() {
        return localIdNotIn.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_LOCAL_ID_NOT_IN)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<List<String>> getLocalIdNotIn_JsonNullable() {
    return localIdNotIn;
  }
  
  @JsonProperty(JSON_PROPERTY_LOCAL_ID_NOT_IN)
  public void setLocalIdNotIn_JsonNullable(JsonNullable<List<String>> localIdNotIn) {
    this.localIdNotIn = localIdNotIn;
  }

  public void setLocalIdNotIn(List<String> localIdNotIn) {
    this.localIdNotIn = JsonNullable.<List<String>>of(localIdNotIn);
  }


  public SnmpTrapReceiverWhereInput localIdNotStartsWith(String localIdNotStartsWith) {
    this.localIdNotStartsWith = JsonNullable.<String>of(localIdNotStartsWith);
    return this;
  }

   /**
   * Get localIdNotStartsWith
   * @return localIdNotStartsWith
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getLocalIdNotStartsWith() {
        return localIdNotStartsWith.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_LOCAL_ID_NOT_STARTS_WITH)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getLocalIdNotStartsWith_JsonNullable() {
    return localIdNotStartsWith;
  }
  
  @JsonProperty(JSON_PROPERTY_LOCAL_ID_NOT_STARTS_WITH)
  public void setLocalIdNotStartsWith_JsonNullable(JsonNullable<String> localIdNotStartsWith) {
    this.localIdNotStartsWith = localIdNotStartsWith;
  }

  public void setLocalIdNotStartsWith(String localIdNotStartsWith) {
    this.localIdNotStartsWith = JsonNullable.<String>of(localIdNotStartsWith);
  }


  public SnmpTrapReceiverWhereInput localIdStartsWith(String localIdStartsWith) {
    this.localIdStartsWith = JsonNullable.<String>of(localIdStartsWith);
    return this;
  }

   /**
   * Get localIdStartsWith
   * @return localIdStartsWith
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getLocalIdStartsWith() {
        return localIdStartsWith.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_LOCAL_ID_STARTS_WITH)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getLocalIdStartsWith_JsonNullable() {
    return localIdStartsWith;
  }
  
  @JsonProperty(JSON_PROPERTY_LOCAL_ID_STARTS_WITH)
  public void setLocalIdStartsWith_JsonNullable(JsonNullable<String> localIdStartsWith) {
    this.localIdStartsWith = localIdStartsWith;
  }

  public void setLocalIdStartsWith(String localIdStartsWith) {
    this.localIdStartsWith = JsonNullable.<String>of(localIdStartsWith);
  }


  public SnmpTrapReceiverWhereInput name(String name) {
    this.name = JsonNullable.<String>of(name);
    return this;
  }

   /**
   * Get name
   * @return name
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getName() {
        return name.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getName_JsonNullable() {
    return name;
  }
  
  @JsonProperty(JSON_PROPERTY_NAME)
  public void setName_JsonNullable(JsonNullable<String> name) {
    this.name = name;
  }

  public void setName(String name) {
    this.name = JsonNullable.<String>of(name);
  }


  public SnmpTrapReceiverWhereInput nameContains(String nameContains) {
    this.nameContains = JsonNullable.<String>of(nameContains);
    return this;
  }

   /**
   * Get nameContains
   * @return nameContains
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getNameContains() {
        return nameContains.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_NAME_CONTAINS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getNameContains_JsonNullable() {
    return nameContains;
  }
  
  @JsonProperty(JSON_PROPERTY_NAME_CONTAINS)
  public void setNameContains_JsonNullable(JsonNullable<String> nameContains) {
    this.nameContains = nameContains;
  }

  public void setNameContains(String nameContains) {
    this.nameContains = JsonNullable.<String>of(nameContains);
  }


  public SnmpTrapReceiverWhereInput nameEndsWith(String nameEndsWith) {
    this.nameEndsWith = JsonNullable.<String>of(nameEndsWith);
    return this;
  }

   /**
   * Get nameEndsWith
   * @return nameEndsWith
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getNameEndsWith() {
        return nameEndsWith.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_NAME_ENDS_WITH)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getNameEndsWith_JsonNullable() {
    return nameEndsWith;
  }
  
  @JsonProperty(JSON_PROPERTY_NAME_ENDS_WITH)
  public void setNameEndsWith_JsonNullable(JsonNullable<String> nameEndsWith) {
    this.nameEndsWith = nameEndsWith;
  }

  public void setNameEndsWith(String nameEndsWith) {
    this.nameEndsWith = JsonNullable.<String>of(nameEndsWith);
  }


  public SnmpTrapReceiverWhereInput nameGt(String nameGt) {
    this.nameGt = JsonNullable.<String>of(nameGt);
    return this;
  }

   /**
   * Get nameGt
   * @return nameGt
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getNameGt() {
        return nameGt.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_NAME_GT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getNameGt_JsonNullable() {
    return nameGt;
  }
  
  @JsonProperty(JSON_PROPERTY_NAME_GT)
  public void setNameGt_JsonNullable(JsonNullable<String> nameGt) {
    this.nameGt = nameGt;
  }

  public void setNameGt(String nameGt) {
    this.nameGt = JsonNullable.<String>of(nameGt);
  }


  public SnmpTrapReceiverWhereInput nameGte(String nameGte) {
    this.nameGte = JsonNullable.<String>of(nameGte);
    return this;
  }

   /**
   * Get nameGte
   * @return nameGte
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getNameGte() {
        return nameGte.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_NAME_GTE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getNameGte_JsonNullable() {
    return nameGte;
  }
  
  @JsonProperty(JSON_PROPERTY_NAME_GTE)
  public void setNameGte_JsonNullable(JsonNullable<String> nameGte) {
    this.nameGte = nameGte;
  }

  public void setNameGte(String nameGte) {
    this.nameGte = JsonNullable.<String>of(nameGte);
  }


  public SnmpTrapReceiverWhereInput nameIn(List<String> nameIn) {
    this.nameIn = JsonNullable.<List<String>>of(nameIn);
    return this;
  }

  public SnmpTrapReceiverWhereInput addNameInItem(String nameInItem) {
    if (this.nameIn == null || !this.nameIn.isPresent()) {
      this.nameIn = JsonNullable.<List<String>>of(new ArrayList<>());
    }
    try {
      this.nameIn.get().add(nameInItem);
    } catch (java.util.NoSuchElementException e) {
      // this can never happen, as we make sure above that the value is present
    }
    return this;
  }

   /**
   * Get nameIn
   * @return nameIn
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public List<String> getNameIn() {
        return nameIn.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_NAME_IN)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<List<String>> getNameIn_JsonNullable() {
    return nameIn;
  }
  
  @JsonProperty(JSON_PROPERTY_NAME_IN)
  public void setNameIn_JsonNullable(JsonNullable<List<String>> nameIn) {
    this.nameIn = nameIn;
  }

  public void setNameIn(List<String> nameIn) {
    this.nameIn = JsonNullable.<List<String>>of(nameIn);
  }


  public SnmpTrapReceiverWhereInput nameLt(String nameLt) {
    this.nameLt = JsonNullable.<String>of(nameLt);
    return this;
  }

   /**
   * Get nameLt
   * @return nameLt
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getNameLt() {
        return nameLt.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_NAME_LT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getNameLt_JsonNullable() {
    return nameLt;
  }
  
  @JsonProperty(JSON_PROPERTY_NAME_LT)
  public void setNameLt_JsonNullable(JsonNullable<String> nameLt) {
    this.nameLt = nameLt;
  }

  public void setNameLt(String nameLt) {
    this.nameLt = JsonNullable.<String>of(nameLt);
  }


  public SnmpTrapReceiverWhereInput nameLte(String nameLte) {
    this.nameLte = JsonNullable.<String>of(nameLte);
    return this;
  }

   /**
   * Get nameLte
   * @return nameLte
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getNameLte() {
        return nameLte.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_NAME_LTE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getNameLte_JsonNullable() {
    return nameLte;
  }
  
  @JsonProperty(JSON_PROPERTY_NAME_LTE)
  public void setNameLte_JsonNullable(JsonNullable<String> nameLte) {
    this.nameLte = nameLte;
  }

  public void setNameLte(String nameLte) {
    this.nameLte = JsonNullable.<String>of(nameLte);
  }


  public SnmpTrapReceiverWhereInput nameNot(String nameNot) {
    this.nameNot = JsonNullable.<String>of(nameNot);
    return this;
  }

   /**
   * Get nameNot
   * @return nameNot
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getNameNot() {
        return nameNot.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_NAME_NOT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getNameNot_JsonNullable() {
    return nameNot;
  }
  
  @JsonProperty(JSON_PROPERTY_NAME_NOT)
  public void setNameNot_JsonNullable(JsonNullable<String> nameNot) {
    this.nameNot = nameNot;
  }

  public void setNameNot(String nameNot) {
    this.nameNot = JsonNullable.<String>of(nameNot);
  }


  public SnmpTrapReceiverWhereInput nameNotContains(String nameNotContains) {
    this.nameNotContains = JsonNullable.<String>of(nameNotContains);
    return this;
  }

   /**
   * Get nameNotContains
   * @return nameNotContains
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getNameNotContains() {
        return nameNotContains.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_NAME_NOT_CONTAINS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getNameNotContains_JsonNullable() {
    return nameNotContains;
  }
  
  @JsonProperty(JSON_PROPERTY_NAME_NOT_CONTAINS)
  public void setNameNotContains_JsonNullable(JsonNullable<String> nameNotContains) {
    this.nameNotContains = nameNotContains;
  }

  public void setNameNotContains(String nameNotContains) {
    this.nameNotContains = JsonNullable.<String>of(nameNotContains);
  }


  public SnmpTrapReceiverWhereInput nameNotEndsWith(String nameNotEndsWith) {
    this.nameNotEndsWith = JsonNullable.<String>of(nameNotEndsWith);
    return this;
  }

   /**
   * Get nameNotEndsWith
   * @return nameNotEndsWith
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getNameNotEndsWith() {
        return nameNotEndsWith.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_NAME_NOT_ENDS_WITH)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getNameNotEndsWith_JsonNullable() {
    return nameNotEndsWith;
  }
  
  @JsonProperty(JSON_PROPERTY_NAME_NOT_ENDS_WITH)
  public void setNameNotEndsWith_JsonNullable(JsonNullable<String> nameNotEndsWith) {
    this.nameNotEndsWith = nameNotEndsWith;
  }

  public void setNameNotEndsWith(String nameNotEndsWith) {
    this.nameNotEndsWith = JsonNullable.<String>of(nameNotEndsWith);
  }


  public SnmpTrapReceiverWhereInput nameNotIn(List<String> nameNotIn) {
    this.nameNotIn = JsonNullable.<List<String>>of(nameNotIn);
    return this;
  }

  public SnmpTrapReceiverWhereInput addNameNotInItem(String nameNotInItem) {
    if (this.nameNotIn == null || !this.nameNotIn.isPresent()) {
      this.nameNotIn = JsonNullable.<List<String>>of(new ArrayList<>());
    }
    try {
      this.nameNotIn.get().add(nameNotInItem);
    } catch (java.util.NoSuchElementException e) {
      // this can never happen, as we make sure above that the value is present
    }
    return this;
  }

   /**
   * Get nameNotIn
   * @return nameNotIn
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public List<String> getNameNotIn() {
        return nameNotIn.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_NAME_NOT_IN)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<List<String>> getNameNotIn_JsonNullable() {
    return nameNotIn;
  }
  
  @JsonProperty(JSON_PROPERTY_NAME_NOT_IN)
  public void setNameNotIn_JsonNullable(JsonNullable<List<String>> nameNotIn) {
    this.nameNotIn = nameNotIn;
  }

  public void setNameNotIn(List<String> nameNotIn) {
    this.nameNotIn = JsonNullable.<List<String>>of(nameNotIn);
  }


  public SnmpTrapReceiverWhereInput nameNotStartsWith(String nameNotStartsWith) {
    this.nameNotStartsWith = JsonNullable.<String>of(nameNotStartsWith);
    return this;
  }

   /**
   * Get nameNotStartsWith
   * @return nameNotStartsWith
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getNameNotStartsWith() {
        return nameNotStartsWith.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_NAME_NOT_STARTS_WITH)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getNameNotStartsWith_JsonNullable() {
    return nameNotStartsWith;
  }
  
  @JsonProperty(JSON_PROPERTY_NAME_NOT_STARTS_WITH)
  public void setNameNotStartsWith_JsonNullable(JsonNullable<String> nameNotStartsWith) {
    this.nameNotStartsWith = nameNotStartsWith;
  }

  public void setNameNotStartsWith(String nameNotStartsWith) {
    this.nameNotStartsWith = JsonNullable.<String>of(nameNotStartsWith);
  }


  public SnmpTrapReceiverWhereInput nameStartsWith(String nameStartsWith) {
    this.nameStartsWith = JsonNullable.<String>of(nameStartsWith);
    return this;
  }

   /**
   * Get nameStartsWith
   * @return nameStartsWith
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getNameStartsWith() {
        return nameStartsWith.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_NAME_STARTS_WITH)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getNameStartsWith_JsonNullable() {
    return nameStartsWith;
  }
  
  @JsonProperty(JSON_PROPERTY_NAME_STARTS_WITH)
  public void setNameStartsWith_JsonNullable(JsonNullable<String> nameStartsWith) {
    this.nameStartsWith = nameStartsWith;
  }

  public void setNameStartsWith(String nameStartsWith) {
    this.nameStartsWith = JsonNullable.<String>of(nameStartsWith);
  }


  public SnmpTrapReceiverWhereInput NOT(List<SnmpTrapReceiverWhereInput> NOT) {
    this.NOT = JsonNullable.<List<SnmpTrapReceiverWhereInput>>of(NOT);
    return this;
  }

  public SnmpTrapReceiverWhereInput addNOTItem(SnmpTrapReceiverWhereInput NOTItem) {
    if (this.NOT == null || !this.NOT.isPresent()) {
      this.NOT = JsonNullable.<List<SnmpTrapReceiverWhereInput>>of(new ArrayList<>());
    }
    try {
      this.NOT.get().add(NOTItem);
    } catch (java.util.NoSuchElementException e) {
      // this can never happen, as we make sure above that the value is present
    }
    return this;
  }

   /**
   * Get NOT
   * @return NOT
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public List<SnmpTrapReceiverWhereInput> getNOT() {
        return NOT.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_N_O_T)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<List<SnmpTrapReceiverWhereInput>> getNOT_JsonNullable() {
    return NOT;
  }
  
  @JsonProperty(JSON_PROPERTY_N_O_T)
  public void setNOT_JsonNullable(JsonNullable<List<SnmpTrapReceiverWhereInput>> NOT) {
    this.NOT = NOT;
  }

  public void setNOT(List<SnmpTrapReceiverWhereInput> NOT) {
    this.NOT = JsonNullable.<List<SnmpTrapReceiverWhereInput>>of(NOT);
  }


  public SnmpTrapReceiverWhereInput OR(List<SnmpTrapReceiverWhereInput> OR) {
    this.OR = JsonNullable.<List<SnmpTrapReceiverWhereInput>>of(OR);
    return this;
  }

  public SnmpTrapReceiverWhereInput addORItem(SnmpTrapReceiverWhereInput ORItem) {
    if (this.OR == null || !this.OR.isPresent()) {
      this.OR = JsonNullable.<List<SnmpTrapReceiverWhereInput>>of(new ArrayList<>());
    }
    try {
      this.OR.get().add(ORItem);
    } catch (java.util.NoSuchElementException e) {
      // this can never happen, as we make sure above that the value is present
    }
    return this;
  }

   /**
   * Get OR
   * @return OR
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public List<SnmpTrapReceiverWhereInput> getOR() {
        return OR.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_O_R)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<List<SnmpTrapReceiverWhereInput>> getOR_JsonNullable() {
    return OR;
  }
  
  @JsonProperty(JSON_PROPERTY_O_R)
  public void setOR_JsonNullable(JsonNullable<List<SnmpTrapReceiverWhereInput>> OR) {
    this.OR = OR;
  }

  public void setOR(List<SnmpTrapReceiverWhereInput> OR) {
    this.OR = JsonNullable.<List<SnmpTrapReceiverWhereInput>>of(OR);
  }


  public SnmpTrapReceiverWhereInput port(Double port) {
    this.port = JsonNullable.<Double>of(port);
    return this;
  }

   /**
   * Get port
   * @return port
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public Double getPort() {
        return port.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_PORT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<Double> getPort_JsonNullable() {
    return port;
  }
  
  @JsonProperty(JSON_PROPERTY_PORT)
  public void setPort_JsonNullable(JsonNullable<Double> port) {
    this.port = port;
  }

  public void setPort(Double port) {
    this.port = JsonNullable.<Double>of(port);
  }


  public SnmpTrapReceiverWhereInput portGt(Double portGt) {
    this.portGt = JsonNullable.<Double>of(portGt);
    return this;
  }

   /**
   * Get portGt
   * @return portGt
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public Double getPortGt() {
        return portGt.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_PORT_GT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<Double> getPortGt_JsonNullable() {
    return portGt;
  }
  
  @JsonProperty(JSON_PROPERTY_PORT_GT)
  public void setPortGt_JsonNullable(JsonNullable<Double> portGt) {
    this.portGt = portGt;
  }

  public void setPortGt(Double portGt) {
    this.portGt = JsonNullable.<Double>of(portGt);
  }


  public SnmpTrapReceiverWhereInput portGte(Double portGte) {
    this.portGte = JsonNullable.<Double>of(portGte);
    return this;
  }

   /**
   * Get portGte
   * @return portGte
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public Double getPortGte() {
        return portGte.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_PORT_GTE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<Double> getPortGte_JsonNullable() {
    return portGte;
  }
  
  @JsonProperty(JSON_PROPERTY_PORT_GTE)
  public void setPortGte_JsonNullable(JsonNullable<Double> portGte) {
    this.portGte = portGte;
  }

  public void setPortGte(Double portGte) {
    this.portGte = JsonNullable.<Double>of(portGte);
  }


  public SnmpTrapReceiverWhereInput portIn(List<Double> portIn) {
    this.portIn = JsonNullable.<List<Double>>of(portIn);
    return this;
  }

  public SnmpTrapReceiverWhereInput addPortInItem(Double portInItem) {
    if (this.portIn == null || !this.portIn.isPresent()) {
      this.portIn = JsonNullable.<List<Double>>of(new ArrayList<>());
    }
    try {
      this.portIn.get().add(portInItem);
    } catch (java.util.NoSuchElementException e) {
      // this can never happen, as we make sure above that the value is present
    }
    return this;
  }

   /**
   * Get portIn
   * @return portIn
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public List<Double> getPortIn() {
        return portIn.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_PORT_IN)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<List<Double>> getPortIn_JsonNullable() {
    return portIn;
  }
  
  @JsonProperty(JSON_PROPERTY_PORT_IN)
  public void setPortIn_JsonNullable(JsonNullable<List<Double>> portIn) {
    this.portIn = portIn;
  }

  public void setPortIn(List<Double> portIn) {
    this.portIn = JsonNullable.<List<Double>>of(portIn);
  }


  public SnmpTrapReceiverWhereInput portLt(Double portLt) {
    this.portLt = JsonNullable.<Double>of(portLt);
    return this;
  }

   /**
   * Get portLt
   * @return portLt
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public Double getPortLt() {
        return portLt.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_PORT_LT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<Double> getPortLt_JsonNullable() {
    return portLt;
  }
  
  @JsonProperty(JSON_PROPERTY_PORT_LT)
  public void setPortLt_JsonNullable(JsonNullable<Double> portLt) {
    this.portLt = portLt;
  }

  public void setPortLt(Double portLt) {
    this.portLt = JsonNullable.<Double>of(portLt);
  }


  public SnmpTrapReceiverWhereInput portLte(Double portLte) {
    this.portLte = JsonNullable.<Double>of(portLte);
    return this;
  }

   /**
   * Get portLte
   * @return portLte
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public Double getPortLte() {
        return portLte.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_PORT_LTE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<Double> getPortLte_JsonNullable() {
    return portLte;
  }
  
  @JsonProperty(JSON_PROPERTY_PORT_LTE)
  public void setPortLte_JsonNullable(JsonNullable<Double> portLte) {
    this.portLte = portLte;
  }

  public void setPortLte(Double portLte) {
    this.portLte = JsonNullable.<Double>of(portLte);
  }


  public SnmpTrapReceiverWhereInput portNot(Double portNot) {
    this.portNot = JsonNullable.<Double>of(portNot);
    return this;
  }

   /**
   * Get portNot
   * @return portNot
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public Double getPortNot() {
        return portNot.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_PORT_NOT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<Double> getPortNot_JsonNullable() {
    return portNot;
  }
  
  @JsonProperty(JSON_PROPERTY_PORT_NOT)
  public void setPortNot_JsonNullable(JsonNullable<Double> portNot) {
    this.portNot = portNot;
  }

  public void setPortNot(Double portNot) {
    this.portNot = JsonNullable.<Double>of(portNot);
  }


  public SnmpTrapReceiverWhereInput portNotIn(List<Double> portNotIn) {
    this.portNotIn = JsonNullable.<List<Double>>of(portNotIn);
    return this;
  }

  public SnmpTrapReceiverWhereInput addPortNotInItem(Double portNotInItem) {
    if (this.portNotIn == null || !this.portNotIn.isPresent()) {
      this.portNotIn = JsonNullable.<List<Double>>of(new ArrayList<>());
    }
    try {
      this.portNotIn.get().add(portNotInItem);
    } catch (java.util.NoSuchElementException e) {
      // this can never happen, as we make sure above that the value is present
    }
    return this;
  }

   /**
   * Get portNotIn
   * @return portNotIn
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public List<Double> getPortNotIn() {
        return portNotIn.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_PORT_NOT_IN)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<List<Double>> getPortNotIn_JsonNullable() {
    return portNotIn;
  }
  
  @JsonProperty(JSON_PROPERTY_PORT_NOT_IN)
  public void setPortNotIn_JsonNullable(JsonNullable<List<Double>> portNotIn) {
    this.portNotIn = portNotIn;
  }

  public void setPortNotIn(List<Double> portNotIn) {
    this.portNotIn = JsonNullable.<List<Double>>of(portNotIn);
  }


  public SnmpTrapReceiverWhereInput privacyPassPhrase(String privacyPassPhrase) {
    this.privacyPassPhrase = JsonNullable.<String>of(privacyPassPhrase);
    return this;
  }

   /**
   * Get privacyPassPhrase
   * @return privacyPassPhrase
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getPrivacyPassPhrase() {
        return privacyPassPhrase.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_PRIVACY_PASS_PHRASE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getPrivacyPassPhrase_JsonNullable() {
    return privacyPassPhrase;
  }
  
  @JsonProperty(JSON_PROPERTY_PRIVACY_PASS_PHRASE)
  public void setPrivacyPassPhrase_JsonNullable(JsonNullable<String> privacyPassPhrase) {
    this.privacyPassPhrase = privacyPassPhrase;
  }

  public void setPrivacyPassPhrase(String privacyPassPhrase) {
    this.privacyPassPhrase = JsonNullable.<String>of(privacyPassPhrase);
  }


  public SnmpTrapReceiverWhereInput privacyPassPhraseContains(String privacyPassPhraseContains) {
    this.privacyPassPhraseContains = JsonNullable.<String>of(privacyPassPhraseContains);
    return this;
  }

   /**
   * Get privacyPassPhraseContains
   * @return privacyPassPhraseContains
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getPrivacyPassPhraseContains() {
        return privacyPassPhraseContains.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_PRIVACY_PASS_PHRASE_CONTAINS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getPrivacyPassPhraseContains_JsonNullable() {
    return privacyPassPhraseContains;
  }
  
  @JsonProperty(JSON_PROPERTY_PRIVACY_PASS_PHRASE_CONTAINS)
  public void setPrivacyPassPhraseContains_JsonNullable(JsonNullable<String> privacyPassPhraseContains) {
    this.privacyPassPhraseContains = privacyPassPhraseContains;
  }

  public void setPrivacyPassPhraseContains(String privacyPassPhraseContains) {
    this.privacyPassPhraseContains = JsonNullable.<String>of(privacyPassPhraseContains);
  }


  public SnmpTrapReceiverWhereInput privacyPassPhraseEndsWith(String privacyPassPhraseEndsWith) {
    this.privacyPassPhraseEndsWith = JsonNullable.<String>of(privacyPassPhraseEndsWith);
    return this;
  }

   /**
   * Get privacyPassPhraseEndsWith
   * @return privacyPassPhraseEndsWith
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getPrivacyPassPhraseEndsWith() {
        return privacyPassPhraseEndsWith.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_PRIVACY_PASS_PHRASE_ENDS_WITH)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getPrivacyPassPhraseEndsWith_JsonNullable() {
    return privacyPassPhraseEndsWith;
  }
  
  @JsonProperty(JSON_PROPERTY_PRIVACY_PASS_PHRASE_ENDS_WITH)
  public void setPrivacyPassPhraseEndsWith_JsonNullable(JsonNullable<String> privacyPassPhraseEndsWith) {
    this.privacyPassPhraseEndsWith = privacyPassPhraseEndsWith;
  }

  public void setPrivacyPassPhraseEndsWith(String privacyPassPhraseEndsWith) {
    this.privacyPassPhraseEndsWith = JsonNullable.<String>of(privacyPassPhraseEndsWith);
  }


  public SnmpTrapReceiverWhereInput privacyPassPhraseGt(String privacyPassPhraseGt) {
    this.privacyPassPhraseGt = JsonNullable.<String>of(privacyPassPhraseGt);
    return this;
  }

   /**
   * Get privacyPassPhraseGt
   * @return privacyPassPhraseGt
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getPrivacyPassPhraseGt() {
        return privacyPassPhraseGt.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_PRIVACY_PASS_PHRASE_GT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getPrivacyPassPhraseGt_JsonNullable() {
    return privacyPassPhraseGt;
  }
  
  @JsonProperty(JSON_PROPERTY_PRIVACY_PASS_PHRASE_GT)
  public void setPrivacyPassPhraseGt_JsonNullable(JsonNullable<String> privacyPassPhraseGt) {
    this.privacyPassPhraseGt = privacyPassPhraseGt;
  }

  public void setPrivacyPassPhraseGt(String privacyPassPhraseGt) {
    this.privacyPassPhraseGt = JsonNullable.<String>of(privacyPassPhraseGt);
  }


  public SnmpTrapReceiverWhereInput privacyPassPhraseGte(String privacyPassPhraseGte) {
    this.privacyPassPhraseGte = JsonNullable.<String>of(privacyPassPhraseGte);
    return this;
  }

   /**
   * Get privacyPassPhraseGte
   * @return privacyPassPhraseGte
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getPrivacyPassPhraseGte() {
        return privacyPassPhraseGte.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_PRIVACY_PASS_PHRASE_GTE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getPrivacyPassPhraseGte_JsonNullable() {
    return privacyPassPhraseGte;
  }
  
  @JsonProperty(JSON_PROPERTY_PRIVACY_PASS_PHRASE_GTE)
  public void setPrivacyPassPhraseGte_JsonNullable(JsonNullable<String> privacyPassPhraseGte) {
    this.privacyPassPhraseGte = privacyPassPhraseGte;
  }

  public void setPrivacyPassPhraseGte(String privacyPassPhraseGte) {
    this.privacyPassPhraseGte = JsonNullable.<String>of(privacyPassPhraseGte);
  }


  public SnmpTrapReceiverWhereInput privacyPassPhraseIn(List<String> privacyPassPhraseIn) {
    this.privacyPassPhraseIn = JsonNullable.<List<String>>of(privacyPassPhraseIn);
    return this;
  }

  public SnmpTrapReceiverWhereInput addPrivacyPassPhraseInItem(String privacyPassPhraseInItem) {
    if (this.privacyPassPhraseIn == null || !this.privacyPassPhraseIn.isPresent()) {
      this.privacyPassPhraseIn = JsonNullable.<List<String>>of(new ArrayList<>());
    }
    try {
      this.privacyPassPhraseIn.get().add(privacyPassPhraseInItem);
    } catch (java.util.NoSuchElementException e) {
      // this can never happen, as we make sure above that the value is present
    }
    return this;
  }

   /**
   * Get privacyPassPhraseIn
   * @return privacyPassPhraseIn
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public List<String> getPrivacyPassPhraseIn() {
        return privacyPassPhraseIn.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_PRIVACY_PASS_PHRASE_IN)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<List<String>> getPrivacyPassPhraseIn_JsonNullable() {
    return privacyPassPhraseIn;
  }
  
  @JsonProperty(JSON_PROPERTY_PRIVACY_PASS_PHRASE_IN)
  public void setPrivacyPassPhraseIn_JsonNullable(JsonNullable<List<String>> privacyPassPhraseIn) {
    this.privacyPassPhraseIn = privacyPassPhraseIn;
  }

  public void setPrivacyPassPhraseIn(List<String> privacyPassPhraseIn) {
    this.privacyPassPhraseIn = JsonNullable.<List<String>>of(privacyPassPhraseIn);
  }


  public SnmpTrapReceiverWhereInput privacyPassPhraseLt(String privacyPassPhraseLt) {
    this.privacyPassPhraseLt = JsonNullable.<String>of(privacyPassPhraseLt);
    return this;
  }

   /**
   * Get privacyPassPhraseLt
   * @return privacyPassPhraseLt
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getPrivacyPassPhraseLt() {
        return privacyPassPhraseLt.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_PRIVACY_PASS_PHRASE_LT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getPrivacyPassPhraseLt_JsonNullable() {
    return privacyPassPhraseLt;
  }
  
  @JsonProperty(JSON_PROPERTY_PRIVACY_PASS_PHRASE_LT)
  public void setPrivacyPassPhraseLt_JsonNullable(JsonNullable<String> privacyPassPhraseLt) {
    this.privacyPassPhraseLt = privacyPassPhraseLt;
  }

  public void setPrivacyPassPhraseLt(String privacyPassPhraseLt) {
    this.privacyPassPhraseLt = JsonNullable.<String>of(privacyPassPhraseLt);
  }


  public SnmpTrapReceiverWhereInput privacyPassPhraseLte(String privacyPassPhraseLte) {
    this.privacyPassPhraseLte = JsonNullable.<String>of(privacyPassPhraseLte);
    return this;
  }

   /**
   * Get privacyPassPhraseLte
   * @return privacyPassPhraseLte
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getPrivacyPassPhraseLte() {
        return privacyPassPhraseLte.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_PRIVACY_PASS_PHRASE_LTE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getPrivacyPassPhraseLte_JsonNullable() {
    return privacyPassPhraseLte;
  }
  
  @JsonProperty(JSON_PROPERTY_PRIVACY_PASS_PHRASE_LTE)
  public void setPrivacyPassPhraseLte_JsonNullable(JsonNullable<String> privacyPassPhraseLte) {
    this.privacyPassPhraseLte = privacyPassPhraseLte;
  }

  public void setPrivacyPassPhraseLte(String privacyPassPhraseLte) {
    this.privacyPassPhraseLte = JsonNullable.<String>of(privacyPassPhraseLte);
  }


  public SnmpTrapReceiverWhereInput privacyPassPhraseNot(String privacyPassPhraseNot) {
    this.privacyPassPhraseNot = JsonNullable.<String>of(privacyPassPhraseNot);
    return this;
  }

   /**
   * Get privacyPassPhraseNot
   * @return privacyPassPhraseNot
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getPrivacyPassPhraseNot() {
        return privacyPassPhraseNot.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_PRIVACY_PASS_PHRASE_NOT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getPrivacyPassPhraseNot_JsonNullable() {
    return privacyPassPhraseNot;
  }
  
  @JsonProperty(JSON_PROPERTY_PRIVACY_PASS_PHRASE_NOT)
  public void setPrivacyPassPhraseNot_JsonNullable(JsonNullable<String> privacyPassPhraseNot) {
    this.privacyPassPhraseNot = privacyPassPhraseNot;
  }

  public void setPrivacyPassPhraseNot(String privacyPassPhraseNot) {
    this.privacyPassPhraseNot = JsonNullable.<String>of(privacyPassPhraseNot);
  }


  public SnmpTrapReceiverWhereInput privacyPassPhraseNotContains(String privacyPassPhraseNotContains) {
    this.privacyPassPhraseNotContains = JsonNullable.<String>of(privacyPassPhraseNotContains);
    return this;
  }

   /**
   * Get privacyPassPhraseNotContains
   * @return privacyPassPhraseNotContains
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getPrivacyPassPhraseNotContains() {
        return privacyPassPhraseNotContains.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_PRIVACY_PASS_PHRASE_NOT_CONTAINS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getPrivacyPassPhraseNotContains_JsonNullable() {
    return privacyPassPhraseNotContains;
  }
  
  @JsonProperty(JSON_PROPERTY_PRIVACY_PASS_PHRASE_NOT_CONTAINS)
  public void setPrivacyPassPhraseNotContains_JsonNullable(JsonNullable<String> privacyPassPhraseNotContains) {
    this.privacyPassPhraseNotContains = privacyPassPhraseNotContains;
  }

  public void setPrivacyPassPhraseNotContains(String privacyPassPhraseNotContains) {
    this.privacyPassPhraseNotContains = JsonNullable.<String>of(privacyPassPhraseNotContains);
  }


  public SnmpTrapReceiverWhereInput privacyPassPhraseNotEndsWith(String privacyPassPhraseNotEndsWith) {
    this.privacyPassPhraseNotEndsWith = JsonNullable.<String>of(privacyPassPhraseNotEndsWith);
    return this;
  }

   /**
   * Get privacyPassPhraseNotEndsWith
   * @return privacyPassPhraseNotEndsWith
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getPrivacyPassPhraseNotEndsWith() {
        return privacyPassPhraseNotEndsWith.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_PRIVACY_PASS_PHRASE_NOT_ENDS_WITH)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getPrivacyPassPhraseNotEndsWith_JsonNullable() {
    return privacyPassPhraseNotEndsWith;
  }
  
  @JsonProperty(JSON_PROPERTY_PRIVACY_PASS_PHRASE_NOT_ENDS_WITH)
  public void setPrivacyPassPhraseNotEndsWith_JsonNullable(JsonNullable<String> privacyPassPhraseNotEndsWith) {
    this.privacyPassPhraseNotEndsWith = privacyPassPhraseNotEndsWith;
  }

  public void setPrivacyPassPhraseNotEndsWith(String privacyPassPhraseNotEndsWith) {
    this.privacyPassPhraseNotEndsWith = JsonNullable.<String>of(privacyPassPhraseNotEndsWith);
  }


  public SnmpTrapReceiverWhereInput privacyPassPhraseNotIn(List<String> privacyPassPhraseNotIn) {
    this.privacyPassPhraseNotIn = JsonNullable.<List<String>>of(privacyPassPhraseNotIn);
    return this;
  }

  public SnmpTrapReceiverWhereInput addPrivacyPassPhraseNotInItem(String privacyPassPhraseNotInItem) {
    if (this.privacyPassPhraseNotIn == null || !this.privacyPassPhraseNotIn.isPresent()) {
      this.privacyPassPhraseNotIn = JsonNullable.<List<String>>of(new ArrayList<>());
    }
    try {
      this.privacyPassPhraseNotIn.get().add(privacyPassPhraseNotInItem);
    } catch (java.util.NoSuchElementException e) {
      // this can never happen, as we make sure above that the value is present
    }
    return this;
  }

   /**
   * Get privacyPassPhraseNotIn
   * @return privacyPassPhraseNotIn
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public List<String> getPrivacyPassPhraseNotIn() {
        return privacyPassPhraseNotIn.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_PRIVACY_PASS_PHRASE_NOT_IN)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<List<String>> getPrivacyPassPhraseNotIn_JsonNullable() {
    return privacyPassPhraseNotIn;
  }
  
  @JsonProperty(JSON_PROPERTY_PRIVACY_PASS_PHRASE_NOT_IN)
  public void setPrivacyPassPhraseNotIn_JsonNullable(JsonNullable<List<String>> privacyPassPhraseNotIn) {
    this.privacyPassPhraseNotIn = privacyPassPhraseNotIn;
  }

  public void setPrivacyPassPhraseNotIn(List<String> privacyPassPhraseNotIn) {
    this.privacyPassPhraseNotIn = JsonNullable.<List<String>>of(privacyPassPhraseNotIn);
  }


  public SnmpTrapReceiverWhereInput privacyPassPhraseNotStartsWith(String privacyPassPhraseNotStartsWith) {
    this.privacyPassPhraseNotStartsWith = JsonNullable.<String>of(privacyPassPhraseNotStartsWith);
    return this;
  }

   /**
   * Get privacyPassPhraseNotStartsWith
   * @return privacyPassPhraseNotStartsWith
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getPrivacyPassPhraseNotStartsWith() {
        return privacyPassPhraseNotStartsWith.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_PRIVACY_PASS_PHRASE_NOT_STARTS_WITH)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getPrivacyPassPhraseNotStartsWith_JsonNullable() {
    return privacyPassPhraseNotStartsWith;
  }
  
  @JsonProperty(JSON_PROPERTY_PRIVACY_PASS_PHRASE_NOT_STARTS_WITH)
  public void setPrivacyPassPhraseNotStartsWith_JsonNullable(JsonNullable<String> privacyPassPhraseNotStartsWith) {
    this.privacyPassPhraseNotStartsWith = privacyPassPhraseNotStartsWith;
  }

  public void setPrivacyPassPhraseNotStartsWith(String privacyPassPhraseNotStartsWith) {
    this.privacyPassPhraseNotStartsWith = JsonNullable.<String>of(privacyPassPhraseNotStartsWith);
  }


  public SnmpTrapReceiverWhereInput privacyPassPhraseStartsWith(String privacyPassPhraseStartsWith) {
    this.privacyPassPhraseStartsWith = JsonNullable.<String>of(privacyPassPhraseStartsWith);
    return this;
  }

   /**
   * Get privacyPassPhraseStartsWith
   * @return privacyPassPhraseStartsWith
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getPrivacyPassPhraseStartsWith() {
        return privacyPassPhraseStartsWith.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_PRIVACY_PASS_PHRASE_STARTS_WITH)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getPrivacyPassPhraseStartsWith_JsonNullable() {
    return privacyPassPhraseStartsWith;
  }
  
  @JsonProperty(JSON_PROPERTY_PRIVACY_PASS_PHRASE_STARTS_WITH)
  public void setPrivacyPassPhraseStartsWith_JsonNullable(JsonNullable<String> privacyPassPhraseStartsWith) {
    this.privacyPassPhraseStartsWith = privacyPassPhraseStartsWith;
  }

  public void setPrivacyPassPhraseStartsWith(String privacyPassPhraseStartsWith) {
    this.privacyPassPhraseStartsWith = JsonNullable.<String>of(privacyPassPhraseStartsWith);
  }


  public SnmpTrapReceiverWhereInput privacyProtocol(SnmpPrivacyProtocol privacyProtocol) {
    this.privacyProtocol = JsonNullable.<SnmpPrivacyProtocol>of(privacyProtocol);
    return this;
  }

   /**
   * Get privacyProtocol
   * @return privacyProtocol
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public SnmpPrivacyProtocol getPrivacyProtocol() {
        return privacyProtocol.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_PRIVACY_PROTOCOL)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<SnmpPrivacyProtocol> getPrivacyProtocol_JsonNullable() {
    return privacyProtocol;
  }
  
  @JsonProperty(JSON_PROPERTY_PRIVACY_PROTOCOL)
  public void setPrivacyProtocol_JsonNullable(JsonNullable<SnmpPrivacyProtocol> privacyProtocol) {
    this.privacyProtocol = privacyProtocol;
  }

  public void setPrivacyProtocol(SnmpPrivacyProtocol privacyProtocol) {
    this.privacyProtocol = JsonNullable.<SnmpPrivacyProtocol>of(privacyProtocol);
  }


  public SnmpTrapReceiverWhereInput privacyProtocolIn(List<SnmpPrivacyProtocol> privacyProtocolIn) {
    this.privacyProtocolIn = JsonNullable.<List<SnmpPrivacyProtocol>>of(privacyProtocolIn);
    return this;
  }

  public SnmpTrapReceiverWhereInput addPrivacyProtocolInItem(SnmpPrivacyProtocol privacyProtocolInItem) {
    if (this.privacyProtocolIn == null || !this.privacyProtocolIn.isPresent()) {
      this.privacyProtocolIn = JsonNullable.<List<SnmpPrivacyProtocol>>of(new ArrayList<>());
    }
    try {
      this.privacyProtocolIn.get().add(privacyProtocolInItem);
    } catch (java.util.NoSuchElementException e) {
      // this can never happen, as we make sure above that the value is present
    }
    return this;
  }

   /**
   * Get privacyProtocolIn
   * @return privacyProtocolIn
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public List<SnmpPrivacyProtocol> getPrivacyProtocolIn() {
        return privacyProtocolIn.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_PRIVACY_PROTOCOL_IN)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<List<SnmpPrivacyProtocol>> getPrivacyProtocolIn_JsonNullable() {
    return privacyProtocolIn;
  }
  
  @JsonProperty(JSON_PROPERTY_PRIVACY_PROTOCOL_IN)
  public void setPrivacyProtocolIn_JsonNullable(JsonNullable<List<SnmpPrivacyProtocol>> privacyProtocolIn) {
    this.privacyProtocolIn = privacyProtocolIn;
  }

  public void setPrivacyProtocolIn(List<SnmpPrivacyProtocol> privacyProtocolIn) {
    this.privacyProtocolIn = JsonNullable.<List<SnmpPrivacyProtocol>>of(privacyProtocolIn);
  }


  public SnmpTrapReceiverWhereInput privacyProtocolNot(SnmpPrivacyProtocol privacyProtocolNot) {
    this.privacyProtocolNot = JsonNullable.<SnmpPrivacyProtocol>of(privacyProtocolNot);
    return this;
  }

   /**
   * Get privacyProtocolNot
   * @return privacyProtocolNot
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public SnmpPrivacyProtocol getPrivacyProtocolNot() {
        return privacyProtocolNot.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_PRIVACY_PROTOCOL_NOT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<SnmpPrivacyProtocol> getPrivacyProtocolNot_JsonNullable() {
    return privacyProtocolNot;
  }
  
  @JsonProperty(JSON_PROPERTY_PRIVACY_PROTOCOL_NOT)
  public void setPrivacyProtocolNot_JsonNullable(JsonNullable<SnmpPrivacyProtocol> privacyProtocolNot) {
    this.privacyProtocolNot = privacyProtocolNot;
  }

  public void setPrivacyProtocolNot(SnmpPrivacyProtocol privacyProtocolNot) {
    this.privacyProtocolNot = JsonNullable.<SnmpPrivacyProtocol>of(privacyProtocolNot);
  }


  public SnmpTrapReceiverWhereInput privacyProtocolNotIn(List<SnmpPrivacyProtocol> privacyProtocolNotIn) {
    this.privacyProtocolNotIn = JsonNullable.<List<SnmpPrivacyProtocol>>of(privacyProtocolNotIn);
    return this;
  }

  public SnmpTrapReceiverWhereInput addPrivacyProtocolNotInItem(SnmpPrivacyProtocol privacyProtocolNotInItem) {
    if (this.privacyProtocolNotIn == null || !this.privacyProtocolNotIn.isPresent()) {
      this.privacyProtocolNotIn = JsonNullable.<List<SnmpPrivacyProtocol>>of(new ArrayList<>());
    }
    try {
      this.privacyProtocolNotIn.get().add(privacyProtocolNotInItem);
    } catch (java.util.NoSuchElementException e) {
      // this can never happen, as we make sure above that the value is present
    }
    return this;
  }

   /**
   * Get privacyProtocolNotIn
   * @return privacyProtocolNotIn
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public List<SnmpPrivacyProtocol> getPrivacyProtocolNotIn() {
        return privacyProtocolNotIn.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_PRIVACY_PROTOCOL_NOT_IN)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<List<SnmpPrivacyProtocol>> getPrivacyProtocolNotIn_JsonNullable() {
    return privacyProtocolNotIn;
  }
  
  @JsonProperty(JSON_PROPERTY_PRIVACY_PROTOCOL_NOT_IN)
  public void setPrivacyProtocolNotIn_JsonNullable(JsonNullable<List<SnmpPrivacyProtocol>> privacyProtocolNotIn) {
    this.privacyProtocolNotIn = privacyProtocolNotIn;
  }

  public void setPrivacyProtocolNotIn(List<SnmpPrivacyProtocol> privacyProtocolNotIn) {
    this.privacyProtocolNotIn = JsonNullable.<List<SnmpPrivacyProtocol>>of(privacyProtocolNotIn);
  }


  public SnmpTrapReceiverWhereInput protocol(SnmpProtocol protocol) {
    this.protocol = JsonNullable.<SnmpProtocol>of(protocol);
    return this;
  }

   /**
   * Get protocol
   * @return protocol
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public SnmpProtocol getProtocol() {
        return protocol.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_PROTOCOL)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<SnmpProtocol> getProtocol_JsonNullable() {
    return protocol;
  }
  
  @JsonProperty(JSON_PROPERTY_PROTOCOL)
  public void setProtocol_JsonNullable(JsonNullable<SnmpProtocol> protocol) {
    this.protocol = protocol;
  }

  public void setProtocol(SnmpProtocol protocol) {
    this.protocol = JsonNullable.<SnmpProtocol>of(protocol);
  }


  public SnmpTrapReceiverWhereInput protocolIn(List<SnmpProtocol> protocolIn) {
    this.protocolIn = JsonNullable.<List<SnmpProtocol>>of(protocolIn);
    return this;
  }

  public SnmpTrapReceiverWhereInput addProtocolInItem(SnmpProtocol protocolInItem) {
    if (this.protocolIn == null || !this.protocolIn.isPresent()) {
      this.protocolIn = JsonNullable.<List<SnmpProtocol>>of(new ArrayList<>());
    }
    try {
      this.protocolIn.get().add(protocolInItem);
    } catch (java.util.NoSuchElementException e) {
      // this can never happen, as we make sure above that the value is present
    }
    return this;
  }

   /**
   * Get protocolIn
   * @return protocolIn
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public List<SnmpProtocol> getProtocolIn() {
        return protocolIn.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_PROTOCOL_IN)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<List<SnmpProtocol>> getProtocolIn_JsonNullable() {
    return protocolIn;
  }
  
  @JsonProperty(JSON_PROPERTY_PROTOCOL_IN)
  public void setProtocolIn_JsonNullable(JsonNullable<List<SnmpProtocol>> protocolIn) {
    this.protocolIn = protocolIn;
  }

  public void setProtocolIn(List<SnmpProtocol> protocolIn) {
    this.protocolIn = JsonNullable.<List<SnmpProtocol>>of(protocolIn);
  }


  public SnmpTrapReceiverWhereInput protocolNot(SnmpProtocol protocolNot) {
    this.protocolNot = JsonNullable.<SnmpProtocol>of(protocolNot);
    return this;
  }

   /**
   * Get protocolNot
   * @return protocolNot
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public SnmpProtocol getProtocolNot() {
        return protocolNot.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_PROTOCOL_NOT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<SnmpProtocol> getProtocolNot_JsonNullable() {
    return protocolNot;
  }
  
  @JsonProperty(JSON_PROPERTY_PROTOCOL_NOT)
  public void setProtocolNot_JsonNullable(JsonNullable<SnmpProtocol> protocolNot) {
    this.protocolNot = protocolNot;
  }

  public void setProtocolNot(SnmpProtocol protocolNot) {
    this.protocolNot = JsonNullable.<SnmpProtocol>of(protocolNot);
  }


  public SnmpTrapReceiverWhereInput protocolNotIn(List<SnmpProtocol> protocolNotIn) {
    this.protocolNotIn = JsonNullable.<List<SnmpProtocol>>of(protocolNotIn);
    return this;
  }

  public SnmpTrapReceiverWhereInput addProtocolNotInItem(SnmpProtocol protocolNotInItem) {
    if (this.protocolNotIn == null || !this.protocolNotIn.isPresent()) {
      this.protocolNotIn = JsonNullable.<List<SnmpProtocol>>of(new ArrayList<>());
    }
    try {
      this.protocolNotIn.get().add(protocolNotInItem);
    } catch (java.util.NoSuchElementException e) {
      // this can never happen, as we make sure above that the value is present
    }
    return this;
  }

   /**
   * Get protocolNotIn
   * @return protocolNotIn
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public List<SnmpProtocol> getProtocolNotIn() {
        return protocolNotIn.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_PROTOCOL_NOT_IN)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<List<SnmpProtocol>> getProtocolNotIn_JsonNullable() {
    return protocolNotIn;
  }
  
  @JsonProperty(JSON_PROPERTY_PROTOCOL_NOT_IN)
  public void setProtocolNotIn_JsonNullable(JsonNullable<List<SnmpProtocol>> protocolNotIn) {
    this.protocolNotIn = protocolNotIn;
  }

  public void setProtocolNotIn(List<SnmpProtocol> protocolNotIn) {
    this.protocolNotIn = JsonNullable.<List<SnmpProtocol>>of(protocolNotIn);
  }


  public SnmpTrapReceiverWhereInput username(String username) {
    this.username = JsonNullable.<String>of(username);
    return this;
  }

   /**
   * Get username
   * @return username
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getUsername() {
        return username.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_USERNAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getUsername_JsonNullable() {
    return username;
  }
  
  @JsonProperty(JSON_PROPERTY_USERNAME)
  public void setUsername_JsonNullable(JsonNullable<String> username) {
    this.username = username;
  }

  public void setUsername(String username) {
    this.username = JsonNullable.<String>of(username);
  }


  public SnmpTrapReceiverWhereInput usernameContains(String usernameContains) {
    this.usernameContains = JsonNullable.<String>of(usernameContains);
    return this;
  }

   /**
   * Get usernameContains
   * @return usernameContains
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getUsernameContains() {
        return usernameContains.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_USERNAME_CONTAINS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getUsernameContains_JsonNullable() {
    return usernameContains;
  }
  
  @JsonProperty(JSON_PROPERTY_USERNAME_CONTAINS)
  public void setUsernameContains_JsonNullable(JsonNullable<String> usernameContains) {
    this.usernameContains = usernameContains;
  }

  public void setUsernameContains(String usernameContains) {
    this.usernameContains = JsonNullable.<String>of(usernameContains);
  }


  public SnmpTrapReceiverWhereInput usernameEndsWith(String usernameEndsWith) {
    this.usernameEndsWith = JsonNullable.<String>of(usernameEndsWith);
    return this;
  }

   /**
   * Get usernameEndsWith
   * @return usernameEndsWith
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getUsernameEndsWith() {
        return usernameEndsWith.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_USERNAME_ENDS_WITH)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getUsernameEndsWith_JsonNullable() {
    return usernameEndsWith;
  }
  
  @JsonProperty(JSON_PROPERTY_USERNAME_ENDS_WITH)
  public void setUsernameEndsWith_JsonNullable(JsonNullable<String> usernameEndsWith) {
    this.usernameEndsWith = usernameEndsWith;
  }

  public void setUsernameEndsWith(String usernameEndsWith) {
    this.usernameEndsWith = JsonNullable.<String>of(usernameEndsWith);
  }


  public SnmpTrapReceiverWhereInput usernameGt(String usernameGt) {
    this.usernameGt = JsonNullable.<String>of(usernameGt);
    return this;
  }

   /**
   * Get usernameGt
   * @return usernameGt
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getUsernameGt() {
        return usernameGt.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_USERNAME_GT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getUsernameGt_JsonNullable() {
    return usernameGt;
  }
  
  @JsonProperty(JSON_PROPERTY_USERNAME_GT)
  public void setUsernameGt_JsonNullable(JsonNullable<String> usernameGt) {
    this.usernameGt = usernameGt;
  }

  public void setUsernameGt(String usernameGt) {
    this.usernameGt = JsonNullable.<String>of(usernameGt);
  }


  public SnmpTrapReceiverWhereInput usernameGte(String usernameGte) {
    this.usernameGte = JsonNullable.<String>of(usernameGte);
    return this;
  }

   /**
   * Get usernameGte
   * @return usernameGte
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getUsernameGte() {
        return usernameGte.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_USERNAME_GTE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getUsernameGte_JsonNullable() {
    return usernameGte;
  }
  
  @JsonProperty(JSON_PROPERTY_USERNAME_GTE)
  public void setUsernameGte_JsonNullable(JsonNullable<String> usernameGte) {
    this.usernameGte = usernameGte;
  }

  public void setUsernameGte(String usernameGte) {
    this.usernameGte = JsonNullable.<String>of(usernameGte);
  }


  public SnmpTrapReceiverWhereInput usernameIn(List<String> usernameIn) {
    this.usernameIn = JsonNullable.<List<String>>of(usernameIn);
    return this;
  }

  public SnmpTrapReceiverWhereInput addUsernameInItem(String usernameInItem) {
    if (this.usernameIn == null || !this.usernameIn.isPresent()) {
      this.usernameIn = JsonNullable.<List<String>>of(new ArrayList<>());
    }
    try {
      this.usernameIn.get().add(usernameInItem);
    } catch (java.util.NoSuchElementException e) {
      // this can never happen, as we make sure above that the value is present
    }
    return this;
  }

   /**
   * Get usernameIn
   * @return usernameIn
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public List<String> getUsernameIn() {
        return usernameIn.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_USERNAME_IN)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<List<String>> getUsernameIn_JsonNullable() {
    return usernameIn;
  }
  
  @JsonProperty(JSON_PROPERTY_USERNAME_IN)
  public void setUsernameIn_JsonNullable(JsonNullable<List<String>> usernameIn) {
    this.usernameIn = usernameIn;
  }

  public void setUsernameIn(List<String> usernameIn) {
    this.usernameIn = JsonNullable.<List<String>>of(usernameIn);
  }


  public SnmpTrapReceiverWhereInput usernameLt(String usernameLt) {
    this.usernameLt = JsonNullable.<String>of(usernameLt);
    return this;
  }

   /**
   * Get usernameLt
   * @return usernameLt
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getUsernameLt() {
        return usernameLt.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_USERNAME_LT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getUsernameLt_JsonNullable() {
    return usernameLt;
  }
  
  @JsonProperty(JSON_PROPERTY_USERNAME_LT)
  public void setUsernameLt_JsonNullable(JsonNullable<String> usernameLt) {
    this.usernameLt = usernameLt;
  }

  public void setUsernameLt(String usernameLt) {
    this.usernameLt = JsonNullable.<String>of(usernameLt);
  }


  public SnmpTrapReceiverWhereInput usernameLte(String usernameLte) {
    this.usernameLte = JsonNullable.<String>of(usernameLte);
    return this;
  }

   /**
   * Get usernameLte
   * @return usernameLte
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getUsernameLte() {
        return usernameLte.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_USERNAME_LTE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getUsernameLte_JsonNullable() {
    return usernameLte;
  }
  
  @JsonProperty(JSON_PROPERTY_USERNAME_LTE)
  public void setUsernameLte_JsonNullable(JsonNullable<String> usernameLte) {
    this.usernameLte = usernameLte;
  }

  public void setUsernameLte(String usernameLte) {
    this.usernameLte = JsonNullable.<String>of(usernameLte);
  }


  public SnmpTrapReceiverWhereInput usernameNot(String usernameNot) {
    this.usernameNot = JsonNullable.<String>of(usernameNot);
    return this;
  }

   /**
   * Get usernameNot
   * @return usernameNot
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getUsernameNot() {
        return usernameNot.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_USERNAME_NOT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getUsernameNot_JsonNullable() {
    return usernameNot;
  }
  
  @JsonProperty(JSON_PROPERTY_USERNAME_NOT)
  public void setUsernameNot_JsonNullable(JsonNullable<String> usernameNot) {
    this.usernameNot = usernameNot;
  }

  public void setUsernameNot(String usernameNot) {
    this.usernameNot = JsonNullable.<String>of(usernameNot);
  }


  public SnmpTrapReceiverWhereInput usernameNotContains(String usernameNotContains) {
    this.usernameNotContains = JsonNullable.<String>of(usernameNotContains);
    return this;
  }

   /**
   * Get usernameNotContains
   * @return usernameNotContains
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getUsernameNotContains() {
        return usernameNotContains.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_USERNAME_NOT_CONTAINS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getUsernameNotContains_JsonNullable() {
    return usernameNotContains;
  }
  
  @JsonProperty(JSON_PROPERTY_USERNAME_NOT_CONTAINS)
  public void setUsernameNotContains_JsonNullable(JsonNullable<String> usernameNotContains) {
    this.usernameNotContains = usernameNotContains;
  }

  public void setUsernameNotContains(String usernameNotContains) {
    this.usernameNotContains = JsonNullable.<String>of(usernameNotContains);
  }


  public SnmpTrapReceiverWhereInput usernameNotEndsWith(String usernameNotEndsWith) {
    this.usernameNotEndsWith = JsonNullable.<String>of(usernameNotEndsWith);
    return this;
  }

   /**
   * Get usernameNotEndsWith
   * @return usernameNotEndsWith
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getUsernameNotEndsWith() {
        return usernameNotEndsWith.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_USERNAME_NOT_ENDS_WITH)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getUsernameNotEndsWith_JsonNullable() {
    return usernameNotEndsWith;
  }
  
  @JsonProperty(JSON_PROPERTY_USERNAME_NOT_ENDS_WITH)
  public void setUsernameNotEndsWith_JsonNullable(JsonNullable<String> usernameNotEndsWith) {
    this.usernameNotEndsWith = usernameNotEndsWith;
  }

  public void setUsernameNotEndsWith(String usernameNotEndsWith) {
    this.usernameNotEndsWith = JsonNullable.<String>of(usernameNotEndsWith);
  }


  public SnmpTrapReceiverWhereInput usernameNotIn(List<String> usernameNotIn) {
    this.usernameNotIn = JsonNullable.<List<String>>of(usernameNotIn);
    return this;
  }

  public SnmpTrapReceiverWhereInput addUsernameNotInItem(String usernameNotInItem) {
    if (this.usernameNotIn == null || !this.usernameNotIn.isPresent()) {
      this.usernameNotIn = JsonNullable.<List<String>>of(new ArrayList<>());
    }
    try {
      this.usernameNotIn.get().add(usernameNotInItem);
    } catch (java.util.NoSuchElementException e) {
      // this can never happen, as we make sure above that the value is present
    }
    return this;
  }

   /**
   * Get usernameNotIn
   * @return usernameNotIn
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public List<String> getUsernameNotIn() {
        return usernameNotIn.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_USERNAME_NOT_IN)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<List<String>> getUsernameNotIn_JsonNullable() {
    return usernameNotIn;
  }
  
  @JsonProperty(JSON_PROPERTY_USERNAME_NOT_IN)
  public void setUsernameNotIn_JsonNullable(JsonNullable<List<String>> usernameNotIn) {
    this.usernameNotIn = usernameNotIn;
  }

  public void setUsernameNotIn(List<String> usernameNotIn) {
    this.usernameNotIn = JsonNullable.<List<String>>of(usernameNotIn);
  }


  public SnmpTrapReceiverWhereInput usernameNotStartsWith(String usernameNotStartsWith) {
    this.usernameNotStartsWith = JsonNullable.<String>of(usernameNotStartsWith);
    return this;
  }

   /**
   * Get usernameNotStartsWith
   * @return usernameNotStartsWith
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getUsernameNotStartsWith() {
        return usernameNotStartsWith.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_USERNAME_NOT_STARTS_WITH)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getUsernameNotStartsWith_JsonNullable() {
    return usernameNotStartsWith;
  }
  
  @JsonProperty(JSON_PROPERTY_USERNAME_NOT_STARTS_WITH)
  public void setUsernameNotStartsWith_JsonNullable(JsonNullable<String> usernameNotStartsWith) {
    this.usernameNotStartsWith = usernameNotStartsWith;
  }

  public void setUsernameNotStartsWith(String usernameNotStartsWith) {
    this.usernameNotStartsWith = JsonNullable.<String>of(usernameNotStartsWith);
  }


  public SnmpTrapReceiverWhereInput usernameStartsWith(String usernameStartsWith) {
    this.usernameStartsWith = JsonNullable.<String>of(usernameStartsWith);
    return this;
  }

   /**
   * Get usernameStartsWith
   * @return usernameStartsWith
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getUsernameStartsWith() {
        return usernameStartsWith.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_USERNAME_STARTS_WITH)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getUsernameStartsWith_JsonNullable() {
    return usernameStartsWith;
  }
  
  @JsonProperty(JSON_PROPERTY_USERNAME_STARTS_WITH)
  public void setUsernameStartsWith_JsonNullable(JsonNullable<String> usernameStartsWith) {
    this.usernameStartsWith = usernameStartsWith;
  }

  public void setUsernameStartsWith(String usernameStartsWith) {
    this.usernameStartsWith = JsonNullable.<String>of(usernameStartsWith);
  }


  public SnmpTrapReceiverWhereInput version(SnmpVersion version) {
    this.version = JsonNullable.<SnmpVersion>of(version);
    return this;
  }

   /**
   * Get version
   * @return version
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public SnmpVersion getVersion() {
        return version.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_VERSION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<SnmpVersion> getVersion_JsonNullable() {
    return version;
  }
  
  @JsonProperty(JSON_PROPERTY_VERSION)
  public void setVersion_JsonNullable(JsonNullable<SnmpVersion> version) {
    this.version = version;
  }

  public void setVersion(SnmpVersion version) {
    this.version = JsonNullable.<SnmpVersion>of(version);
  }


  public SnmpTrapReceiverWhereInput versionIn(List<SnmpVersion> versionIn) {
    this.versionIn = JsonNullable.<List<SnmpVersion>>of(versionIn);
    return this;
  }

  public SnmpTrapReceiverWhereInput addVersionInItem(SnmpVersion versionInItem) {
    if (this.versionIn == null || !this.versionIn.isPresent()) {
      this.versionIn = JsonNullable.<List<SnmpVersion>>of(new ArrayList<>());
    }
    try {
      this.versionIn.get().add(versionInItem);
    } catch (java.util.NoSuchElementException e) {
      // this can never happen, as we make sure above that the value is present
    }
    return this;
  }

   /**
   * Get versionIn
   * @return versionIn
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public List<SnmpVersion> getVersionIn() {
        return versionIn.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_VERSION_IN)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<List<SnmpVersion>> getVersionIn_JsonNullable() {
    return versionIn;
  }
  
  @JsonProperty(JSON_PROPERTY_VERSION_IN)
  public void setVersionIn_JsonNullable(JsonNullable<List<SnmpVersion>> versionIn) {
    this.versionIn = versionIn;
  }

  public void setVersionIn(List<SnmpVersion> versionIn) {
    this.versionIn = JsonNullable.<List<SnmpVersion>>of(versionIn);
  }


  public SnmpTrapReceiverWhereInput versionNot(SnmpVersion versionNot) {
    this.versionNot = JsonNullable.<SnmpVersion>of(versionNot);
    return this;
  }

   /**
   * Get versionNot
   * @return versionNot
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public SnmpVersion getVersionNot() {
        return versionNot.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_VERSION_NOT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<SnmpVersion> getVersionNot_JsonNullable() {
    return versionNot;
  }
  
  @JsonProperty(JSON_PROPERTY_VERSION_NOT)
  public void setVersionNot_JsonNullable(JsonNullable<SnmpVersion> versionNot) {
    this.versionNot = versionNot;
  }

  public void setVersionNot(SnmpVersion versionNot) {
    this.versionNot = JsonNullable.<SnmpVersion>of(versionNot);
  }


  public SnmpTrapReceiverWhereInput versionNotIn(List<SnmpVersion> versionNotIn) {
    this.versionNotIn = JsonNullable.<List<SnmpVersion>>of(versionNotIn);
    return this;
  }

  public SnmpTrapReceiverWhereInput addVersionNotInItem(SnmpVersion versionNotInItem) {
    if (this.versionNotIn == null || !this.versionNotIn.isPresent()) {
      this.versionNotIn = JsonNullable.<List<SnmpVersion>>of(new ArrayList<>());
    }
    try {
      this.versionNotIn.get().add(versionNotInItem);
    } catch (java.util.NoSuchElementException e) {
      // this can never happen, as we make sure above that the value is present
    }
    return this;
  }

   /**
   * Get versionNotIn
   * @return versionNotIn
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public List<SnmpVersion> getVersionNotIn() {
        return versionNotIn.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_VERSION_NOT_IN)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<List<SnmpVersion>> getVersionNotIn_JsonNullable() {
    return versionNotIn;
  }
  
  @JsonProperty(JSON_PROPERTY_VERSION_NOT_IN)
  public void setVersionNotIn_JsonNullable(JsonNullable<List<SnmpVersion>> versionNotIn) {
    this.versionNotIn = versionNotIn;
  }

  public void setVersionNotIn(List<SnmpVersion> versionNotIn) {
    this.versionNotIn = JsonNullable.<List<SnmpVersion>>of(versionNotIn);
  }


  /**
   * Return true if this SnmpTrapReceiverWhereInput object is equal to o.
   */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    SnmpTrapReceiverWhereInput snmpTrapReceiverWhereInput = (SnmpTrapReceiverWhereInput) o;
    return equalsNullable(this.AND, snmpTrapReceiverWhereInput.AND) &&
        equalsNullable(this.authPassPhrase, snmpTrapReceiverWhereInput.authPassPhrase) &&
        equalsNullable(this.authPassPhraseContains, snmpTrapReceiverWhereInput.authPassPhraseContains) &&
        equalsNullable(this.authPassPhraseEndsWith, snmpTrapReceiverWhereInput.authPassPhraseEndsWith) &&
        equalsNullable(this.authPassPhraseGt, snmpTrapReceiverWhereInput.authPassPhraseGt) &&
        equalsNullable(this.authPassPhraseGte, snmpTrapReceiverWhereInput.authPassPhraseGte) &&
        equalsNullable(this.authPassPhraseIn, snmpTrapReceiverWhereInput.authPassPhraseIn) &&
        equalsNullable(this.authPassPhraseLt, snmpTrapReceiverWhereInput.authPassPhraseLt) &&
        equalsNullable(this.authPassPhraseLte, snmpTrapReceiverWhereInput.authPassPhraseLte) &&
        equalsNullable(this.authPassPhraseNot, snmpTrapReceiverWhereInput.authPassPhraseNot) &&
        equalsNullable(this.authPassPhraseNotContains, snmpTrapReceiverWhereInput.authPassPhraseNotContains) &&
        equalsNullable(this.authPassPhraseNotEndsWith, snmpTrapReceiverWhereInput.authPassPhraseNotEndsWith) &&
        equalsNullable(this.authPassPhraseNotIn, snmpTrapReceiverWhereInput.authPassPhraseNotIn) &&
        equalsNullable(this.authPassPhraseNotStartsWith, snmpTrapReceiverWhereInput.authPassPhraseNotStartsWith) &&
        equalsNullable(this.authPassPhraseStartsWith, snmpTrapReceiverWhereInput.authPassPhraseStartsWith) &&
        equalsNullable(this.authProtocol, snmpTrapReceiverWhereInput.authProtocol) &&
        equalsNullable(this.authProtocolIn, snmpTrapReceiverWhereInput.authProtocolIn) &&
        equalsNullable(this.authProtocolNot, snmpTrapReceiverWhereInput.authProtocolNot) &&
        equalsNullable(this.authProtocolNotIn, snmpTrapReceiverWhereInput.authProtocolNotIn) &&
        equalsNullable(this.cluster, snmpTrapReceiverWhereInput.cluster) &&
        equalsNullable(this.community, snmpTrapReceiverWhereInput.community) &&
        equalsNullable(this.communityContains, snmpTrapReceiverWhereInput.communityContains) &&
        equalsNullable(this.communityEndsWith, snmpTrapReceiverWhereInput.communityEndsWith) &&
        equalsNullable(this.communityGt, snmpTrapReceiverWhereInput.communityGt) &&
        equalsNullable(this.communityGte, snmpTrapReceiverWhereInput.communityGte) &&
        equalsNullable(this.communityIn, snmpTrapReceiverWhereInput.communityIn) &&
        equalsNullable(this.communityLt, snmpTrapReceiverWhereInput.communityLt) &&
        equalsNullable(this.communityLte, snmpTrapReceiverWhereInput.communityLte) &&
        equalsNullable(this.communityNot, snmpTrapReceiverWhereInput.communityNot) &&
        equalsNullable(this.communityNotContains, snmpTrapReceiverWhereInput.communityNotContains) &&
        equalsNullable(this.communityNotEndsWith, snmpTrapReceiverWhereInput.communityNotEndsWith) &&
        equalsNullable(this.communityNotIn, snmpTrapReceiverWhereInput.communityNotIn) &&
        equalsNullable(this.communityNotStartsWith, snmpTrapReceiverWhereInput.communityNotStartsWith) &&
        equalsNullable(this.communityStartsWith, snmpTrapReceiverWhereInput.communityStartsWith) &&
        equalsNullable(this.disabled, snmpTrapReceiverWhereInput.disabled) &&
        equalsNullable(this.disabledNot, snmpTrapReceiverWhereInput.disabledNot) &&
        equalsNullable(this.engineId, snmpTrapReceiverWhereInput.engineId) &&
        equalsNullable(this.engineIdContains, snmpTrapReceiverWhereInput.engineIdContains) &&
        equalsNullable(this.engineIdEndsWith, snmpTrapReceiverWhereInput.engineIdEndsWith) &&
        equalsNullable(this.engineIdGt, snmpTrapReceiverWhereInput.engineIdGt) &&
        equalsNullable(this.engineIdGte, snmpTrapReceiverWhereInput.engineIdGte) &&
        equalsNullable(this.engineIdIn, snmpTrapReceiverWhereInput.engineIdIn) &&
        equalsNullable(this.engineIdLt, snmpTrapReceiverWhereInput.engineIdLt) &&
        equalsNullable(this.engineIdLte, snmpTrapReceiverWhereInput.engineIdLte) &&
        equalsNullable(this.engineIdNot, snmpTrapReceiverWhereInput.engineIdNot) &&
        equalsNullable(this.engineIdNotContains, snmpTrapReceiverWhereInput.engineIdNotContains) &&
        equalsNullable(this.engineIdNotEndsWith, snmpTrapReceiverWhereInput.engineIdNotEndsWith) &&
        equalsNullable(this.engineIdNotIn, snmpTrapReceiverWhereInput.engineIdNotIn) &&
        equalsNullable(this.engineIdNotStartsWith, snmpTrapReceiverWhereInput.engineIdNotStartsWith) &&
        equalsNullable(this.engineIdStartsWith, snmpTrapReceiverWhereInput.engineIdStartsWith) &&
        equalsNullable(this.entityAsyncStatus, snmpTrapReceiverWhereInput.entityAsyncStatus) &&
        equalsNullable(this.entityAsyncStatusIn, snmpTrapReceiverWhereInput.entityAsyncStatusIn) &&
        equalsNullable(this.entityAsyncStatusNot, snmpTrapReceiverWhereInput.entityAsyncStatusNot) &&
        equalsNullable(this.entityAsyncStatusNotIn, snmpTrapReceiverWhereInput.entityAsyncStatusNotIn) &&
        equalsNullable(this.host, snmpTrapReceiverWhereInput.host) &&
        equalsNullable(this.hostContains, snmpTrapReceiverWhereInput.hostContains) &&
        equalsNullable(this.hostEndsWith, snmpTrapReceiverWhereInput.hostEndsWith) &&
        equalsNullable(this.hostGt, snmpTrapReceiverWhereInput.hostGt) &&
        equalsNullable(this.hostGte, snmpTrapReceiverWhereInput.hostGte) &&
        equalsNullable(this.hostIn, snmpTrapReceiverWhereInput.hostIn) &&
        equalsNullable(this.hostLt, snmpTrapReceiverWhereInput.hostLt) &&
        equalsNullable(this.hostLte, snmpTrapReceiverWhereInput.hostLte) &&
        equalsNullable(this.hostNot, snmpTrapReceiverWhereInput.hostNot) &&
        equalsNullable(this.hostNotContains, snmpTrapReceiverWhereInput.hostNotContains) &&
        equalsNullable(this.hostNotEndsWith, snmpTrapReceiverWhereInput.hostNotEndsWith) &&
        equalsNullable(this.hostNotIn, snmpTrapReceiverWhereInput.hostNotIn) &&
        equalsNullable(this.hostNotStartsWith, snmpTrapReceiverWhereInput.hostNotStartsWith) &&
        equalsNullable(this.hostStartsWith, snmpTrapReceiverWhereInput.hostStartsWith) &&
        equalsNullable(this.id, snmpTrapReceiverWhereInput.id) &&
        equalsNullable(this.idContains, snmpTrapReceiverWhereInput.idContains) &&
        equalsNullable(this.idEndsWith, snmpTrapReceiverWhereInput.idEndsWith) &&
        equalsNullable(this.idGt, snmpTrapReceiverWhereInput.idGt) &&
        equalsNullable(this.idGte, snmpTrapReceiverWhereInput.idGte) &&
        equalsNullable(this.idIn, snmpTrapReceiverWhereInput.idIn) &&
        equalsNullable(this.idLt, snmpTrapReceiverWhereInput.idLt) &&
        equalsNullable(this.idLte, snmpTrapReceiverWhereInput.idLte) &&
        equalsNullable(this.idNot, snmpTrapReceiverWhereInput.idNot) &&
        equalsNullable(this.idNotContains, snmpTrapReceiverWhereInput.idNotContains) &&
        equalsNullable(this.idNotEndsWith, snmpTrapReceiverWhereInput.idNotEndsWith) &&
        equalsNullable(this.idNotIn, snmpTrapReceiverWhereInput.idNotIn) &&
        equalsNullable(this.idNotStartsWith, snmpTrapReceiverWhereInput.idNotStartsWith) &&
        equalsNullable(this.idStartsWith, snmpTrapReceiverWhereInput.idStartsWith) &&
        equalsNullable(this.inform, snmpTrapReceiverWhereInput.inform) &&
        equalsNullable(this.informNot, snmpTrapReceiverWhereInput.informNot) &&
        equalsNullable(this.languageCode, snmpTrapReceiverWhereInput.languageCode) &&
        equalsNullable(this.languageCodeIn, snmpTrapReceiverWhereInput.languageCodeIn) &&
        equalsNullable(this.languageCodeNot, snmpTrapReceiverWhereInput.languageCodeNot) &&
        equalsNullable(this.languageCodeNotIn, snmpTrapReceiverWhereInput.languageCodeNotIn) &&
        equalsNullable(this.localId, snmpTrapReceiverWhereInput.localId) &&
        equalsNullable(this.localIdContains, snmpTrapReceiverWhereInput.localIdContains) &&
        equalsNullable(this.localIdEndsWith, snmpTrapReceiverWhereInput.localIdEndsWith) &&
        equalsNullable(this.localIdGt, snmpTrapReceiverWhereInput.localIdGt) &&
        equalsNullable(this.localIdGte, snmpTrapReceiverWhereInput.localIdGte) &&
        equalsNullable(this.localIdIn, snmpTrapReceiverWhereInput.localIdIn) &&
        equalsNullable(this.localIdLt, snmpTrapReceiverWhereInput.localIdLt) &&
        equalsNullable(this.localIdLte, snmpTrapReceiverWhereInput.localIdLte) &&
        equalsNullable(this.localIdNot, snmpTrapReceiverWhereInput.localIdNot) &&
        equalsNullable(this.localIdNotContains, snmpTrapReceiverWhereInput.localIdNotContains) &&
        equalsNullable(this.localIdNotEndsWith, snmpTrapReceiverWhereInput.localIdNotEndsWith) &&
        equalsNullable(this.localIdNotIn, snmpTrapReceiverWhereInput.localIdNotIn) &&
        equalsNullable(this.localIdNotStartsWith, snmpTrapReceiverWhereInput.localIdNotStartsWith) &&
        equalsNullable(this.localIdStartsWith, snmpTrapReceiverWhereInput.localIdStartsWith) &&
        equalsNullable(this.name, snmpTrapReceiverWhereInput.name) &&
        equalsNullable(this.nameContains, snmpTrapReceiverWhereInput.nameContains) &&
        equalsNullable(this.nameEndsWith, snmpTrapReceiverWhereInput.nameEndsWith) &&
        equalsNullable(this.nameGt, snmpTrapReceiverWhereInput.nameGt) &&
        equalsNullable(this.nameGte, snmpTrapReceiverWhereInput.nameGte) &&
        equalsNullable(this.nameIn, snmpTrapReceiverWhereInput.nameIn) &&
        equalsNullable(this.nameLt, snmpTrapReceiverWhereInput.nameLt) &&
        equalsNullable(this.nameLte, snmpTrapReceiverWhereInput.nameLte) &&
        equalsNullable(this.nameNot, snmpTrapReceiverWhereInput.nameNot) &&
        equalsNullable(this.nameNotContains, snmpTrapReceiverWhereInput.nameNotContains) &&
        equalsNullable(this.nameNotEndsWith, snmpTrapReceiverWhereInput.nameNotEndsWith) &&
        equalsNullable(this.nameNotIn, snmpTrapReceiverWhereInput.nameNotIn) &&
        equalsNullable(this.nameNotStartsWith, snmpTrapReceiverWhereInput.nameNotStartsWith) &&
        equalsNullable(this.nameStartsWith, snmpTrapReceiverWhereInput.nameStartsWith) &&
        equalsNullable(this.NOT, snmpTrapReceiverWhereInput.NOT) &&
        equalsNullable(this.OR, snmpTrapReceiverWhereInput.OR) &&
        equalsNullable(this.port, snmpTrapReceiverWhereInput.port) &&
        equalsNullable(this.portGt, snmpTrapReceiverWhereInput.portGt) &&
        equalsNullable(this.portGte, snmpTrapReceiverWhereInput.portGte) &&
        equalsNullable(this.portIn, snmpTrapReceiverWhereInput.portIn) &&
        equalsNullable(this.portLt, snmpTrapReceiverWhereInput.portLt) &&
        equalsNullable(this.portLte, snmpTrapReceiverWhereInput.portLte) &&
        equalsNullable(this.portNot, snmpTrapReceiverWhereInput.portNot) &&
        equalsNullable(this.portNotIn, snmpTrapReceiverWhereInput.portNotIn) &&
        equalsNullable(this.privacyPassPhrase, snmpTrapReceiverWhereInput.privacyPassPhrase) &&
        equalsNullable(this.privacyPassPhraseContains, snmpTrapReceiverWhereInput.privacyPassPhraseContains) &&
        equalsNullable(this.privacyPassPhraseEndsWith, snmpTrapReceiverWhereInput.privacyPassPhraseEndsWith) &&
        equalsNullable(this.privacyPassPhraseGt, snmpTrapReceiverWhereInput.privacyPassPhraseGt) &&
        equalsNullable(this.privacyPassPhraseGte, snmpTrapReceiverWhereInput.privacyPassPhraseGte) &&
        equalsNullable(this.privacyPassPhraseIn, snmpTrapReceiverWhereInput.privacyPassPhraseIn) &&
        equalsNullable(this.privacyPassPhraseLt, snmpTrapReceiverWhereInput.privacyPassPhraseLt) &&
        equalsNullable(this.privacyPassPhraseLte, snmpTrapReceiverWhereInput.privacyPassPhraseLte) &&
        equalsNullable(this.privacyPassPhraseNot, snmpTrapReceiverWhereInput.privacyPassPhraseNot) &&
        equalsNullable(this.privacyPassPhraseNotContains, snmpTrapReceiverWhereInput.privacyPassPhraseNotContains) &&
        equalsNullable(this.privacyPassPhraseNotEndsWith, snmpTrapReceiverWhereInput.privacyPassPhraseNotEndsWith) &&
        equalsNullable(this.privacyPassPhraseNotIn, snmpTrapReceiverWhereInput.privacyPassPhraseNotIn) &&
        equalsNullable(this.privacyPassPhraseNotStartsWith, snmpTrapReceiverWhereInput.privacyPassPhraseNotStartsWith) &&
        equalsNullable(this.privacyPassPhraseStartsWith, snmpTrapReceiverWhereInput.privacyPassPhraseStartsWith) &&
        equalsNullable(this.privacyProtocol, snmpTrapReceiverWhereInput.privacyProtocol) &&
        equalsNullable(this.privacyProtocolIn, snmpTrapReceiverWhereInput.privacyProtocolIn) &&
        equalsNullable(this.privacyProtocolNot, snmpTrapReceiverWhereInput.privacyProtocolNot) &&
        equalsNullable(this.privacyProtocolNotIn, snmpTrapReceiverWhereInput.privacyProtocolNotIn) &&
        equalsNullable(this.protocol, snmpTrapReceiverWhereInput.protocol) &&
        equalsNullable(this.protocolIn, snmpTrapReceiverWhereInput.protocolIn) &&
        equalsNullable(this.protocolNot, snmpTrapReceiverWhereInput.protocolNot) &&
        equalsNullable(this.protocolNotIn, snmpTrapReceiverWhereInput.protocolNotIn) &&
        equalsNullable(this.username, snmpTrapReceiverWhereInput.username) &&
        equalsNullable(this.usernameContains, snmpTrapReceiverWhereInput.usernameContains) &&
        equalsNullable(this.usernameEndsWith, snmpTrapReceiverWhereInput.usernameEndsWith) &&
        equalsNullable(this.usernameGt, snmpTrapReceiverWhereInput.usernameGt) &&
        equalsNullable(this.usernameGte, snmpTrapReceiverWhereInput.usernameGte) &&
        equalsNullable(this.usernameIn, snmpTrapReceiverWhereInput.usernameIn) &&
        equalsNullable(this.usernameLt, snmpTrapReceiverWhereInput.usernameLt) &&
        equalsNullable(this.usernameLte, snmpTrapReceiverWhereInput.usernameLte) &&
        equalsNullable(this.usernameNot, snmpTrapReceiverWhereInput.usernameNot) &&
        equalsNullable(this.usernameNotContains, snmpTrapReceiverWhereInput.usernameNotContains) &&
        equalsNullable(this.usernameNotEndsWith, snmpTrapReceiverWhereInput.usernameNotEndsWith) &&
        equalsNullable(this.usernameNotIn, snmpTrapReceiverWhereInput.usernameNotIn) &&
        equalsNullable(this.usernameNotStartsWith, snmpTrapReceiverWhereInput.usernameNotStartsWith) &&
        equalsNullable(this.usernameStartsWith, snmpTrapReceiverWhereInput.usernameStartsWith) &&
        equalsNullable(this.version, snmpTrapReceiverWhereInput.version) &&
        equalsNullable(this.versionIn, snmpTrapReceiverWhereInput.versionIn) &&
        equalsNullable(this.versionNot, snmpTrapReceiverWhereInput.versionNot) &&
        equalsNullable(this.versionNotIn, snmpTrapReceiverWhereInput.versionNotIn);
  }

  private static <T> boolean equalsNullable(JsonNullable<T> a, JsonNullable<T> b) {
    return a == b || (a != null && b != null && a.isPresent() && b.isPresent() && Objects.deepEquals(a.get(), b.get()));
  }

  @Override
  public int hashCode() {
    return Objects.hash(hashCodeNullable(AND), hashCodeNullable(authPassPhrase), hashCodeNullable(authPassPhraseContains), hashCodeNullable(authPassPhraseEndsWith), hashCodeNullable(authPassPhraseGt), hashCodeNullable(authPassPhraseGte), hashCodeNullable(authPassPhraseIn), hashCodeNullable(authPassPhraseLt), hashCodeNullable(authPassPhraseLte), hashCodeNullable(authPassPhraseNot), hashCodeNullable(authPassPhraseNotContains), hashCodeNullable(authPassPhraseNotEndsWith), hashCodeNullable(authPassPhraseNotIn), hashCodeNullable(authPassPhraseNotStartsWith), hashCodeNullable(authPassPhraseStartsWith), hashCodeNullable(authProtocol), hashCodeNullable(authProtocolIn), hashCodeNullable(authProtocolNot), hashCodeNullable(authProtocolNotIn), hashCodeNullable(cluster), hashCodeNullable(community), hashCodeNullable(communityContains), hashCodeNullable(communityEndsWith), hashCodeNullable(communityGt), hashCodeNullable(communityGte), hashCodeNullable(communityIn), hashCodeNullable(communityLt), hashCodeNullable(communityLte), hashCodeNullable(communityNot), hashCodeNullable(communityNotContains), hashCodeNullable(communityNotEndsWith), hashCodeNullable(communityNotIn), hashCodeNullable(communityNotStartsWith), hashCodeNullable(communityStartsWith), hashCodeNullable(disabled), hashCodeNullable(disabledNot), hashCodeNullable(engineId), hashCodeNullable(engineIdContains), hashCodeNullable(engineIdEndsWith), hashCodeNullable(engineIdGt), hashCodeNullable(engineIdGte), hashCodeNullable(engineIdIn), hashCodeNullable(engineIdLt), hashCodeNullable(engineIdLte), hashCodeNullable(engineIdNot), hashCodeNullable(engineIdNotContains), hashCodeNullable(engineIdNotEndsWith), hashCodeNullable(engineIdNotIn), hashCodeNullable(engineIdNotStartsWith), hashCodeNullable(engineIdStartsWith), hashCodeNullable(entityAsyncStatus), hashCodeNullable(entityAsyncStatusIn), hashCodeNullable(entityAsyncStatusNot), hashCodeNullable(entityAsyncStatusNotIn), hashCodeNullable(host), hashCodeNullable(hostContains), hashCodeNullable(hostEndsWith), hashCodeNullable(hostGt), hashCodeNullable(hostGte), hashCodeNullable(hostIn), hashCodeNullable(hostLt), hashCodeNullable(hostLte), hashCodeNullable(hostNot), hashCodeNullable(hostNotContains), hashCodeNullable(hostNotEndsWith), hashCodeNullable(hostNotIn), hashCodeNullable(hostNotStartsWith), hashCodeNullable(hostStartsWith), hashCodeNullable(id), hashCodeNullable(idContains), hashCodeNullable(idEndsWith), hashCodeNullable(idGt), hashCodeNullable(idGte), hashCodeNullable(idIn), hashCodeNullable(idLt), hashCodeNullable(idLte), hashCodeNullable(idNot), hashCodeNullable(idNotContains), hashCodeNullable(idNotEndsWith), hashCodeNullable(idNotIn), hashCodeNullable(idNotStartsWith), hashCodeNullable(idStartsWith), hashCodeNullable(inform), hashCodeNullable(informNot), hashCodeNullable(languageCode), hashCodeNullable(languageCodeIn), hashCodeNullable(languageCodeNot), hashCodeNullable(languageCodeNotIn), hashCodeNullable(localId), hashCodeNullable(localIdContains), hashCodeNullable(localIdEndsWith), hashCodeNullable(localIdGt), hashCodeNullable(localIdGte), hashCodeNullable(localIdIn), hashCodeNullable(localIdLt), hashCodeNullable(localIdLte), hashCodeNullable(localIdNot), hashCodeNullable(localIdNotContains), hashCodeNullable(localIdNotEndsWith), hashCodeNullable(localIdNotIn), hashCodeNullable(localIdNotStartsWith), hashCodeNullable(localIdStartsWith), hashCodeNullable(name), hashCodeNullable(nameContains), hashCodeNullable(nameEndsWith), hashCodeNullable(nameGt), hashCodeNullable(nameGte), hashCodeNullable(nameIn), hashCodeNullable(nameLt), hashCodeNullable(nameLte), hashCodeNullable(nameNot), hashCodeNullable(nameNotContains), hashCodeNullable(nameNotEndsWith), hashCodeNullable(nameNotIn), hashCodeNullable(nameNotStartsWith), hashCodeNullable(nameStartsWith), hashCodeNullable(NOT), hashCodeNullable(OR), hashCodeNullable(port), hashCodeNullable(portGt), hashCodeNullable(portGte), hashCodeNullable(portIn), hashCodeNullable(portLt), hashCodeNullable(portLte), hashCodeNullable(portNot), hashCodeNullable(portNotIn), hashCodeNullable(privacyPassPhrase), hashCodeNullable(privacyPassPhraseContains), hashCodeNullable(privacyPassPhraseEndsWith), hashCodeNullable(privacyPassPhraseGt), hashCodeNullable(privacyPassPhraseGte), hashCodeNullable(privacyPassPhraseIn), hashCodeNullable(privacyPassPhraseLt), hashCodeNullable(privacyPassPhraseLte), hashCodeNullable(privacyPassPhraseNot), hashCodeNullable(privacyPassPhraseNotContains), hashCodeNullable(privacyPassPhraseNotEndsWith), hashCodeNullable(privacyPassPhraseNotIn), hashCodeNullable(privacyPassPhraseNotStartsWith), hashCodeNullable(privacyPassPhraseStartsWith), hashCodeNullable(privacyProtocol), hashCodeNullable(privacyProtocolIn), hashCodeNullable(privacyProtocolNot), hashCodeNullable(privacyProtocolNotIn), hashCodeNullable(protocol), hashCodeNullable(protocolIn), hashCodeNullable(protocolNot), hashCodeNullable(protocolNotIn), hashCodeNullable(username), hashCodeNullable(usernameContains), hashCodeNullable(usernameEndsWith), hashCodeNullable(usernameGt), hashCodeNullable(usernameGte), hashCodeNullable(usernameIn), hashCodeNullable(usernameLt), hashCodeNullable(usernameLte), hashCodeNullable(usernameNot), hashCodeNullable(usernameNotContains), hashCodeNullable(usernameNotEndsWith), hashCodeNullable(usernameNotIn), hashCodeNullable(usernameNotStartsWith), hashCodeNullable(usernameStartsWith), hashCodeNullable(version), hashCodeNullable(versionIn), hashCodeNullable(versionNot), hashCodeNullable(versionNotIn));
  }

  private static <T> int hashCodeNullable(JsonNullable<T> a) {
    if (a == null) {
      return 1;
    }
    return a.isPresent() ? Arrays.deepHashCode(new Object[]{a.get()}) : 31;
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class SnmpTrapReceiverWhereInput {\n");
    sb.append("    AND: ").append(toIndentedString(AND)).append("\n");
    sb.append("    authPassPhrase: ").append(toIndentedString(authPassPhrase)).append("\n");
    sb.append("    authPassPhraseContains: ").append(toIndentedString(authPassPhraseContains)).append("\n");
    sb.append("    authPassPhraseEndsWith: ").append(toIndentedString(authPassPhraseEndsWith)).append("\n");
    sb.append("    authPassPhraseGt: ").append(toIndentedString(authPassPhraseGt)).append("\n");
    sb.append("    authPassPhraseGte: ").append(toIndentedString(authPassPhraseGte)).append("\n");
    sb.append("    authPassPhraseIn: ").append(toIndentedString(authPassPhraseIn)).append("\n");
    sb.append("    authPassPhraseLt: ").append(toIndentedString(authPassPhraseLt)).append("\n");
    sb.append("    authPassPhraseLte: ").append(toIndentedString(authPassPhraseLte)).append("\n");
    sb.append("    authPassPhraseNot: ").append(toIndentedString(authPassPhraseNot)).append("\n");
    sb.append("    authPassPhraseNotContains: ").append(toIndentedString(authPassPhraseNotContains)).append("\n");
    sb.append("    authPassPhraseNotEndsWith: ").append(toIndentedString(authPassPhraseNotEndsWith)).append("\n");
    sb.append("    authPassPhraseNotIn: ").append(toIndentedString(authPassPhraseNotIn)).append("\n");
    sb.append("    authPassPhraseNotStartsWith: ").append(toIndentedString(authPassPhraseNotStartsWith)).append("\n");
    sb.append("    authPassPhraseStartsWith: ").append(toIndentedString(authPassPhraseStartsWith)).append("\n");
    sb.append("    authProtocol: ").append(toIndentedString(authProtocol)).append("\n");
    sb.append("    authProtocolIn: ").append(toIndentedString(authProtocolIn)).append("\n");
    sb.append("    authProtocolNot: ").append(toIndentedString(authProtocolNot)).append("\n");
    sb.append("    authProtocolNotIn: ").append(toIndentedString(authProtocolNotIn)).append("\n");
    sb.append("    cluster: ").append(toIndentedString(cluster)).append("\n");
    sb.append("    community: ").append(toIndentedString(community)).append("\n");
    sb.append("    communityContains: ").append(toIndentedString(communityContains)).append("\n");
    sb.append("    communityEndsWith: ").append(toIndentedString(communityEndsWith)).append("\n");
    sb.append("    communityGt: ").append(toIndentedString(communityGt)).append("\n");
    sb.append("    communityGte: ").append(toIndentedString(communityGte)).append("\n");
    sb.append("    communityIn: ").append(toIndentedString(communityIn)).append("\n");
    sb.append("    communityLt: ").append(toIndentedString(communityLt)).append("\n");
    sb.append("    communityLte: ").append(toIndentedString(communityLte)).append("\n");
    sb.append("    communityNot: ").append(toIndentedString(communityNot)).append("\n");
    sb.append("    communityNotContains: ").append(toIndentedString(communityNotContains)).append("\n");
    sb.append("    communityNotEndsWith: ").append(toIndentedString(communityNotEndsWith)).append("\n");
    sb.append("    communityNotIn: ").append(toIndentedString(communityNotIn)).append("\n");
    sb.append("    communityNotStartsWith: ").append(toIndentedString(communityNotStartsWith)).append("\n");
    sb.append("    communityStartsWith: ").append(toIndentedString(communityStartsWith)).append("\n");
    sb.append("    disabled: ").append(toIndentedString(disabled)).append("\n");
    sb.append("    disabledNot: ").append(toIndentedString(disabledNot)).append("\n");
    sb.append("    engineId: ").append(toIndentedString(engineId)).append("\n");
    sb.append("    engineIdContains: ").append(toIndentedString(engineIdContains)).append("\n");
    sb.append("    engineIdEndsWith: ").append(toIndentedString(engineIdEndsWith)).append("\n");
    sb.append("    engineIdGt: ").append(toIndentedString(engineIdGt)).append("\n");
    sb.append("    engineIdGte: ").append(toIndentedString(engineIdGte)).append("\n");
    sb.append("    engineIdIn: ").append(toIndentedString(engineIdIn)).append("\n");
    sb.append("    engineIdLt: ").append(toIndentedString(engineIdLt)).append("\n");
    sb.append("    engineIdLte: ").append(toIndentedString(engineIdLte)).append("\n");
    sb.append("    engineIdNot: ").append(toIndentedString(engineIdNot)).append("\n");
    sb.append("    engineIdNotContains: ").append(toIndentedString(engineIdNotContains)).append("\n");
    sb.append("    engineIdNotEndsWith: ").append(toIndentedString(engineIdNotEndsWith)).append("\n");
    sb.append("    engineIdNotIn: ").append(toIndentedString(engineIdNotIn)).append("\n");
    sb.append("    engineIdNotStartsWith: ").append(toIndentedString(engineIdNotStartsWith)).append("\n");
    sb.append("    engineIdStartsWith: ").append(toIndentedString(engineIdStartsWith)).append("\n");
    sb.append("    entityAsyncStatus: ").append(toIndentedString(entityAsyncStatus)).append("\n");
    sb.append("    entityAsyncStatusIn: ").append(toIndentedString(entityAsyncStatusIn)).append("\n");
    sb.append("    entityAsyncStatusNot: ").append(toIndentedString(entityAsyncStatusNot)).append("\n");
    sb.append("    entityAsyncStatusNotIn: ").append(toIndentedString(entityAsyncStatusNotIn)).append("\n");
    sb.append("    host: ").append(toIndentedString(host)).append("\n");
    sb.append("    hostContains: ").append(toIndentedString(hostContains)).append("\n");
    sb.append("    hostEndsWith: ").append(toIndentedString(hostEndsWith)).append("\n");
    sb.append("    hostGt: ").append(toIndentedString(hostGt)).append("\n");
    sb.append("    hostGte: ").append(toIndentedString(hostGte)).append("\n");
    sb.append("    hostIn: ").append(toIndentedString(hostIn)).append("\n");
    sb.append("    hostLt: ").append(toIndentedString(hostLt)).append("\n");
    sb.append("    hostLte: ").append(toIndentedString(hostLte)).append("\n");
    sb.append("    hostNot: ").append(toIndentedString(hostNot)).append("\n");
    sb.append("    hostNotContains: ").append(toIndentedString(hostNotContains)).append("\n");
    sb.append("    hostNotEndsWith: ").append(toIndentedString(hostNotEndsWith)).append("\n");
    sb.append("    hostNotIn: ").append(toIndentedString(hostNotIn)).append("\n");
    sb.append("    hostNotStartsWith: ").append(toIndentedString(hostNotStartsWith)).append("\n");
    sb.append("    hostStartsWith: ").append(toIndentedString(hostStartsWith)).append("\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    idContains: ").append(toIndentedString(idContains)).append("\n");
    sb.append("    idEndsWith: ").append(toIndentedString(idEndsWith)).append("\n");
    sb.append("    idGt: ").append(toIndentedString(idGt)).append("\n");
    sb.append("    idGte: ").append(toIndentedString(idGte)).append("\n");
    sb.append("    idIn: ").append(toIndentedString(idIn)).append("\n");
    sb.append("    idLt: ").append(toIndentedString(idLt)).append("\n");
    sb.append("    idLte: ").append(toIndentedString(idLte)).append("\n");
    sb.append("    idNot: ").append(toIndentedString(idNot)).append("\n");
    sb.append("    idNotContains: ").append(toIndentedString(idNotContains)).append("\n");
    sb.append("    idNotEndsWith: ").append(toIndentedString(idNotEndsWith)).append("\n");
    sb.append("    idNotIn: ").append(toIndentedString(idNotIn)).append("\n");
    sb.append("    idNotStartsWith: ").append(toIndentedString(idNotStartsWith)).append("\n");
    sb.append("    idStartsWith: ").append(toIndentedString(idStartsWith)).append("\n");
    sb.append("    inform: ").append(toIndentedString(inform)).append("\n");
    sb.append("    informNot: ").append(toIndentedString(informNot)).append("\n");
    sb.append("    languageCode: ").append(toIndentedString(languageCode)).append("\n");
    sb.append("    languageCodeIn: ").append(toIndentedString(languageCodeIn)).append("\n");
    sb.append("    languageCodeNot: ").append(toIndentedString(languageCodeNot)).append("\n");
    sb.append("    languageCodeNotIn: ").append(toIndentedString(languageCodeNotIn)).append("\n");
    sb.append("    localId: ").append(toIndentedString(localId)).append("\n");
    sb.append("    localIdContains: ").append(toIndentedString(localIdContains)).append("\n");
    sb.append("    localIdEndsWith: ").append(toIndentedString(localIdEndsWith)).append("\n");
    sb.append("    localIdGt: ").append(toIndentedString(localIdGt)).append("\n");
    sb.append("    localIdGte: ").append(toIndentedString(localIdGte)).append("\n");
    sb.append("    localIdIn: ").append(toIndentedString(localIdIn)).append("\n");
    sb.append("    localIdLt: ").append(toIndentedString(localIdLt)).append("\n");
    sb.append("    localIdLte: ").append(toIndentedString(localIdLte)).append("\n");
    sb.append("    localIdNot: ").append(toIndentedString(localIdNot)).append("\n");
    sb.append("    localIdNotContains: ").append(toIndentedString(localIdNotContains)).append("\n");
    sb.append("    localIdNotEndsWith: ").append(toIndentedString(localIdNotEndsWith)).append("\n");
    sb.append("    localIdNotIn: ").append(toIndentedString(localIdNotIn)).append("\n");
    sb.append("    localIdNotStartsWith: ").append(toIndentedString(localIdNotStartsWith)).append("\n");
    sb.append("    localIdStartsWith: ").append(toIndentedString(localIdStartsWith)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    nameContains: ").append(toIndentedString(nameContains)).append("\n");
    sb.append("    nameEndsWith: ").append(toIndentedString(nameEndsWith)).append("\n");
    sb.append("    nameGt: ").append(toIndentedString(nameGt)).append("\n");
    sb.append("    nameGte: ").append(toIndentedString(nameGte)).append("\n");
    sb.append("    nameIn: ").append(toIndentedString(nameIn)).append("\n");
    sb.append("    nameLt: ").append(toIndentedString(nameLt)).append("\n");
    sb.append("    nameLte: ").append(toIndentedString(nameLte)).append("\n");
    sb.append("    nameNot: ").append(toIndentedString(nameNot)).append("\n");
    sb.append("    nameNotContains: ").append(toIndentedString(nameNotContains)).append("\n");
    sb.append("    nameNotEndsWith: ").append(toIndentedString(nameNotEndsWith)).append("\n");
    sb.append("    nameNotIn: ").append(toIndentedString(nameNotIn)).append("\n");
    sb.append("    nameNotStartsWith: ").append(toIndentedString(nameNotStartsWith)).append("\n");
    sb.append("    nameStartsWith: ").append(toIndentedString(nameStartsWith)).append("\n");
    sb.append("    NOT: ").append(toIndentedString(NOT)).append("\n");
    sb.append("    OR: ").append(toIndentedString(OR)).append("\n");
    sb.append("    port: ").append(toIndentedString(port)).append("\n");
    sb.append("    portGt: ").append(toIndentedString(portGt)).append("\n");
    sb.append("    portGte: ").append(toIndentedString(portGte)).append("\n");
    sb.append("    portIn: ").append(toIndentedString(portIn)).append("\n");
    sb.append("    portLt: ").append(toIndentedString(portLt)).append("\n");
    sb.append("    portLte: ").append(toIndentedString(portLte)).append("\n");
    sb.append("    portNot: ").append(toIndentedString(portNot)).append("\n");
    sb.append("    portNotIn: ").append(toIndentedString(portNotIn)).append("\n");
    sb.append("    privacyPassPhrase: ").append(toIndentedString(privacyPassPhrase)).append("\n");
    sb.append("    privacyPassPhraseContains: ").append(toIndentedString(privacyPassPhraseContains)).append("\n");
    sb.append("    privacyPassPhraseEndsWith: ").append(toIndentedString(privacyPassPhraseEndsWith)).append("\n");
    sb.append("    privacyPassPhraseGt: ").append(toIndentedString(privacyPassPhraseGt)).append("\n");
    sb.append("    privacyPassPhraseGte: ").append(toIndentedString(privacyPassPhraseGte)).append("\n");
    sb.append("    privacyPassPhraseIn: ").append(toIndentedString(privacyPassPhraseIn)).append("\n");
    sb.append("    privacyPassPhraseLt: ").append(toIndentedString(privacyPassPhraseLt)).append("\n");
    sb.append("    privacyPassPhraseLte: ").append(toIndentedString(privacyPassPhraseLte)).append("\n");
    sb.append("    privacyPassPhraseNot: ").append(toIndentedString(privacyPassPhraseNot)).append("\n");
    sb.append("    privacyPassPhraseNotContains: ").append(toIndentedString(privacyPassPhraseNotContains)).append("\n");
    sb.append("    privacyPassPhraseNotEndsWith: ").append(toIndentedString(privacyPassPhraseNotEndsWith)).append("\n");
    sb.append("    privacyPassPhraseNotIn: ").append(toIndentedString(privacyPassPhraseNotIn)).append("\n");
    sb.append("    privacyPassPhraseNotStartsWith: ").append(toIndentedString(privacyPassPhraseNotStartsWith)).append("\n");
    sb.append("    privacyPassPhraseStartsWith: ").append(toIndentedString(privacyPassPhraseStartsWith)).append("\n");
    sb.append("    privacyProtocol: ").append(toIndentedString(privacyProtocol)).append("\n");
    sb.append("    privacyProtocolIn: ").append(toIndentedString(privacyProtocolIn)).append("\n");
    sb.append("    privacyProtocolNot: ").append(toIndentedString(privacyProtocolNot)).append("\n");
    sb.append("    privacyProtocolNotIn: ").append(toIndentedString(privacyProtocolNotIn)).append("\n");
    sb.append("    protocol: ").append(toIndentedString(protocol)).append("\n");
    sb.append("    protocolIn: ").append(toIndentedString(protocolIn)).append("\n");
    sb.append("    protocolNot: ").append(toIndentedString(protocolNot)).append("\n");
    sb.append("    protocolNotIn: ").append(toIndentedString(protocolNotIn)).append("\n");
    sb.append("    username: ").append(toIndentedString(username)).append("\n");
    sb.append("    usernameContains: ").append(toIndentedString(usernameContains)).append("\n");
    sb.append("    usernameEndsWith: ").append(toIndentedString(usernameEndsWith)).append("\n");
    sb.append("    usernameGt: ").append(toIndentedString(usernameGt)).append("\n");
    sb.append("    usernameGte: ").append(toIndentedString(usernameGte)).append("\n");
    sb.append("    usernameIn: ").append(toIndentedString(usernameIn)).append("\n");
    sb.append("    usernameLt: ").append(toIndentedString(usernameLt)).append("\n");
    sb.append("    usernameLte: ").append(toIndentedString(usernameLte)).append("\n");
    sb.append("    usernameNot: ").append(toIndentedString(usernameNot)).append("\n");
    sb.append("    usernameNotContains: ").append(toIndentedString(usernameNotContains)).append("\n");
    sb.append("    usernameNotEndsWith: ").append(toIndentedString(usernameNotEndsWith)).append("\n");
    sb.append("    usernameNotIn: ").append(toIndentedString(usernameNotIn)).append("\n");
    sb.append("    usernameNotStartsWith: ").append(toIndentedString(usernameNotStartsWith)).append("\n");
    sb.append("    usernameStartsWith: ").append(toIndentedString(usernameStartsWith)).append("\n");
    sb.append("    version: ").append(toIndentedString(version)).append("\n");
    sb.append("    versionIn: ").append(toIndentedString(versionIn)).append("\n");
    sb.append("    versionNot: ").append(toIndentedString(versionNot)).append("\n");
    sb.append("    versionNotIn: ").append(toIndentedString(versionNotIn)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

