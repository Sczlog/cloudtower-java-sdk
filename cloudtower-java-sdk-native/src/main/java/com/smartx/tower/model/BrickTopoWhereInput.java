/*
 * Tower SDK API
 * cloudtower operation API and SDK
 *
 * The version of the OpenAPI document: 1.7.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.smartx.tower.model;

import java.util.Objects;
import java.util.Arrays;
import java.util.Map;
import java.util.HashMap;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import com.smartx.tower.model.ClusterTopoWhereInput;
import com.smartx.tower.model.ClusterWhereInput;
import com.smartx.tower.model.Direction;
import com.smartx.tower.model.NodeTopoWhereInput;
import com.smartx.tower.model.PowerPosition;
import com.smartx.tower.model.RackTopoWhereInput;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.util.ArrayList;
import java.util.List;
import org.openapitools.jackson.nullable.JsonNullable;
import com.fasterxml.jackson.annotation.JsonIgnore;
import org.openapitools.jackson.nullable.JsonNullable;
import java.util.NoSuchElementException;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;


/**
 * BrickTopoWhereInput
 */
@JsonPropertyOrder({
  BrickTopoWhereInput.JSON_PROPERTY_A_N_D,
  BrickTopoWhereInput.JSON_PROPERTY_CLUSTER,
  BrickTopoWhereInput.JSON_PROPERTY_CLUSTER_TOPO,
  BrickTopoWhereInput.JSON_PROPERTY_HEIGHT,
  BrickTopoWhereInput.JSON_PROPERTY_HEIGHT_GT,
  BrickTopoWhereInput.JSON_PROPERTY_HEIGHT_GTE,
  BrickTopoWhereInput.JSON_PROPERTY_HEIGHT_IN,
  BrickTopoWhereInput.JSON_PROPERTY_HEIGHT_LT,
  BrickTopoWhereInput.JSON_PROPERTY_HEIGHT_LTE,
  BrickTopoWhereInput.JSON_PROPERTY_HEIGHT_NOT,
  BrickTopoWhereInput.JSON_PROPERTY_HEIGHT_NOT_IN,
  BrickTopoWhereInput.JSON_PROPERTY_ID,
  BrickTopoWhereInput.JSON_PROPERTY_ID_CONTAINS,
  BrickTopoWhereInput.JSON_PROPERTY_ID_ENDS_WITH,
  BrickTopoWhereInput.JSON_PROPERTY_ID_GT,
  BrickTopoWhereInput.JSON_PROPERTY_ID_GTE,
  BrickTopoWhereInput.JSON_PROPERTY_ID_IN,
  BrickTopoWhereInput.JSON_PROPERTY_ID_LT,
  BrickTopoWhereInput.JSON_PROPERTY_ID_LTE,
  BrickTopoWhereInput.JSON_PROPERTY_ID_NOT,
  BrickTopoWhereInput.JSON_PROPERTY_ID_NOT_CONTAINS,
  BrickTopoWhereInput.JSON_PROPERTY_ID_NOT_ENDS_WITH,
  BrickTopoWhereInput.JSON_PROPERTY_ID_NOT_IN,
  BrickTopoWhereInput.JSON_PROPERTY_ID_NOT_STARTS_WITH,
  BrickTopoWhereInput.JSON_PROPERTY_ID_STARTS_WITH,
  BrickTopoWhereInput.JSON_PROPERTY_LOCAL_ID,
  BrickTopoWhereInput.JSON_PROPERTY_LOCAL_ID_CONTAINS,
  BrickTopoWhereInput.JSON_PROPERTY_LOCAL_ID_ENDS_WITH,
  BrickTopoWhereInput.JSON_PROPERTY_LOCAL_ID_GT,
  BrickTopoWhereInput.JSON_PROPERTY_LOCAL_ID_GTE,
  BrickTopoWhereInput.JSON_PROPERTY_LOCAL_ID_IN,
  BrickTopoWhereInput.JSON_PROPERTY_LOCAL_ID_LT,
  BrickTopoWhereInput.JSON_PROPERTY_LOCAL_ID_LTE,
  BrickTopoWhereInput.JSON_PROPERTY_LOCAL_ID_NOT,
  BrickTopoWhereInput.JSON_PROPERTY_LOCAL_ID_NOT_CONTAINS,
  BrickTopoWhereInput.JSON_PROPERTY_LOCAL_ID_NOT_ENDS_WITH,
  BrickTopoWhereInput.JSON_PROPERTY_LOCAL_ID_NOT_IN,
  BrickTopoWhereInput.JSON_PROPERTY_LOCAL_ID_NOT_STARTS_WITH,
  BrickTopoWhereInput.JSON_PROPERTY_LOCAL_ID_STARTS_WITH,
  BrickTopoWhereInput.JSON_PROPERTY_MODEL,
  BrickTopoWhereInput.JSON_PROPERTY_MODEL_CONTAINS,
  BrickTopoWhereInput.JSON_PROPERTY_MODEL_ENDS_WITH,
  BrickTopoWhereInput.JSON_PROPERTY_MODEL_GT,
  BrickTopoWhereInput.JSON_PROPERTY_MODEL_GTE,
  BrickTopoWhereInput.JSON_PROPERTY_MODEL_IN,
  BrickTopoWhereInput.JSON_PROPERTY_MODEL_LT,
  BrickTopoWhereInput.JSON_PROPERTY_MODEL_LTE,
  BrickTopoWhereInput.JSON_PROPERTY_MODEL_NOT,
  BrickTopoWhereInput.JSON_PROPERTY_MODEL_NOT_CONTAINS,
  BrickTopoWhereInput.JSON_PROPERTY_MODEL_NOT_ENDS_WITH,
  BrickTopoWhereInput.JSON_PROPERTY_MODEL_NOT_IN,
  BrickTopoWhereInput.JSON_PROPERTY_MODEL_NOT_STARTS_WITH,
  BrickTopoWhereInput.JSON_PROPERTY_MODEL_STARTS_WITH,
  BrickTopoWhereInput.JSON_PROPERTY_NAME,
  BrickTopoWhereInput.JSON_PROPERTY_NAME_CONTAINS,
  BrickTopoWhereInput.JSON_PROPERTY_NAME_ENDS_WITH,
  BrickTopoWhereInput.JSON_PROPERTY_NAME_GT,
  BrickTopoWhereInput.JSON_PROPERTY_NAME_GTE,
  BrickTopoWhereInput.JSON_PROPERTY_NAME_IN,
  BrickTopoWhereInput.JSON_PROPERTY_NAME_LT,
  BrickTopoWhereInput.JSON_PROPERTY_NAME_LTE,
  BrickTopoWhereInput.JSON_PROPERTY_NAME_NOT,
  BrickTopoWhereInput.JSON_PROPERTY_NAME_NOT_CONTAINS,
  BrickTopoWhereInput.JSON_PROPERTY_NAME_NOT_ENDS_WITH,
  BrickTopoWhereInput.JSON_PROPERTY_NAME_NOT_IN,
  BrickTopoWhereInput.JSON_PROPERTY_NAME_NOT_STARTS_WITH,
  BrickTopoWhereInput.JSON_PROPERTY_NAME_STARTS_WITH,
  BrickTopoWhereInput.JSON_PROPERTY_NODE_TOPOES_EVERY,
  BrickTopoWhereInput.JSON_PROPERTY_NODE_TOPOES_NONE,
  BrickTopoWhereInput.JSON_PROPERTY_NODE_TOPOES_SOME,
  BrickTopoWhereInput.JSON_PROPERTY_N_O_T,
  BrickTopoWhereInput.JSON_PROPERTY_O_R,
  BrickTopoWhereInput.JSON_PROPERTY_POSITION,
  BrickTopoWhereInput.JSON_PROPERTY_POSITION_GT,
  BrickTopoWhereInput.JSON_PROPERTY_POSITION_GTE,
  BrickTopoWhereInput.JSON_PROPERTY_POSITION_IN,
  BrickTopoWhereInput.JSON_PROPERTY_POSITION_LT,
  BrickTopoWhereInput.JSON_PROPERTY_POSITION_LTE,
  BrickTopoWhereInput.JSON_PROPERTY_POSITION_NOT,
  BrickTopoWhereInput.JSON_PROPERTY_POSITION_NOT_IN,
  BrickTopoWhereInput.JSON_PROPERTY_POWER_LAYOUT,
  BrickTopoWhereInput.JSON_PROPERTY_POWER_LAYOUT_IN,
  BrickTopoWhereInput.JSON_PROPERTY_POWER_LAYOUT_NOT,
  BrickTopoWhereInput.JSON_PROPERTY_POWER_LAYOUT_NOT_IN,
  BrickTopoWhereInput.JSON_PROPERTY_POWER_POSITION,
  BrickTopoWhereInput.JSON_PROPERTY_POWER_POSITION_IN,
  BrickTopoWhereInput.JSON_PROPERTY_POWER_POSITION_NOT,
  BrickTopoWhereInput.JSON_PROPERTY_POWER_POSITION_NOT_IN,
  BrickTopoWhereInput.JSON_PROPERTY_RACK_TOPO
})
@javax.annotation.processing.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2021-10-27T15:59:14.939791800+08:00[Asia/Shanghai]")
public class BrickTopoWhereInput {
  public static final String JSON_PROPERTY_A_N_D = "AND";
  private JsonNullable<List<BrickTopoWhereInput>> AND = JsonNullable.<List<BrickTopoWhereInput>>undefined();

  public static final String JSON_PROPERTY_CLUSTER = "cluster";
  private JsonNullable<ClusterWhereInput> cluster = JsonNullable.<ClusterWhereInput>undefined();

  public static final String JSON_PROPERTY_CLUSTER_TOPO = "cluster_topo";
  private JsonNullable<ClusterTopoWhereInput> clusterTopo = JsonNullable.<ClusterTopoWhereInput>undefined();

  public static final String JSON_PROPERTY_HEIGHT = "height";
  private JsonNullable<Double> height = JsonNullable.<Double>undefined();

  public static final String JSON_PROPERTY_HEIGHT_GT = "height_gt";
  private JsonNullable<Double> heightGt = JsonNullable.<Double>undefined();

  public static final String JSON_PROPERTY_HEIGHT_GTE = "height_gte";
  private JsonNullable<Double> heightGte = JsonNullable.<Double>undefined();

  public static final String JSON_PROPERTY_HEIGHT_IN = "height_in";
  private JsonNullable<List<Double>> heightIn = JsonNullable.<List<Double>>undefined();

  public static final String JSON_PROPERTY_HEIGHT_LT = "height_lt";
  private JsonNullable<Double> heightLt = JsonNullable.<Double>undefined();

  public static final String JSON_PROPERTY_HEIGHT_LTE = "height_lte";
  private JsonNullable<Double> heightLte = JsonNullable.<Double>undefined();

  public static final String JSON_PROPERTY_HEIGHT_NOT = "height_not";
  private JsonNullable<Double> heightNot = JsonNullable.<Double>undefined();

  public static final String JSON_PROPERTY_HEIGHT_NOT_IN = "height_not_in";
  private JsonNullable<List<Double>> heightNotIn = JsonNullable.<List<Double>>undefined();

  public static final String JSON_PROPERTY_ID = "id";
  private JsonNullable<String> id = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_ID_CONTAINS = "id_contains";
  private JsonNullable<String> idContains = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_ID_ENDS_WITH = "id_ends_with";
  private JsonNullable<String> idEndsWith = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_ID_GT = "id_gt";
  private JsonNullable<String> idGt = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_ID_GTE = "id_gte";
  private JsonNullable<String> idGte = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_ID_IN = "id_in";
  private JsonNullable<List<String>> idIn = JsonNullable.<List<String>>undefined();

  public static final String JSON_PROPERTY_ID_LT = "id_lt";
  private JsonNullable<String> idLt = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_ID_LTE = "id_lte";
  private JsonNullable<String> idLte = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_ID_NOT = "id_not";
  private JsonNullable<String> idNot = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_ID_NOT_CONTAINS = "id_not_contains";
  private JsonNullable<String> idNotContains = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_ID_NOT_ENDS_WITH = "id_not_ends_with";
  private JsonNullable<String> idNotEndsWith = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_ID_NOT_IN = "id_not_in";
  private JsonNullable<List<String>> idNotIn = JsonNullable.<List<String>>undefined();

  public static final String JSON_PROPERTY_ID_NOT_STARTS_WITH = "id_not_starts_with";
  private JsonNullable<String> idNotStartsWith = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_ID_STARTS_WITH = "id_starts_with";
  private JsonNullable<String> idStartsWith = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_LOCAL_ID = "local_id";
  private JsonNullable<String> localId = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_LOCAL_ID_CONTAINS = "local_id_contains";
  private JsonNullable<String> localIdContains = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_LOCAL_ID_ENDS_WITH = "local_id_ends_with";
  private JsonNullable<String> localIdEndsWith = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_LOCAL_ID_GT = "local_id_gt";
  private JsonNullable<String> localIdGt = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_LOCAL_ID_GTE = "local_id_gte";
  private JsonNullable<String> localIdGte = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_LOCAL_ID_IN = "local_id_in";
  private JsonNullable<List<String>> localIdIn = JsonNullable.<List<String>>undefined();

  public static final String JSON_PROPERTY_LOCAL_ID_LT = "local_id_lt";
  private JsonNullable<String> localIdLt = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_LOCAL_ID_LTE = "local_id_lte";
  private JsonNullable<String> localIdLte = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_LOCAL_ID_NOT = "local_id_not";
  private JsonNullable<String> localIdNot = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_LOCAL_ID_NOT_CONTAINS = "local_id_not_contains";
  private JsonNullable<String> localIdNotContains = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_LOCAL_ID_NOT_ENDS_WITH = "local_id_not_ends_with";
  private JsonNullable<String> localIdNotEndsWith = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_LOCAL_ID_NOT_IN = "local_id_not_in";
  private JsonNullable<List<String>> localIdNotIn = JsonNullable.<List<String>>undefined();

  public static final String JSON_PROPERTY_LOCAL_ID_NOT_STARTS_WITH = "local_id_not_starts_with";
  private JsonNullable<String> localIdNotStartsWith = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_LOCAL_ID_STARTS_WITH = "local_id_starts_with";
  private JsonNullable<String> localIdStartsWith = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_MODEL = "model";
  private JsonNullable<String> model = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_MODEL_CONTAINS = "model_contains";
  private JsonNullable<String> modelContains = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_MODEL_ENDS_WITH = "model_ends_with";
  private JsonNullable<String> modelEndsWith = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_MODEL_GT = "model_gt";
  private JsonNullable<String> modelGt = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_MODEL_GTE = "model_gte";
  private JsonNullable<String> modelGte = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_MODEL_IN = "model_in";
  private JsonNullable<List<String>> modelIn = JsonNullable.<List<String>>undefined();

  public static final String JSON_PROPERTY_MODEL_LT = "model_lt";
  private JsonNullable<String> modelLt = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_MODEL_LTE = "model_lte";
  private JsonNullable<String> modelLte = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_MODEL_NOT = "model_not";
  private JsonNullable<String> modelNot = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_MODEL_NOT_CONTAINS = "model_not_contains";
  private JsonNullable<String> modelNotContains = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_MODEL_NOT_ENDS_WITH = "model_not_ends_with";
  private JsonNullable<String> modelNotEndsWith = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_MODEL_NOT_IN = "model_not_in";
  private JsonNullable<List<String>> modelNotIn = JsonNullable.<List<String>>undefined();

  public static final String JSON_PROPERTY_MODEL_NOT_STARTS_WITH = "model_not_starts_with";
  private JsonNullable<String> modelNotStartsWith = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_MODEL_STARTS_WITH = "model_starts_with";
  private JsonNullable<String> modelStartsWith = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_NAME = "name";
  private JsonNullable<String> name = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_NAME_CONTAINS = "name_contains";
  private JsonNullable<String> nameContains = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_NAME_ENDS_WITH = "name_ends_with";
  private JsonNullable<String> nameEndsWith = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_NAME_GT = "name_gt";
  private JsonNullable<String> nameGt = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_NAME_GTE = "name_gte";
  private JsonNullable<String> nameGte = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_NAME_IN = "name_in";
  private JsonNullable<List<String>> nameIn = JsonNullable.<List<String>>undefined();

  public static final String JSON_PROPERTY_NAME_LT = "name_lt";
  private JsonNullable<String> nameLt = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_NAME_LTE = "name_lte";
  private JsonNullable<String> nameLte = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_NAME_NOT = "name_not";
  private JsonNullable<String> nameNot = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_NAME_NOT_CONTAINS = "name_not_contains";
  private JsonNullable<String> nameNotContains = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_NAME_NOT_ENDS_WITH = "name_not_ends_with";
  private JsonNullable<String> nameNotEndsWith = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_NAME_NOT_IN = "name_not_in";
  private JsonNullable<List<String>> nameNotIn = JsonNullable.<List<String>>undefined();

  public static final String JSON_PROPERTY_NAME_NOT_STARTS_WITH = "name_not_starts_with";
  private JsonNullable<String> nameNotStartsWith = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_NAME_STARTS_WITH = "name_starts_with";
  private JsonNullable<String> nameStartsWith = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_NODE_TOPOES_EVERY = "node_topoes_every";
  private JsonNullable<NodeTopoWhereInput> nodeTopoesEvery = JsonNullable.<NodeTopoWhereInput>undefined();

  public static final String JSON_PROPERTY_NODE_TOPOES_NONE = "node_topoes_none";
  private JsonNullable<NodeTopoWhereInput> nodeTopoesNone = JsonNullable.<NodeTopoWhereInput>undefined();

  public static final String JSON_PROPERTY_NODE_TOPOES_SOME = "node_topoes_some";
  private JsonNullable<NodeTopoWhereInput> nodeTopoesSome = JsonNullable.<NodeTopoWhereInput>undefined();

  public static final String JSON_PROPERTY_N_O_T = "NOT";
  private JsonNullable<List<BrickTopoWhereInput>> NOT = JsonNullable.<List<BrickTopoWhereInput>>undefined();

  public static final String JSON_PROPERTY_O_R = "OR";
  private JsonNullable<List<BrickTopoWhereInput>> OR = JsonNullable.<List<BrickTopoWhereInput>>undefined();

  public static final String JSON_PROPERTY_POSITION = "position";
  private JsonNullable<Double> position = JsonNullable.<Double>undefined();

  public static final String JSON_PROPERTY_POSITION_GT = "position_gt";
  private JsonNullable<Double> positionGt = JsonNullable.<Double>undefined();

  public static final String JSON_PROPERTY_POSITION_GTE = "position_gte";
  private JsonNullable<Double> positionGte = JsonNullable.<Double>undefined();

  public static final String JSON_PROPERTY_POSITION_IN = "position_in";
  private JsonNullable<List<Double>> positionIn = JsonNullable.<List<Double>>undefined();

  public static final String JSON_PROPERTY_POSITION_LT = "position_lt";
  private JsonNullable<Double> positionLt = JsonNullable.<Double>undefined();

  public static final String JSON_PROPERTY_POSITION_LTE = "position_lte";
  private JsonNullable<Double> positionLte = JsonNullable.<Double>undefined();

  public static final String JSON_PROPERTY_POSITION_NOT = "position_not";
  private JsonNullable<Double> positionNot = JsonNullable.<Double>undefined();

  public static final String JSON_PROPERTY_POSITION_NOT_IN = "position_not_in";
  private JsonNullable<List<Double>> positionNotIn = JsonNullable.<List<Double>>undefined();

  public static final String JSON_PROPERTY_POWER_LAYOUT = "power_layout";
  private JsonNullable<Direction> powerLayout = JsonNullable.<Direction>undefined();

  public static final String JSON_PROPERTY_POWER_LAYOUT_IN = "power_layout_in";
  private JsonNullable<List<Direction>> powerLayoutIn = JsonNullable.<List<Direction>>undefined();

  public static final String JSON_PROPERTY_POWER_LAYOUT_NOT = "power_layout_not";
  private JsonNullable<Direction> powerLayoutNot = JsonNullable.<Direction>undefined();

  public static final String JSON_PROPERTY_POWER_LAYOUT_NOT_IN = "power_layout_not_in";
  private JsonNullable<List<Direction>> powerLayoutNotIn = JsonNullable.<List<Direction>>undefined();

  public static final String JSON_PROPERTY_POWER_POSITION = "power_position";
  private JsonNullable<PowerPosition> powerPosition = JsonNullable.<PowerPosition>undefined();

  public static final String JSON_PROPERTY_POWER_POSITION_IN = "power_position_in";
  private JsonNullable<List<PowerPosition>> powerPositionIn = JsonNullable.<List<PowerPosition>>undefined();

  public static final String JSON_PROPERTY_POWER_POSITION_NOT = "power_position_not";
  private JsonNullable<PowerPosition> powerPositionNot = JsonNullable.<PowerPosition>undefined();

  public static final String JSON_PROPERTY_POWER_POSITION_NOT_IN = "power_position_not_in";
  private JsonNullable<List<PowerPosition>> powerPositionNotIn = JsonNullable.<List<PowerPosition>>undefined();

  public static final String JSON_PROPERTY_RACK_TOPO = "rack_topo";
  private JsonNullable<RackTopoWhereInput> rackTopo = JsonNullable.<RackTopoWhereInput>undefined();


  public BrickTopoWhereInput AND(List<BrickTopoWhereInput> AND) {
    this.AND = JsonNullable.<List<BrickTopoWhereInput>>of(AND);
    return this;
  }

  public BrickTopoWhereInput addANDItem(BrickTopoWhereInput ANDItem) {
    if (this.AND == null || !this.AND.isPresent()) {
      this.AND = JsonNullable.<List<BrickTopoWhereInput>>of(new ArrayList<>());
    }
    try {
      this.AND.get().add(ANDItem);
    } catch (java.util.NoSuchElementException e) {
      // this can never happen, as we make sure above that the value is present
    }
    return this;
  }

   /**
   * Get AND
   * @return AND
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public List<BrickTopoWhereInput> getAND() {
        return AND.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_A_N_D)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<List<BrickTopoWhereInput>> getAND_JsonNullable() {
    return AND;
  }
  
  @JsonProperty(JSON_PROPERTY_A_N_D)
  public void setAND_JsonNullable(JsonNullable<List<BrickTopoWhereInput>> AND) {
    this.AND = AND;
  }

  public void setAND(List<BrickTopoWhereInput> AND) {
    this.AND = JsonNullable.<List<BrickTopoWhereInput>>of(AND);
  }


  public BrickTopoWhereInput cluster(ClusterWhereInput cluster) {
    this.cluster = JsonNullable.<ClusterWhereInput>of(cluster);
    return this;
  }

   /**
   * Get cluster
   * @return cluster
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public ClusterWhereInput getCluster() {
        return cluster.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_CLUSTER)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<ClusterWhereInput> getCluster_JsonNullable() {
    return cluster;
  }
  
  @JsonProperty(JSON_PROPERTY_CLUSTER)
  public void setCluster_JsonNullable(JsonNullable<ClusterWhereInput> cluster) {
    this.cluster = cluster;
  }

  public void setCluster(ClusterWhereInput cluster) {
    this.cluster = JsonNullable.<ClusterWhereInput>of(cluster);
  }


  public BrickTopoWhereInput clusterTopo(ClusterTopoWhereInput clusterTopo) {
    this.clusterTopo = JsonNullable.<ClusterTopoWhereInput>of(clusterTopo);
    return this;
  }

   /**
   * Get clusterTopo
   * @return clusterTopo
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public ClusterTopoWhereInput getClusterTopo() {
        return clusterTopo.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_CLUSTER_TOPO)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<ClusterTopoWhereInput> getClusterTopo_JsonNullable() {
    return clusterTopo;
  }
  
  @JsonProperty(JSON_PROPERTY_CLUSTER_TOPO)
  public void setClusterTopo_JsonNullable(JsonNullable<ClusterTopoWhereInput> clusterTopo) {
    this.clusterTopo = clusterTopo;
  }

  public void setClusterTopo(ClusterTopoWhereInput clusterTopo) {
    this.clusterTopo = JsonNullable.<ClusterTopoWhereInput>of(clusterTopo);
  }


  public BrickTopoWhereInput height(Double height) {
    this.height = JsonNullable.<Double>of(height);
    return this;
  }

   /**
   * Get height
   * @return height
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public Double getHeight() {
        return height.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_HEIGHT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<Double> getHeight_JsonNullable() {
    return height;
  }
  
  @JsonProperty(JSON_PROPERTY_HEIGHT)
  public void setHeight_JsonNullable(JsonNullable<Double> height) {
    this.height = height;
  }

  public void setHeight(Double height) {
    this.height = JsonNullable.<Double>of(height);
  }


  public BrickTopoWhereInput heightGt(Double heightGt) {
    this.heightGt = JsonNullable.<Double>of(heightGt);
    return this;
  }

   /**
   * Get heightGt
   * @return heightGt
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public Double getHeightGt() {
        return heightGt.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_HEIGHT_GT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<Double> getHeightGt_JsonNullable() {
    return heightGt;
  }
  
  @JsonProperty(JSON_PROPERTY_HEIGHT_GT)
  public void setHeightGt_JsonNullable(JsonNullable<Double> heightGt) {
    this.heightGt = heightGt;
  }

  public void setHeightGt(Double heightGt) {
    this.heightGt = JsonNullable.<Double>of(heightGt);
  }


  public BrickTopoWhereInput heightGte(Double heightGte) {
    this.heightGte = JsonNullable.<Double>of(heightGte);
    return this;
  }

   /**
   * Get heightGte
   * @return heightGte
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public Double getHeightGte() {
        return heightGte.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_HEIGHT_GTE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<Double> getHeightGte_JsonNullable() {
    return heightGte;
  }
  
  @JsonProperty(JSON_PROPERTY_HEIGHT_GTE)
  public void setHeightGte_JsonNullable(JsonNullable<Double> heightGte) {
    this.heightGte = heightGte;
  }

  public void setHeightGte(Double heightGte) {
    this.heightGte = JsonNullable.<Double>of(heightGte);
  }


  public BrickTopoWhereInput heightIn(List<Double> heightIn) {
    this.heightIn = JsonNullable.<List<Double>>of(heightIn);
    return this;
  }

  public BrickTopoWhereInput addHeightInItem(Double heightInItem) {
    if (this.heightIn == null || !this.heightIn.isPresent()) {
      this.heightIn = JsonNullable.<List<Double>>of(new ArrayList<>());
    }
    try {
      this.heightIn.get().add(heightInItem);
    } catch (java.util.NoSuchElementException e) {
      // this can never happen, as we make sure above that the value is present
    }
    return this;
  }

   /**
   * Get heightIn
   * @return heightIn
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public List<Double> getHeightIn() {
        return heightIn.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_HEIGHT_IN)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<List<Double>> getHeightIn_JsonNullable() {
    return heightIn;
  }
  
  @JsonProperty(JSON_PROPERTY_HEIGHT_IN)
  public void setHeightIn_JsonNullable(JsonNullable<List<Double>> heightIn) {
    this.heightIn = heightIn;
  }

  public void setHeightIn(List<Double> heightIn) {
    this.heightIn = JsonNullable.<List<Double>>of(heightIn);
  }


  public BrickTopoWhereInput heightLt(Double heightLt) {
    this.heightLt = JsonNullable.<Double>of(heightLt);
    return this;
  }

   /**
   * Get heightLt
   * @return heightLt
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public Double getHeightLt() {
        return heightLt.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_HEIGHT_LT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<Double> getHeightLt_JsonNullable() {
    return heightLt;
  }
  
  @JsonProperty(JSON_PROPERTY_HEIGHT_LT)
  public void setHeightLt_JsonNullable(JsonNullable<Double> heightLt) {
    this.heightLt = heightLt;
  }

  public void setHeightLt(Double heightLt) {
    this.heightLt = JsonNullable.<Double>of(heightLt);
  }


  public BrickTopoWhereInput heightLte(Double heightLte) {
    this.heightLte = JsonNullable.<Double>of(heightLte);
    return this;
  }

   /**
   * Get heightLte
   * @return heightLte
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public Double getHeightLte() {
        return heightLte.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_HEIGHT_LTE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<Double> getHeightLte_JsonNullable() {
    return heightLte;
  }
  
  @JsonProperty(JSON_PROPERTY_HEIGHT_LTE)
  public void setHeightLte_JsonNullable(JsonNullable<Double> heightLte) {
    this.heightLte = heightLte;
  }

  public void setHeightLte(Double heightLte) {
    this.heightLte = JsonNullable.<Double>of(heightLte);
  }


  public BrickTopoWhereInput heightNot(Double heightNot) {
    this.heightNot = JsonNullable.<Double>of(heightNot);
    return this;
  }

   /**
   * Get heightNot
   * @return heightNot
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public Double getHeightNot() {
        return heightNot.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_HEIGHT_NOT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<Double> getHeightNot_JsonNullable() {
    return heightNot;
  }
  
  @JsonProperty(JSON_PROPERTY_HEIGHT_NOT)
  public void setHeightNot_JsonNullable(JsonNullable<Double> heightNot) {
    this.heightNot = heightNot;
  }

  public void setHeightNot(Double heightNot) {
    this.heightNot = JsonNullable.<Double>of(heightNot);
  }


  public BrickTopoWhereInput heightNotIn(List<Double> heightNotIn) {
    this.heightNotIn = JsonNullable.<List<Double>>of(heightNotIn);
    return this;
  }

  public BrickTopoWhereInput addHeightNotInItem(Double heightNotInItem) {
    if (this.heightNotIn == null || !this.heightNotIn.isPresent()) {
      this.heightNotIn = JsonNullable.<List<Double>>of(new ArrayList<>());
    }
    try {
      this.heightNotIn.get().add(heightNotInItem);
    } catch (java.util.NoSuchElementException e) {
      // this can never happen, as we make sure above that the value is present
    }
    return this;
  }

   /**
   * Get heightNotIn
   * @return heightNotIn
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public List<Double> getHeightNotIn() {
        return heightNotIn.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_HEIGHT_NOT_IN)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<List<Double>> getHeightNotIn_JsonNullable() {
    return heightNotIn;
  }
  
  @JsonProperty(JSON_PROPERTY_HEIGHT_NOT_IN)
  public void setHeightNotIn_JsonNullable(JsonNullable<List<Double>> heightNotIn) {
    this.heightNotIn = heightNotIn;
  }

  public void setHeightNotIn(List<Double> heightNotIn) {
    this.heightNotIn = JsonNullable.<List<Double>>of(heightNotIn);
  }


  public BrickTopoWhereInput id(String id) {
    this.id = JsonNullable.<String>of(id);
    return this;
  }

   /**
   * Get id
   * @return id
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getId() {
        return id.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getId_JsonNullable() {
    return id;
  }
  
  @JsonProperty(JSON_PROPERTY_ID)
  public void setId_JsonNullable(JsonNullable<String> id) {
    this.id = id;
  }

  public void setId(String id) {
    this.id = JsonNullable.<String>of(id);
  }


  public BrickTopoWhereInput idContains(String idContains) {
    this.idContains = JsonNullable.<String>of(idContains);
    return this;
  }

   /**
   * Get idContains
   * @return idContains
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getIdContains() {
        return idContains.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_ID_CONTAINS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getIdContains_JsonNullable() {
    return idContains;
  }
  
  @JsonProperty(JSON_PROPERTY_ID_CONTAINS)
  public void setIdContains_JsonNullable(JsonNullable<String> idContains) {
    this.idContains = idContains;
  }

  public void setIdContains(String idContains) {
    this.idContains = JsonNullable.<String>of(idContains);
  }


  public BrickTopoWhereInput idEndsWith(String idEndsWith) {
    this.idEndsWith = JsonNullable.<String>of(idEndsWith);
    return this;
  }

   /**
   * Get idEndsWith
   * @return idEndsWith
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getIdEndsWith() {
        return idEndsWith.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_ID_ENDS_WITH)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getIdEndsWith_JsonNullable() {
    return idEndsWith;
  }
  
  @JsonProperty(JSON_PROPERTY_ID_ENDS_WITH)
  public void setIdEndsWith_JsonNullable(JsonNullable<String> idEndsWith) {
    this.idEndsWith = idEndsWith;
  }

  public void setIdEndsWith(String idEndsWith) {
    this.idEndsWith = JsonNullable.<String>of(idEndsWith);
  }


  public BrickTopoWhereInput idGt(String idGt) {
    this.idGt = JsonNullable.<String>of(idGt);
    return this;
  }

   /**
   * Get idGt
   * @return idGt
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getIdGt() {
        return idGt.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_ID_GT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getIdGt_JsonNullable() {
    return idGt;
  }
  
  @JsonProperty(JSON_PROPERTY_ID_GT)
  public void setIdGt_JsonNullable(JsonNullable<String> idGt) {
    this.idGt = idGt;
  }

  public void setIdGt(String idGt) {
    this.idGt = JsonNullable.<String>of(idGt);
  }


  public BrickTopoWhereInput idGte(String idGte) {
    this.idGte = JsonNullable.<String>of(idGte);
    return this;
  }

   /**
   * Get idGte
   * @return idGte
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getIdGte() {
        return idGte.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_ID_GTE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getIdGte_JsonNullable() {
    return idGte;
  }
  
  @JsonProperty(JSON_PROPERTY_ID_GTE)
  public void setIdGte_JsonNullable(JsonNullable<String> idGte) {
    this.idGte = idGte;
  }

  public void setIdGte(String idGte) {
    this.idGte = JsonNullable.<String>of(idGte);
  }


  public BrickTopoWhereInput idIn(List<String> idIn) {
    this.idIn = JsonNullable.<List<String>>of(idIn);
    return this;
  }

  public BrickTopoWhereInput addIdInItem(String idInItem) {
    if (this.idIn == null || !this.idIn.isPresent()) {
      this.idIn = JsonNullable.<List<String>>of(new ArrayList<>());
    }
    try {
      this.idIn.get().add(idInItem);
    } catch (java.util.NoSuchElementException e) {
      // this can never happen, as we make sure above that the value is present
    }
    return this;
  }

   /**
   * Get idIn
   * @return idIn
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public List<String> getIdIn() {
        return idIn.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_ID_IN)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<List<String>> getIdIn_JsonNullable() {
    return idIn;
  }
  
  @JsonProperty(JSON_PROPERTY_ID_IN)
  public void setIdIn_JsonNullable(JsonNullable<List<String>> idIn) {
    this.idIn = idIn;
  }

  public void setIdIn(List<String> idIn) {
    this.idIn = JsonNullable.<List<String>>of(idIn);
  }


  public BrickTopoWhereInput idLt(String idLt) {
    this.idLt = JsonNullable.<String>of(idLt);
    return this;
  }

   /**
   * Get idLt
   * @return idLt
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getIdLt() {
        return idLt.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_ID_LT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getIdLt_JsonNullable() {
    return idLt;
  }
  
  @JsonProperty(JSON_PROPERTY_ID_LT)
  public void setIdLt_JsonNullable(JsonNullable<String> idLt) {
    this.idLt = idLt;
  }

  public void setIdLt(String idLt) {
    this.idLt = JsonNullable.<String>of(idLt);
  }


  public BrickTopoWhereInput idLte(String idLte) {
    this.idLte = JsonNullable.<String>of(idLte);
    return this;
  }

   /**
   * Get idLte
   * @return idLte
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getIdLte() {
        return idLte.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_ID_LTE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getIdLte_JsonNullable() {
    return idLte;
  }
  
  @JsonProperty(JSON_PROPERTY_ID_LTE)
  public void setIdLte_JsonNullable(JsonNullable<String> idLte) {
    this.idLte = idLte;
  }

  public void setIdLte(String idLte) {
    this.idLte = JsonNullable.<String>of(idLte);
  }


  public BrickTopoWhereInput idNot(String idNot) {
    this.idNot = JsonNullable.<String>of(idNot);
    return this;
  }

   /**
   * Get idNot
   * @return idNot
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getIdNot() {
        return idNot.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_ID_NOT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getIdNot_JsonNullable() {
    return idNot;
  }
  
  @JsonProperty(JSON_PROPERTY_ID_NOT)
  public void setIdNot_JsonNullable(JsonNullable<String> idNot) {
    this.idNot = idNot;
  }

  public void setIdNot(String idNot) {
    this.idNot = JsonNullable.<String>of(idNot);
  }


  public BrickTopoWhereInput idNotContains(String idNotContains) {
    this.idNotContains = JsonNullable.<String>of(idNotContains);
    return this;
  }

   /**
   * Get idNotContains
   * @return idNotContains
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getIdNotContains() {
        return idNotContains.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_ID_NOT_CONTAINS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getIdNotContains_JsonNullable() {
    return idNotContains;
  }
  
  @JsonProperty(JSON_PROPERTY_ID_NOT_CONTAINS)
  public void setIdNotContains_JsonNullable(JsonNullable<String> idNotContains) {
    this.idNotContains = idNotContains;
  }

  public void setIdNotContains(String idNotContains) {
    this.idNotContains = JsonNullable.<String>of(idNotContains);
  }


  public BrickTopoWhereInput idNotEndsWith(String idNotEndsWith) {
    this.idNotEndsWith = JsonNullable.<String>of(idNotEndsWith);
    return this;
  }

   /**
   * Get idNotEndsWith
   * @return idNotEndsWith
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getIdNotEndsWith() {
        return idNotEndsWith.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_ID_NOT_ENDS_WITH)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getIdNotEndsWith_JsonNullable() {
    return idNotEndsWith;
  }
  
  @JsonProperty(JSON_PROPERTY_ID_NOT_ENDS_WITH)
  public void setIdNotEndsWith_JsonNullable(JsonNullable<String> idNotEndsWith) {
    this.idNotEndsWith = idNotEndsWith;
  }

  public void setIdNotEndsWith(String idNotEndsWith) {
    this.idNotEndsWith = JsonNullable.<String>of(idNotEndsWith);
  }


  public BrickTopoWhereInput idNotIn(List<String> idNotIn) {
    this.idNotIn = JsonNullable.<List<String>>of(idNotIn);
    return this;
  }

  public BrickTopoWhereInput addIdNotInItem(String idNotInItem) {
    if (this.idNotIn == null || !this.idNotIn.isPresent()) {
      this.idNotIn = JsonNullable.<List<String>>of(new ArrayList<>());
    }
    try {
      this.idNotIn.get().add(idNotInItem);
    } catch (java.util.NoSuchElementException e) {
      // this can never happen, as we make sure above that the value is present
    }
    return this;
  }

   /**
   * Get idNotIn
   * @return idNotIn
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public List<String> getIdNotIn() {
        return idNotIn.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_ID_NOT_IN)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<List<String>> getIdNotIn_JsonNullable() {
    return idNotIn;
  }
  
  @JsonProperty(JSON_PROPERTY_ID_NOT_IN)
  public void setIdNotIn_JsonNullable(JsonNullable<List<String>> idNotIn) {
    this.idNotIn = idNotIn;
  }

  public void setIdNotIn(List<String> idNotIn) {
    this.idNotIn = JsonNullable.<List<String>>of(idNotIn);
  }


  public BrickTopoWhereInput idNotStartsWith(String idNotStartsWith) {
    this.idNotStartsWith = JsonNullable.<String>of(idNotStartsWith);
    return this;
  }

   /**
   * Get idNotStartsWith
   * @return idNotStartsWith
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getIdNotStartsWith() {
        return idNotStartsWith.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_ID_NOT_STARTS_WITH)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getIdNotStartsWith_JsonNullable() {
    return idNotStartsWith;
  }
  
  @JsonProperty(JSON_PROPERTY_ID_NOT_STARTS_WITH)
  public void setIdNotStartsWith_JsonNullable(JsonNullable<String> idNotStartsWith) {
    this.idNotStartsWith = idNotStartsWith;
  }

  public void setIdNotStartsWith(String idNotStartsWith) {
    this.idNotStartsWith = JsonNullable.<String>of(idNotStartsWith);
  }


  public BrickTopoWhereInput idStartsWith(String idStartsWith) {
    this.idStartsWith = JsonNullable.<String>of(idStartsWith);
    return this;
  }

   /**
   * Get idStartsWith
   * @return idStartsWith
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getIdStartsWith() {
        return idStartsWith.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_ID_STARTS_WITH)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getIdStartsWith_JsonNullable() {
    return idStartsWith;
  }
  
  @JsonProperty(JSON_PROPERTY_ID_STARTS_WITH)
  public void setIdStartsWith_JsonNullable(JsonNullable<String> idStartsWith) {
    this.idStartsWith = idStartsWith;
  }

  public void setIdStartsWith(String idStartsWith) {
    this.idStartsWith = JsonNullable.<String>of(idStartsWith);
  }


  public BrickTopoWhereInput localId(String localId) {
    this.localId = JsonNullable.<String>of(localId);
    return this;
  }

   /**
   * Get localId
   * @return localId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getLocalId() {
        return localId.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_LOCAL_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getLocalId_JsonNullable() {
    return localId;
  }
  
  @JsonProperty(JSON_PROPERTY_LOCAL_ID)
  public void setLocalId_JsonNullable(JsonNullable<String> localId) {
    this.localId = localId;
  }

  public void setLocalId(String localId) {
    this.localId = JsonNullable.<String>of(localId);
  }


  public BrickTopoWhereInput localIdContains(String localIdContains) {
    this.localIdContains = JsonNullable.<String>of(localIdContains);
    return this;
  }

   /**
   * Get localIdContains
   * @return localIdContains
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getLocalIdContains() {
        return localIdContains.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_LOCAL_ID_CONTAINS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getLocalIdContains_JsonNullable() {
    return localIdContains;
  }
  
  @JsonProperty(JSON_PROPERTY_LOCAL_ID_CONTAINS)
  public void setLocalIdContains_JsonNullable(JsonNullable<String> localIdContains) {
    this.localIdContains = localIdContains;
  }

  public void setLocalIdContains(String localIdContains) {
    this.localIdContains = JsonNullable.<String>of(localIdContains);
  }


  public BrickTopoWhereInput localIdEndsWith(String localIdEndsWith) {
    this.localIdEndsWith = JsonNullable.<String>of(localIdEndsWith);
    return this;
  }

   /**
   * Get localIdEndsWith
   * @return localIdEndsWith
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getLocalIdEndsWith() {
        return localIdEndsWith.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_LOCAL_ID_ENDS_WITH)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getLocalIdEndsWith_JsonNullable() {
    return localIdEndsWith;
  }
  
  @JsonProperty(JSON_PROPERTY_LOCAL_ID_ENDS_WITH)
  public void setLocalIdEndsWith_JsonNullable(JsonNullable<String> localIdEndsWith) {
    this.localIdEndsWith = localIdEndsWith;
  }

  public void setLocalIdEndsWith(String localIdEndsWith) {
    this.localIdEndsWith = JsonNullable.<String>of(localIdEndsWith);
  }


  public BrickTopoWhereInput localIdGt(String localIdGt) {
    this.localIdGt = JsonNullable.<String>of(localIdGt);
    return this;
  }

   /**
   * Get localIdGt
   * @return localIdGt
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getLocalIdGt() {
        return localIdGt.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_LOCAL_ID_GT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getLocalIdGt_JsonNullable() {
    return localIdGt;
  }
  
  @JsonProperty(JSON_PROPERTY_LOCAL_ID_GT)
  public void setLocalIdGt_JsonNullable(JsonNullable<String> localIdGt) {
    this.localIdGt = localIdGt;
  }

  public void setLocalIdGt(String localIdGt) {
    this.localIdGt = JsonNullable.<String>of(localIdGt);
  }


  public BrickTopoWhereInput localIdGte(String localIdGte) {
    this.localIdGte = JsonNullable.<String>of(localIdGte);
    return this;
  }

   /**
   * Get localIdGte
   * @return localIdGte
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getLocalIdGte() {
        return localIdGte.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_LOCAL_ID_GTE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getLocalIdGte_JsonNullable() {
    return localIdGte;
  }
  
  @JsonProperty(JSON_PROPERTY_LOCAL_ID_GTE)
  public void setLocalIdGte_JsonNullable(JsonNullable<String> localIdGte) {
    this.localIdGte = localIdGte;
  }

  public void setLocalIdGte(String localIdGte) {
    this.localIdGte = JsonNullable.<String>of(localIdGte);
  }


  public BrickTopoWhereInput localIdIn(List<String> localIdIn) {
    this.localIdIn = JsonNullable.<List<String>>of(localIdIn);
    return this;
  }

  public BrickTopoWhereInput addLocalIdInItem(String localIdInItem) {
    if (this.localIdIn == null || !this.localIdIn.isPresent()) {
      this.localIdIn = JsonNullable.<List<String>>of(new ArrayList<>());
    }
    try {
      this.localIdIn.get().add(localIdInItem);
    } catch (java.util.NoSuchElementException e) {
      // this can never happen, as we make sure above that the value is present
    }
    return this;
  }

   /**
   * Get localIdIn
   * @return localIdIn
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public List<String> getLocalIdIn() {
        return localIdIn.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_LOCAL_ID_IN)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<List<String>> getLocalIdIn_JsonNullable() {
    return localIdIn;
  }
  
  @JsonProperty(JSON_PROPERTY_LOCAL_ID_IN)
  public void setLocalIdIn_JsonNullable(JsonNullable<List<String>> localIdIn) {
    this.localIdIn = localIdIn;
  }

  public void setLocalIdIn(List<String> localIdIn) {
    this.localIdIn = JsonNullable.<List<String>>of(localIdIn);
  }


  public BrickTopoWhereInput localIdLt(String localIdLt) {
    this.localIdLt = JsonNullable.<String>of(localIdLt);
    return this;
  }

   /**
   * Get localIdLt
   * @return localIdLt
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getLocalIdLt() {
        return localIdLt.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_LOCAL_ID_LT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getLocalIdLt_JsonNullable() {
    return localIdLt;
  }
  
  @JsonProperty(JSON_PROPERTY_LOCAL_ID_LT)
  public void setLocalIdLt_JsonNullable(JsonNullable<String> localIdLt) {
    this.localIdLt = localIdLt;
  }

  public void setLocalIdLt(String localIdLt) {
    this.localIdLt = JsonNullable.<String>of(localIdLt);
  }


  public BrickTopoWhereInput localIdLte(String localIdLte) {
    this.localIdLte = JsonNullable.<String>of(localIdLte);
    return this;
  }

   /**
   * Get localIdLte
   * @return localIdLte
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getLocalIdLte() {
        return localIdLte.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_LOCAL_ID_LTE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getLocalIdLte_JsonNullable() {
    return localIdLte;
  }
  
  @JsonProperty(JSON_PROPERTY_LOCAL_ID_LTE)
  public void setLocalIdLte_JsonNullable(JsonNullable<String> localIdLte) {
    this.localIdLte = localIdLte;
  }

  public void setLocalIdLte(String localIdLte) {
    this.localIdLte = JsonNullable.<String>of(localIdLte);
  }


  public BrickTopoWhereInput localIdNot(String localIdNot) {
    this.localIdNot = JsonNullable.<String>of(localIdNot);
    return this;
  }

   /**
   * Get localIdNot
   * @return localIdNot
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getLocalIdNot() {
        return localIdNot.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_LOCAL_ID_NOT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getLocalIdNot_JsonNullable() {
    return localIdNot;
  }
  
  @JsonProperty(JSON_PROPERTY_LOCAL_ID_NOT)
  public void setLocalIdNot_JsonNullable(JsonNullable<String> localIdNot) {
    this.localIdNot = localIdNot;
  }

  public void setLocalIdNot(String localIdNot) {
    this.localIdNot = JsonNullable.<String>of(localIdNot);
  }


  public BrickTopoWhereInput localIdNotContains(String localIdNotContains) {
    this.localIdNotContains = JsonNullable.<String>of(localIdNotContains);
    return this;
  }

   /**
   * Get localIdNotContains
   * @return localIdNotContains
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getLocalIdNotContains() {
        return localIdNotContains.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_LOCAL_ID_NOT_CONTAINS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getLocalIdNotContains_JsonNullable() {
    return localIdNotContains;
  }
  
  @JsonProperty(JSON_PROPERTY_LOCAL_ID_NOT_CONTAINS)
  public void setLocalIdNotContains_JsonNullable(JsonNullable<String> localIdNotContains) {
    this.localIdNotContains = localIdNotContains;
  }

  public void setLocalIdNotContains(String localIdNotContains) {
    this.localIdNotContains = JsonNullable.<String>of(localIdNotContains);
  }


  public BrickTopoWhereInput localIdNotEndsWith(String localIdNotEndsWith) {
    this.localIdNotEndsWith = JsonNullable.<String>of(localIdNotEndsWith);
    return this;
  }

   /**
   * Get localIdNotEndsWith
   * @return localIdNotEndsWith
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getLocalIdNotEndsWith() {
        return localIdNotEndsWith.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_LOCAL_ID_NOT_ENDS_WITH)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getLocalIdNotEndsWith_JsonNullable() {
    return localIdNotEndsWith;
  }
  
  @JsonProperty(JSON_PROPERTY_LOCAL_ID_NOT_ENDS_WITH)
  public void setLocalIdNotEndsWith_JsonNullable(JsonNullable<String> localIdNotEndsWith) {
    this.localIdNotEndsWith = localIdNotEndsWith;
  }

  public void setLocalIdNotEndsWith(String localIdNotEndsWith) {
    this.localIdNotEndsWith = JsonNullable.<String>of(localIdNotEndsWith);
  }


  public BrickTopoWhereInput localIdNotIn(List<String> localIdNotIn) {
    this.localIdNotIn = JsonNullable.<List<String>>of(localIdNotIn);
    return this;
  }

  public BrickTopoWhereInput addLocalIdNotInItem(String localIdNotInItem) {
    if (this.localIdNotIn == null || !this.localIdNotIn.isPresent()) {
      this.localIdNotIn = JsonNullable.<List<String>>of(new ArrayList<>());
    }
    try {
      this.localIdNotIn.get().add(localIdNotInItem);
    } catch (java.util.NoSuchElementException e) {
      // this can never happen, as we make sure above that the value is present
    }
    return this;
  }

   /**
   * Get localIdNotIn
   * @return localIdNotIn
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public List<String> getLocalIdNotIn() {
        return localIdNotIn.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_LOCAL_ID_NOT_IN)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<List<String>> getLocalIdNotIn_JsonNullable() {
    return localIdNotIn;
  }
  
  @JsonProperty(JSON_PROPERTY_LOCAL_ID_NOT_IN)
  public void setLocalIdNotIn_JsonNullable(JsonNullable<List<String>> localIdNotIn) {
    this.localIdNotIn = localIdNotIn;
  }

  public void setLocalIdNotIn(List<String> localIdNotIn) {
    this.localIdNotIn = JsonNullable.<List<String>>of(localIdNotIn);
  }


  public BrickTopoWhereInput localIdNotStartsWith(String localIdNotStartsWith) {
    this.localIdNotStartsWith = JsonNullable.<String>of(localIdNotStartsWith);
    return this;
  }

   /**
   * Get localIdNotStartsWith
   * @return localIdNotStartsWith
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getLocalIdNotStartsWith() {
        return localIdNotStartsWith.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_LOCAL_ID_NOT_STARTS_WITH)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getLocalIdNotStartsWith_JsonNullable() {
    return localIdNotStartsWith;
  }
  
  @JsonProperty(JSON_PROPERTY_LOCAL_ID_NOT_STARTS_WITH)
  public void setLocalIdNotStartsWith_JsonNullable(JsonNullable<String> localIdNotStartsWith) {
    this.localIdNotStartsWith = localIdNotStartsWith;
  }

  public void setLocalIdNotStartsWith(String localIdNotStartsWith) {
    this.localIdNotStartsWith = JsonNullable.<String>of(localIdNotStartsWith);
  }


  public BrickTopoWhereInput localIdStartsWith(String localIdStartsWith) {
    this.localIdStartsWith = JsonNullable.<String>of(localIdStartsWith);
    return this;
  }

   /**
   * Get localIdStartsWith
   * @return localIdStartsWith
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getLocalIdStartsWith() {
        return localIdStartsWith.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_LOCAL_ID_STARTS_WITH)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getLocalIdStartsWith_JsonNullable() {
    return localIdStartsWith;
  }
  
  @JsonProperty(JSON_PROPERTY_LOCAL_ID_STARTS_WITH)
  public void setLocalIdStartsWith_JsonNullable(JsonNullable<String> localIdStartsWith) {
    this.localIdStartsWith = localIdStartsWith;
  }

  public void setLocalIdStartsWith(String localIdStartsWith) {
    this.localIdStartsWith = JsonNullable.<String>of(localIdStartsWith);
  }


  public BrickTopoWhereInput model(String model) {
    this.model = JsonNullable.<String>of(model);
    return this;
  }

   /**
   * Get model
   * @return model
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getModel() {
        return model.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_MODEL)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getModel_JsonNullable() {
    return model;
  }
  
  @JsonProperty(JSON_PROPERTY_MODEL)
  public void setModel_JsonNullable(JsonNullable<String> model) {
    this.model = model;
  }

  public void setModel(String model) {
    this.model = JsonNullable.<String>of(model);
  }


  public BrickTopoWhereInput modelContains(String modelContains) {
    this.modelContains = JsonNullable.<String>of(modelContains);
    return this;
  }

   /**
   * Get modelContains
   * @return modelContains
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getModelContains() {
        return modelContains.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_MODEL_CONTAINS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getModelContains_JsonNullable() {
    return modelContains;
  }
  
  @JsonProperty(JSON_PROPERTY_MODEL_CONTAINS)
  public void setModelContains_JsonNullable(JsonNullable<String> modelContains) {
    this.modelContains = modelContains;
  }

  public void setModelContains(String modelContains) {
    this.modelContains = JsonNullable.<String>of(modelContains);
  }


  public BrickTopoWhereInput modelEndsWith(String modelEndsWith) {
    this.modelEndsWith = JsonNullable.<String>of(modelEndsWith);
    return this;
  }

   /**
   * Get modelEndsWith
   * @return modelEndsWith
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getModelEndsWith() {
        return modelEndsWith.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_MODEL_ENDS_WITH)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getModelEndsWith_JsonNullable() {
    return modelEndsWith;
  }
  
  @JsonProperty(JSON_PROPERTY_MODEL_ENDS_WITH)
  public void setModelEndsWith_JsonNullable(JsonNullable<String> modelEndsWith) {
    this.modelEndsWith = modelEndsWith;
  }

  public void setModelEndsWith(String modelEndsWith) {
    this.modelEndsWith = JsonNullable.<String>of(modelEndsWith);
  }


  public BrickTopoWhereInput modelGt(String modelGt) {
    this.modelGt = JsonNullable.<String>of(modelGt);
    return this;
  }

   /**
   * Get modelGt
   * @return modelGt
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getModelGt() {
        return modelGt.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_MODEL_GT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getModelGt_JsonNullable() {
    return modelGt;
  }
  
  @JsonProperty(JSON_PROPERTY_MODEL_GT)
  public void setModelGt_JsonNullable(JsonNullable<String> modelGt) {
    this.modelGt = modelGt;
  }

  public void setModelGt(String modelGt) {
    this.modelGt = JsonNullable.<String>of(modelGt);
  }


  public BrickTopoWhereInput modelGte(String modelGte) {
    this.modelGte = JsonNullable.<String>of(modelGte);
    return this;
  }

   /**
   * Get modelGte
   * @return modelGte
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getModelGte() {
        return modelGte.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_MODEL_GTE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getModelGte_JsonNullable() {
    return modelGte;
  }
  
  @JsonProperty(JSON_PROPERTY_MODEL_GTE)
  public void setModelGte_JsonNullable(JsonNullable<String> modelGte) {
    this.modelGte = modelGte;
  }

  public void setModelGte(String modelGte) {
    this.modelGte = JsonNullable.<String>of(modelGte);
  }


  public BrickTopoWhereInput modelIn(List<String> modelIn) {
    this.modelIn = JsonNullable.<List<String>>of(modelIn);
    return this;
  }

  public BrickTopoWhereInput addModelInItem(String modelInItem) {
    if (this.modelIn == null || !this.modelIn.isPresent()) {
      this.modelIn = JsonNullable.<List<String>>of(new ArrayList<>());
    }
    try {
      this.modelIn.get().add(modelInItem);
    } catch (java.util.NoSuchElementException e) {
      // this can never happen, as we make sure above that the value is present
    }
    return this;
  }

   /**
   * Get modelIn
   * @return modelIn
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public List<String> getModelIn() {
        return modelIn.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_MODEL_IN)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<List<String>> getModelIn_JsonNullable() {
    return modelIn;
  }
  
  @JsonProperty(JSON_PROPERTY_MODEL_IN)
  public void setModelIn_JsonNullable(JsonNullable<List<String>> modelIn) {
    this.modelIn = modelIn;
  }

  public void setModelIn(List<String> modelIn) {
    this.modelIn = JsonNullable.<List<String>>of(modelIn);
  }


  public BrickTopoWhereInput modelLt(String modelLt) {
    this.modelLt = JsonNullable.<String>of(modelLt);
    return this;
  }

   /**
   * Get modelLt
   * @return modelLt
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getModelLt() {
        return modelLt.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_MODEL_LT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getModelLt_JsonNullable() {
    return modelLt;
  }
  
  @JsonProperty(JSON_PROPERTY_MODEL_LT)
  public void setModelLt_JsonNullable(JsonNullable<String> modelLt) {
    this.modelLt = modelLt;
  }

  public void setModelLt(String modelLt) {
    this.modelLt = JsonNullable.<String>of(modelLt);
  }


  public BrickTopoWhereInput modelLte(String modelLte) {
    this.modelLte = JsonNullable.<String>of(modelLte);
    return this;
  }

   /**
   * Get modelLte
   * @return modelLte
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getModelLte() {
        return modelLte.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_MODEL_LTE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getModelLte_JsonNullable() {
    return modelLte;
  }
  
  @JsonProperty(JSON_PROPERTY_MODEL_LTE)
  public void setModelLte_JsonNullable(JsonNullable<String> modelLte) {
    this.modelLte = modelLte;
  }

  public void setModelLte(String modelLte) {
    this.modelLte = JsonNullable.<String>of(modelLte);
  }


  public BrickTopoWhereInput modelNot(String modelNot) {
    this.modelNot = JsonNullable.<String>of(modelNot);
    return this;
  }

   /**
   * Get modelNot
   * @return modelNot
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getModelNot() {
        return modelNot.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_MODEL_NOT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getModelNot_JsonNullable() {
    return modelNot;
  }
  
  @JsonProperty(JSON_PROPERTY_MODEL_NOT)
  public void setModelNot_JsonNullable(JsonNullable<String> modelNot) {
    this.modelNot = modelNot;
  }

  public void setModelNot(String modelNot) {
    this.modelNot = JsonNullable.<String>of(modelNot);
  }


  public BrickTopoWhereInput modelNotContains(String modelNotContains) {
    this.modelNotContains = JsonNullable.<String>of(modelNotContains);
    return this;
  }

   /**
   * Get modelNotContains
   * @return modelNotContains
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getModelNotContains() {
        return modelNotContains.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_MODEL_NOT_CONTAINS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getModelNotContains_JsonNullable() {
    return modelNotContains;
  }
  
  @JsonProperty(JSON_PROPERTY_MODEL_NOT_CONTAINS)
  public void setModelNotContains_JsonNullable(JsonNullable<String> modelNotContains) {
    this.modelNotContains = modelNotContains;
  }

  public void setModelNotContains(String modelNotContains) {
    this.modelNotContains = JsonNullable.<String>of(modelNotContains);
  }


  public BrickTopoWhereInput modelNotEndsWith(String modelNotEndsWith) {
    this.modelNotEndsWith = JsonNullable.<String>of(modelNotEndsWith);
    return this;
  }

   /**
   * Get modelNotEndsWith
   * @return modelNotEndsWith
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getModelNotEndsWith() {
        return modelNotEndsWith.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_MODEL_NOT_ENDS_WITH)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getModelNotEndsWith_JsonNullable() {
    return modelNotEndsWith;
  }
  
  @JsonProperty(JSON_PROPERTY_MODEL_NOT_ENDS_WITH)
  public void setModelNotEndsWith_JsonNullable(JsonNullable<String> modelNotEndsWith) {
    this.modelNotEndsWith = modelNotEndsWith;
  }

  public void setModelNotEndsWith(String modelNotEndsWith) {
    this.modelNotEndsWith = JsonNullable.<String>of(modelNotEndsWith);
  }


  public BrickTopoWhereInput modelNotIn(List<String> modelNotIn) {
    this.modelNotIn = JsonNullable.<List<String>>of(modelNotIn);
    return this;
  }

  public BrickTopoWhereInput addModelNotInItem(String modelNotInItem) {
    if (this.modelNotIn == null || !this.modelNotIn.isPresent()) {
      this.modelNotIn = JsonNullable.<List<String>>of(new ArrayList<>());
    }
    try {
      this.modelNotIn.get().add(modelNotInItem);
    } catch (java.util.NoSuchElementException e) {
      // this can never happen, as we make sure above that the value is present
    }
    return this;
  }

   /**
   * Get modelNotIn
   * @return modelNotIn
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public List<String> getModelNotIn() {
        return modelNotIn.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_MODEL_NOT_IN)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<List<String>> getModelNotIn_JsonNullable() {
    return modelNotIn;
  }
  
  @JsonProperty(JSON_PROPERTY_MODEL_NOT_IN)
  public void setModelNotIn_JsonNullable(JsonNullable<List<String>> modelNotIn) {
    this.modelNotIn = modelNotIn;
  }

  public void setModelNotIn(List<String> modelNotIn) {
    this.modelNotIn = JsonNullable.<List<String>>of(modelNotIn);
  }


  public BrickTopoWhereInput modelNotStartsWith(String modelNotStartsWith) {
    this.modelNotStartsWith = JsonNullable.<String>of(modelNotStartsWith);
    return this;
  }

   /**
   * Get modelNotStartsWith
   * @return modelNotStartsWith
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getModelNotStartsWith() {
        return modelNotStartsWith.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_MODEL_NOT_STARTS_WITH)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getModelNotStartsWith_JsonNullable() {
    return modelNotStartsWith;
  }
  
  @JsonProperty(JSON_PROPERTY_MODEL_NOT_STARTS_WITH)
  public void setModelNotStartsWith_JsonNullable(JsonNullable<String> modelNotStartsWith) {
    this.modelNotStartsWith = modelNotStartsWith;
  }

  public void setModelNotStartsWith(String modelNotStartsWith) {
    this.modelNotStartsWith = JsonNullable.<String>of(modelNotStartsWith);
  }


  public BrickTopoWhereInput modelStartsWith(String modelStartsWith) {
    this.modelStartsWith = JsonNullable.<String>of(modelStartsWith);
    return this;
  }

   /**
   * Get modelStartsWith
   * @return modelStartsWith
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getModelStartsWith() {
        return modelStartsWith.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_MODEL_STARTS_WITH)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getModelStartsWith_JsonNullable() {
    return modelStartsWith;
  }
  
  @JsonProperty(JSON_PROPERTY_MODEL_STARTS_WITH)
  public void setModelStartsWith_JsonNullable(JsonNullable<String> modelStartsWith) {
    this.modelStartsWith = modelStartsWith;
  }

  public void setModelStartsWith(String modelStartsWith) {
    this.modelStartsWith = JsonNullable.<String>of(modelStartsWith);
  }


  public BrickTopoWhereInput name(String name) {
    this.name = JsonNullable.<String>of(name);
    return this;
  }

   /**
   * Get name
   * @return name
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getName() {
        return name.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getName_JsonNullable() {
    return name;
  }
  
  @JsonProperty(JSON_PROPERTY_NAME)
  public void setName_JsonNullable(JsonNullable<String> name) {
    this.name = name;
  }

  public void setName(String name) {
    this.name = JsonNullable.<String>of(name);
  }


  public BrickTopoWhereInput nameContains(String nameContains) {
    this.nameContains = JsonNullable.<String>of(nameContains);
    return this;
  }

   /**
   * Get nameContains
   * @return nameContains
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getNameContains() {
        return nameContains.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_NAME_CONTAINS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getNameContains_JsonNullable() {
    return nameContains;
  }
  
  @JsonProperty(JSON_PROPERTY_NAME_CONTAINS)
  public void setNameContains_JsonNullable(JsonNullable<String> nameContains) {
    this.nameContains = nameContains;
  }

  public void setNameContains(String nameContains) {
    this.nameContains = JsonNullable.<String>of(nameContains);
  }


  public BrickTopoWhereInput nameEndsWith(String nameEndsWith) {
    this.nameEndsWith = JsonNullable.<String>of(nameEndsWith);
    return this;
  }

   /**
   * Get nameEndsWith
   * @return nameEndsWith
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getNameEndsWith() {
        return nameEndsWith.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_NAME_ENDS_WITH)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getNameEndsWith_JsonNullable() {
    return nameEndsWith;
  }
  
  @JsonProperty(JSON_PROPERTY_NAME_ENDS_WITH)
  public void setNameEndsWith_JsonNullable(JsonNullable<String> nameEndsWith) {
    this.nameEndsWith = nameEndsWith;
  }

  public void setNameEndsWith(String nameEndsWith) {
    this.nameEndsWith = JsonNullable.<String>of(nameEndsWith);
  }


  public BrickTopoWhereInput nameGt(String nameGt) {
    this.nameGt = JsonNullable.<String>of(nameGt);
    return this;
  }

   /**
   * Get nameGt
   * @return nameGt
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getNameGt() {
        return nameGt.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_NAME_GT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getNameGt_JsonNullable() {
    return nameGt;
  }
  
  @JsonProperty(JSON_PROPERTY_NAME_GT)
  public void setNameGt_JsonNullable(JsonNullable<String> nameGt) {
    this.nameGt = nameGt;
  }

  public void setNameGt(String nameGt) {
    this.nameGt = JsonNullable.<String>of(nameGt);
  }


  public BrickTopoWhereInput nameGte(String nameGte) {
    this.nameGte = JsonNullable.<String>of(nameGte);
    return this;
  }

   /**
   * Get nameGte
   * @return nameGte
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getNameGte() {
        return nameGte.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_NAME_GTE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getNameGte_JsonNullable() {
    return nameGte;
  }
  
  @JsonProperty(JSON_PROPERTY_NAME_GTE)
  public void setNameGte_JsonNullable(JsonNullable<String> nameGte) {
    this.nameGte = nameGte;
  }

  public void setNameGte(String nameGte) {
    this.nameGte = JsonNullable.<String>of(nameGte);
  }


  public BrickTopoWhereInput nameIn(List<String> nameIn) {
    this.nameIn = JsonNullable.<List<String>>of(nameIn);
    return this;
  }

  public BrickTopoWhereInput addNameInItem(String nameInItem) {
    if (this.nameIn == null || !this.nameIn.isPresent()) {
      this.nameIn = JsonNullable.<List<String>>of(new ArrayList<>());
    }
    try {
      this.nameIn.get().add(nameInItem);
    } catch (java.util.NoSuchElementException e) {
      // this can never happen, as we make sure above that the value is present
    }
    return this;
  }

   /**
   * Get nameIn
   * @return nameIn
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public List<String> getNameIn() {
        return nameIn.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_NAME_IN)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<List<String>> getNameIn_JsonNullable() {
    return nameIn;
  }
  
  @JsonProperty(JSON_PROPERTY_NAME_IN)
  public void setNameIn_JsonNullable(JsonNullable<List<String>> nameIn) {
    this.nameIn = nameIn;
  }

  public void setNameIn(List<String> nameIn) {
    this.nameIn = JsonNullable.<List<String>>of(nameIn);
  }


  public BrickTopoWhereInput nameLt(String nameLt) {
    this.nameLt = JsonNullable.<String>of(nameLt);
    return this;
  }

   /**
   * Get nameLt
   * @return nameLt
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getNameLt() {
        return nameLt.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_NAME_LT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getNameLt_JsonNullable() {
    return nameLt;
  }
  
  @JsonProperty(JSON_PROPERTY_NAME_LT)
  public void setNameLt_JsonNullable(JsonNullable<String> nameLt) {
    this.nameLt = nameLt;
  }

  public void setNameLt(String nameLt) {
    this.nameLt = JsonNullable.<String>of(nameLt);
  }


  public BrickTopoWhereInput nameLte(String nameLte) {
    this.nameLte = JsonNullable.<String>of(nameLte);
    return this;
  }

   /**
   * Get nameLte
   * @return nameLte
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getNameLte() {
        return nameLte.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_NAME_LTE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getNameLte_JsonNullable() {
    return nameLte;
  }
  
  @JsonProperty(JSON_PROPERTY_NAME_LTE)
  public void setNameLte_JsonNullable(JsonNullable<String> nameLte) {
    this.nameLte = nameLte;
  }

  public void setNameLte(String nameLte) {
    this.nameLte = JsonNullable.<String>of(nameLte);
  }


  public BrickTopoWhereInput nameNot(String nameNot) {
    this.nameNot = JsonNullable.<String>of(nameNot);
    return this;
  }

   /**
   * Get nameNot
   * @return nameNot
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getNameNot() {
        return nameNot.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_NAME_NOT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getNameNot_JsonNullable() {
    return nameNot;
  }
  
  @JsonProperty(JSON_PROPERTY_NAME_NOT)
  public void setNameNot_JsonNullable(JsonNullable<String> nameNot) {
    this.nameNot = nameNot;
  }

  public void setNameNot(String nameNot) {
    this.nameNot = JsonNullable.<String>of(nameNot);
  }


  public BrickTopoWhereInput nameNotContains(String nameNotContains) {
    this.nameNotContains = JsonNullable.<String>of(nameNotContains);
    return this;
  }

   /**
   * Get nameNotContains
   * @return nameNotContains
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getNameNotContains() {
        return nameNotContains.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_NAME_NOT_CONTAINS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getNameNotContains_JsonNullable() {
    return nameNotContains;
  }
  
  @JsonProperty(JSON_PROPERTY_NAME_NOT_CONTAINS)
  public void setNameNotContains_JsonNullable(JsonNullable<String> nameNotContains) {
    this.nameNotContains = nameNotContains;
  }

  public void setNameNotContains(String nameNotContains) {
    this.nameNotContains = JsonNullable.<String>of(nameNotContains);
  }


  public BrickTopoWhereInput nameNotEndsWith(String nameNotEndsWith) {
    this.nameNotEndsWith = JsonNullable.<String>of(nameNotEndsWith);
    return this;
  }

   /**
   * Get nameNotEndsWith
   * @return nameNotEndsWith
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getNameNotEndsWith() {
        return nameNotEndsWith.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_NAME_NOT_ENDS_WITH)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getNameNotEndsWith_JsonNullable() {
    return nameNotEndsWith;
  }
  
  @JsonProperty(JSON_PROPERTY_NAME_NOT_ENDS_WITH)
  public void setNameNotEndsWith_JsonNullable(JsonNullable<String> nameNotEndsWith) {
    this.nameNotEndsWith = nameNotEndsWith;
  }

  public void setNameNotEndsWith(String nameNotEndsWith) {
    this.nameNotEndsWith = JsonNullable.<String>of(nameNotEndsWith);
  }


  public BrickTopoWhereInput nameNotIn(List<String> nameNotIn) {
    this.nameNotIn = JsonNullable.<List<String>>of(nameNotIn);
    return this;
  }

  public BrickTopoWhereInput addNameNotInItem(String nameNotInItem) {
    if (this.nameNotIn == null || !this.nameNotIn.isPresent()) {
      this.nameNotIn = JsonNullable.<List<String>>of(new ArrayList<>());
    }
    try {
      this.nameNotIn.get().add(nameNotInItem);
    } catch (java.util.NoSuchElementException e) {
      // this can never happen, as we make sure above that the value is present
    }
    return this;
  }

   /**
   * Get nameNotIn
   * @return nameNotIn
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public List<String> getNameNotIn() {
        return nameNotIn.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_NAME_NOT_IN)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<List<String>> getNameNotIn_JsonNullable() {
    return nameNotIn;
  }
  
  @JsonProperty(JSON_PROPERTY_NAME_NOT_IN)
  public void setNameNotIn_JsonNullable(JsonNullable<List<String>> nameNotIn) {
    this.nameNotIn = nameNotIn;
  }

  public void setNameNotIn(List<String> nameNotIn) {
    this.nameNotIn = JsonNullable.<List<String>>of(nameNotIn);
  }


  public BrickTopoWhereInput nameNotStartsWith(String nameNotStartsWith) {
    this.nameNotStartsWith = JsonNullable.<String>of(nameNotStartsWith);
    return this;
  }

   /**
   * Get nameNotStartsWith
   * @return nameNotStartsWith
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getNameNotStartsWith() {
        return nameNotStartsWith.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_NAME_NOT_STARTS_WITH)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getNameNotStartsWith_JsonNullable() {
    return nameNotStartsWith;
  }
  
  @JsonProperty(JSON_PROPERTY_NAME_NOT_STARTS_WITH)
  public void setNameNotStartsWith_JsonNullable(JsonNullable<String> nameNotStartsWith) {
    this.nameNotStartsWith = nameNotStartsWith;
  }

  public void setNameNotStartsWith(String nameNotStartsWith) {
    this.nameNotStartsWith = JsonNullable.<String>of(nameNotStartsWith);
  }


  public BrickTopoWhereInput nameStartsWith(String nameStartsWith) {
    this.nameStartsWith = JsonNullable.<String>of(nameStartsWith);
    return this;
  }

   /**
   * Get nameStartsWith
   * @return nameStartsWith
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getNameStartsWith() {
        return nameStartsWith.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_NAME_STARTS_WITH)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getNameStartsWith_JsonNullable() {
    return nameStartsWith;
  }
  
  @JsonProperty(JSON_PROPERTY_NAME_STARTS_WITH)
  public void setNameStartsWith_JsonNullable(JsonNullable<String> nameStartsWith) {
    this.nameStartsWith = nameStartsWith;
  }

  public void setNameStartsWith(String nameStartsWith) {
    this.nameStartsWith = JsonNullable.<String>of(nameStartsWith);
  }


  public BrickTopoWhereInput nodeTopoesEvery(NodeTopoWhereInput nodeTopoesEvery) {
    this.nodeTopoesEvery = JsonNullable.<NodeTopoWhereInput>of(nodeTopoesEvery);
    return this;
  }

   /**
   * Get nodeTopoesEvery
   * @return nodeTopoesEvery
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public NodeTopoWhereInput getNodeTopoesEvery() {
        return nodeTopoesEvery.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_NODE_TOPOES_EVERY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<NodeTopoWhereInput> getNodeTopoesEvery_JsonNullable() {
    return nodeTopoesEvery;
  }
  
  @JsonProperty(JSON_PROPERTY_NODE_TOPOES_EVERY)
  public void setNodeTopoesEvery_JsonNullable(JsonNullable<NodeTopoWhereInput> nodeTopoesEvery) {
    this.nodeTopoesEvery = nodeTopoesEvery;
  }

  public void setNodeTopoesEvery(NodeTopoWhereInput nodeTopoesEvery) {
    this.nodeTopoesEvery = JsonNullable.<NodeTopoWhereInput>of(nodeTopoesEvery);
  }


  public BrickTopoWhereInput nodeTopoesNone(NodeTopoWhereInput nodeTopoesNone) {
    this.nodeTopoesNone = JsonNullable.<NodeTopoWhereInput>of(nodeTopoesNone);
    return this;
  }

   /**
   * Get nodeTopoesNone
   * @return nodeTopoesNone
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public NodeTopoWhereInput getNodeTopoesNone() {
        return nodeTopoesNone.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_NODE_TOPOES_NONE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<NodeTopoWhereInput> getNodeTopoesNone_JsonNullable() {
    return nodeTopoesNone;
  }
  
  @JsonProperty(JSON_PROPERTY_NODE_TOPOES_NONE)
  public void setNodeTopoesNone_JsonNullable(JsonNullable<NodeTopoWhereInput> nodeTopoesNone) {
    this.nodeTopoesNone = nodeTopoesNone;
  }

  public void setNodeTopoesNone(NodeTopoWhereInput nodeTopoesNone) {
    this.nodeTopoesNone = JsonNullable.<NodeTopoWhereInput>of(nodeTopoesNone);
  }


  public BrickTopoWhereInput nodeTopoesSome(NodeTopoWhereInput nodeTopoesSome) {
    this.nodeTopoesSome = JsonNullable.<NodeTopoWhereInput>of(nodeTopoesSome);
    return this;
  }

   /**
   * Get nodeTopoesSome
   * @return nodeTopoesSome
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public NodeTopoWhereInput getNodeTopoesSome() {
        return nodeTopoesSome.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_NODE_TOPOES_SOME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<NodeTopoWhereInput> getNodeTopoesSome_JsonNullable() {
    return nodeTopoesSome;
  }
  
  @JsonProperty(JSON_PROPERTY_NODE_TOPOES_SOME)
  public void setNodeTopoesSome_JsonNullable(JsonNullable<NodeTopoWhereInput> nodeTopoesSome) {
    this.nodeTopoesSome = nodeTopoesSome;
  }

  public void setNodeTopoesSome(NodeTopoWhereInput nodeTopoesSome) {
    this.nodeTopoesSome = JsonNullable.<NodeTopoWhereInput>of(nodeTopoesSome);
  }


  public BrickTopoWhereInput NOT(List<BrickTopoWhereInput> NOT) {
    this.NOT = JsonNullable.<List<BrickTopoWhereInput>>of(NOT);
    return this;
  }

  public BrickTopoWhereInput addNOTItem(BrickTopoWhereInput NOTItem) {
    if (this.NOT == null || !this.NOT.isPresent()) {
      this.NOT = JsonNullable.<List<BrickTopoWhereInput>>of(new ArrayList<>());
    }
    try {
      this.NOT.get().add(NOTItem);
    } catch (java.util.NoSuchElementException e) {
      // this can never happen, as we make sure above that the value is present
    }
    return this;
  }

   /**
   * Get NOT
   * @return NOT
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public List<BrickTopoWhereInput> getNOT() {
        return NOT.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_N_O_T)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<List<BrickTopoWhereInput>> getNOT_JsonNullable() {
    return NOT;
  }
  
  @JsonProperty(JSON_PROPERTY_N_O_T)
  public void setNOT_JsonNullable(JsonNullable<List<BrickTopoWhereInput>> NOT) {
    this.NOT = NOT;
  }

  public void setNOT(List<BrickTopoWhereInput> NOT) {
    this.NOT = JsonNullable.<List<BrickTopoWhereInput>>of(NOT);
  }


  public BrickTopoWhereInput OR(List<BrickTopoWhereInput> OR) {
    this.OR = JsonNullable.<List<BrickTopoWhereInput>>of(OR);
    return this;
  }

  public BrickTopoWhereInput addORItem(BrickTopoWhereInput ORItem) {
    if (this.OR == null || !this.OR.isPresent()) {
      this.OR = JsonNullable.<List<BrickTopoWhereInput>>of(new ArrayList<>());
    }
    try {
      this.OR.get().add(ORItem);
    } catch (java.util.NoSuchElementException e) {
      // this can never happen, as we make sure above that the value is present
    }
    return this;
  }

   /**
   * Get OR
   * @return OR
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public List<BrickTopoWhereInput> getOR() {
        return OR.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_O_R)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<List<BrickTopoWhereInput>> getOR_JsonNullable() {
    return OR;
  }
  
  @JsonProperty(JSON_PROPERTY_O_R)
  public void setOR_JsonNullable(JsonNullable<List<BrickTopoWhereInput>> OR) {
    this.OR = OR;
  }

  public void setOR(List<BrickTopoWhereInput> OR) {
    this.OR = JsonNullable.<List<BrickTopoWhereInput>>of(OR);
  }


  public BrickTopoWhereInput position(Double position) {
    this.position = JsonNullable.<Double>of(position);
    return this;
  }

   /**
   * Get position
   * @return position
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public Double getPosition() {
        return position.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_POSITION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<Double> getPosition_JsonNullable() {
    return position;
  }
  
  @JsonProperty(JSON_PROPERTY_POSITION)
  public void setPosition_JsonNullable(JsonNullable<Double> position) {
    this.position = position;
  }

  public void setPosition(Double position) {
    this.position = JsonNullable.<Double>of(position);
  }


  public BrickTopoWhereInput positionGt(Double positionGt) {
    this.positionGt = JsonNullable.<Double>of(positionGt);
    return this;
  }

   /**
   * Get positionGt
   * @return positionGt
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public Double getPositionGt() {
        return positionGt.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_POSITION_GT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<Double> getPositionGt_JsonNullable() {
    return positionGt;
  }
  
  @JsonProperty(JSON_PROPERTY_POSITION_GT)
  public void setPositionGt_JsonNullable(JsonNullable<Double> positionGt) {
    this.positionGt = positionGt;
  }

  public void setPositionGt(Double positionGt) {
    this.positionGt = JsonNullable.<Double>of(positionGt);
  }


  public BrickTopoWhereInput positionGte(Double positionGte) {
    this.positionGte = JsonNullable.<Double>of(positionGte);
    return this;
  }

   /**
   * Get positionGte
   * @return positionGte
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public Double getPositionGte() {
        return positionGte.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_POSITION_GTE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<Double> getPositionGte_JsonNullable() {
    return positionGte;
  }
  
  @JsonProperty(JSON_PROPERTY_POSITION_GTE)
  public void setPositionGte_JsonNullable(JsonNullable<Double> positionGte) {
    this.positionGte = positionGte;
  }

  public void setPositionGte(Double positionGte) {
    this.positionGte = JsonNullable.<Double>of(positionGte);
  }


  public BrickTopoWhereInput positionIn(List<Double> positionIn) {
    this.positionIn = JsonNullable.<List<Double>>of(positionIn);
    return this;
  }

  public BrickTopoWhereInput addPositionInItem(Double positionInItem) {
    if (this.positionIn == null || !this.positionIn.isPresent()) {
      this.positionIn = JsonNullable.<List<Double>>of(new ArrayList<>());
    }
    try {
      this.positionIn.get().add(positionInItem);
    } catch (java.util.NoSuchElementException e) {
      // this can never happen, as we make sure above that the value is present
    }
    return this;
  }

   /**
   * Get positionIn
   * @return positionIn
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public List<Double> getPositionIn() {
        return positionIn.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_POSITION_IN)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<List<Double>> getPositionIn_JsonNullable() {
    return positionIn;
  }
  
  @JsonProperty(JSON_PROPERTY_POSITION_IN)
  public void setPositionIn_JsonNullable(JsonNullable<List<Double>> positionIn) {
    this.positionIn = positionIn;
  }

  public void setPositionIn(List<Double> positionIn) {
    this.positionIn = JsonNullable.<List<Double>>of(positionIn);
  }


  public BrickTopoWhereInput positionLt(Double positionLt) {
    this.positionLt = JsonNullable.<Double>of(positionLt);
    return this;
  }

   /**
   * Get positionLt
   * @return positionLt
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public Double getPositionLt() {
        return positionLt.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_POSITION_LT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<Double> getPositionLt_JsonNullable() {
    return positionLt;
  }
  
  @JsonProperty(JSON_PROPERTY_POSITION_LT)
  public void setPositionLt_JsonNullable(JsonNullable<Double> positionLt) {
    this.positionLt = positionLt;
  }

  public void setPositionLt(Double positionLt) {
    this.positionLt = JsonNullable.<Double>of(positionLt);
  }


  public BrickTopoWhereInput positionLte(Double positionLte) {
    this.positionLte = JsonNullable.<Double>of(positionLte);
    return this;
  }

   /**
   * Get positionLte
   * @return positionLte
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public Double getPositionLte() {
        return positionLte.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_POSITION_LTE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<Double> getPositionLte_JsonNullable() {
    return positionLte;
  }
  
  @JsonProperty(JSON_PROPERTY_POSITION_LTE)
  public void setPositionLte_JsonNullable(JsonNullable<Double> positionLte) {
    this.positionLte = positionLte;
  }

  public void setPositionLte(Double positionLte) {
    this.positionLte = JsonNullable.<Double>of(positionLte);
  }


  public BrickTopoWhereInput positionNot(Double positionNot) {
    this.positionNot = JsonNullable.<Double>of(positionNot);
    return this;
  }

   /**
   * Get positionNot
   * @return positionNot
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public Double getPositionNot() {
        return positionNot.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_POSITION_NOT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<Double> getPositionNot_JsonNullable() {
    return positionNot;
  }
  
  @JsonProperty(JSON_PROPERTY_POSITION_NOT)
  public void setPositionNot_JsonNullable(JsonNullable<Double> positionNot) {
    this.positionNot = positionNot;
  }

  public void setPositionNot(Double positionNot) {
    this.positionNot = JsonNullable.<Double>of(positionNot);
  }


  public BrickTopoWhereInput positionNotIn(List<Double> positionNotIn) {
    this.positionNotIn = JsonNullable.<List<Double>>of(positionNotIn);
    return this;
  }

  public BrickTopoWhereInput addPositionNotInItem(Double positionNotInItem) {
    if (this.positionNotIn == null || !this.positionNotIn.isPresent()) {
      this.positionNotIn = JsonNullable.<List<Double>>of(new ArrayList<>());
    }
    try {
      this.positionNotIn.get().add(positionNotInItem);
    } catch (java.util.NoSuchElementException e) {
      // this can never happen, as we make sure above that the value is present
    }
    return this;
  }

   /**
   * Get positionNotIn
   * @return positionNotIn
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public List<Double> getPositionNotIn() {
        return positionNotIn.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_POSITION_NOT_IN)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<List<Double>> getPositionNotIn_JsonNullable() {
    return positionNotIn;
  }
  
  @JsonProperty(JSON_PROPERTY_POSITION_NOT_IN)
  public void setPositionNotIn_JsonNullable(JsonNullable<List<Double>> positionNotIn) {
    this.positionNotIn = positionNotIn;
  }

  public void setPositionNotIn(List<Double> positionNotIn) {
    this.positionNotIn = JsonNullable.<List<Double>>of(positionNotIn);
  }


  public BrickTopoWhereInput powerLayout(Direction powerLayout) {
    this.powerLayout = JsonNullable.<Direction>of(powerLayout);
    return this;
  }

   /**
   * Get powerLayout
   * @return powerLayout
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public Direction getPowerLayout() {
        return powerLayout.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_POWER_LAYOUT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<Direction> getPowerLayout_JsonNullable() {
    return powerLayout;
  }
  
  @JsonProperty(JSON_PROPERTY_POWER_LAYOUT)
  public void setPowerLayout_JsonNullable(JsonNullable<Direction> powerLayout) {
    this.powerLayout = powerLayout;
  }

  public void setPowerLayout(Direction powerLayout) {
    this.powerLayout = JsonNullable.<Direction>of(powerLayout);
  }


  public BrickTopoWhereInput powerLayoutIn(List<Direction> powerLayoutIn) {
    this.powerLayoutIn = JsonNullable.<List<Direction>>of(powerLayoutIn);
    return this;
  }

  public BrickTopoWhereInput addPowerLayoutInItem(Direction powerLayoutInItem) {
    if (this.powerLayoutIn == null || !this.powerLayoutIn.isPresent()) {
      this.powerLayoutIn = JsonNullable.<List<Direction>>of(new ArrayList<>());
    }
    try {
      this.powerLayoutIn.get().add(powerLayoutInItem);
    } catch (java.util.NoSuchElementException e) {
      // this can never happen, as we make sure above that the value is present
    }
    return this;
  }

   /**
   * Get powerLayoutIn
   * @return powerLayoutIn
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public List<Direction> getPowerLayoutIn() {
        return powerLayoutIn.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_POWER_LAYOUT_IN)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<List<Direction>> getPowerLayoutIn_JsonNullable() {
    return powerLayoutIn;
  }
  
  @JsonProperty(JSON_PROPERTY_POWER_LAYOUT_IN)
  public void setPowerLayoutIn_JsonNullable(JsonNullable<List<Direction>> powerLayoutIn) {
    this.powerLayoutIn = powerLayoutIn;
  }

  public void setPowerLayoutIn(List<Direction> powerLayoutIn) {
    this.powerLayoutIn = JsonNullable.<List<Direction>>of(powerLayoutIn);
  }


  public BrickTopoWhereInput powerLayoutNot(Direction powerLayoutNot) {
    this.powerLayoutNot = JsonNullable.<Direction>of(powerLayoutNot);
    return this;
  }

   /**
   * Get powerLayoutNot
   * @return powerLayoutNot
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public Direction getPowerLayoutNot() {
        return powerLayoutNot.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_POWER_LAYOUT_NOT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<Direction> getPowerLayoutNot_JsonNullable() {
    return powerLayoutNot;
  }
  
  @JsonProperty(JSON_PROPERTY_POWER_LAYOUT_NOT)
  public void setPowerLayoutNot_JsonNullable(JsonNullable<Direction> powerLayoutNot) {
    this.powerLayoutNot = powerLayoutNot;
  }

  public void setPowerLayoutNot(Direction powerLayoutNot) {
    this.powerLayoutNot = JsonNullable.<Direction>of(powerLayoutNot);
  }


  public BrickTopoWhereInput powerLayoutNotIn(List<Direction> powerLayoutNotIn) {
    this.powerLayoutNotIn = JsonNullable.<List<Direction>>of(powerLayoutNotIn);
    return this;
  }

  public BrickTopoWhereInput addPowerLayoutNotInItem(Direction powerLayoutNotInItem) {
    if (this.powerLayoutNotIn == null || !this.powerLayoutNotIn.isPresent()) {
      this.powerLayoutNotIn = JsonNullable.<List<Direction>>of(new ArrayList<>());
    }
    try {
      this.powerLayoutNotIn.get().add(powerLayoutNotInItem);
    } catch (java.util.NoSuchElementException e) {
      // this can never happen, as we make sure above that the value is present
    }
    return this;
  }

   /**
   * Get powerLayoutNotIn
   * @return powerLayoutNotIn
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public List<Direction> getPowerLayoutNotIn() {
        return powerLayoutNotIn.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_POWER_LAYOUT_NOT_IN)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<List<Direction>> getPowerLayoutNotIn_JsonNullable() {
    return powerLayoutNotIn;
  }
  
  @JsonProperty(JSON_PROPERTY_POWER_LAYOUT_NOT_IN)
  public void setPowerLayoutNotIn_JsonNullable(JsonNullable<List<Direction>> powerLayoutNotIn) {
    this.powerLayoutNotIn = powerLayoutNotIn;
  }

  public void setPowerLayoutNotIn(List<Direction> powerLayoutNotIn) {
    this.powerLayoutNotIn = JsonNullable.<List<Direction>>of(powerLayoutNotIn);
  }


  public BrickTopoWhereInput powerPosition(PowerPosition powerPosition) {
    this.powerPosition = JsonNullable.<PowerPosition>of(powerPosition);
    return this;
  }

   /**
   * Get powerPosition
   * @return powerPosition
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public PowerPosition getPowerPosition() {
        return powerPosition.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_POWER_POSITION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<PowerPosition> getPowerPosition_JsonNullable() {
    return powerPosition;
  }
  
  @JsonProperty(JSON_PROPERTY_POWER_POSITION)
  public void setPowerPosition_JsonNullable(JsonNullable<PowerPosition> powerPosition) {
    this.powerPosition = powerPosition;
  }

  public void setPowerPosition(PowerPosition powerPosition) {
    this.powerPosition = JsonNullable.<PowerPosition>of(powerPosition);
  }


  public BrickTopoWhereInput powerPositionIn(List<PowerPosition> powerPositionIn) {
    this.powerPositionIn = JsonNullable.<List<PowerPosition>>of(powerPositionIn);
    return this;
  }

  public BrickTopoWhereInput addPowerPositionInItem(PowerPosition powerPositionInItem) {
    if (this.powerPositionIn == null || !this.powerPositionIn.isPresent()) {
      this.powerPositionIn = JsonNullable.<List<PowerPosition>>of(new ArrayList<>());
    }
    try {
      this.powerPositionIn.get().add(powerPositionInItem);
    } catch (java.util.NoSuchElementException e) {
      // this can never happen, as we make sure above that the value is present
    }
    return this;
  }

   /**
   * Get powerPositionIn
   * @return powerPositionIn
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public List<PowerPosition> getPowerPositionIn() {
        return powerPositionIn.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_POWER_POSITION_IN)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<List<PowerPosition>> getPowerPositionIn_JsonNullable() {
    return powerPositionIn;
  }
  
  @JsonProperty(JSON_PROPERTY_POWER_POSITION_IN)
  public void setPowerPositionIn_JsonNullable(JsonNullable<List<PowerPosition>> powerPositionIn) {
    this.powerPositionIn = powerPositionIn;
  }

  public void setPowerPositionIn(List<PowerPosition> powerPositionIn) {
    this.powerPositionIn = JsonNullable.<List<PowerPosition>>of(powerPositionIn);
  }


  public BrickTopoWhereInput powerPositionNot(PowerPosition powerPositionNot) {
    this.powerPositionNot = JsonNullable.<PowerPosition>of(powerPositionNot);
    return this;
  }

   /**
   * Get powerPositionNot
   * @return powerPositionNot
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public PowerPosition getPowerPositionNot() {
        return powerPositionNot.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_POWER_POSITION_NOT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<PowerPosition> getPowerPositionNot_JsonNullable() {
    return powerPositionNot;
  }
  
  @JsonProperty(JSON_PROPERTY_POWER_POSITION_NOT)
  public void setPowerPositionNot_JsonNullable(JsonNullable<PowerPosition> powerPositionNot) {
    this.powerPositionNot = powerPositionNot;
  }

  public void setPowerPositionNot(PowerPosition powerPositionNot) {
    this.powerPositionNot = JsonNullable.<PowerPosition>of(powerPositionNot);
  }


  public BrickTopoWhereInput powerPositionNotIn(List<PowerPosition> powerPositionNotIn) {
    this.powerPositionNotIn = JsonNullable.<List<PowerPosition>>of(powerPositionNotIn);
    return this;
  }

  public BrickTopoWhereInput addPowerPositionNotInItem(PowerPosition powerPositionNotInItem) {
    if (this.powerPositionNotIn == null || !this.powerPositionNotIn.isPresent()) {
      this.powerPositionNotIn = JsonNullable.<List<PowerPosition>>of(new ArrayList<>());
    }
    try {
      this.powerPositionNotIn.get().add(powerPositionNotInItem);
    } catch (java.util.NoSuchElementException e) {
      // this can never happen, as we make sure above that the value is present
    }
    return this;
  }

   /**
   * Get powerPositionNotIn
   * @return powerPositionNotIn
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public List<PowerPosition> getPowerPositionNotIn() {
        return powerPositionNotIn.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_POWER_POSITION_NOT_IN)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<List<PowerPosition>> getPowerPositionNotIn_JsonNullable() {
    return powerPositionNotIn;
  }
  
  @JsonProperty(JSON_PROPERTY_POWER_POSITION_NOT_IN)
  public void setPowerPositionNotIn_JsonNullable(JsonNullable<List<PowerPosition>> powerPositionNotIn) {
    this.powerPositionNotIn = powerPositionNotIn;
  }

  public void setPowerPositionNotIn(List<PowerPosition> powerPositionNotIn) {
    this.powerPositionNotIn = JsonNullable.<List<PowerPosition>>of(powerPositionNotIn);
  }


  public BrickTopoWhereInput rackTopo(RackTopoWhereInput rackTopo) {
    this.rackTopo = JsonNullable.<RackTopoWhereInput>of(rackTopo);
    return this;
  }

   /**
   * Get rackTopo
   * @return rackTopo
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public RackTopoWhereInput getRackTopo() {
        return rackTopo.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_RACK_TOPO)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<RackTopoWhereInput> getRackTopo_JsonNullable() {
    return rackTopo;
  }
  
  @JsonProperty(JSON_PROPERTY_RACK_TOPO)
  public void setRackTopo_JsonNullable(JsonNullable<RackTopoWhereInput> rackTopo) {
    this.rackTopo = rackTopo;
  }

  public void setRackTopo(RackTopoWhereInput rackTopo) {
    this.rackTopo = JsonNullable.<RackTopoWhereInput>of(rackTopo);
  }


  /**
   * Return true if this BrickTopoWhereInput object is equal to o.
   */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    BrickTopoWhereInput brickTopoWhereInput = (BrickTopoWhereInput) o;
    return equalsNullable(this.AND, brickTopoWhereInput.AND) &&
        equalsNullable(this.cluster, brickTopoWhereInput.cluster) &&
        equalsNullable(this.clusterTopo, brickTopoWhereInput.clusterTopo) &&
        equalsNullable(this.height, brickTopoWhereInput.height) &&
        equalsNullable(this.heightGt, brickTopoWhereInput.heightGt) &&
        equalsNullable(this.heightGte, brickTopoWhereInput.heightGte) &&
        equalsNullable(this.heightIn, brickTopoWhereInput.heightIn) &&
        equalsNullable(this.heightLt, brickTopoWhereInput.heightLt) &&
        equalsNullable(this.heightLte, brickTopoWhereInput.heightLte) &&
        equalsNullable(this.heightNot, brickTopoWhereInput.heightNot) &&
        equalsNullable(this.heightNotIn, brickTopoWhereInput.heightNotIn) &&
        equalsNullable(this.id, brickTopoWhereInput.id) &&
        equalsNullable(this.idContains, brickTopoWhereInput.idContains) &&
        equalsNullable(this.idEndsWith, brickTopoWhereInput.idEndsWith) &&
        equalsNullable(this.idGt, brickTopoWhereInput.idGt) &&
        equalsNullable(this.idGte, brickTopoWhereInput.idGte) &&
        equalsNullable(this.idIn, brickTopoWhereInput.idIn) &&
        equalsNullable(this.idLt, brickTopoWhereInput.idLt) &&
        equalsNullable(this.idLte, brickTopoWhereInput.idLte) &&
        equalsNullable(this.idNot, brickTopoWhereInput.idNot) &&
        equalsNullable(this.idNotContains, brickTopoWhereInput.idNotContains) &&
        equalsNullable(this.idNotEndsWith, brickTopoWhereInput.idNotEndsWith) &&
        equalsNullable(this.idNotIn, brickTopoWhereInput.idNotIn) &&
        equalsNullable(this.idNotStartsWith, brickTopoWhereInput.idNotStartsWith) &&
        equalsNullable(this.idStartsWith, brickTopoWhereInput.idStartsWith) &&
        equalsNullable(this.localId, brickTopoWhereInput.localId) &&
        equalsNullable(this.localIdContains, brickTopoWhereInput.localIdContains) &&
        equalsNullable(this.localIdEndsWith, brickTopoWhereInput.localIdEndsWith) &&
        equalsNullable(this.localIdGt, brickTopoWhereInput.localIdGt) &&
        equalsNullable(this.localIdGte, brickTopoWhereInput.localIdGte) &&
        equalsNullable(this.localIdIn, brickTopoWhereInput.localIdIn) &&
        equalsNullable(this.localIdLt, brickTopoWhereInput.localIdLt) &&
        equalsNullable(this.localIdLte, brickTopoWhereInput.localIdLte) &&
        equalsNullable(this.localIdNot, brickTopoWhereInput.localIdNot) &&
        equalsNullable(this.localIdNotContains, brickTopoWhereInput.localIdNotContains) &&
        equalsNullable(this.localIdNotEndsWith, brickTopoWhereInput.localIdNotEndsWith) &&
        equalsNullable(this.localIdNotIn, brickTopoWhereInput.localIdNotIn) &&
        equalsNullable(this.localIdNotStartsWith, brickTopoWhereInput.localIdNotStartsWith) &&
        equalsNullable(this.localIdStartsWith, brickTopoWhereInput.localIdStartsWith) &&
        equalsNullable(this.model, brickTopoWhereInput.model) &&
        equalsNullable(this.modelContains, brickTopoWhereInput.modelContains) &&
        equalsNullable(this.modelEndsWith, brickTopoWhereInput.modelEndsWith) &&
        equalsNullable(this.modelGt, brickTopoWhereInput.modelGt) &&
        equalsNullable(this.modelGte, brickTopoWhereInput.modelGte) &&
        equalsNullable(this.modelIn, brickTopoWhereInput.modelIn) &&
        equalsNullable(this.modelLt, brickTopoWhereInput.modelLt) &&
        equalsNullable(this.modelLte, brickTopoWhereInput.modelLte) &&
        equalsNullable(this.modelNot, brickTopoWhereInput.modelNot) &&
        equalsNullable(this.modelNotContains, brickTopoWhereInput.modelNotContains) &&
        equalsNullable(this.modelNotEndsWith, brickTopoWhereInput.modelNotEndsWith) &&
        equalsNullable(this.modelNotIn, brickTopoWhereInput.modelNotIn) &&
        equalsNullable(this.modelNotStartsWith, brickTopoWhereInput.modelNotStartsWith) &&
        equalsNullable(this.modelStartsWith, brickTopoWhereInput.modelStartsWith) &&
        equalsNullable(this.name, brickTopoWhereInput.name) &&
        equalsNullable(this.nameContains, brickTopoWhereInput.nameContains) &&
        equalsNullable(this.nameEndsWith, brickTopoWhereInput.nameEndsWith) &&
        equalsNullable(this.nameGt, brickTopoWhereInput.nameGt) &&
        equalsNullable(this.nameGte, brickTopoWhereInput.nameGte) &&
        equalsNullable(this.nameIn, brickTopoWhereInput.nameIn) &&
        equalsNullable(this.nameLt, brickTopoWhereInput.nameLt) &&
        equalsNullable(this.nameLte, brickTopoWhereInput.nameLte) &&
        equalsNullable(this.nameNot, brickTopoWhereInput.nameNot) &&
        equalsNullable(this.nameNotContains, brickTopoWhereInput.nameNotContains) &&
        equalsNullable(this.nameNotEndsWith, brickTopoWhereInput.nameNotEndsWith) &&
        equalsNullable(this.nameNotIn, brickTopoWhereInput.nameNotIn) &&
        equalsNullable(this.nameNotStartsWith, brickTopoWhereInput.nameNotStartsWith) &&
        equalsNullable(this.nameStartsWith, brickTopoWhereInput.nameStartsWith) &&
        equalsNullable(this.nodeTopoesEvery, brickTopoWhereInput.nodeTopoesEvery) &&
        equalsNullable(this.nodeTopoesNone, brickTopoWhereInput.nodeTopoesNone) &&
        equalsNullable(this.nodeTopoesSome, brickTopoWhereInput.nodeTopoesSome) &&
        equalsNullable(this.NOT, brickTopoWhereInput.NOT) &&
        equalsNullable(this.OR, brickTopoWhereInput.OR) &&
        equalsNullable(this.position, brickTopoWhereInput.position) &&
        equalsNullable(this.positionGt, brickTopoWhereInput.positionGt) &&
        equalsNullable(this.positionGte, brickTopoWhereInput.positionGte) &&
        equalsNullable(this.positionIn, brickTopoWhereInput.positionIn) &&
        equalsNullable(this.positionLt, brickTopoWhereInput.positionLt) &&
        equalsNullable(this.positionLte, brickTopoWhereInput.positionLte) &&
        equalsNullable(this.positionNot, brickTopoWhereInput.positionNot) &&
        equalsNullable(this.positionNotIn, brickTopoWhereInput.positionNotIn) &&
        equalsNullable(this.powerLayout, brickTopoWhereInput.powerLayout) &&
        equalsNullable(this.powerLayoutIn, brickTopoWhereInput.powerLayoutIn) &&
        equalsNullable(this.powerLayoutNot, brickTopoWhereInput.powerLayoutNot) &&
        equalsNullable(this.powerLayoutNotIn, brickTopoWhereInput.powerLayoutNotIn) &&
        equalsNullable(this.powerPosition, brickTopoWhereInput.powerPosition) &&
        equalsNullable(this.powerPositionIn, brickTopoWhereInput.powerPositionIn) &&
        equalsNullable(this.powerPositionNot, brickTopoWhereInput.powerPositionNot) &&
        equalsNullable(this.powerPositionNotIn, brickTopoWhereInput.powerPositionNotIn) &&
        equalsNullable(this.rackTopo, brickTopoWhereInput.rackTopo);
  }

  private static <T> boolean equalsNullable(JsonNullable<T> a, JsonNullable<T> b) {
    return a == b || (a != null && b != null && a.isPresent() && b.isPresent() && Objects.deepEquals(a.get(), b.get()));
  }

  @Override
  public int hashCode() {
    return Objects.hash(hashCodeNullable(AND), hashCodeNullable(cluster), hashCodeNullable(clusterTopo), hashCodeNullable(height), hashCodeNullable(heightGt), hashCodeNullable(heightGte), hashCodeNullable(heightIn), hashCodeNullable(heightLt), hashCodeNullable(heightLte), hashCodeNullable(heightNot), hashCodeNullable(heightNotIn), hashCodeNullable(id), hashCodeNullable(idContains), hashCodeNullable(idEndsWith), hashCodeNullable(idGt), hashCodeNullable(idGte), hashCodeNullable(idIn), hashCodeNullable(idLt), hashCodeNullable(idLte), hashCodeNullable(idNot), hashCodeNullable(idNotContains), hashCodeNullable(idNotEndsWith), hashCodeNullable(idNotIn), hashCodeNullable(idNotStartsWith), hashCodeNullable(idStartsWith), hashCodeNullable(localId), hashCodeNullable(localIdContains), hashCodeNullable(localIdEndsWith), hashCodeNullable(localIdGt), hashCodeNullable(localIdGte), hashCodeNullable(localIdIn), hashCodeNullable(localIdLt), hashCodeNullable(localIdLte), hashCodeNullable(localIdNot), hashCodeNullable(localIdNotContains), hashCodeNullable(localIdNotEndsWith), hashCodeNullable(localIdNotIn), hashCodeNullable(localIdNotStartsWith), hashCodeNullable(localIdStartsWith), hashCodeNullable(model), hashCodeNullable(modelContains), hashCodeNullable(modelEndsWith), hashCodeNullable(modelGt), hashCodeNullable(modelGte), hashCodeNullable(modelIn), hashCodeNullable(modelLt), hashCodeNullable(modelLte), hashCodeNullable(modelNot), hashCodeNullable(modelNotContains), hashCodeNullable(modelNotEndsWith), hashCodeNullable(modelNotIn), hashCodeNullable(modelNotStartsWith), hashCodeNullable(modelStartsWith), hashCodeNullable(name), hashCodeNullable(nameContains), hashCodeNullable(nameEndsWith), hashCodeNullable(nameGt), hashCodeNullable(nameGte), hashCodeNullable(nameIn), hashCodeNullable(nameLt), hashCodeNullable(nameLte), hashCodeNullable(nameNot), hashCodeNullable(nameNotContains), hashCodeNullable(nameNotEndsWith), hashCodeNullable(nameNotIn), hashCodeNullable(nameNotStartsWith), hashCodeNullable(nameStartsWith), hashCodeNullable(nodeTopoesEvery), hashCodeNullable(nodeTopoesNone), hashCodeNullable(nodeTopoesSome), hashCodeNullable(NOT), hashCodeNullable(OR), hashCodeNullable(position), hashCodeNullable(positionGt), hashCodeNullable(positionGte), hashCodeNullable(positionIn), hashCodeNullable(positionLt), hashCodeNullable(positionLte), hashCodeNullable(positionNot), hashCodeNullable(positionNotIn), hashCodeNullable(powerLayout), hashCodeNullable(powerLayoutIn), hashCodeNullable(powerLayoutNot), hashCodeNullable(powerLayoutNotIn), hashCodeNullable(powerPosition), hashCodeNullable(powerPositionIn), hashCodeNullable(powerPositionNot), hashCodeNullable(powerPositionNotIn), hashCodeNullable(rackTopo));
  }

  private static <T> int hashCodeNullable(JsonNullable<T> a) {
    if (a == null) {
      return 1;
    }
    return a.isPresent() ? Arrays.deepHashCode(new Object[]{a.get()}) : 31;
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class BrickTopoWhereInput {\n");
    sb.append("    AND: ").append(toIndentedString(AND)).append("\n");
    sb.append("    cluster: ").append(toIndentedString(cluster)).append("\n");
    sb.append("    clusterTopo: ").append(toIndentedString(clusterTopo)).append("\n");
    sb.append("    height: ").append(toIndentedString(height)).append("\n");
    sb.append("    heightGt: ").append(toIndentedString(heightGt)).append("\n");
    sb.append("    heightGte: ").append(toIndentedString(heightGte)).append("\n");
    sb.append("    heightIn: ").append(toIndentedString(heightIn)).append("\n");
    sb.append("    heightLt: ").append(toIndentedString(heightLt)).append("\n");
    sb.append("    heightLte: ").append(toIndentedString(heightLte)).append("\n");
    sb.append("    heightNot: ").append(toIndentedString(heightNot)).append("\n");
    sb.append("    heightNotIn: ").append(toIndentedString(heightNotIn)).append("\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    idContains: ").append(toIndentedString(idContains)).append("\n");
    sb.append("    idEndsWith: ").append(toIndentedString(idEndsWith)).append("\n");
    sb.append("    idGt: ").append(toIndentedString(idGt)).append("\n");
    sb.append("    idGte: ").append(toIndentedString(idGte)).append("\n");
    sb.append("    idIn: ").append(toIndentedString(idIn)).append("\n");
    sb.append("    idLt: ").append(toIndentedString(idLt)).append("\n");
    sb.append("    idLte: ").append(toIndentedString(idLte)).append("\n");
    sb.append("    idNot: ").append(toIndentedString(idNot)).append("\n");
    sb.append("    idNotContains: ").append(toIndentedString(idNotContains)).append("\n");
    sb.append("    idNotEndsWith: ").append(toIndentedString(idNotEndsWith)).append("\n");
    sb.append("    idNotIn: ").append(toIndentedString(idNotIn)).append("\n");
    sb.append("    idNotStartsWith: ").append(toIndentedString(idNotStartsWith)).append("\n");
    sb.append("    idStartsWith: ").append(toIndentedString(idStartsWith)).append("\n");
    sb.append("    localId: ").append(toIndentedString(localId)).append("\n");
    sb.append("    localIdContains: ").append(toIndentedString(localIdContains)).append("\n");
    sb.append("    localIdEndsWith: ").append(toIndentedString(localIdEndsWith)).append("\n");
    sb.append("    localIdGt: ").append(toIndentedString(localIdGt)).append("\n");
    sb.append("    localIdGte: ").append(toIndentedString(localIdGte)).append("\n");
    sb.append("    localIdIn: ").append(toIndentedString(localIdIn)).append("\n");
    sb.append("    localIdLt: ").append(toIndentedString(localIdLt)).append("\n");
    sb.append("    localIdLte: ").append(toIndentedString(localIdLte)).append("\n");
    sb.append("    localIdNot: ").append(toIndentedString(localIdNot)).append("\n");
    sb.append("    localIdNotContains: ").append(toIndentedString(localIdNotContains)).append("\n");
    sb.append("    localIdNotEndsWith: ").append(toIndentedString(localIdNotEndsWith)).append("\n");
    sb.append("    localIdNotIn: ").append(toIndentedString(localIdNotIn)).append("\n");
    sb.append("    localIdNotStartsWith: ").append(toIndentedString(localIdNotStartsWith)).append("\n");
    sb.append("    localIdStartsWith: ").append(toIndentedString(localIdStartsWith)).append("\n");
    sb.append("    model: ").append(toIndentedString(model)).append("\n");
    sb.append("    modelContains: ").append(toIndentedString(modelContains)).append("\n");
    sb.append("    modelEndsWith: ").append(toIndentedString(modelEndsWith)).append("\n");
    sb.append("    modelGt: ").append(toIndentedString(modelGt)).append("\n");
    sb.append("    modelGte: ").append(toIndentedString(modelGte)).append("\n");
    sb.append("    modelIn: ").append(toIndentedString(modelIn)).append("\n");
    sb.append("    modelLt: ").append(toIndentedString(modelLt)).append("\n");
    sb.append("    modelLte: ").append(toIndentedString(modelLte)).append("\n");
    sb.append("    modelNot: ").append(toIndentedString(modelNot)).append("\n");
    sb.append("    modelNotContains: ").append(toIndentedString(modelNotContains)).append("\n");
    sb.append("    modelNotEndsWith: ").append(toIndentedString(modelNotEndsWith)).append("\n");
    sb.append("    modelNotIn: ").append(toIndentedString(modelNotIn)).append("\n");
    sb.append("    modelNotStartsWith: ").append(toIndentedString(modelNotStartsWith)).append("\n");
    sb.append("    modelStartsWith: ").append(toIndentedString(modelStartsWith)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    nameContains: ").append(toIndentedString(nameContains)).append("\n");
    sb.append("    nameEndsWith: ").append(toIndentedString(nameEndsWith)).append("\n");
    sb.append("    nameGt: ").append(toIndentedString(nameGt)).append("\n");
    sb.append("    nameGte: ").append(toIndentedString(nameGte)).append("\n");
    sb.append("    nameIn: ").append(toIndentedString(nameIn)).append("\n");
    sb.append("    nameLt: ").append(toIndentedString(nameLt)).append("\n");
    sb.append("    nameLte: ").append(toIndentedString(nameLte)).append("\n");
    sb.append("    nameNot: ").append(toIndentedString(nameNot)).append("\n");
    sb.append("    nameNotContains: ").append(toIndentedString(nameNotContains)).append("\n");
    sb.append("    nameNotEndsWith: ").append(toIndentedString(nameNotEndsWith)).append("\n");
    sb.append("    nameNotIn: ").append(toIndentedString(nameNotIn)).append("\n");
    sb.append("    nameNotStartsWith: ").append(toIndentedString(nameNotStartsWith)).append("\n");
    sb.append("    nameStartsWith: ").append(toIndentedString(nameStartsWith)).append("\n");
    sb.append("    nodeTopoesEvery: ").append(toIndentedString(nodeTopoesEvery)).append("\n");
    sb.append("    nodeTopoesNone: ").append(toIndentedString(nodeTopoesNone)).append("\n");
    sb.append("    nodeTopoesSome: ").append(toIndentedString(nodeTopoesSome)).append("\n");
    sb.append("    NOT: ").append(toIndentedString(NOT)).append("\n");
    sb.append("    OR: ").append(toIndentedString(OR)).append("\n");
    sb.append("    position: ").append(toIndentedString(position)).append("\n");
    sb.append("    positionGt: ").append(toIndentedString(positionGt)).append("\n");
    sb.append("    positionGte: ").append(toIndentedString(positionGte)).append("\n");
    sb.append("    positionIn: ").append(toIndentedString(positionIn)).append("\n");
    sb.append("    positionLt: ").append(toIndentedString(positionLt)).append("\n");
    sb.append("    positionLte: ").append(toIndentedString(positionLte)).append("\n");
    sb.append("    positionNot: ").append(toIndentedString(positionNot)).append("\n");
    sb.append("    positionNotIn: ").append(toIndentedString(positionNotIn)).append("\n");
    sb.append("    powerLayout: ").append(toIndentedString(powerLayout)).append("\n");
    sb.append("    powerLayoutIn: ").append(toIndentedString(powerLayoutIn)).append("\n");
    sb.append("    powerLayoutNot: ").append(toIndentedString(powerLayoutNot)).append("\n");
    sb.append("    powerLayoutNotIn: ").append(toIndentedString(powerLayoutNotIn)).append("\n");
    sb.append("    powerPosition: ").append(toIndentedString(powerPosition)).append("\n");
    sb.append("    powerPositionIn: ").append(toIndentedString(powerPositionIn)).append("\n");
    sb.append("    powerPositionNot: ").append(toIndentedString(powerPositionNot)).append("\n");
    sb.append("    powerPositionNotIn: ").append(toIndentedString(powerPositionNotIn)).append("\n");
    sb.append("    rackTopo: ").append(toIndentedString(rackTopo)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

