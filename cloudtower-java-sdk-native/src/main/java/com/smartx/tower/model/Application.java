/*
 * Tower SDK API
 * cloudtower operation API and SDK
 *
 * The version of the OpenAPI document: 1.7.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.smartx.tower.model;

import java.util.Objects;
import java.util.Arrays;
import java.util.Map;
import java.util.HashMap;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import com.smartx.tower.model.AlertRuleCluster;
import com.smartx.tower.model.ApplicationState;
import com.smartx.tower.model.ApplicationType;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import org.openapitools.jackson.nullable.JsonNullable;
import com.fasterxml.jackson.annotation.JsonIgnore;
import org.openapitools.jackson.nullable.JsonNullable;
import java.util.NoSuchElementException;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;


/**
 * Application
 */
@JsonPropertyOrder({
  Application.JSON_PROPERTY_CLUSTER,
  Application.JSON_PROPERTY_ERROR_MESSAGE,
  Application.JSON_PROPERTY_ID,
  Application.JSON_PROPERTY_IMAGE_NAME,
  Application.JSON_PROPERTY_LOCAL_ID,
  Application.JSON_PROPERTY_MEMORY,
  Application.JSON_PROPERTY_STATE,
  Application.JSON_PROPERTY_STORAGE_IP,
  Application.JSON_PROPERTY_TYPE,
  Application.JSON_PROPERTY_UPDATE_TIME,
  Application.JSON_PROPERTY_VCPU,
  Application.JSON_PROPERTY_VERSION,
  Application.JSON_PROPERTY_VOLUME_SIZE
})
@javax.annotation.processing.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2021-10-27T15:59:14.939791800+08:00[Asia/Shanghai]")
public class Application {
  public static final String JSON_PROPERTY_CLUSTER = "cluster";
  private AlertRuleCluster cluster;

  public static final String JSON_PROPERTY_ERROR_MESSAGE = "error_message";
  private JsonNullable<String> errorMessage = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_ID = "id";
  private String id;

  public static final String JSON_PROPERTY_IMAGE_NAME = "image_name";
  private JsonNullable<String> imageName = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_LOCAL_ID = "local_id";
  private String localId;

  public static final String JSON_PROPERTY_MEMORY = "memory";
  private Double memory;

  public static final String JSON_PROPERTY_STATE = "state";
  private ApplicationState state;

  public static final String JSON_PROPERTY_STORAGE_IP = "storage_ip";
  private String storageIp;

  public static final String JSON_PROPERTY_TYPE = "type";
  private ApplicationType type;

  public static final String JSON_PROPERTY_UPDATE_TIME = "update_time";
  private JsonNullable<String> updateTime = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_VCPU = "vcpu";
  private Double vcpu;

  public static final String JSON_PROPERTY_VERSION = "version";
  private String version;

  public static final String JSON_PROPERTY_VOLUME_SIZE = "volume_size";
  private Double volumeSize;


  public Application cluster(AlertRuleCluster cluster) {
    this.cluster = cluster;
    return this;
  }

   /**
   * Get cluster
   * @return cluster
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")
  @JsonProperty(JSON_PROPERTY_CLUSTER)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public AlertRuleCluster getCluster() {
    return cluster;
  }


  @JsonProperty(JSON_PROPERTY_CLUSTER)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setCluster(AlertRuleCluster cluster) {
    this.cluster = cluster;
  }


  public Application errorMessage(String errorMessage) {
    this.errorMessage = JsonNullable.<String>of(errorMessage);
    return this;
  }

   /**
   * Get errorMessage
   * @return errorMessage
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getErrorMessage() {
        return errorMessage.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_ERROR_MESSAGE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getErrorMessage_JsonNullable() {
    return errorMessage;
  }
  
  @JsonProperty(JSON_PROPERTY_ERROR_MESSAGE)
  public void setErrorMessage_JsonNullable(JsonNullable<String> errorMessage) {
    this.errorMessage = errorMessage;
  }

  public void setErrorMessage(String errorMessage) {
    this.errorMessage = JsonNullable.<String>of(errorMessage);
  }


  public Application id(String id) {
    this.id = id;
    return this;
  }

   /**
   * Get id
   * @return id
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")
  @JsonProperty(JSON_PROPERTY_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getId() {
    return id;
  }


  @JsonProperty(JSON_PROPERTY_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setId(String id) {
    this.id = id;
  }


  public Application imageName(String imageName) {
    this.imageName = JsonNullable.<String>of(imageName);
    return this;
  }

   /**
   * Get imageName
   * @return imageName
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getImageName() {
        return imageName.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_IMAGE_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getImageName_JsonNullable() {
    return imageName;
  }
  
  @JsonProperty(JSON_PROPERTY_IMAGE_NAME)
  public void setImageName_JsonNullable(JsonNullable<String> imageName) {
    this.imageName = imageName;
  }

  public void setImageName(String imageName) {
    this.imageName = JsonNullable.<String>of(imageName);
  }


  public Application localId(String localId) {
    this.localId = localId;
    return this;
  }

   /**
   * Get localId
   * @return localId
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")
  @JsonProperty(JSON_PROPERTY_LOCAL_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getLocalId() {
    return localId;
  }


  @JsonProperty(JSON_PROPERTY_LOCAL_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setLocalId(String localId) {
    this.localId = localId;
  }


  public Application memory(Double memory) {
    this.memory = memory;
    return this;
  }

   /**
   * Get memory
   * @return memory
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")
  @JsonProperty(JSON_PROPERTY_MEMORY)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public Double getMemory() {
    return memory;
  }


  @JsonProperty(JSON_PROPERTY_MEMORY)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setMemory(Double memory) {
    this.memory = memory;
  }


  public Application state(ApplicationState state) {
    this.state = state;
    return this;
  }

   /**
   * Get state
   * @return state
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")
  @JsonProperty(JSON_PROPERTY_STATE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public ApplicationState getState() {
    return state;
  }


  @JsonProperty(JSON_PROPERTY_STATE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setState(ApplicationState state) {
    this.state = state;
  }


  public Application storageIp(String storageIp) {
    this.storageIp = storageIp;
    return this;
  }

   /**
   * Get storageIp
   * @return storageIp
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")
  @JsonProperty(JSON_PROPERTY_STORAGE_IP)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getStorageIp() {
    return storageIp;
  }


  @JsonProperty(JSON_PROPERTY_STORAGE_IP)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setStorageIp(String storageIp) {
    this.storageIp = storageIp;
  }


  public Application type(ApplicationType type) {
    this.type = type;
    return this;
  }

   /**
   * Get type
   * @return type
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")
  @JsonProperty(JSON_PROPERTY_TYPE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public ApplicationType getType() {
    return type;
  }


  @JsonProperty(JSON_PROPERTY_TYPE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setType(ApplicationType type) {
    this.type = type;
  }


  public Application updateTime(String updateTime) {
    this.updateTime = JsonNullable.<String>of(updateTime);
    return this;
  }

   /**
   * Get updateTime
   * @return updateTime
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getUpdateTime() {
        return updateTime.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_UPDATE_TIME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getUpdateTime_JsonNullable() {
    return updateTime;
  }
  
  @JsonProperty(JSON_PROPERTY_UPDATE_TIME)
  public void setUpdateTime_JsonNullable(JsonNullable<String> updateTime) {
    this.updateTime = updateTime;
  }

  public void setUpdateTime(String updateTime) {
    this.updateTime = JsonNullable.<String>of(updateTime);
  }


  public Application vcpu(Double vcpu) {
    this.vcpu = vcpu;
    return this;
  }

   /**
   * Get vcpu
   * @return vcpu
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")
  @JsonProperty(JSON_PROPERTY_VCPU)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public Double getVcpu() {
    return vcpu;
  }


  @JsonProperty(JSON_PROPERTY_VCPU)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setVcpu(Double vcpu) {
    this.vcpu = vcpu;
  }


  public Application version(String version) {
    this.version = version;
    return this;
  }

   /**
   * Get version
   * @return version
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")
  @JsonProperty(JSON_PROPERTY_VERSION)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getVersion() {
    return version;
  }


  @JsonProperty(JSON_PROPERTY_VERSION)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setVersion(String version) {
    this.version = version;
  }


  public Application volumeSize(Double volumeSize) {
    this.volumeSize = volumeSize;
    return this;
  }

   /**
   * Get volumeSize
   * @return volumeSize
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")
  @JsonProperty(JSON_PROPERTY_VOLUME_SIZE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public Double getVolumeSize() {
    return volumeSize;
  }


  @JsonProperty(JSON_PROPERTY_VOLUME_SIZE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setVolumeSize(Double volumeSize) {
    this.volumeSize = volumeSize;
  }


  /**
   * Return true if this Application object is equal to o.
   */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Application application = (Application) o;
    return Objects.equals(this.cluster, application.cluster) &&
        equalsNullable(this.errorMessage, application.errorMessage) &&
        Objects.equals(this.id, application.id) &&
        equalsNullable(this.imageName, application.imageName) &&
        Objects.equals(this.localId, application.localId) &&
        Objects.equals(this.memory, application.memory) &&
        Objects.equals(this.state, application.state) &&
        Objects.equals(this.storageIp, application.storageIp) &&
        Objects.equals(this.type, application.type) &&
        equalsNullable(this.updateTime, application.updateTime) &&
        Objects.equals(this.vcpu, application.vcpu) &&
        Objects.equals(this.version, application.version) &&
        Objects.equals(this.volumeSize, application.volumeSize);
  }

  private static <T> boolean equalsNullable(JsonNullable<T> a, JsonNullable<T> b) {
    return a == b || (a != null && b != null && a.isPresent() && b.isPresent() && Objects.deepEquals(a.get(), b.get()));
  }

  @Override
  public int hashCode() {
    return Objects.hash(cluster, hashCodeNullable(errorMessage), id, hashCodeNullable(imageName), localId, memory, state, storageIp, type, hashCodeNullable(updateTime), vcpu, version, volumeSize);
  }

  private static <T> int hashCodeNullable(JsonNullable<T> a) {
    if (a == null) {
      return 1;
    }
    return a.isPresent() ? Arrays.deepHashCode(new Object[]{a.get()}) : 31;
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Application {\n");
    sb.append("    cluster: ").append(toIndentedString(cluster)).append("\n");
    sb.append("    errorMessage: ").append(toIndentedString(errorMessage)).append("\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    imageName: ").append(toIndentedString(imageName)).append("\n");
    sb.append("    localId: ").append(toIndentedString(localId)).append("\n");
    sb.append("    memory: ").append(toIndentedString(memory)).append("\n");
    sb.append("    state: ").append(toIndentedString(state)).append("\n");
    sb.append("    storageIp: ").append(toIndentedString(storageIp)).append("\n");
    sb.append("    type: ").append(toIndentedString(type)).append("\n");
    sb.append("    updateTime: ").append(toIndentedString(updateTime)).append("\n");
    sb.append("    vcpu: ").append(toIndentedString(vcpu)).append("\n");
    sb.append("    version: ").append(toIndentedString(version)).append("\n");
    sb.append("    volumeSize: ").append(toIndentedString(volumeSize)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

