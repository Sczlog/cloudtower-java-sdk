/*
 * Tower SDK API
 * cloudtower operation API and SDK
 *
 * The version of the OpenAPI document: 1.7.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.smartx.tower.model;

import java.util.Objects;
import java.util.Arrays;
import java.util.Map;
import java.util.HashMap;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import com.smartx.tower.model.HostWhereInput;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.util.ArrayList;
import java.util.List;
import org.openapitools.jackson.nullable.JsonNullable;
import com.fasterxml.jackson.annotation.JsonIgnore;
import org.openapitools.jackson.nullable.JsonNullable;
import java.util.NoSuchElementException;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;


/**
 * IpmiWhereInput
 */
@JsonPropertyOrder({
  IpmiWhereInput.JSON_PROPERTY_A_N_D,
  IpmiWhereInput.JSON_PROPERTY_HOST,
  IpmiWhereInput.JSON_PROPERTY_ID,
  IpmiWhereInput.JSON_PROPERTY_ID_CONTAINS,
  IpmiWhereInput.JSON_PROPERTY_ID_ENDS_WITH,
  IpmiWhereInput.JSON_PROPERTY_ID_GT,
  IpmiWhereInput.JSON_PROPERTY_ID_GTE,
  IpmiWhereInput.JSON_PROPERTY_ID_IN,
  IpmiWhereInput.JSON_PROPERTY_ID_LT,
  IpmiWhereInput.JSON_PROPERTY_ID_LTE,
  IpmiWhereInput.JSON_PROPERTY_ID_NOT,
  IpmiWhereInput.JSON_PROPERTY_ID_NOT_CONTAINS,
  IpmiWhereInput.JSON_PROPERTY_ID_NOT_ENDS_WITH,
  IpmiWhereInput.JSON_PROPERTY_ID_NOT_IN,
  IpmiWhereInput.JSON_PROPERTY_ID_NOT_STARTS_WITH,
  IpmiWhereInput.JSON_PROPERTY_ID_STARTS_WITH,
  IpmiWhereInput.JSON_PROPERTY_IP,
  IpmiWhereInput.JSON_PROPERTY_IP_CONTAINS,
  IpmiWhereInput.JSON_PROPERTY_IP_ENDS_WITH,
  IpmiWhereInput.JSON_PROPERTY_IP_GT,
  IpmiWhereInput.JSON_PROPERTY_IP_GTE,
  IpmiWhereInput.JSON_PROPERTY_IP_IN,
  IpmiWhereInput.JSON_PROPERTY_IP_LT,
  IpmiWhereInput.JSON_PROPERTY_IP_LTE,
  IpmiWhereInput.JSON_PROPERTY_IP_NOT,
  IpmiWhereInput.JSON_PROPERTY_IP_NOT_CONTAINS,
  IpmiWhereInput.JSON_PROPERTY_IP_NOT_ENDS_WITH,
  IpmiWhereInput.JSON_PROPERTY_IP_NOT_IN,
  IpmiWhereInput.JSON_PROPERTY_IP_NOT_STARTS_WITH,
  IpmiWhereInput.JSON_PROPERTY_IP_STARTS_WITH,
  IpmiWhereInput.JSON_PROPERTY_LOCAL_ID,
  IpmiWhereInput.JSON_PROPERTY_LOCAL_ID_CONTAINS,
  IpmiWhereInput.JSON_PROPERTY_LOCAL_ID_ENDS_WITH,
  IpmiWhereInput.JSON_PROPERTY_LOCAL_ID_GT,
  IpmiWhereInput.JSON_PROPERTY_LOCAL_ID_GTE,
  IpmiWhereInput.JSON_PROPERTY_LOCAL_ID_IN,
  IpmiWhereInput.JSON_PROPERTY_LOCAL_ID_LT,
  IpmiWhereInput.JSON_PROPERTY_LOCAL_ID_LTE,
  IpmiWhereInput.JSON_PROPERTY_LOCAL_ID_NOT,
  IpmiWhereInput.JSON_PROPERTY_LOCAL_ID_NOT_CONTAINS,
  IpmiWhereInput.JSON_PROPERTY_LOCAL_ID_NOT_ENDS_WITH,
  IpmiWhereInput.JSON_PROPERTY_LOCAL_ID_NOT_IN,
  IpmiWhereInput.JSON_PROPERTY_LOCAL_ID_NOT_STARTS_WITH,
  IpmiWhereInput.JSON_PROPERTY_LOCAL_ID_STARTS_WITH,
  IpmiWhereInput.JSON_PROPERTY_N_O_T,
  IpmiWhereInput.JSON_PROPERTY_O_R,
  IpmiWhereInput.JSON_PROPERTY_USERNAME,
  IpmiWhereInput.JSON_PROPERTY_USERNAME_CONTAINS,
  IpmiWhereInput.JSON_PROPERTY_USERNAME_ENDS_WITH,
  IpmiWhereInput.JSON_PROPERTY_USERNAME_GT,
  IpmiWhereInput.JSON_PROPERTY_USERNAME_GTE,
  IpmiWhereInput.JSON_PROPERTY_USERNAME_IN,
  IpmiWhereInput.JSON_PROPERTY_USERNAME_LT,
  IpmiWhereInput.JSON_PROPERTY_USERNAME_LTE,
  IpmiWhereInput.JSON_PROPERTY_USERNAME_NOT,
  IpmiWhereInput.JSON_PROPERTY_USERNAME_NOT_CONTAINS,
  IpmiWhereInput.JSON_PROPERTY_USERNAME_NOT_ENDS_WITH,
  IpmiWhereInput.JSON_PROPERTY_USERNAME_NOT_IN,
  IpmiWhereInput.JSON_PROPERTY_USERNAME_NOT_STARTS_WITH,
  IpmiWhereInput.JSON_PROPERTY_USERNAME_STARTS_WITH,
  IpmiWhereInput.JSON_PROPERTY_VALID,
  IpmiWhereInput.JSON_PROPERTY_VALID_NOT
})
@javax.annotation.processing.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2021-10-27T15:59:14.939791800+08:00[Asia/Shanghai]")
public class IpmiWhereInput {
  public static final String JSON_PROPERTY_A_N_D = "AND";
  private JsonNullable<List<IpmiWhereInput>> AND = JsonNullable.<List<IpmiWhereInput>>undefined();

  public static final String JSON_PROPERTY_HOST = "host";
  private JsonNullable<HostWhereInput> host = JsonNullable.<HostWhereInput>undefined();

  public static final String JSON_PROPERTY_ID = "id";
  private JsonNullable<String> id = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_ID_CONTAINS = "id_contains";
  private JsonNullable<String> idContains = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_ID_ENDS_WITH = "id_ends_with";
  private JsonNullable<String> idEndsWith = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_ID_GT = "id_gt";
  private JsonNullable<String> idGt = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_ID_GTE = "id_gte";
  private JsonNullable<String> idGte = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_ID_IN = "id_in";
  private JsonNullable<List<String>> idIn = JsonNullable.<List<String>>undefined();

  public static final String JSON_PROPERTY_ID_LT = "id_lt";
  private JsonNullable<String> idLt = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_ID_LTE = "id_lte";
  private JsonNullable<String> idLte = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_ID_NOT = "id_not";
  private JsonNullable<String> idNot = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_ID_NOT_CONTAINS = "id_not_contains";
  private JsonNullable<String> idNotContains = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_ID_NOT_ENDS_WITH = "id_not_ends_with";
  private JsonNullable<String> idNotEndsWith = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_ID_NOT_IN = "id_not_in";
  private JsonNullable<List<String>> idNotIn = JsonNullable.<List<String>>undefined();

  public static final String JSON_PROPERTY_ID_NOT_STARTS_WITH = "id_not_starts_with";
  private JsonNullable<String> idNotStartsWith = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_ID_STARTS_WITH = "id_starts_with";
  private JsonNullable<String> idStartsWith = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_IP = "ip";
  private JsonNullable<String> ip = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_IP_CONTAINS = "ip_contains";
  private JsonNullable<String> ipContains = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_IP_ENDS_WITH = "ip_ends_with";
  private JsonNullable<String> ipEndsWith = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_IP_GT = "ip_gt";
  private JsonNullable<String> ipGt = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_IP_GTE = "ip_gte";
  private JsonNullable<String> ipGte = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_IP_IN = "ip_in";
  private JsonNullable<List<String>> ipIn = JsonNullable.<List<String>>undefined();

  public static final String JSON_PROPERTY_IP_LT = "ip_lt";
  private JsonNullable<String> ipLt = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_IP_LTE = "ip_lte";
  private JsonNullable<String> ipLte = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_IP_NOT = "ip_not";
  private JsonNullable<String> ipNot = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_IP_NOT_CONTAINS = "ip_not_contains";
  private JsonNullable<String> ipNotContains = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_IP_NOT_ENDS_WITH = "ip_not_ends_with";
  private JsonNullable<String> ipNotEndsWith = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_IP_NOT_IN = "ip_not_in";
  private JsonNullable<List<String>> ipNotIn = JsonNullable.<List<String>>undefined();

  public static final String JSON_PROPERTY_IP_NOT_STARTS_WITH = "ip_not_starts_with";
  private JsonNullable<String> ipNotStartsWith = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_IP_STARTS_WITH = "ip_starts_with";
  private JsonNullable<String> ipStartsWith = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_LOCAL_ID = "local_id";
  private JsonNullable<String> localId = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_LOCAL_ID_CONTAINS = "local_id_contains";
  private JsonNullable<String> localIdContains = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_LOCAL_ID_ENDS_WITH = "local_id_ends_with";
  private JsonNullable<String> localIdEndsWith = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_LOCAL_ID_GT = "local_id_gt";
  private JsonNullable<String> localIdGt = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_LOCAL_ID_GTE = "local_id_gte";
  private JsonNullable<String> localIdGte = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_LOCAL_ID_IN = "local_id_in";
  private JsonNullable<List<String>> localIdIn = JsonNullable.<List<String>>undefined();

  public static final String JSON_PROPERTY_LOCAL_ID_LT = "local_id_lt";
  private JsonNullable<String> localIdLt = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_LOCAL_ID_LTE = "local_id_lte";
  private JsonNullable<String> localIdLte = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_LOCAL_ID_NOT = "local_id_not";
  private JsonNullable<String> localIdNot = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_LOCAL_ID_NOT_CONTAINS = "local_id_not_contains";
  private JsonNullable<String> localIdNotContains = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_LOCAL_ID_NOT_ENDS_WITH = "local_id_not_ends_with";
  private JsonNullable<String> localIdNotEndsWith = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_LOCAL_ID_NOT_IN = "local_id_not_in";
  private JsonNullable<List<String>> localIdNotIn = JsonNullable.<List<String>>undefined();

  public static final String JSON_PROPERTY_LOCAL_ID_NOT_STARTS_WITH = "local_id_not_starts_with";
  private JsonNullable<String> localIdNotStartsWith = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_LOCAL_ID_STARTS_WITH = "local_id_starts_with";
  private JsonNullable<String> localIdStartsWith = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_N_O_T = "NOT";
  private JsonNullable<List<IpmiWhereInput>> NOT = JsonNullable.<List<IpmiWhereInput>>undefined();

  public static final String JSON_PROPERTY_O_R = "OR";
  private JsonNullable<List<IpmiWhereInput>> OR = JsonNullable.<List<IpmiWhereInput>>undefined();

  public static final String JSON_PROPERTY_USERNAME = "username";
  private JsonNullable<String> username = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_USERNAME_CONTAINS = "username_contains";
  private JsonNullable<String> usernameContains = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_USERNAME_ENDS_WITH = "username_ends_with";
  private JsonNullable<String> usernameEndsWith = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_USERNAME_GT = "username_gt";
  private JsonNullable<String> usernameGt = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_USERNAME_GTE = "username_gte";
  private JsonNullable<String> usernameGte = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_USERNAME_IN = "username_in";
  private JsonNullable<List<String>> usernameIn = JsonNullable.<List<String>>undefined();

  public static final String JSON_PROPERTY_USERNAME_LT = "username_lt";
  private JsonNullable<String> usernameLt = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_USERNAME_LTE = "username_lte";
  private JsonNullable<String> usernameLte = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_USERNAME_NOT = "username_not";
  private JsonNullable<String> usernameNot = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_USERNAME_NOT_CONTAINS = "username_not_contains";
  private JsonNullable<String> usernameNotContains = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_USERNAME_NOT_ENDS_WITH = "username_not_ends_with";
  private JsonNullable<String> usernameNotEndsWith = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_USERNAME_NOT_IN = "username_not_in";
  private JsonNullable<List<String>> usernameNotIn = JsonNullable.<List<String>>undefined();

  public static final String JSON_PROPERTY_USERNAME_NOT_STARTS_WITH = "username_not_starts_with";
  private JsonNullable<String> usernameNotStartsWith = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_USERNAME_STARTS_WITH = "username_starts_with";
  private JsonNullable<String> usernameStartsWith = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_VALID = "valid";
  private JsonNullable<Boolean> valid = JsonNullable.<Boolean>undefined();

  public static final String JSON_PROPERTY_VALID_NOT = "valid_not";
  private JsonNullable<Boolean> validNot = JsonNullable.<Boolean>undefined();


  public IpmiWhereInput AND(List<IpmiWhereInput> AND) {
    this.AND = JsonNullable.<List<IpmiWhereInput>>of(AND);
    return this;
  }

  public IpmiWhereInput addANDItem(IpmiWhereInput ANDItem) {
    if (this.AND == null || !this.AND.isPresent()) {
      this.AND = JsonNullable.<List<IpmiWhereInput>>of(new ArrayList<>());
    }
    try {
      this.AND.get().add(ANDItem);
    } catch (java.util.NoSuchElementException e) {
      // this can never happen, as we make sure above that the value is present
    }
    return this;
  }

   /**
   * Get AND
   * @return AND
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public List<IpmiWhereInput> getAND() {
        return AND.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_A_N_D)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<List<IpmiWhereInput>> getAND_JsonNullable() {
    return AND;
  }
  
  @JsonProperty(JSON_PROPERTY_A_N_D)
  public void setAND_JsonNullable(JsonNullable<List<IpmiWhereInput>> AND) {
    this.AND = AND;
  }

  public void setAND(List<IpmiWhereInput> AND) {
    this.AND = JsonNullable.<List<IpmiWhereInput>>of(AND);
  }


  public IpmiWhereInput host(HostWhereInput host) {
    this.host = JsonNullable.<HostWhereInput>of(host);
    return this;
  }

   /**
   * Get host
   * @return host
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public HostWhereInput getHost() {
        return host.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_HOST)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<HostWhereInput> getHost_JsonNullable() {
    return host;
  }
  
  @JsonProperty(JSON_PROPERTY_HOST)
  public void setHost_JsonNullable(JsonNullable<HostWhereInput> host) {
    this.host = host;
  }

  public void setHost(HostWhereInput host) {
    this.host = JsonNullable.<HostWhereInput>of(host);
  }


  public IpmiWhereInput id(String id) {
    this.id = JsonNullable.<String>of(id);
    return this;
  }

   /**
   * Get id
   * @return id
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getId() {
        return id.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getId_JsonNullable() {
    return id;
  }
  
  @JsonProperty(JSON_PROPERTY_ID)
  public void setId_JsonNullable(JsonNullable<String> id) {
    this.id = id;
  }

  public void setId(String id) {
    this.id = JsonNullable.<String>of(id);
  }


  public IpmiWhereInput idContains(String idContains) {
    this.idContains = JsonNullable.<String>of(idContains);
    return this;
  }

   /**
   * Get idContains
   * @return idContains
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getIdContains() {
        return idContains.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_ID_CONTAINS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getIdContains_JsonNullable() {
    return idContains;
  }
  
  @JsonProperty(JSON_PROPERTY_ID_CONTAINS)
  public void setIdContains_JsonNullable(JsonNullable<String> idContains) {
    this.idContains = idContains;
  }

  public void setIdContains(String idContains) {
    this.idContains = JsonNullable.<String>of(idContains);
  }


  public IpmiWhereInput idEndsWith(String idEndsWith) {
    this.idEndsWith = JsonNullable.<String>of(idEndsWith);
    return this;
  }

   /**
   * Get idEndsWith
   * @return idEndsWith
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getIdEndsWith() {
        return idEndsWith.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_ID_ENDS_WITH)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getIdEndsWith_JsonNullable() {
    return idEndsWith;
  }
  
  @JsonProperty(JSON_PROPERTY_ID_ENDS_WITH)
  public void setIdEndsWith_JsonNullable(JsonNullable<String> idEndsWith) {
    this.idEndsWith = idEndsWith;
  }

  public void setIdEndsWith(String idEndsWith) {
    this.idEndsWith = JsonNullable.<String>of(idEndsWith);
  }


  public IpmiWhereInput idGt(String idGt) {
    this.idGt = JsonNullable.<String>of(idGt);
    return this;
  }

   /**
   * Get idGt
   * @return idGt
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getIdGt() {
        return idGt.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_ID_GT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getIdGt_JsonNullable() {
    return idGt;
  }
  
  @JsonProperty(JSON_PROPERTY_ID_GT)
  public void setIdGt_JsonNullable(JsonNullable<String> idGt) {
    this.idGt = idGt;
  }

  public void setIdGt(String idGt) {
    this.idGt = JsonNullable.<String>of(idGt);
  }


  public IpmiWhereInput idGte(String idGte) {
    this.idGte = JsonNullable.<String>of(idGte);
    return this;
  }

   /**
   * Get idGte
   * @return idGte
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getIdGte() {
        return idGte.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_ID_GTE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getIdGte_JsonNullable() {
    return idGte;
  }
  
  @JsonProperty(JSON_PROPERTY_ID_GTE)
  public void setIdGte_JsonNullable(JsonNullable<String> idGte) {
    this.idGte = idGte;
  }

  public void setIdGte(String idGte) {
    this.idGte = JsonNullable.<String>of(idGte);
  }


  public IpmiWhereInput idIn(List<String> idIn) {
    this.idIn = JsonNullable.<List<String>>of(idIn);
    return this;
  }

  public IpmiWhereInput addIdInItem(String idInItem) {
    if (this.idIn == null || !this.idIn.isPresent()) {
      this.idIn = JsonNullable.<List<String>>of(new ArrayList<>());
    }
    try {
      this.idIn.get().add(idInItem);
    } catch (java.util.NoSuchElementException e) {
      // this can never happen, as we make sure above that the value is present
    }
    return this;
  }

   /**
   * Get idIn
   * @return idIn
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public List<String> getIdIn() {
        return idIn.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_ID_IN)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<List<String>> getIdIn_JsonNullable() {
    return idIn;
  }
  
  @JsonProperty(JSON_PROPERTY_ID_IN)
  public void setIdIn_JsonNullable(JsonNullable<List<String>> idIn) {
    this.idIn = idIn;
  }

  public void setIdIn(List<String> idIn) {
    this.idIn = JsonNullable.<List<String>>of(idIn);
  }


  public IpmiWhereInput idLt(String idLt) {
    this.idLt = JsonNullable.<String>of(idLt);
    return this;
  }

   /**
   * Get idLt
   * @return idLt
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getIdLt() {
        return idLt.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_ID_LT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getIdLt_JsonNullable() {
    return idLt;
  }
  
  @JsonProperty(JSON_PROPERTY_ID_LT)
  public void setIdLt_JsonNullable(JsonNullable<String> idLt) {
    this.idLt = idLt;
  }

  public void setIdLt(String idLt) {
    this.idLt = JsonNullable.<String>of(idLt);
  }


  public IpmiWhereInput idLte(String idLte) {
    this.idLte = JsonNullable.<String>of(idLte);
    return this;
  }

   /**
   * Get idLte
   * @return idLte
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getIdLte() {
        return idLte.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_ID_LTE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getIdLte_JsonNullable() {
    return idLte;
  }
  
  @JsonProperty(JSON_PROPERTY_ID_LTE)
  public void setIdLte_JsonNullable(JsonNullable<String> idLte) {
    this.idLte = idLte;
  }

  public void setIdLte(String idLte) {
    this.idLte = JsonNullable.<String>of(idLte);
  }


  public IpmiWhereInput idNot(String idNot) {
    this.idNot = JsonNullable.<String>of(idNot);
    return this;
  }

   /**
   * Get idNot
   * @return idNot
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getIdNot() {
        return idNot.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_ID_NOT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getIdNot_JsonNullable() {
    return idNot;
  }
  
  @JsonProperty(JSON_PROPERTY_ID_NOT)
  public void setIdNot_JsonNullable(JsonNullable<String> idNot) {
    this.idNot = idNot;
  }

  public void setIdNot(String idNot) {
    this.idNot = JsonNullable.<String>of(idNot);
  }


  public IpmiWhereInput idNotContains(String idNotContains) {
    this.idNotContains = JsonNullable.<String>of(idNotContains);
    return this;
  }

   /**
   * Get idNotContains
   * @return idNotContains
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getIdNotContains() {
        return idNotContains.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_ID_NOT_CONTAINS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getIdNotContains_JsonNullable() {
    return idNotContains;
  }
  
  @JsonProperty(JSON_PROPERTY_ID_NOT_CONTAINS)
  public void setIdNotContains_JsonNullable(JsonNullable<String> idNotContains) {
    this.idNotContains = idNotContains;
  }

  public void setIdNotContains(String idNotContains) {
    this.idNotContains = JsonNullable.<String>of(idNotContains);
  }


  public IpmiWhereInput idNotEndsWith(String idNotEndsWith) {
    this.idNotEndsWith = JsonNullable.<String>of(idNotEndsWith);
    return this;
  }

   /**
   * Get idNotEndsWith
   * @return idNotEndsWith
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getIdNotEndsWith() {
        return idNotEndsWith.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_ID_NOT_ENDS_WITH)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getIdNotEndsWith_JsonNullable() {
    return idNotEndsWith;
  }
  
  @JsonProperty(JSON_PROPERTY_ID_NOT_ENDS_WITH)
  public void setIdNotEndsWith_JsonNullable(JsonNullable<String> idNotEndsWith) {
    this.idNotEndsWith = idNotEndsWith;
  }

  public void setIdNotEndsWith(String idNotEndsWith) {
    this.idNotEndsWith = JsonNullable.<String>of(idNotEndsWith);
  }


  public IpmiWhereInput idNotIn(List<String> idNotIn) {
    this.idNotIn = JsonNullable.<List<String>>of(idNotIn);
    return this;
  }

  public IpmiWhereInput addIdNotInItem(String idNotInItem) {
    if (this.idNotIn == null || !this.idNotIn.isPresent()) {
      this.idNotIn = JsonNullable.<List<String>>of(new ArrayList<>());
    }
    try {
      this.idNotIn.get().add(idNotInItem);
    } catch (java.util.NoSuchElementException e) {
      // this can never happen, as we make sure above that the value is present
    }
    return this;
  }

   /**
   * Get idNotIn
   * @return idNotIn
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public List<String> getIdNotIn() {
        return idNotIn.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_ID_NOT_IN)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<List<String>> getIdNotIn_JsonNullable() {
    return idNotIn;
  }
  
  @JsonProperty(JSON_PROPERTY_ID_NOT_IN)
  public void setIdNotIn_JsonNullable(JsonNullable<List<String>> idNotIn) {
    this.idNotIn = idNotIn;
  }

  public void setIdNotIn(List<String> idNotIn) {
    this.idNotIn = JsonNullable.<List<String>>of(idNotIn);
  }


  public IpmiWhereInput idNotStartsWith(String idNotStartsWith) {
    this.idNotStartsWith = JsonNullable.<String>of(idNotStartsWith);
    return this;
  }

   /**
   * Get idNotStartsWith
   * @return idNotStartsWith
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getIdNotStartsWith() {
        return idNotStartsWith.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_ID_NOT_STARTS_WITH)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getIdNotStartsWith_JsonNullable() {
    return idNotStartsWith;
  }
  
  @JsonProperty(JSON_PROPERTY_ID_NOT_STARTS_WITH)
  public void setIdNotStartsWith_JsonNullable(JsonNullable<String> idNotStartsWith) {
    this.idNotStartsWith = idNotStartsWith;
  }

  public void setIdNotStartsWith(String idNotStartsWith) {
    this.idNotStartsWith = JsonNullable.<String>of(idNotStartsWith);
  }


  public IpmiWhereInput idStartsWith(String idStartsWith) {
    this.idStartsWith = JsonNullable.<String>of(idStartsWith);
    return this;
  }

   /**
   * Get idStartsWith
   * @return idStartsWith
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getIdStartsWith() {
        return idStartsWith.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_ID_STARTS_WITH)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getIdStartsWith_JsonNullable() {
    return idStartsWith;
  }
  
  @JsonProperty(JSON_PROPERTY_ID_STARTS_WITH)
  public void setIdStartsWith_JsonNullable(JsonNullable<String> idStartsWith) {
    this.idStartsWith = idStartsWith;
  }

  public void setIdStartsWith(String idStartsWith) {
    this.idStartsWith = JsonNullable.<String>of(idStartsWith);
  }


  public IpmiWhereInput ip(String ip) {
    this.ip = JsonNullable.<String>of(ip);
    return this;
  }

   /**
   * Get ip
   * @return ip
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getIp() {
        return ip.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_IP)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getIp_JsonNullable() {
    return ip;
  }
  
  @JsonProperty(JSON_PROPERTY_IP)
  public void setIp_JsonNullable(JsonNullable<String> ip) {
    this.ip = ip;
  }

  public void setIp(String ip) {
    this.ip = JsonNullable.<String>of(ip);
  }


  public IpmiWhereInput ipContains(String ipContains) {
    this.ipContains = JsonNullable.<String>of(ipContains);
    return this;
  }

   /**
   * Get ipContains
   * @return ipContains
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getIpContains() {
        return ipContains.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_IP_CONTAINS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getIpContains_JsonNullable() {
    return ipContains;
  }
  
  @JsonProperty(JSON_PROPERTY_IP_CONTAINS)
  public void setIpContains_JsonNullable(JsonNullable<String> ipContains) {
    this.ipContains = ipContains;
  }

  public void setIpContains(String ipContains) {
    this.ipContains = JsonNullable.<String>of(ipContains);
  }


  public IpmiWhereInput ipEndsWith(String ipEndsWith) {
    this.ipEndsWith = JsonNullable.<String>of(ipEndsWith);
    return this;
  }

   /**
   * Get ipEndsWith
   * @return ipEndsWith
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getIpEndsWith() {
        return ipEndsWith.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_IP_ENDS_WITH)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getIpEndsWith_JsonNullable() {
    return ipEndsWith;
  }
  
  @JsonProperty(JSON_PROPERTY_IP_ENDS_WITH)
  public void setIpEndsWith_JsonNullable(JsonNullable<String> ipEndsWith) {
    this.ipEndsWith = ipEndsWith;
  }

  public void setIpEndsWith(String ipEndsWith) {
    this.ipEndsWith = JsonNullable.<String>of(ipEndsWith);
  }


  public IpmiWhereInput ipGt(String ipGt) {
    this.ipGt = JsonNullable.<String>of(ipGt);
    return this;
  }

   /**
   * Get ipGt
   * @return ipGt
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getIpGt() {
        return ipGt.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_IP_GT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getIpGt_JsonNullable() {
    return ipGt;
  }
  
  @JsonProperty(JSON_PROPERTY_IP_GT)
  public void setIpGt_JsonNullable(JsonNullable<String> ipGt) {
    this.ipGt = ipGt;
  }

  public void setIpGt(String ipGt) {
    this.ipGt = JsonNullable.<String>of(ipGt);
  }


  public IpmiWhereInput ipGte(String ipGte) {
    this.ipGte = JsonNullable.<String>of(ipGte);
    return this;
  }

   /**
   * Get ipGte
   * @return ipGte
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getIpGte() {
        return ipGte.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_IP_GTE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getIpGte_JsonNullable() {
    return ipGte;
  }
  
  @JsonProperty(JSON_PROPERTY_IP_GTE)
  public void setIpGte_JsonNullable(JsonNullable<String> ipGte) {
    this.ipGte = ipGte;
  }

  public void setIpGte(String ipGte) {
    this.ipGte = JsonNullable.<String>of(ipGte);
  }


  public IpmiWhereInput ipIn(List<String> ipIn) {
    this.ipIn = JsonNullable.<List<String>>of(ipIn);
    return this;
  }

  public IpmiWhereInput addIpInItem(String ipInItem) {
    if (this.ipIn == null || !this.ipIn.isPresent()) {
      this.ipIn = JsonNullable.<List<String>>of(new ArrayList<>());
    }
    try {
      this.ipIn.get().add(ipInItem);
    } catch (java.util.NoSuchElementException e) {
      // this can never happen, as we make sure above that the value is present
    }
    return this;
  }

   /**
   * Get ipIn
   * @return ipIn
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public List<String> getIpIn() {
        return ipIn.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_IP_IN)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<List<String>> getIpIn_JsonNullable() {
    return ipIn;
  }
  
  @JsonProperty(JSON_PROPERTY_IP_IN)
  public void setIpIn_JsonNullable(JsonNullable<List<String>> ipIn) {
    this.ipIn = ipIn;
  }

  public void setIpIn(List<String> ipIn) {
    this.ipIn = JsonNullable.<List<String>>of(ipIn);
  }


  public IpmiWhereInput ipLt(String ipLt) {
    this.ipLt = JsonNullable.<String>of(ipLt);
    return this;
  }

   /**
   * Get ipLt
   * @return ipLt
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getIpLt() {
        return ipLt.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_IP_LT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getIpLt_JsonNullable() {
    return ipLt;
  }
  
  @JsonProperty(JSON_PROPERTY_IP_LT)
  public void setIpLt_JsonNullable(JsonNullable<String> ipLt) {
    this.ipLt = ipLt;
  }

  public void setIpLt(String ipLt) {
    this.ipLt = JsonNullable.<String>of(ipLt);
  }


  public IpmiWhereInput ipLte(String ipLte) {
    this.ipLte = JsonNullable.<String>of(ipLte);
    return this;
  }

   /**
   * Get ipLte
   * @return ipLte
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getIpLte() {
        return ipLte.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_IP_LTE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getIpLte_JsonNullable() {
    return ipLte;
  }
  
  @JsonProperty(JSON_PROPERTY_IP_LTE)
  public void setIpLte_JsonNullable(JsonNullable<String> ipLte) {
    this.ipLte = ipLte;
  }

  public void setIpLte(String ipLte) {
    this.ipLte = JsonNullable.<String>of(ipLte);
  }


  public IpmiWhereInput ipNot(String ipNot) {
    this.ipNot = JsonNullable.<String>of(ipNot);
    return this;
  }

   /**
   * Get ipNot
   * @return ipNot
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getIpNot() {
        return ipNot.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_IP_NOT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getIpNot_JsonNullable() {
    return ipNot;
  }
  
  @JsonProperty(JSON_PROPERTY_IP_NOT)
  public void setIpNot_JsonNullable(JsonNullable<String> ipNot) {
    this.ipNot = ipNot;
  }

  public void setIpNot(String ipNot) {
    this.ipNot = JsonNullable.<String>of(ipNot);
  }


  public IpmiWhereInput ipNotContains(String ipNotContains) {
    this.ipNotContains = JsonNullable.<String>of(ipNotContains);
    return this;
  }

   /**
   * Get ipNotContains
   * @return ipNotContains
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getIpNotContains() {
        return ipNotContains.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_IP_NOT_CONTAINS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getIpNotContains_JsonNullable() {
    return ipNotContains;
  }
  
  @JsonProperty(JSON_PROPERTY_IP_NOT_CONTAINS)
  public void setIpNotContains_JsonNullable(JsonNullable<String> ipNotContains) {
    this.ipNotContains = ipNotContains;
  }

  public void setIpNotContains(String ipNotContains) {
    this.ipNotContains = JsonNullable.<String>of(ipNotContains);
  }


  public IpmiWhereInput ipNotEndsWith(String ipNotEndsWith) {
    this.ipNotEndsWith = JsonNullable.<String>of(ipNotEndsWith);
    return this;
  }

   /**
   * Get ipNotEndsWith
   * @return ipNotEndsWith
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getIpNotEndsWith() {
        return ipNotEndsWith.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_IP_NOT_ENDS_WITH)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getIpNotEndsWith_JsonNullable() {
    return ipNotEndsWith;
  }
  
  @JsonProperty(JSON_PROPERTY_IP_NOT_ENDS_WITH)
  public void setIpNotEndsWith_JsonNullable(JsonNullable<String> ipNotEndsWith) {
    this.ipNotEndsWith = ipNotEndsWith;
  }

  public void setIpNotEndsWith(String ipNotEndsWith) {
    this.ipNotEndsWith = JsonNullable.<String>of(ipNotEndsWith);
  }


  public IpmiWhereInput ipNotIn(List<String> ipNotIn) {
    this.ipNotIn = JsonNullable.<List<String>>of(ipNotIn);
    return this;
  }

  public IpmiWhereInput addIpNotInItem(String ipNotInItem) {
    if (this.ipNotIn == null || !this.ipNotIn.isPresent()) {
      this.ipNotIn = JsonNullable.<List<String>>of(new ArrayList<>());
    }
    try {
      this.ipNotIn.get().add(ipNotInItem);
    } catch (java.util.NoSuchElementException e) {
      // this can never happen, as we make sure above that the value is present
    }
    return this;
  }

   /**
   * Get ipNotIn
   * @return ipNotIn
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public List<String> getIpNotIn() {
        return ipNotIn.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_IP_NOT_IN)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<List<String>> getIpNotIn_JsonNullable() {
    return ipNotIn;
  }
  
  @JsonProperty(JSON_PROPERTY_IP_NOT_IN)
  public void setIpNotIn_JsonNullable(JsonNullable<List<String>> ipNotIn) {
    this.ipNotIn = ipNotIn;
  }

  public void setIpNotIn(List<String> ipNotIn) {
    this.ipNotIn = JsonNullable.<List<String>>of(ipNotIn);
  }


  public IpmiWhereInput ipNotStartsWith(String ipNotStartsWith) {
    this.ipNotStartsWith = JsonNullable.<String>of(ipNotStartsWith);
    return this;
  }

   /**
   * Get ipNotStartsWith
   * @return ipNotStartsWith
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getIpNotStartsWith() {
        return ipNotStartsWith.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_IP_NOT_STARTS_WITH)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getIpNotStartsWith_JsonNullable() {
    return ipNotStartsWith;
  }
  
  @JsonProperty(JSON_PROPERTY_IP_NOT_STARTS_WITH)
  public void setIpNotStartsWith_JsonNullable(JsonNullable<String> ipNotStartsWith) {
    this.ipNotStartsWith = ipNotStartsWith;
  }

  public void setIpNotStartsWith(String ipNotStartsWith) {
    this.ipNotStartsWith = JsonNullable.<String>of(ipNotStartsWith);
  }


  public IpmiWhereInput ipStartsWith(String ipStartsWith) {
    this.ipStartsWith = JsonNullable.<String>of(ipStartsWith);
    return this;
  }

   /**
   * Get ipStartsWith
   * @return ipStartsWith
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getIpStartsWith() {
        return ipStartsWith.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_IP_STARTS_WITH)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getIpStartsWith_JsonNullable() {
    return ipStartsWith;
  }
  
  @JsonProperty(JSON_PROPERTY_IP_STARTS_WITH)
  public void setIpStartsWith_JsonNullable(JsonNullable<String> ipStartsWith) {
    this.ipStartsWith = ipStartsWith;
  }

  public void setIpStartsWith(String ipStartsWith) {
    this.ipStartsWith = JsonNullable.<String>of(ipStartsWith);
  }


  public IpmiWhereInput localId(String localId) {
    this.localId = JsonNullable.<String>of(localId);
    return this;
  }

   /**
   * Get localId
   * @return localId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getLocalId() {
        return localId.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_LOCAL_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getLocalId_JsonNullable() {
    return localId;
  }
  
  @JsonProperty(JSON_PROPERTY_LOCAL_ID)
  public void setLocalId_JsonNullable(JsonNullable<String> localId) {
    this.localId = localId;
  }

  public void setLocalId(String localId) {
    this.localId = JsonNullable.<String>of(localId);
  }


  public IpmiWhereInput localIdContains(String localIdContains) {
    this.localIdContains = JsonNullable.<String>of(localIdContains);
    return this;
  }

   /**
   * Get localIdContains
   * @return localIdContains
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getLocalIdContains() {
        return localIdContains.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_LOCAL_ID_CONTAINS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getLocalIdContains_JsonNullable() {
    return localIdContains;
  }
  
  @JsonProperty(JSON_PROPERTY_LOCAL_ID_CONTAINS)
  public void setLocalIdContains_JsonNullable(JsonNullable<String> localIdContains) {
    this.localIdContains = localIdContains;
  }

  public void setLocalIdContains(String localIdContains) {
    this.localIdContains = JsonNullable.<String>of(localIdContains);
  }


  public IpmiWhereInput localIdEndsWith(String localIdEndsWith) {
    this.localIdEndsWith = JsonNullable.<String>of(localIdEndsWith);
    return this;
  }

   /**
   * Get localIdEndsWith
   * @return localIdEndsWith
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getLocalIdEndsWith() {
        return localIdEndsWith.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_LOCAL_ID_ENDS_WITH)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getLocalIdEndsWith_JsonNullable() {
    return localIdEndsWith;
  }
  
  @JsonProperty(JSON_PROPERTY_LOCAL_ID_ENDS_WITH)
  public void setLocalIdEndsWith_JsonNullable(JsonNullable<String> localIdEndsWith) {
    this.localIdEndsWith = localIdEndsWith;
  }

  public void setLocalIdEndsWith(String localIdEndsWith) {
    this.localIdEndsWith = JsonNullable.<String>of(localIdEndsWith);
  }


  public IpmiWhereInput localIdGt(String localIdGt) {
    this.localIdGt = JsonNullable.<String>of(localIdGt);
    return this;
  }

   /**
   * Get localIdGt
   * @return localIdGt
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getLocalIdGt() {
        return localIdGt.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_LOCAL_ID_GT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getLocalIdGt_JsonNullable() {
    return localIdGt;
  }
  
  @JsonProperty(JSON_PROPERTY_LOCAL_ID_GT)
  public void setLocalIdGt_JsonNullable(JsonNullable<String> localIdGt) {
    this.localIdGt = localIdGt;
  }

  public void setLocalIdGt(String localIdGt) {
    this.localIdGt = JsonNullable.<String>of(localIdGt);
  }


  public IpmiWhereInput localIdGte(String localIdGte) {
    this.localIdGte = JsonNullable.<String>of(localIdGte);
    return this;
  }

   /**
   * Get localIdGte
   * @return localIdGte
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getLocalIdGte() {
        return localIdGte.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_LOCAL_ID_GTE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getLocalIdGte_JsonNullable() {
    return localIdGte;
  }
  
  @JsonProperty(JSON_PROPERTY_LOCAL_ID_GTE)
  public void setLocalIdGte_JsonNullable(JsonNullable<String> localIdGte) {
    this.localIdGte = localIdGte;
  }

  public void setLocalIdGte(String localIdGte) {
    this.localIdGte = JsonNullable.<String>of(localIdGte);
  }


  public IpmiWhereInput localIdIn(List<String> localIdIn) {
    this.localIdIn = JsonNullable.<List<String>>of(localIdIn);
    return this;
  }

  public IpmiWhereInput addLocalIdInItem(String localIdInItem) {
    if (this.localIdIn == null || !this.localIdIn.isPresent()) {
      this.localIdIn = JsonNullable.<List<String>>of(new ArrayList<>());
    }
    try {
      this.localIdIn.get().add(localIdInItem);
    } catch (java.util.NoSuchElementException e) {
      // this can never happen, as we make sure above that the value is present
    }
    return this;
  }

   /**
   * Get localIdIn
   * @return localIdIn
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public List<String> getLocalIdIn() {
        return localIdIn.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_LOCAL_ID_IN)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<List<String>> getLocalIdIn_JsonNullable() {
    return localIdIn;
  }
  
  @JsonProperty(JSON_PROPERTY_LOCAL_ID_IN)
  public void setLocalIdIn_JsonNullable(JsonNullable<List<String>> localIdIn) {
    this.localIdIn = localIdIn;
  }

  public void setLocalIdIn(List<String> localIdIn) {
    this.localIdIn = JsonNullable.<List<String>>of(localIdIn);
  }


  public IpmiWhereInput localIdLt(String localIdLt) {
    this.localIdLt = JsonNullable.<String>of(localIdLt);
    return this;
  }

   /**
   * Get localIdLt
   * @return localIdLt
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getLocalIdLt() {
        return localIdLt.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_LOCAL_ID_LT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getLocalIdLt_JsonNullable() {
    return localIdLt;
  }
  
  @JsonProperty(JSON_PROPERTY_LOCAL_ID_LT)
  public void setLocalIdLt_JsonNullable(JsonNullable<String> localIdLt) {
    this.localIdLt = localIdLt;
  }

  public void setLocalIdLt(String localIdLt) {
    this.localIdLt = JsonNullable.<String>of(localIdLt);
  }


  public IpmiWhereInput localIdLte(String localIdLte) {
    this.localIdLte = JsonNullable.<String>of(localIdLte);
    return this;
  }

   /**
   * Get localIdLte
   * @return localIdLte
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getLocalIdLte() {
        return localIdLte.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_LOCAL_ID_LTE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getLocalIdLte_JsonNullable() {
    return localIdLte;
  }
  
  @JsonProperty(JSON_PROPERTY_LOCAL_ID_LTE)
  public void setLocalIdLte_JsonNullable(JsonNullable<String> localIdLte) {
    this.localIdLte = localIdLte;
  }

  public void setLocalIdLte(String localIdLte) {
    this.localIdLte = JsonNullable.<String>of(localIdLte);
  }


  public IpmiWhereInput localIdNot(String localIdNot) {
    this.localIdNot = JsonNullable.<String>of(localIdNot);
    return this;
  }

   /**
   * Get localIdNot
   * @return localIdNot
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getLocalIdNot() {
        return localIdNot.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_LOCAL_ID_NOT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getLocalIdNot_JsonNullable() {
    return localIdNot;
  }
  
  @JsonProperty(JSON_PROPERTY_LOCAL_ID_NOT)
  public void setLocalIdNot_JsonNullable(JsonNullable<String> localIdNot) {
    this.localIdNot = localIdNot;
  }

  public void setLocalIdNot(String localIdNot) {
    this.localIdNot = JsonNullable.<String>of(localIdNot);
  }


  public IpmiWhereInput localIdNotContains(String localIdNotContains) {
    this.localIdNotContains = JsonNullable.<String>of(localIdNotContains);
    return this;
  }

   /**
   * Get localIdNotContains
   * @return localIdNotContains
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getLocalIdNotContains() {
        return localIdNotContains.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_LOCAL_ID_NOT_CONTAINS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getLocalIdNotContains_JsonNullable() {
    return localIdNotContains;
  }
  
  @JsonProperty(JSON_PROPERTY_LOCAL_ID_NOT_CONTAINS)
  public void setLocalIdNotContains_JsonNullable(JsonNullable<String> localIdNotContains) {
    this.localIdNotContains = localIdNotContains;
  }

  public void setLocalIdNotContains(String localIdNotContains) {
    this.localIdNotContains = JsonNullable.<String>of(localIdNotContains);
  }


  public IpmiWhereInput localIdNotEndsWith(String localIdNotEndsWith) {
    this.localIdNotEndsWith = JsonNullable.<String>of(localIdNotEndsWith);
    return this;
  }

   /**
   * Get localIdNotEndsWith
   * @return localIdNotEndsWith
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getLocalIdNotEndsWith() {
        return localIdNotEndsWith.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_LOCAL_ID_NOT_ENDS_WITH)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getLocalIdNotEndsWith_JsonNullable() {
    return localIdNotEndsWith;
  }
  
  @JsonProperty(JSON_PROPERTY_LOCAL_ID_NOT_ENDS_WITH)
  public void setLocalIdNotEndsWith_JsonNullable(JsonNullable<String> localIdNotEndsWith) {
    this.localIdNotEndsWith = localIdNotEndsWith;
  }

  public void setLocalIdNotEndsWith(String localIdNotEndsWith) {
    this.localIdNotEndsWith = JsonNullable.<String>of(localIdNotEndsWith);
  }


  public IpmiWhereInput localIdNotIn(List<String> localIdNotIn) {
    this.localIdNotIn = JsonNullable.<List<String>>of(localIdNotIn);
    return this;
  }

  public IpmiWhereInput addLocalIdNotInItem(String localIdNotInItem) {
    if (this.localIdNotIn == null || !this.localIdNotIn.isPresent()) {
      this.localIdNotIn = JsonNullable.<List<String>>of(new ArrayList<>());
    }
    try {
      this.localIdNotIn.get().add(localIdNotInItem);
    } catch (java.util.NoSuchElementException e) {
      // this can never happen, as we make sure above that the value is present
    }
    return this;
  }

   /**
   * Get localIdNotIn
   * @return localIdNotIn
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public List<String> getLocalIdNotIn() {
        return localIdNotIn.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_LOCAL_ID_NOT_IN)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<List<String>> getLocalIdNotIn_JsonNullable() {
    return localIdNotIn;
  }
  
  @JsonProperty(JSON_PROPERTY_LOCAL_ID_NOT_IN)
  public void setLocalIdNotIn_JsonNullable(JsonNullable<List<String>> localIdNotIn) {
    this.localIdNotIn = localIdNotIn;
  }

  public void setLocalIdNotIn(List<String> localIdNotIn) {
    this.localIdNotIn = JsonNullable.<List<String>>of(localIdNotIn);
  }


  public IpmiWhereInput localIdNotStartsWith(String localIdNotStartsWith) {
    this.localIdNotStartsWith = JsonNullable.<String>of(localIdNotStartsWith);
    return this;
  }

   /**
   * Get localIdNotStartsWith
   * @return localIdNotStartsWith
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getLocalIdNotStartsWith() {
        return localIdNotStartsWith.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_LOCAL_ID_NOT_STARTS_WITH)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getLocalIdNotStartsWith_JsonNullable() {
    return localIdNotStartsWith;
  }
  
  @JsonProperty(JSON_PROPERTY_LOCAL_ID_NOT_STARTS_WITH)
  public void setLocalIdNotStartsWith_JsonNullable(JsonNullable<String> localIdNotStartsWith) {
    this.localIdNotStartsWith = localIdNotStartsWith;
  }

  public void setLocalIdNotStartsWith(String localIdNotStartsWith) {
    this.localIdNotStartsWith = JsonNullable.<String>of(localIdNotStartsWith);
  }


  public IpmiWhereInput localIdStartsWith(String localIdStartsWith) {
    this.localIdStartsWith = JsonNullable.<String>of(localIdStartsWith);
    return this;
  }

   /**
   * Get localIdStartsWith
   * @return localIdStartsWith
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getLocalIdStartsWith() {
        return localIdStartsWith.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_LOCAL_ID_STARTS_WITH)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getLocalIdStartsWith_JsonNullable() {
    return localIdStartsWith;
  }
  
  @JsonProperty(JSON_PROPERTY_LOCAL_ID_STARTS_WITH)
  public void setLocalIdStartsWith_JsonNullable(JsonNullable<String> localIdStartsWith) {
    this.localIdStartsWith = localIdStartsWith;
  }

  public void setLocalIdStartsWith(String localIdStartsWith) {
    this.localIdStartsWith = JsonNullable.<String>of(localIdStartsWith);
  }


  public IpmiWhereInput NOT(List<IpmiWhereInput> NOT) {
    this.NOT = JsonNullable.<List<IpmiWhereInput>>of(NOT);
    return this;
  }

  public IpmiWhereInput addNOTItem(IpmiWhereInput NOTItem) {
    if (this.NOT == null || !this.NOT.isPresent()) {
      this.NOT = JsonNullable.<List<IpmiWhereInput>>of(new ArrayList<>());
    }
    try {
      this.NOT.get().add(NOTItem);
    } catch (java.util.NoSuchElementException e) {
      // this can never happen, as we make sure above that the value is present
    }
    return this;
  }

   /**
   * Get NOT
   * @return NOT
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public List<IpmiWhereInput> getNOT() {
        return NOT.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_N_O_T)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<List<IpmiWhereInput>> getNOT_JsonNullable() {
    return NOT;
  }
  
  @JsonProperty(JSON_PROPERTY_N_O_T)
  public void setNOT_JsonNullable(JsonNullable<List<IpmiWhereInput>> NOT) {
    this.NOT = NOT;
  }

  public void setNOT(List<IpmiWhereInput> NOT) {
    this.NOT = JsonNullable.<List<IpmiWhereInput>>of(NOT);
  }


  public IpmiWhereInput OR(List<IpmiWhereInput> OR) {
    this.OR = JsonNullable.<List<IpmiWhereInput>>of(OR);
    return this;
  }

  public IpmiWhereInput addORItem(IpmiWhereInput ORItem) {
    if (this.OR == null || !this.OR.isPresent()) {
      this.OR = JsonNullable.<List<IpmiWhereInput>>of(new ArrayList<>());
    }
    try {
      this.OR.get().add(ORItem);
    } catch (java.util.NoSuchElementException e) {
      // this can never happen, as we make sure above that the value is present
    }
    return this;
  }

   /**
   * Get OR
   * @return OR
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public List<IpmiWhereInput> getOR() {
        return OR.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_O_R)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<List<IpmiWhereInput>> getOR_JsonNullable() {
    return OR;
  }
  
  @JsonProperty(JSON_PROPERTY_O_R)
  public void setOR_JsonNullable(JsonNullable<List<IpmiWhereInput>> OR) {
    this.OR = OR;
  }

  public void setOR(List<IpmiWhereInput> OR) {
    this.OR = JsonNullable.<List<IpmiWhereInput>>of(OR);
  }


  public IpmiWhereInput username(String username) {
    this.username = JsonNullable.<String>of(username);
    return this;
  }

   /**
   * Get username
   * @return username
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getUsername() {
        return username.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_USERNAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getUsername_JsonNullable() {
    return username;
  }
  
  @JsonProperty(JSON_PROPERTY_USERNAME)
  public void setUsername_JsonNullable(JsonNullable<String> username) {
    this.username = username;
  }

  public void setUsername(String username) {
    this.username = JsonNullable.<String>of(username);
  }


  public IpmiWhereInput usernameContains(String usernameContains) {
    this.usernameContains = JsonNullable.<String>of(usernameContains);
    return this;
  }

   /**
   * Get usernameContains
   * @return usernameContains
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getUsernameContains() {
        return usernameContains.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_USERNAME_CONTAINS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getUsernameContains_JsonNullable() {
    return usernameContains;
  }
  
  @JsonProperty(JSON_PROPERTY_USERNAME_CONTAINS)
  public void setUsernameContains_JsonNullable(JsonNullable<String> usernameContains) {
    this.usernameContains = usernameContains;
  }

  public void setUsernameContains(String usernameContains) {
    this.usernameContains = JsonNullable.<String>of(usernameContains);
  }


  public IpmiWhereInput usernameEndsWith(String usernameEndsWith) {
    this.usernameEndsWith = JsonNullable.<String>of(usernameEndsWith);
    return this;
  }

   /**
   * Get usernameEndsWith
   * @return usernameEndsWith
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getUsernameEndsWith() {
        return usernameEndsWith.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_USERNAME_ENDS_WITH)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getUsernameEndsWith_JsonNullable() {
    return usernameEndsWith;
  }
  
  @JsonProperty(JSON_PROPERTY_USERNAME_ENDS_WITH)
  public void setUsernameEndsWith_JsonNullable(JsonNullable<String> usernameEndsWith) {
    this.usernameEndsWith = usernameEndsWith;
  }

  public void setUsernameEndsWith(String usernameEndsWith) {
    this.usernameEndsWith = JsonNullable.<String>of(usernameEndsWith);
  }


  public IpmiWhereInput usernameGt(String usernameGt) {
    this.usernameGt = JsonNullable.<String>of(usernameGt);
    return this;
  }

   /**
   * Get usernameGt
   * @return usernameGt
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getUsernameGt() {
        return usernameGt.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_USERNAME_GT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getUsernameGt_JsonNullable() {
    return usernameGt;
  }
  
  @JsonProperty(JSON_PROPERTY_USERNAME_GT)
  public void setUsernameGt_JsonNullable(JsonNullable<String> usernameGt) {
    this.usernameGt = usernameGt;
  }

  public void setUsernameGt(String usernameGt) {
    this.usernameGt = JsonNullable.<String>of(usernameGt);
  }


  public IpmiWhereInput usernameGte(String usernameGte) {
    this.usernameGte = JsonNullable.<String>of(usernameGte);
    return this;
  }

   /**
   * Get usernameGte
   * @return usernameGte
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getUsernameGte() {
        return usernameGte.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_USERNAME_GTE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getUsernameGte_JsonNullable() {
    return usernameGte;
  }
  
  @JsonProperty(JSON_PROPERTY_USERNAME_GTE)
  public void setUsernameGte_JsonNullable(JsonNullable<String> usernameGte) {
    this.usernameGte = usernameGte;
  }

  public void setUsernameGte(String usernameGte) {
    this.usernameGte = JsonNullable.<String>of(usernameGte);
  }


  public IpmiWhereInput usernameIn(List<String> usernameIn) {
    this.usernameIn = JsonNullable.<List<String>>of(usernameIn);
    return this;
  }

  public IpmiWhereInput addUsernameInItem(String usernameInItem) {
    if (this.usernameIn == null || !this.usernameIn.isPresent()) {
      this.usernameIn = JsonNullable.<List<String>>of(new ArrayList<>());
    }
    try {
      this.usernameIn.get().add(usernameInItem);
    } catch (java.util.NoSuchElementException e) {
      // this can never happen, as we make sure above that the value is present
    }
    return this;
  }

   /**
   * Get usernameIn
   * @return usernameIn
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public List<String> getUsernameIn() {
        return usernameIn.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_USERNAME_IN)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<List<String>> getUsernameIn_JsonNullable() {
    return usernameIn;
  }
  
  @JsonProperty(JSON_PROPERTY_USERNAME_IN)
  public void setUsernameIn_JsonNullable(JsonNullable<List<String>> usernameIn) {
    this.usernameIn = usernameIn;
  }

  public void setUsernameIn(List<String> usernameIn) {
    this.usernameIn = JsonNullable.<List<String>>of(usernameIn);
  }


  public IpmiWhereInput usernameLt(String usernameLt) {
    this.usernameLt = JsonNullable.<String>of(usernameLt);
    return this;
  }

   /**
   * Get usernameLt
   * @return usernameLt
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getUsernameLt() {
        return usernameLt.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_USERNAME_LT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getUsernameLt_JsonNullable() {
    return usernameLt;
  }
  
  @JsonProperty(JSON_PROPERTY_USERNAME_LT)
  public void setUsernameLt_JsonNullable(JsonNullable<String> usernameLt) {
    this.usernameLt = usernameLt;
  }

  public void setUsernameLt(String usernameLt) {
    this.usernameLt = JsonNullable.<String>of(usernameLt);
  }


  public IpmiWhereInput usernameLte(String usernameLte) {
    this.usernameLte = JsonNullable.<String>of(usernameLte);
    return this;
  }

   /**
   * Get usernameLte
   * @return usernameLte
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getUsernameLte() {
        return usernameLte.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_USERNAME_LTE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getUsernameLte_JsonNullable() {
    return usernameLte;
  }
  
  @JsonProperty(JSON_PROPERTY_USERNAME_LTE)
  public void setUsernameLte_JsonNullable(JsonNullable<String> usernameLte) {
    this.usernameLte = usernameLte;
  }

  public void setUsernameLte(String usernameLte) {
    this.usernameLte = JsonNullable.<String>of(usernameLte);
  }


  public IpmiWhereInput usernameNot(String usernameNot) {
    this.usernameNot = JsonNullable.<String>of(usernameNot);
    return this;
  }

   /**
   * Get usernameNot
   * @return usernameNot
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getUsernameNot() {
        return usernameNot.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_USERNAME_NOT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getUsernameNot_JsonNullable() {
    return usernameNot;
  }
  
  @JsonProperty(JSON_PROPERTY_USERNAME_NOT)
  public void setUsernameNot_JsonNullable(JsonNullable<String> usernameNot) {
    this.usernameNot = usernameNot;
  }

  public void setUsernameNot(String usernameNot) {
    this.usernameNot = JsonNullable.<String>of(usernameNot);
  }


  public IpmiWhereInput usernameNotContains(String usernameNotContains) {
    this.usernameNotContains = JsonNullable.<String>of(usernameNotContains);
    return this;
  }

   /**
   * Get usernameNotContains
   * @return usernameNotContains
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getUsernameNotContains() {
        return usernameNotContains.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_USERNAME_NOT_CONTAINS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getUsernameNotContains_JsonNullable() {
    return usernameNotContains;
  }
  
  @JsonProperty(JSON_PROPERTY_USERNAME_NOT_CONTAINS)
  public void setUsernameNotContains_JsonNullable(JsonNullable<String> usernameNotContains) {
    this.usernameNotContains = usernameNotContains;
  }

  public void setUsernameNotContains(String usernameNotContains) {
    this.usernameNotContains = JsonNullable.<String>of(usernameNotContains);
  }


  public IpmiWhereInput usernameNotEndsWith(String usernameNotEndsWith) {
    this.usernameNotEndsWith = JsonNullable.<String>of(usernameNotEndsWith);
    return this;
  }

   /**
   * Get usernameNotEndsWith
   * @return usernameNotEndsWith
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getUsernameNotEndsWith() {
        return usernameNotEndsWith.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_USERNAME_NOT_ENDS_WITH)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getUsernameNotEndsWith_JsonNullable() {
    return usernameNotEndsWith;
  }
  
  @JsonProperty(JSON_PROPERTY_USERNAME_NOT_ENDS_WITH)
  public void setUsernameNotEndsWith_JsonNullable(JsonNullable<String> usernameNotEndsWith) {
    this.usernameNotEndsWith = usernameNotEndsWith;
  }

  public void setUsernameNotEndsWith(String usernameNotEndsWith) {
    this.usernameNotEndsWith = JsonNullable.<String>of(usernameNotEndsWith);
  }


  public IpmiWhereInput usernameNotIn(List<String> usernameNotIn) {
    this.usernameNotIn = JsonNullable.<List<String>>of(usernameNotIn);
    return this;
  }

  public IpmiWhereInput addUsernameNotInItem(String usernameNotInItem) {
    if (this.usernameNotIn == null || !this.usernameNotIn.isPresent()) {
      this.usernameNotIn = JsonNullable.<List<String>>of(new ArrayList<>());
    }
    try {
      this.usernameNotIn.get().add(usernameNotInItem);
    } catch (java.util.NoSuchElementException e) {
      // this can never happen, as we make sure above that the value is present
    }
    return this;
  }

   /**
   * Get usernameNotIn
   * @return usernameNotIn
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public List<String> getUsernameNotIn() {
        return usernameNotIn.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_USERNAME_NOT_IN)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<List<String>> getUsernameNotIn_JsonNullable() {
    return usernameNotIn;
  }
  
  @JsonProperty(JSON_PROPERTY_USERNAME_NOT_IN)
  public void setUsernameNotIn_JsonNullable(JsonNullable<List<String>> usernameNotIn) {
    this.usernameNotIn = usernameNotIn;
  }

  public void setUsernameNotIn(List<String> usernameNotIn) {
    this.usernameNotIn = JsonNullable.<List<String>>of(usernameNotIn);
  }


  public IpmiWhereInput usernameNotStartsWith(String usernameNotStartsWith) {
    this.usernameNotStartsWith = JsonNullable.<String>of(usernameNotStartsWith);
    return this;
  }

   /**
   * Get usernameNotStartsWith
   * @return usernameNotStartsWith
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getUsernameNotStartsWith() {
        return usernameNotStartsWith.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_USERNAME_NOT_STARTS_WITH)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getUsernameNotStartsWith_JsonNullable() {
    return usernameNotStartsWith;
  }
  
  @JsonProperty(JSON_PROPERTY_USERNAME_NOT_STARTS_WITH)
  public void setUsernameNotStartsWith_JsonNullable(JsonNullable<String> usernameNotStartsWith) {
    this.usernameNotStartsWith = usernameNotStartsWith;
  }

  public void setUsernameNotStartsWith(String usernameNotStartsWith) {
    this.usernameNotStartsWith = JsonNullable.<String>of(usernameNotStartsWith);
  }


  public IpmiWhereInput usernameStartsWith(String usernameStartsWith) {
    this.usernameStartsWith = JsonNullable.<String>of(usernameStartsWith);
    return this;
  }

   /**
   * Get usernameStartsWith
   * @return usernameStartsWith
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getUsernameStartsWith() {
        return usernameStartsWith.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_USERNAME_STARTS_WITH)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getUsernameStartsWith_JsonNullable() {
    return usernameStartsWith;
  }
  
  @JsonProperty(JSON_PROPERTY_USERNAME_STARTS_WITH)
  public void setUsernameStartsWith_JsonNullable(JsonNullable<String> usernameStartsWith) {
    this.usernameStartsWith = usernameStartsWith;
  }

  public void setUsernameStartsWith(String usernameStartsWith) {
    this.usernameStartsWith = JsonNullable.<String>of(usernameStartsWith);
  }


  public IpmiWhereInput valid(Boolean valid) {
    this.valid = JsonNullable.<Boolean>of(valid);
    return this;
  }

   /**
   * Get valid
   * @return valid
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public Boolean getValid() {
        return valid.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_VALID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<Boolean> getValid_JsonNullable() {
    return valid;
  }
  
  @JsonProperty(JSON_PROPERTY_VALID)
  public void setValid_JsonNullable(JsonNullable<Boolean> valid) {
    this.valid = valid;
  }

  public void setValid(Boolean valid) {
    this.valid = JsonNullable.<Boolean>of(valid);
  }


  public IpmiWhereInput validNot(Boolean validNot) {
    this.validNot = JsonNullable.<Boolean>of(validNot);
    return this;
  }

   /**
   * Get validNot
   * @return validNot
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public Boolean getValidNot() {
        return validNot.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_VALID_NOT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<Boolean> getValidNot_JsonNullable() {
    return validNot;
  }
  
  @JsonProperty(JSON_PROPERTY_VALID_NOT)
  public void setValidNot_JsonNullable(JsonNullable<Boolean> validNot) {
    this.validNot = validNot;
  }

  public void setValidNot(Boolean validNot) {
    this.validNot = JsonNullable.<Boolean>of(validNot);
  }


  /**
   * Return true if this IpmiWhereInput object is equal to o.
   */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    IpmiWhereInput ipmiWhereInput = (IpmiWhereInput) o;
    return equalsNullable(this.AND, ipmiWhereInput.AND) &&
        equalsNullable(this.host, ipmiWhereInput.host) &&
        equalsNullable(this.id, ipmiWhereInput.id) &&
        equalsNullable(this.idContains, ipmiWhereInput.idContains) &&
        equalsNullable(this.idEndsWith, ipmiWhereInput.idEndsWith) &&
        equalsNullable(this.idGt, ipmiWhereInput.idGt) &&
        equalsNullable(this.idGte, ipmiWhereInput.idGte) &&
        equalsNullable(this.idIn, ipmiWhereInput.idIn) &&
        equalsNullable(this.idLt, ipmiWhereInput.idLt) &&
        equalsNullable(this.idLte, ipmiWhereInput.idLte) &&
        equalsNullable(this.idNot, ipmiWhereInput.idNot) &&
        equalsNullable(this.idNotContains, ipmiWhereInput.idNotContains) &&
        equalsNullable(this.idNotEndsWith, ipmiWhereInput.idNotEndsWith) &&
        equalsNullable(this.idNotIn, ipmiWhereInput.idNotIn) &&
        equalsNullable(this.idNotStartsWith, ipmiWhereInput.idNotStartsWith) &&
        equalsNullable(this.idStartsWith, ipmiWhereInput.idStartsWith) &&
        equalsNullable(this.ip, ipmiWhereInput.ip) &&
        equalsNullable(this.ipContains, ipmiWhereInput.ipContains) &&
        equalsNullable(this.ipEndsWith, ipmiWhereInput.ipEndsWith) &&
        equalsNullable(this.ipGt, ipmiWhereInput.ipGt) &&
        equalsNullable(this.ipGte, ipmiWhereInput.ipGte) &&
        equalsNullable(this.ipIn, ipmiWhereInput.ipIn) &&
        equalsNullable(this.ipLt, ipmiWhereInput.ipLt) &&
        equalsNullable(this.ipLte, ipmiWhereInput.ipLte) &&
        equalsNullable(this.ipNot, ipmiWhereInput.ipNot) &&
        equalsNullable(this.ipNotContains, ipmiWhereInput.ipNotContains) &&
        equalsNullable(this.ipNotEndsWith, ipmiWhereInput.ipNotEndsWith) &&
        equalsNullable(this.ipNotIn, ipmiWhereInput.ipNotIn) &&
        equalsNullable(this.ipNotStartsWith, ipmiWhereInput.ipNotStartsWith) &&
        equalsNullable(this.ipStartsWith, ipmiWhereInput.ipStartsWith) &&
        equalsNullable(this.localId, ipmiWhereInput.localId) &&
        equalsNullable(this.localIdContains, ipmiWhereInput.localIdContains) &&
        equalsNullable(this.localIdEndsWith, ipmiWhereInput.localIdEndsWith) &&
        equalsNullable(this.localIdGt, ipmiWhereInput.localIdGt) &&
        equalsNullable(this.localIdGte, ipmiWhereInput.localIdGte) &&
        equalsNullable(this.localIdIn, ipmiWhereInput.localIdIn) &&
        equalsNullable(this.localIdLt, ipmiWhereInput.localIdLt) &&
        equalsNullable(this.localIdLte, ipmiWhereInput.localIdLte) &&
        equalsNullable(this.localIdNot, ipmiWhereInput.localIdNot) &&
        equalsNullable(this.localIdNotContains, ipmiWhereInput.localIdNotContains) &&
        equalsNullable(this.localIdNotEndsWith, ipmiWhereInput.localIdNotEndsWith) &&
        equalsNullable(this.localIdNotIn, ipmiWhereInput.localIdNotIn) &&
        equalsNullable(this.localIdNotStartsWith, ipmiWhereInput.localIdNotStartsWith) &&
        equalsNullable(this.localIdStartsWith, ipmiWhereInput.localIdStartsWith) &&
        equalsNullable(this.NOT, ipmiWhereInput.NOT) &&
        equalsNullable(this.OR, ipmiWhereInput.OR) &&
        equalsNullable(this.username, ipmiWhereInput.username) &&
        equalsNullable(this.usernameContains, ipmiWhereInput.usernameContains) &&
        equalsNullable(this.usernameEndsWith, ipmiWhereInput.usernameEndsWith) &&
        equalsNullable(this.usernameGt, ipmiWhereInput.usernameGt) &&
        equalsNullable(this.usernameGte, ipmiWhereInput.usernameGte) &&
        equalsNullable(this.usernameIn, ipmiWhereInput.usernameIn) &&
        equalsNullable(this.usernameLt, ipmiWhereInput.usernameLt) &&
        equalsNullable(this.usernameLte, ipmiWhereInput.usernameLte) &&
        equalsNullable(this.usernameNot, ipmiWhereInput.usernameNot) &&
        equalsNullable(this.usernameNotContains, ipmiWhereInput.usernameNotContains) &&
        equalsNullable(this.usernameNotEndsWith, ipmiWhereInput.usernameNotEndsWith) &&
        equalsNullable(this.usernameNotIn, ipmiWhereInput.usernameNotIn) &&
        equalsNullable(this.usernameNotStartsWith, ipmiWhereInput.usernameNotStartsWith) &&
        equalsNullable(this.usernameStartsWith, ipmiWhereInput.usernameStartsWith) &&
        equalsNullable(this.valid, ipmiWhereInput.valid) &&
        equalsNullable(this.validNot, ipmiWhereInput.validNot);
  }

  private static <T> boolean equalsNullable(JsonNullable<T> a, JsonNullable<T> b) {
    return a == b || (a != null && b != null && a.isPresent() && b.isPresent() && Objects.deepEquals(a.get(), b.get()));
  }

  @Override
  public int hashCode() {
    return Objects.hash(hashCodeNullable(AND), hashCodeNullable(host), hashCodeNullable(id), hashCodeNullable(idContains), hashCodeNullable(idEndsWith), hashCodeNullable(idGt), hashCodeNullable(idGte), hashCodeNullable(idIn), hashCodeNullable(idLt), hashCodeNullable(idLte), hashCodeNullable(idNot), hashCodeNullable(idNotContains), hashCodeNullable(idNotEndsWith), hashCodeNullable(idNotIn), hashCodeNullable(idNotStartsWith), hashCodeNullable(idStartsWith), hashCodeNullable(ip), hashCodeNullable(ipContains), hashCodeNullable(ipEndsWith), hashCodeNullable(ipGt), hashCodeNullable(ipGte), hashCodeNullable(ipIn), hashCodeNullable(ipLt), hashCodeNullable(ipLte), hashCodeNullable(ipNot), hashCodeNullable(ipNotContains), hashCodeNullable(ipNotEndsWith), hashCodeNullable(ipNotIn), hashCodeNullable(ipNotStartsWith), hashCodeNullable(ipStartsWith), hashCodeNullable(localId), hashCodeNullable(localIdContains), hashCodeNullable(localIdEndsWith), hashCodeNullable(localIdGt), hashCodeNullable(localIdGte), hashCodeNullable(localIdIn), hashCodeNullable(localIdLt), hashCodeNullable(localIdLte), hashCodeNullable(localIdNot), hashCodeNullable(localIdNotContains), hashCodeNullable(localIdNotEndsWith), hashCodeNullable(localIdNotIn), hashCodeNullable(localIdNotStartsWith), hashCodeNullable(localIdStartsWith), hashCodeNullable(NOT), hashCodeNullable(OR), hashCodeNullable(username), hashCodeNullable(usernameContains), hashCodeNullable(usernameEndsWith), hashCodeNullable(usernameGt), hashCodeNullable(usernameGte), hashCodeNullable(usernameIn), hashCodeNullable(usernameLt), hashCodeNullable(usernameLte), hashCodeNullable(usernameNot), hashCodeNullable(usernameNotContains), hashCodeNullable(usernameNotEndsWith), hashCodeNullable(usernameNotIn), hashCodeNullable(usernameNotStartsWith), hashCodeNullable(usernameStartsWith), hashCodeNullable(valid), hashCodeNullable(validNot));
  }

  private static <T> int hashCodeNullable(JsonNullable<T> a) {
    if (a == null) {
      return 1;
    }
    return a.isPresent() ? Arrays.deepHashCode(new Object[]{a.get()}) : 31;
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class IpmiWhereInput {\n");
    sb.append("    AND: ").append(toIndentedString(AND)).append("\n");
    sb.append("    host: ").append(toIndentedString(host)).append("\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    idContains: ").append(toIndentedString(idContains)).append("\n");
    sb.append("    idEndsWith: ").append(toIndentedString(idEndsWith)).append("\n");
    sb.append("    idGt: ").append(toIndentedString(idGt)).append("\n");
    sb.append("    idGte: ").append(toIndentedString(idGte)).append("\n");
    sb.append("    idIn: ").append(toIndentedString(idIn)).append("\n");
    sb.append("    idLt: ").append(toIndentedString(idLt)).append("\n");
    sb.append("    idLte: ").append(toIndentedString(idLte)).append("\n");
    sb.append("    idNot: ").append(toIndentedString(idNot)).append("\n");
    sb.append("    idNotContains: ").append(toIndentedString(idNotContains)).append("\n");
    sb.append("    idNotEndsWith: ").append(toIndentedString(idNotEndsWith)).append("\n");
    sb.append("    idNotIn: ").append(toIndentedString(idNotIn)).append("\n");
    sb.append("    idNotStartsWith: ").append(toIndentedString(idNotStartsWith)).append("\n");
    sb.append("    idStartsWith: ").append(toIndentedString(idStartsWith)).append("\n");
    sb.append("    ip: ").append(toIndentedString(ip)).append("\n");
    sb.append("    ipContains: ").append(toIndentedString(ipContains)).append("\n");
    sb.append("    ipEndsWith: ").append(toIndentedString(ipEndsWith)).append("\n");
    sb.append("    ipGt: ").append(toIndentedString(ipGt)).append("\n");
    sb.append("    ipGte: ").append(toIndentedString(ipGte)).append("\n");
    sb.append("    ipIn: ").append(toIndentedString(ipIn)).append("\n");
    sb.append("    ipLt: ").append(toIndentedString(ipLt)).append("\n");
    sb.append("    ipLte: ").append(toIndentedString(ipLte)).append("\n");
    sb.append("    ipNot: ").append(toIndentedString(ipNot)).append("\n");
    sb.append("    ipNotContains: ").append(toIndentedString(ipNotContains)).append("\n");
    sb.append("    ipNotEndsWith: ").append(toIndentedString(ipNotEndsWith)).append("\n");
    sb.append("    ipNotIn: ").append(toIndentedString(ipNotIn)).append("\n");
    sb.append("    ipNotStartsWith: ").append(toIndentedString(ipNotStartsWith)).append("\n");
    sb.append("    ipStartsWith: ").append(toIndentedString(ipStartsWith)).append("\n");
    sb.append("    localId: ").append(toIndentedString(localId)).append("\n");
    sb.append("    localIdContains: ").append(toIndentedString(localIdContains)).append("\n");
    sb.append("    localIdEndsWith: ").append(toIndentedString(localIdEndsWith)).append("\n");
    sb.append("    localIdGt: ").append(toIndentedString(localIdGt)).append("\n");
    sb.append("    localIdGte: ").append(toIndentedString(localIdGte)).append("\n");
    sb.append("    localIdIn: ").append(toIndentedString(localIdIn)).append("\n");
    sb.append("    localIdLt: ").append(toIndentedString(localIdLt)).append("\n");
    sb.append("    localIdLte: ").append(toIndentedString(localIdLte)).append("\n");
    sb.append("    localIdNot: ").append(toIndentedString(localIdNot)).append("\n");
    sb.append("    localIdNotContains: ").append(toIndentedString(localIdNotContains)).append("\n");
    sb.append("    localIdNotEndsWith: ").append(toIndentedString(localIdNotEndsWith)).append("\n");
    sb.append("    localIdNotIn: ").append(toIndentedString(localIdNotIn)).append("\n");
    sb.append("    localIdNotStartsWith: ").append(toIndentedString(localIdNotStartsWith)).append("\n");
    sb.append("    localIdStartsWith: ").append(toIndentedString(localIdStartsWith)).append("\n");
    sb.append("    NOT: ").append(toIndentedString(NOT)).append("\n");
    sb.append("    OR: ").append(toIndentedString(OR)).append("\n");
    sb.append("    username: ").append(toIndentedString(username)).append("\n");
    sb.append("    usernameContains: ").append(toIndentedString(usernameContains)).append("\n");
    sb.append("    usernameEndsWith: ").append(toIndentedString(usernameEndsWith)).append("\n");
    sb.append("    usernameGt: ").append(toIndentedString(usernameGt)).append("\n");
    sb.append("    usernameGte: ").append(toIndentedString(usernameGte)).append("\n");
    sb.append("    usernameIn: ").append(toIndentedString(usernameIn)).append("\n");
    sb.append("    usernameLt: ").append(toIndentedString(usernameLt)).append("\n");
    sb.append("    usernameLte: ").append(toIndentedString(usernameLte)).append("\n");
    sb.append("    usernameNot: ").append(toIndentedString(usernameNot)).append("\n");
    sb.append("    usernameNotContains: ").append(toIndentedString(usernameNotContains)).append("\n");
    sb.append("    usernameNotEndsWith: ").append(toIndentedString(usernameNotEndsWith)).append("\n");
    sb.append("    usernameNotIn: ").append(toIndentedString(usernameNotIn)).append("\n");
    sb.append("    usernameNotStartsWith: ").append(toIndentedString(usernameNotStartsWith)).append("\n");
    sb.append("    usernameStartsWith: ").append(toIndentedString(usernameStartsWith)).append("\n");
    sb.append("    valid: ").append(toIndentedString(valid)).append("\n");
    sb.append("    validNot: ").append(toIndentedString(validNot)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

