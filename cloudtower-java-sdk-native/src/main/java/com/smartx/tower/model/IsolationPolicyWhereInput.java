/*
 * Tower SDK API
 * cloudtower operation API and SDK
 *
 * The version of the OpenAPI document: 1.7.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.smartx.tower.model;

import java.util.Objects;
import java.util.Arrays;
import java.util.Map;
import java.util.HashMap;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import com.smartx.tower.model.EverouteClusterWhereInput;
import com.smartx.tower.model.IsolationMode;
import com.smartx.tower.model.LabelWhereInput;
import com.smartx.tower.model.VmWhereInput;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.util.ArrayList;
import java.util.List;
import org.openapitools.jackson.nullable.JsonNullable;
import com.fasterxml.jackson.annotation.JsonIgnore;
import org.openapitools.jackson.nullable.JsonNullable;
import java.util.NoSuchElementException;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;


/**
 * IsolationPolicyWhereInput
 */
@JsonPropertyOrder({
  IsolationPolicyWhereInput.JSON_PROPERTY_A_N_D,
  IsolationPolicyWhereInput.JSON_PROPERTY_EVEROUTE_CLUSTER,
  IsolationPolicyWhereInput.JSON_PROPERTY_ID,
  IsolationPolicyWhereInput.JSON_PROPERTY_ID_CONTAINS,
  IsolationPolicyWhereInput.JSON_PROPERTY_ID_ENDS_WITH,
  IsolationPolicyWhereInput.JSON_PROPERTY_ID_GT,
  IsolationPolicyWhereInput.JSON_PROPERTY_ID_GTE,
  IsolationPolicyWhereInput.JSON_PROPERTY_ID_IN,
  IsolationPolicyWhereInput.JSON_PROPERTY_ID_LT,
  IsolationPolicyWhereInput.JSON_PROPERTY_ID_LTE,
  IsolationPolicyWhereInput.JSON_PROPERTY_ID_NOT,
  IsolationPolicyWhereInput.JSON_PROPERTY_ID_NOT_CONTAINS,
  IsolationPolicyWhereInput.JSON_PROPERTY_ID_NOT_ENDS_WITH,
  IsolationPolicyWhereInput.JSON_PROPERTY_ID_NOT_IN,
  IsolationPolicyWhereInput.JSON_PROPERTY_ID_NOT_STARTS_WITH,
  IsolationPolicyWhereInput.JSON_PROPERTY_ID_STARTS_WITH,
  IsolationPolicyWhereInput.JSON_PROPERTY_LABELS_EVERY,
  IsolationPolicyWhereInput.JSON_PROPERTY_LABELS_NONE,
  IsolationPolicyWhereInput.JSON_PROPERTY_LABELS_SOME,
  IsolationPolicyWhereInput.JSON_PROPERTY_MODE,
  IsolationPolicyWhereInput.JSON_PROPERTY_MODE_IN,
  IsolationPolicyWhereInput.JSON_PROPERTY_MODE_NOT,
  IsolationPolicyWhereInput.JSON_PROPERTY_MODE_NOT_IN,
  IsolationPolicyWhereInput.JSON_PROPERTY_N_O_T,
  IsolationPolicyWhereInput.JSON_PROPERTY_O_R,
  IsolationPolicyWhereInput.JSON_PROPERTY_VM
})
@javax.annotation.processing.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2021-10-27T15:59:14.939791800+08:00[Asia/Shanghai]")
public class IsolationPolicyWhereInput {
  public static final String JSON_PROPERTY_A_N_D = "AND";
  private JsonNullable<List<IsolationPolicyWhereInput>> AND = JsonNullable.<List<IsolationPolicyWhereInput>>undefined();

  public static final String JSON_PROPERTY_EVEROUTE_CLUSTER = "everoute_cluster";
  private JsonNullable<EverouteClusterWhereInput> everouteCluster = JsonNullable.<EverouteClusterWhereInput>undefined();

  public static final String JSON_PROPERTY_ID = "id";
  private JsonNullable<String> id = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_ID_CONTAINS = "id_contains";
  private JsonNullable<String> idContains = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_ID_ENDS_WITH = "id_ends_with";
  private JsonNullable<String> idEndsWith = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_ID_GT = "id_gt";
  private JsonNullable<String> idGt = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_ID_GTE = "id_gte";
  private JsonNullable<String> idGte = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_ID_IN = "id_in";
  private JsonNullable<List<String>> idIn = JsonNullable.<List<String>>undefined();

  public static final String JSON_PROPERTY_ID_LT = "id_lt";
  private JsonNullable<String> idLt = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_ID_LTE = "id_lte";
  private JsonNullable<String> idLte = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_ID_NOT = "id_not";
  private JsonNullable<String> idNot = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_ID_NOT_CONTAINS = "id_not_contains";
  private JsonNullable<String> idNotContains = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_ID_NOT_ENDS_WITH = "id_not_ends_with";
  private JsonNullable<String> idNotEndsWith = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_ID_NOT_IN = "id_not_in";
  private JsonNullable<List<String>> idNotIn = JsonNullable.<List<String>>undefined();

  public static final String JSON_PROPERTY_ID_NOT_STARTS_WITH = "id_not_starts_with";
  private JsonNullable<String> idNotStartsWith = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_ID_STARTS_WITH = "id_starts_with";
  private JsonNullable<String> idStartsWith = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_LABELS_EVERY = "labels_every";
  private JsonNullable<LabelWhereInput> labelsEvery = JsonNullable.<LabelWhereInput>undefined();

  public static final String JSON_PROPERTY_LABELS_NONE = "labels_none";
  private JsonNullable<LabelWhereInput> labelsNone = JsonNullable.<LabelWhereInput>undefined();

  public static final String JSON_PROPERTY_LABELS_SOME = "labels_some";
  private JsonNullable<LabelWhereInput> labelsSome = JsonNullable.<LabelWhereInput>undefined();

  public static final String JSON_PROPERTY_MODE = "mode";
  private JsonNullable<IsolationMode> mode = JsonNullable.<IsolationMode>undefined();

  public static final String JSON_PROPERTY_MODE_IN = "mode_in";
  private JsonNullable<List<IsolationMode>> modeIn = JsonNullable.<List<IsolationMode>>undefined();

  public static final String JSON_PROPERTY_MODE_NOT = "mode_not";
  private JsonNullable<IsolationMode> modeNot = JsonNullable.<IsolationMode>undefined();

  public static final String JSON_PROPERTY_MODE_NOT_IN = "mode_not_in";
  private JsonNullable<List<IsolationMode>> modeNotIn = JsonNullable.<List<IsolationMode>>undefined();

  public static final String JSON_PROPERTY_N_O_T = "NOT";
  private JsonNullable<List<IsolationPolicyWhereInput>> NOT = JsonNullable.<List<IsolationPolicyWhereInput>>undefined();

  public static final String JSON_PROPERTY_O_R = "OR";
  private JsonNullable<List<IsolationPolicyWhereInput>> OR = JsonNullable.<List<IsolationPolicyWhereInput>>undefined();

  public static final String JSON_PROPERTY_VM = "vm";
  private JsonNullable<VmWhereInput> vm = JsonNullable.<VmWhereInput>undefined();


  public IsolationPolicyWhereInput AND(List<IsolationPolicyWhereInput> AND) {
    this.AND = JsonNullable.<List<IsolationPolicyWhereInput>>of(AND);
    return this;
  }

  public IsolationPolicyWhereInput addANDItem(IsolationPolicyWhereInput ANDItem) {
    if (this.AND == null || !this.AND.isPresent()) {
      this.AND = JsonNullable.<List<IsolationPolicyWhereInput>>of(new ArrayList<>());
    }
    try {
      this.AND.get().add(ANDItem);
    } catch (java.util.NoSuchElementException e) {
      // this can never happen, as we make sure above that the value is present
    }
    return this;
  }

   /**
   * Get AND
   * @return AND
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public List<IsolationPolicyWhereInput> getAND() {
        return AND.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_A_N_D)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<List<IsolationPolicyWhereInput>> getAND_JsonNullable() {
    return AND;
  }
  
  @JsonProperty(JSON_PROPERTY_A_N_D)
  public void setAND_JsonNullable(JsonNullable<List<IsolationPolicyWhereInput>> AND) {
    this.AND = AND;
  }

  public void setAND(List<IsolationPolicyWhereInput> AND) {
    this.AND = JsonNullable.<List<IsolationPolicyWhereInput>>of(AND);
  }


  public IsolationPolicyWhereInput everouteCluster(EverouteClusterWhereInput everouteCluster) {
    this.everouteCluster = JsonNullable.<EverouteClusterWhereInput>of(everouteCluster);
    return this;
  }

   /**
   * Get everouteCluster
   * @return everouteCluster
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public EverouteClusterWhereInput getEverouteCluster() {
        return everouteCluster.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_EVEROUTE_CLUSTER)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<EverouteClusterWhereInput> getEverouteCluster_JsonNullable() {
    return everouteCluster;
  }
  
  @JsonProperty(JSON_PROPERTY_EVEROUTE_CLUSTER)
  public void setEverouteCluster_JsonNullable(JsonNullable<EverouteClusterWhereInput> everouteCluster) {
    this.everouteCluster = everouteCluster;
  }

  public void setEverouteCluster(EverouteClusterWhereInput everouteCluster) {
    this.everouteCluster = JsonNullable.<EverouteClusterWhereInput>of(everouteCluster);
  }


  public IsolationPolicyWhereInput id(String id) {
    this.id = JsonNullable.<String>of(id);
    return this;
  }

   /**
   * Get id
   * @return id
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getId() {
        return id.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getId_JsonNullable() {
    return id;
  }
  
  @JsonProperty(JSON_PROPERTY_ID)
  public void setId_JsonNullable(JsonNullable<String> id) {
    this.id = id;
  }

  public void setId(String id) {
    this.id = JsonNullable.<String>of(id);
  }


  public IsolationPolicyWhereInput idContains(String idContains) {
    this.idContains = JsonNullable.<String>of(idContains);
    return this;
  }

   /**
   * Get idContains
   * @return idContains
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getIdContains() {
        return idContains.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_ID_CONTAINS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getIdContains_JsonNullable() {
    return idContains;
  }
  
  @JsonProperty(JSON_PROPERTY_ID_CONTAINS)
  public void setIdContains_JsonNullable(JsonNullable<String> idContains) {
    this.idContains = idContains;
  }

  public void setIdContains(String idContains) {
    this.idContains = JsonNullable.<String>of(idContains);
  }


  public IsolationPolicyWhereInput idEndsWith(String idEndsWith) {
    this.idEndsWith = JsonNullable.<String>of(idEndsWith);
    return this;
  }

   /**
   * Get idEndsWith
   * @return idEndsWith
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getIdEndsWith() {
        return idEndsWith.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_ID_ENDS_WITH)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getIdEndsWith_JsonNullable() {
    return idEndsWith;
  }
  
  @JsonProperty(JSON_PROPERTY_ID_ENDS_WITH)
  public void setIdEndsWith_JsonNullable(JsonNullable<String> idEndsWith) {
    this.idEndsWith = idEndsWith;
  }

  public void setIdEndsWith(String idEndsWith) {
    this.idEndsWith = JsonNullable.<String>of(idEndsWith);
  }


  public IsolationPolicyWhereInput idGt(String idGt) {
    this.idGt = JsonNullable.<String>of(idGt);
    return this;
  }

   /**
   * Get idGt
   * @return idGt
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getIdGt() {
        return idGt.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_ID_GT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getIdGt_JsonNullable() {
    return idGt;
  }
  
  @JsonProperty(JSON_PROPERTY_ID_GT)
  public void setIdGt_JsonNullable(JsonNullable<String> idGt) {
    this.idGt = idGt;
  }

  public void setIdGt(String idGt) {
    this.idGt = JsonNullable.<String>of(idGt);
  }


  public IsolationPolicyWhereInput idGte(String idGte) {
    this.idGte = JsonNullable.<String>of(idGte);
    return this;
  }

   /**
   * Get idGte
   * @return idGte
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getIdGte() {
        return idGte.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_ID_GTE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getIdGte_JsonNullable() {
    return idGte;
  }
  
  @JsonProperty(JSON_PROPERTY_ID_GTE)
  public void setIdGte_JsonNullable(JsonNullable<String> idGte) {
    this.idGte = idGte;
  }

  public void setIdGte(String idGte) {
    this.idGte = JsonNullable.<String>of(idGte);
  }


  public IsolationPolicyWhereInput idIn(List<String> idIn) {
    this.idIn = JsonNullable.<List<String>>of(idIn);
    return this;
  }

  public IsolationPolicyWhereInput addIdInItem(String idInItem) {
    if (this.idIn == null || !this.idIn.isPresent()) {
      this.idIn = JsonNullable.<List<String>>of(new ArrayList<>());
    }
    try {
      this.idIn.get().add(idInItem);
    } catch (java.util.NoSuchElementException e) {
      // this can never happen, as we make sure above that the value is present
    }
    return this;
  }

   /**
   * Get idIn
   * @return idIn
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public List<String> getIdIn() {
        return idIn.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_ID_IN)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<List<String>> getIdIn_JsonNullable() {
    return idIn;
  }
  
  @JsonProperty(JSON_PROPERTY_ID_IN)
  public void setIdIn_JsonNullable(JsonNullable<List<String>> idIn) {
    this.idIn = idIn;
  }

  public void setIdIn(List<String> idIn) {
    this.idIn = JsonNullable.<List<String>>of(idIn);
  }


  public IsolationPolicyWhereInput idLt(String idLt) {
    this.idLt = JsonNullable.<String>of(idLt);
    return this;
  }

   /**
   * Get idLt
   * @return idLt
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getIdLt() {
        return idLt.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_ID_LT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getIdLt_JsonNullable() {
    return idLt;
  }
  
  @JsonProperty(JSON_PROPERTY_ID_LT)
  public void setIdLt_JsonNullable(JsonNullable<String> idLt) {
    this.idLt = idLt;
  }

  public void setIdLt(String idLt) {
    this.idLt = JsonNullable.<String>of(idLt);
  }


  public IsolationPolicyWhereInput idLte(String idLte) {
    this.idLte = JsonNullable.<String>of(idLte);
    return this;
  }

   /**
   * Get idLte
   * @return idLte
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getIdLte() {
        return idLte.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_ID_LTE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getIdLte_JsonNullable() {
    return idLte;
  }
  
  @JsonProperty(JSON_PROPERTY_ID_LTE)
  public void setIdLte_JsonNullable(JsonNullable<String> idLte) {
    this.idLte = idLte;
  }

  public void setIdLte(String idLte) {
    this.idLte = JsonNullable.<String>of(idLte);
  }


  public IsolationPolicyWhereInput idNot(String idNot) {
    this.idNot = JsonNullable.<String>of(idNot);
    return this;
  }

   /**
   * Get idNot
   * @return idNot
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getIdNot() {
        return idNot.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_ID_NOT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getIdNot_JsonNullable() {
    return idNot;
  }
  
  @JsonProperty(JSON_PROPERTY_ID_NOT)
  public void setIdNot_JsonNullable(JsonNullable<String> idNot) {
    this.idNot = idNot;
  }

  public void setIdNot(String idNot) {
    this.idNot = JsonNullable.<String>of(idNot);
  }


  public IsolationPolicyWhereInput idNotContains(String idNotContains) {
    this.idNotContains = JsonNullable.<String>of(idNotContains);
    return this;
  }

   /**
   * Get idNotContains
   * @return idNotContains
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getIdNotContains() {
        return idNotContains.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_ID_NOT_CONTAINS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getIdNotContains_JsonNullable() {
    return idNotContains;
  }
  
  @JsonProperty(JSON_PROPERTY_ID_NOT_CONTAINS)
  public void setIdNotContains_JsonNullable(JsonNullable<String> idNotContains) {
    this.idNotContains = idNotContains;
  }

  public void setIdNotContains(String idNotContains) {
    this.idNotContains = JsonNullable.<String>of(idNotContains);
  }


  public IsolationPolicyWhereInput idNotEndsWith(String idNotEndsWith) {
    this.idNotEndsWith = JsonNullable.<String>of(idNotEndsWith);
    return this;
  }

   /**
   * Get idNotEndsWith
   * @return idNotEndsWith
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getIdNotEndsWith() {
        return idNotEndsWith.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_ID_NOT_ENDS_WITH)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getIdNotEndsWith_JsonNullable() {
    return idNotEndsWith;
  }
  
  @JsonProperty(JSON_PROPERTY_ID_NOT_ENDS_WITH)
  public void setIdNotEndsWith_JsonNullable(JsonNullable<String> idNotEndsWith) {
    this.idNotEndsWith = idNotEndsWith;
  }

  public void setIdNotEndsWith(String idNotEndsWith) {
    this.idNotEndsWith = JsonNullable.<String>of(idNotEndsWith);
  }


  public IsolationPolicyWhereInput idNotIn(List<String> idNotIn) {
    this.idNotIn = JsonNullable.<List<String>>of(idNotIn);
    return this;
  }

  public IsolationPolicyWhereInput addIdNotInItem(String idNotInItem) {
    if (this.idNotIn == null || !this.idNotIn.isPresent()) {
      this.idNotIn = JsonNullable.<List<String>>of(new ArrayList<>());
    }
    try {
      this.idNotIn.get().add(idNotInItem);
    } catch (java.util.NoSuchElementException e) {
      // this can never happen, as we make sure above that the value is present
    }
    return this;
  }

   /**
   * Get idNotIn
   * @return idNotIn
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public List<String> getIdNotIn() {
        return idNotIn.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_ID_NOT_IN)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<List<String>> getIdNotIn_JsonNullable() {
    return idNotIn;
  }
  
  @JsonProperty(JSON_PROPERTY_ID_NOT_IN)
  public void setIdNotIn_JsonNullable(JsonNullable<List<String>> idNotIn) {
    this.idNotIn = idNotIn;
  }

  public void setIdNotIn(List<String> idNotIn) {
    this.idNotIn = JsonNullable.<List<String>>of(idNotIn);
  }


  public IsolationPolicyWhereInput idNotStartsWith(String idNotStartsWith) {
    this.idNotStartsWith = JsonNullable.<String>of(idNotStartsWith);
    return this;
  }

   /**
   * Get idNotStartsWith
   * @return idNotStartsWith
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getIdNotStartsWith() {
        return idNotStartsWith.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_ID_NOT_STARTS_WITH)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getIdNotStartsWith_JsonNullable() {
    return idNotStartsWith;
  }
  
  @JsonProperty(JSON_PROPERTY_ID_NOT_STARTS_WITH)
  public void setIdNotStartsWith_JsonNullable(JsonNullable<String> idNotStartsWith) {
    this.idNotStartsWith = idNotStartsWith;
  }

  public void setIdNotStartsWith(String idNotStartsWith) {
    this.idNotStartsWith = JsonNullable.<String>of(idNotStartsWith);
  }


  public IsolationPolicyWhereInput idStartsWith(String idStartsWith) {
    this.idStartsWith = JsonNullable.<String>of(idStartsWith);
    return this;
  }

   /**
   * Get idStartsWith
   * @return idStartsWith
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getIdStartsWith() {
        return idStartsWith.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_ID_STARTS_WITH)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getIdStartsWith_JsonNullable() {
    return idStartsWith;
  }
  
  @JsonProperty(JSON_PROPERTY_ID_STARTS_WITH)
  public void setIdStartsWith_JsonNullable(JsonNullable<String> idStartsWith) {
    this.idStartsWith = idStartsWith;
  }

  public void setIdStartsWith(String idStartsWith) {
    this.idStartsWith = JsonNullable.<String>of(idStartsWith);
  }


  public IsolationPolicyWhereInput labelsEvery(LabelWhereInput labelsEvery) {
    this.labelsEvery = JsonNullable.<LabelWhereInput>of(labelsEvery);
    return this;
  }

   /**
   * Get labelsEvery
   * @return labelsEvery
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public LabelWhereInput getLabelsEvery() {
        return labelsEvery.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_LABELS_EVERY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<LabelWhereInput> getLabelsEvery_JsonNullable() {
    return labelsEvery;
  }
  
  @JsonProperty(JSON_PROPERTY_LABELS_EVERY)
  public void setLabelsEvery_JsonNullable(JsonNullable<LabelWhereInput> labelsEvery) {
    this.labelsEvery = labelsEvery;
  }

  public void setLabelsEvery(LabelWhereInput labelsEvery) {
    this.labelsEvery = JsonNullable.<LabelWhereInput>of(labelsEvery);
  }


  public IsolationPolicyWhereInput labelsNone(LabelWhereInput labelsNone) {
    this.labelsNone = JsonNullable.<LabelWhereInput>of(labelsNone);
    return this;
  }

   /**
   * Get labelsNone
   * @return labelsNone
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public LabelWhereInput getLabelsNone() {
        return labelsNone.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_LABELS_NONE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<LabelWhereInput> getLabelsNone_JsonNullable() {
    return labelsNone;
  }
  
  @JsonProperty(JSON_PROPERTY_LABELS_NONE)
  public void setLabelsNone_JsonNullable(JsonNullable<LabelWhereInput> labelsNone) {
    this.labelsNone = labelsNone;
  }

  public void setLabelsNone(LabelWhereInput labelsNone) {
    this.labelsNone = JsonNullable.<LabelWhereInput>of(labelsNone);
  }


  public IsolationPolicyWhereInput labelsSome(LabelWhereInput labelsSome) {
    this.labelsSome = JsonNullable.<LabelWhereInput>of(labelsSome);
    return this;
  }

   /**
   * Get labelsSome
   * @return labelsSome
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public LabelWhereInput getLabelsSome() {
        return labelsSome.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_LABELS_SOME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<LabelWhereInput> getLabelsSome_JsonNullable() {
    return labelsSome;
  }
  
  @JsonProperty(JSON_PROPERTY_LABELS_SOME)
  public void setLabelsSome_JsonNullable(JsonNullable<LabelWhereInput> labelsSome) {
    this.labelsSome = labelsSome;
  }

  public void setLabelsSome(LabelWhereInput labelsSome) {
    this.labelsSome = JsonNullable.<LabelWhereInput>of(labelsSome);
  }


  public IsolationPolicyWhereInput mode(IsolationMode mode) {
    this.mode = JsonNullable.<IsolationMode>of(mode);
    return this;
  }

   /**
   * Get mode
   * @return mode
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public IsolationMode getMode() {
        return mode.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_MODE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<IsolationMode> getMode_JsonNullable() {
    return mode;
  }
  
  @JsonProperty(JSON_PROPERTY_MODE)
  public void setMode_JsonNullable(JsonNullable<IsolationMode> mode) {
    this.mode = mode;
  }

  public void setMode(IsolationMode mode) {
    this.mode = JsonNullable.<IsolationMode>of(mode);
  }


  public IsolationPolicyWhereInput modeIn(List<IsolationMode> modeIn) {
    this.modeIn = JsonNullable.<List<IsolationMode>>of(modeIn);
    return this;
  }

  public IsolationPolicyWhereInput addModeInItem(IsolationMode modeInItem) {
    if (this.modeIn == null || !this.modeIn.isPresent()) {
      this.modeIn = JsonNullable.<List<IsolationMode>>of(new ArrayList<>());
    }
    try {
      this.modeIn.get().add(modeInItem);
    } catch (java.util.NoSuchElementException e) {
      // this can never happen, as we make sure above that the value is present
    }
    return this;
  }

   /**
   * Get modeIn
   * @return modeIn
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public List<IsolationMode> getModeIn() {
        return modeIn.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_MODE_IN)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<List<IsolationMode>> getModeIn_JsonNullable() {
    return modeIn;
  }
  
  @JsonProperty(JSON_PROPERTY_MODE_IN)
  public void setModeIn_JsonNullable(JsonNullable<List<IsolationMode>> modeIn) {
    this.modeIn = modeIn;
  }

  public void setModeIn(List<IsolationMode> modeIn) {
    this.modeIn = JsonNullable.<List<IsolationMode>>of(modeIn);
  }


  public IsolationPolicyWhereInput modeNot(IsolationMode modeNot) {
    this.modeNot = JsonNullable.<IsolationMode>of(modeNot);
    return this;
  }

   /**
   * Get modeNot
   * @return modeNot
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public IsolationMode getModeNot() {
        return modeNot.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_MODE_NOT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<IsolationMode> getModeNot_JsonNullable() {
    return modeNot;
  }
  
  @JsonProperty(JSON_PROPERTY_MODE_NOT)
  public void setModeNot_JsonNullable(JsonNullable<IsolationMode> modeNot) {
    this.modeNot = modeNot;
  }

  public void setModeNot(IsolationMode modeNot) {
    this.modeNot = JsonNullable.<IsolationMode>of(modeNot);
  }


  public IsolationPolicyWhereInput modeNotIn(List<IsolationMode> modeNotIn) {
    this.modeNotIn = JsonNullable.<List<IsolationMode>>of(modeNotIn);
    return this;
  }

  public IsolationPolicyWhereInput addModeNotInItem(IsolationMode modeNotInItem) {
    if (this.modeNotIn == null || !this.modeNotIn.isPresent()) {
      this.modeNotIn = JsonNullable.<List<IsolationMode>>of(new ArrayList<>());
    }
    try {
      this.modeNotIn.get().add(modeNotInItem);
    } catch (java.util.NoSuchElementException e) {
      // this can never happen, as we make sure above that the value is present
    }
    return this;
  }

   /**
   * Get modeNotIn
   * @return modeNotIn
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public List<IsolationMode> getModeNotIn() {
        return modeNotIn.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_MODE_NOT_IN)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<List<IsolationMode>> getModeNotIn_JsonNullable() {
    return modeNotIn;
  }
  
  @JsonProperty(JSON_PROPERTY_MODE_NOT_IN)
  public void setModeNotIn_JsonNullable(JsonNullable<List<IsolationMode>> modeNotIn) {
    this.modeNotIn = modeNotIn;
  }

  public void setModeNotIn(List<IsolationMode> modeNotIn) {
    this.modeNotIn = JsonNullable.<List<IsolationMode>>of(modeNotIn);
  }


  public IsolationPolicyWhereInput NOT(List<IsolationPolicyWhereInput> NOT) {
    this.NOT = JsonNullable.<List<IsolationPolicyWhereInput>>of(NOT);
    return this;
  }

  public IsolationPolicyWhereInput addNOTItem(IsolationPolicyWhereInput NOTItem) {
    if (this.NOT == null || !this.NOT.isPresent()) {
      this.NOT = JsonNullable.<List<IsolationPolicyWhereInput>>of(new ArrayList<>());
    }
    try {
      this.NOT.get().add(NOTItem);
    } catch (java.util.NoSuchElementException e) {
      // this can never happen, as we make sure above that the value is present
    }
    return this;
  }

   /**
   * Get NOT
   * @return NOT
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public List<IsolationPolicyWhereInput> getNOT() {
        return NOT.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_N_O_T)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<List<IsolationPolicyWhereInput>> getNOT_JsonNullable() {
    return NOT;
  }
  
  @JsonProperty(JSON_PROPERTY_N_O_T)
  public void setNOT_JsonNullable(JsonNullable<List<IsolationPolicyWhereInput>> NOT) {
    this.NOT = NOT;
  }

  public void setNOT(List<IsolationPolicyWhereInput> NOT) {
    this.NOT = JsonNullable.<List<IsolationPolicyWhereInput>>of(NOT);
  }


  public IsolationPolicyWhereInput OR(List<IsolationPolicyWhereInput> OR) {
    this.OR = JsonNullable.<List<IsolationPolicyWhereInput>>of(OR);
    return this;
  }

  public IsolationPolicyWhereInput addORItem(IsolationPolicyWhereInput ORItem) {
    if (this.OR == null || !this.OR.isPresent()) {
      this.OR = JsonNullable.<List<IsolationPolicyWhereInput>>of(new ArrayList<>());
    }
    try {
      this.OR.get().add(ORItem);
    } catch (java.util.NoSuchElementException e) {
      // this can never happen, as we make sure above that the value is present
    }
    return this;
  }

   /**
   * Get OR
   * @return OR
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public List<IsolationPolicyWhereInput> getOR() {
        return OR.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_O_R)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<List<IsolationPolicyWhereInput>> getOR_JsonNullable() {
    return OR;
  }
  
  @JsonProperty(JSON_PROPERTY_O_R)
  public void setOR_JsonNullable(JsonNullable<List<IsolationPolicyWhereInput>> OR) {
    this.OR = OR;
  }

  public void setOR(List<IsolationPolicyWhereInput> OR) {
    this.OR = JsonNullable.<List<IsolationPolicyWhereInput>>of(OR);
  }


  public IsolationPolicyWhereInput vm(VmWhereInput vm) {
    this.vm = JsonNullable.<VmWhereInput>of(vm);
    return this;
  }

   /**
   * Get vm
   * @return vm
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public VmWhereInput getVm() {
        return vm.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_VM)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<VmWhereInput> getVm_JsonNullable() {
    return vm;
  }
  
  @JsonProperty(JSON_PROPERTY_VM)
  public void setVm_JsonNullable(JsonNullable<VmWhereInput> vm) {
    this.vm = vm;
  }

  public void setVm(VmWhereInput vm) {
    this.vm = JsonNullable.<VmWhereInput>of(vm);
  }


  /**
   * Return true if this IsolationPolicyWhereInput object is equal to o.
   */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    IsolationPolicyWhereInput isolationPolicyWhereInput = (IsolationPolicyWhereInput) o;
    return equalsNullable(this.AND, isolationPolicyWhereInput.AND) &&
        equalsNullable(this.everouteCluster, isolationPolicyWhereInput.everouteCluster) &&
        equalsNullable(this.id, isolationPolicyWhereInput.id) &&
        equalsNullable(this.idContains, isolationPolicyWhereInput.idContains) &&
        equalsNullable(this.idEndsWith, isolationPolicyWhereInput.idEndsWith) &&
        equalsNullable(this.idGt, isolationPolicyWhereInput.idGt) &&
        equalsNullable(this.idGte, isolationPolicyWhereInput.idGte) &&
        equalsNullable(this.idIn, isolationPolicyWhereInput.idIn) &&
        equalsNullable(this.idLt, isolationPolicyWhereInput.idLt) &&
        equalsNullable(this.idLte, isolationPolicyWhereInput.idLte) &&
        equalsNullable(this.idNot, isolationPolicyWhereInput.idNot) &&
        equalsNullable(this.idNotContains, isolationPolicyWhereInput.idNotContains) &&
        equalsNullable(this.idNotEndsWith, isolationPolicyWhereInput.idNotEndsWith) &&
        equalsNullable(this.idNotIn, isolationPolicyWhereInput.idNotIn) &&
        equalsNullable(this.idNotStartsWith, isolationPolicyWhereInput.idNotStartsWith) &&
        equalsNullable(this.idStartsWith, isolationPolicyWhereInput.idStartsWith) &&
        equalsNullable(this.labelsEvery, isolationPolicyWhereInput.labelsEvery) &&
        equalsNullable(this.labelsNone, isolationPolicyWhereInput.labelsNone) &&
        equalsNullable(this.labelsSome, isolationPolicyWhereInput.labelsSome) &&
        equalsNullable(this.mode, isolationPolicyWhereInput.mode) &&
        equalsNullable(this.modeIn, isolationPolicyWhereInput.modeIn) &&
        equalsNullable(this.modeNot, isolationPolicyWhereInput.modeNot) &&
        equalsNullable(this.modeNotIn, isolationPolicyWhereInput.modeNotIn) &&
        equalsNullable(this.NOT, isolationPolicyWhereInput.NOT) &&
        equalsNullable(this.OR, isolationPolicyWhereInput.OR) &&
        equalsNullable(this.vm, isolationPolicyWhereInput.vm);
  }

  private static <T> boolean equalsNullable(JsonNullable<T> a, JsonNullable<T> b) {
    return a == b || (a != null && b != null && a.isPresent() && b.isPresent() && Objects.deepEquals(a.get(), b.get()));
  }

  @Override
  public int hashCode() {
    return Objects.hash(hashCodeNullable(AND), hashCodeNullable(everouteCluster), hashCodeNullable(id), hashCodeNullable(idContains), hashCodeNullable(idEndsWith), hashCodeNullable(idGt), hashCodeNullable(idGte), hashCodeNullable(idIn), hashCodeNullable(idLt), hashCodeNullable(idLte), hashCodeNullable(idNot), hashCodeNullable(idNotContains), hashCodeNullable(idNotEndsWith), hashCodeNullable(idNotIn), hashCodeNullable(idNotStartsWith), hashCodeNullable(idStartsWith), hashCodeNullable(labelsEvery), hashCodeNullable(labelsNone), hashCodeNullable(labelsSome), hashCodeNullable(mode), hashCodeNullable(modeIn), hashCodeNullable(modeNot), hashCodeNullable(modeNotIn), hashCodeNullable(NOT), hashCodeNullable(OR), hashCodeNullable(vm));
  }

  private static <T> int hashCodeNullable(JsonNullable<T> a) {
    if (a == null) {
      return 1;
    }
    return a.isPresent() ? Arrays.deepHashCode(new Object[]{a.get()}) : 31;
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class IsolationPolicyWhereInput {\n");
    sb.append("    AND: ").append(toIndentedString(AND)).append("\n");
    sb.append("    everouteCluster: ").append(toIndentedString(everouteCluster)).append("\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    idContains: ").append(toIndentedString(idContains)).append("\n");
    sb.append("    idEndsWith: ").append(toIndentedString(idEndsWith)).append("\n");
    sb.append("    idGt: ").append(toIndentedString(idGt)).append("\n");
    sb.append("    idGte: ").append(toIndentedString(idGte)).append("\n");
    sb.append("    idIn: ").append(toIndentedString(idIn)).append("\n");
    sb.append("    idLt: ").append(toIndentedString(idLt)).append("\n");
    sb.append("    idLte: ").append(toIndentedString(idLte)).append("\n");
    sb.append("    idNot: ").append(toIndentedString(idNot)).append("\n");
    sb.append("    idNotContains: ").append(toIndentedString(idNotContains)).append("\n");
    sb.append("    idNotEndsWith: ").append(toIndentedString(idNotEndsWith)).append("\n");
    sb.append("    idNotIn: ").append(toIndentedString(idNotIn)).append("\n");
    sb.append("    idNotStartsWith: ").append(toIndentedString(idNotStartsWith)).append("\n");
    sb.append("    idStartsWith: ").append(toIndentedString(idStartsWith)).append("\n");
    sb.append("    labelsEvery: ").append(toIndentedString(labelsEvery)).append("\n");
    sb.append("    labelsNone: ").append(toIndentedString(labelsNone)).append("\n");
    sb.append("    labelsSome: ").append(toIndentedString(labelsSome)).append("\n");
    sb.append("    mode: ").append(toIndentedString(mode)).append("\n");
    sb.append("    modeIn: ").append(toIndentedString(modeIn)).append("\n");
    sb.append("    modeNot: ").append(toIndentedString(modeNot)).append("\n");
    sb.append("    modeNotIn: ").append(toIndentedString(modeNotIn)).append("\n");
    sb.append("    NOT: ").append(toIndentedString(NOT)).append("\n");
    sb.append("    OR: ").append(toIndentedString(OR)).append("\n");
    sb.append("    vm: ").append(toIndentedString(vm)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

