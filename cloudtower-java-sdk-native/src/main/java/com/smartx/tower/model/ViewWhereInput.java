/*
 * Tower SDK API
 * cloudtower operation API and SDK
 *
 * The version of the OpenAPI document: 1.7.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.smartx.tower.model;

import java.util.Objects;
import java.util.Arrays;
import java.util.Map;
import java.util.HashMap;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import com.smartx.tower.model.ClusterWhereInput;
import com.smartx.tower.model.EntityAsyncStatus;
import com.smartx.tower.model.GraphWhereInput;
import com.smartx.tower.model.TimeUnit;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.util.ArrayList;
import java.util.List;
import org.openapitools.jackson.nullable.JsonNullable;
import com.fasterxml.jackson.annotation.JsonIgnore;
import org.openapitools.jackson.nullable.JsonNullable;
import java.util.NoSuchElementException;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;


/**
 * ViewWhereInput
 */
@JsonPropertyOrder({
  ViewWhereInput.JSON_PROPERTY_A_N_D,
  ViewWhereInput.JSON_PROPERTY_CLUSTER,
  ViewWhereInput.JSON_PROPERTY_ENTITY_ASYNC_STATUS,
  ViewWhereInput.JSON_PROPERTY_ENTITY_ASYNC_STATUS_IN,
  ViewWhereInput.JSON_PROPERTY_ENTITY_ASYNC_STATUS_NOT,
  ViewWhereInput.JSON_PROPERTY_ENTITY_ASYNC_STATUS_NOT_IN,
  ViewWhereInput.JSON_PROPERTY_GRAPHS_EVERY,
  ViewWhereInput.JSON_PROPERTY_GRAPHS_NONE,
  ViewWhereInput.JSON_PROPERTY_GRAPHS_SOME,
  ViewWhereInput.JSON_PROPERTY_ID,
  ViewWhereInput.JSON_PROPERTY_ID_CONTAINS,
  ViewWhereInput.JSON_PROPERTY_ID_ENDS_WITH,
  ViewWhereInput.JSON_PROPERTY_ID_GT,
  ViewWhereInput.JSON_PROPERTY_ID_GTE,
  ViewWhereInput.JSON_PROPERTY_ID_IN,
  ViewWhereInput.JSON_PROPERTY_ID_LT,
  ViewWhereInput.JSON_PROPERTY_ID_LTE,
  ViewWhereInput.JSON_PROPERTY_ID_NOT,
  ViewWhereInput.JSON_PROPERTY_ID_NOT_CONTAINS,
  ViewWhereInput.JSON_PROPERTY_ID_NOT_ENDS_WITH,
  ViewWhereInput.JSON_PROPERTY_ID_NOT_IN,
  ViewWhereInput.JSON_PROPERTY_ID_NOT_STARTS_WITH,
  ViewWhereInput.JSON_PROPERTY_ID_STARTS_WITH,
  ViewWhereInput.JSON_PROPERTY_LOCAL_ID,
  ViewWhereInput.JSON_PROPERTY_LOCAL_ID_CONTAINS,
  ViewWhereInput.JSON_PROPERTY_LOCAL_ID_ENDS_WITH,
  ViewWhereInput.JSON_PROPERTY_LOCAL_ID_GT,
  ViewWhereInput.JSON_PROPERTY_LOCAL_ID_GTE,
  ViewWhereInput.JSON_PROPERTY_LOCAL_ID_IN,
  ViewWhereInput.JSON_PROPERTY_LOCAL_ID_LT,
  ViewWhereInput.JSON_PROPERTY_LOCAL_ID_LTE,
  ViewWhereInput.JSON_PROPERTY_LOCAL_ID_NOT,
  ViewWhereInput.JSON_PROPERTY_LOCAL_ID_NOT_CONTAINS,
  ViewWhereInput.JSON_PROPERTY_LOCAL_ID_NOT_ENDS_WITH,
  ViewWhereInput.JSON_PROPERTY_LOCAL_ID_NOT_IN,
  ViewWhereInput.JSON_PROPERTY_LOCAL_ID_NOT_STARTS_WITH,
  ViewWhereInput.JSON_PROPERTY_LOCAL_ID_STARTS_WITH,
  ViewWhereInput.JSON_PROPERTY_NAME,
  ViewWhereInput.JSON_PROPERTY_NAME_CONTAINS,
  ViewWhereInput.JSON_PROPERTY_NAME_ENDS_WITH,
  ViewWhereInput.JSON_PROPERTY_NAME_GT,
  ViewWhereInput.JSON_PROPERTY_NAME_GTE,
  ViewWhereInput.JSON_PROPERTY_NAME_IN,
  ViewWhereInput.JSON_PROPERTY_NAME_LT,
  ViewWhereInput.JSON_PROPERTY_NAME_LTE,
  ViewWhereInput.JSON_PROPERTY_NAME_NOT,
  ViewWhereInput.JSON_PROPERTY_NAME_NOT_CONTAINS,
  ViewWhereInput.JSON_PROPERTY_NAME_NOT_ENDS_WITH,
  ViewWhereInput.JSON_PROPERTY_NAME_NOT_IN,
  ViewWhereInput.JSON_PROPERTY_NAME_NOT_STARTS_WITH,
  ViewWhereInput.JSON_PROPERTY_NAME_STARTS_WITH,
  ViewWhereInput.JSON_PROPERTY_N_O_T,
  ViewWhereInput.JSON_PROPERTY_O_R,
  ViewWhereInput.JSON_PROPERTY_TIME_SPAN,
  ViewWhereInput.JSON_PROPERTY_TIME_SPAN_GT,
  ViewWhereInput.JSON_PROPERTY_TIME_SPAN_GTE,
  ViewWhereInput.JSON_PROPERTY_TIME_SPAN_IN,
  ViewWhereInput.JSON_PROPERTY_TIME_SPAN_LT,
  ViewWhereInput.JSON_PROPERTY_TIME_SPAN_LTE,
  ViewWhereInput.JSON_PROPERTY_TIME_SPAN_NOT,
  ViewWhereInput.JSON_PROPERTY_TIME_SPAN_NOT_IN,
  ViewWhereInput.JSON_PROPERTY_TIME_UNIT,
  ViewWhereInput.JSON_PROPERTY_TIME_UNIT_IN,
  ViewWhereInput.JSON_PROPERTY_TIME_UNIT_NOT,
  ViewWhereInput.JSON_PROPERTY_TIME_UNIT_NOT_IN
})
@javax.annotation.processing.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2021-10-27T15:59:14.939791800+08:00[Asia/Shanghai]")
public class ViewWhereInput {
  public static final String JSON_PROPERTY_A_N_D = "AND";
  private JsonNullable<List<ViewWhereInput>> AND = JsonNullable.<List<ViewWhereInput>>undefined();

  public static final String JSON_PROPERTY_CLUSTER = "cluster";
  private JsonNullable<ClusterWhereInput> cluster = JsonNullable.<ClusterWhereInput>undefined();

  public static final String JSON_PROPERTY_ENTITY_ASYNC_STATUS = "entityAsyncStatus";
  private JsonNullable<EntityAsyncStatus> entityAsyncStatus = JsonNullable.<EntityAsyncStatus>undefined();

  public static final String JSON_PROPERTY_ENTITY_ASYNC_STATUS_IN = "entityAsyncStatus_in";
  private JsonNullable<List<EntityAsyncStatus>> entityAsyncStatusIn = JsonNullable.<List<EntityAsyncStatus>>undefined();

  public static final String JSON_PROPERTY_ENTITY_ASYNC_STATUS_NOT = "entityAsyncStatus_not";
  private JsonNullable<EntityAsyncStatus> entityAsyncStatusNot = JsonNullable.<EntityAsyncStatus>undefined();

  public static final String JSON_PROPERTY_ENTITY_ASYNC_STATUS_NOT_IN = "entityAsyncStatus_not_in";
  private JsonNullable<List<EntityAsyncStatus>> entityAsyncStatusNotIn = JsonNullable.<List<EntityAsyncStatus>>undefined();

  public static final String JSON_PROPERTY_GRAPHS_EVERY = "graphs_every";
  private JsonNullable<GraphWhereInput> graphsEvery = JsonNullable.<GraphWhereInput>undefined();

  public static final String JSON_PROPERTY_GRAPHS_NONE = "graphs_none";
  private JsonNullable<GraphWhereInput> graphsNone = JsonNullable.<GraphWhereInput>undefined();

  public static final String JSON_PROPERTY_GRAPHS_SOME = "graphs_some";
  private JsonNullable<GraphWhereInput> graphsSome = JsonNullable.<GraphWhereInput>undefined();

  public static final String JSON_PROPERTY_ID = "id";
  private JsonNullable<String> id = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_ID_CONTAINS = "id_contains";
  private JsonNullable<String> idContains = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_ID_ENDS_WITH = "id_ends_with";
  private JsonNullable<String> idEndsWith = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_ID_GT = "id_gt";
  private JsonNullable<String> idGt = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_ID_GTE = "id_gte";
  private JsonNullable<String> idGte = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_ID_IN = "id_in";
  private JsonNullable<List<String>> idIn = JsonNullable.<List<String>>undefined();

  public static final String JSON_PROPERTY_ID_LT = "id_lt";
  private JsonNullable<String> idLt = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_ID_LTE = "id_lte";
  private JsonNullable<String> idLte = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_ID_NOT = "id_not";
  private JsonNullable<String> idNot = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_ID_NOT_CONTAINS = "id_not_contains";
  private JsonNullable<String> idNotContains = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_ID_NOT_ENDS_WITH = "id_not_ends_with";
  private JsonNullable<String> idNotEndsWith = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_ID_NOT_IN = "id_not_in";
  private JsonNullable<List<String>> idNotIn = JsonNullable.<List<String>>undefined();

  public static final String JSON_PROPERTY_ID_NOT_STARTS_WITH = "id_not_starts_with";
  private JsonNullable<String> idNotStartsWith = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_ID_STARTS_WITH = "id_starts_with";
  private JsonNullable<String> idStartsWith = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_LOCAL_ID = "local_id";
  private JsonNullable<String> localId = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_LOCAL_ID_CONTAINS = "local_id_contains";
  private JsonNullable<String> localIdContains = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_LOCAL_ID_ENDS_WITH = "local_id_ends_with";
  private JsonNullable<String> localIdEndsWith = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_LOCAL_ID_GT = "local_id_gt";
  private JsonNullable<String> localIdGt = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_LOCAL_ID_GTE = "local_id_gte";
  private JsonNullable<String> localIdGte = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_LOCAL_ID_IN = "local_id_in";
  private JsonNullable<List<String>> localIdIn = JsonNullable.<List<String>>undefined();

  public static final String JSON_PROPERTY_LOCAL_ID_LT = "local_id_lt";
  private JsonNullable<String> localIdLt = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_LOCAL_ID_LTE = "local_id_lte";
  private JsonNullable<String> localIdLte = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_LOCAL_ID_NOT = "local_id_not";
  private JsonNullable<String> localIdNot = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_LOCAL_ID_NOT_CONTAINS = "local_id_not_contains";
  private JsonNullable<String> localIdNotContains = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_LOCAL_ID_NOT_ENDS_WITH = "local_id_not_ends_with";
  private JsonNullable<String> localIdNotEndsWith = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_LOCAL_ID_NOT_IN = "local_id_not_in";
  private JsonNullable<List<String>> localIdNotIn = JsonNullable.<List<String>>undefined();

  public static final String JSON_PROPERTY_LOCAL_ID_NOT_STARTS_WITH = "local_id_not_starts_with";
  private JsonNullable<String> localIdNotStartsWith = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_LOCAL_ID_STARTS_WITH = "local_id_starts_with";
  private JsonNullable<String> localIdStartsWith = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_NAME = "name";
  private JsonNullable<String> name = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_NAME_CONTAINS = "name_contains";
  private JsonNullable<String> nameContains = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_NAME_ENDS_WITH = "name_ends_with";
  private JsonNullable<String> nameEndsWith = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_NAME_GT = "name_gt";
  private JsonNullable<String> nameGt = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_NAME_GTE = "name_gte";
  private JsonNullable<String> nameGte = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_NAME_IN = "name_in";
  private JsonNullable<List<String>> nameIn = JsonNullable.<List<String>>undefined();

  public static final String JSON_PROPERTY_NAME_LT = "name_lt";
  private JsonNullable<String> nameLt = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_NAME_LTE = "name_lte";
  private JsonNullable<String> nameLte = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_NAME_NOT = "name_not";
  private JsonNullable<String> nameNot = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_NAME_NOT_CONTAINS = "name_not_contains";
  private JsonNullable<String> nameNotContains = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_NAME_NOT_ENDS_WITH = "name_not_ends_with";
  private JsonNullable<String> nameNotEndsWith = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_NAME_NOT_IN = "name_not_in";
  private JsonNullable<List<String>> nameNotIn = JsonNullable.<List<String>>undefined();

  public static final String JSON_PROPERTY_NAME_NOT_STARTS_WITH = "name_not_starts_with";
  private JsonNullable<String> nameNotStartsWith = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_NAME_STARTS_WITH = "name_starts_with";
  private JsonNullable<String> nameStartsWith = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_N_O_T = "NOT";
  private JsonNullable<List<ViewWhereInput>> NOT = JsonNullable.<List<ViewWhereInput>>undefined();

  public static final String JSON_PROPERTY_O_R = "OR";
  private JsonNullable<List<ViewWhereInput>> OR = JsonNullable.<List<ViewWhereInput>>undefined();

  public static final String JSON_PROPERTY_TIME_SPAN = "time_span";
  private JsonNullable<Double> timeSpan = JsonNullable.<Double>undefined();

  public static final String JSON_PROPERTY_TIME_SPAN_GT = "time_span_gt";
  private JsonNullable<Double> timeSpanGt = JsonNullable.<Double>undefined();

  public static final String JSON_PROPERTY_TIME_SPAN_GTE = "time_span_gte";
  private JsonNullable<Double> timeSpanGte = JsonNullable.<Double>undefined();

  public static final String JSON_PROPERTY_TIME_SPAN_IN = "time_span_in";
  private JsonNullable<List<Double>> timeSpanIn = JsonNullable.<List<Double>>undefined();

  public static final String JSON_PROPERTY_TIME_SPAN_LT = "time_span_lt";
  private JsonNullable<Double> timeSpanLt = JsonNullable.<Double>undefined();

  public static final String JSON_PROPERTY_TIME_SPAN_LTE = "time_span_lte";
  private JsonNullable<Double> timeSpanLte = JsonNullable.<Double>undefined();

  public static final String JSON_PROPERTY_TIME_SPAN_NOT = "time_span_not";
  private JsonNullable<Double> timeSpanNot = JsonNullable.<Double>undefined();

  public static final String JSON_PROPERTY_TIME_SPAN_NOT_IN = "time_span_not_in";
  private JsonNullable<List<Double>> timeSpanNotIn = JsonNullable.<List<Double>>undefined();

  public static final String JSON_PROPERTY_TIME_UNIT = "time_unit";
  private JsonNullable<TimeUnit> timeUnit = JsonNullable.<TimeUnit>undefined();

  public static final String JSON_PROPERTY_TIME_UNIT_IN = "time_unit_in";
  private JsonNullable<List<TimeUnit>> timeUnitIn = JsonNullable.<List<TimeUnit>>undefined();

  public static final String JSON_PROPERTY_TIME_UNIT_NOT = "time_unit_not";
  private JsonNullable<TimeUnit> timeUnitNot = JsonNullable.<TimeUnit>undefined();

  public static final String JSON_PROPERTY_TIME_UNIT_NOT_IN = "time_unit_not_in";
  private JsonNullable<List<TimeUnit>> timeUnitNotIn = JsonNullable.<List<TimeUnit>>undefined();


  public ViewWhereInput AND(List<ViewWhereInput> AND) {
    this.AND = JsonNullable.<List<ViewWhereInput>>of(AND);
    return this;
  }

  public ViewWhereInput addANDItem(ViewWhereInput ANDItem) {
    if (this.AND == null || !this.AND.isPresent()) {
      this.AND = JsonNullable.<List<ViewWhereInput>>of(new ArrayList<>());
    }
    try {
      this.AND.get().add(ANDItem);
    } catch (java.util.NoSuchElementException e) {
      // this can never happen, as we make sure above that the value is present
    }
    return this;
  }

   /**
   * Get AND
   * @return AND
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public List<ViewWhereInput> getAND() {
        return AND.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_A_N_D)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<List<ViewWhereInput>> getAND_JsonNullable() {
    return AND;
  }
  
  @JsonProperty(JSON_PROPERTY_A_N_D)
  public void setAND_JsonNullable(JsonNullable<List<ViewWhereInput>> AND) {
    this.AND = AND;
  }

  public void setAND(List<ViewWhereInput> AND) {
    this.AND = JsonNullable.<List<ViewWhereInput>>of(AND);
  }


  public ViewWhereInput cluster(ClusterWhereInput cluster) {
    this.cluster = JsonNullable.<ClusterWhereInput>of(cluster);
    return this;
  }

   /**
   * Get cluster
   * @return cluster
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public ClusterWhereInput getCluster() {
        return cluster.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_CLUSTER)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<ClusterWhereInput> getCluster_JsonNullable() {
    return cluster;
  }
  
  @JsonProperty(JSON_PROPERTY_CLUSTER)
  public void setCluster_JsonNullable(JsonNullable<ClusterWhereInput> cluster) {
    this.cluster = cluster;
  }

  public void setCluster(ClusterWhereInput cluster) {
    this.cluster = JsonNullable.<ClusterWhereInput>of(cluster);
  }


  public ViewWhereInput entityAsyncStatus(EntityAsyncStatus entityAsyncStatus) {
    this.entityAsyncStatus = JsonNullable.<EntityAsyncStatus>of(entityAsyncStatus);
    return this;
  }

   /**
   * Get entityAsyncStatus
   * @return entityAsyncStatus
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public EntityAsyncStatus getEntityAsyncStatus() {
        return entityAsyncStatus.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_ENTITY_ASYNC_STATUS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<EntityAsyncStatus> getEntityAsyncStatus_JsonNullable() {
    return entityAsyncStatus;
  }
  
  @JsonProperty(JSON_PROPERTY_ENTITY_ASYNC_STATUS)
  public void setEntityAsyncStatus_JsonNullable(JsonNullable<EntityAsyncStatus> entityAsyncStatus) {
    this.entityAsyncStatus = entityAsyncStatus;
  }

  public void setEntityAsyncStatus(EntityAsyncStatus entityAsyncStatus) {
    this.entityAsyncStatus = JsonNullable.<EntityAsyncStatus>of(entityAsyncStatus);
  }


  public ViewWhereInput entityAsyncStatusIn(List<EntityAsyncStatus> entityAsyncStatusIn) {
    this.entityAsyncStatusIn = JsonNullable.<List<EntityAsyncStatus>>of(entityAsyncStatusIn);
    return this;
  }

  public ViewWhereInput addEntityAsyncStatusInItem(EntityAsyncStatus entityAsyncStatusInItem) {
    if (this.entityAsyncStatusIn == null || !this.entityAsyncStatusIn.isPresent()) {
      this.entityAsyncStatusIn = JsonNullable.<List<EntityAsyncStatus>>of(new ArrayList<>());
    }
    try {
      this.entityAsyncStatusIn.get().add(entityAsyncStatusInItem);
    } catch (java.util.NoSuchElementException e) {
      // this can never happen, as we make sure above that the value is present
    }
    return this;
  }

   /**
   * Get entityAsyncStatusIn
   * @return entityAsyncStatusIn
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public List<EntityAsyncStatus> getEntityAsyncStatusIn() {
        return entityAsyncStatusIn.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_ENTITY_ASYNC_STATUS_IN)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<List<EntityAsyncStatus>> getEntityAsyncStatusIn_JsonNullable() {
    return entityAsyncStatusIn;
  }
  
  @JsonProperty(JSON_PROPERTY_ENTITY_ASYNC_STATUS_IN)
  public void setEntityAsyncStatusIn_JsonNullable(JsonNullable<List<EntityAsyncStatus>> entityAsyncStatusIn) {
    this.entityAsyncStatusIn = entityAsyncStatusIn;
  }

  public void setEntityAsyncStatusIn(List<EntityAsyncStatus> entityAsyncStatusIn) {
    this.entityAsyncStatusIn = JsonNullable.<List<EntityAsyncStatus>>of(entityAsyncStatusIn);
  }


  public ViewWhereInput entityAsyncStatusNot(EntityAsyncStatus entityAsyncStatusNot) {
    this.entityAsyncStatusNot = JsonNullable.<EntityAsyncStatus>of(entityAsyncStatusNot);
    return this;
  }

   /**
   * Get entityAsyncStatusNot
   * @return entityAsyncStatusNot
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public EntityAsyncStatus getEntityAsyncStatusNot() {
        return entityAsyncStatusNot.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_ENTITY_ASYNC_STATUS_NOT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<EntityAsyncStatus> getEntityAsyncStatusNot_JsonNullable() {
    return entityAsyncStatusNot;
  }
  
  @JsonProperty(JSON_PROPERTY_ENTITY_ASYNC_STATUS_NOT)
  public void setEntityAsyncStatusNot_JsonNullable(JsonNullable<EntityAsyncStatus> entityAsyncStatusNot) {
    this.entityAsyncStatusNot = entityAsyncStatusNot;
  }

  public void setEntityAsyncStatusNot(EntityAsyncStatus entityAsyncStatusNot) {
    this.entityAsyncStatusNot = JsonNullable.<EntityAsyncStatus>of(entityAsyncStatusNot);
  }


  public ViewWhereInput entityAsyncStatusNotIn(List<EntityAsyncStatus> entityAsyncStatusNotIn) {
    this.entityAsyncStatusNotIn = JsonNullable.<List<EntityAsyncStatus>>of(entityAsyncStatusNotIn);
    return this;
  }

  public ViewWhereInput addEntityAsyncStatusNotInItem(EntityAsyncStatus entityAsyncStatusNotInItem) {
    if (this.entityAsyncStatusNotIn == null || !this.entityAsyncStatusNotIn.isPresent()) {
      this.entityAsyncStatusNotIn = JsonNullable.<List<EntityAsyncStatus>>of(new ArrayList<>());
    }
    try {
      this.entityAsyncStatusNotIn.get().add(entityAsyncStatusNotInItem);
    } catch (java.util.NoSuchElementException e) {
      // this can never happen, as we make sure above that the value is present
    }
    return this;
  }

   /**
   * Get entityAsyncStatusNotIn
   * @return entityAsyncStatusNotIn
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public List<EntityAsyncStatus> getEntityAsyncStatusNotIn() {
        return entityAsyncStatusNotIn.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_ENTITY_ASYNC_STATUS_NOT_IN)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<List<EntityAsyncStatus>> getEntityAsyncStatusNotIn_JsonNullable() {
    return entityAsyncStatusNotIn;
  }
  
  @JsonProperty(JSON_PROPERTY_ENTITY_ASYNC_STATUS_NOT_IN)
  public void setEntityAsyncStatusNotIn_JsonNullable(JsonNullable<List<EntityAsyncStatus>> entityAsyncStatusNotIn) {
    this.entityAsyncStatusNotIn = entityAsyncStatusNotIn;
  }

  public void setEntityAsyncStatusNotIn(List<EntityAsyncStatus> entityAsyncStatusNotIn) {
    this.entityAsyncStatusNotIn = JsonNullable.<List<EntityAsyncStatus>>of(entityAsyncStatusNotIn);
  }


  public ViewWhereInput graphsEvery(GraphWhereInput graphsEvery) {
    this.graphsEvery = JsonNullable.<GraphWhereInput>of(graphsEvery);
    return this;
  }

   /**
   * Get graphsEvery
   * @return graphsEvery
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public GraphWhereInput getGraphsEvery() {
        return graphsEvery.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_GRAPHS_EVERY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<GraphWhereInput> getGraphsEvery_JsonNullable() {
    return graphsEvery;
  }
  
  @JsonProperty(JSON_PROPERTY_GRAPHS_EVERY)
  public void setGraphsEvery_JsonNullable(JsonNullable<GraphWhereInput> graphsEvery) {
    this.graphsEvery = graphsEvery;
  }

  public void setGraphsEvery(GraphWhereInput graphsEvery) {
    this.graphsEvery = JsonNullable.<GraphWhereInput>of(graphsEvery);
  }


  public ViewWhereInput graphsNone(GraphWhereInput graphsNone) {
    this.graphsNone = JsonNullable.<GraphWhereInput>of(graphsNone);
    return this;
  }

   /**
   * Get graphsNone
   * @return graphsNone
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public GraphWhereInput getGraphsNone() {
        return graphsNone.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_GRAPHS_NONE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<GraphWhereInput> getGraphsNone_JsonNullable() {
    return graphsNone;
  }
  
  @JsonProperty(JSON_PROPERTY_GRAPHS_NONE)
  public void setGraphsNone_JsonNullable(JsonNullable<GraphWhereInput> graphsNone) {
    this.graphsNone = graphsNone;
  }

  public void setGraphsNone(GraphWhereInput graphsNone) {
    this.graphsNone = JsonNullable.<GraphWhereInput>of(graphsNone);
  }


  public ViewWhereInput graphsSome(GraphWhereInput graphsSome) {
    this.graphsSome = JsonNullable.<GraphWhereInput>of(graphsSome);
    return this;
  }

   /**
   * Get graphsSome
   * @return graphsSome
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public GraphWhereInput getGraphsSome() {
        return graphsSome.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_GRAPHS_SOME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<GraphWhereInput> getGraphsSome_JsonNullable() {
    return graphsSome;
  }
  
  @JsonProperty(JSON_PROPERTY_GRAPHS_SOME)
  public void setGraphsSome_JsonNullable(JsonNullable<GraphWhereInput> graphsSome) {
    this.graphsSome = graphsSome;
  }

  public void setGraphsSome(GraphWhereInput graphsSome) {
    this.graphsSome = JsonNullable.<GraphWhereInput>of(graphsSome);
  }


  public ViewWhereInput id(String id) {
    this.id = JsonNullable.<String>of(id);
    return this;
  }

   /**
   * Get id
   * @return id
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getId() {
        return id.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getId_JsonNullable() {
    return id;
  }
  
  @JsonProperty(JSON_PROPERTY_ID)
  public void setId_JsonNullable(JsonNullable<String> id) {
    this.id = id;
  }

  public void setId(String id) {
    this.id = JsonNullable.<String>of(id);
  }


  public ViewWhereInput idContains(String idContains) {
    this.idContains = JsonNullable.<String>of(idContains);
    return this;
  }

   /**
   * Get idContains
   * @return idContains
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getIdContains() {
        return idContains.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_ID_CONTAINS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getIdContains_JsonNullable() {
    return idContains;
  }
  
  @JsonProperty(JSON_PROPERTY_ID_CONTAINS)
  public void setIdContains_JsonNullable(JsonNullable<String> idContains) {
    this.idContains = idContains;
  }

  public void setIdContains(String idContains) {
    this.idContains = JsonNullable.<String>of(idContains);
  }


  public ViewWhereInput idEndsWith(String idEndsWith) {
    this.idEndsWith = JsonNullable.<String>of(idEndsWith);
    return this;
  }

   /**
   * Get idEndsWith
   * @return idEndsWith
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getIdEndsWith() {
        return idEndsWith.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_ID_ENDS_WITH)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getIdEndsWith_JsonNullable() {
    return idEndsWith;
  }
  
  @JsonProperty(JSON_PROPERTY_ID_ENDS_WITH)
  public void setIdEndsWith_JsonNullable(JsonNullable<String> idEndsWith) {
    this.idEndsWith = idEndsWith;
  }

  public void setIdEndsWith(String idEndsWith) {
    this.idEndsWith = JsonNullable.<String>of(idEndsWith);
  }


  public ViewWhereInput idGt(String idGt) {
    this.idGt = JsonNullable.<String>of(idGt);
    return this;
  }

   /**
   * Get idGt
   * @return idGt
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getIdGt() {
        return idGt.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_ID_GT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getIdGt_JsonNullable() {
    return idGt;
  }
  
  @JsonProperty(JSON_PROPERTY_ID_GT)
  public void setIdGt_JsonNullable(JsonNullable<String> idGt) {
    this.idGt = idGt;
  }

  public void setIdGt(String idGt) {
    this.idGt = JsonNullable.<String>of(idGt);
  }


  public ViewWhereInput idGte(String idGte) {
    this.idGte = JsonNullable.<String>of(idGte);
    return this;
  }

   /**
   * Get idGte
   * @return idGte
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getIdGte() {
        return idGte.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_ID_GTE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getIdGte_JsonNullable() {
    return idGte;
  }
  
  @JsonProperty(JSON_PROPERTY_ID_GTE)
  public void setIdGte_JsonNullable(JsonNullable<String> idGte) {
    this.idGte = idGte;
  }

  public void setIdGte(String idGte) {
    this.idGte = JsonNullable.<String>of(idGte);
  }


  public ViewWhereInput idIn(List<String> idIn) {
    this.idIn = JsonNullable.<List<String>>of(idIn);
    return this;
  }

  public ViewWhereInput addIdInItem(String idInItem) {
    if (this.idIn == null || !this.idIn.isPresent()) {
      this.idIn = JsonNullable.<List<String>>of(new ArrayList<>());
    }
    try {
      this.idIn.get().add(idInItem);
    } catch (java.util.NoSuchElementException e) {
      // this can never happen, as we make sure above that the value is present
    }
    return this;
  }

   /**
   * Get idIn
   * @return idIn
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public List<String> getIdIn() {
        return idIn.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_ID_IN)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<List<String>> getIdIn_JsonNullable() {
    return idIn;
  }
  
  @JsonProperty(JSON_PROPERTY_ID_IN)
  public void setIdIn_JsonNullable(JsonNullable<List<String>> idIn) {
    this.idIn = idIn;
  }

  public void setIdIn(List<String> idIn) {
    this.idIn = JsonNullable.<List<String>>of(idIn);
  }


  public ViewWhereInput idLt(String idLt) {
    this.idLt = JsonNullable.<String>of(idLt);
    return this;
  }

   /**
   * Get idLt
   * @return idLt
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getIdLt() {
        return idLt.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_ID_LT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getIdLt_JsonNullable() {
    return idLt;
  }
  
  @JsonProperty(JSON_PROPERTY_ID_LT)
  public void setIdLt_JsonNullable(JsonNullable<String> idLt) {
    this.idLt = idLt;
  }

  public void setIdLt(String idLt) {
    this.idLt = JsonNullable.<String>of(idLt);
  }


  public ViewWhereInput idLte(String idLte) {
    this.idLte = JsonNullable.<String>of(idLte);
    return this;
  }

   /**
   * Get idLte
   * @return idLte
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getIdLte() {
        return idLte.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_ID_LTE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getIdLte_JsonNullable() {
    return idLte;
  }
  
  @JsonProperty(JSON_PROPERTY_ID_LTE)
  public void setIdLte_JsonNullable(JsonNullable<String> idLte) {
    this.idLte = idLte;
  }

  public void setIdLte(String idLte) {
    this.idLte = JsonNullable.<String>of(idLte);
  }


  public ViewWhereInput idNot(String idNot) {
    this.idNot = JsonNullable.<String>of(idNot);
    return this;
  }

   /**
   * Get idNot
   * @return idNot
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getIdNot() {
        return idNot.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_ID_NOT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getIdNot_JsonNullable() {
    return idNot;
  }
  
  @JsonProperty(JSON_PROPERTY_ID_NOT)
  public void setIdNot_JsonNullable(JsonNullable<String> idNot) {
    this.idNot = idNot;
  }

  public void setIdNot(String idNot) {
    this.idNot = JsonNullable.<String>of(idNot);
  }


  public ViewWhereInput idNotContains(String idNotContains) {
    this.idNotContains = JsonNullable.<String>of(idNotContains);
    return this;
  }

   /**
   * Get idNotContains
   * @return idNotContains
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getIdNotContains() {
        return idNotContains.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_ID_NOT_CONTAINS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getIdNotContains_JsonNullable() {
    return idNotContains;
  }
  
  @JsonProperty(JSON_PROPERTY_ID_NOT_CONTAINS)
  public void setIdNotContains_JsonNullable(JsonNullable<String> idNotContains) {
    this.idNotContains = idNotContains;
  }

  public void setIdNotContains(String idNotContains) {
    this.idNotContains = JsonNullable.<String>of(idNotContains);
  }


  public ViewWhereInput idNotEndsWith(String idNotEndsWith) {
    this.idNotEndsWith = JsonNullable.<String>of(idNotEndsWith);
    return this;
  }

   /**
   * Get idNotEndsWith
   * @return idNotEndsWith
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getIdNotEndsWith() {
        return idNotEndsWith.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_ID_NOT_ENDS_WITH)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getIdNotEndsWith_JsonNullable() {
    return idNotEndsWith;
  }
  
  @JsonProperty(JSON_PROPERTY_ID_NOT_ENDS_WITH)
  public void setIdNotEndsWith_JsonNullable(JsonNullable<String> idNotEndsWith) {
    this.idNotEndsWith = idNotEndsWith;
  }

  public void setIdNotEndsWith(String idNotEndsWith) {
    this.idNotEndsWith = JsonNullable.<String>of(idNotEndsWith);
  }


  public ViewWhereInput idNotIn(List<String> idNotIn) {
    this.idNotIn = JsonNullable.<List<String>>of(idNotIn);
    return this;
  }

  public ViewWhereInput addIdNotInItem(String idNotInItem) {
    if (this.idNotIn == null || !this.idNotIn.isPresent()) {
      this.idNotIn = JsonNullable.<List<String>>of(new ArrayList<>());
    }
    try {
      this.idNotIn.get().add(idNotInItem);
    } catch (java.util.NoSuchElementException e) {
      // this can never happen, as we make sure above that the value is present
    }
    return this;
  }

   /**
   * Get idNotIn
   * @return idNotIn
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public List<String> getIdNotIn() {
        return idNotIn.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_ID_NOT_IN)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<List<String>> getIdNotIn_JsonNullable() {
    return idNotIn;
  }
  
  @JsonProperty(JSON_PROPERTY_ID_NOT_IN)
  public void setIdNotIn_JsonNullable(JsonNullable<List<String>> idNotIn) {
    this.idNotIn = idNotIn;
  }

  public void setIdNotIn(List<String> idNotIn) {
    this.idNotIn = JsonNullable.<List<String>>of(idNotIn);
  }


  public ViewWhereInput idNotStartsWith(String idNotStartsWith) {
    this.idNotStartsWith = JsonNullable.<String>of(idNotStartsWith);
    return this;
  }

   /**
   * Get idNotStartsWith
   * @return idNotStartsWith
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getIdNotStartsWith() {
        return idNotStartsWith.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_ID_NOT_STARTS_WITH)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getIdNotStartsWith_JsonNullable() {
    return idNotStartsWith;
  }
  
  @JsonProperty(JSON_PROPERTY_ID_NOT_STARTS_WITH)
  public void setIdNotStartsWith_JsonNullable(JsonNullable<String> idNotStartsWith) {
    this.idNotStartsWith = idNotStartsWith;
  }

  public void setIdNotStartsWith(String idNotStartsWith) {
    this.idNotStartsWith = JsonNullable.<String>of(idNotStartsWith);
  }


  public ViewWhereInput idStartsWith(String idStartsWith) {
    this.idStartsWith = JsonNullable.<String>of(idStartsWith);
    return this;
  }

   /**
   * Get idStartsWith
   * @return idStartsWith
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getIdStartsWith() {
        return idStartsWith.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_ID_STARTS_WITH)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getIdStartsWith_JsonNullable() {
    return idStartsWith;
  }
  
  @JsonProperty(JSON_PROPERTY_ID_STARTS_WITH)
  public void setIdStartsWith_JsonNullable(JsonNullable<String> idStartsWith) {
    this.idStartsWith = idStartsWith;
  }

  public void setIdStartsWith(String idStartsWith) {
    this.idStartsWith = JsonNullable.<String>of(idStartsWith);
  }


  public ViewWhereInput localId(String localId) {
    this.localId = JsonNullable.<String>of(localId);
    return this;
  }

   /**
   * Get localId
   * @return localId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getLocalId() {
        return localId.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_LOCAL_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getLocalId_JsonNullable() {
    return localId;
  }
  
  @JsonProperty(JSON_PROPERTY_LOCAL_ID)
  public void setLocalId_JsonNullable(JsonNullable<String> localId) {
    this.localId = localId;
  }

  public void setLocalId(String localId) {
    this.localId = JsonNullable.<String>of(localId);
  }


  public ViewWhereInput localIdContains(String localIdContains) {
    this.localIdContains = JsonNullable.<String>of(localIdContains);
    return this;
  }

   /**
   * Get localIdContains
   * @return localIdContains
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getLocalIdContains() {
        return localIdContains.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_LOCAL_ID_CONTAINS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getLocalIdContains_JsonNullable() {
    return localIdContains;
  }
  
  @JsonProperty(JSON_PROPERTY_LOCAL_ID_CONTAINS)
  public void setLocalIdContains_JsonNullable(JsonNullable<String> localIdContains) {
    this.localIdContains = localIdContains;
  }

  public void setLocalIdContains(String localIdContains) {
    this.localIdContains = JsonNullable.<String>of(localIdContains);
  }


  public ViewWhereInput localIdEndsWith(String localIdEndsWith) {
    this.localIdEndsWith = JsonNullable.<String>of(localIdEndsWith);
    return this;
  }

   /**
   * Get localIdEndsWith
   * @return localIdEndsWith
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getLocalIdEndsWith() {
        return localIdEndsWith.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_LOCAL_ID_ENDS_WITH)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getLocalIdEndsWith_JsonNullable() {
    return localIdEndsWith;
  }
  
  @JsonProperty(JSON_PROPERTY_LOCAL_ID_ENDS_WITH)
  public void setLocalIdEndsWith_JsonNullable(JsonNullable<String> localIdEndsWith) {
    this.localIdEndsWith = localIdEndsWith;
  }

  public void setLocalIdEndsWith(String localIdEndsWith) {
    this.localIdEndsWith = JsonNullable.<String>of(localIdEndsWith);
  }


  public ViewWhereInput localIdGt(String localIdGt) {
    this.localIdGt = JsonNullable.<String>of(localIdGt);
    return this;
  }

   /**
   * Get localIdGt
   * @return localIdGt
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getLocalIdGt() {
        return localIdGt.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_LOCAL_ID_GT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getLocalIdGt_JsonNullable() {
    return localIdGt;
  }
  
  @JsonProperty(JSON_PROPERTY_LOCAL_ID_GT)
  public void setLocalIdGt_JsonNullable(JsonNullable<String> localIdGt) {
    this.localIdGt = localIdGt;
  }

  public void setLocalIdGt(String localIdGt) {
    this.localIdGt = JsonNullable.<String>of(localIdGt);
  }


  public ViewWhereInput localIdGte(String localIdGte) {
    this.localIdGte = JsonNullable.<String>of(localIdGte);
    return this;
  }

   /**
   * Get localIdGte
   * @return localIdGte
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getLocalIdGte() {
        return localIdGte.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_LOCAL_ID_GTE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getLocalIdGte_JsonNullable() {
    return localIdGte;
  }
  
  @JsonProperty(JSON_PROPERTY_LOCAL_ID_GTE)
  public void setLocalIdGte_JsonNullable(JsonNullable<String> localIdGte) {
    this.localIdGte = localIdGte;
  }

  public void setLocalIdGte(String localIdGte) {
    this.localIdGte = JsonNullable.<String>of(localIdGte);
  }


  public ViewWhereInput localIdIn(List<String> localIdIn) {
    this.localIdIn = JsonNullable.<List<String>>of(localIdIn);
    return this;
  }

  public ViewWhereInput addLocalIdInItem(String localIdInItem) {
    if (this.localIdIn == null || !this.localIdIn.isPresent()) {
      this.localIdIn = JsonNullable.<List<String>>of(new ArrayList<>());
    }
    try {
      this.localIdIn.get().add(localIdInItem);
    } catch (java.util.NoSuchElementException e) {
      // this can never happen, as we make sure above that the value is present
    }
    return this;
  }

   /**
   * Get localIdIn
   * @return localIdIn
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public List<String> getLocalIdIn() {
        return localIdIn.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_LOCAL_ID_IN)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<List<String>> getLocalIdIn_JsonNullable() {
    return localIdIn;
  }
  
  @JsonProperty(JSON_PROPERTY_LOCAL_ID_IN)
  public void setLocalIdIn_JsonNullable(JsonNullable<List<String>> localIdIn) {
    this.localIdIn = localIdIn;
  }

  public void setLocalIdIn(List<String> localIdIn) {
    this.localIdIn = JsonNullable.<List<String>>of(localIdIn);
  }


  public ViewWhereInput localIdLt(String localIdLt) {
    this.localIdLt = JsonNullable.<String>of(localIdLt);
    return this;
  }

   /**
   * Get localIdLt
   * @return localIdLt
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getLocalIdLt() {
        return localIdLt.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_LOCAL_ID_LT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getLocalIdLt_JsonNullable() {
    return localIdLt;
  }
  
  @JsonProperty(JSON_PROPERTY_LOCAL_ID_LT)
  public void setLocalIdLt_JsonNullable(JsonNullable<String> localIdLt) {
    this.localIdLt = localIdLt;
  }

  public void setLocalIdLt(String localIdLt) {
    this.localIdLt = JsonNullable.<String>of(localIdLt);
  }


  public ViewWhereInput localIdLte(String localIdLte) {
    this.localIdLte = JsonNullable.<String>of(localIdLte);
    return this;
  }

   /**
   * Get localIdLte
   * @return localIdLte
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getLocalIdLte() {
        return localIdLte.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_LOCAL_ID_LTE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getLocalIdLte_JsonNullable() {
    return localIdLte;
  }
  
  @JsonProperty(JSON_PROPERTY_LOCAL_ID_LTE)
  public void setLocalIdLte_JsonNullable(JsonNullable<String> localIdLte) {
    this.localIdLte = localIdLte;
  }

  public void setLocalIdLte(String localIdLte) {
    this.localIdLte = JsonNullable.<String>of(localIdLte);
  }


  public ViewWhereInput localIdNot(String localIdNot) {
    this.localIdNot = JsonNullable.<String>of(localIdNot);
    return this;
  }

   /**
   * Get localIdNot
   * @return localIdNot
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getLocalIdNot() {
        return localIdNot.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_LOCAL_ID_NOT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getLocalIdNot_JsonNullable() {
    return localIdNot;
  }
  
  @JsonProperty(JSON_PROPERTY_LOCAL_ID_NOT)
  public void setLocalIdNot_JsonNullable(JsonNullable<String> localIdNot) {
    this.localIdNot = localIdNot;
  }

  public void setLocalIdNot(String localIdNot) {
    this.localIdNot = JsonNullable.<String>of(localIdNot);
  }


  public ViewWhereInput localIdNotContains(String localIdNotContains) {
    this.localIdNotContains = JsonNullable.<String>of(localIdNotContains);
    return this;
  }

   /**
   * Get localIdNotContains
   * @return localIdNotContains
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getLocalIdNotContains() {
        return localIdNotContains.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_LOCAL_ID_NOT_CONTAINS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getLocalIdNotContains_JsonNullable() {
    return localIdNotContains;
  }
  
  @JsonProperty(JSON_PROPERTY_LOCAL_ID_NOT_CONTAINS)
  public void setLocalIdNotContains_JsonNullable(JsonNullable<String> localIdNotContains) {
    this.localIdNotContains = localIdNotContains;
  }

  public void setLocalIdNotContains(String localIdNotContains) {
    this.localIdNotContains = JsonNullable.<String>of(localIdNotContains);
  }


  public ViewWhereInput localIdNotEndsWith(String localIdNotEndsWith) {
    this.localIdNotEndsWith = JsonNullable.<String>of(localIdNotEndsWith);
    return this;
  }

   /**
   * Get localIdNotEndsWith
   * @return localIdNotEndsWith
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getLocalIdNotEndsWith() {
        return localIdNotEndsWith.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_LOCAL_ID_NOT_ENDS_WITH)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getLocalIdNotEndsWith_JsonNullable() {
    return localIdNotEndsWith;
  }
  
  @JsonProperty(JSON_PROPERTY_LOCAL_ID_NOT_ENDS_WITH)
  public void setLocalIdNotEndsWith_JsonNullable(JsonNullable<String> localIdNotEndsWith) {
    this.localIdNotEndsWith = localIdNotEndsWith;
  }

  public void setLocalIdNotEndsWith(String localIdNotEndsWith) {
    this.localIdNotEndsWith = JsonNullable.<String>of(localIdNotEndsWith);
  }


  public ViewWhereInput localIdNotIn(List<String> localIdNotIn) {
    this.localIdNotIn = JsonNullable.<List<String>>of(localIdNotIn);
    return this;
  }

  public ViewWhereInput addLocalIdNotInItem(String localIdNotInItem) {
    if (this.localIdNotIn == null || !this.localIdNotIn.isPresent()) {
      this.localIdNotIn = JsonNullable.<List<String>>of(new ArrayList<>());
    }
    try {
      this.localIdNotIn.get().add(localIdNotInItem);
    } catch (java.util.NoSuchElementException e) {
      // this can never happen, as we make sure above that the value is present
    }
    return this;
  }

   /**
   * Get localIdNotIn
   * @return localIdNotIn
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public List<String> getLocalIdNotIn() {
        return localIdNotIn.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_LOCAL_ID_NOT_IN)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<List<String>> getLocalIdNotIn_JsonNullable() {
    return localIdNotIn;
  }
  
  @JsonProperty(JSON_PROPERTY_LOCAL_ID_NOT_IN)
  public void setLocalIdNotIn_JsonNullable(JsonNullable<List<String>> localIdNotIn) {
    this.localIdNotIn = localIdNotIn;
  }

  public void setLocalIdNotIn(List<String> localIdNotIn) {
    this.localIdNotIn = JsonNullable.<List<String>>of(localIdNotIn);
  }


  public ViewWhereInput localIdNotStartsWith(String localIdNotStartsWith) {
    this.localIdNotStartsWith = JsonNullable.<String>of(localIdNotStartsWith);
    return this;
  }

   /**
   * Get localIdNotStartsWith
   * @return localIdNotStartsWith
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getLocalIdNotStartsWith() {
        return localIdNotStartsWith.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_LOCAL_ID_NOT_STARTS_WITH)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getLocalIdNotStartsWith_JsonNullable() {
    return localIdNotStartsWith;
  }
  
  @JsonProperty(JSON_PROPERTY_LOCAL_ID_NOT_STARTS_WITH)
  public void setLocalIdNotStartsWith_JsonNullable(JsonNullable<String> localIdNotStartsWith) {
    this.localIdNotStartsWith = localIdNotStartsWith;
  }

  public void setLocalIdNotStartsWith(String localIdNotStartsWith) {
    this.localIdNotStartsWith = JsonNullable.<String>of(localIdNotStartsWith);
  }


  public ViewWhereInput localIdStartsWith(String localIdStartsWith) {
    this.localIdStartsWith = JsonNullable.<String>of(localIdStartsWith);
    return this;
  }

   /**
   * Get localIdStartsWith
   * @return localIdStartsWith
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getLocalIdStartsWith() {
        return localIdStartsWith.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_LOCAL_ID_STARTS_WITH)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getLocalIdStartsWith_JsonNullable() {
    return localIdStartsWith;
  }
  
  @JsonProperty(JSON_PROPERTY_LOCAL_ID_STARTS_WITH)
  public void setLocalIdStartsWith_JsonNullable(JsonNullable<String> localIdStartsWith) {
    this.localIdStartsWith = localIdStartsWith;
  }

  public void setLocalIdStartsWith(String localIdStartsWith) {
    this.localIdStartsWith = JsonNullable.<String>of(localIdStartsWith);
  }


  public ViewWhereInput name(String name) {
    this.name = JsonNullable.<String>of(name);
    return this;
  }

   /**
   * Get name
   * @return name
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getName() {
        return name.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getName_JsonNullable() {
    return name;
  }
  
  @JsonProperty(JSON_PROPERTY_NAME)
  public void setName_JsonNullable(JsonNullable<String> name) {
    this.name = name;
  }

  public void setName(String name) {
    this.name = JsonNullable.<String>of(name);
  }


  public ViewWhereInput nameContains(String nameContains) {
    this.nameContains = JsonNullable.<String>of(nameContains);
    return this;
  }

   /**
   * Get nameContains
   * @return nameContains
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getNameContains() {
        return nameContains.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_NAME_CONTAINS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getNameContains_JsonNullable() {
    return nameContains;
  }
  
  @JsonProperty(JSON_PROPERTY_NAME_CONTAINS)
  public void setNameContains_JsonNullable(JsonNullable<String> nameContains) {
    this.nameContains = nameContains;
  }

  public void setNameContains(String nameContains) {
    this.nameContains = JsonNullable.<String>of(nameContains);
  }


  public ViewWhereInput nameEndsWith(String nameEndsWith) {
    this.nameEndsWith = JsonNullable.<String>of(nameEndsWith);
    return this;
  }

   /**
   * Get nameEndsWith
   * @return nameEndsWith
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getNameEndsWith() {
        return nameEndsWith.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_NAME_ENDS_WITH)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getNameEndsWith_JsonNullable() {
    return nameEndsWith;
  }
  
  @JsonProperty(JSON_PROPERTY_NAME_ENDS_WITH)
  public void setNameEndsWith_JsonNullable(JsonNullable<String> nameEndsWith) {
    this.nameEndsWith = nameEndsWith;
  }

  public void setNameEndsWith(String nameEndsWith) {
    this.nameEndsWith = JsonNullable.<String>of(nameEndsWith);
  }


  public ViewWhereInput nameGt(String nameGt) {
    this.nameGt = JsonNullable.<String>of(nameGt);
    return this;
  }

   /**
   * Get nameGt
   * @return nameGt
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getNameGt() {
        return nameGt.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_NAME_GT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getNameGt_JsonNullable() {
    return nameGt;
  }
  
  @JsonProperty(JSON_PROPERTY_NAME_GT)
  public void setNameGt_JsonNullable(JsonNullable<String> nameGt) {
    this.nameGt = nameGt;
  }

  public void setNameGt(String nameGt) {
    this.nameGt = JsonNullable.<String>of(nameGt);
  }


  public ViewWhereInput nameGte(String nameGte) {
    this.nameGte = JsonNullable.<String>of(nameGte);
    return this;
  }

   /**
   * Get nameGte
   * @return nameGte
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getNameGte() {
        return nameGte.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_NAME_GTE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getNameGte_JsonNullable() {
    return nameGte;
  }
  
  @JsonProperty(JSON_PROPERTY_NAME_GTE)
  public void setNameGte_JsonNullable(JsonNullable<String> nameGte) {
    this.nameGte = nameGte;
  }

  public void setNameGte(String nameGte) {
    this.nameGte = JsonNullable.<String>of(nameGte);
  }


  public ViewWhereInput nameIn(List<String> nameIn) {
    this.nameIn = JsonNullable.<List<String>>of(nameIn);
    return this;
  }

  public ViewWhereInput addNameInItem(String nameInItem) {
    if (this.nameIn == null || !this.nameIn.isPresent()) {
      this.nameIn = JsonNullable.<List<String>>of(new ArrayList<>());
    }
    try {
      this.nameIn.get().add(nameInItem);
    } catch (java.util.NoSuchElementException e) {
      // this can never happen, as we make sure above that the value is present
    }
    return this;
  }

   /**
   * Get nameIn
   * @return nameIn
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public List<String> getNameIn() {
        return nameIn.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_NAME_IN)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<List<String>> getNameIn_JsonNullable() {
    return nameIn;
  }
  
  @JsonProperty(JSON_PROPERTY_NAME_IN)
  public void setNameIn_JsonNullable(JsonNullable<List<String>> nameIn) {
    this.nameIn = nameIn;
  }

  public void setNameIn(List<String> nameIn) {
    this.nameIn = JsonNullable.<List<String>>of(nameIn);
  }


  public ViewWhereInput nameLt(String nameLt) {
    this.nameLt = JsonNullable.<String>of(nameLt);
    return this;
  }

   /**
   * Get nameLt
   * @return nameLt
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getNameLt() {
        return nameLt.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_NAME_LT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getNameLt_JsonNullable() {
    return nameLt;
  }
  
  @JsonProperty(JSON_PROPERTY_NAME_LT)
  public void setNameLt_JsonNullable(JsonNullable<String> nameLt) {
    this.nameLt = nameLt;
  }

  public void setNameLt(String nameLt) {
    this.nameLt = JsonNullable.<String>of(nameLt);
  }


  public ViewWhereInput nameLte(String nameLte) {
    this.nameLte = JsonNullable.<String>of(nameLte);
    return this;
  }

   /**
   * Get nameLte
   * @return nameLte
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getNameLte() {
        return nameLte.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_NAME_LTE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getNameLte_JsonNullable() {
    return nameLte;
  }
  
  @JsonProperty(JSON_PROPERTY_NAME_LTE)
  public void setNameLte_JsonNullable(JsonNullable<String> nameLte) {
    this.nameLte = nameLte;
  }

  public void setNameLte(String nameLte) {
    this.nameLte = JsonNullable.<String>of(nameLte);
  }


  public ViewWhereInput nameNot(String nameNot) {
    this.nameNot = JsonNullable.<String>of(nameNot);
    return this;
  }

   /**
   * Get nameNot
   * @return nameNot
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getNameNot() {
        return nameNot.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_NAME_NOT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getNameNot_JsonNullable() {
    return nameNot;
  }
  
  @JsonProperty(JSON_PROPERTY_NAME_NOT)
  public void setNameNot_JsonNullable(JsonNullable<String> nameNot) {
    this.nameNot = nameNot;
  }

  public void setNameNot(String nameNot) {
    this.nameNot = JsonNullable.<String>of(nameNot);
  }


  public ViewWhereInput nameNotContains(String nameNotContains) {
    this.nameNotContains = JsonNullable.<String>of(nameNotContains);
    return this;
  }

   /**
   * Get nameNotContains
   * @return nameNotContains
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getNameNotContains() {
        return nameNotContains.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_NAME_NOT_CONTAINS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getNameNotContains_JsonNullable() {
    return nameNotContains;
  }
  
  @JsonProperty(JSON_PROPERTY_NAME_NOT_CONTAINS)
  public void setNameNotContains_JsonNullable(JsonNullable<String> nameNotContains) {
    this.nameNotContains = nameNotContains;
  }

  public void setNameNotContains(String nameNotContains) {
    this.nameNotContains = JsonNullable.<String>of(nameNotContains);
  }


  public ViewWhereInput nameNotEndsWith(String nameNotEndsWith) {
    this.nameNotEndsWith = JsonNullable.<String>of(nameNotEndsWith);
    return this;
  }

   /**
   * Get nameNotEndsWith
   * @return nameNotEndsWith
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getNameNotEndsWith() {
        return nameNotEndsWith.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_NAME_NOT_ENDS_WITH)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getNameNotEndsWith_JsonNullable() {
    return nameNotEndsWith;
  }
  
  @JsonProperty(JSON_PROPERTY_NAME_NOT_ENDS_WITH)
  public void setNameNotEndsWith_JsonNullable(JsonNullable<String> nameNotEndsWith) {
    this.nameNotEndsWith = nameNotEndsWith;
  }

  public void setNameNotEndsWith(String nameNotEndsWith) {
    this.nameNotEndsWith = JsonNullable.<String>of(nameNotEndsWith);
  }


  public ViewWhereInput nameNotIn(List<String> nameNotIn) {
    this.nameNotIn = JsonNullable.<List<String>>of(nameNotIn);
    return this;
  }

  public ViewWhereInput addNameNotInItem(String nameNotInItem) {
    if (this.nameNotIn == null || !this.nameNotIn.isPresent()) {
      this.nameNotIn = JsonNullable.<List<String>>of(new ArrayList<>());
    }
    try {
      this.nameNotIn.get().add(nameNotInItem);
    } catch (java.util.NoSuchElementException e) {
      // this can never happen, as we make sure above that the value is present
    }
    return this;
  }

   /**
   * Get nameNotIn
   * @return nameNotIn
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public List<String> getNameNotIn() {
        return nameNotIn.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_NAME_NOT_IN)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<List<String>> getNameNotIn_JsonNullable() {
    return nameNotIn;
  }
  
  @JsonProperty(JSON_PROPERTY_NAME_NOT_IN)
  public void setNameNotIn_JsonNullable(JsonNullable<List<String>> nameNotIn) {
    this.nameNotIn = nameNotIn;
  }

  public void setNameNotIn(List<String> nameNotIn) {
    this.nameNotIn = JsonNullable.<List<String>>of(nameNotIn);
  }


  public ViewWhereInput nameNotStartsWith(String nameNotStartsWith) {
    this.nameNotStartsWith = JsonNullable.<String>of(nameNotStartsWith);
    return this;
  }

   /**
   * Get nameNotStartsWith
   * @return nameNotStartsWith
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getNameNotStartsWith() {
        return nameNotStartsWith.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_NAME_NOT_STARTS_WITH)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getNameNotStartsWith_JsonNullable() {
    return nameNotStartsWith;
  }
  
  @JsonProperty(JSON_PROPERTY_NAME_NOT_STARTS_WITH)
  public void setNameNotStartsWith_JsonNullable(JsonNullable<String> nameNotStartsWith) {
    this.nameNotStartsWith = nameNotStartsWith;
  }

  public void setNameNotStartsWith(String nameNotStartsWith) {
    this.nameNotStartsWith = JsonNullable.<String>of(nameNotStartsWith);
  }


  public ViewWhereInput nameStartsWith(String nameStartsWith) {
    this.nameStartsWith = JsonNullable.<String>of(nameStartsWith);
    return this;
  }

   /**
   * Get nameStartsWith
   * @return nameStartsWith
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getNameStartsWith() {
        return nameStartsWith.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_NAME_STARTS_WITH)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getNameStartsWith_JsonNullable() {
    return nameStartsWith;
  }
  
  @JsonProperty(JSON_PROPERTY_NAME_STARTS_WITH)
  public void setNameStartsWith_JsonNullable(JsonNullable<String> nameStartsWith) {
    this.nameStartsWith = nameStartsWith;
  }

  public void setNameStartsWith(String nameStartsWith) {
    this.nameStartsWith = JsonNullable.<String>of(nameStartsWith);
  }


  public ViewWhereInput NOT(List<ViewWhereInput> NOT) {
    this.NOT = JsonNullable.<List<ViewWhereInput>>of(NOT);
    return this;
  }

  public ViewWhereInput addNOTItem(ViewWhereInput NOTItem) {
    if (this.NOT == null || !this.NOT.isPresent()) {
      this.NOT = JsonNullable.<List<ViewWhereInput>>of(new ArrayList<>());
    }
    try {
      this.NOT.get().add(NOTItem);
    } catch (java.util.NoSuchElementException e) {
      // this can never happen, as we make sure above that the value is present
    }
    return this;
  }

   /**
   * Get NOT
   * @return NOT
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public List<ViewWhereInput> getNOT() {
        return NOT.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_N_O_T)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<List<ViewWhereInput>> getNOT_JsonNullable() {
    return NOT;
  }
  
  @JsonProperty(JSON_PROPERTY_N_O_T)
  public void setNOT_JsonNullable(JsonNullable<List<ViewWhereInput>> NOT) {
    this.NOT = NOT;
  }

  public void setNOT(List<ViewWhereInput> NOT) {
    this.NOT = JsonNullable.<List<ViewWhereInput>>of(NOT);
  }


  public ViewWhereInput OR(List<ViewWhereInput> OR) {
    this.OR = JsonNullable.<List<ViewWhereInput>>of(OR);
    return this;
  }

  public ViewWhereInput addORItem(ViewWhereInput ORItem) {
    if (this.OR == null || !this.OR.isPresent()) {
      this.OR = JsonNullable.<List<ViewWhereInput>>of(new ArrayList<>());
    }
    try {
      this.OR.get().add(ORItem);
    } catch (java.util.NoSuchElementException e) {
      // this can never happen, as we make sure above that the value is present
    }
    return this;
  }

   /**
   * Get OR
   * @return OR
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public List<ViewWhereInput> getOR() {
        return OR.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_O_R)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<List<ViewWhereInput>> getOR_JsonNullable() {
    return OR;
  }
  
  @JsonProperty(JSON_PROPERTY_O_R)
  public void setOR_JsonNullable(JsonNullable<List<ViewWhereInput>> OR) {
    this.OR = OR;
  }

  public void setOR(List<ViewWhereInput> OR) {
    this.OR = JsonNullable.<List<ViewWhereInput>>of(OR);
  }


  public ViewWhereInput timeSpan(Double timeSpan) {
    this.timeSpan = JsonNullable.<Double>of(timeSpan);
    return this;
  }

   /**
   * Get timeSpan
   * @return timeSpan
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public Double getTimeSpan() {
        return timeSpan.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_TIME_SPAN)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<Double> getTimeSpan_JsonNullable() {
    return timeSpan;
  }
  
  @JsonProperty(JSON_PROPERTY_TIME_SPAN)
  public void setTimeSpan_JsonNullable(JsonNullable<Double> timeSpan) {
    this.timeSpan = timeSpan;
  }

  public void setTimeSpan(Double timeSpan) {
    this.timeSpan = JsonNullable.<Double>of(timeSpan);
  }


  public ViewWhereInput timeSpanGt(Double timeSpanGt) {
    this.timeSpanGt = JsonNullable.<Double>of(timeSpanGt);
    return this;
  }

   /**
   * Get timeSpanGt
   * @return timeSpanGt
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public Double getTimeSpanGt() {
        return timeSpanGt.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_TIME_SPAN_GT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<Double> getTimeSpanGt_JsonNullable() {
    return timeSpanGt;
  }
  
  @JsonProperty(JSON_PROPERTY_TIME_SPAN_GT)
  public void setTimeSpanGt_JsonNullable(JsonNullable<Double> timeSpanGt) {
    this.timeSpanGt = timeSpanGt;
  }

  public void setTimeSpanGt(Double timeSpanGt) {
    this.timeSpanGt = JsonNullable.<Double>of(timeSpanGt);
  }


  public ViewWhereInput timeSpanGte(Double timeSpanGte) {
    this.timeSpanGte = JsonNullable.<Double>of(timeSpanGte);
    return this;
  }

   /**
   * Get timeSpanGte
   * @return timeSpanGte
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public Double getTimeSpanGte() {
        return timeSpanGte.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_TIME_SPAN_GTE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<Double> getTimeSpanGte_JsonNullable() {
    return timeSpanGte;
  }
  
  @JsonProperty(JSON_PROPERTY_TIME_SPAN_GTE)
  public void setTimeSpanGte_JsonNullable(JsonNullable<Double> timeSpanGte) {
    this.timeSpanGte = timeSpanGte;
  }

  public void setTimeSpanGte(Double timeSpanGte) {
    this.timeSpanGte = JsonNullable.<Double>of(timeSpanGte);
  }


  public ViewWhereInput timeSpanIn(List<Double> timeSpanIn) {
    this.timeSpanIn = JsonNullable.<List<Double>>of(timeSpanIn);
    return this;
  }

  public ViewWhereInput addTimeSpanInItem(Double timeSpanInItem) {
    if (this.timeSpanIn == null || !this.timeSpanIn.isPresent()) {
      this.timeSpanIn = JsonNullable.<List<Double>>of(new ArrayList<>());
    }
    try {
      this.timeSpanIn.get().add(timeSpanInItem);
    } catch (java.util.NoSuchElementException e) {
      // this can never happen, as we make sure above that the value is present
    }
    return this;
  }

   /**
   * Get timeSpanIn
   * @return timeSpanIn
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public List<Double> getTimeSpanIn() {
        return timeSpanIn.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_TIME_SPAN_IN)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<List<Double>> getTimeSpanIn_JsonNullable() {
    return timeSpanIn;
  }
  
  @JsonProperty(JSON_PROPERTY_TIME_SPAN_IN)
  public void setTimeSpanIn_JsonNullable(JsonNullable<List<Double>> timeSpanIn) {
    this.timeSpanIn = timeSpanIn;
  }

  public void setTimeSpanIn(List<Double> timeSpanIn) {
    this.timeSpanIn = JsonNullable.<List<Double>>of(timeSpanIn);
  }


  public ViewWhereInput timeSpanLt(Double timeSpanLt) {
    this.timeSpanLt = JsonNullable.<Double>of(timeSpanLt);
    return this;
  }

   /**
   * Get timeSpanLt
   * @return timeSpanLt
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public Double getTimeSpanLt() {
        return timeSpanLt.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_TIME_SPAN_LT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<Double> getTimeSpanLt_JsonNullable() {
    return timeSpanLt;
  }
  
  @JsonProperty(JSON_PROPERTY_TIME_SPAN_LT)
  public void setTimeSpanLt_JsonNullable(JsonNullable<Double> timeSpanLt) {
    this.timeSpanLt = timeSpanLt;
  }

  public void setTimeSpanLt(Double timeSpanLt) {
    this.timeSpanLt = JsonNullable.<Double>of(timeSpanLt);
  }


  public ViewWhereInput timeSpanLte(Double timeSpanLte) {
    this.timeSpanLte = JsonNullable.<Double>of(timeSpanLte);
    return this;
  }

   /**
   * Get timeSpanLte
   * @return timeSpanLte
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public Double getTimeSpanLte() {
        return timeSpanLte.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_TIME_SPAN_LTE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<Double> getTimeSpanLte_JsonNullable() {
    return timeSpanLte;
  }
  
  @JsonProperty(JSON_PROPERTY_TIME_SPAN_LTE)
  public void setTimeSpanLte_JsonNullable(JsonNullable<Double> timeSpanLte) {
    this.timeSpanLte = timeSpanLte;
  }

  public void setTimeSpanLte(Double timeSpanLte) {
    this.timeSpanLte = JsonNullable.<Double>of(timeSpanLte);
  }


  public ViewWhereInput timeSpanNot(Double timeSpanNot) {
    this.timeSpanNot = JsonNullable.<Double>of(timeSpanNot);
    return this;
  }

   /**
   * Get timeSpanNot
   * @return timeSpanNot
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public Double getTimeSpanNot() {
        return timeSpanNot.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_TIME_SPAN_NOT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<Double> getTimeSpanNot_JsonNullable() {
    return timeSpanNot;
  }
  
  @JsonProperty(JSON_PROPERTY_TIME_SPAN_NOT)
  public void setTimeSpanNot_JsonNullable(JsonNullable<Double> timeSpanNot) {
    this.timeSpanNot = timeSpanNot;
  }

  public void setTimeSpanNot(Double timeSpanNot) {
    this.timeSpanNot = JsonNullable.<Double>of(timeSpanNot);
  }


  public ViewWhereInput timeSpanNotIn(List<Double> timeSpanNotIn) {
    this.timeSpanNotIn = JsonNullable.<List<Double>>of(timeSpanNotIn);
    return this;
  }

  public ViewWhereInput addTimeSpanNotInItem(Double timeSpanNotInItem) {
    if (this.timeSpanNotIn == null || !this.timeSpanNotIn.isPresent()) {
      this.timeSpanNotIn = JsonNullable.<List<Double>>of(new ArrayList<>());
    }
    try {
      this.timeSpanNotIn.get().add(timeSpanNotInItem);
    } catch (java.util.NoSuchElementException e) {
      // this can never happen, as we make sure above that the value is present
    }
    return this;
  }

   /**
   * Get timeSpanNotIn
   * @return timeSpanNotIn
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public List<Double> getTimeSpanNotIn() {
        return timeSpanNotIn.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_TIME_SPAN_NOT_IN)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<List<Double>> getTimeSpanNotIn_JsonNullable() {
    return timeSpanNotIn;
  }
  
  @JsonProperty(JSON_PROPERTY_TIME_SPAN_NOT_IN)
  public void setTimeSpanNotIn_JsonNullable(JsonNullable<List<Double>> timeSpanNotIn) {
    this.timeSpanNotIn = timeSpanNotIn;
  }

  public void setTimeSpanNotIn(List<Double> timeSpanNotIn) {
    this.timeSpanNotIn = JsonNullable.<List<Double>>of(timeSpanNotIn);
  }


  public ViewWhereInput timeUnit(TimeUnit timeUnit) {
    this.timeUnit = JsonNullable.<TimeUnit>of(timeUnit);
    return this;
  }

   /**
   * Get timeUnit
   * @return timeUnit
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public TimeUnit getTimeUnit() {
        return timeUnit.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_TIME_UNIT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<TimeUnit> getTimeUnit_JsonNullable() {
    return timeUnit;
  }
  
  @JsonProperty(JSON_PROPERTY_TIME_UNIT)
  public void setTimeUnit_JsonNullable(JsonNullable<TimeUnit> timeUnit) {
    this.timeUnit = timeUnit;
  }

  public void setTimeUnit(TimeUnit timeUnit) {
    this.timeUnit = JsonNullable.<TimeUnit>of(timeUnit);
  }


  public ViewWhereInput timeUnitIn(List<TimeUnit> timeUnitIn) {
    this.timeUnitIn = JsonNullable.<List<TimeUnit>>of(timeUnitIn);
    return this;
  }

  public ViewWhereInput addTimeUnitInItem(TimeUnit timeUnitInItem) {
    if (this.timeUnitIn == null || !this.timeUnitIn.isPresent()) {
      this.timeUnitIn = JsonNullable.<List<TimeUnit>>of(new ArrayList<>());
    }
    try {
      this.timeUnitIn.get().add(timeUnitInItem);
    } catch (java.util.NoSuchElementException e) {
      // this can never happen, as we make sure above that the value is present
    }
    return this;
  }

   /**
   * Get timeUnitIn
   * @return timeUnitIn
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public List<TimeUnit> getTimeUnitIn() {
        return timeUnitIn.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_TIME_UNIT_IN)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<List<TimeUnit>> getTimeUnitIn_JsonNullable() {
    return timeUnitIn;
  }
  
  @JsonProperty(JSON_PROPERTY_TIME_UNIT_IN)
  public void setTimeUnitIn_JsonNullable(JsonNullable<List<TimeUnit>> timeUnitIn) {
    this.timeUnitIn = timeUnitIn;
  }

  public void setTimeUnitIn(List<TimeUnit> timeUnitIn) {
    this.timeUnitIn = JsonNullable.<List<TimeUnit>>of(timeUnitIn);
  }


  public ViewWhereInput timeUnitNot(TimeUnit timeUnitNot) {
    this.timeUnitNot = JsonNullable.<TimeUnit>of(timeUnitNot);
    return this;
  }

   /**
   * Get timeUnitNot
   * @return timeUnitNot
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public TimeUnit getTimeUnitNot() {
        return timeUnitNot.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_TIME_UNIT_NOT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<TimeUnit> getTimeUnitNot_JsonNullable() {
    return timeUnitNot;
  }
  
  @JsonProperty(JSON_PROPERTY_TIME_UNIT_NOT)
  public void setTimeUnitNot_JsonNullable(JsonNullable<TimeUnit> timeUnitNot) {
    this.timeUnitNot = timeUnitNot;
  }

  public void setTimeUnitNot(TimeUnit timeUnitNot) {
    this.timeUnitNot = JsonNullable.<TimeUnit>of(timeUnitNot);
  }


  public ViewWhereInput timeUnitNotIn(List<TimeUnit> timeUnitNotIn) {
    this.timeUnitNotIn = JsonNullable.<List<TimeUnit>>of(timeUnitNotIn);
    return this;
  }

  public ViewWhereInput addTimeUnitNotInItem(TimeUnit timeUnitNotInItem) {
    if (this.timeUnitNotIn == null || !this.timeUnitNotIn.isPresent()) {
      this.timeUnitNotIn = JsonNullable.<List<TimeUnit>>of(new ArrayList<>());
    }
    try {
      this.timeUnitNotIn.get().add(timeUnitNotInItem);
    } catch (java.util.NoSuchElementException e) {
      // this can never happen, as we make sure above that the value is present
    }
    return this;
  }

   /**
   * Get timeUnitNotIn
   * @return timeUnitNotIn
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public List<TimeUnit> getTimeUnitNotIn() {
        return timeUnitNotIn.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_TIME_UNIT_NOT_IN)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<List<TimeUnit>> getTimeUnitNotIn_JsonNullable() {
    return timeUnitNotIn;
  }
  
  @JsonProperty(JSON_PROPERTY_TIME_UNIT_NOT_IN)
  public void setTimeUnitNotIn_JsonNullable(JsonNullable<List<TimeUnit>> timeUnitNotIn) {
    this.timeUnitNotIn = timeUnitNotIn;
  }

  public void setTimeUnitNotIn(List<TimeUnit> timeUnitNotIn) {
    this.timeUnitNotIn = JsonNullable.<List<TimeUnit>>of(timeUnitNotIn);
  }


  /**
   * Return true if this ViewWhereInput object is equal to o.
   */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ViewWhereInput viewWhereInput = (ViewWhereInput) o;
    return equalsNullable(this.AND, viewWhereInput.AND) &&
        equalsNullable(this.cluster, viewWhereInput.cluster) &&
        equalsNullable(this.entityAsyncStatus, viewWhereInput.entityAsyncStatus) &&
        equalsNullable(this.entityAsyncStatusIn, viewWhereInput.entityAsyncStatusIn) &&
        equalsNullable(this.entityAsyncStatusNot, viewWhereInput.entityAsyncStatusNot) &&
        equalsNullable(this.entityAsyncStatusNotIn, viewWhereInput.entityAsyncStatusNotIn) &&
        equalsNullable(this.graphsEvery, viewWhereInput.graphsEvery) &&
        equalsNullable(this.graphsNone, viewWhereInput.graphsNone) &&
        equalsNullable(this.graphsSome, viewWhereInput.graphsSome) &&
        equalsNullable(this.id, viewWhereInput.id) &&
        equalsNullable(this.idContains, viewWhereInput.idContains) &&
        equalsNullable(this.idEndsWith, viewWhereInput.idEndsWith) &&
        equalsNullable(this.idGt, viewWhereInput.idGt) &&
        equalsNullable(this.idGte, viewWhereInput.idGte) &&
        equalsNullable(this.idIn, viewWhereInput.idIn) &&
        equalsNullable(this.idLt, viewWhereInput.idLt) &&
        equalsNullable(this.idLte, viewWhereInput.idLte) &&
        equalsNullable(this.idNot, viewWhereInput.idNot) &&
        equalsNullable(this.idNotContains, viewWhereInput.idNotContains) &&
        equalsNullable(this.idNotEndsWith, viewWhereInput.idNotEndsWith) &&
        equalsNullable(this.idNotIn, viewWhereInput.idNotIn) &&
        equalsNullable(this.idNotStartsWith, viewWhereInput.idNotStartsWith) &&
        equalsNullable(this.idStartsWith, viewWhereInput.idStartsWith) &&
        equalsNullable(this.localId, viewWhereInput.localId) &&
        equalsNullable(this.localIdContains, viewWhereInput.localIdContains) &&
        equalsNullable(this.localIdEndsWith, viewWhereInput.localIdEndsWith) &&
        equalsNullable(this.localIdGt, viewWhereInput.localIdGt) &&
        equalsNullable(this.localIdGte, viewWhereInput.localIdGte) &&
        equalsNullable(this.localIdIn, viewWhereInput.localIdIn) &&
        equalsNullable(this.localIdLt, viewWhereInput.localIdLt) &&
        equalsNullable(this.localIdLte, viewWhereInput.localIdLte) &&
        equalsNullable(this.localIdNot, viewWhereInput.localIdNot) &&
        equalsNullable(this.localIdNotContains, viewWhereInput.localIdNotContains) &&
        equalsNullable(this.localIdNotEndsWith, viewWhereInput.localIdNotEndsWith) &&
        equalsNullable(this.localIdNotIn, viewWhereInput.localIdNotIn) &&
        equalsNullable(this.localIdNotStartsWith, viewWhereInput.localIdNotStartsWith) &&
        equalsNullable(this.localIdStartsWith, viewWhereInput.localIdStartsWith) &&
        equalsNullable(this.name, viewWhereInput.name) &&
        equalsNullable(this.nameContains, viewWhereInput.nameContains) &&
        equalsNullable(this.nameEndsWith, viewWhereInput.nameEndsWith) &&
        equalsNullable(this.nameGt, viewWhereInput.nameGt) &&
        equalsNullable(this.nameGte, viewWhereInput.nameGte) &&
        equalsNullable(this.nameIn, viewWhereInput.nameIn) &&
        equalsNullable(this.nameLt, viewWhereInput.nameLt) &&
        equalsNullable(this.nameLte, viewWhereInput.nameLte) &&
        equalsNullable(this.nameNot, viewWhereInput.nameNot) &&
        equalsNullable(this.nameNotContains, viewWhereInput.nameNotContains) &&
        equalsNullable(this.nameNotEndsWith, viewWhereInput.nameNotEndsWith) &&
        equalsNullable(this.nameNotIn, viewWhereInput.nameNotIn) &&
        equalsNullable(this.nameNotStartsWith, viewWhereInput.nameNotStartsWith) &&
        equalsNullable(this.nameStartsWith, viewWhereInput.nameStartsWith) &&
        equalsNullable(this.NOT, viewWhereInput.NOT) &&
        equalsNullable(this.OR, viewWhereInput.OR) &&
        equalsNullable(this.timeSpan, viewWhereInput.timeSpan) &&
        equalsNullable(this.timeSpanGt, viewWhereInput.timeSpanGt) &&
        equalsNullable(this.timeSpanGte, viewWhereInput.timeSpanGte) &&
        equalsNullable(this.timeSpanIn, viewWhereInput.timeSpanIn) &&
        equalsNullable(this.timeSpanLt, viewWhereInput.timeSpanLt) &&
        equalsNullable(this.timeSpanLte, viewWhereInput.timeSpanLte) &&
        equalsNullable(this.timeSpanNot, viewWhereInput.timeSpanNot) &&
        equalsNullable(this.timeSpanNotIn, viewWhereInput.timeSpanNotIn) &&
        equalsNullable(this.timeUnit, viewWhereInput.timeUnit) &&
        equalsNullable(this.timeUnitIn, viewWhereInput.timeUnitIn) &&
        equalsNullable(this.timeUnitNot, viewWhereInput.timeUnitNot) &&
        equalsNullable(this.timeUnitNotIn, viewWhereInput.timeUnitNotIn);
  }

  private static <T> boolean equalsNullable(JsonNullable<T> a, JsonNullable<T> b) {
    return a == b || (a != null && b != null && a.isPresent() && b.isPresent() && Objects.deepEquals(a.get(), b.get()));
  }

  @Override
  public int hashCode() {
    return Objects.hash(hashCodeNullable(AND), hashCodeNullable(cluster), hashCodeNullable(entityAsyncStatus), hashCodeNullable(entityAsyncStatusIn), hashCodeNullable(entityAsyncStatusNot), hashCodeNullable(entityAsyncStatusNotIn), hashCodeNullable(graphsEvery), hashCodeNullable(graphsNone), hashCodeNullable(graphsSome), hashCodeNullable(id), hashCodeNullable(idContains), hashCodeNullable(idEndsWith), hashCodeNullable(idGt), hashCodeNullable(idGte), hashCodeNullable(idIn), hashCodeNullable(idLt), hashCodeNullable(idLte), hashCodeNullable(idNot), hashCodeNullable(idNotContains), hashCodeNullable(idNotEndsWith), hashCodeNullable(idNotIn), hashCodeNullable(idNotStartsWith), hashCodeNullable(idStartsWith), hashCodeNullable(localId), hashCodeNullable(localIdContains), hashCodeNullable(localIdEndsWith), hashCodeNullable(localIdGt), hashCodeNullable(localIdGte), hashCodeNullable(localIdIn), hashCodeNullable(localIdLt), hashCodeNullable(localIdLte), hashCodeNullable(localIdNot), hashCodeNullable(localIdNotContains), hashCodeNullable(localIdNotEndsWith), hashCodeNullable(localIdNotIn), hashCodeNullable(localIdNotStartsWith), hashCodeNullable(localIdStartsWith), hashCodeNullable(name), hashCodeNullable(nameContains), hashCodeNullable(nameEndsWith), hashCodeNullable(nameGt), hashCodeNullable(nameGte), hashCodeNullable(nameIn), hashCodeNullable(nameLt), hashCodeNullable(nameLte), hashCodeNullable(nameNot), hashCodeNullable(nameNotContains), hashCodeNullable(nameNotEndsWith), hashCodeNullable(nameNotIn), hashCodeNullable(nameNotStartsWith), hashCodeNullable(nameStartsWith), hashCodeNullable(NOT), hashCodeNullable(OR), hashCodeNullable(timeSpan), hashCodeNullable(timeSpanGt), hashCodeNullable(timeSpanGte), hashCodeNullable(timeSpanIn), hashCodeNullable(timeSpanLt), hashCodeNullable(timeSpanLte), hashCodeNullable(timeSpanNot), hashCodeNullable(timeSpanNotIn), hashCodeNullable(timeUnit), hashCodeNullable(timeUnitIn), hashCodeNullable(timeUnitNot), hashCodeNullable(timeUnitNotIn));
  }

  private static <T> int hashCodeNullable(JsonNullable<T> a) {
    if (a == null) {
      return 1;
    }
    return a.isPresent() ? Arrays.deepHashCode(new Object[]{a.get()}) : 31;
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ViewWhereInput {\n");
    sb.append("    AND: ").append(toIndentedString(AND)).append("\n");
    sb.append("    cluster: ").append(toIndentedString(cluster)).append("\n");
    sb.append("    entityAsyncStatus: ").append(toIndentedString(entityAsyncStatus)).append("\n");
    sb.append("    entityAsyncStatusIn: ").append(toIndentedString(entityAsyncStatusIn)).append("\n");
    sb.append("    entityAsyncStatusNot: ").append(toIndentedString(entityAsyncStatusNot)).append("\n");
    sb.append("    entityAsyncStatusNotIn: ").append(toIndentedString(entityAsyncStatusNotIn)).append("\n");
    sb.append("    graphsEvery: ").append(toIndentedString(graphsEvery)).append("\n");
    sb.append("    graphsNone: ").append(toIndentedString(graphsNone)).append("\n");
    sb.append("    graphsSome: ").append(toIndentedString(graphsSome)).append("\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    idContains: ").append(toIndentedString(idContains)).append("\n");
    sb.append("    idEndsWith: ").append(toIndentedString(idEndsWith)).append("\n");
    sb.append("    idGt: ").append(toIndentedString(idGt)).append("\n");
    sb.append("    idGte: ").append(toIndentedString(idGte)).append("\n");
    sb.append("    idIn: ").append(toIndentedString(idIn)).append("\n");
    sb.append("    idLt: ").append(toIndentedString(idLt)).append("\n");
    sb.append("    idLte: ").append(toIndentedString(idLte)).append("\n");
    sb.append("    idNot: ").append(toIndentedString(idNot)).append("\n");
    sb.append("    idNotContains: ").append(toIndentedString(idNotContains)).append("\n");
    sb.append("    idNotEndsWith: ").append(toIndentedString(idNotEndsWith)).append("\n");
    sb.append("    idNotIn: ").append(toIndentedString(idNotIn)).append("\n");
    sb.append("    idNotStartsWith: ").append(toIndentedString(idNotStartsWith)).append("\n");
    sb.append("    idStartsWith: ").append(toIndentedString(idStartsWith)).append("\n");
    sb.append("    localId: ").append(toIndentedString(localId)).append("\n");
    sb.append("    localIdContains: ").append(toIndentedString(localIdContains)).append("\n");
    sb.append("    localIdEndsWith: ").append(toIndentedString(localIdEndsWith)).append("\n");
    sb.append("    localIdGt: ").append(toIndentedString(localIdGt)).append("\n");
    sb.append("    localIdGte: ").append(toIndentedString(localIdGte)).append("\n");
    sb.append("    localIdIn: ").append(toIndentedString(localIdIn)).append("\n");
    sb.append("    localIdLt: ").append(toIndentedString(localIdLt)).append("\n");
    sb.append("    localIdLte: ").append(toIndentedString(localIdLte)).append("\n");
    sb.append("    localIdNot: ").append(toIndentedString(localIdNot)).append("\n");
    sb.append("    localIdNotContains: ").append(toIndentedString(localIdNotContains)).append("\n");
    sb.append("    localIdNotEndsWith: ").append(toIndentedString(localIdNotEndsWith)).append("\n");
    sb.append("    localIdNotIn: ").append(toIndentedString(localIdNotIn)).append("\n");
    sb.append("    localIdNotStartsWith: ").append(toIndentedString(localIdNotStartsWith)).append("\n");
    sb.append("    localIdStartsWith: ").append(toIndentedString(localIdStartsWith)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    nameContains: ").append(toIndentedString(nameContains)).append("\n");
    sb.append("    nameEndsWith: ").append(toIndentedString(nameEndsWith)).append("\n");
    sb.append("    nameGt: ").append(toIndentedString(nameGt)).append("\n");
    sb.append("    nameGte: ").append(toIndentedString(nameGte)).append("\n");
    sb.append("    nameIn: ").append(toIndentedString(nameIn)).append("\n");
    sb.append("    nameLt: ").append(toIndentedString(nameLt)).append("\n");
    sb.append("    nameLte: ").append(toIndentedString(nameLte)).append("\n");
    sb.append("    nameNot: ").append(toIndentedString(nameNot)).append("\n");
    sb.append("    nameNotContains: ").append(toIndentedString(nameNotContains)).append("\n");
    sb.append("    nameNotEndsWith: ").append(toIndentedString(nameNotEndsWith)).append("\n");
    sb.append("    nameNotIn: ").append(toIndentedString(nameNotIn)).append("\n");
    sb.append("    nameNotStartsWith: ").append(toIndentedString(nameNotStartsWith)).append("\n");
    sb.append("    nameStartsWith: ").append(toIndentedString(nameStartsWith)).append("\n");
    sb.append("    NOT: ").append(toIndentedString(NOT)).append("\n");
    sb.append("    OR: ").append(toIndentedString(OR)).append("\n");
    sb.append("    timeSpan: ").append(toIndentedString(timeSpan)).append("\n");
    sb.append("    timeSpanGt: ").append(toIndentedString(timeSpanGt)).append("\n");
    sb.append("    timeSpanGte: ").append(toIndentedString(timeSpanGte)).append("\n");
    sb.append("    timeSpanIn: ").append(toIndentedString(timeSpanIn)).append("\n");
    sb.append("    timeSpanLt: ").append(toIndentedString(timeSpanLt)).append("\n");
    sb.append("    timeSpanLte: ").append(toIndentedString(timeSpanLte)).append("\n");
    sb.append("    timeSpanNot: ").append(toIndentedString(timeSpanNot)).append("\n");
    sb.append("    timeSpanNotIn: ").append(toIndentedString(timeSpanNotIn)).append("\n");
    sb.append("    timeUnit: ").append(toIndentedString(timeUnit)).append("\n");
    sb.append("    timeUnitIn: ").append(toIndentedString(timeUnitIn)).append("\n");
    sb.append("    timeUnitNot: ").append(toIndentedString(timeUnitNot)).append("\n");
    sb.append("    timeUnitNotIn: ").append(toIndentedString(timeUnitNotIn)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

