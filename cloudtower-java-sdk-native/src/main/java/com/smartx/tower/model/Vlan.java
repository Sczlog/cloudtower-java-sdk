/*
 * Tower SDK API
 * cloudtower operation API and SDK
 *
 * The version of the OpenAPI document: 1.7.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.smartx.tower.model;

import java.util.Objects;
import java.util.Arrays;
import java.util.Map;
import java.util.HashMap;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import com.smartx.tower.model.AlertRuleCluster;
import com.smartx.tower.model.BrickTopoPowers;
import com.smartx.tower.model.EntityAsyncStatus;
import com.smartx.tower.model.NetworkType;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.util.ArrayList;
import java.util.List;
import org.openapitools.jackson.nullable.JsonNullable;
import com.fasterxml.jackson.annotation.JsonIgnore;
import org.openapitools.jackson.nullable.JsonNullable;
import java.util.NoSuchElementException;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;


/**
 * Vlan
 */
@JsonPropertyOrder({
  Vlan.JSON_PROPERTY_ENTITY_ASYNC_STATUS,
  Vlan.JSON_PROPERTY_GATEWAY_IP,
  Vlan.JSON_PROPERTY_GATEWAY_SUBNETMASK,
  Vlan.JSON_PROPERTY_ID,
  Vlan.JSON_PROPERTY_LABELS,
  Vlan.JSON_PROPERTY_LOCAL_ID,
  Vlan.JSON_PROPERTY_NAME,
  Vlan.JSON_PROPERTY_SUBNETMASK,
  Vlan.JSON_PROPERTY_TYPE,
  Vlan.JSON_PROPERTY_VDS,
  Vlan.JSON_PROPERTY_VLAN_ID,
  Vlan.JSON_PROPERTY_VM_NICS
})
@javax.annotation.processing.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2021-10-27T15:59:14.939791800+08:00[Asia/Shanghai]")
public class Vlan {
  public static final String JSON_PROPERTY_ENTITY_ASYNC_STATUS = "entityAsyncStatus";
  private JsonNullable<EntityAsyncStatus> entityAsyncStatus = JsonNullable.<EntityAsyncStatus>undefined();

  public static final String JSON_PROPERTY_GATEWAY_IP = "gateway_ip";
  private JsonNullable<String> gatewayIp = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_GATEWAY_SUBNETMASK = "gateway_subnetmask";
  private JsonNullable<String> gatewaySubnetmask = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_ID = "id";
  private String id;

  public static final String JSON_PROPERTY_LABELS = "labels";
  private JsonNullable<List<BrickTopoPowers>> labels = JsonNullable.<List<BrickTopoPowers>>undefined();

  public static final String JSON_PROPERTY_LOCAL_ID = "local_id";
  private String localId;

  public static final String JSON_PROPERTY_NAME = "name";
  private String name;

  public static final String JSON_PROPERTY_SUBNETMASK = "subnetmask";
  private JsonNullable<String> subnetmask = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_TYPE = "type";
  private NetworkType type;

  public static final String JSON_PROPERTY_VDS = "vds";
  private AlertRuleCluster vds;

  public static final String JSON_PROPERTY_VLAN_ID = "vlan_id";
  private Double vlanId;

  public static final String JSON_PROPERTY_VM_NICS = "vm_nics";
  private JsonNullable<List<BrickTopoPowers>> vmNics = JsonNullable.<List<BrickTopoPowers>>undefined();


  public Vlan entityAsyncStatus(EntityAsyncStatus entityAsyncStatus) {
    this.entityAsyncStatus = JsonNullable.<EntityAsyncStatus>of(entityAsyncStatus);
    return this;
  }

   /**
   * Get entityAsyncStatus
   * @return entityAsyncStatus
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public EntityAsyncStatus getEntityAsyncStatus() {
        return entityAsyncStatus.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_ENTITY_ASYNC_STATUS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<EntityAsyncStatus> getEntityAsyncStatus_JsonNullable() {
    return entityAsyncStatus;
  }
  
  @JsonProperty(JSON_PROPERTY_ENTITY_ASYNC_STATUS)
  public void setEntityAsyncStatus_JsonNullable(JsonNullable<EntityAsyncStatus> entityAsyncStatus) {
    this.entityAsyncStatus = entityAsyncStatus;
  }

  public void setEntityAsyncStatus(EntityAsyncStatus entityAsyncStatus) {
    this.entityAsyncStatus = JsonNullable.<EntityAsyncStatus>of(entityAsyncStatus);
  }


  public Vlan gatewayIp(String gatewayIp) {
    this.gatewayIp = JsonNullable.<String>of(gatewayIp);
    return this;
  }

   /**
   * Get gatewayIp
   * @return gatewayIp
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getGatewayIp() {
        return gatewayIp.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_GATEWAY_IP)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getGatewayIp_JsonNullable() {
    return gatewayIp;
  }
  
  @JsonProperty(JSON_PROPERTY_GATEWAY_IP)
  public void setGatewayIp_JsonNullable(JsonNullable<String> gatewayIp) {
    this.gatewayIp = gatewayIp;
  }

  public void setGatewayIp(String gatewayIp) {
    this.gatewayIp = JsonNullable.<String>of(gatewayIp);
  }


  public Vlan gatewaySubnetmask(String gatewaySubnetmask) {
    this.gatewaySubnetmask = JsonNullable.<String>of(gatewaySubnetmask);
    return this;
  }

   /**
   * Get gatewaySubnetmask
   * @return gatewaySubnetmask
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getGatewaySubnetmask() {
        return gatewaySubnetmask.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_GATEWAY_SUBNETMASK)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getGatewaySubnetmask_JsonNullable() {
    return gatewaySubnetmask;
  }
  
  @JsonProperty(JSON_PROPERTY_GATEWAY_SUBNETMASK)
  public void setGatewaySubnetmask_JsonNullable(JsonNullable<String> gatewaySubnetmask) {
    this.gatewaySubnetmask = gatewaySubnetmask;
  }

  public void setGatewaySubnetmask(String gatewaySubnetmask) {
    this.gatewaySubnetmask = JsonNullable.<String>of(gatewaySubnetmask);
  }


  public Vlan id(String id) {
    this.id = id;
    return this;
  }

   /**
   * Get id
   * @return id
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")
  @JsonProperty(JSON_PROPERTY_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getId() {
    return id;
  }


  @JsonProperty(JSON_PROPERTY_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setId(String id) {
    this.id = id;
  }


  public Vlan labels(List<BrickTopoPowers> labels) {
    this.labels = JsonNullable.<List<BrickTopoPowers>>of(labels);
    return this;
  }

  public Vlan addLabelsItem(BrickTopoPowers labelsItem) {
    if (this.labels == null || !this.labels.isPresent()) {
      this.labels = JsonNullable.<List<BrickTopoPowers>>of(new ArrayList<>());
    }
    try {
      this.labels.get().add(labelsItem);
    } catch (java.util.NoSuchElementException e) {
      // this can never happen, as we make sure above that the value is present
    }
    return this;
  }

   /**
   * Get labels
   * @return labels
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public List<BrickTopoPowers> getLabels() {
        return labels.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_LABELS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<List<BrickTopoPowers>> getLabels_JsonNullable() {
    return labels;
  }
  
  @JsonProperty(JSON_PROPERTY_LABELS)
  public void setLabels_JsonNullable(JsonNullable<List<BrickTopoPowers>> labels) {
    this.labels = labels;
  }

  public void setLabels(List<BrickTopoPowers> labels) {
    this.labels = JsonNullable.<List<BrickTopoPowers>>of(labels);
  }


  public Vlan localId(String localId) {
    this.localId = localId;
    return this;
  }

   /**
   * Get localId
   * @return localId
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")
  @JsonProperty(JSON_PROPERTY_LOCAL_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getLocalId() {
    return localId;
  }


  @JsonProperty(JSON_PROPERTY_LOCAL_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setLocalId(String localId) {
    this.localId = localId;
  }


  public Vlan name(String name) {
    this.name = name;
    return this;
  }

   /**
   * Get name
   * @return name
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")
  @JsonProperty(JSON_PROPERTY_NAME)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getName() {
    return name;
  }


  @JsonProperty(JSON_PROPERTY_NAME)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setName(String name) {
    this.name = name;
  }


  public Vlan subnetmask(String subnetmask) {
    this.subnetmask = JsonNullable.<String>of(subnetmask);
    return this;
  }

   /**
   * Get subnetmask
   * @return subnetmask
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getSubnetmask() {
        return subnetmask.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_SUBNETMASK)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getSubnetmask_JsonNullable() {
    return subnetmask;
  }
  
  @JsonProperty(JSON_PROPERTY_SUBNETMASK)
  public void setSubnetmask_JsonNullable(JsonNullable<String> subnetmask) {
    this.subnetmask = subnetmask;
  }

  public void setSubnetmask(String subnetmask) {
    this.subnetmask = JsonNullable.<String>of(subnetmask);
  }


  public Vlan type(NetworkType type) {
    this.type = type;
    return this;
  }

   /**
   * Get type
   * @return type
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")
  @JsonProperty(JSON_PROPERTY_TYPE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public NetworkType getType() {
    return type;
  }


  @JsonProperty(JSON_PROPERTY_TYPE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setType(NetworkType type) {
    this.type = type;
  }


  public Vlan vds(AlertRuleCluster vds) {
    this.vds = vds;
    return this;
  }

   /**
   * Get vds
   * @return vds
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")
  @JsonProperty(JSON_PROPERTY_VDS)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public AlertRuleCluster getVds() {
    return vds;
  }


  @JsonProperty(JSON_PROPERTY_VDS)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setVds(AlertRuleCluster vds) {
    this.vds = vds;
  }


  public Vlan vlanId(Double vlanId) {
    this.vlanId = vlanId;
    return this;
  }

   /**
   * Get vlanId
   * @return vlanId
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")
  @JsonProperty(JSON_PROPERTY_VLAN_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public Double getVlanId() {
    return vlanId;
  }


  @JsonProperty(JSON_PROPERTY_VLAN_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setVlanId(Double vlanId) {
    this.vlanId = vlanId;
  }


  public Vlan vmNics(List<BrickTopoPowers> vmNics) {
    this.vmNics = JsonNullable.<List<BrickTopoPowers>>of(vmNics);
    return this;
  }

  public Vlan addVmNicsItem(BrickTopoPowers vmNicsItem) {
    if (this.vmNics == null || !this.vmNics.isPresent()) {
      this.vmNics = JsonNullable.<List<BrickTopoPowers>>of(new ArrayList<>());
    }
    try {
      this.vmNics.get().add(vmNicsItem);
    } catch (java.util.NoSuchElementException e) {
      // this can never happen, as we make sure above that the value is present
    }
    return this;
  }

   /**
   * Get vmNics
   * @return vmNics
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public List<BrickTopoPowers> getVmNics() {
        return vmNics.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_VM_NICS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<List<BrickTopoPowers>> getVmNics_JsonNullable() {
    return vmNics;
  }
  
  @JsonProperty(JSON_PROPERTY_VM_NICS)
  public void setVmNics_JsonNullable(JsonNullable<List<BrickTopoPowers>> vmNics) {
    this.vmNics = vmNics;
  }

  public void setVmNics(List<BrickTopoPowers> vmNics) {
    this.vmNics = JsonNullable.<List<BrickTopoPowers>>of(vmNics);
  }


  /**
   * Return true if this Vlan object is equal to o.
   */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Vlan vlan = (Vlan) o;
    return equalsNullable(this.entityAsyncStatus, vlan.entityAsyncStatus) &&
        equalsNullable(this.gatewayIp, vlan.gatewayIp) &&
        equalsNullable(this.gatewaySubnetmask, vlan.gatewaySubnetmask) &&
        Objects.equals(this.id, vlan.id) &&
        equalsNullable(this.labels, vlan.labels) &&
        Objects.equals(this.localId, vlan.localId) &&
        Objects.equals(this.name, vlan.name) &&
        equalsNullable(this.subnetmask, vlan.subnetmask) &&
        Objects.equals(this.type, vlan.type) &&
        Objects.equals(this.vds, vlan.vds) &&
        Objects.equals(this.vlanId, vlan.vlanId) &&
        equalsNullable(this.vmNics, vlan.vmNics);
  }

  private static <T> boolean equalsNullable(JsonNullable<T> a, JsonNullable<T> b) {
    return a == b || (a != null && b != null && a.isPresent() && b.isPresent() && Objects.deepEquals(a.get(), b.get()));
  }

  @Override
  public int hashCode() {
    return Objects.hash(hashCodeNullable(entityAsyncStatus), hashCodeNullable(gatewayIp), hashCodeNullable(gatewaySubnetmask), id, hashCodeNullable(labels), localId, name, hashCodeNullable(subnetmask), type, vds, vlanId, hashCodeNullable(vmNics));
  }

  private static <T> int hashCodeNullable(JsonNullable<T> a) {
    if (a == null) {
      return 1;
    }
    return a.isPresent() ? Arrays.deepHashCode(new Object[]{a.get()}) : 31;
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Vlan {\n");
    sb.append("    entityAsyncStatus: ").append(toIndentedString(entityAsyncStatus)).append("\n");
    sb.append("    gatewayIp: ").append(toIndentedString(gatewayIp)).append("\n");
    sb.append("    gatewaySubnetmask: ").append(toIndentedString(gatewaySubnetmask)).append("\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    labels: ").append(toIndentedString(labels)).append("\n");
    sb.append("    localId: ").append(toIndentedString(localId)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    subnetmask: ").append(toIndentedString(subnetmask)).append("\n");
    sb.append("    type: ").append(toIndentedString(type)).append("\n");
    sb.append("    vds: ").append(toIndentedString(vds)).append("\n");
    sb.append("    vlanId: ").append(toIndentedString(vlanId)).append("\n");
    sb.append("    vmNics: ").append(toIndentedString(vmNics)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

