/*
 * Tower SDK API
 * cloudtower operation API and SDK
 *
 * The version of the OpenAPI document: 1.7.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.smartx.tower.model;

import java.util.Objects;
import java.util.Arrays;
import java.util.Map;
import java.util.HashMap;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import com.smartx.tower.model.BrickTopoPowers;
import com.smartx.tower.model.IsolationPolicyPorts;
import com.smartx.tower.model.NetworkPolicyRuleType;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.util.ArrayList;
import java.util.List;
import org.openapitools.jackson.nullable.JsonNullable;
import com.fasterxml.jackson.annotation.JsonIgnore;
import org.openapitools.jackson.nullable.JsonNullable;
import java.util.NoSuchElementException;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;


/**
 * IsolationPolicyEgress
 */
@JsonPropertyOrder({
  IsolationPolicyEgress.JSON_PROPERTY_TYPE,
  IsolationPolicyEgress.JSON_PROPERTY_SELECTOR_IDS,
  IsolationPolicyEgress.JSON_PROPERTY_SELECTOR,
  IsolationPolicyEgress.JSON_PROPERTY_PORTS,
  IsolationPolicyEgress.JSON_PROPERTY_IP_BLOCK
})
@javax.annotation.processing.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2021-10-27T15:59:14.939791800+08:00[Asia/Shanghai]")
public class IsolationPolicyEgress {
  public static final String JSON_PROPERTY_TYPE = "type";
  private NetworkPolicyRuleType type;

  public static final String JSON_PROPERTY_SELECTOR_IDS = "selector_ids";
  private JsonNullable<List<String>> selectorIds = JsonNullable.<List<String>>undefined();

  public static final String JSON_PROPERTY_SELECTOR = "selector";
  private JsonNullable<List<BrickTopoPowers>> selector = JsonNullable.<List<BrickTopoPowers>>undefined();

  public static final String JSON_PROPERTY_PORTS = "ports";
  private JsonNullable<List<IsolationPolicyPorts>> ports = JsonNullable.<List<IsolationPolicyPorts>>undefined();

  public static final String JSON_PROPERTY_IP_BLOCK = "ip_block";
  private JsonNullable<String> ipBlock = JsonNullable.<String>undefined();


  public IsolationPolicyEgress type(NetworkPolicyRuleType type) {
    this.type = type;
    return this;
  }

   /**
   * Get type
   * @return type
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")
  @JsonProperty(JSON_PROPERTY_TYPE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public NetworkPolicyRuleType getType() {
    return type;
  }


  @JsonProperty(JSON_PROPERTY_TYPE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setType(NetworkPolicyRuleType type) {
    this.type = type;
  }


  public IsolationPolicyEgress selectorIds(List<String> selectorIds) {
    this.selectorIds = JsonNullable.<List<String>>of(selectorIds);
    return this;
  }

  public IsolationPolicyEgress addSelectorIdsItem(String selectorIdsItem) {
    if (this.selectorIds == null || !this.selectorIds.isPresent()) {
      this.selectorIds = JsonNullable.<List<String>>of(new ArrayList<>());
    }
    try {
      this.selectorIds.get().add(selectorIdsItem);
    } catch (java.util.NoSuchElementException e) {
      // this can never happen, as we make sure above that the value is present
    }
    return this;
  }

   /**
   * Get selectorIds
   * @return selectorIds
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public List<String> getSelectorIds() {
        return selectorIds.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_SELECTOR_IDS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<List<String>> getSelectorIds_JsonNullable() {
    return selectorIds;
  }
  
  @JsonProperty(JSON_PROPERTY_SELECTOR_IDS)
  public void setSelectorIds_JsonNullable(JsonNullable<List<String>> selectorIds) {
    this.selectorIds = selectorIds;
  }

  public void setSelectorIds(List<String> selectorIds) {
    this.selectorIds = JsonNullable.<List<String>>of(selectorIds);
  }


  public IsolationPolicyEgress selector(List<BrickTopoPowers> selector) {
    this.selector = JsonNullable.<List<BrickTopoPowers>>of(selector);
    return this;
  }

  public IsolationPolicyEgress addSelectorItem(BrickTopoPowers selectorItem) {
    if (this.selector == null || !this.selector.isPresent()) {
      this.selector = JsonNullable.<List<BrickTopoPowers>>of(new ArrayList<>());
    }
    try {
      this.selector.get().add(selectorItem);
    } catch (java.util.NoSuchElementException e) {
      // this can never happen, as we make sure above that the value is present
    }
    return this;
  }

   /**
   * Get selector
   * @return selector
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public List<BrickTopoPowers> getSelector() {
        return selector.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_SELECTOR)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<List<BrickTopoPowers>> getSelector_JsonNullable() {
    return selector;
  }
  
  @JsonProperty(JSON_PROPERTY_SELECTOR)
  public void setSelector_JsonNullable(JsonNullable<List<BrickTopoPowers>> selector) {
    this.selector = selector;
  }

  public void setSelector(List<BrickTopoPowers> selector) {
    this.selector = JsonNullable.<List<BrickTopoPowers>>of(selector);
  }


  public IsolationPolicyEgress ports(List<IsolationPolicyPorts> ports) {
    this.ports = JsonNullable.<List<IsolationPolicyPorts>>of(ports);
    return this;
  }

  public IsolationPolicyEgress addPortsItem(IsolationPolicyPorts portsItem) {
    if (this.ports == null || !this.ports.isPresent()) {
      this.ports = JsonNullable.<List<IsolationPolicyPorts>>of(new ArrayList<>());
    }
    try {
      this.ports.get().add(portsItem);
    } catch (java.util.NoSuchElementException e) {
      // this can never happen, as we make sure above that the value is present
    }
    return this;
  }

   /**
   * Get ports
   * @return ports
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public List<IsolationPolicyPorts> getPorts() {
        return ports.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_PORTS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<List<IsolationPolicyPorts>> getPorts_JsonNullable() {
    return ports;
  }
  
  @JsonProperty(JSON_PROPERTY_PORTS)
  public void setPorts_JsonNullable(JsonNullable<List<IsolationPolicyPorts>> ports) {
    this.ports = ports;
  }

  public void setPorts(List<IsolationPolicyPorts> ports) {
    this.ports = JsonNullable.<List<IsolationPolicyPorts>>of(ports);
  }


  public IsolationPolicyEgress ipBlock(String ipBlock) {
    this.ipBlock = JsonNullable.<String>of(ipBlock);
    return this;
  }

   /**
   * Get ipBlock
   * @return ipBlock
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getIpBlock() {
        return ipBlock.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_IP_BLOCK)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getIpBlock_JsonNullable() {
    return ipBlock;
  }
  
  @JsonProperty(JSON_PROPERTY_IP_BLOCK)
  public void setIpBlock_JsonNullable(JsonNullable<String> ipBlock) {
    this.ipBlock = ipBlock;
  }

  public void setIpBlock(String ipBlock) {
    this.ipBlock = JsonNullable.<String>of(ipBlock);
  }


  /**
   * Return true if this IsolationPolicy_egress object is equal to o.
   */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    IsolationPolicyEgress isolationPolicyEgress = (IsolationPolicyEgress) o;
    return Objects.equals(this.type, isolationPolicyEgress.type) &&
        equalsNullable(this.selectorIds, isolationPolicyEgress.selectorIds) &&
        equalsNullable(this.selector, isolationPolicyEgress.selector) &&
        equalsNullable(this.ports, isolationPolicyEgress.ports) &&
        equalsNullable(this.ipBlock, isolationPolicyEgress.ipBlock);
  }

  private static <T> boolean equalsNullable(JsonNullable<T> a, JsonNullable<T> b) {
    return a == b || (a != null && b != null && a.isPresent() && b.isPresent() && Objects.deepEquals(a.get(), b.get()));
  }

  @Override
  public int hashCode() {
    return Objects.hash(type, hashCodeNullable(selectorIds), hashCodeNullable(selector), hashCodeNullable(ports), hashCodeNullable(ipBlock));
  }

  private static <T> int hashCodeNullable(JsonNullable<T> a) {
    if (a == null) {
      return 1;
    }
    return a.isPresent() ? Arrays.deepHashCode(new Object[]{a.get()}) : 31;
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class IsolationPolicyEgress {\n");
    sb.append("    type: ").append(toIndentedString(type)).append("\n");
    sb.append("    selectorIds: ").append(toIndentedString(selectorIds)).append("\n");
    sb.append("    selector: ").append(toIndentedString(selector)).append("\n");
    sb.append("    ports: ").append(toIndentedString(ports)).append("\n");
    sb.append("    ipBlock: ").append(toIndentedString(ipBlock)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

