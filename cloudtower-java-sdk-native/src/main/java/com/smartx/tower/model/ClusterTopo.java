/*
 * Tower SDK API
 * cloudtower operation API and SDK
 *
 * The version of the OpenAPI document: 1.7.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.smartx.tower.model;

import java.util.Objects;
import java.util.Arrays;
import java.util.Map;
import java.util.HashMap;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import com.smartx.tower.model.AlertRuleCluster;
import com.smartx.tower.model.BrickTopoPowers;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.util.ArrayList;
import java.util.List;
import org.openapitools.jackson.nullable.JsonNullable;
import com.fasterxml.jackson.annotation.JsonIgnore;
import org.openapitools.jackson.nullable.JsonNullable;
import java.util.NoSuchElementException;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;


/**
 * ClusterTopo
 */
@JsonPropertyOrder({
  ClusterTopo.JSON_PROPERTY_BRICK_TOPOES,
  ClusterTopo.JSON_PROPERTY_CLUSTER,
  ClusterTopo.JSON_PROPERTY_ID,
  ClusterTopo.JSON_PROPERTY_LOCAL_ID,
  ClusterTopo.JSON_PROPERTY_NAME,
  ClusterTopo.JSON_PROPERTY_NODE_TOPOES,
  ClusterTopo.JSON_PROPERTY_ZONE_TOPOES
})
@javax.annotation.processing.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2021-10-27T15:59:14.939791800+08:00[Asia/Shanghai]")
public class ClusterTopo {
  public static final String JSON_PROPERTY_BRICK_TOPOES = "brick_topoes";
  private JsonNullable<List<AlertRuleCluster>> brickTopoes = JsonNullable.<List<AlertRuleCluster>>undefined();

  public static final String JSON_PROPERTY_CLUSTER = "cluster";
  private AlertRuleCluster cluster;

  public static final String JSON_PROPERTY_ID = "id";
  private String id;

  public static final String JSON_PROPERTY_LOCAL_ID = "local_id";
  private String localId;

  public static final String JSON_PROPERTY_NAME = "name";
  private String name;

  public static final String JSON_PROPERTY_NODE_TOPOES = "node_topoes";
  private JsonNullable<List<AlertRuleCluster>> nodeTopoes = JsonNullable.<List<AlertRuleCluster>>undefined();

  public static final String JSON_PROPERTY_ZONE_TOPOES = "zone_topoes";
  private JsonNullable<List<BrickTopoPowers>> zoneTopoes = JsonNullable.<List<BrickTopoPowers>>undefined();


  public ClusterTopo brickTopoes(List<AlertRuleCluster> brickTopoes) {
    this.brickTopoes = JsonNullable.<List<AlertRuleCluster>>of(brickTopoes);
    return this;
  }

  public ClusterTopo addBrickTopoesItem(AlertRuleCluster brickTopoesItem) {
    if (this.brickTopoes == null || !this.brickTopoes.isPresent()) {
      this.brickTopoes = JsonNullable.<List<AlertRuleCluster>>of(new ArrayList<>());
    }
    try {
      this.brickTopoes.get().add(brickTopoesItem);
    } catch (java.util.NoSuchElementException e) {
      // this can never happen, as we make sure above that the value is present
    }
    return this;
  }

   /**
   * Get brickTopoes
   * @return brickTopoes
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public List<AlertRuleCluster> getBrickTopoes() {
        return brickTopoes.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_BRICK_TOPOES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<List<AlertRuleCluster>> getBrickTopoes_JsonNullable() {
    return brickTopoes;
  }
  
  @JsonProperty(JSON_PROPERTY_BRICK_TOPOES)
  public void setBrickTopoes_JsonNullable(JsonNullable<List<AlertRuleCluster>> brickTopoes) {
    this.brickTopoes = brickTopoes;
  }

  public void setBrickTopoes(List<AlertRuleCluster> brickTopoes) {
    this.brickTopoes = JsonNullable.<List<AlertRuleCluster>>of(brickTopoes);
  }


  public ClusterTopo cluster(AlertRuleCluster cluster) {
    this.cluster = cluster;
    return this;
  }

   /**
   * Get cluster
   * @return cluster
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")
  @JsonProperty(JSON_PROPERTY_CLUSTER)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public AlertRuleCluster getCluster() {
    return cluster;
  }


  @JsonProperty(JSON_PROPERTY_CLUSTER)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setCluster(AlertRuleCluster cluster) {
    this.cluster = cluster;
  }


  public ClusterTopo id(String id) {
    this.id = id;
    return this;
  }

   /**
   * Get id
   * @return id
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")
  @JsonProperty(JSON_PROPERTY_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getId() {
    return id;
  }


  @JsonProperty(JSON_PROPERTY_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setId(String id) {
    this.id = id;
  }


  public ClusterTopo localId(String localId) {
    this.localId = localId;
    return this;
  }

   /**
   * Get localId
   * @return localId
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")
  @JsonProperty(JSON_PROPERTY_LOCAL_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getLocalId() {
    return localId;
  }


  @JsonProperty(JSON_PROPERTY_LOCAL_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setLocalId(String localId) {
    this.localId = localId;
  }


  public ClusterTopo name(String name) {
    this.name = name;
    return this;
  }

   /**
   * Get name
   * @return name
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")
  @JsonProperty(JSON_PROPERTY_NAME)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getName() {
    return name;
  }


  @JsonProperty(JSON_PROPERTY_NAME)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setName(String name) {
    this.name = name;
  }


  public ClusterTopo nodeTopoes(List<AlertRuleCluster> nodeTopoes) {
    this.nodeTopoes = JsonNullable.<List<AlertRuleCluster>>of(nodeTopoes);
    return this;
  }

  public ClusterTopo addNodeTopoesItem(AlertRuleCluster nodeTopoesItem) {
    if (this.nodeTopoes == null || !this.nodeTopoes.isPresent()) {
      this.nodeTopoes = JsonNullable.<List<AlertRuleCluster>>of(new ArrayList<>());
    }
    try {
      this.nodeTopoes.get().add(nodeTopoesItem);
    } catch (java.util.NoSuchElementException e) {
      // this can never happen, as we make sure above that the value is present
    }
    return this;
  }

   /**
   * Get nodeTopoes
   * @return nodeTopoes
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public List<AlertRuleCluster> getNodeTopoes() {
        return nodeTopoes.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_NODE_TOPOES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<List<AlertRuleCluster>> getNodeTopoes_JsonNullable() {
    return nodeTopoes;
  }
  
  @JsonProperty(JSON_PROPERTY_NODE_TOPOES)
  public void setNodeTopoes_JsonNullable(JsonNullable<List<AlertRuleCluster>> nodeTopoes) {
    this.nodeTopoes = nodeTopoes;
  }

  public void setNodeTopoes(List<AlertRuleCluster> nodeTopoes) {
    this.nodeTopoes = JsonNullable.<List<AlertRuleCluster>>of(nodeTopoes);
  }


  public ClusterTopo zoneTopoes(List<BrickTopoPowers> zoneTopoes) {
    this.zoneTopoes = JsonNullable.<List<BrickTopoPowers>>of(zoneTopoes);
    return this;
  }

  public ClusterTopo addZoneTopoesItem(BrickTopoPowers zoneTopoesItem) {
    if (this.zoneTopoes == null || !this.zoneTopoes.isPresent()) {
      this.zoneTopoes = JsonNullable.<List<BrickTopoPowers>>of(new ArrayList<>());
    }
    try {
      this.zoneTopoes.get().add(zoneTopoesItem);
    } catch (java.util.NoSuchElementException e) {
      // this can never happen, as we make sure above that the value is present
    }
    return this;
  }

   /**
   * Get zoneTopoes
   * @return zoneTopoes
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public List<BrickTopoPowers> getZoneTopoes() {
        return zoneTopoes.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_ZONE_TOPOES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<List<BrickTopoPowers>> getZoneTopoes_JsonNullable() {
    return zoneTopoes;
  }
  
  @JsonProperty(JSON_PROPERTY_ZONE_TOPOES)
  public void setZoneTopoes_JsonNullable(JsonNullable<List<BrickTopoPowers>> zoneTopoes) {
    this.zoneTopoes = zoneTopoes;
  }

  public void setZoneTopoes(List<BrickTopoPowers> zoneTopoes) {
    this.zoneTopoes = JsonNullable.<List<BrickTopoPowers>>of(zoneTopoes);
  }


  /**
   * Return true if this ClusterTopo object is equal to o.
   */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ClusterTopo clusterTopo = (ClusterTopo) o;
    return equalsNullable(this.brickTopoes, clusterTopo.brickTopoes) &&
        Objects.equals(this.cluster, clusterTopo.cluster) &&
        Objects.equals(this.id, clusterTopo.id) &&
        Objects.equals(this.localId, clusterTopo.localId) &&
        Objects.equals(this.name, clusterTopo.name) &&
        equalsNullable(this.nodeTopoes, clusterTopo.nodeTopoes) &&
        equalsNullable(this.zoneTopoes, clusterTopo.zoneTopoes);
  }

  private static <T> boolean equalsNullable(JsonNullable<T> a, JsonNullable<T> b) {
    return a == b || (a != null && b != null && a.isPresent() && b.isPresent() && Objects.deepEquals(a.get(), b.get()));
  }

  @Override
  public int hashCode() {
    return Objects.hash(hashCodeNullable(brickTopoes), cluster, id, localId, name, hashCodeNullable(nodeTopoes), hashCodeNullable(zoneTopoes));
  }

  private static <T> int hashCodeNullable(JsonNullable<T> a) {
    if (a == null) {
      return 1;
    }
    return a.isPresent() ? Arrays.deepHashCode(new Object[]{a.get()}) : 31;
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ClusterTopo {\n");
    sb.append("    brickTopoes: ").append(toIndentedString(brickTopoes)).append("\n");
    sb.append("    cluster: ").append(toIndentedString(cluster)).append("\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    localId: ").append(toIndentedString(localId)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    nodeTopoes: ").append(toIndentedString(nodeTopoes)).append("\n");
    sb.append("    zoneTopoes: ").append(toIndentedString(zoneTopoes)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

