/*
 * Tower SDK API
 * cloudtower operation API and SDK
 *
 * The version of the OpenAPI document: 1.7.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.smartx.tower.model;

import java.util.Objects;
import java.util.Arrays;
import java.util.Map;
import java.util.HashMap;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import com.smartx.tower.model.ClusterWhereInput;
import com.smartx.tower.model.HostWhereInput;
import com.smartx.tower.model.LogCollectionStatus;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.util.ArrayList;
import java.util.List;
import org.openapitools.jackson.nullable.JsonNullable;
import com.fasterxml.jackson.annotation.JsonIgnore;
import org.openapitools.jackson.nullable.JsonNullable;
import java.util.NoSuchElementException;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;


/**
 * LogCollectionWhereInput
 */
@JsonPropertyOrder({
  LogCollectionWhereInput.JSON_PROPERTY_A_N_D,
  LogCollectionWhereInput.JSON_PROPERTY_CLUSTER,
  LogCollectionWhereInput.JSON_PROPERTY_HOSTS_EVERY,
  LogCollectionWhereInput.JSON_PROPERTY_HOSTS_NONE,
  LogCollectionWhereInput.JSON_PROPERTY_HOSTS_SOME,
  LogCollectionWhereInput.JSON_PROPERTY_ID,
  LogCollectionWhereInput.JSON_PROPERTY_ID_CONTAINS,
  LogCollectionWhereInput.JSON_PROPERTY_ID_ENDS_WITH,
  LogCollectionWhereInput.JSON_PROPERTY_ID_GT,
  LogCollectionWhereInput.JSON_PROPERTY_ID_GTE,
  LogCollectionWhereInput.JSON_PROPERTY_ID_IN,
  LogCollectionWhereInput.JSON_PROPERTY_ID_LT,
  LogCollectionWhereInput.JSON_PROPERTY_ID_LTE,
  LogCollectionWhereInput.JSON_PROPERTY_ID_NOT,
  LogCollectionWhereInput.JSON_PROPERTY_ID_NOT_CONTAINS,
  LogCollectionWhereInput.JSON_PROPERTY_ID_NOT_ENDS_WITH,
  LogCollectionWhereInput.JSON_PROPERTY_ID_NOT_IN,
  LogCollectionWhereInput.JSON_PROPERTY_ID_NOT_STARTS_WITH,
  LogCollectionWhereInput.JSON_PROPERTY_ID_STARTS_WITH,
  LogCollectionWhereInput.JSON_PROPERTY_LOCAL_ID,
  LogCollectionWhereInput.JSON_PROPERTY_LOCAL_ID_CONTAINS,
  LogCollectionWhereInput.JSON_PROPERTY_LOCAL_ID_ENDS_WITH,
  LogCollectionWhereInput.JSON_PROPERTY_LOCAL_ID_GT,
  LogCollectionWhereInput.JSON_PROPERTY_LOCAL_ID_GTE,
  LogCollectionWhereInput.JSON_PROPERTY_LOCAL_ID_IN,
  LogCollectionWhereInput.JSON_PROPERTY_LOCAL_ID_LT,
  LogCollectionWhereInput.JSON_PROPERTY_LOCAL_ID_LTE,
  LogCollectionWhereInput.JSON_PROPERTY_LOCAL_ID_NOT,
  LogCollectionWhereInput.JSON_PROPERTY_LOCAL_ID_NOT_CONTAINS,
  LogCollectionWhereInput.JSON_PROPERTY_LOCAL_ID_NOT_ENDS_WITH,
  LogCollectionWhereInput.JSON_PROPERTY_LOCAL_ID_NOT_IN,
  LogCollectionWhereInput.JSON_PROPERTY_LOCAL_ID_NOT_STARTS_WITH,
  LogCollectionWhereInput.JSON_PROPERTY_LOCAL_ID_STARTS_WITH,
  LogCollectionWhereInput.JSON_PROPERTY_LOG_ENDED_AT,
  LogCollectionWhereInput.JSON_PROPERTY_LOG_ENDED_AT_GT,
  LogCollectionWhereInput.JSON_PROPERTY_LOG_ENDED_AT_GTE,
  LogCollectionWhereInput.JSON_PROPERTY_LOG_ENDED_AT_IN,
  LogCollectionWhereInput.JSON_PROPERTY_LOG_ENDED_AT_LT,
  LogCollectionWhereInput.JSON_PROPERTY_LOG_ENDED_AT_LTE,
  LogCollectionWhereInput.JSON_PROPERTY_LOG_ENDED_AT_NOT,
  LogCollectionWhereInput.JSON_PROPERTY_LOG_ENDED_AT_NOT_IN,
  LogCollectionWhereInput.JSON_PROPERTY_LOG_STARTED_AT,
  LogCollectionWhereInput.JSON_PROPERTY_LOG_STARTED_AT_GT,
  LogCollectionWhereInput.JSON_PROPERTY_LOG_STARTED_AT_GTE,
  LogCollectionWhereInput.JSON_PROPERTY_LOG_STARTED_AT_IN,
  LogCollectionWhereInput.JSON_PROPERTY_LOG_STARTED_AT_LT,
  LogCollectionWhereInput.JSON_PROPERTY_LOG_STARTED_AT_LTE,
  LogCollectionWhereInput.JSON_PROPERTY_LOG_STARTED_AT_NOT,
  LogCollectionWhereInput.JSON_PROPERTY_LOG_STARTED_AT_NOT_IN,
  LogCollectionWhereInput.JSON_PROPERTY_N_O_T,
  LogCollectionWhereInput.JSON_PROPERTY_O_R,
  LogCollectionWhereInput.JSON_PROPERTY_OWNER,
  LogCollectionWhereInput.JSON_PROPERTY_OWNER_CONTAINS,
  LogCollectionWhereInput.JSON_PROPERTY_OWNER_ENDS_WITH,
  LogCollectionWhereInput.JSON_PROPERTY_OWNER_GT,
  LogCollectionWhereInput.JSON_PROPERTY_OWNER_GTE,
  LogCollectionWhereInput.JSON_PROPERTY_OWNER_IN,
  LogCollectionWhereInput.JSON_PROPERTY_OWNER_LT,
  LogCollectionWhereInput.JSON_PROPERTY_OWNER_LTE,
  LogCollectionWhereInput.JSON_PROPERTY_OWNER_NOT,
  LogCollectionWhereInput.JSON_PROPERTY_OWNER_NOT_CONTAINS,
  LogCollectionWhereInput.JSON_PROPERTY_OWNER_NOT_ENDS_WITH,
  LogCollectionWhereInput.JSON_PROPERTY_OWNER_NOT_IN,
  LogCollectionWhereInput.JSON_PROPERTY_OWNER_NOT_STARTS_WITH,
  LogCollectionWhereInput.JSON_PROPERTY_OWNER_STARTS_WITH,
  LogCollectionWhereInput.JSON_PROPERTY_PATH,
  LogCollectionWhereInput.JSON_PROPERTY_PATH_CONTAINS,
  LogCollectionWhereInput.JSON_PROPERTY_PATH_ENDS_WITH,
  LogCollectionWhereInput.JSON_PROPERTY_PATH_GT,
  LogCollectionWhereInput.JSON_PROPERTY_PATH_GTE,
  LogCollectionWhereInput.JSON_PROPERTY_PATH_IN,
  LogCollectionWhereInput.JSON_PROPERTY_PATH_LT,
  LogCollectionWhereInput.JSON_PROPERTY_PATH_LTE,
  LogCollectionWhereInput.JSON_PROPERTY_PATH_NOT,
  LogCollectionWhereInput.JSON_PROPERTY_PATH_NOT_CONTAINS,
  LogCollectionWhereInput.JSON_PROPERTY_PATH_NOT_ENDS_WITH,
  LogCollectionWhereInput.JSON_PROPERTY_PATH_NOT_IN,
  LogCollectionWhereInput.JSON_PROPERTY_PATH_NOT_STARTS_WITH,
  LogCollectionWhereInput.JSON_PROPERTY_PATH_STARTS_WITH,
  LogCollectionWhereInput.JSON_PROPERTY_PROGRESS,
  LogCollectionWhereInput.JSON_PROPERTY_PROGRESS_GT,
  LogCollectionWhereInput.JSON_PROPERTY_PROGRESS_GTE,
  LogCollectionWhereInput.JSON_PROPERTY_PROGRESS_IN,
  LogCollectionWhereInput.JSON_PROPERTY_PROGRESS_LT,
  LogCollectionWhereInput.JSON_PROPERTY_PROGRESS_LTE,
  LogCollectionWhereInput.JSON_PROPERTY_PROGRESS_NOT,
  LogCollectionWhereInput.JSON_PROPERTY_PROGRESS_NOT_IN,
  LogCollectionWhereInput.JSON_PROPERTY_SIZE,
  LogCollectionWhereInput.JSON_PROPERTY_SIZE_GT,
  LogCollectionWhereInput.JSON_PROPERTY_SIZE_GTE,
  LogCollectionWhereInput.JSON_PROPERTY_SIZE_IN,
  LogCollectionWhereInput.JSON_PROPERTY_SIZE_LT,
  LogCollectionWhereInput.JSON_PROPERTY_SIZE_LTE,
  LogCollectionWhereInput.JSON_PROPERTY_SIZE_NOT,
  LogCollectionWhereInput.JSON_PROPERTY_SIZE_NOT_IN,
  LogCollectionWhereInput.JSON_PROPERTY_STARTED_AT,
  LogCollectionWhereInput.JSON_PROPERTY_STARTED_AT_GT,
  LogCollectionWhereInput.JSON_PROPERTY_STARTED_AT_GTE,
  LogCollectionWhereInput.JSON_PROPERTY_STARTED_AT_IN,
  LogCollectionWhereInput.JSON_PROPERTY_STARTED_AT_LT,
  LogCollectionWhereInput.JSON_PROPERTY_STARTED_AT_LTE,
  LogCollectionWhereInput.JSON_PROPERTY_STARTED_AT_NOT,
  LogCollectionWhereInput.JSON_PROPERTY_STARTED_AT_NOT_IN,
  LogCollectionWhereInput.JSON_PROPERTY_STATUS,
  LogCollectionWhereInput.JSON_PROPERTY_STATUS_IN,
  LogCollectionWhereInput.JSON_PROPERTY_STATUS_NOT,
  LogCollectionWhereInput.JSON_PROPERTY_STATUS_NOT_IN
})
@javax.annotation.processing.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2021-10-27T15:59:14.939791800+08:00[Asia/Shanghai]")
public class LogCollectionWhereInput {
  public static final String JSON_PROPERTY_A_N_D = "AND";
  private JsonNullable<List<LogCollectionWhereInput>> AND = JsonNullable.<List<LogCollectionWhereInput>>undefined();

  public static final String JSON_PROPERTY_CLUSTER = "cluster";
  private JsonNullable<ClusterWhereInput> cluster = JsonNullable.<ClusterWhereInput>undefined();

  public static final String JSON_PROPERTY_HOSTS_EVERY = "hosts_every";
  private JsonNullable<HostWhereInput> hostsEvery = JsonNullable.<HostWhereInput>undefined();

  public static final String JSON_PROPERTY_HOSTS_NONE = "hosts_none";
  private JsonNullable<HostWhereInput> hostsNone = JsonNullable.<HostWhereInput>undefined();

  public static final String JSON_PROPERTY_HOSTS_SOME = "hosts_some";
  private JsonNullable<HostWhereInput> hostsSome = JsonNullable.<HostWhereInput>undefined();

  public static final String JSON_PROPERTY_ID = "id";
  private JsonNullable<String> id = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_ID_CONTAINS = "id_contains";
  private JsonNullable<String> idContains = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_ID_ENDS_WITH = "id_ends_with";
  private JsonNullable<String> idEndsWith = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_ID_GT = "id_gt";
  private JsonNullable<String> idGt = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_ID_GTE = "id_gte";
  private JsonNullable<String> idGte = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_ID_IN = "id_in";
  private JsonNullable<List<String>> idIn = JsonNullable.<List<String>>undefined();

  public static final String JSON_PROPERTY_ID_LT = "id_lt";
  private JsonNullable<String> idLt = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_ID_LTE = "id_lte";
  private JsonNullable<String> idLte = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_ID_NOT = "id_not";
  private JsonNullable<String> idNot = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_ID_NOT_CONTAINS = "id_not_contains";
  private JsonNullable<String> idNotContains = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_ID_NOT_ENDS_WITH = "id_not_ends_with";
  private JsonNullable<String> idNotEndsWith = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_ID_NOT_IN = "id_not_in";
  private JsonNullable<List<String>> idNotIn = JsonNullable.<List<String>>undefined();

  public static final String JSON_PROPERTY_ID_NOT_STARTS_WITH = "id_not_starts_with";
  private JsonNullable<String> idNotStartsWith = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_ID_STARTS_WITH = "id_starts_with";
  private JsonNullable<String> idStartsWith = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_LOCAL_ID = "local_id";
  private JsonNullable<String> localId = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_LOCAL_ID_CONTAINS = "local_id_contains";
  private JsonNullable<String> localIdContains = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_LOCAL_ID_ENDS_WITH = "local_id_ends_with";
  private JsonNullable<String> localIdEndsWith = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_LOCAL_ID_GT = "local_id_gt";
  private JsonNullable<String> localIdGt = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_LOCAL_ID_GTE = "local_id_gte";
  private JsonNullable<String> localIdGte = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_LOCAL_ID_IN = "local_id_in";
  private JsonNullable<List<String>> localIdIn = JsonNullable.<List<String>>undefined();

  public static final String JSON_PROPERTY_LOCAL_ID_LT = "local_id_lt";
  private JsonNullable<String> localIdLt = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_LOCAL_ID_LTE = "local_id_lte";
  private JsonNullable<String> localIdLte = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_LOCAL_ID_NOT = "local_id_not";
  private JsonNullable<String> localIdNot = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_LOCAL_ID_NOT_CONTAINS = "local_id_not_contains";
  private JsonNullable<String> localIdNotContains = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_LOCAL_ID_NOT_ENDS_WITH = "local_id_not_ends_with";
  private JsonNullable<String> localIdNotEndsWith = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_LOCAL_ID_NOT_IN = "local_id_not_in";
  private JsonNullable<List<String>> localIdNotIn = JsonNullable.<List<String>>undefined();

  public static final String JSON_PROPERTY_LOCAL_ID_NOT_STARTS_WITH = "local_id_not_starts_with";
  private JsonNullable<String> localIdNotStartsWith = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_LOCAL_ID_STARTS_WITH = "local_id_starts_with";
  private JsonNullable<String> localIdStartsWith = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_LOG_ENDED_AT = "log_ended_at";
  private JsonNullable<String> logEndedAt = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_LOG_ENDED_AT_GT = "log_ended_at_gt";
  private JsonNullable<String> logEndedAtGt = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_LOG_ENDED_AT_GTE = "log_ended_at_gte";
  private JsonNullable<String> logEndedAtGte = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_LOG_ENDED_AT_IN = "log_ended_at_in";
  private JsonNullable<List<String>> logEndedAtIn = JsonNullable.<List<String>>undefined();

  public static final String JSON_PROPERTY_LOG_ENDED_AT_LT = "log_ended_at_lt";
  private JsonNullable<String> logEndedAtLt = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_LOG_ENDED_AT_LTE = "log_ended_at_lte";
  private JsonNullable<String> logEndedAtLte = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_LOG_ENDED_AT_NOT = "log_ended_at_not";
  private JsonNullable<String> logEndedAtNot = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_LOG_ENDED_AT_NOT_IN = "log_ended_at_not_in";
  private JsonNullable<List<String>> logEndedAtNotIn = JsonNullable.<List<String>>undefined();

  public static final String JSON_PROPERTY_LOG_STARTED_AT = "log_started_at";
  private JsonNullable<String> logStartedAt = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_LOG_STARTED_AT_GT = "log_started_at_gt";
  private JsonNullable<String> logStartedAtGt = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_LOG_STARTED_AT_GTE = "log_started_at_gte";
  private JsonNullable<String> logStartedAtGte = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_LOG_STARTED_AT_IN = "log_started_at_in";
  private JsonNullable<List<String>> logStartedAtIn = JsonNullable.<List<String>>undefined();

  public static final String JSON_PROPERTY_LOG_STARTED_AT_LT = "log_started_at_lt";
  private JsonNullable<String> logStartedAtLt = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_LOG_STARTED_AT_LTE = "log_started_at_lte";
  private JsonNullable<String> logStartedAtLte = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_LOG_STARTED_AT_NOT = "log_started_at_not";
  private JsonNullable<String> logStartedAtNot = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_LOG_STARTED_AT_NOT_IN = "log_started_at_not_in";
  private JsonNullable<List<String>> logStartedAtNotIn = JsonNullable.<List<String>>undefined();

  public static final String JSON_PROPERTY_N_O_T = "NOT";
  private JsonNullable<List<LogCollectionWhereInput>> NOT = JsonNullable.<List<LogCollectionWhereInput>>undefined();

  public static final String JSON_PROPERTY_O_R = "OR";
  private JsonNullable<List<LogCollectionWhereInput>> OR = JsonNullable.<List<LogCollectionWhereInput>>undefined();

  public static final String JSON_PROPERTY_OWNER = "owner";
  private JsonNullable<String> owner = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_OWNER_CONTAINS = "owner_contains";
  private JsonNullable<String> ownerContains = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_OWNER_ENDS_WITH = "owner_ends_with";
  private JsonNullable<String> ownerEndsWith = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_OWNER_GT = "owner_gt";
  private JsonNullable<String> ownerGt = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_OWNER_GTE = "owner_gte";
  private JsonNullable<String> ownerGte = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_OWNER_IN = "owner_in";
  private JsonNullable<List<String>> ownerIn = JsonNullable.<List<String>>undefined();

  public static final String JSON_PROPERTY_OWNER_LT = "owner_lt";
  private JsonNullable<String> ownerLt = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_OWNER_LTE = "owner_lte";
  private JsonNullable<String> ownerLte = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_OWNER_NOT = "owner_not";
  private JsonNullable<String> ownerNot = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_OWNER_NOT_CONTAINS = "owner_not_contains";
  private JsonNullable<String> ownerNotContains = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_OWNER_NOT_ENDS_WITH = "owner_not_ends_with";
  private JsonNullable<String> ownerNotEndsWith = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_OWNER_NOT_IN = "owner_not_in";
  private JsonNullable<List<String>> ownerNotIn = JsonNullable.<List<String>>undefined();

  public static final String JSON_PROPERTY_OWNER_NOT_STARTS_WITH = "owner_not_starts_with";
  private JsonNullable<String> ownerNotStartsWith = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_OWNER_STARTS_WITH = "owner_starts_with";
  private JsonNullable<String> ownerStartsWith = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_PATH = "path";
  private JsonNullable<String> path = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_PATH_CONTAINS = "path_contains";
  private JsonNullable<String> pathContains = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_PATH_ENDS_WITH = "path_ends_with";
  private JsonNullable<String> pathEndsWith = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_PATH_GT = "path_gt";
  private JsonNullable<String> pathGt = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_PATH_GTE = "path_gte";
  private JsonNullable<String> pathGte = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_PATH_IN = "path_in";
  private JsonNullable<List<String>> pathIn = JsonNullable.<List<String>>undefined();

  public static final String JSON_PROPERTY_PATH_LT = "path_lt";
  private JsonNullable<String> pathLt = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_PATH_LTE = "path_lte";
  private JsonNullable<String> pathLte = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_PATH_NOT = "path_not";
  private JsonNullable<String> pathNot = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_PATH_NOT_CONTAINS = "path_not_contains";
  private JsonNullable<String> pathNotContains = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_PATH_NOT_ENDS_WITH = "path_not_ends_with";
  private JsonNullable<String> pathNotEndsWith = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_PATH_NOT_IN = "path_not_in";
  private JsonNullable<List<String>> pathNotIn = JsonNullable.<List<String>>undefined();

  public static final String JSON_PROPERTY_PATH_NOT_STARTS_WITH = "path_not_starts_with";
  private JsonNullable<String> pathNotStartsWith = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_PATH_STARTS_WITH = "path_starts_with";
  private JsonNullable<String> pathStartsWith = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_PROGRESS = "progress";
  private JsonNullable<Double> progress = JsonNullable.<Double>undefined();

  public static final String JSON_PROPERTY_PROGRESS_GT = "progress_gt";
  private JsonNullable<Double> progressGt = JsonNullable.<Double>undefined();

  public static final String JSON_PROPERTY_PROGRESS_GTE = "progress_gte";
  private JsonNullable<Double> progressGte = JsonNullable.<Double>undefined();

  public static final String JSON_PROPERTY_PROGRESS_IN = "progress_in";
  private JsonNullable<List<Double>> progressIn = JsonNullable.<List<Double>>undefined();

  public static final String JSON_PROPERTY_PROGRESS_LT = "progress_lt";
  private JsonNullable<Double> progressLt = JsonNullable.<Double>undefined();

  public static final String JSON_PROPERTY_PROGRESS_LTE = "progress_lte";
  private JsonNullable<Double> progressLte = JsonNullable.<Double>undefined();

  public static final String JSON_PROPERTY_PROGRESS_NOT = "progress_not";
  private JsonNullable<Double> progressNot = JsonNullable.<Double>undefined();

  public static final String JSON_PROPERTY_PROGRESS_NOT_IN = "progress_not_in";
  private JsonNullable<List<Double>> progressNotIn = JsonNullable.<List<Double>>undefined();

  public static final String JSON_PROPERTY_SIZE = "size";
  private JsonNullable<Double> size = JsonNullable.<Double>undefined();

  public static final String JSON_PROPERTY_SIZE_GT = "size_gt";
  private JsonNullable<Double> sizeGt = JsonNullable.<Double>undefined();

  public static final String JSON_PROPERTY_SIZE_GTE = "size_gte";
  private JsonNullable<Double> sizeGte = JsonNullable.<Double>undefined();

  public static final String JSON_PROPERTY_SIZE_IN = "size_in";
  private JsonNullable<List<Double>> sizeIn = JsonNullable.<List<Double>>undefined();

  public static final String JSON_PROPERTY_SIZE_LT = "size_lt";
  private JsonNullable<Double> sizeLt = JsonNullable.<Double>undefined();

  public static final String JSON_PROPERTY_SIZE_LTE = "size_lte";
  private JsonNullable<Double> sizeLte = JsonNullable.<Double>undefined();

  public static final String JSON_PROPERTY_SIZE_NOT = "size_not";
  private JsonNullable<Double> sizeNot = JsonNullable.<Double>undefined();

  public static final String JSON_PROPERTY_SIZE_NOT_IN = "size_not_in";
  private JsonNullable<List<Double>> sizeNotIn = JsonNullable.<List<Double>>undefined();

  public static final String JSON_PROPERTY_STARTED_AT = "started_at";
  private JsonNullable<String> startedAt = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_STARTED_AT_GT = "started_at_gt";
  private JsonNullable<String> startedAtGt = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_STARTED_AT_GTE = "started_at_gte";
  private JsonNullable<String> startedAtGte = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_STARTED_AT_IN = "started_at_in";
  private JsonNullable<List<String>> startedAtIn = JsonNullable.<List<String>>undefined();

  public static final String JSON_PROPERTY_STARTED_AT_LT = "started_at_lt";
  private JsonNullable<String> startedAtLt = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_STARTED_AT_LTE = "started_at_lte";
  private JsonNullable<String> startedAtLte = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_STARTED_AT_NOT = "started_at_not";
  private JsonNullable<String> startedAtNot = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_STARTED_AT_NOT_IN = "started_at_not_in";
  private JsonNullable<List<String>> startedAtNotIn = JsonNullable.<List<String>>undefined();

  public static final String JSON_PROPERTY_STATUS = "status";
  private JsonNullable<LogCollectionStatus> status = JsonNullable.<LogCollectionStatus>undefined();

  public static final String JSON_PROPERTY_STATUS_IN = "status_in";
  private JsonNullable<List<LogCollectionStatus>> statusIn = JsonNullable.<List<LogCollectionStatus>>undefined();

  public static final String JSON_PROPERTY_STATUS_NOT = "status_not";
  private JsonNullable<LogCollectionStatus> statusNot = JsonNullable.<LogCollectionStatus>undefined();

  public static final String JSON_PROPERTY_STATUS_NOT_IN = "status_not_in";
  private JsonNullable<List<LogCollectionStatus>> statusNotIn = JsonNullable.<List<LogCollectionStatus>>undefined();


  public LogCollectionWhereInput AND(List<LogCollectionWhereInput> AND) {
    this.AND = JsonNullable.<List<LogCollectionWhereInput>>of(AND);
    return this;
  }

  public LogCollectionWhereInput addANDItem(LogCollectionWhereInput ANDItem) {
    if (this.AND == null || !this.AND.isPresent()) {
      this.AND = JsonNullable.<List<LogCollectionWhereInput>>of(new ArrayList<>());
    }
    try {
      this.AND.get().add(ANDItem);
    } catch (java.util.NoSuchElementException e) {
      // this can never happen, as we make sure above that the value is present
    }
    return this;
  }

   /**
   * Get AND
   * @return AND
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public List<LogCollectionWhereInput> getAND() {
        return AND.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_A_N_D)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<List<LogCollectionWhereInput>> getAND_JsonNullable() {
    return AND;
  }
  
  @JsonProperty(JSON_PROPERTY_A_N_D)
  public void setAND_JsonNullable(JsonNullable<List<LogCollectionWhereInput>> AND) {
    this.AND = AND;
  }

  public void setAND(List<LogCollectionWhereInput> AND) {
    this.AND = JsonNullable.<List<LogCollectionWhereInput>>of(AND);
  }


  public LogCollectionWhereInput cluster(ClusterWhereInput cluster) {
    this.cluster = JsonNullable.<ClusterWhereInput>of(cluster);
    return this;
  }

   /**
   * Get cluster
   * @return cluster
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public ClusterWhereInput getCluster() {
        return cluster.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_CLUSTER)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<ClusterWhereInput> getCluster_JsonNullable() {
    return cluster;
  }
  
  @JsonProperty(JSON_PROPERTY_CLUSTER)
  public void setCluster_JsonNullable(JsonNullable<ClusterWhereInput> cluster) {
    this.cluster = cluster;
  }

  public void setCluster(ClusterWhereInput cluster) {
    this.cluster = JsonNullable.<ClusterWhereInput>of(cluster);
  }


  public LogCollectionWhereInput hostsEvery(HostWhereInput hostsEvery) {
    this.hostsEvery = JsonNullable.<HostWhereInput>of(hostsEvery);
    return this;
  }

   /**
   * Get hostsEvery
   * @return hostsEvery
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public HostWhereInput getHostsEvery() {
        return hostsEvery.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_HOSTS_EVERY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<HostWhereInput> getHostsEvery_JsonNullable() {
    return hostsEvery;
  }
  
  @JsonProperty(JSON_PROPERTY_HOSTS_EVERY)
  public void setHostsEvery_JsonNullable(JsonNullable<HostWhereInput> hostsEvery) {
    this.hostsEvery = hostsEvery;
  }

  public void setHostsEvery(HostWhereInput hostsEvery) {
    this.hostsEvery = JsonNullable.<HostWhereInput>of(hostsEvery);
  }


  public LogCollectionWhereInput hostsNone(HostWhereInput hostsNone) {
    this.hostsNone = JsonNullable.<HostWhereInput>of(hostsNone);
    return this;
  }

   /**
   * Get hostsNone
   * @return hostsNone
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public HostWhereInput getHostsNone() {
        return hostsNone.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_HOSTS_NONE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<HostWhereInput> getHostsNone_JsonNullable() {
    return hostsNone;
  }
  
  @JsonProperty(JSON_PROPERTY_HOSTS_NONE)
  public void setHostsNone_JsonNullable(JsonNullable<HostWhereInput> hostsNone) {
    this.hostsNone = hostsNone;
  }

  public void setHostsNone(HostWhereInput hostsNone) {
    this.hostsNone = JsonNullable.<HostWhereInput>of(hostsNone);
  }


  public LogCollectionWhereInput hostsSome(HostWhereInput hostsSome) {
    this.hostsSome = JsonNullable.<HostWhereInput>of(hostsSome);
    return this;
  }

   /**
   * Get hostsSome
   * @return hostsSome
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public HostWhereInput getHostsSome() {
        return hostsSome.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_HOSTS_SOME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<HostWhereInput> getHostsSome_JsonNullable() {
    return hostsSome;
  }
  
  @JsonProperty(JSON_PROPERTY_HOSTS_SOME)
  public void setHostsSome_JsonNullable(JsonNullable<HostWhereInput> hostsSome) {
    this.hostsSome = hostsSome;
  }

  public void setHostsSome(HostWhereInput hostsSome) {
    this.hostsSome = JsonNullable.<HostWhereInput>of(hostsSome);
  }


  public LogCollectionWhereInput id(String id) {
    this.id = JsonNullable.<String>of(id);
    return this;
  }

   /**
   * Get id
   * @return id
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getId() {
        return id.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getId_JsonNullable() {
    return id;
  }
  
  @JsonProperty(JSON_PROPERTY_ID)
  public void setId_JsonNullable(JsonNullable<String> id) {
    this.id = id;
  }

  public void setId(String id) {
    this.id = JsonNullable.<String>of(id);
  }


  public LogCollectionWhereInput idContains(String idContains) {
    this.idContains = JsonNullable.<String>of(idContains);
    return this;
  }

   /**
   * Get idContains
   * @return idContains
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getIdContains() {
        return idContains.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_ID_CONTAINS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getIdContains_JsonNullable() {
    return idContains;
  }
  
  @JsonProperty(JSON_PROPERTY_ID_CONTAINS)
  public void setIdContains_JsonNullable(JsonNullable<String> idContains) {
    this.idContains = idContains;
  }

  public void setIdContains(String idContains) {
    this.idContains = JsonNullable.<String>of(idContains);
  }


  public LogCollectionWhereInput idEndsWith(String idEndsWith) {
    this.idEndsWith = JsonNullable.<String>of(idEndsWith);
    return this;
  }

   /**
   * Get idEndsWith
   * @return idEndsWith
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getIdEndsWith() {
        return idEndsWith.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_ID_ENDS_WITH)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getIdEndsWith_JsonNullable() {
    return idEndsWith;
  }
  
  @JsonProperty(JSON_PROPERTY_ID_ENDS_WITH)
  public void setIdEndsWith_JsonNullable(JsonNullable<String> idEndsWith) {
    this.idEndsWith = idEndsWith;
  }

  public void setIdEndsWith(String idEndsWith) {
    this.idEndsWith = JsonNullable.<String>of(idEndsWith);
  }


  public LogCollectionWhereInput idGt(String idGt) {
    this.idGt = JsonNullable.<String>of(idGt);
    return this;
  }

   /**
   * Get idGt
   * @return idGt
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getIdGt() {
        return idGt.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_ID_GT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getIdGt_JsonNullable() {
    return idGt;
  }
  
  @JsonProperty(JSON_PROPERTY_ID_GT)
  public void setIdGt_JsonNullable(JsonNullable<String> idGt) {
    this.idGt = idGt;
  }

  public void setIdGt(String idGt) {
    this.idGt = JsonNullable.<String>of(idGt);
  }


  public LogCollectionWhereInput idGte(String idGte) {
    this.idGte = JsonNullable.<String>of(idGte);
    return this;
  }

   /**
   * Get idGte
   * @return idGte
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getIdGte() {
        return idGte.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_ID_GTE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getIdGte_JsonNullable() {
    return idGte;
  }
  
  @JsonProperty(JSON_PROPERTY_ID_GTE)
  public void setIdGte_JsonNullable(JsonNullable<String> idGte) {
    this.idGte = idGte;
  }

  public void setIdGte(String idGte) {
    this.idGte = JsonNullable.<String>of(idGte);
  }


  public LogCollectionWhereInput idIn(List<String> idIn) {
    this.idIn = JsonNullable.<List<String>>of(idIn);
    return this;
  }

  public LogCollectionWhereInput addIdInItem(String idInItem) {
    if (this.idIn == null || !this.idIn.isPresent()) {
      this.idIn = JsonNullable.<List<String>>of(new ArrayList<>());
    }
    try {
      this.idIn.get().add(idInItem);
    } catch (java.util.NoSuchElementException e) {
      // this can never happen, as we make sure above that the value is present
    }
    return this;
  }

   /**
   * Get idIn
   * @return idIn
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public List<String> getIdIn() {
        return idIn.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_ID_IN)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<List<String>> getIdIn_JsonNullable() {
    return idIn;
  }
  
  @JsonProperty(JSON_PROPERTY_ID_IN)
  public void setIdIn_JsonNullable(JsonNullable<List<String>> idIn) {
    this.idIn = idIn;
  }

  public void setIdIn(List<String> idIn) {
    this.idIn = JsonNullable.<List<String>>of(idIn);
  }


  public LogCollectionWhereInput idLt(String idLt) {
    this.idLt = JsonNullable.<String>of(idLt);
    return this;
  }

   /**
   * Get idLt
   * @return idLt
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getIdLt() {
        return idLt.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_ID_LT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getIdLt_JsonNullable() {
    return idLt;
  }
  
  @JsonProperty(JSON_PROPERTY_ID_LT)
  public void setIdLt_JsonNullable(JsonNullable<String> idLt) {
    this.idLt = idLt;
  }

  public void setIdLt(String idLt) {
    this.idLt = JsonNullable.<String>of(idLt);
  }


  public LogCollectionWhereInput idLte(String idLte) {
    this.idLte = JsonNullable.<String>of(idLte);
    return this;
  }

   /**
   * Get idLte
   * @return idLte
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getIdLte() {
        return idLte.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_ID_LTE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getIdLte_JsonNullable() {
    return idLte;
  }
  
  @JsonProperty(JSON_PROPERTY_ID_LTE)
  public void setIdLte_JsonNullable(JsonNullable<String> idLte) {
    this.idLte = idLte;
  }

  public void setIdLte(String idLte) {
    this.idLte = JsonNullable.<String>of(idLte);
  }


  public LogCollectionWhereInput idNot(String idNot) {
    this.idNot = JsonNullable.<String>of(idNot);
    return this;
  }

   /**
   * Get idNot
   * @return idNot
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getIdNot() {
        return idNot.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_ID_NOT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getIdNot_JsonNullable() {
    return idNot;
  }
  
  @JsonProperty(JSON_PROPERTY_ID_NOT)
  public void setIdNot_JsonNullable(JsonNullable<String> idNot) {
    this.idNot = idNot;
  }

  public void setIdNot(String idNot) {
    this.idNot = JsonNullable.<String>of(idNot);
  }


  public LogCollectionWhereInput idNotContains(String idNotContains) {
    this.idNotContains = JsonNullable.<String>of(idNotContains);
    return this;
  }

   /**
   * Get idNotContains
   * @return idNotContains
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getIdNotContains() {
        return idNotContains.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_ID_NOT_CONTAINS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getIdNotContains_JsonNullable() {
    return idNotContains;
  }
  
  @JsonProperty(JSON_PROPERTY_ID_NOT_CONTAINS)
  public void setIdNotContains_JsonNullable(JsonNullable<String> idNotContains) {
    this.idNotContains = idNotContains;
  }

  public void setIdNotContains(String idNotContains) {
    this.idNotContains = JsonNullable.<String>of(idNotContains);
  }


  public LogCollectionWhereInput idNotEndsWith(String idNotEndsWith) {
    this.idNotEndsWith = JsonNullable.<String>of(idNotEndsWith);
    return this;
  }

   /**
   * Get idNotEndsWith
   * @return idNotEndsWith
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getIdNotEndsWith() {
        return idNotEndsWith.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_ID_NOT_ENDS_WITH)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getIdNotEndsWith_JsonNullable() {
    return idNotEndsWith;
  }
  
  @JsonProperty(JSON_PROPERTY_ID_NOT_ENDS_WITH)
  public void setIdNotEndsWith_JsonNullable(JsonNullable<String> idNotEndsWith) {
    this.idNotEndsWith = idNotEndsWith;
  }

  public void setIdNotEndsWith(String idNotEndsWith) {
    this.idNotEndsWith = JsonNullable.<String>of(idNotEndsWith);
  }


  public LogCollectionWhereInput idNotIn(List<String> idNotIn) {
    this.idNotIn = JsonNullable.<List<String>>of(idNotIn);
    return this;
  }

  public LogCollectionWhereInput addIdNotInItem(String idNotInItem) {
    if (this.idNotIn == null || !this.idNotIn.isPresent()) {
      this.idNotIn = JsonNullable.<List<String>>of(new ArrayList<>());
    }
    try {
      this.idNotIn.get().add(idNotInItem);
    } catch (java.util.NoSuchElementException e) {
      // this can never happen, as we make sure above that the value is present
    }
    return this;
  }

   /**
   * Get idNotIn
   * @return idNotIn
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public List<String> getIdNotIn() {
        return idNotIn.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_ID_NOT_IN)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<List<String>> getIdNotIn_JsonNullable() {
    return idNotIn;
  }
  
  @JsonProperty(JSON_PROPERTY_ID_NOT_IN)
  public void setIdNotIn_JsonNullable(JsonNullable<List<String>> idNotIn) {
    this.idNotIn = idNotIn;
  }

  public void setIdNotIn(List<String> idNotIn) {
    this.idNotIn = JsonNullable.<List<String>>of(idNotIn);
  }


  public LogCollectionWhereInput idNotStartsWith(String idNotStartsWith) {
    this.idNotStartsWith = JsonNullable.<String>of(idNotStartsWith);
    return this;
  }

   /**
   * Get idNotStartsWith
   * @return idNotStartsWith
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getIdNotStartsWith() {
        return idNotStartsWith.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_ID_NOT_STARTS_WITH)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getIdNotStartsWith_JsonNullable() {
    return idNotStartsWith;
  }
  
  @JsonProperty(JSON_PROPERTY_ID_NOT_STARTS_WITH)
  public void setIdNotStartsWith_JsonNullable(JsonNullable<String> idNotStartsWith) {
    this.idNotStartsWith = idNotStartsWith;
  }

  public void setIdNotStartsWith(String idNotStartsWith) {
    this.idNotStartsWith = JsonNullable.<String>of(idNotStartsWith);
  }


  public LogCollectionWhereInput idStartsWith(String idStartsWith) {
    this.idStartsWith = JsonNullable.<String>of(idStartsWith);
    return this;
  }

   /**
   * Get idStartsWith
   * @return idStartsWith
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getIdStartsWith() {
        return idStartsWith.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_ID_STARTS_WITH)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getIdStartsWith_JsonNullable() {
    return idStartsWith;
  }
  
  @JsonProperty(JSON_PROPERTY_ID_STARTS_WITH)
  public void setIdStartsWith_JsonNullable(JsonNullable<String> idStartsWith) {
    this.idStartsWith = idStartsWith;
  }

  public void setIdStartsWith(String idStartsWith) {
    this.idStartsWith = JsonNullable.<String>of(idStartsWith);
  }


  public LogCollectionWhereInput localId(String localId) {
    this.localId = JsonNullable.<String>of(localId);
    return this;
  }

   /**
   * Get localId
   * @return localId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getLocalId() {
        return localId.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_LOCAL_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getLocalId_JsonNullable() {
    return localId;
  }
  
  @JsonProperty(JSON_PROPERTY_LOCAL_ID)
  public void setLocalId_JsonNullable(JsonNullable<String> localId) {
    this.localId = localId;
  }

  public void setLocalId(String localId) {
    this.localId = JsonNullable.<String>of(localId);
  }


  public LogCollectionWhereInput localIdContains(String localIdContains) {
    this.localIdContains = JsonNullable.<String>of(localIdContains);
    return this;
  }

   /**
   * Get localIdContains
   * @return localIdContains
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getLocalIdContains() {
        return localIdContains.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_LOCAL_ID_CONTAINS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getLocalIdContains_JsonNullable() {
    return localIdContains;
  }
  
  @JsonProperty(JSON_PROPERTY_LOCAL_ID_CONTAINS)
  public void setLocalIdContains_JsonNullable(JsonNullable<String> localIdContains) {
    this.localIdContains = localIdContains;
  }

  public void setLocalIdContains(String localIdContains) {
    this.localIdContains = JsonNullable.<String>of(localIdContains);
  }


  public LogCollectionWhereInput localIdEndsWith(String localIdEndsWith) {
    this.localIdEndsWith = JsonNullable.<String>of(localIdEndsWith);
    return this;
  }

   /**
   * Get localIdEndsWith
   * @return localIdEndsWith
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getLocalIdEndsWith() {
        return localIdEndsWith.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_LOCAL_ID_ENDS_WITH)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getLocalIdEndsWith_JsonNullable() {
    return localIdEndsWith;
  }
  
  @JsonProperty(JSON_PROPERTY_LOCAL_ID_ENDS_WITH)
  public void setLocalIdEndsWith_JsonNullable(JsonNullable<String> localIdEndsWith) {
    this.localIdEndsWith = localIdEndsWith;
  }

  public void setLocalIdEndsWith(String localIdEndsWith) {
    this.localIdEndsWith = JsonNullable.<String>of(localIdEndsWith);
  }


  public LogCollectionWhereInput localIdGt(String localIdGt) {
    this.localIdGt = JsonNullable.<String>of(localIdGt);
    return this;
  }

   /**
   * Get localIdGt
   * @return localIdGt
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getLocalIdGt() {
        return localIdGt.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_LOCAL_ID_GT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getLocalIdGt_JsonNullable() {
    return localIdGt;
  }
  
  @JsonProperty(JSON_PROPERTY_LOCAL_ID_GT)
  public void setLocalIdGt_JsonNullable(JsonNullable<String> localIdGt) {
    this.localIdGt = localIdGt;
  }

  public void setLocalIdGt(String localIdGt) {
    this.localIdGt = JsonNullable.<String>of(localIdGt);
  }


  public LogCollectionWhereInput localIdGte(String localIdGte) {
    this.localIdGte = JsonNullable.<String>of(localIdGte);
    return this;
  }

   /**
   * Get localIdGte
   * @return localIdGte
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getLocalIdGte() {
        return localIdGte.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_LOCAL_ID_GTE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getLocalIdGte_JsonNullable() {
    return localIdGte;
  }
  
  @JsonProperty(JSON_PROPERTY_LOCAL_ID_GTE)
  public void setLocalIdGte_JsonNullable(JsonNullable<String> localIdGte) {
    this.localIdGte = localIdGte;
  }

  public void setLocalIdGte(String localIdGte) {
    this.localIdGte = JsonNullable.<String>of(localIdGte);
  }


  public LogCollectionWhereInput localIdIn(List<String> localIdIn) {
    this.localIdIn = JsonNullable.<List<String>>of(localIdIn);
    return this;
  }

  public LogCollectionWhereInput addLocalIdInItem(String localIdInItem) {
    if (this.localIdIn == null || !this.localIdIn.isPresent()) {
      this.localIdIn = JsonNullable.<List<String>>of(new ArrayList<>());
    }
    try {
      this.localIdIn.get().add(localIdInItem);
    } catch (java.util.NoSuchElementException e) {
      // this can never happen, as we make sure above that the value is present
    }
    return this;
  }

   /**
   * Get localIdIn
   * @return localIdIn
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public List<String> getLocalIdIn() {
        return localIdIn.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_LOCAL_ID_IN)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<List<String>> getLocalIdIn_JsonNullable() {
    return localIdIn;
  }
  
  @JsonProperty(JSON_PROPERTY_LOCAL_ID_IN)
  public void setLocalIdIn_JsonNullable(JsonNullable<List<String>> localIdIn) {
    this.localIdIn = localIdIn;
  }

  public void setLocalIdIn(List<String> localIdIn) {
    this.localIdIn = JsonNullable.<List<String>>of(localIdIn);
  }


  public LogCollectionWhereInput localIdLt(String localIdLt) {
    this.localIdLt = JsonNullable.<String>of(localIdLt);
    return this;
  }

   /**
   * Get localIdLt
   * @return localIdLt
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getLocalIdLt() {
        return localIdLt.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_LOCAL_ID_LT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getLocalIdLt_JsonNullable() {
    return localIdLt;
  }
  
  @JsonProperty(JSON_PROPERTY_LOCAL_ID_LT)
  public void setLocalIdLt_JsonNullable(JsonNullable<String> localIdLt) {
    this.localIdLt = localIdLt;
  }

  public void setLocalIdLt(String localIdLt) {
    this.localIdLt = JsonNullable.<String>of(localIdLt);
  }


  public LogCollectionWhereInput localIdLte(String localIdLte) {
    this.localIdLte = JsonNullable.<String>of(localIdLte);
    return this;
  }

   /**
   * Get localIdLte
   * @return localIdLte
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getLocalIdLte() {
        return localIdLte.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_LOCAL_ID_LTE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getLocalIdLte_JsonNullable() {
    return localIdLte;
  }
  
  @JsonProperty(JSON_PROPERTY_LOCAL_ID_LTE)
  public void setLocalIdLte_JsonNullable(JsonNullable<String> localIdLte) {
    this.localIdLte = localIdLte;
  }

  public void setLocalIdLte(String localIdLte) {
    this.localIdLte = JsonNullable.<String>of(localIdLte);
  }


  public LogCollectionWhereInput localIdNot(String localIdNot) {
    this.localIdNot = JsonNullable.<String>of(localIdNot);
    return this;
  }

   /**
   * Get localIdNot
   * @return localIdNot
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getLocalIdNot() {
        return localIdNot.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_LOCAL_ID_NOT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getLocalIdNot_JsonNullable() {
    return localIdNot;
  }
  
  @JsonProperty(JSON_PROPERTY_LOCAL_ID_NOT)
  public void setLocalIdNot_JsonNullable(JsonNullable<String> localIdNot) {
    this.localIdNot = localIdNot;
  }

  public void setLocalIdNot(String localIdNot) {
    this.localIdNot = JsonNullable.<String>of(localIdNot);
  }


  public LogCollectionWhereInput localIdNotContains(String localIdNotContains) {
    this.localIdNotContains = JsonNullable.<String>of(localIdNotContains);
    return this;
  }

   /**
   * Get localIdNotContains
   * @return localIdNotContains
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getLocalIdNotContains() {
        return localIdNotContains.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_LOCAL_ID_NOT_CONTAINS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getLocalIdNotContains_JsonNullable() {
    return localIdNotContains;
  }
  
  @JsonProperty(JSON_PROPERTY_LOCAL_ID_NOT_CONTAINS)
  public void setLocalIdNotContains_JsonNullable(JsonNullable<String> localIdNotContains) {
    this.localIdNotContains = localIdNotContains;
  }

  public void setLocalIdNotContains(String localIdNotContains) {
    this.localIdNotContains = JsonNullable.<String>of(localIdNotContains);
  }


  public LogCollectionWhereInput localIdNotEndsWith(String localIdNotEndsWith) {
    this.localIdNotEndsWith = JsonNullable.<String>of(localIdNotEndsWith);
    return this;
  }

   /**
   * Get localIdNotEndsWith
   * @return localIdNotEndsWith
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getLocalIdNotEndsWith() {
        return localIdNotEndsWith.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_LOCAL_ID_NOT_ENDS_WITH)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getLocalIdNotEndsWith_JsonNullable() {
    return localIdNotEndsWith;
  }
  
  @JsonProperty(JSON_PROPERTY_LOCAL_ID_NOT_ENDS_WITH)
  public void setLocalIdNotEndsWith_JsonNullable(JsonNullable<String> localIdNotEndsWith) {
    this.localIdNotEndsWith = localIdNotEndsWith;
  }

  public void setLocalIdNotEndsWith(String localIdNotEndsWith) {
    this.localIdNotEndsWith = JsonNullable.<String>of(localIdNotEndsWith);
  }


  public LogCollectionWhereInput localIdNotIn(List<String> localIdNotIn) {
    this.localIdNotIn = JsonNullable.<List<String>>of(localIdNotIn);
    return this;
  }

  public LogCollectionWhereInput addLocalIdNotInItem(String localIdNotInItem) {
    if (this.localIdNotIn == null || !this.localIdNotIn.isPresent()) {
      this.localIdNotIn = JsonNullable.<List<String>>of(new ArrayList<>());
    }
    try {
      this.localIdNotIn.get().add(localIdNotInItem);
    } catch (java.util.NoSuchElementException e) {
      // this can never happen, as we make sure above that the value is present
    }
    return this;
  }

   /**
   * Get localIdNotIn
   * @return localIdNotIn
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public List<String> getLocalIdNotIn() {
        return localIdNotIn.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_LOCAL_ID_NOT_IN)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<List<String>> getLocalIdNotIn_JsonNullable() {
    return localIdNotIn;
  }
  
  @JsonProperty(JSON_PROPERTY_LOCAL_ID_NOT_IN)
  public void setLocalIdNotIn_JsonNullable(JsonNullable<List<String>> localIdNotIn) {
    this.localIdNotIn = localIdNotIn;
  }

  public void setLocalIdNotIn(List<String> localIdNotIn) {
    this.localIdNotIn = JsonNullable.<List<String>>of(localIdNotIn);
  }


  public LogCollectionWhereInput localIdNotStartsWith(String localIdNotStartsWith) {
    this.localIdNotStartsWith = JsonNullable.<String>of(localIdNotStartsWith);
    return this;
  }

   /**
   * Get localIdNotStartsWith
   * @return localIdNotStartsWith
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getLocalIdNotStartsWith() {
        return localIdNotStartsWith.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_LOCAL_ID_NOT_STARTS_WITH)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getLocalIdNotStartsWith_JsonNullable() {
    return localIdNotStartsWith;
  }
  
  @JsonProperty(JSON_PROPERTY_LOCAL_ID_NOT_STARTS_WITH)
  public void setLocalIdNotStartsWith_JsonNullable(JsonNullable<String> localIdNotStartsWith) {
    this.localIdNotStartsWith = localIdNotStartsWith;
  }

  public void setLocalIdNotStartsWith(String localIdNotStartsWith) {
    this.localIdNotStartsWith = JsonNullable.<String>of(localIdNotStartsWith);
  }


  public LogCollectionWhereInput localIdStartsWith(String localIdStartsWith) {
    this.localIdStartsWith = JsonNullable.<String>of(localIdStartsWith);
    return this;
  }

   /**
   * Get localIdStartsWith
   * @return localIdStartsWith
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getLocalIdStartsWith() {
        return localIdStartsWith.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_LOCAL_ID_STARTS_WITH)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getLocalIdStartsWith_JsonNullable() {
    return localIdStartsWith;
  }
  
  @JsonProperty(JSON_PROPERTY_LOCAL_ID_STARTS_WITH)
  public void setLocalIdStartsWith_JsonNullable(JsonNullable<String> localIdStartsWith) {
    this.localIdStartsWith = localIdStartsWith;
  }

  public void setLocalIdStartsWith(String localIdStartsWith) {
    this.localIdStartsWith = JsonNullable.<String>of(localIdStartsWith);
  }


  public LogCollectionWhereInput logEndedAt(String logEndedAt) {
    this.logEndedAt = JsonNullable.<String>of(logEndedAt);
    return this;
  }

   /**
   * Get logEndedAt
   * @return logEndedAt
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getLogEndedAt() {
        return logEndedAt.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_LOG_ENDED_AT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getLogEndedAt_JsonNullable() {
    return logEndedAt;
  }
  
  @JsonProperty(JSON_PROPERTY_LOG_ENDED_AT)
  public void setLogEndedAt_JsonNullable(JsonNullable<String> logEndedAt) {
    this.logEndedAt = logEndedAt;
  }

  public void setLogEndedAt(String logEndedAt) {
    this.logEndedAt = JsonNullable.<String>of(logEndedAt);
  }


  public LogCollectionWhereInput logEndedAtGt(String logEndedAtGt) {
    this.logEndedAtGt = JsonNullable.<String>of(logEndedAtGt);
    return this;
  }

   /**
   * Get logEndedAtGt
   * @return logEndedAtGt
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getLogEndedAtGt() {
        return logEndedAtGt.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_LOG_ENDED_AT_GT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getLogEndedAtGt_JsonNullable() {
    return logEndedAtGt;
  }
  
  @JsonProperty(JSON_PROPERTY_LOG_ENDED_AT_GT)
  public void setLogEndedAtGt_JsonNullable(JsonNullable<String> logEndedAtGt) {
    this.logEndedAtGt = logEndedAtGt;
  }

  public void setLogEndedAtGt(String logEndedAtGt) {
    this.logEndedAtGt = JsonNullable.<String>of(logEndedAtGt);
  }


  public LogCollectionWhereInput logEndedAtGte(String logEndedAtGte) {
    this.logEndedAtGte = JsonNullable.<String>of(logEndedAtGte);
    return this;
  }

   /**
   * Get logEndedAtGte
   * @return logEndedAtGte
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getLogEndedAtGte() {
        return logEndedAtGte.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_LOG_ENDED_AT_GTE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getLogEndedAtGte_JsonNullable() {
    return logEndedAtGte;
  }
  
  @JsonProperty(JSON_PROPERTY_LOG_ENDED_AT_GTE)
  public void setLogEndedAtGte_JsonNullable(JsonNullable<String> logEndedAtGte) {
    this.logEndedAtGte = logEndedAtGte;
  }

  public void setLogEndedAtGte(String logEndedAtGte) {
    this.logEndedAtGte = JsonNullable.<String>of(logEndedAtGte);
  }


  public LogCollectionWhereInput logEndedAtIn(List<String> logEndedAtIn) {
    this.logEndedAtIn = JsonNullable.<List<String>>of(logEndedAtIn);
    return this;
  }

  public LogCollectionWhereInput addLogEndedAtInItem(String logEndedAtInItem) {
    if (this.logEndedAtIn == null || !this.logEndedAtIn.isPresent()) {
      this.logEndedAtIn = JsonNullable.<List<String>>of(new ArrayList<>());
    }
    try {
      this.logEndedAtIn.get().add(logEndedAtInItem);
    } catch (java.util.NoSuchElementException e) {
      // this can never happen, as we make sure above that the value is present
    }
    return this;
  }

   /**
   * Get logEndedAtIn
   * @return logEndedAtIn
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public List<String> getLogEndedAtIn() {
        return logEndedAtIn.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_LOG_ENDED_AT_IN)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<List<String>> getLogEndedAtIn_JsonNullable() {
    return logEndedAtIn;
  }
  
  @JsonProperty(JSON_PROPERTY_LOG_ENDED_AT_IN)
  public void setLogEndedAtIn_JsonNullable(JsonNullable<List<String>> logEndedAtIn) {
    this.logEndedAtIn = logEndedAtIn;
  }

  public void setLogEndedAtIn(List<String> logEndedAtIn) {
    this.logEndedAtIn = JsonNullable.<List<String>>of(logEndedAtIn);
  }


  public LogCollectionWhereInput logEndedAtLt(String logEndedAtLt) {
    this.logEndedAtLt = JsonNullable.<String>of(logEndedAtLt);
    return this;
  }

   /**
   * Get logEndedAtLt
   * @return logEndedAtLt
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getLogEndedAtLt() {
        return logEndedAtLt.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_LOG_ENDED_AT_LT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getLogEndedAtLt_JsonNullable() {
    return logEndedAtLt;
  }
  
  @JsonProperty(JSON_PROPERTY_LOG_ENDED_AT_LT)
  public void setLogEndedAtLt_JsonNullable(JsonNullable<String> logEndedAtLt) {
    this.logEndedAtLt = logEndedAtLt;
  }

  public void setLogEndedAtLt(String logEndedAtLt) {
    this.logEndedAtLt = JsonNullable.<String>of(logEndedAtLt);
  }


  public LogCollectionWhereInput logEndedAtLte(String logEndedAtLte) {
    this.logEndedAtLte = JsonNullable.<String>of(logEndedAtLte);
    return this;
  }

   /**
   * Get logEndedAtLte
   * @return logEndedAtLte
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getLogEndedAtLte() {
        return logEndedAtLte.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_LOG_ENDED_AT_LTE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getLogEndedAtLte_JsonNullable() {
    return logEndedAtLte;
  }
  
  @JsonProperty(JSON_PROPERTY_LOG_ENDED_AT_LTE)
  public void setLogEndedAtLte_JsonNullable(JsonNullable<String> logEndedAtLte) {
    this.logEndedAtLte = logEndedAtLte;
  }

  public void setLogEndedAtLte(String logEndedAtLte) {
    this.logEndedAtLte = JsonNullable.<String>of(logEndedAtLte);
  }


  public LogCollectionWhereInput logEndedAtNot(String logEndedAtNot) {
    this.logEndedAtNot = JsonNullable.<String>of(logEndedAtNot);
    return this;
  }

   /**
   * Get logEndedAtNot
   * @return logEndedAtNot
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getLogEndedAtNot() {
        return logEndedAtNot.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_LOG_ENDED_AT_NOT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getLogEndedAtNot_JsonNullable() {
    return logEndedAtNot;
  }
  
  @JsonProperty(JSON_PROPERTY_LOG_ENDED_AT_NOT)
  public void setLogEndedAtNot_JsonNullable(JsonNullable<String> logEndedAtNot) {
    this.logEndedAtNot = logEndedAtNot;
  }

  public void setLogEndedAtNot(String logEndedAtNot) {
    this.logEndedAtNot = JsonNullable.<String>of(logEndedAtNot);
  }


  public LogCollectionWhereInput logEndedAtNotIn(List<String> logEndedAtNotIn) {
    this.logEndedAtNotIn = JsonNullable.<List<String>>of(logEndedAtNotIn);
    return this;
  }

  public LogCollectionWhereInput addLogEndedAtNotInItem(String logEndedAtNotInItem) {
    if (this.logEndedAtNotIn == null || !this.logEndedAtNotIn.isPresent()) {
      this.logEndedAtNotIn = JsonNullable.<List<String>>of(new ArrayList<>());
    }
    try {
      this.logEndedAtNotIn.get().add(logEndedAtNotInItem);
    } catch (java.util.NoSuchElementException e) {
      // this can never happen, as we make sure above that the value is present
    }
    return this;
  }

   /**
   * Get logEndedAtNotIn
   * @return logEndedAtNotIn
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public List<String> getLogEndedAtNotIn() {
        return logEndedAtNotIn.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_LOG_ENDED_AT_NOT_IN)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<List<String>> getLogEndedAtNotIn_JsonNullable() {
    return logEndedAtNotIn;
  }
  
  @JsonProperty(JSON_PROPERTY_LOG_ENDED_AT_NOT_IN)
  public void setLogEndedAtNotIn_JsonNullable(JsonNullable<List<String>> logEndedAtNotIn) {
    this.logEndedAtNotIn = logEndedAtNotIn;
  }

  public void setLogEndedAtNotIn(List<String> logEndedAtNotIn) {
    this.logEndedAtNotIn = JsonNullable.<List<String>>of(logEndedAtNotIn);
  }


  public LogCollectionWhereInput logStartedAt(String logStartedAt) {
    this.logStartedAt = JsonNullable.<String>of(logStartedAt);
    return this;
  }

   /**
   * Get logStartedAt
   * @return logStartedAt
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getLogStartedAt() {
        return logStartedAt.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_LOG_STARTED_AT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getLogStartedAt_JsonNullable() {
    return logStartedAt;
  }
  
  @JsonProperty(JSON_PROPERTY_LOG_STARTED_AT)
  public void setLogStartedAt_JsonNullable(JsonNullable<String> logStartedAt) {
    this.logStartedAt = logStartedAt;
  }

  public void setLogStartedAt(String logStartedAt) {
    this.logStartedAt = JsonNullable.<String>of(logStartedAt);
  }


  public LogCollectionWhereInput logStartedAtGt(String logStartedAtGt) {
    this.logStartedAtGt = JsonNullable.<String>of(logStartedAtGt);
    return this;
  }

   /**
   * Get logStartedAtGt
   * @return logStartedAtGt
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getLogStartedAtGt() {
        return logStartedAtGt.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_LOG_STARTED_AT_GT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getLogStartedAtGt_JsonNullable() {
    return logStartedAtGt;
  }
  
  @JsonProperty(JSON_PROPERTY_LOG_STARTED_AT_GT)
  public void setLogStartedAtGt_JsonNullable(JsonNullable<String> logStartedAtGt) {
    this.logStartedAtGt = logStartedAtGt;
  }

  public void setLogStartedAtGt(String logStartedAtGt) {
    this.logStartedAtGt = JsonNullable.<String>of(logStartedAtGt);
  }


  public LogCollectionWhereInput logStartedAtGte(String logStartedAtGte) {
    this.logStartedAtGte = JsonNullable.<String>of(logStartedAtGte);
    return this;
  }

   /**
   * Get logStartedAtGte
   * @return logStartedAtGte
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getLogStartedAtGte() {
        return logStartedAtGte.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_LOG_STARTED_AT_GTE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getLogStartedAtGte_JsonNullable() {
    return logStartedAtGte;
  }
  
  @JsonProperty(JSON_PROPERTY_LOG_STARTED_AT_GTE)
  public void setLogStartedAtGte_JsonNullable(JsonNullable<String> logStartedAtGte) {
    this.logStartedAtGte = logStartedAtGte;
  }

  public void setLogStartedAtGte(String logStartedAtGte) {
    this.logStartedAtGte = JsonNullable.<String>of(logStartedAtGte);
  }


  public LogCollectionWhereInput logStartedAtIn(List<String> logStartedAtIn) {
    this.logStartedAtIn = JsonNullable.<List<String>>of(logStartedAtIn);
    return this;
  }

  public LogCollectionWhereInput addLogStartedAtInItem(String logStartedAtInItem) {
    if (this.logStartedAtIn == null || !this.logStartedAtIn.isPresent()) {
      this.logStartedAtIn = JsonNullable.<List<String>>of(new ArrayList<>());
    }
    try {
      this.logStartedAtIn.get().add(logStartedAtInItem);
    } catch (java.util.NoSuchElementException e) {
      // this can never happen, as we make sure above that the value is present
    }
    return this;
  }

   /**
   * Get logStartedAtIn
   * @return logStartedAtIn
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public List<String> getLogStartedAtIn() {
        return logStartedAtIn.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_LOG_STARTED_AT_IN)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<List<String>> getLogStartedAtIn_JsonNullable() {
    return logStartedAtIn;
  }
  
  @JsonProperty(JSON_PROPERTY_LOG_STARTED_AT_IN)
  public void setLogStartedAtIn_JsonNullable(JsonNullable<List<String>> logStartedAtIn) {
    this.logStartedAtIn = logStartedAtIn;
  }

  public void setLogStartedAtIn(List<String> logStartedAtIn) {
    this.logStartedAtIn = JsonNullable.<List<String>>of(logStartedAtIn);
  }


  public LogCollectionWhereInput logStartedAtLt(String logStartedAtLt) {
    this.logStartedAtLt = JsonNullable.<String>of(logStartedAtLt);
    return this;
  }

   /**
   * Get logStartedAtLt
   * @return logStartedAtLt
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getLogStartedAtLt() {
        return logStartedAtLt.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_LOG_STARTED_AT_LT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getLogStartedAtLt_JsonNullable() {
    return logStartedAtLt;
  }
  
  @JsonProperty(JSON_PROPERTY_LOG_STARTED_AT_LT)
  public void setLogStartedAtLt_JsonNullable(JsonNullable<String> logStartedAtLt) {
    this.logStartedAtLt = logStartedAtLt;
  }

  public void setLogStartedAtLt(String logStartedAtLt) {
    this.logStartedAtLt = JsonNullable.<String>of(logStartedAtLt);
  }


  public LogCollectionWhereInput logStartedAtLte(String logStartedAtLte) {
    this.logStartedAtLte = JsonNullable.<String>of(logStartedAtLte);
    return this;
  }

   /**
   * Get logStartedAtLte
   * @return logStartedAtLte
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getLogStartedAtLte() {
        return logStartedAtLte.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_LOG_STARTED_AT_LTE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getLogStartedAtLte_JsonNullable() {
    return logStartedAtLte;
  }
  
  @JsonProperty(JSON_PROPERTY_LOG_STARTED_AT_LTE)
  public void setLogStartedAtLte_JsonNullable(JsonNullable<String> logStartedAtLte) {
    this.logStartedAtLte = logStartedAtLte;
  }

  public void setLogStartedAtLte(String logStartedAtLte) {
    this.logStartedAtLte = JsonNullable.<String>of(logStartedAtLte);
  }


  public LogCollectionWhereInput logStartedAtNot(String logStartedAtNot) {
    this.logStartedAtNot = JsonNullable.<String>of(logStartedAtNot);
    return this;
  }

   /**
   * Get logStartedAtNot
   * @return logStartedAtNot
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getLogStartedAtNot() {
        return logStartedAtNot.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_LOG_STARTED_AT_NOT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getLogStartedAtNot_JsonNullable() {
    return logStartedAtNot;
  }
  
  @JsonProperty(JSON_PROPERTY_LOG_STARTED_AT_NOT)
  public void setLogStartedAtNot_JsonNullable(JsonNullable<String> logStartedAtNot) {
    this.logStartedAtNot = logStartedAtNot;
  }

  public void setLogStartedAtNot(String logStartedAtNot) {
    this.logStartedAtNot = JsonNullable.<String>of(logStartedAtNot);
  }


  public LogCollectionWhereInput logStartedAtNotIn(List<String> logStartedAtNotIn) {
    this.logStartedAtNotIn = JsonNullable.<List<String>>of(logStartedAtNotIn);
    return this;
  }

  public LogCollectionWhereInput addLogStartedAtNotInItem(String logStartedAtNotInItem) {
    if (this.logStartedAtNotIn == null || !this.logStartedAtNotIn.isPresent()) {
      this.logStartedAtNotIn = JsonNullable.<List<String>>of(new ArrayList<>());
    }
    try {
      this.logStartedAtNotIn.get().add(logStartedAtNotInItem);
    } catch (java.util.NoSuchElementException e) {
      // this can never happen, as we make sure above that the value is present
    }
    return this;
  }

   /**
   * Get logStartedAtNotIn
   * @return logStartedAtNotIn
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public List<String> getLogStartedAtNotIn() {
        return logStartedAtNotIn.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_LOG_STARTED_AT_NOT_IN)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<List<String>> getLogStartedAtNotIn_JsonNullable() {
    return logStartedAtNotIn;
  }
  
  @JsonProperty(JSON_PROPERTY_LOG_STARTED_AT_NOT_IN)
  public void setLogStartedAtNotIn_JsonNullable(JsonNullable<List<String>> logStartedAtNotIn) {
    this.logStartedAtNotIn = logStartedAtNotIn;
  }

  public void setLogStartedAtNotIn(List<String> logStartedAtNotIn) {
    this.logStartedAtNotIn = JsonNullable.<List<String>>of(logStartedAtNotIn);
  }


  public LogCollectionWhereInput NOT(List<LogCollectionWhereInput> NOT) {
    this.NOT = JsonNullable.<List<LogCollectionWhereInput>>of(NOT);
    return this;
  }

  public LogCollectionWhereInput addNOTItem(LogCollectionWhereInput NOTItem) {
    if (this.NOT == null || !this.NOT.isPresent()) {
      this.NOT = JsonNullable.<List<LogCollectionWhereInput>>of(new ArrayList<>());
    }
    try {
      this.NOT.get().add(NOTItem);
    } catch (java.util.NoSuchElementException e) {
      // this can never happen, as we make sure above that the value is present
    }
    return this;
  }

   /**
   * Get NOT
   * @return NOT
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public List<LogCollectionWhereInput> getNOT() {
        return NOT.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_N_O_T)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<List<LogCollectionWhereInput>> getNOT_JsonNullable() {
    return NOT;
  }
  
  @JsonProperty(JSON_PROPERTY_N_O_T)
  public void setNOT_JsonNullable(JsonNullable<List<LogCollectionWhereInput>> NOT) {
    this.NOT = NOT;
  }

  public void setNOT(List<LogCollectionWhereInput> NOT) {
    this.NOT = JsonNullable.<List<LogCollectionWhereInput>>of(NOT);
  }


  public LogCollectionWhereInput OR(List<LogCollectionWhereInput> OR) {
    this.OR = JsonNullable.<List<LogCollectionWhereInput>>of(OR);
    return this;
  }

  public LogCollectionWhereInput addORItem(LogCollectionWhereInput ORItem) {
    if (this.OR == null || !this.OR.isPresent()) {
      this.OR = JsonNullable.<List<LogCollectionWhereInput>>of(new ArrayList<>());
    }
    try {
      this.OR.get().add(ORItem);
    } catch (java.util.NoSuchElementException e) {
      // this can never happen, as we make sure above that the value is present
    }
    return this;
  }

   /**
   * Get OR
   * @return OR
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public List<LogCollectionWhereInput> getOR() {
        return OR.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_O_R)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<List<LogCollectionWhereInput>> getOR_JsonNullable() {
    return OR;
  }
  
  @JsonProperty(JSON_PROPERTY_O_R)
  public void setOR_JsonNullable(JsonNullable<List<LogCollectionWhereInput>> OR) {
    this.OR = OR;
  }

  public void setOR(List<LogCollectionWhereInput> OR) {
    this.OR = JsonNullable.<List<LogCollectionWhereInput>>of(OR);
  }


  public LogCollectionWhereInput owner(String owner) {
    this.owner = JsonNullable.<String>of(owner);
    return this;
  }

   /**
   * Get owner
   * @return owner
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getOwner() {
        return owner.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_OWNER)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getOwner_JsonNullable() {
    return owner;
  }
  
  @JsonProperty(JSON_PROPERTY_OWNER)
  public void setOwner_JsonNullable(JsonNullable<String> owner) {
    this.owner = owner;
  }

  public void setOwner(String owner) {
    this.owner = JsonNullable.<String>of(owner);
  }


  public LogCollectionWhereInput ownerContains(String ownerContains) {
    this.ownerContains = JsonNullable.<String>of(ownerContains);
    return this;
  }

   /**
   * Get ownerContains
   * @return ownerContains
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getOwnerContains() {
        return ownerContains.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_OWNER_CONTAINS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getOwnerContains_JsonNullable() {
    return ownerContains;
  }
  
  @JsonProperty(JSON_PROPERTY_OWNER_CONTAINS)
  public void setOwnerContains_JsonNullable(JsonNullable<String> ownerContains) {
    this.ownerContains = ownerContains;
  }

  public void setOwnerContains(String ownerContains) {
    this.ownerContains = JsonNullable.<String>of(ownerContains);
  }


  public LogCollectionWhereInput ownerEndsWith(String ownerEndsWith) {
    this.ownerEndsWith = JsonNullable.<String>of(ownerEndsWith);
    return this;
  }

   /**
   * Get ownerEndsWith
   * @return ownerEndsWith
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getOwnerEndsWith() {
        return ownerEndsWith.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_OWNER_ENDS_WITH)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getOwnerEndsWith_JsonNullable() {
    return ownerEndsWith;
  }
  
  @JsonProperty(JSON_PROPERTY_OWNER_ENDS_WITH)
  public void setOwnerEndsWith_JsonNullable(JsonNullable<String> ownerEndsWith) {
    this.ownerEndsWith = ownerEndsWith;
  }

  public void setOwnerEndsWith(String ownerEndsWith) {
    this.ownerEndsWith = JsonNullable.<String>of(ownerEndsWith);
  }


  public LogCollectionWhereInput ownerGt(String ownerGt) {
    this.ownerGt = JsonNullable.<String>of(ownerGt);
    return this;
  }

   /**
   * Get ownerGt
   * @return ownerGt
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getOwnerGt() {
        return ownerGt.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_OWNER_GT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getOwnerGt_JsonNullable() {
    return ownerGt;
  }
  
  @JsonProperty(JSON_PROPERTY_OWNER_GT)
  public void setOwnerGt_JsonNullable(JsonNullable<String> ownerGt) {
    this.ownerGt = ownerGt;
  }

  public void setOwnerGt(String ownerGt) {
    this.ownerGt = JsonNullable.<String>of(ownerGt);
  }


  public LogCollectionWhereInput ownerGte(String ownerGte) {
    this.ownerGte = JsonNullable.<String>of(ownerGte);
    return this;
  }

   /**
   * Get ownerGte
   * @return ownerGte
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getOwnerGte() {
        return ownerGte.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_OWNER_GTE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getOwnerGte_JsonNullable() {
    return ownerGte;
  }
  
  @JsonProperty(JSON_PROPERTY_OWNER_GTE)
  public void setOwnerGte_JsonNullable(JsonNullable<String> ownerGte) {
    this.ownerGte = ownerGte;
  }

  public void setOwnerGte(String ownerGte) {
    this.ownerGte = JsonNullable.<String>of(ownerGte);
  }


  public LogCollectionWhereInput ownerIn(List<String> ownerIn) {
    this.ownerIn = JsonNullable.<List<String>>of(ownerIn);
    return this;
  }

  public LogCollectionWhereInput addOwnerInItem(String ownerInItem) {
    if (this.ownerIn == null || !this.ownerIn.isPresent()) {
      this.ownerIn = JsonNullable.<List<String>>of(new ArrayList<>());
    }
    try {
      this.ownerIn.get().add(ownerInItem);
    } catch (java.util.NoSuchElementException e) {
      // this can never happen, as we make sure above that the value is present
    }
    return this;
  }

   /**
   * Get ownerIn
   * @return ownerIn
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public List<String> getOwnerIn() {
        return ownerIn.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_OWNER_IN)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<List<String>> getOwnerIn_JsonNullable() {
    return ownerIn;
  }
  
  @JsonProperty(JSON_PROPERTY_OWNER_IN)
  public void setOwnerIn_JsonNullable(JsonNullable<List<String>> ownerIn) {
    this.ownerIn = ownerIn;
  }

  public void setOwnerIn(List<String> ownerIn) {
    this.ownerIn = JsonNullable.<List<String>>of(ownerIn);
  }


  public LogCollectionWhereInput ownerLt(String ownerLt) {
    this.ownerLt = JsonNullable.<String>of(ownerLt);
    return this;
  }

   /**
   * Get ownerLt
   * @return ownerLt
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getOwnerLt() {
        return ownerLt.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_OWNER_LT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getOwnerLt_JsonNullable() {
    return ownerLt;
  }
  
  @JsonProperty(JSON_PROPERTY_OWNER_LT)
  public void setOwnerLt_JsonNullable(JsonNullable<String> ownerLt) {
    this.ownerLt = ownerLt;
  }

  public void setOwnerLt(String ownerLt) {
    this.ownerLt = JsonNullable.<String>of(ownerLt);
  }


  public LogCollectionWhereInput ownerLte(String ownerLte) {
    this.ownerLte = JsonNullable.<String>of(ownerLte);
    return this;
  }

   /**
   * Get ownerLte
   * @return ownerLte
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getOwnerLte() {
        return ownerLte.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_OWNER_LTE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getOwnerLte_JsonNullable() {
    return ownerLte;
  }
  
  @JsonProperty(JSON_PROPERTY_OWNER_LTE)
  public void setOwnerLte_JsonNullable(JsonNullable<String> ownerLte) {
    this.ownerLte = ownerLte;
  }

  public void setOwnerLte(String ownerLte) {
    this.ownerLte = JsonNullable.<String>of(ownerLte);
  }


  public LogCollectionWhereInput ownerNot(String ownerNot) {
    this.ownerNot = JsonNullable.<String>of(ownerNot);
    return this;
  }

   /**
   * Get ownerNot
   * @return ownerNot
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getOwnerNot() {
        return ownerNot.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_OWNER_NOT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getOwnerNot_JsonNullable() {
    return ownerNot;
  }
  
  @JsonProperty(JSON_PROPERTY_OWNER_NOT)
  public void setOwnerNot_JsonNullable(JsonNullable<String> ownerNot) {
    this.ownerNot = ownerNot;
  }

  public void setOwnerNot(String ownerNot) {
    this.ownerNot = JsonNullable.<String>of(ownerNot);
  }


  public LogCollectionWhereInput ownerNotContains(String ownerNotContains) {
    this.ownerNotContains = JsonNullable.<String>of(ownerNotContains);
    return this;
  }

   /**
   * Get ownerNotContains
   * @return ownerNotContains
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getOwnerNotContains() {
        return ownerNotContains.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_OWNER_NOT_CONTAINS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getOwnerNotContains_JsonNullable() {
    return ownerNotContains;
  }
  
  @JsonProperty(JSON_PROPERTY_OWNER_NOT_CONTAINS)
  public void setOwnerNotContains_JsonNullable(JsonNullable<String> ownerNotContains) {
    this.ownerNotContains = ownerNotContains;
  }

  public void setOwnerNotContains(String ownerNotContains) {
    this.ownerNotContains = JsonNullable.<String>of(ownerNotContains);
  }


  public LogCollectionWhereInput ownerNotEndsWith(String ownerNotEndsWith) {
    this.ownerNotEndsWith = JsonNullable.<String>of(ownerNotEndsWith);
    return this;
  }

   /**
   * Get ownerNotEndsWith
   * @return ownerNotEndsWith
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getOwnerNotEndsWith() {
        return ownerNotEndsWith.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_OWNER_NOT_ENDS_WITH)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getOwnerNotEndsWith_JsonNullable() {
    return ownerNotEndsWith;
  }
  
  @JsonProperty(JSON_PROPERTY_OWNER_NOT_ENDS_WITH)
  public void setOwnerNotEndsWith_JsonNullable(JsonNullable<String> ownerNotEndsWith) {
    this.ownerNotEndsWith = ownerNotEndsWith;
  }

  public void setOwnerNotEndsWith(String ownerNotEndsWith) {
    this.ownerNotEndsWith = JsonNullable.<String>of(ownerNotEndsWith);
  }


  public LogCollectionWhereInput ownerNotIn(List<String> ownerNotIn) {
    this.ownerNotIn = JsonNullable.<List<String>>of(ownerNotIn);
    return this;
  }

  public LogCollectionWhereInput addOwnerNotInItem(String ownerNotInItem) {
    if (this.ownerNotIn == null || !this.ownerNotIn.isPresent()) {
      this.ownerNotIn = JsonNullable.<List<String>>of(new ArrayList<>());
    }
    try {
      this.ownerNotIn.get().add(ownerNotInItem);
    } catch (java.util.NoSuchElementException e) {
      // this can never happen, as we make sure above that the value is present
    }
    return this;
  }

   /**
   * Get ownerNotIn
   * @return ownerNotIn
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public List<String> getOwnerNotIn() {
        return ownerNotIn.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_OWNER_NOT_IN)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<List<String>> getOwnerNotIn_JsonNullable() {
    return ownerNotIn;
  }
  
  @JsonProperty(JSON_PROPERTY_OWNER_NOT_IN)
  public void setOwnerNotIn_JsonNullable(JsonNullable<List<String>> ownerNotIn) {
    this.ownerNotIn = ownerNotIn;
  }

  public void setOwnerNotIn(List<String> ownerNotIn) {
    this.ownerNotIn = JsonNullable.<List<String>>of(ownerNotIn);
  }


  public LogCollectionWhereInput ownerNotStartsWith(String ownerNotStartsWith) {
    this.ownerNotStartsWith = JsonNullable.<String>of(ownerNotStartsWith);
    return this;
  }

   /**
   * Get ownerNotStartsWith
   * @return ownerNotStartsWith
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getOwnerNotStartsWith() {
        return ownerNotStartsWith.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_OWNER_NOT_STARTS_WITH)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getOwnerNotStartsWith_JsonNullable() {
    return ownerNotStartsWith;
  }
  
  @JsonProperty(JSON_PROPERTY_OWNER_NOT_STARTS_WITH)
  public void setOwnerNotStartsWith_JsonNullable(JsonNullable<String> ownerNotStartsWith) {
    this.ownerNotStartsWith = ownerNotStartsWith;
  }

  public void setOwnerNotStartsWith(String ownerNotStartsWith) {
    this.ownerNotStartsWith = JsonNullable.<String>of(ownerNotStartsWith);
  }


  public LogCollectionWhereInput ownerStartsWith(String ownerStartsWith) {
    this.ownerStartsWith = JsonNullable.<String>of(ownerStartsWith);
    return this;
  }

   /**
   * Get ownerStartsWith
   * @return ownerStartsWith
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getOwnerStartsWith() {
        return ownerStartsWith.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_OWNER_STARTS_WITH)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getOwnerStartsWith_JsonNullable() {
    return ownerStartsWith;
  }
  
  @JsonProperty(JSON_PROPERTY_OWNER_STARTS_WITH)
  public void setOwnerStartsWith_JsonNullable(JsonNullable<String> ownerStartsWith) {
    this.ownerStartsWith = ownerStartsWith;
  }

  public void setOwnerStartsWith(String ownerStartsWith) {
    this.ownerStartsWith = JsonNullable.<String>of(ownerStartsWith);
  }


  public LogCollectionWhereInput path(String path) {
    this.path = JsonNullable.<String>of(path);
    return this;
  }

   /**
   * Get path
   * @return path
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getPath() {
        return path.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_PATH)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getPath_JsonNullable() {
    return path;
  }
  
  @JsonProperty(JSON_PROPERTY_PATH)
  public void setPath_JsonNullable(JsonNullable<String> path) {
    this.path = path;
  }

  public void setPath(String path) {
    this.path = JsonNullable.<String>of(path);
  }


  public LogCollectionWhereInput pathContains(String pathContains) {
    this.pathContains = JsonNullable.<String>of(pathContains);
    return this;
  }

   /**
   * Get pathContains
   * @return pathContains
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getPathContains() {
        return pathContains.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_PATH_CONTAINS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getPathContains_JsonNullable() {
    return pathContains;
  }
  
  @JsonProperty(JSON_PROPERTY_PATH_CONTAINS)
  public void setPathContains_JsonNullable(JsonNullable<String> pathContains) {
    this.pathContains = pathContains;
  }

  public void setPathContains(String pathContains) {
    this.pathContains = JsonNullable.<String>of(pathContains);
  }


  public LogCollectionWhereInput pathEndsWith(String pathEndsWith) {
    this.pathEndsWith = JsonNullable.<String>of(pathEndsWith);
    return this;
  }

   /**
   * Get pathEndsWith
   * @return pathEndsWith
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getPathEndsWith() {
        return pathEndsWith.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_PATH_ENDS_WITH)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getPathEndsWith_JsonNullable() {
    return pathEndsWith;
  }
  
  @JsonProperty(JSON_PROPERTY_PATH_ENDS_WITH)
  public void setPathEndsWith_JsonNullable(JsonNullable<String> pathEndsWith) {
    this.pathEndsWith = pathEndsWith;
  }

  public void setPathEndsWith(String pathEndsWith) {
    this.pathEndsWith = JsonNullable.<String>of(pathEndsWith);
  }


  public LogCollectionWhereInput pathGt(String pathGt) {
    this.pathGt = JsonNullable.<String>of(pathGt);
    return this;
  }

   /**
   * Get pathGt
   * @return pathGt
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getPathGt() {
        return pathGt.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_PATH_GT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getPathGt_JsonNullable() {
    return pathGt;
  }
  
  @JsonProperty(JSON_PROPERTY_PATH_GT)
  public void setPathGt_JsonNullable(JsonNullable<String> pathGt) {
    this.pathGt = pathGt;
  }

  public void setPathGt(String pathGt) {
    this.pathGt = JsonNullable.<String>of(pathGt);
  }


  public LogCollectionWhereInput pathGte(String pathGte) {
    this.pathGte = JsonNullable.<String>of(pathGte);
    return this;
  }

   /**
   * Get pathGte
   * @return pathGte
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getPathGte() {
        return pathGte.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_PATH_GTE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getPathGte_JsonNullable() {
    return pathGte;
  }
  
  @JsonProperty(JSON_PROPERTY_PATH_GTE)
  public void setPathGte_JsonNullable(JsonNullable<String> pathGte) {
    this.pathGte = pathGte;
  }

  public void setPathGte(String pathGte) {
    this.pathGte = JsonNullable.<String>of(pathGte);
  }


  public LogCollectionWhereInput pathIn(List<String> pathIn) {
    this.pathIn = JsonNullable.<List<String>>of(pathIn);
    return this;
  }

  public LogCollectionWhereInput addPathInItem(String pathInItem) {
    if (this.pathIn == null || !this.pathIn.isPresent()) {
      this.pathIn = JsonNullable.<List<String>>of(new ArrayList<>());
    }
    try {
      this.pathIn.get().add(pathInItem);
    } catch (java.util.NoSuchElementException e) {
      // this can never happen, as we make sure above that the value is present
    }
    return this;
  }

   /**
   * Get pathIn
   * @return pathIn
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public List<String> getPathIn() {
        return pathIn.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_PATH_IN)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<List<String>> getPathIn_JsonNullable() {
    return pathIn;
  }
  
  @JsonProperty(JSON_PROPERTY_PATH_IN)
  public void setPathIn_JsonNullable(JsonNullable<List<String>> pathIn) {
    this.pathIn = pathIn;
  }

  public void setPathIn(List<String> pathIn) {
    this.pathIn = JsonNullable.<List<String>>of(pathIn);
  }


  public LogCollectionWhereInput pathLt(String pathLt) {
    this.pathLt = JsonNullable.<String>of(pathLt);
    return this;
  }

   /**
   * Get pathLt
   * @return pathLt
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getPathLt() {
        return pathLt.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_PATH_LT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getPathLt_JsonNullable() {
    return pathLt;
  }
  
  @JsonProperty(JSON_PROPERTY_PATH_LT)
  public void setPathLt_JsonNullable(JsonNullable<String> pathLt) {
    this.pathLt = pathLt;
  }

  public void setPathLt(String pathLt) {
    this.pathLt = JsonNullable.<String>of(pathLt);
  }


  public LogCollectionWhereInput pathLte(String pathLte) {
    this.pathLte = JsonNullable.<String>of(pathLte);
    return this;
  }

   /**
   * Get pathLte
   * @return pathLte
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getPathLte() {
        return pathLte.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_PATH_LTE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getPathLte_JsonNullable() {
    return pathLte;
  }
  
  @JsonProperty(JSON_PROPERTY_PATH_LTE)
  public void setPathLte_JsonNullable(JsonNullable<String> pathLte) {
    this.pathLte = pathLte;
  }

  public void setPathLte(String pathLte) {
    this.pathLte = JsonNullable.<String>of(pathLte);
  }


  public LogCollectionWhereInput pathNot(String pathNot) {
    this.pathNot = JsonNullable.<String>of(pathNot);
    return this;
  }

   /**
   * Get pathNot
   * @return pathNot
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getPathNot() {
        return pathNot.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_PATH_NOT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getPathNot_JsonNullable() {
    return pathNot;
  }
  
  @JsonProperty(JSON_PROPERTY_PATH_NOT)
  public void setPathNot_JsonNullable(JsonNullable<String> pathNot) {
    this.pathNot = pathNot;
  }

  public void setPathNot(String pathNot) {
    this.pathNot = JsonNullable.<String>of(pathNot);
  }


  public LogCollectionWhereInput pathNotContains(String pathNotContains) {
    this.pathNotContains = JsonNullable.<String>of(pathNotContains);
    return this;
  }

   /**
   * Get pathNotContains
   * @return pathNotContains
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getPathNotContains() {
        return pathNotContains.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_PATH_NOT_CONTAINS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getPathNotContains_JsonNullable() {
    return pathNotContains;
  }
  
  @JsonProperty(JSON_PROPERTY_PATH_NOT_CONTAINS)
  public void setPathNotContains_JsonNullable(JsonNullable<String> pathNotContains) {
    this.pathNotContains = pathNotContains;
  }

  public void setPathNotContains(String pathNotContains) {
    this.pathNotContains = JsonNullable.<String>of(pathNotContains);
  }


  public LogCollectionWhereInput pathNotEndsWith(String pathNotEndsWith) {
    this.pathNotEndsWith = JsonNullable.<String>of(pathNotEndsWith);
    return this;
  }

   /**
   * Get pathNotEndsWith
   * @return pathNotEndsWith
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getPathNotEndsWith() {
        return pathNotEndsWith.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_PATH_NOT_ENDS_WITH)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getPathNotEndsWith_JsonNullable() {
    return pathNotEndsWith;
  }
  
  @JsonProperty(JSON_PROPERTY_PATH_NOT_ENDS_WITH)
  public void setPathNotEndsWith_JsonNullable(JsonNullable<String> pathNotEndsWith) {
    this.pathNotEndsWith = pathNotEndsWith;
  }

  public void setPathNotEndsWith(String pathNotEndsWith) {
    this.pathNotEndsWith = JsonNullable.<String>of(pathNotEndsWith);
  }


  public LogCollectionWhereInput pathNotIn(List<String> pathNotIn) {
    this.pathNotIn = JsonNullable.<List<String>>of(pathNotIn);
    return this;
  }

  public LogCollectionWhereInput addPathNotInItem(String pathNotInItem) {
    if (this.pathNotIn == null || !this.pathNotIn.isPresent()) {
      this.pathNotIn = JsonNullable.<List<String>>of(new ArrayList<>());
    }
    try {
      this.pathNotIn.get().add(pathNotInItem);
    } catch (java.util.NoSuchElementException e) {
      // this can never happen, as we make sure above that the value is present
    }
    return this;
  }

   /**
   * Get pathNotIn
   * @return pathNotIn
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public List<String> getPathNotIn() {
        return pathNotIn.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_PATH_NOT_IN)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<List<String>> getPathNotIn_JsonNullable() {
    return pathNotIn;
  }
  
  @JsonProperty(JSON_PROPERTY_PATH_NOT_IN)
  public void setPathNotIn_JsonNullable(JsonNullable<List<String>> pathNotIn) {
    this.pathNotIn = pathNotIn;
  }

  public void setPathNotIn(List<String> pathNotIn) {
    this.pathNotIn = JsonNullable.<List<String>>of(pathNotIn);
  }


  public LogCollectionWhereInput pathNotStartsWith(String pathNotStartsWith) {
    this.pathNotStartsWith = JsonNullable.<String>of(pathNotStartsWith);
    return this;
  }

   /**
   * Get pathNotStartsWith
   * @return pathNotStartsWith
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getPathNotStartsWith() {
        return pathNotStartsWith.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_PATH_NOT_STARTS_WITH)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getPathNotStartsWith_JsonNullable() {
    return pathNotStartsWith;
  }
  
  @JsonProperty(JSON_PROPERTY_PATH_NOT_STARTS_WITH)
  public void setPathNotStartsWith_JsonNullable(JsonNullable<String> pathNotStartsWith) {
    this.pathNotStartsWith = pathNotStartsWith;
  }

  public void setPathNotStartsWith(String pathNotStartsWith) {
    this.pathNotStartsWith = JsonNullable.<String>of(pathNotStartsWith);
  }


  public LogCollectionWhereInput pathStartsWith(String pathStartsWith) {
    this.pathStartsWith = JsonNullable.<String>of(pathStartsWith);
    return this;
  }

   /**
   * Get pathStartsWith
   * @return pathStartsWith
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getPathStartsWith() {
        return pathStartsWith.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_PATH_STARTS_WITH)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getPathStartsWith_JsonNullable() {
    return pathStartsWith;
  }
  
  @JsonProperty(JSON_PROPERTY_PATH_STARTS_WITH)
  public void setPathStartsWith_JsonNullable(JsonNullable<String> pathStartsWith) {
    this.pathStartsWith = pathStartsWith;
  }

  public void setPathStartsWith(String pathStartsWith) {
    this.pathStartsWith = JsonNullable.<String>of(pathStartsWith);
  }


  public LogCollectionWhereInput progress(Double progress) {
    this.progress = JsonNullable.<Double>of(progress);
    return this;
  }

   /**
   * Get progress
   * @return progress
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public Double getProgress() {
        return progress.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_PROGRESS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<Double> getProgress_JsonNullable() {
    return progress;
  }
  
  @JsonProperty(JSON_PROPERTY_PROGRESS)
  public void setProgress_JsonNullable(JsonNullable<Double> progress) {
    this.progress = progress;
  }

  public void setProgress(Double progress) {
    this.progress = JsonNullable.<Double>of(progress);
  }


  public LogCollectionWhereInput progressGt(Double progressGt) {
    this.progressGt = JsonNullable.<Double>of(progressGt);
    return this;
  }

   /**
   * Get progressGt
   * @return progressGt
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public Double getProgressGt() {
        return progressGt.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_PROGRESS_GT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<Double> getProgressGt_JsonNullable() {
    return progressGt;
  }
  
  @JsonProperty(JSON_PROPERTY_PROGRESS_GT)
  public void setProgressGt_JsonNullable(JsonNullable<Double> progressGt) {
    this.progressGt = progressGt;
  }

  public void setProgressGt(Double progressGt) {
    this.progressGt = JsonNullable.<Double>of(progressGt);
  }


  public LogCollectionWhereInput progressGte(Double progressGte) {
    this.progressGte = JsonNullable.<Double>of(progressGte);
    return this;
  }

   /**
   * Get progressGte
   * @return progressGte
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public Double getProgressGte() {
        return progressGte.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_PROGRESS_GTE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<Double> getProgressGte_JsonNullable() {
    return progressGte;
  }
  
  @JsonProperty(JSON_PROPERTY_PROGRESS_GTE)
  public void setProgressGte_JsonNullable(JsonNullable<Double> progressGte) {
    this.progressGte = progressGte;
  }

  public void setProgressGte(Double progressGte) {
    this.progressGte = JsonNullable.<Double>of(progressGte);
  }


  public LogCollectionWhereInput progressIn(List<Double> progressIn) {
    this.progressIn = JsonNullable.<List<Double>>of(progressIn);
    return this;
  }

  public LogCollectionWhereInput addProgressInItem(Double progressInItem) {
    if (this.progressIn == null || !this.progressIn.isPresent()) {
      this.progressIn = JsonNullable.<List<Double>>of(new ArrayList<>());
    }
    try {
      this.progressIn.get().add(progressInItem);
    } catch (java.util.NoSuchElementException e) {
      // this can never happen, as we make sure above that the value is present
    }
    return this;
  }

   /**
   * Get progressIn
   * @return progressIn
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public List<Double> getProgressIn() {
        return progressIn.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_PROGRESS_IN)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<List<Double>> getProgressIn_JsonNullable() {
    return progressIn;
  }
  
  @JsonProperty(JSON_PROPERTY_PROGRESS_IN)
  public void setProgressIn_JsonNullable(JsonNullable<List<Double>> progressIn) {
    this.progressIn = progressIn;
  }

  public void setProgressIn(List<Double> progressIn) {
    this.progressIn = JsonNullable.<List<Double>>of(progressIn);
  }


  public LogCollectionWhereInput progressLt(Double progressLt) {
    this.progressLt = JsonNullable.<Double>of(progressLt);
    return this;
  }

   /**
   * Get progressLt
   * @return progressLt
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public Double getProgressLt() {
        return progressLt.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_PROGRESS_LT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<Double> getProgressLt_JsonNullable() {
    return progressLt;
  }
  
  @JsonProperty(JSON_PROPERTY_PROGRESS_LT)
  public void setProgressLt_JsonNullable(JsonNullable<Double> progressLt) {
    this.progressLt = progressLt;
  }

  public void setProgressLt(Double progressLt) {
    this.progressLt = JsonNullable.<Double>of(progressLt);
  }


  public LogCollectionWhereInput progressLte(Double progressLte) {
    this.progressLte = JsonNullable.<Double>of(progressLte);
    return this;
  }

   /**
   * Get progressLte
   * @return progressLte
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public Double getProgressLte() {
        return progressLte.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_PROGRESS_LTE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<Double> getProgressLte_JsonNullable() {
    return progressLte;
  }
  
  @JsonProperty(JSON_PROPERTY_PROGRESS_LTE)
  public void setProgressLte_JsonNullable(JsonNullable<Double> progressLte) {
    this.progressLte = progressLte;
  }

  public void setProgressLte(Double progressLte) {
    this.progressLte = JsonNullable.<Double>of(progressLte);
  }


  public LogCollectionWhereInput progressNot(Double progressNot) {
    this.progressNot = JsonNullable.<Double>of(progressNot);
    return this;
  }

   /**
   * Get progressNot
   * @return progressNot
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public Double getProgressNot() {
        return progressNot.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_PROGRESS_NOT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<Double> getProgressNot_JsonNullable() {
    return progressNot;
  }
  
  @JsonProperty(JSON_PROPERTY_PROGRESS_NOT)
  public void setProgressNot_JsonNullable(JsonNullable<Double> progressNot) {
    this.progressNot = progressNot;
  }

  public void setProgressNot(Double progressNot) {
    this.progressNot = JsonNullable.<Double>of(progressNot);
  }


  public LogCollectionWhereInput progressNotIn(List<Double> progressNotIn) {
    this.progressNotIn = JsonNullable.<List<Double>>of(progressNotIn);
    return this;
  }

  public LogCollectionWhereInput addProgressNotInItem(Double progressNotInItem) {
    if (this.progressNotIn == null || !this.progressNotIn.isPresent()) {
      this.progressNotIn = JsonNullable.<List<Double>>of(new ArrayList<>());
    }
    try {
      this.progressNotIn.get().add(progressNotInItem);
    } catch (java.util.NoSuchElementException e) {
      // this can never happen, as we make sure above that the value is present
    }
    return this;
  }

   /**
   * Get progressNotIn
   * @return progressNotIn
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public List<Double> getProgressNotIn() {
        return progressNotIn.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_PROGRESS_NOT_IN)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<List<Double>> getProgressNotIn_JsonNullable() {
    return progressNotIn;
  }
  
  @JsonProperty(JSON_PROPERTY_PROGRESS_NOT_IN)
  public void setProgressNotIn_JsonNullable(JsonNullable<List<Double>> progressNotIn) {
    this.progressNotIn = progressNotIn;
  }

  public void setProgressNotIn(List<Double> progressNotIn) {
    this.progressNotIn = JsonNullable.<List<Double>>of(progressNotIn);
  }


  public LogCollectionWhereInput size(Double size) {
    this.size = JsonNullable.<Double>of(size);
    return this;
  }

   /**
   * Get size
   * @return size
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public Double getSize() {
        return size.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_SIZE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<Double> getSize_JsonNullable() {
    return size;
  }
  
  @JsonProperty(JSON_PROPERTY_SIZE)
  public void setSize_JsonNullable(JsonNullable<Double> size) {
    this.size = size;
  }

  public void setSize(Double size) {
    this.size = JsonNullable.<Double>of(size);
  }


  public LogCollectionWhereInput sizeGt(Double sizeGt) {
    this.sizeGt = JsonNullable.<Double>of(sizeGt);
    return this;
  }

   /**
   * Get sizeGt
   * @return sizeGt
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public Double getSizeGt() {
        return sizeGt.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_SIZE_GT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<Double> getSizeGt_JsonNullable() {
    return sizeGt;
  }
  
  @JsonProperty(JSON_PROPERTY_SIZE_GT)
  public void setSizeGt_JsonNullable(JsonNullable<Double> sizeGt) {
    this.sizeGt = sizeGt;
  }

  public void setSizeGt(Double sizeGt) {
    this.sizeGt = JsonNullable.<Double>of(sizeGt);
  }


  public LogCollectionWhereInput sizeGte(Double sizeGte) {
    this.sizeGte = JsonNullable.<Double>of(sizeGte);
    return this;
  }

   /**
   * Get sizeGte
   * @return sizeGte
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public Double getSizeGte() {
        return sizeGte.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_SIZE_GTE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<Double> getSizeGte_JsonNullable() {
    return sizeGte;
  }
  
  @JsonProperty(JSON_PROPERTY_SIZE_GTE)
  public void setSizeGte_JsonNullable(JsonNullable<Double> sizeGte) {
    this.sizeGte = sizeGte;
  }

  public void setSizeGte(Double sizeGte) {
    this.sizeGte = JsonNullable.<Double>of(sizeGte);
  }


  public LogCollectionWhereInput sizeIn(List<Double> sizeIn) {
    this.sizeIn = JsonNullable.<List<Double>>of(sizeIn);
    return this;
  }

  public LogCollectionWhereInput addSizeInItem(Double sizeInItem) {
    if (this.sizeIn == null || !this.sizeIn.isPresent()) {
      this.sizeIn = JsonNullable.<List<Double>>of(new ArrayList<>());
    }
    try {
      this.sizeIn.get().add(sizeInItem);
    } catch (java.util.NoSuchElementException e) {
      // this can never happen, as we make sure above that the value is present
    }
    return this;
  }

   /**
   * Get sizeIn
   * @return sizeIn
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public List<Double> getSizeIn() {
        return sizeIn.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_SIZE_IN)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<List<Double>> getSizeIn_JsonNullable() {
    return sizeIn;
  }
  
  @JsonProperty(JSON_PROPERTY_SIZE_IN)
  public void setSizeIn_JsonNullable(JsonNullable<List<Double>> sizeIn) {
    this.sizeIn = sizeIn;
  }

  public void setSizeIn(List<Double> sizeIn) {
    this.sizeIn = JsonNullable.<List<Double>>of(sizeIn);
  }


  public LogCollectionWhereInput sizeLt(Double sizeLt) {
    this.sizeLt = JsonNullable.<Double>of(sizeLt);
    return this;
  }

   /**
   * Get sizeLt
   * @return sizeLt
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public Double getSizeLt() {
        return sizeLt.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_SIZE_LT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<Double> getSizeLt_JsonNullable() {
    return sizeLt;
  }
  
  @JsonProperty(JSON_PROPERTY_SIZE_LT)
  public void setSizeLt_JsonNullable(JsonNullable<Double> sizeLt) {
    this.sizeLt = sizeLt;
  }

  public void setSizeLt(Double sizeLt) {
    this.sizeLt = JsonNullable.<Double>of(sizeLt);
  }


  public LogCollectionWhereInput sizeLte(Double sizeLte) {
    this.sizeLte = JsonNullable.<Double>of(sizeLte);
    return this;
  }

   /**
   * Get sizeLte
   * @return sizeLte
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public Double getSizeLte() {
        return sizeLte.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_SIZE_LTE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<Double> getSizeLte_JsonNullable() {
    return sizeLte;
  }
  
  @JsonProperty(JSON_PROPERTY_SIZE_LTE)
  public void setSizeLte_JsonNullable(JsonNullable<Double> sizeLte) {
    this.sizeLte = sizeLte;
  }

  public void setSizeLte(Double sizeLte) {
    this.sizeLte = JsonNullable.<Double>of(sizeLte);
  }


  public LogCollectionWhereInput sizeNot(Double sizeNot) {
    this.sizeNot = JsonNullable.<Double>of(sizeNot);
    return this;
  }

   /**
   * Get sizeNot
   * @return sizeNot
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public Double getSizeNot() {
        return sizeNot.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_SIZE_NOT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<Double> getSizeNot_JsonNullable() {
    return sizeNot;
  }
  
  @JsonProperty(JSON_PROPERTY_SIZE_NOT)
  public void setSizeNot_JsonNullable(JsonNullable<Double> sizeNot) {
    this.sizeNot = sizeNot;
  }

  public void setSizeNot(Double sizeNot) {
    this.sizeNot = JsonNullable.<Double>of(sizeNot);
  }


  public LogCollectionWhereInput sizeNotIn(List<Double> sizeNotIn) {
    this.sizeNotIn = JsonNullable.<List<Double>>of(sizeNotIn);
    return this;
  }

  public LogCollectionWhereInput addSizeNotInItem(Double sizeNotInItem) {
    if (this.sizeNotIn == null || !this.sizeNotIn.isPresent()) {
      this.sizeNotIn = JsonNullable.<List<Double>>of(new ArrayList<>());
    }
    try {
      this.sizeNotIn.get().add(sizeNotInItem);
    } catch (java.util.NoSuchElementException e) {
      // this can never happen, as we make sure above that the value is present
    }
    return this;
  }

   /**
   * Get sizeNotIn
   * @return sizeNotIn
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public List<Double> getSizeNotIn() {
        return sizeNotIn.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_SIZE_NOT_IN)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<List<Double>> getSizeNotIn_JsonNullable() {
    return sizeNotIn;
  }
  
  @JsonProperty(JSON_PROPERTY_SIZE_NOT_IN)
  public void setSizeNotIn_JsonNullable(JsonNullable<List<Double>> sizeNotIn) {
    this.sizeNotIn = sizeNotIn;
  }

  public void setSizeNotIn(List<Double> sizeNotIn) {
    this.sizeNotIn = JsonNullable.<List<Double>>of(sizeNotIn);
  }


  public LogCollectionWhereInput startedAt(String startedAt) {
    this.startedAt = JsonNullable.<String>of(startedAt);
    return this;
  }

   /**
   * Get startedAt
   * @return startedAt
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getStartedAt() {
        return startedAt.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_STARTED_AT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getStartedAt_JsonNullable() {
    return startedAt;
  }
  
  @JsonProperty(JSON_PROPERTY_STARTED_AT)
  public void setStartedAt_JsonNullable(JsonNullable<String> startedAt) {
    this.startedAt = startedAt;
  }

  public void setStartedAt(String startedAt) {
    this.startedAt = JsonNullable.<String>of(startedAt);
  }


  public LogCollectionWhereInput startedAtGt(String startedAtGt) {
    this.startedAtGt = JsonNullable.<String>of(startedAtGt);
    return this;
  }

   /**
   * Get startedAtGt
   * @return startedAtGt
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getStartedAtGt() {
        return startedAtGt.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_STARTED_AT_GT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getStartedAtGt_JsonNullable() {
    return startedAtGt;
  }
  
  @JsonProperty(JSON_PROPERTY_STARTED_AT_GT)
  public void setStartedAtGt_JsonNullable(JsonNullable<String> startedAtGt) {
    this.startedAtGt = startedAtGt;
  }

  public void setStartedAtGt(String startedAtGt) {
    this.startedAtGt = JsonNullable.<String>of(startedAtGt);
  }


  public LogCollectionWhereInput startedAtGte(String startedAtGte) {
    this.startedAtGte = JsonNullable.<String>of(startedAtGte);
    return this;
  }

   /**
   * Get startedAtGte
   * @return startedAtGte
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getStartedAtGte() {
        return startedAtGte.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_STARTED_AT_GTE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getStartedAtGte_JsonNullable() {
    return startedAtGte;
  }
  
  @JsonProperty(JSON_PROPERTY_STARTED_AT_GTE)
  public void setStartedAtGte_JsonNullable(JsonNullable<String> startedAtGte) {
    this.startedAtGte = startedAtGte;
  }

  public void setStartedAtGte(String startedAtGte) {
    this.startedAtGte = JsonNullable.<String>of(startedAtGte);
  }


  public LogCollectionWhereInput startedAtIn(List<String> startedAtIn) {
    this.startedAtIn = JsonNullable.<List<String>>of(startedAtIn);
    return this;
  }

  public LogCollectionWhereInput addStartedAtInItem(String startedAtInItem) {
    if (this.startedAtIn == null || !this.startedAtIn.isPresent()) {
      this.startedAtIn = JsonNullable.<List<String>>of(new ArrayList<>());
    }
    try {
      this.startedAtIn.get().add(startedAtInItem);
    } catch (java.util.NoSuchElementException e) {
      // this can never happen, as we make sure above that the value is present
    }
    return this;
  }

   /**
   * Get startedAtIn
   * @return startedAtIn
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public List<String> getStartedAtIn() {
        return startedAtIn.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_STARTED_AT_IN)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<List<String>> getStartedAtIn_JsonNullable() {
    return startedAtIn;
  }
  
  @JsonProperty(JSON_PROPERTY_STARTED_AT_IN)
  public void setStartedAtIn_JsonNullable(JsonNullable<List<String>> startedAtIn) {
    this.startedAtIn = startedAtIn;
  }

  public void setStartedAtIn(List<String> startedAtIn) {
    this.startedAtIn = JsonNullable.<List<String>>of(startedAtIn);
  }


  public LogCollectionWhereInput startedAtLt(String startedAtLt) {
    this.startedAtLt = JsonNullable.<String>of(startedAtLt);
    return this;
  }

   /**
   * Get startedAtLt
   * @return startedAtLt
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getStartedAtLt() {
        return startedAtLt.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_STARTED_AT_LT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getStartedAtLt_JsonNullable() {
    return startedAtLt;
  }
  
  @JsonProperty(JSON_PROPERTY_STARTED_AT_LT)
  public void setStartedAtLt_JsonNullable(JsonNullable<String> startedAtLt) {
    this.startedAtLt = startedAtLt;
  }

  public void setStartedAtLt(String startedAtLt) {
    this.startedAtLt = JsonNullable.<String>of(startedAtLt);
  }


  public LogCollectionWhereInput startedAtLte(String startedAtLte) {
    this.startedAtLte = JsonNullable.<String>of(startedAtLte);
    return this;
  }

   /**
   * Get startedAtLte
   * @return startedAtLte
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getStartedAtLte() {
        return startedAtLte.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_STARTED_AT_LTE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getStartedAtLte_JsonNullable() {
    return startedAtLte;
  }
  
  @JsonProperty(JSON_PROPERTY_STARTED_AT_LTE)
  public void setStartedAtLte_JsonNullable(JsonNullable<String> startedAtLte) {
    this.startedAtLte = startedAtLte;
  }

  public void setStartedAtLte(String startedAtLte) {
    this.startedAtLte = JsonNullable.<String>of(startedAtLte);
  }


  public LogCollectionWhereInput startedAtNot(String startedAtNot) {
    this.startedAtNot = JsonNullable.<String>of(startedAtNot);
    return this;
  }

   /**
   * Get startedAtNot
   * @return startedAtNot
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getStartedAtNot() {
        return startedAtNot.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_STARTED_AT_NOT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getStartedAtNot_JsonNullable() {
    return startedAtNot;
  }
  
  @JsonProperty(JSON_PROPERTY_STARTED_AT_NOT)
  public void setStartedAtNot_JsonNullable(JsonNullable<String> startedAtNot) {
    this.startedAtNot = startedAtNot;
  }

  public void setStartedAtNot(String startedAtNot) {
    this.startedAtNot = JsonNullable.<String>of(startedAtNot);
  }


  public LogCollectionWhereInput startedAtNotIn(List<String> startedAtNotIn) {
    this.startedAtNotIn = JsonNullable.<List<String>>of(startedAtNotIn);
    return this;
  }

  public LogCollectionWhereInput addStartedAtNotInItem(String startedAtNotInItem) {
    if (this.startedAtNotIn == null || !this.startedAtNotIn.isPresent()) {
      this.startedAtNotIn = JsonNullable.<List<String>>of(new ArrayList<>());
    }
    try {
      this.startedAtNotIn.get().add(startedAtNotInItem);
    } catch (java.util.NoSuchElementException e) {
      // this can never happen, as we make sure above that the value is present
    }
    return this;
  }

   /**
   * Get startedAtNotIn
   * @return startedAtNotIn
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public List<String> getStartedAtNotIn() {
        return startedAtNotIn.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_STARTED_AT_NOT_IN)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<List<String>> getStartedAtNotIn_JsonNullable() {
    return startedAtNotIn;
  }
  
  @JsonProperty(JSON_PROPERTY_STARTED_AT_NOT_IN)
  public void setStartedAtNotIn_JsonNullable(JsonNullable<List<String>> startedAtNotIn) {
    this.startedAtNotIn = startedAtNotIn;
  }

  public void setStartedAtNotIn(List<String> startedAtNotIn) {
    this.startedAtNotIn = JsonNullable.<List<String>>of(startedAtNotIn);
  }


  public LogCollectionWhereInput status(LogCollectionStatus status) {
    this.status = JsonNullable.<LogCollectionStatus>of(status);
    return this;
  }

   /**
   * Get status
   * @return status
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public LogCollectionStatus getStatus() {
        return status.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_STATUS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<LogCollectionStatus> getStatus_JsonNullable() {
    return status;
  }
  
  @JsonProperty(JSON_PROPERTY_STATUS)
  public void setStatus_JsonNullable(JsonNullable<LogCollectionStatus> status) {
    this.status = status;
  }

  public void setStatus(LogCollectionStatus status) {
    this.status = JsonNullable.<LogCollectionStatus>of(status);
  }


  public LogCollectionWhereInput statusIn(List<LogCollectionStatus> statusIn) {
    this.statusIn = JsonNullable.<List<LogCollectionStatus>>of(statusIn);
    return this;
  }

  public LogCollectionWhereInput addStatusInItem(LogCollectionStatus statusInItem) {
    if (this.statusIn == null || !this.statusIn.isPresent()) {
      this.statusIn = JsonNullable.<List<LogCollectionStatus>>of(new ArrayList<>());
    }
    try {
      this.statusIn.get().add(statusInItem);
    } catch (java.util.NoSuchElementException e) {
      // this can never happen, as we make sure above that the value is present
    }
    return this;
  }

   /**
   * Get statusIn
   * @return statusIn
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public List<LogCollectionStatus> getStatusIn() {
        return statusIn.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_STATUS_IN)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<List<LogCollectionStatus>> getStatusIn_JsonNullable() {
    return statusIn;
  }
  
  @JsonProperty(JSON_PROPERTY_STATUS_IN)
  public void setStatusIn_JsonNullable(JsonNullable<List<LogCollectionStatus>> statusIn) {
    this.statusIn = statusIn;
  }

  public void setStatusIn(List<LogCollectionStatus> statusIn) {
    this.statusIn = JsonNullable.<List<LogCollectionStatus>>of(statusIn);
  }


  public LogCollectionWhereInput statusNot(LogCollectionStatus statusNot) {
    this.statusNot = JsonNullable.<LogCollectionStatus>of(statusNot);
    return this;
  }

   /**
   * Get statusNot
   * @return statusNot
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public LogCollectionStatus getStatusNot() {
        return statusNot.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_STATUS_NOT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<LogCollectionStatus> getStatusNot_JsonNullable() {
    return statusNot;
  }
  
  @JsonProperty(JSON_PROPERTY_STATUS_NOT)
  public void setStatusNot_JsonNullable(JsonNullable<LogCollectionStatus> statusNot) {
    this.statusNot = statusNot;
  }

  public void setStatusNot(LogCollectionStatus statusNot) {
    this.statusNot = JsonNullable.<LogCollectionStatus>of(statusNot);
  }


  public LogCollectionWhereInput statusNotIn(List<LogCollectionStatus> statusNotIn) {
    this.statusNotIn = JsonNullable.<List<LogCollectionStatus>>of(statusNotIn);
    return this;
  }

  public LogCollectionWhereInput addStatusNotInItem(LogCollectionStatus statusNotInItem) {
    if (this.statusNotIn == null || !this.statusNotIn.isPresent()) {
      this.statusNotIn = JsonNullable.<List<LogCollectionStatus>>of(new ArrayList<>());
    }
    try {
      this.statusNotIn.get().add(statusNotInItem);
    } catch (java.util.NoSuchElementException e) {
      // this can never happen, as we make sure above that the value is present
    }
    return this;
  }

   /**
   * Get statusNotIn
   * @return statusNotIn
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public List<LogCollectionStatus> getStatusNotIn() {
        return statusNotIn.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_STATUS_NOT_IN)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<List<LogCollectionStatus>> getStatusNotIn_JsonNullable() {
    return statusNotIn;
  }
  
  @JsonProperty(JSON_PROPERTY_STATUS_NOT_IN)
  public void setStatusNotIn_JsonNullable(JsonNullable<List<LogCollectionStatus>> statusNotIn) {
    this.statusNotIn = statusNotIn;
  }

  public void setStatusNotIn(List<LogCollectionStatus> statusNotIn) {
    this.statusNotIn = JsonNullable.<List<LogCollectionStatus>>of(statusNotIn);
  }


  /**
   * Return true if this LogCollectionWhereInput object is equal to o.
   */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    LogCollectionWhereInput logCollectionWhereInput = (LogCollectionWhereInput) o;
    return equalsNullable(this.AND, logCollectionWhereInput.AND) &&
        equalsNullable(this.cluster, logCollectionWhereInput.cluster) &&
        equalsNullable(this.hostsEvery, logCollectionWhereInput.hostsEvery) &&
        equalsNullable(this.hostsNone, logCollectionWhereInput.hostsNone) &&
        equalsNullable(this.hostsSome, logCollectionWhereInput.hostsSome) &&
        equalsNullable(this.id, logCollectionWhereInput.id) &&
        equalsNullable(this.idContains, logCollectionWhereInput.idContains) &&
        equalsNullable(this.idEndsWith, logCollectionWhereInput.idEndsWith) &&
        equalsNullable(this.idGt, logCollectionWhereInput.idGt) &&
        equalsNullable(this.idGte, logCollectionWhereInput.idGte) &&
        equalsNullable(this.idIn, logCollectionWhereInput.idIn) &&
        equalsNullable(this.idLt, logCollectionWhereInput.idLt) &&
        equalsNullable(this.idLte, logCollectionWhereInput.idLte) &&
        equalsNullable(this.idNot, logCollectionWhereInput.idNot) &&
        equalsNullable(this.idNotContains, logCollectionWhereInput.idNotContains) &&
        equalsNullable(this.idNotEndsWith, logCollectionWhereInput.idNotEndsWith) &&
        equalsNullable(this.idNotIn, logCollectionWhereInput.idNotIn) &&
        equalsNullable(this.idNotStartsWith, logCollectionWhereInput.idNotStartsWith) &&
        equalsNullable(this.idStartsWith, logCollectionWhereInput.idStartsWith) &&
        equalsNullable(this.localId, logCollectionWhereInput.localId) &&
        equalsNullable(this.localIdContains, logCollectionWhereInput.localIdContains) &&
        equalsNullable(this.localIdEndsWith, logCollectionWhereInput.localIdEndsWith) &&
        equalsNullable(this.localIdGt, logCollectionWhereInput.localIdGt) &&
        equalsNullable(this.localIdGte, logCollectionWhereInput.localIdGte) &&
        equalsNullable(this.localIdIn, logCollectionWhereInput.localIdIn) &&
        equalsNullable(this.localIdLt, logCollectionWhereInput.localIdLt) &&
        equalsNullable(this.localIdLte, logCollectionWhereInput.localIdLte) &&
        equalsNullable(this.localIdNot, logCollectionWhereInput.localIdNot) &&
        equalsNullable(this.localIdNotContains, logCollectionWhereInput.localIdNotContains) &&
        equalsNullable(this.localIdNotEndsWith, logCollectionWhereInput.localIdNotEndsWith) &&
        equalsNullable(this.localIdNotIn, logCollectionWhereInput.localIdNotIn) &&
        equalsNullable(this.localIdNotStartsWith, logCollectionWhereInput.localIdNotStartsWith) &&
        equalsNullable(this.localIdStartsWith, logCollectionWhereInput.localIdStartsWith) &&
        equalsNullable(this.logEndedAt, logCollectionWhereInput.logEndedAt) &&
        equalsNullable(this.logEndedAtGt, logCollectionWhereInput.logEndedAtGt) &&
        equalsNullable(this.logEndedAtGte, logCollectionWhereInput.logEndedAtGte) &&
        equalsNullable(this.logEndedAtIn, logCollectionWhereInput.logEndedAtIn) &&
        equalsNullable(this.logEndedAtLt, logCollectionWhereInput.logEndedAtLt) &&
        equalsNullable(this.logEndedAtLte, logCollectionWhereInput.logEndedAtLte) &&
        equalsNullable(this.logEndedAtNot, logCollectionWhereInput.logEndedAtNot) &&
        equalsNullable(this.logEndedAtNotIn, logCollectionWhereInput.logEndedAtNotIn) &&
        equalsNullable(this.logStartedAt, logCollectionWhereInput.logStartedAt) &&
        equalsNullable(this.logStartedAtGt, logCollectionWhereInput.logStartedAtGt) &&
        equalsNullable(this.logStartedAtGte, logCollectionWhereInput.logStartedAtGte) &&
        equalsNullable(this.logStartedAtIn, logCollectionWhereInput.logStartedAtIn) &&
        equalsNullable(this.logStartedAtLt, logCollectionWhereInput.logStartedAtLt) &&
        equalsNullable(this.logStartedAtLte, logCollectionWhereInput.logStartedAtLte) &&
        equalsNullable(this.logStartedAtNot, logCollectionWhereInput.logStartedAtNot) &&
        equalsNullable(this.logStartedAtNotIn, logCollectionWhereInput.logStartedAtNotIn) &&
        equalsNullable(this.NOT, logCollectionWhereInput.NOT) &&
        equalsNullable(this.OR, logCollectionWhereInput.OR) &&
        equalsNullable(this.owner, logCollectionWhereInput.owner) &&
        equalsNullable(this.ownerContains, logCollectionWhereInput.ownerContains) &&
        equalsNullable(this.ownerEndsWith, logCollectionWhereInput.ownerEndsWith) &&
        equalsNullable(this.ownerGt, logCollectionWhereInput.ownerGt) &&
        equalsNullable(this.ownerGte, logCollectionWhereInput.ownerGte) &&
        equalsNullable(this.ownerIn, logCollectionWhereInput.ownerIn) &&
        equalsNullable(this.ownerLt, logCollectionWhereInput.ownerLt) &&
        equalsNullable(this.ownerLte, logCollectionWhereInput.ownerLte) &&
        equalsNullable(this.ownerNot, logCollectionWhereInput.ownerNot) &&
        equalsNullable(this.ownerNotContains, logCollectionWhereInput.ownerNotContains) &&
        equalsNullable(this.ownerNotEndsWith, logCollectionWhereInput.ownerNotEndsWith) &&
        equalsNullable(this.ownerNotIn, logCollectionWhereInput.ownerNotIn) &&
        equalsNullable(this.ownerNotStartsWith, logCollectionWhereInput.ownerNotStartsWith) &&
        equalsNullable(this.ownerStartsWith, logCollectionWhereInput.ownerStartsWith) &&
        equalsNullable(this.path, logCollectionWhereInput.path) &&
        equalsNullable(this.pathContains, logCollectionWhereInput.pathContains) &&
        equalsNullable(this.pathEndsWith, logCollectionWhereInput.pathEndsWith) &&
        equalsNullable(this.pathGt, logCollectionWhereInput.pathGt) &&
        equalsNullable(this.pathGte, logCollectionWhereInput.pathGte) &&
        equalsNullable(this.pathIn, logCollectionWhereInput.pathIn) &&
        equalsNullable(this.pathLt, logCollectionWhereInput.pathLt) &&
        equalsNullable(this.pathLte, logCollectionWhereInput.pathLte) &&
        equalsNullable(this.pathNot, logCollectionWhereInput.pathNot) &&
        equalsNullable(this.pathNotContains, logCollectionWhereInput.pathNotContains) &&
        equalsNullable(this.pathNotEndsWith, logCollectionWhereInput.pathNotEndsWith) &&
        equalsNullable(this.pathNotIn, logCollectionWhereInput.pathNotIn) &&
        equalsNullable(this.pathNotStartsWith, logCollectionWhereInput.pathNotStartsWith) &&
        equalsNullable(this.pathStartsWith, logCollectionWhereInput.pathStartsWith) &&
        equalsNullable(this.progress, logCollectionWhereInput.progress) &&
        equalsNullable(this.progressGt, logCollectionWhereInput.progressGt) &&
        equalsNullable(this.progressGte, logCollectionWhereInput.progressGte) &&
        equalsNullable(this.progressIn, logCollectionWhereInput.progressIn) &&
        equalsNullable(this.progressLt, logCollectionWhereInput.progressLt) &&
        equalsNullable(this.progressLte, logCollectionWhereInput.progressLte) &&
        equalsNullable(this.progressNot, logCollectionWhereInput.progressNot) &&
        equalsNullable(this.progressNotIn, logCollectionWhereInput.progressNotIn) &&
        equalsNullable(this.size, logCollectionWhereInput.size) &&
        equalsNullable(this.sizeGt, logCollectionWhereInput.sizeGt) &&
        equalsNullable(this.sizeGte, logCollectionWhereInput.sizeGte) &&
        equalsNullable(this.sizeIn, logCollectionWhereInput.sizeIn) &&
        equalsNullable(this.sizeLt, logCollectionWhereInput.sizeLt) &&
        equalsNullable(this.sizeLte, logCollectionWhereInput.sizeLte) &&
        equalsNullable(this.sizeNot, logCollectionWhereInput.sizeNot) &&
        equalsNullable(this.sizeNotIn, logCollectionWhereInput.sizeNotIn) &&
        equalsNullable(this.startedAt, logCollectionWhereInput.startedAt) &&
        equalsNullable(this.startedAtGt, logCollectionWhereInput.startedAtGt) &&
        equalsNullable(this.startedAtGte, logCollectionWhereInput.startedAtGte) &&
        equalsNullable(this.startedAtIn, logCollectionWhereInput.startedAtIn) &&
        equalsNullable(this.startedAtLt, logCollectionWhereInput.startedAtLt) &&
        equalsNullable(this.startedAtLte, logCollectionWhereInput.startedAtLte) &&
        equalsNullable(this.startedAtNot, logCollectionWhereInput.startedAtNot) &&
        equalsNullable(this.startedAtNotIn, logCollectionWhereInput.startedAtNotIn) &&
        equalsNullable(this.status, logCollectionWhereInput.status) &&
        equalsNullable(this.statusIn, logCollectionWhereInput.statusIn) &&
        equalsNullable(this.statusNot, logCollectionWhereInput.statusNot) &&
        equalsNullable(this.statusNotIn, logCollectionWhereInput.statusNotIn);
  }

  private static <T> boolean equalsNullable(JsonNullable<T> a, JsonNullable<T> b) {
    return a == b || (a != null && b != null && a.isPresent() && b.isPresent() && Objects.deepEquals(a.get(), b.get()));
  }

  @Override
  public int hashCode() {
    return Objects.hash(hashCodeNullable(AND), hashCodeNullable(cluster), hashCodeNullable(hostsEvery), hashCodeNullable(hostsNone), hashCodeNullable(hostsSome), hashCodeNullable(id), hashCodeNullable(idContains), hashCodeNullable(idEndsWith), hashCodeNullable(idGt), hashCodeNullable(idGte), hashCodeNullable(idIn), hashCodeNullable(idLt), hashCodeNullable(idLte), hashCodeNullable(idNot), hashCodeNullable(idNotContains), hashCodeNullable(idNotEndsWith), hashCodeNullable(idNotIn), hashCodeNullable(idNotStartsWith), hashCodeNullable(idStartsWith), hashCodeNullable(localId), hashCodeNullable(localIdContains), hashCodeNullable(localIdEndsWith), hashCodeNullable(localIdGt), hashCodeNullable(localIdGte), hashCodeNullable(localIdIn), hashCodeNullable(localIdLt), hashCodeNullable(localIdLte), hashCodeNullable(localIdNot), hashCodeNullable(localIdNotContains), hashCodeNullable(localIdNotEndsWith), hashCodeNullable(localIdNotIn), hashCodeNullable(localIdNotStartsWith), hashCodeNullable(localIdStartsWith), hashCodeNullable(logEndedAt), hashCodeNullable(logEndedAtGt), hashCodeNullable(logEndedAtGte), hashCodeNullable(logEndedAtIn), hashCodeNullable(logEndedAtLt), hashCodeNullable(logEndedAtLte), hashCodeNullable(logEndedAtNot), hashCodeNullable(logEndedAtNotIn), hashCodeNullable(logStartedAt), hashCodeNullable(logStartedAtGt), hashCodeNullable(logStartedAtGte), hashCodeNullable(logStartedAtIn), hashCodeNullable(logStartedAtLt), hashCodeNullable(logStartedAtLte), hashCodeNullable(logStartedAtNot), hashCodeNullable(logStartedAtNotIn), hashCodeNullable(NOT), hashCodeNullable(OR), hashCodeNullable(owner), hashCodeNullable(ownerContains), hashCodeNullable(ownerEndsWith), hashCodeNullable(ownerGt), hashCodeNullable(ownerGte), hashCodeNullable(ownerIn), hashCodeNullable(ownerLt), hashCodeNullable(ownerLte), hashCodeNullable(ownerNot), hashCodeNullable(ownerNotContains), hashCodeNullable(ownerNotEndsWith), hashCodeNullable(ownerNotIn), hashCodeNullable(ownerNotStartsWith), hashCodeNullable(ownerStartsWith), hashCodeNullable(path), hashCodeNullable(pathContains), hashCodeNullable(pathEndsWith), hashCodeNullable(pathGt), hashCodeNullable(pathGte), hashCodeNullable(pathIn), hashCodeNullable(pathLt), hashCodeNullable(pathLte), hashCodeNullable(pathNot), hashCodeNullable(pathNotContains), hashCodeNullable(pathNotEndsWith), hashCodeNullable(pathNotIn), hashCodeNullable(pathNotStartsWith), hashCodeNullable(pathStartsWith), hashCodeNullable(progress), hashCodeNullable(progressGt), hashCodeNullable(progressGte), hashCodeNullable(progressIn), hashCodeNullable(progressLt), hashCodeNullable(progressLte), hashCodeNullable(progressNot), hashCodeNullable(progressNotIn), hashCodeNullable(size), hashCodeNullable(sizeGt), hashCodeNullable(sizeGte), hashCodeNullable(sizeIn), hashCodeNullable(sizeLt), hashCodeNullable(sizeLte), hashCodeNullable(sizeNot), hashCodeNullable(sizeNotIn), hashCodeNullable(startedAt), hashCodeNullable(startedAtGt), hashCodeNullable(startedAtGte), hashCodeNullable(startedAtIn), hashCodeNullable(startedAtLt), hashCodeNullable(startedAtLte), hashCodeNullable(startedAtNot), hashCodeNullable(startedAtNotIn), hashCodeNullable(status), hashCodeNullable(statusIn), hashCodeNullable(statusNot), hashCodeNullable(statusNotIn));
  }

  private static <T> int hashCodeNullable(JsonNullable<T> a) {
    if (a == null) {
      return 1;
    }
    return a.isPresent() ? Arrays.deepHashCode(new Object[]{a.get()}) : 31;
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class LogCollectionWhereInput {\n");
    sb.append("    AND: ").append(toIndentedString(AND)).append("\n");
    sb.append("    cluster: ").append(toIndentedString(cluster)).append("\n");
    sb.append("    hostsEvery: ").append(toIndentedString(hostsEvery)).append("\n");
    sb.append("    hostsNone: ").append(toIndentedString(hostsNone)).append("\n");
    sb.append("    hostsSome: ").append(toIndentedString(hostsSome)).append("\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    idContains: ").append(toIndentedString(idContains)).append("\n");
    sb.append("    idEndsWith: ").append(toIndentedString(idEndsWith)).append("\n");
    sb.append("    idGt: ").append(toIndentedString(idGt)).append("\n");
    sb.append("    idGte: ").append(toIndentedString(idGte)).append("\n");
    sb.append("    idIn: ").append(toIndentedString(idIn)).append("\n");
    sb.append("    idLt: ").append(toIndentedString(idLt)).append("\n");
    sb.append("    idLte: ").append(toIndentedString(idLte)).append("\n");
    sb.append("    idNot: ").append(toIndentedString(idNot)).append("\n");
    sb.append("    idNotContains: ").append(toIndentedString(idNotContains)).append("\n");
    sb.append("    idNotEndsWith: ").append(toIndentedString(idNotEndsWith)).append("\n");
    sb.append("    idNotIn: ").append(toIndentedString(idNotIn)).append("\n");
    sb.append("    idNotStartsWith: ").append(toIndentedString(idNotStartsWith)).append("\n");
    sb.append("    idStartsWith: ").append(toIndentedString(idStartsWith)).append("\n");
    sb.append("    localId: ").append(toIndentedString(localId)).append("\n");
    sb.append("    localIdContains: ").append(toIndentedString(localIdContains)).append("\n");
    sb.append("    localIdEndsWith: ").append(toIndentedString(localIdEndsWith)).append("\n");
    sb.append("    localIdGt: ").append(toIndentedString(localIdGt)).append("\n");
    sb.append("    localIdGte: ").append(toIndentedString(localIdGte)).append("\n");
    sb.append("    localIdIn: ").append(toIndentedString(localIdIn)).append("\n");
    sb.append("    localIdLt: ").append(toIndentedString(localIdLt)).append("\n");
    sb.append("    localIdLte: ").append(toIndentedString(localIdLte)).append("\n");
    sb.append("    localIdNot: ").append(toIndentedString(localIdNot)).append("\n");
    sb.append("    localIdNotContains: ").append(toIndentedString(localIdNotContains)).append("\n");
    sb.append("    localIdNotEndsWith: ").append(toIndentedString(localIdNotEndsWith)).append("\n");
    sb.append("    localIdNotIn: ").append(toIndentedString(localIdNotIn)).append("\n");
    sb.append("    localIdNotStartsWith: ").append(toIndentedString(localIdNotStartsWith)).append("\n");
    sb.append("    localIdStartsWith: ").append(toIndentedString(localIdStartsWith)).append("\n");
    sb.append("    logEndedAt: ").append(toIndentedString(logEndedAt)).append("\n");
    sb.append("    logEndedAtGt: ").append(toIndentedString(logEndedAtGt)).append("\n");
    sb.append("    logEndedAtGte: ").append(toIndentedString(logEndedAtGte)).append("\n");
    sb.append("    logEndedAtIn: ").append(toIndentedString(logEndedAtIn)).append("\n");
    sb.append("    logEndedAtLt: ").append(toIndentedString(logEndedAtLt)).append("\n");
    sb.append("    logEndedAtLte: ").append(toIndentedString(logEndedAtLte)).append("\n");
    sb.append("    logEndedAtNot: ").append(toIndentedString(logEndedAtNot)).append("\n");
    sb.append("    logEndedAtNotIn: ").append(toIndentedString(logEndedAtNotIn)).append("\n");
    sb.append("    logStartedAt: ").append(toIndentedString(logStartedAt)).append("\n");
    sb.append("    logStartedAtGt: ").append(toIndentedString(logStartedAtGt)).append("\n");
    sb.append("    logStartedAtGte: ").append(toIndentedString(logStartedAtGte)).append("\n");
    sb.append("    logStartedAtIn: ").append(toIndentedString(logStartedAtIn)).append("\n");
    sb.append("    logStartedAtLt: ").append(toIndentedString(logStartedAtLt)).append("\n");
    sb.append("    logStartedAtLte: ").append(toIndentedString(logStartedAtLte)).append("\n");
    sb.append("    logStartedAtNot: ").append(toIndentedString(logStartedAtNot)).append("\n");
    sb.append("    logStartedAtNotIn: ").append(toIndentedString(logStartedAtNotIn)).append("\n");
    sb.append("    NOT: ").append(toIndentedString(NOT)).append("\n");
    sb.append("    OR: ").append(toIndentedString(OR)).append("\n");
    sb.append("    owner: ").append(toIndentedString(owner)).append("\n");
    sb.append("    ownerContains: ").append(toIndentedString(ownerContains)).append("\n");
    sb.append("    ownerEndsWith: ").append(toIndentedString(ownerEndsWith)).append("\n");
    sb.append("    ownerGt: ").append(toIndentedString(ownerGt)).append("\n");
    sb.append("    ownerGte: ").append(toIndentedString(ownerGte)).append("\n");
    sb.append("    ownerIn: ").append(toIndentedString(ownerIn)).append("\n");
    sb.append("    ownerLt: ").append(toIndentedString(ownerLt)).append("\n");
    sb.append("    ownerLte: ").append(toIndentedString(ownerLte)).append("\n");
    sb.append("    ownerNot: ").append(toIndentedString(ownerNot)).append("\n");
    sb.append("    ownerNotContains: ").append(toIndentedString(ownerNotContains)).append("\n");
    sb.append("    ownerNotEndsWith: ").append(toIndentedString(ownerNotEndsWith)).append("\n");
    sb.append("    ownerNotIn: ").append(toIndentedString(ownerNotIn)).append("\n");
    sb.append("    ownerNotStartsWith: ").append(toIndentedString(ownerNotStartsWith)).append("\n");
    sb.append("    ownerStartsWith: ").append(toIndentedString(ownerStartsWith)).append("\n");
    sb.append("    path: ").append(toIndentedString(path)).append("\n");
    sb.append("    pathContains: ").append(toIndentedString(pathContains)).append("\n");
    sb.append("    pathEndsWith: ").append(toIndentedString(pathEndsWith)).append("\n");
    sb.append("    pathGt: ").append(toIndentedString(pathGt)).append("\n");
    sb.append("    pathGte: ").append(toIndentedString(pathGte)).append("\n");
    sb.append("    pathIn: ").append(toIndentedString(pathIn)).append("\n");
    sb.append("    pathLt: ").append(toIndentedString(pathLt)).append("\n");
    sb.append("    pathLte: ").append(toIndentedString(pathLte)).append("\n");
    sb.append("    pathNot: ").append(toIndentedString(pathNot)).append("\n");
    sb.append("    pathNotContains: ").append(toIndentedString(pathNotContains)).append("\n");
    sb.append("    pathNotEndsWith: ").append(toIndentedString(pathNotEndsWith)).append("\n");
    sb.append("    pathNotIn: ").append(toIndentedString(pathNotIn)).append("\n");
    sb.append("    pathNotStartsWith: ").append(toIndentedString(pathNotStartsWith)).append("\n");
    sb.append("    pathStartsWith: ").append(toIndentedString(pathStartsWith)).append("\n");
    sb.append("    progress: ").append(toIndentedString(progress)).append("\n");
    sb.append("    progressGt: ").append(toIndentedString(progressGt)).append("\n");
    sb.append("    progressGte: ").append(toIndentedString(progressGte)).append("\n");
    sb.append("    progressIn: ").append(toIndentedString(progressIn)).append("\n");
    sb.append("    progressLt: ").append(toIndentedString(progressLt)).append("\n");
    sb.append("    progressLte: ").append(toIndentedString(progressLte)).append("\n");
    sb.append("    progressNot: ").append(toIndentedString(progressNot)).append("\n");
    sb.append("    progressNotIn: ").append(toIndentedString(progressNotIn)).append("\n");
    sb.append("    size: ").append(toIndentedString(size)).append("\n");
    sb.append("    sizeGt: ").append(toIndentedString(sizeGt)).append("\n");
    sb.append("    sizeGte: ").append(toIndentedString(sizeGte)).append("\n");
    sb.append("    sizeIn: ").append(toIndentedString(sizeIn)).append("\n");
    sb.append("    sizeLt: ").append(toIndentedString(sizeLt)).append("\n");
    sb.append("    sizeLte: ").append(toIndentedString(sizeLte)).append("\n");
    sb.append("    sizeNot: ").append(toIndentedString(sizeNot)).append("\n");
    sb.append("    sizeNotIn: ").append(toIndentedString(sizeNotIn)).append("\n");
    sb.append("    startedAt: ").append(toIndentedString(startedAt)).append("\n");
    sb.append("    startedAtGt: ").append(toIndentedString(startedAtGt)).append("\n");
    sb.append("    startedAtGte: ").append(toIndentedString(startedAtGte)).append("\n");
    sb.append("    startedAtIn: ").append(toIndentedString(startedAtIn)).append("\n");
    sb.append("    startedAtLt: ").append(toIndentedString(startedAtLt)).append("\n");
    sb.append("    startedAtLte: ").append(toIndentedString(startedAtLte)).append("\n");
    sb.append("    startedAtNot: ").append(toIndentedString(startedAtNot)).append("\n");
    sb.append("    startedAtNotIn: ").append(toIndentedString(startedAtNotIn)).append("\n");
    sb.append("    status: ").append(toIndentedString(status)).append("\n");
    sb.append("    statusIn: ").append(toIndentedString(statusIn)).append("\n");
    sb.append("    statusNot: ").append(toIndentedString(statusNot)).append("\n");
    sb.append("    statusNotIn: ").append(toIndentedString(statusNotIn)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

