/*
 * Tower SDK API
 * cloudtower operation API and SDK
 *
 * The version of the OpenAPI document: 1.7.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.smartx.tower.model;

import java.util.Objects;
import java.util.Arrays;
import java.util.Map;
import java.util.HashMap;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import com.smartx.tower.model.ClusterWhereInput;
import com.smartx.tower.model.EntityType;
import com.smartx.tower.model.FilterStatus;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.util.ArrayList;
import java.util.List;
import org.openapitools.jackson.nullable.JsonNullable;
import com.fasterxml.jackson.annotation.JsonIgnore;
import org.openapitools.jackson.nullable.JsonNullable;
import java.util.NoSuchElementException;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;


/**
 * EntityFilterWhereInput
 */
@JsonPropertyOrder({
  EntityFilterWhereInput.JSON_PROPERTY_A_N_D,
  EntityFilterWhereInput.JSON_PROPERTY_APPLY_TO_ALL_CLUSTERS,
  EntityFilterWhereInput.JSON_PROPERTY_APPLY_TO_ALL_CLUSTERS_NOT,
  EntityFilterWhereInput.JSON_PROPERTY_CLUSTERS_EVERY,
  EntityFilterWhereInput.JSON_PROPERTY_CLUSTERS_NONE,
  EntityFilterWhereInput.JSON_PROPERTY_CLUSTERS_SOME,
  EntityFilterWhereInput.JSON_PROPERTY_ENTITY_TYPE,
  EntityFilterWhereInput.JSON_PROPERTY_ENTITY_TYPE_IN,
  EntityFilterWhereInput.JSON_PROPERTY_ENTITY_TYPE_NOT,
  EntityFilterWhereInput.JSON_PROPERTY_ENTITY_TYPE_NOT_IN,
  EntityFilterWhereInput.JSON_PROPERTY_EXEC_FAILED_CLUSTER_EVERY,
  EntityFilterWhereInput.JSON_PROPERTY_EXEC_FAILED_CLUSTER_NONE,
  EntityFilterWhereInput.JSON_PROPERTY_EXEC_FAILED_CLUSTER_SOME,
  EntityFilterWhereInput.JSON_PROPERTY_FILTER_STATUS,
  EntityFilterWhereInput.JSON_PROPERTY_FILTER_STATUS_IN,
  EntityFilterWhereInput.JSON_PROPERTY_FILTER_STATUS_NOT,
  EntityFilterWhereInput.JSON_PROPERTY_FILTER_STATUS_NOT_IN,
  EntityFilterWhereInput.JSON_PROPERTY_ID,
  EntityFilterWhereInput.JSON_PROPERTY_ID_CONTAINS,
  EntityFilterWhereInput.JSON_PROPERTY_ID_ENDS_WITH,
  EntityFilterWhereInput.JSON_PROPERTY_ID_GT,
  EntityFilterWhereInput.JSON_PROPERTY_ID_GTE,
  EntityFilterWhereInput.JSON_PROPERTY_ID_IN,
  EntityFilterWhereInput.JSON_PROPERTY_ID_LT,
  EntityFilterWhereInput.JSON_PROPERTY_ID_LTE,
  EntityFilterWhereInput.JSON_PROPERTY_ID_NOT,
  EntityFilterWhereInput.JSON_PROPERTY_ID_NOT_CONTAINS,
  EntityFilterWhereInput.JSON_PROPERTY_ID_NOT_ENDS_WITH,
  EntityFilterWhereInput.JSON_PROPERTY_ID_NOT_IN,
  EntityFilterWhereInput.JSON_PROPERTY_ID_NOT_STARTS_WITH,
  EntityFilterWhereInput.JSON_PROPERTY_ID_STARTS_WITH,
  EntityFilterWhereInput.JSON_PROPERTY_LAST_EXECUTED_AT,
  EntityFilterWhereInput.JSON_PROPERTY_LAST_EXECUTED_AT_GT,
  EntityFilterWhereInput.JSON_PROPERTY_LAST_EXECUTED_AT_GTE,
  EntityFilterWhereInput.JSON_PROPERTY_LAST_EXECUTED_AT_IN,
  EntityFilterWhereInput.JSON_PROPERTY_LAST_EXECUTED_AT_LT,
  EntityFilterWhereInput.JSON_PROPERTY_LAST_EXECUTED_AT_LTE,
  EntityFilterWhereInput.JSON_PROPERTY_LAST_EXECUTED_AT_NOT,
  EntityFilterWhereInput.JSON_PROPERTY_LAST_EXECUTED_AT_NOT_IN,
  EntityFilterWhereInput.JSON_PROPERTY_NAME,
  EntityFilterWhereInput.JSON_PROPERTY_NAME_CONTAINS,
  EntityFilterWhereInput.JSON_PROPERTY_NAME_ENDS_WITH,
  EntityFilterWhereInput.JSON_PROPERTY_NAME_GT,
  EntityFilterWhereInput.JSON_PROPERTY_NAME_GTE,
  EntityFilterWhereInput.JSON_PROPERTY_NAME_IN,
  EntityFilterWhereInput.JSON_PROPERTY_NAME_LT,
  EntityFilterWhereInput.JSON_PROPERTY_NAME_LTE,
  EntityFilterWhereInput.JSON_PROPERTY_NAME_NOT,
  EntityFilterWhereInput.JSON_PROPERTY_NAME_NOT_CONTAINS,
  EntityFilterWhereInput.JSON_PROPERTY_NAME_NOT_ENDS_WITH,
  EntityFilterWhereInput.JSON_PROPERTY_NAME_NOT_IN,
  EntityFilterWhereInput.JSON_PROPERTY_NAME_NOT_STARTS_WITH,
  EntityFilterWhereInput.JSON_PROPERTY_NAME_STARTS_WITH,
  EntityFilterWhereInput.JSON_PROPERTY_N_O_T,
  EntityFilterWhereInput.JSON_PROPERTY_O_R,
  EntityFilterWhereInput.JSON_PROPERTY_PRESET,
  EntityFilterWhereInput.JSON_PROPERTY_PRESET_CONTAINS,
  EntityFilterWhereInput.JSON_PROPERTY_PRESET_ENDS_WITH,
  EntityFilterWhereInput.JSON_PROPERTY_PRESET_GT,
  EntityFilterWhereInput.JSON_PROPERTY_PRESET_GTE,
  EntityFilterWhereInput.JSON_PROPERTY_PRESET_IN,
  EntityFilterWhereInput.JSON_PROPERTY_PRESET_LT,
  EntityFilterWhereInput.JSON_PROPERTY_PRESET_LTE,
  EntityFilterWhereInput.JSON_PROPERTY_PRESET_NOT,
  EntityFilterWhereInput.JSON_PROPERTY_PRESET_NOT_CONTAINS,
  EntityFilterWhereInput.JSON_PROPERTY_PRESET_NOT_ENDS_WITH,
  EntityFilterWhereInput.JSON_PROPERTY_PRESET_NOT_IN,
  EntityFilterWhereInput.JSON_PROPERTY_PRESET_NOT_STARTS_WITH,
  EntityFilterWhereInput.JSON_PROPERTY_PRESET_STARTS_WITH
})
@javax.annotation.processing.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2021-10-27T15:59:14.939791800+08:00[Asia/Shanghai]")
public class EntityFilterWhereInput {
  public static final String JSON_PROPERTY_A_N_D = "AND";
  private JsonNullable<List<EntityFilterWhereInput>> AND = JsonNullable.<List<EntityFilterWhereInput>>undefined();

  public static final String JSON_PROPERTY_APPLY_TO_ALL_CLUSTERS = "apply_to_all_clusters";
  private JsonNullable<Boolean> applyToAllClusters = JsonNullable.<Boolean>undefined();

  public static final String JSON_PROPERTY_APPLY_TO_ALL_CLUSTERS_NOT = "apply_to_all_clusters_not";
  private JsonNullable<Boolean> applyToAllClustersNot = JsonNullable.<Boolean>undefined();

  public static final String JSON_PROPERTY_CLUSTERS_EVERY = "clusters_every";
  private JsonNullable<ClusterWhereInput> clustersEvery = JsonNullable.<ClusterWhereInput>undefined();

  public static final String JSON_PROPERTY_CLUSTERS_NONE = "clusters_none";
  private JsonNullable<ClusterWhereInput> clustersNone = JsonNullable.<ClusterWhereInput>undefined();

  public static final String JSON_PROPERTY_CLUSTERS_SOME = "clusters_some";
  private JsonNullable<ClusterWhereInput> clustersSome = JsonNullable.<ClusterWhereInput>undefined();

  public static final String JSON_PROPERTY_ENTITY_TYPE = "entity_type";
  private JsonNullable<EntityType> entityType = JsonNullable.<EntityType>undefined();

  public static final String JSON_PROPERTY_ENTITY_TYPE_IN = "entity_type_in";
  private JsonNullable<List<EntityType>> entityTypeIn = JsonNullable.<List<EntityType>>undefined();

  public static final String JSON_PROPERTY_ENTITY_TYPE_NOT = "entity_type_not";
  private JsonNullable<EntityType> entityTypeNot = JsonNullable.<EntityType>undefined();

  public static final String JSON_PROPERTY_ENTITY_TYPE_NOT_IN = "entity_type_not_in";
  private JsonNullable<List<EntityType>> entityTypeNotIn = JsonNullable.<List<EntityType>>undefined();

  public static final String JSON_PROPERTY_EXEC_FAILED_CLUSTER_EVERY = "exec_failed_cluster_every";
  private JsonNullable<ClusterWhereInput> execFailedClusterEvery = JsonNullable.<ClusterWhereInput>undefined();

  public static final String JSON_PROPERTY_EXEC_FAILED_CLUSTER_NONE = "exec_failed_cluster_none";
  private JsonNullable<ClusterWhereInput> execFailedClusterNone = JsonNullable.<ClusterWhereInput>undefined();

  public static final String JSON_PROPERTY_EXEC_FAILED_CLUSTER_SOME = "exec_failed_cluster_some";
  private JsonNullable<ClusterWhereInput> execFailedClusterSome = JsonNullable.<ClusterWhereInput>undefined();

  public static final String JSON_PROPERTY_FILTER_STATUS = "filter_status";
  private JsonNullable<FilterStatus> filterStatus = JsonNullable.<FilterStatus>undefined();

  public static final String JSON_PROPERTY_FILTER_STATUS_IN = "filter_status_in";
  private JsonNullable<List<FilterStatus>> filterStatusIn = JsonNullable.<List<FilterStatus>>undefined();

  public static final String JSON_PROPERTY_FILTER_STATUS_NOT = "filter_status_not";
  private JsonNullable<FilterStatus> filterStatusNot = JsonNullable.<FilterStatus>undefined();

  public static final String JSON_PROPERTY_FILTER_STATUS_NOT_IN = "filter_status_not_in";
  private JsonNullable<List<FilterStatus>> filterStatusNotIn = JsonNullable.<List<FilterStatus>>undefined();

  public static final String JSON_PROPERTY_ID = "id";
  private JsonNullable<String> id = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_ID_CONTAINS = "id_contains";
  private JsonNullable<String> idContains = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_ID_ENDS_WITH = "id_ends_with";
  private JsonNullable<String> idEndsWith = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_ID_GT = "id_gt";
  private JsonNullable<String> idGt = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_ID_GTE = "id_gte";
  private JsonNullable<String> idGte = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_ID_IN = "id_in";
  private JsonNullable<List<String>> idIn = JsonNullable.<List<String>>undefined();

  public static final String JSON_PROPERTY_ID_LT = "id_lt";
  private JsonNullable<String> idLt = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_ID_LTE = "id_lte";
  private JsonNullable<String> idLte = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_ID_NOT = "id_not";
  private JsonNullable<String> idNot = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_ID_NOT_CONTAINS = "id_not_contains";
  private JsonNullable<String> idNotContains = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_ID_NOT_ENDS_WITH = "id_not_ends_with";
  private JsonNullable<String> idNotEndsWith = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_ID_NOT_IN = "id_not_in";
  private JsonNullable<List<String>> idNotIn = JsonNullable.<List<String>>undefined();

  public static final String JSON_PROPERTY_ID_NOT_STARTS_WITH = "id_not_starts_with";
  private JsonNullable<String> idNotStartsWith = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_ID_STARTS_WITH = "id_starts_with";
  private JsonNullable<String> idStartsWith = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_LAST_EXECUTED_AT = "last_executed_at";
  private JsonNullable<String> lastExecutedAt = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_LAST_EXECUTED_AT_GT = "last_executed_at_gt";
  private JsonNullable<String> lastExecutedAtGt = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_LAST_EXECUTED_AT_GTE = "last_executed_at_gte";
  private JsonNullable<String> lastExecutedAtGte = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_LAST_EXECUTED_AT_IN = "last_executed_at_in";
  private JsonNullable<List<String>> lastExecutedAtIn = JsonNullable.<List<String>>undefined();

  public static final String JSON_PROPERTY_LAST_EXECUTED_AT_LT = "last_executed_at_lt";
  private JsonNullable<String> lastExecutedAtLt = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_LAST_EXECUTED_AT_LTE = "last_executed_at_lte";
  private JsonNullable<String> lastExecutedAtLte = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_LAST_EXECUTED_AT_NOT = "last_executed_at_not";
  private JsonNullable<String> lastExecutedAtNot = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_LAST_EXECUTED_AT_NOT_IN = "last_executed_at_not_in";
  private JsonNullable<List<String>> lastExecutedAtNotIn = JsonNullable.<List<String>>undefined();

  public static final String JSON_PROPERTY_NAME = "name";
  private JsonNullable<String> name = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_NAME_CONTAINS = "name_contains";
  private JsonNullable<String> nameContains = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_NAME_ENDS_WITH = "name_ends_with";
  private JsonNullable<String> nameEndsWith = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_NAME_GT = "name_gt";
  private JsonNullable<String> nameGt = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_NAME_GTE = "name_gte";
  private JsonNullable<String> nameGte = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_NAME_IN = "name_in";
  private JsonNullable<List<String>> nameIn = JsonNullable.<List<String>>undefined();

  public static final String JSON_PROPERTY_NAME_LT = "name_lt";
  private JsonNullable<String> nameLt = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_NAME_LTE = "name_lte";
  private JsonNullable<String> nameLte = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_NAME_NOT = "name_not";
  private JsonNullable<String> nameNot = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_NAME_NOT_CONTAINS = "name_not_contains";
  private JsonNullable<String> nameNotContains = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_NAME_NOT_ENDS_WITH = "name_not_ends_with";
  private JsonNullable<String> nameNotEndsWith = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_NAME_NOT_IN = "name_not_in";
  private JsonNullable<List<String>> nameNotIn = JsonNullable.<List<String>>undefined();

  public static final String JSON_PROPERTY_NAME_NOT_STARTS_WITH = "name_not_starts_with";
  private JsonNullable<String> nameNotStartsWith = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_NAME_STARTS_WITH = "name_starts_with";
  private JsonNullable<String> nameStartsWith = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_N_O_T = "NOT";
  private JsonNullable<List<EntityFilterWhereInput>> NOT = JsonNullable.<List<EntityFilterWhereInput>>undefined();

  public static final String JSON_PROPERTY_O_R = "OR";
  private JsonNullable<List<EntityFilterWhereInput>> OR = JsonNullable.<List<EntityFilterWhereInput>>undefined();

  public static final String JSON_PROPERTY_PRESET = "preset";
  private JsonNullable<String> preset = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_PRESET_CONTAINS = "preset_contains";
  private JsonNullable<String> presetContains = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_PRESET_ENDS_WITH = "preset_ends_with";
  private JsonNullable<String> presetEndsWith = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_PRESET_GT = "preset_gt";
  private JsonNullable<String> presetGt = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_PRESET_GTE = "preset_gte";
  private JsonNullable<String> presetGte = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_PRESET_IN = "preset_in";
  private JsonNullable<List<String>> presetIn = JsonNullable.<List<String>>undefined();

  public static final String JSON_PROPERTY_PRESET_LT = "preset_lt";
  private JsonNullable<String> presetLt = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_PRESET_LTE = "preset_lte";
  private JsonNullable<String> presetLte = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_PRESET_NOT = "preset_not";
  private JsonNullable<String> presetNot = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_PRESET_NOT_CONTAINS = "preset_not_contains";
  private JsonNullable<String> presetNotContains = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_PRESET_NOT_ENDS_WITH = "preset_not_ends_with";
  private JsonNullable<String> presetNotEndsWith = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_PRESET_NOT_IN = "preset_not_in";
  private JsonNullable<List<String>> presetNotIn = JsonNullable.<List<String>>undefined();

  public static final String JSON_PROPERTY_PRESET_NOT_STARTS_WITH = "preset_not_starts_with";
  private JsonNullable<String> presetNotStartsWith = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_PRESET_STARTS_WITH = "preset_starts_with";
  private JsonNullable<String> presetStartsWith = JsonNullable.<String>undefined();


  public EntityFilterWhereInput AND(List<EntityFilterWhereInput> AND) {
    this.AND = JsonNullable.<List<EntityFilterWhereInput>>of(AND);
    return this;
  }

  public EntityFilterWhereInput addANDItem(EntityFilterWhereInput ANDItem) {
    if (this.AND == null || !this.AND.isPresent()) {
      this.AND = JsonNullable.<List<EntityFilterWhereInput>>of(new ArrayList<>());
    }
    try {
      this.AND.get().add(ANDItem);
    } catch (java.util.NoSuchElementException e) {
      // this can never happen, as we make sure above that the value is present
    }
    return this;
  }

   /**
   * Get AND
   * @return AND
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public List<EntityFilterWhereInput> getAND() {
        return AND.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_A_N_D)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<List<EntityFilterWhereInput>> getAND_JsonNullable() {
    return AND;
  }
  
  @JsonProperty(JSON_PROPERTY_A_N_D)
  public void setAND_JsonNullable(JsonNullable<List<EntityFilterWhereInput>> AND) {
    this.AND = AND;
  }

  public void setAND(List<EntityFilterWhereInput> AND) {
    this.AND = JsonNullable.<List<EntityFilterWhereInput>>of(AND);
  }


  public EntityFilterWhereInput applyToAllClusters(Boolean applyToAllClusters) {
    this.applyToAllClusters = JsonNullable.<Boolean>of(applyToAllClusters);
    return this;
  }

   /**
   * Get applyToAllClusters
   * @return applyToAllClusters
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public Boolean getApplyToAllClusters() {
        return applyToAllClusters.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_APPLY_TO_ALL_CLUSTERS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<Boolean> getApplyToAllClusters_JsonNullable() {
    return applyToAllClusters;
  }
  
  @JsonProperty(JSON_PROPERTY_APPLY_TO_ALL_CLUSTERS)
  public void setApplyToAllClusters_JsonNullable(JsonNullable<Boolean> applyToAllClusters) {
    this.applyToAllClusters = applyToAllClusters;
  }

  public void setApplyToAllClusters(Boolean applyToAllClusters) {
    this.applyToAllClusters = JsonNullable.<Boolean>of(applyToAllClusters);
  }


  public EntityFilterWhereInput applyToAllClustersNot(Boolean applyToAllClustersNot) {
    this.applyToAllClustersNot = JsonNullable.<Boolean>of(applyToAllClustersNot);
    return this;
  }

   /**
   * Get applyToAllClustersNot
   * @return applyToAllClustersNot
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public Boolean getApplyToAllClustersNot() {
        return applyToAllClustersNot.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_APPLY_TO_ALL_CLUSTERS_NOT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<Boolean> getApplyToAllClustersNot_JsonNullable() {
    return applyToAllClustersNot;
  }
  
  @JsonProperty(JSON_PROPERTY_APPLY_TO_ALL_CLUSTERS_NOT)
  public void setApplyToAllClustersNot_JsonNullable(JsonNullable<Boolean> applyToAllClustersNot) {
    this.applyToAllClustersNot = applyToAllClustersNot;
  }

  public void setApplyToAllClustersNot(Boolean applyToAllClustersNot) {
    this.applyToAllClustersNot = JsonNullable.<Boolean>of(applyToAllClustersNot);
  }


  public EntityFilterWhereInput clustersEvery(ClusterWhereInput clustersEvery) {
    this.clustersEvery = JsonNullable.<ClusterWhereInput>of(clustersEvery);
    return this;
  }

   /**
   * Get clustersEvery
   * @return clustersEvery
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public ClusterWhereInput getClustersEvery() {
        return clustersEvery.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_CLUSTERS_EVERY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<ClusterWhereInput> getClustersEvery_JsonNullable() {
    return clustersEvery;
  }
  
  @JsonProperty(JSON_PROPERTY_CLUSTERS_EVERY)
  public void setClustersEvery_JsonNullable(JsonNullable<ClusterWhereInput> clustersEvery) {
    this.clustersEvery = clustersEvery;
  }

  public void setClustersEvery(ClusterWhereInput clustersEvery) {
    this.clustersEvery = JsonNullable.<ClusterWhereInput>of(clustersEvery);
  }


  public EntityFilterWhereInput clustersNone(ClusterWhereInput clustersNone) {
    this.clustersNone = JsonNullable.<ClusterWhereInput>of(clustersNone);
    return this;
  }

   /**
   * Get clustersNone
   * @return clustersNone
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public ClusterWhereInput getClustersNone() {
        return clustersNone.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_CLUSTERS_NONE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<ClusterWhereInput> getClustersNone_JsonNullable() {
    return clustersNone;
  }
  
  @JsonProperty(JSON_PROPERTY_CLUSTERS_NONE)
  public void setClustersNone_JsonNullable(JsonNullable<ClusterWhereInput> clustersNone) {
    this.clustersNone = clustersNone;
  }

  public void setClustersNone(ClusterWhereInput clustersNone) {
    this.clustersNone = JsonNullable.<ClusterWhereInput>of(clustersNone);
  }


  public EntityFilterWhereInput clustersSome(ClusterWhereInput clustersSome) {
    this.clustersSome = JsonNullable.<ClusterWhereInput>of(clustersSome);
    return this;
  }

   /**
   * Get clustersSome
   * @return clustersSome
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public ClusterWhereInput getClustersSome() {
        return clustersSome.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_CLUSTERS_SOME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<ClusterWhereInput> getClustersSome_JsonNullable() {
    return clustersSome;
  }
  
  @JsonProperty(JSON_PROPERTY_CLUSTERS_SOME)
  public void setClustersSome_JsonNullable(JsonNullable<ClusterWhereInput> clustersSome) {
    this.clustersSome = clustersSome;
  }

  public void setClustersSome(ClusterWhereInput clustersSome) {
    this.clustersSome = JsonNullable.<ClusterWhereInput>of(clustersSome);
  }


  public EntityFilterWhereInput entityType(EntityType entityType) {
    this.entityType = JsonNullable.<EntityType>of(entityType);
    return this;
  }

   /**
   * Get entityType
   * @return entityType
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public EntityType getEntityType() {
        return entityType.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_ENTITY_TYPE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<EntityType> getEntityType_JsonNullable() {
    return entityType;
  }
  
  @JsonProperty(JSON_PROPERTY_ENTITY_TYPE)
  public void setEntityType_JsonNullable(JsonNullable<EntityType> entityType) {
    this.entityType = entityType;
  }

  public void setEntityType(EntityType entityType) {
    this.entityType = JsonNullable.<EntityType>of(entityType);
  }


  public EntityFilterWhereInput entityTypeIn(List<EntityType> entityTypeIn) {
    this.entityTypeIn = JsonNullable.<List<EntityType>>of(entityTypeIn);
    return this;
  }

  public EntityFilterWhereInput addEntityTypeInItem(EntityType entityTypeInItem) {
    if (this.entityTypeIn == null || !this.entityTypeIn.isPresent()) {
      this.entityTypeIn = JsonNullable.<List<EntityType>>of(new ArrayList<>());
    }
    try {
      this.entityTypeIn.get().add(entityTypeInItem);
    } catch (java.util.NoSuchElementException e) {
      // this can never happen, as we make sure above that the value is present
    }
    return this;
  }

   /**
   * Get entityTypeIn
   * @return entityTypeIn
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public List<EntityType> getEntityTypeIn() {
        return entityTypeIn.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_ENTITY_TYPE_IN)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<List<EntityType>> getEntityTypeIn_JsonNullable() {
    return entityTypeIn;
  }
  
  @JsonProperty(JSON_PROPERTY_ENTITY_TYPE_IN)
  public void setEntityTypeIn_JsonNullable(JsonNullable<List<EntityType>> entityTypeIn) {
    this.entityTypeIn = entityTypeIn;
  }

  public void setEntityTypeIn(List<EntityType> entityTypeIn) {
    this.entityTypeIn = JsonNullable.<List<EntityType>>of(entityTypeIn);
  }


  public EntityFilterWhereInput entityTypeNot(EntityType entityTypeNot) {
    this.entityTypeNot = JsonNullable.<EntityType>of(entityTypeNot);
    return this;
  }

   /**
   * Get entityTypeNot
   * @return entityTypeNot
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public EntityType getEntityTypeNot() {
        return entityTypeNot.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_ENTITY_TYPE_NOT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<EntityType> getEntityTypeNot_JsonNullable() {
    return entityTypeNot;
  }
  
  @JsonProperty(JSON_PROPERTY_ENTITY_TYPE_NOT)
  public void setEntityTypeNot_JsonNullable(JsonNullable<EntityType> entityTypeNot) {
    this.entityTypeNot = entityTypeNot;
  }

  public void setEntityTypeNot(EntityType entityTypeNot) {
    this.entityTypeNot = JsonNullable.<EntityType>of(entityTypeNot);
  }


  public EntityFilterWhereInput entityTypeNotIn(List<EntityType> entityTypeNotIn) {
    this.entityTypeNotIn = JsonNullable.<List<EntityType>>of(entityTypeNotIn);
    return this;
  }

  public EntityFilterWhereInput addEntityTypeNotInItem(EntityType entityTypeNotInItem) {
    if (this.entityTypeNotIn == null || !this.entityTypeNotIn.isPresent()) {
      this.entityTypeNotIn = JsonNullable.<List<EntityType>>of(new ArrayList<>());
    }
    try {
      this.entityTypeNotIn.get().add(entityTypeNotInItem);
    } catch (java.util.NoSuchElementException e) {
      // this can never happen, as we make sure above that the value is present
    }
    return this;
  }

   /**
   * Get entityTypeNotIn
   * @return entityTypeNotIn
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public List<EntityType> getEntityTypeNotIn() {
        return entityTypeNotIn.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_ENTITY_TYPE_NOT_IN)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<List<EntityType>> getEntityTypeNotIn_JsonNullable() {
    return entityTypeNotIn;
  }
  
  @JsonProperty(JSON_PROPERTY_ENTITY_TYPE_NOT_IN)
  public void setEntityTypeNotIn_JsonNullable(JsonNullable<List<EntityType>> entityTypeNotIn) {
    this.entityTypeNotIn = entityTypeNotIn;
  }

  public void setEntityTypeNotIn(List<EntityType> entityTypeNotIn) {
    this.entityTypeNotIn = JsonNullable.<List<EntityType>>of(entityTypeNotIn);
  }


  public EntityFilterWhereInput execFailedClusterEvery(ClusterWhereInput execFailedClusterEvery) {
    this.execFailedClusterEvery = JsonNullable.<ClusterWhereInput>of(execFailedClusterEvery);
    return this;
  }

   /**
   * Get execFailedClusterEvery
   * @return execFailedClusterEvery
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public ClusterWhereInput getExecFailedClusterEvery() {
        return execFailedClusterEvery.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_EXEC_FAILED_CLUSTER_EVERY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<ClusterWhereInput> getExecFailedClusterEvery_JsonNullable() {
    return execFailedClusterEvery;
  }
  
  @JsonProperty(JSON_PROPERTY_EXEC_FAILED_CLUSTER_EVERY)
  public void setExecFailedClusterEvery_JsonNullable(JsonNullable<ClusterWhereInput> execFailedClusterEvery) {
    this.execFailedClusterEvery = execFailedClusterEvery;
  }

  public void setExecFailedClusterEvery(ClusterWhereInput execFailedClusterEvery) {
    this.execFailedClusterEvery = JsonNullable.<ClusterWhereInput>of(execFailedClusterEvery);
  }


  public EntityFilterWhereInput execFailedClusterNone(ClusterWhereInput execFailedClusterNone) {
    this.execFailedClusterNone = JsonNullable.<ClusterWhereInput>of(execFailedClusterNone);
    return this;
  }

   /**
   * Get execFailedClusterNone
   * @return execFailedClusterNone
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public ClusterWhereInput getExecFailedClusterNone() {
        return execFailedClusterNone.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_EXEC_FAILED_CLUSTER_NONE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<ClusterWhereInput> getExecFailedClusterNone_JsonNullable() {
    return execFailedClusterNone;
  }
  
  @JsonProperty(JSON_PROPERTY_EXEC_FAILED_CLUSTER_NONE)
  public void setExecFailedClusterNone_JsonNullable(JsonNullable<ClusterWhereInput> execFailedClusterNone) {
    this.execFailedClusterNone = execFailedClusterNone;
  }

  public void setExecFailedClusterNone(ClusterWhereInput execFailedClusterNone) {
    this.execFailedClusterNone = JsonNullable.<ClusterWhereInput>of(execFailedClusterNone);
  }


  public EntityFilterWhereInput execFailedClusterSome(ClusterWhereInput execFailedClusterSome) {
    this.execFailedClusterSome = JsonNullable.<ClusterWhereInput>of(execFailedClusterSome);
    return this;
  }

   /**
   * Get execFailedClusterSome
   * @return execFailedClusterSome
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public ClusterWhereInput getExecFailedClusterSome() {
        return execFailedClusterSome.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_EXEC_FAILED_CLUSTER_SOME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<ClusterWhereInput> getExecFailedClusterSome_JsonNullable() {
    return execFailedClusterSome;
  }
  
  @JsonProperty(JSON_PROPERTY_EXEC_FAILED_CLUSTER_SOME)
  public void setExecFailedClusterSome_JsonNullable(JsonNullable<ClusterWhereInput> execFailedClusterSome) {
    this.execFailedClusterSome = execFailedClusterSome;
  }

  public void setExecFailedClusterSome(ClusterWhereInput execFailedClusterSome) {
    this.execFailedClusterSome = JsonNullable.<ClusterWhereInput>of(execFailedClusterSome);
  }


  public EntityFilterWhereInput filterStatus(FilterStatus filterStatus) {
    this.filterStatus = JsonNullable.<FilterStatus>of(filterStatus);
    return this;
  }

   /**
   * Get filterStatus
   * @return filterStatus
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public FilterStatus getFilterStatus() {
        return filterStatus.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_FILTER_STATUS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<FilterStatus> getFilterStatus_JsonNullable() {
    return filterStatus;
  }
  
  @JsonProperty(JSON_PROPERTY_FILTER_STATUS)
  public void setFilterStatus_JsonNullable(JsonNullable<FilterStatus> filterStatus) {
    this.filterStatus = filterStatus;
  }

  public void setFilterStatus(FilterStatus filterStatus) {
    this.filterStatus = JsonNullable.<FilterStatus>of(filterStatus);
  }


  public EntityFilterWhereInput filterStatusIn(List<FilterStatus> filterStatusIn) {
    this.filterStatusIn = JsonNullable.<List<FilterStatus>>of(filterStatusIn);
    return this;
  }

  public EntityFilterWhereInput addFilterStatusInItem(FilterStatus filterStatusInItem) {
    if (this.filterStatusIn == null || !this.filterStatusIn.isPresent()) {
      this.filterStatusIn = JsonNullable.<List<FilterStatus>>of(new ArrayList<>());
    }
    try {
      this.filterStatusIn.get().add(filterStatusInItem);
    } catch (java.util.NoSuchElementException e) {
      // this can never happen, as we make sure above that the value is present
    }
    return this;
  }

   /**
   * Get filterStatusIn
   * @return filterStatusIn
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public List<FilterStatus> getFilterStatusIn() {
        return filterStatusIn.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_FILTER_STATUS_IN)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<List<FilterStatus>> getFilterStatusIn_JsonNullable() {
    return filterStatusIn;
  }
  
  @JsonProperty(JSON_PROPERTY_FILTER_STATUS_IN)
  public void setFilterStatusIn_JsonNullable(JsonNullable<List<FilterStatus>> filterStatusIn) {
    this.filterStatusIn = filterStatusIn;
  }

  public void setFilterStatusIn(List<FilterStatus> filterStatusIn) {
    this.filterStatusIn = JsonNullable.<List<FilterStatus>>of(filterStatusIn);
  }


  public EntityFilterWhereInput filterStatusNot(FilterStatus filterStatusNot) {
    this.filterStatusNot = JsonNullable.<FilterStatus>of(filterStatusNot);
    return this;
  }

   /**
   * Get filterStatusNot
   * @return filterStatusNot
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public FilterStatus getFilterStatusNot() {
        return filterStatusNot.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_FILTER_STATUS_NOT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<FilterStatus> getFilterStatusNot_JsonNullable() {
    return filterStatusNot;
  }
  
  @JsonProperty(JSON_PROPERTY_FILTER_STATUS_NOT)
  public void setFilterStatusNot_JsonNullable(JsonNullable<FilterStatus> filterStatusNot) {
    this.filterStatusNot = filterStatusNot;
  }

  public void setFilterStatusNot(FilterStatus filterStatusNot) {
    this.filterStatusNot = JsonNullable.<FilterStatus>of(filterStatusNot);
  }


  public EntityFilterWhereInput filterStatusNotIn(List<FilterStatus> filterStatusNotIn) {
    this.filterStatusNotIn = JsonNullable.<List<FilterStatus>>of(filterStatusNotIn);
    return this;
  }

  public EntityFilterWhereInput addFilterStatusNotInItem(FilterStatus filterStatusNotInItem) {
    if (this.filterStatusNotIn == null || !this.filterStatusNotIn.isPresent()) {
      this.filterStatusNotIn = JsonNullable.<List<FilterStatus>>of(new ArrayList<>());
    }
    try {
      this.filterStatusNotIn.get().add(filterStatusNotInItem);
    } catch (java.util.NoSuchElementException e) {
      // this can never happen, as we make sure above that the value is present
    }
    return this;
  }

   /**
   * Get filterStatusNotIn
   * @return filterStatusNotIn
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public List<FilterStatus> getFilterStatusNotIn() {
        return filterStatusNotIn.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_FILTER_STATUS_NOT_IN)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<List<FilterStatus>> getFilterStatusNotIn_JsonNullable() {
    return filterStatusNotIn;
  }
  
  @JsonProperty(JSON_PROPERTY_FILTER_STATUS_NOT_IN)
  public void setFilterStatusNotIn_JsonNullable(JsonNullable<List<FilterStatus>> filterStatusNotIn) {
    this.filterStatusNotIn = filterStatusNotIn;
  }

  public void setFilterStatusNotIn(List<FilterStatus> filterStatusNotIn) {
    this.filterStatusNotIn = JsonNullable.<List<FilterStatus>>of(filterStatusNotIn);
  }


  public EntityFilterWhereInput id(String id) {
    this.id = JsonNullable.<String>of(id);
    return this;
  }

   /**
   * Get id
   * @return id
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getId() {
        return id.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getId_JsonNullable() {
    return id;
  }
  
  @JsonProperty(JSON_PROPERTY_ID)
  public void setId_JsonNullable(JsonNullable<String> id) {
    this.id = id;
  }

  public void setId(String id) {
    this.id = JsonNullable.<String>of(id);
  }


  public EntityFilterWhereInput idContains(String idContains) {
    this.idContains = JsonNullable.<String>of(idContains);
    return this;
  }

   /**
   * Get idContains
   * @return idContains
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getIdContains() {
        return idContains.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_ID_CONTAINS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getIdContains_JsonNullable() {
    return idContains;
  }
  
  @JsonProperty(JSON_PROPERTY_ID_CONTAINS)
  public void setIdContains_JsonNullable(JsonNullable<String> idContains) {
    this.idContains = idContains;
  }

  public void setIdContains(String idContains) {
    this.idContains = JsonNullable.<String>of(idContains);
  }


  public EntityFilterWhereInput idEndsWith(String idEndsWith) {
    this.idEndsWith = JsonNullable.<String>of(idEndsWith);
    return this;
  }

   /**
   * Get idEndsWith
   * @return idEndsWith
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getIdEndsWith() {
        return idEndsWith.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_ID_ENDS_WITH)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getIdEndsWith_JsonNullable() {
    return idEndsWith;
  }
  
  @JsonProperty(JSON_PROPERTY_ID_ENDS_WITH)
  public void setIdEndsWith_JsonNullable(JsonNullable<String> idEndsWith) {
    this.idEndsWith = idEndsWith;
  }

  public void setIdEndsWith(String idEndsWith) {
    this.idEndsWith = JsonNullable.<String>of(idEndsWith);
  }


  public EntityFilterWhereInput idGt(String idGt) {
    this.idGt = JsonNullable.<String>of(idGt);
    return this;
  }

   /**
   * Get idGt
   * @return idGt
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getIdGt() {
        return idGt.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_ID_GT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getIdGt_JsonNullable() {
    return idGt;
  }
  
  @JsonProperty(JSON_PROPERTY_ID_GT)
  public void setIdGt_JsonNullable(JsonNullable<String> idGt) {
    this.idGt = idGt;
  }

  public void setIdGt(String idGt) {
    this.idGt = JsonNullable.<String>of(idGt);
  }


  public EntityFilterWhereInput idGte(String idGte) {
    this.idGte = JsonNullable.<String>of(idGte);
    return this;
  }

   /**
   * Get idGte
   * @return idGte
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getIdGte() {
        return idGte.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_ID_GTE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getIdGte_JsonNullable() {
    return idGte;
  }
  
  @JsonProperty(JSON_PROPERTY_ID_GTE)
  public void setIdGte_JsonNullable(JsonNullable<String> idGte) {
    this.idGte = idGte;
  }

  public void setIdGte(String idGte) {
    this.idGte = JsonNullable.<String>of(idGte);
  }


  public EntityFilterWhereInput idIn(List<String> idIn) {
    this.idIn = JsonNullable.<List<String>>of(idIn);
    return this;
  }

  public EntityFilterWhereInput addIdInItem(String idInItem) {
    if (this.idIn == null || !this.idIn.isPresent()) {
      this.idIn = JsonNullable.<List<String>>of(new ArrayList<>());
    }
    try {
      this.idIn.get().add(idInItem);
    } catch (java.util.NoSuchElementException e) {
      // this can never happen, as we make sure above that the value is present
    }
    return this;
  }

   /**
   * Get idIn
   * @return idIn
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public List<String> getIdIn() {
        return idIn.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_ID_IN)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<List<String>> getIdIn_JsonNullable() {
    return idIn;
  }
  
  @JsonProperty(JSON_PROPERTY_ID_IN)
  public void setIdIn_JsonNullable(JsonNullable<List<String>> idIn) {
    this.idIn = idIn;
  }

  public void setIdIn(List<String> idIn) {
    this.idIn = JsonNullable.<List<String>>of(idIn);
  }


  public EntityFilterWhereInput idLt(String idLt) {
    this.idLt = JsonNullable.<String>of(idLt);
    return this;
  }

   /**
   * Get idLt
   * @return idLt
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getIdLt() {
        return idLt.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_ID_LT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getIdLt_JsonNullable() {
    return idLt;
  }
  
  @JsonProperty(JSON_PROPERTY_ID_LT)
  public void setIdLt_JsonNullable(JsonNullable<String> idLt) {
    this.idLt = idLt;
  }

  public void setIdLt(String idLt) {
    this.idLt = JsonNullable.<String>of(idLt);
  }


  public EntityFilterWhereInput idLte(String idLte) {
    this.idLte = JsonNullable.<String>of(idLte);
    return this;
  }

   /**
   * Get idLte
   * @return idLte
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getIdLte() {
        return idLte.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_ID_LTE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getIdLte_JsonNullable() {
    return idLte;
  }
  
  @JsonProperty(JSON_PROPERTY_ID_LTE)
  public void setIdLte_JsonNullable(JsonNullable<String> idLte) {
    this.idLte = idLte;
  }

  public void setIdLte(String idLte) {
    this.idLte = JsonNullable.<String>of(idLte);
  }


  public EntityFilterWhereInput idNot(String idNot) {
    this.idNot = JsonNullable.<String>of(idNot);
    return this;
  }

   /**
   * Get idNot
   * @return idNot
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getIdNot() {
        return idNot.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_ID_NOT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getIdNot_JsonNullable() {
    return idNot;
  }
  
  @JsonProperty(JSON_PROPERTY_ID_NOT)
  public void setIdNot_JsonNullable(JsonNullable<String> idNot) {
    this.idNot = idNot;
  }

  public void setIdNot(String idNot) {
    this.idNot = JsonNullable.<String>of(idNot);
  }


  public EntityFilterWhereInput idNotContains(String idNotContains) {
    this.idNotContains = JsonNullable.<String>of(idNotContains);
    return this;
  }

   /**
   * Get idNotContains
   * @return idNotContains
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getIdNotContains() {
        return idNotContains.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_ID_NOT_CONTAINS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getIdNotContains_JsonNullable() {
    return idNotContains;
  }
  
  @JsonProperty(JSON_PROPERTY_ID_NOT_CONTAINS)
  public void setIdNotContains_JsonNullable(JsonNullable<String> idNotContains) {
    this.idNotContains = idNotContains;
  }

  public void setIdNotContains(String idNotContains) {
    this.idNotContains = JsonNullable.<String>of(idNotContains);
  }


  public EntityFilterWhereInput idNotEndsWith(String idNotEndsWith) {
    this.idNotEndsWith = JsonNullable.<String>of(idNotEndsWith);
    return this;
  }

   /**
   * Get idNotEndsWith
   * @return idNotEndsWith
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getIdNotEndsWith() {
        return idNotEndsWith.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_ID_NOT_ENDS_WITH)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getIdNotEndsWith_JsonNullable() {
    return idNotEndsWith;
  }
  
  @JsonProperty(JSON_PROPERTY_ID_NOT_ENDS_WITH)
  public void setIdNotEndsWith_JsonNullable(JsonNullable<String> idNotEndsWith) {
    this.idNotEndsWith = idNotEndsWith;
  }

  public void setIdNotEndsWith(String idNotEndsWith) {
    this.idNotEndsWith = JsonNullable.<String>of(idNotEndsWith);
  }


  public EntityFilterWhereInput idNotIn(List<String> idNotIn) {
    this.idNotIn = JsonNullable.<List<String>>of(idNotIn);
    return this;
  }

  public EntityFilterWhereInput addIdNotInItem(String idNotInItem) {
    if (this.idNotIn == null || !this.idNotIn.isPresent()) {
      this.idNotIn = JsonNullable.<List<String>>of(new ArrayList<>());
    }
    try {
      this.idNotIn.get().add(idNotInItem);
    } catch (java.util.NoSuchElementException e) {
      // this can never happen, as we make sure above that the value is present
    }
    return this;
  }

   /**
   * Get idNotIn
   * @return idNotIn
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public List<String> getIdNotIn() {
        return idNotIn.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_ID_NOT_IN)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<List<String>> getIdNotIn_JsonNullable() {
    return idNotIn;
  }
  
  @JsonProperty(JSON_PROPERTY_ID_NOT_IN)
  public void setIdNotIn_JsonNullable(JsonNullable<List<String>> idNotIn) {
    this.idNotIn = idNotIn;
  }

  public void setIdNotIn(List<String> idNotIn) {
    this.idNotIn = JsonNullable.<List<String>>of(idNotIn);
  }


  public EntityFilterWhereInput idNotStartsWith(String idNotStartsWith) {
    this.idNotStartsWith = JsonNullable.<String>of(idNotStartsWith);
    return this;
  }

   /**
   * Get idNotStartsWith
   * @return idNotStartsWith
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getIdNotStartsWith() {
        return idNotStartsWith.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_ID_NOT_STARTS_WITH)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getIdNotStartsWith_JsonNullable() {
    return idNotStartsWith;
  }
  
  @JsonProperty(JSON_PROPERTY_ID_NOT_STARTS_WITH)
  public void setIdNotStartsWith_JsonNullable(JsonNullable<String> idNotStartsWith) {
    this.idNotStartsWith = idNotStartsWith;
  }

  public void setIdNotStartsWith(String idNotStartsWith) {
    this.idNotStartsWith = JsonNullable.<String>of(idNotStartsWith);
  }


  public EntityFilterWhereInput idStartsWith(String idStartsWith) {
    this.idStartsWith = JsonNullable.<String>of(idStartsWith);
    return this;
  }

   /**
   * Get idStartsWith
   * @return idStartsWith
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getIdStartsWith() {
        return idStartsWith.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_ID_STARTS_WITH)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getIdStartsWith_JsonNullable() {
    return idStartsWith;
  }
  
  @JsonProperty(JSON_PROPERTY_ID_STARTS_WITH)
  public void setIdStartsWith_JsonNullable(JsonNullable<String> idStartsWith) {
    this.idStartsWith = idStartsWith;
  }

  public void setIdStartsWith(String idStartsWith) {
    this.idStartsWith = JsonNullable.<String>of(idStartsWith);
  }


  public EntityFilterWhereInput lastExecutedAt(String lastExecutedAt) {
    this.lastExecutedAt = JsonNullable.<String>of(lastExecutedAt);
    return this;
  }

   /**
   * Get lastExecutedAt
   * @return lastExecutedAt
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getLastExecutedAt() {
        return lastExecutedAt.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_LAST_EXECUTED_AT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getLastExecutedAt_JsonNullable() {
    return lastExecutedAt;
  }
  
  @JsonProperty(JSON_PROPERTY_LAST_EXECUTED_AT)
  public void setLastExecutedAt_JsonNullable(JsonNullable<String> lastExecutedAt) {
    this.lastExecutedAt = lastExecutedAt;
  }

  public void setLastExecutedAt(String lastExecutedAt) {
    this.lastExecutedAt = JsonNullable.<String>of(lastExecutedAt);
  }


  public EntityFilterWhereInput lastExecutedAtGt(String lastExecutedAtGt) {
    this.lastExecutedAtGt = JsonNullable.<String>of(lastExecutedAtGt);
    return this;
  }

   /**
   * Get lastExecutedAtGt
   * @return lastExecutedAtGt
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getLastExecutedAtGt() {
        return lastExecutedAtGt.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_LAST_EXECUTED_AT_GT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getLastExecutedAtGt_JsonNullable() {
    return lastExecutedAtGt;
  }
  
  @JsonProperty(JSON_PROPERTY_LAST_EXECUTED_AT_GT)
  public void setLastExecutedAtGt_JsonNullable(JsonNullable<String> lastExecutedAtGt) {
    this.lastExecutedAtGt = lastExecutedAtGt;
  }

  public void setLastExecutedAtGt(String lastExecutedAtGt) {
    this.lastExecutedAtGt = JsonNullable.<String>of(lastExecutedAtGt);
  }


  public EntityFilterWhereInput lastExecutedAtGte(String lastExecutedAtGte) {
    this.lastExecutedAtGte = JsonNullable.<String>of(lastExecutedAtGte);
    return this;
  }

   /**
   * Get lastExecutedAtGte
   * @return lastExecutedAtGte
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getLastExecutedAtGte() {
        return lastExecutedAtGte.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_LAST_EXECUTED_AT_GTE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getLastExecutedAtGte_JsonNullable() {
    return lastExecutedAtGte;
  }
  
  @JsonProperty(JSON_PROPERTY_LAST_EXECUTED_AT_GTE)
  public void setLastExecutedAtGte_JsonNullable(JsonNullable<String> lastExecutedAtGte) {
    this.lastExecutedAtGte = lastExecutedAtGte;
  }

  public void setLastExecutedAtGte(String lastExecutedAtGte) {
    this.lastExecutedAtGte = JsonNullable.<String>of(lastExecutedAtGte);
  }


  public EntityFilterWhereInput lastExecutedAtIn(List<String> lastExecutedAtIn) {
    this.lastExecutedAtIn = JsonNullable.<List<String>>of(lastExecutedAtIn);
    return this;
  }

  public EntityFilterWhereInput addLastExecutedAtInItem(String lastExecutedAtInItem) {
    if (this.lastExecutedAtIn == null || !this.lastExecutedAtIn.isPresent()) {
      this.lastExecutedAtIn = JsonNullable.<List<String>>of(new ArrayList<>());
    }
    try {
      this.lastExecutedAtIn.get().add(lastExecutedAtInItem);
    } catch (java.util.NoSuchElementException e) {
      // this can never happen, as we make sure above that the value is present
    }
    return this;
  }

   /**
   * Get lastExecutedAtIn
   * @return lastExecutedAtIn
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public List<String> getLastExecutedAtIn() {
        return lastExecutedAtIn.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_LAST_EXECUTED_AT_IN)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<List<String>> getLastExecutedAtIn_JsonNullable() {
    return lastExecutedAtIn;
  }
  
  @JsonProperty(JSON_PROPERTY_LAST_EXECUTED_AT_IN)
  public void setLastExecutedAtIn_JsonNullable(JsonNullable<List<String>> lastExecutedAtIn) {
    this.lastExecutedAtIn = lastExecutedAtIn;
  }

  public void setLastExecutedAtIn(List<String> lastExecutedAtIn) {
    this.lastExecutedAtIn = JsonNullable.<List<String>>of(lastExecutedAtIn);
  }


  public EntityFilterWhereInput lastExecutedAtLt(String lastExecutedAtLt) {
    this.lastExecutedAtLt = JsonNullable.<String>of(lastExecutedAtLt);
    return this;
  }

   /**
   * Get lastExecutedAtLt
   * @return lastExecutedAtLt
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getLastExecutedAtLt() {
        return lastExecutedAtLt.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_LAST_EXECUTED_AT_LT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getLastExecutedAtLt_JsonNullable() {
    return lastExecutedAtLt;
  }
  
  @JsonProperty(JSON_PROPERTY_LAST_EXECUTED_AT_LT)
  public void setLastExecutedAtLt_JsonNullable(JsonNullable<String> lastExecutedAtLt) {
    this.lastExecutedAtLt = lastExecutedAtLt;
  }

  public void setLastExecutedAtLt(String lastExecutedAtLt) {
    this.lastExecutedAtLt = JsonNullable.<String>of(lastExecutedAtLt);
  }


  public EntityFilterWhereInput lastExecutedAtLte(String lastExecutedAtLte) {
    this.lastExecutedAtLte = JsonNullable.<String>of(lastExecutedAtLte);
    return this;
  }

   /**
   * Get lastExecutedAtLte
   * @return lastExecutedAtLte
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getLastExecutedAtLte() {
        return lastExecutedAtLte.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_LAST_EXECUTED_AT_LTE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getLastExecutedAtLte_JsonNullable() {
    return lastExecutedAtLte;
  }
  
  @JsonProperty(JSON_PROPERTY_LAST_EXECUTED_AT_LTE)
  public void setLastExecutedAtLte_JsonNullable(JsonNullable<String> lastExecutedAtLte) {
    this.lastExecutedAtLte = lastExecutedAtLte;
  }

  public void setLastExecutedAtLte(String lastExecutedAtLte) {
    this.lastExecutedAtLte = JsonNullable.<String>of(lastExecutedAtLte);
  }


  public EntityFilterWhereInput lastExecutedAtNot(String lastExecutedAtNot) {
    this.lastExecutedAtNot = JsonNullable.<String>of(lastExecutedAtNot);
    return this;
  }

   /**
   * Get lastExecutedAtNot
   * @return lastExecutedAtNot
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getLastExecutedAtNot() {
        return lastExecutedAtNot.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_LAST_EXECUTED_AT_NOT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getLastExecutedAtNot_JsonNullable() {
    return lastExecutedAtNot;
  }
  
  @JsonProperty(JSON_PROPERTY_LAST_EXECUTED_AT_NOT)
  public void setLastExecutedAtNot_JsonNullable(JsonNullable<String> lastExecutedAtNot) {
    this.lastExecutedAtNot = lastExecutedAtNot;
  }

  public void setLastExecutedAtNot(String lastExecutedAtNot) {
    this.lastExecutedAtNot = JsonNullable.<String>of(lastExecutedAtNot);
  }


  public EntityFilterWhereInput lastExecutedAtNotIn(List<String> lastExecutedAtNotIn) {
    this.lastExecutedAtNotIn = JsonNullable.<List<String>>of(lastExecutedAtNotIn);
    return this;
  }

  public EntityFilterWhereInput addLastExecutedAtNotInItem(String lastExecutedAtNotInItem) {
    if (this.lastExecutedAtNotIn == null || !this.lastExecutedAtNotIn.isPresent()) {
      this.lastExecutedAtNotIn = JsonNullable.<List<String>>of(new ArrayList<>());
    }
    try {
      this.lastExecutedAtNotIn.get().add(lastExecutedAtNotInItem);
    } catch (java.util.NoSuchElementException e) {
      // this can never happen, as we make sure above that the value is present
    }
    return this;
  }

   /**
   * Get lastExecutedAtNotIn
   * @return lastExecutedAtNotIn
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public List<String> getLastExecutedAtNotIn() {
        return lastExecutedAtNotIn.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_LAST_EXECUTED_AT_NOT_IN)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<List<String>> getLastExecutedAtNotIn_JsonNullable() {
    return lastExecutedAtNotIn;
  }
  
  @JsonProperty(JSON_PROPERTY_LAST_EXECUTED_AT_NOT_IN)
  public void setLastExecutedAtNotIn_JsonNullable(JsonNullable<List<String>> lastExecutedAtNotIn) {
    this.lastExecutedAtNotIn = lastExecutedAtNotIn;
  }

  public void setLastExecutedAtNotIn(List<String> lastExecutedAtNotIn) {
    this.lastExecutedAtNotIn = JsonNullable.<List<String>>of(lastExecutedAtNotIn);
  }


  public EntityFilterWhereInput name(String name) {
    this.name = JsonNullable.<String>of(name);
    return this;
  }

   /**
   * Get name
   * @return name
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getName() {
        return name.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getName_JsonNullable() {
    return name;
  }
  
  @JsonProperty(JSON_PROPERTY_NAME)
  public void setName_JsonNullable(JsonNullable<String> name) {
    this.name = name;
  }

  public void setName(String name) {
    this.name = JsonNullable.<String>of(name);
  }


  public EntityFilterWhereInput nameContains(String nameContains) {
    this.nameContains = JsonNullable.<String>of(nameContains);
    return this;
  }

   /**
   * Get nameContains
   * @return nameContains
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getNameContains() {
        return nameContains.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_NAME_CONTAINS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getNameContains_JsonNullable() {
    return nameContains;
  }
  
  @JsonProperty(JSON_PROPERTY_NAME_CONTAINS)
  public void setNameContains_JsonNullable(JsonNullable<String> nameContains) {
    this.nameContains = nameContains;
  }

  public void setNameContains(String nameContains) {
    this.nameContains = JsonNullable.<String>of(nameContains);
  }


  public EntityFilterWhereInput nameEndsWith(String nameEndsWith) {
    this.nameEndsWith = JsonNullable.<String>of(nameEndsWith);
    return this;
  }

   /**
   * Get nameEndsWith
   * @return nameEndsWith
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getNameEndsWith() {
        return nameEndsWith.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_NAME_ENDS_WITH)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getNameEndsWith_JsonNullable() {
    return nameEndsWith;
  }
  
  @JsonProperty(JSON_PROPERTY_NAME_ENDS_WITH)
  public void setNameEndsWith_JsonNullable(JsonNullable<String> nameEndsWith) {
    this.nameEndsWith = nameEndsWith;
  }

  public void setNameEndsWith(String nameEndsWith) {
    this.nameEndsWith = JsonNullable.<String>of(nameEndsWith);
  }


  public EntityFilterWhereInput nameGt(String nameGt) {
    this.nameGt = JsonNullable.<String>of(nameGt);
    return this;
  }

   /**
   * Get nameGt
   * @return nameGt
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getNameGt() {
        return nameGt.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_NAME_GT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getNameGt_JsonNullable() {
    return nameGt;
  }
  
  @JsonProperty(JSON_PROPERTY_NAME_GT)
  public void setNameGt_JsonNullable(JsonNullable<String> nameGt) {
    this.nameGt = nameGt;
  }

  public void setNameGt(String nameGt) {
    this.nameGt = JsonNullable.<String>of(nameGt);
  }


  public EntityFilterWhereInput nameGte(String nameGte) {
    this.nameGte = JsonNullable.<String>of(nameGte);
    return this;
  }

   /**
   * Get nameGte
   * @return nameGte
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getNameGte() {
        return nameGte.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_NAME_GTE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getNameGte_JsonNullable() {
    return nameGte;
  }
  
  @JsonProperty(JSON_PROPERTY_NAME_GTE)
  public void setNameGte_JsonNullable(JsonNullable<String> nameGte) {
    this.nameGte = nameGte;
  }

  public void setNameGte(String nameGte) {
    this.nameGte = JsonNullable.<String>of(nameGte);
  }


  public EntityFilterWhereInput nameIn(List<String> nameIn) {
    this.nameIn = JsonNullable.<List<String>>of(nameIn);
    return this;
  }

  public EntityFilterWhereInput addNameInItem(String nameInItem) {
    if (this.nameIn == null || !this.nameIn.isPresent()) {
      this.nameIn = JsonNullable.<List<String>>of(new ArrayList<>());
    }
    try {
      this.nameIn.get().add(nameInItem);
    } catch (java.util.NoSuchElementException e) {
      // this can never happen, as we make sure above that the value is present
    }
    return this;
  }

   /**
   * Get nameIn
   * @return nameIn
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public List<String> getNameIn() {
        return nameIn.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_NAME_IN)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<List<String>> getNameIn_JsonNullable() {
    return nameIn;
  }
  
  @JsonProperty(JSON_PROPERTY_NAME_IN)
  public void setNameIn_JsonNullable(JsonNullable<List<String>> nameIn) {
    this.nameIn = nameIn;
  }

  public void setNameIn(List<String> nameIn) {
    this.nameIn = JsonNullable.<List<String>>of(nameIn);
  }


  public EntityFilterWhereInput nameLt(String nameLt) {
    this.nameLt = JsonNullable.<String>of(nameLt);
    return this;
  }

   /**
   * Get nameLt
   * @return nameLt
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getNameLt() {
        return nameLt.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_NAME_LT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getNameLt_JsonNullable() {
    return nameLt;
  }
  
  @JsonProperty(JSON_PROPERTY_NAME_LT)
  public void setNameLt_JsonNullable(JsonNullable<String> nameLt) {
    this.nameLt = nameLt;
  }

  public void setNameLt(String nameLt) {
    this.nameLt = JsonNullable.<String>of(nameLt);
  }


  public EntityFilterWhereInput nameLte(String nameLte) {
    this.nameLte = JsonNullable.<String>of(nameLte);
    return this;
  }

   /**
   * Get nameLte
   * @return nameLte
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getNameLte() {
        return nameLte.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_NAME_LTE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getNameLte_JsonNullable() {
    return nameLte;
  }
  
  @JsonProperty(JSON_PROPERTY_NAME_LTE)
  public void setNameLte_JsonNullable(JsonNullable<String> nameLte) {
    this.nameLte = nameLte;
  }

  public void setNameLte(String nameLte) {
    this.nameLte = JsonNullable.<String>of(nameLte);
  }


  public EntityFilterWhereInput nameNot(String nameNot) {
    this.nameNot = JsonNullable.<String>of(nameNot);
    return this;
  }

   /**
   * Get nameNot
   * @return nameNot
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getNameNot() {
        return nameNot.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_NAME_NOT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getNameNot_JsonNullable() {
    return nameNot;
  }
  
  @JsonProperty(JSON_PROPERTY_NAME_NOT)
  public void setNameNot_JsonNullable(JsonNullable<String> nameNot) {
    this.nameNot = nameNot;
  }

  public void setNameNot(String nameNot) {
    this.nameNot = JsonNullable.<String>of(nameNot);
  }


  public EntityFilterWhereInput nameNotContains(String nameNotContains) {
    this.nameNotContains = JsonNullable.<String>of(nameNotContains);
    return this;
  }

   /**
   * Get nameNotContains
   * @return nameNotContains
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getNameNotContains() {
        return nameNotContains.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_NAME_NOT_CONTAINS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getNameNotContains_JsonNullable() {
    return nameNotContains;
  }
  
  @JsonProperty(JSON_PROPERTY_NAME_NOT_CONTAINS)
  public void setNameNotContains_JsonNullable(JsonNullable<String> nameNotContains) {
    this.nameNotContains = nameNotContains;
  }

  public void setNameNotContains(String nameNotContains) {
    this.nameNotContains = JsonNullable.<String>of(nameNotContains);
  }


  public EntityFilterWhereInput nameNotEndsWith(String nameNotEndsWith) {
    this.nameNotEndsWith = JsonNullable.<String>of(nameNotEndsWith);
    return this;
  }

   /**
   * Get nameNotEndsWith
   * @return nameNotEndsWith
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getNameNotEndsWith() {
        return nameNotEndsWith.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_NAME_NOT_ENDS_WITH)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getNameNotEndsWith_JsonNullable() {
    return nameNotEndsWith;
  }
  
  @JsonProperty(JSON_PROPERTY_NAME_NOT_ENDS_WITH)
  public void setNameNotEndsWith_JsonNullable(JsonNullable<String> nameNotEndsWith) {
    this.nameNotEndsWith = nameNotEndsWith;
  }

  public void setNameNotEndsWith(String nameNotEndsWith) {
    this.nameNotEndsWith = JsonNullable.<String>of(nameNotEndsWith);
  }


  public EntityFilterWhereInput nameNotIn(List<String> nameNotIn) {
    this.nameNotIn = JsonNullable.<List<String>>of(nameNotIn);
    return this;
  }

  public EntityFilterWhereInput addNameNotInItem(String nameNotInItem) {
    if (this.nameNotIn == null || !this.nameNotIn.isPresent()) {
      this.nameNotIn = JsonNullable.<List<String>>of(new ArrayList<>());
    }
    try {
      this.nameNotIn.get().add(nameNotInItem);
    } catch (java.util.NoSuchElementException e) {
      // this can never happen, as we make sure above that the value is present
    }
    return this;
  }

   /**
   * Get nameNotIn
   * @return nameNotIn
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public List<String> getNameNotIn() {
        return nameNotIn.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_NAME_NOT_IN)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<List<String>> getNameNotIn_JsonNullable() {
    return nameNotIn;
  }
  
  @JsonProperty(JSON_PROPERTY_NAME_NOT_IN)
  public void setNameNotIn_JsonNullable(JsonNullable<List<String>> nameNotIn) {
    this.nameNotIn = nameNotIn;
  }

  public void setNameNotIn(List<String> nameNotIn) {
    this.nameNotIn = JsonNullable.<List<String>>of(nameNotIn);
  }


  public EntityFilterWhereInput nameNotStartsWith(String nameNotStartsWith) {
    this.nameNotStartsWith = JsonNullable.<String>of(nameNotStartsWith);
    return this;
  }

   /**
   * Get nameNotStartsWith
   * @return nameNotStartsWith
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getNameNotStartsWith() {
        return nameNotStartsWith.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_NAME_NOT_STARTS_WITH)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getNameNotStartsWith_JsonNullable() {
    return nameNotStartsWith;
  }
  
  @JsonProperty(JSON_PROPERTY_NAME_NOT_STARTS_WITH)
  public void setNameNotStartsWith_JsonNullable(JsonNullable<String> nameNotStartsWith) {
    this.nameNotStartsWith = nameNotStartsWith;
  }

  public void setNameNotStartsWith(String nameNotStartsWith) {
    this.nameNotStartsWith = JsonNullable.<String>of(nameNotStartsWith);
  }


  public EntityFilterWhereInput nameStartsWith(String nameStartsWith) {
    this.nameStartsWith = JsonNullable.<String>of(nameStartsWith);
    return this;
  }

   /**
   * Get nameStartsWith
   * @return nameStartsWith
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getNameStartsWith() {
        return nameStartsWith.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_NAME_STARTS_WITH)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getNameStartsWith_JsonNullable() {
    return nameStartsWith;
  }
  
  @JsonProperty(JSON_PROPERTY_NAME_STARTS_WITH)
  public void setNameStartsWith_JsonNullable(JsonNullable<String> nameStartsWith) {
    this.nameStartsWith = nameStartsWith;
  }

  public void setNameStartsWith(String nameStartsWith) {
    this.nameStartsWith = JsonNullable.<String>of(nameStartsWith);
  }


  public EntityFilterWhereInput NOT(List<EntityFilterWhereInput> NOT) {
    this.NOT = JsonNullable.<List<EntityFilterWhereInput>>of(NOT);
    return this;
  }

  public EntityFilterWhereInput addNOTItem(EntityFilterWhereInput NOTItem) {
    if (this.NOT == null || !this.NOT.isPresent()) {
      this.NOT = JsonNullable.<List<EntityFilterWhereInput>>of(new ArrayList<>());
    }
    try {
      this.NOT.get().add(NOTItem);
    } catch (java.util.NoSuchElementException e) {
      // this can never happen, as we make sure above that the value is present
    }
    return this;
  }

   /**
   * Get NOT
   * @return NOT
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public List<EntityFilterWhereInput> getNOT() {
        return NOT.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_N_O_T)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<List<EntityFilterWhereInput>> getNOT_JsonNullable() {
    return NOT;
  }
  
  @JsonProperty(JSON_PROPERTY_N_O_T)
  public void setNOT_JsonNullable(JsonNullable<List<EntityFilterWhereInput>> NOT) {
    this.NOT = NOT;
  }

  public void setNOT(List<EntityFilterWhereInput> NOT) {
    this.NOT = JsonNullable.<List<EntityFilterWhereInput>>of(NOT);
  }


  public EntityFilterWhereInput OR(List<EntityFilterWhereInput> OR) {
    this.OR = JsonNullable.<List<EntityFilterWhereInput>>of(OR);
    return this;
  }

  public EntityFilterWhereInput addORItem(EntityFilterWhereInput ORItem) {
    if (this.OR == null || !this.OR.isPresent()) {
      this.OR = JsonNullable.<List<EntityFilterWhereInput>>of(new ArrayList<>());
    }
    try {
      this.OR.get().add(ORItem);
    } catch (java.util.NoSuchElementException e) {
      // this can never happen, as we make sure above that the value is present
    }
    return this;
  }

   /**
   * Get OR
   * @return OR
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public List<EntityFilterWhereInput> getOR() {
        return OR.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_O_R)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<List<EntityFilterWhereInput>> getOR_JsonNullable() {
    return OR;
  }
  
  @JsonProperty(JSON_PROPERTY_O_R)
  public void setOR_JsonNullable(JsonNullable<List<EntityFilterWhereInput>> OR) {
    this.OR = OR;
  }

  public void setOR(List<EntityFilterWhereInput> OR) {
    this.OR = JsonNullable.<List<EntityFilterWhereInput>>of(OR);
  }


  public EntityFilterWhereInput preset(String preset) {
    this.preset = JsonNullable.<String>of(preset);
    return this;
  }

   /**
   * Get preset
   * @return preset
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getPreset() {
        return preset.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_PRESET)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getPreset_JsonNullable() {
    return preset;
  }
  
  @JsonProperty(JSON_PROPERTY_PRESET)
  public void setPreset_JsonNullable(JsonNullable<String> preset) {
    this.preset = preset;
  }

  public void setPreset(String preset) {
    this.preset = JsonNullable.<String>of(preset);
  }


  public EntityFilterWhereInput presetContains(String presetContains) {
    this.presetContains = JsonNullable.<String>of(presetContains);
    return this;
  }

   /**
   * Get presetContains
   * @return presetContains
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getPresetContains() {
        return presetContains.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_PRESET_CONTAINS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getPresetContains_JsonNullable() {
    return presetContains;
  }
  
  @JsonProperty(JSON_PROPERTY_PRESET_CONTAINS)
  public void setPresetContains_JsonNullable(JsonNullable<String> presetContains) {
    this.presetContains = presetContains;
  }

  public void setPresetContains(String presetContains) {
    this.presetContains = JsonNullable.<String>of(presetContains);
  }


  public EntityFilterWhereInput presetEndsWith(String presetEndsWith) {
    this.presetEndsWith = JsonNullable.<String>of(presetEndsWith);
    return this;
  }

   /**
   * Get presetEndsWith
   * @return presetEndsWith
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getPresetEndsWith() {
        return presetEndsWith.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_PRESET_ENDS_WITH)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getPresetEndsWith_JsonNullable() {
    return presetEndsWith;
  }
  
  @JsonProperty(JSON_PROPERTY_PRESET_ENDS_WITH)
  public void setPresetEndsWith_JsonNullable(JsonNullable<String> presetEndsWith) {
    this.presetEndsWith = presetEndsWith;
  }

  public void setPresetEndsWith(String presetEndsWith) {
    this.presetEndsWith = JsonNullable.<String>of(presetEndsWith);
  }


  public EntityFilterWhereInput presetGt(String presetGt) {
    this.presetGt = JsonNullable.<String>of(presetGt);
    return this;
  }

   /**
   * Get presetGt
   * @return presetGt
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getPresetGt() {
        return presetGt.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_PRESET_GT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getPresetGt_JsonNullable() {
    return presetGt;
  }
  
  @JsonProperty(JSON_PROPERTY_PRESET_GT)
  public void setPresetGt_JsonNullable(JsonNullable<String> presetGt) {
    this.presetGt = presetGt;
  }

  public void setPresetGt(String presetGt) {
    this.presetGt = JsonNullable.<String>of(presetGt);
  }


  public EntityFilterWhereInput presetGte(String presetGte) {
    this.presetGte = JsonNullable.<String>of(presetGte);
    return this;
  }

   /**
   * Get presetGte
   * @return presetGte
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getPresetGte() {
        return presetGte.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_PRESET_GTE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getPresetGte_JsonNullable() {
    return presetGte;
  }
  
  @JsonProperty(JSON_PROPERTY_PRESET_GTE)
  public void setPresetGte_JsonNullable(JsonNullable<String> presetGte) {
    this.presetGte = presetGte;
  }

  public void setPresetGte(String presetGte) {
    this.presetGte = JsonNullable.<String>of(presetGte);
  }


  public EntityFilterWhereInput presetIn(List<String> presetIn) {
    this.presetIn = JsonNullable.<List<String>>of(presetIn);
    return this;
  }

  public EntityFilterWhereInput addPresetInItem(String presetInItem) {
    if (this.presetIn == null || !this.presetIn.isPresent()) {
      this.presetIn = JsonNullable.<List<String>>of(new ArrayList<>());
    }
    try {
      this.presetIn.get().add(presetInItem);
    } catch (java.util.NoSuchElementException e) {
      // this can never happen, as we make sure above that the value is present
    }
    return this;
  }

   /**
   * Get presetIn
   * @return presetIn
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public List<String> getPresetIn() {
        return presetIn.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_PRESET_IN)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<List<String>> getPresetIn_JsonNullable() {
    return presetIn;
  }
  
  @JsonProperty(JSON_PROPERTY_PRESET_IN)
  public void setPresetIn_JsonNullable(JsonNullable<List<String>> presetIn) {
    this.presetIn = presetIn;
  }

  public void setPresetIn(List<String> presetIn) {
    this.presetIn = JsonNullable.<List<String>>of(presetIn);
  }


  public EntityFilterWhereInput presetLt(String presetLt) {
    this.presetLt = JsonNullable.<String>of(presetLt);
    return this;
  }

   /**
   * Get presetLt
   * @return presetLt
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getPresetLt() {
        return presetLt.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_PRESET_LT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getPresetLt_JsonNullable() {
    return presetLt;
  }
  
  @JsonProperty(JSON_PROPERTY_PRESET_LT)
  public void setPresetLt_JsonNullable(JsonNullable<String> presetLt) {
    this.presetLt = presetLt;
  }

  public void setPresetLt(String presetLt) {
    this.presetLt = JsonNullable.<String>of(presetLt);
  }


  public EntityFilterWhereInput presetLte(String presetLte) {
    this.presetLte = JsonNullable.<String>of(presetLte);
    return this;
  }

   /**
   * Get presetLte
   * @return presetLte
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getPresetLte() {
        return presetLte.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_PRESET_LTE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getPresetLte_JsonNullable() {
    return presetLte;
  }
  
  @JsonProperty(JSON_PROPERTY_PRESET_LTE)
  public void setPresetLte_JsonNullable(JsonNullable<String> presetLte) {
    this.presetLte = presetLte;
  }

  public void setPresetLte(String presetLte) {
    this.presetLte = JsonNullable.<String>of(presetLte);
  }


  public EntityFilterWhereInput presetNot(String presetNot) {
    this.presetNot = JsonNullable.<String>of(presetNot);
    return this;
  }

   /**
   * Get presetNot
   * @return presetNot
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getPresetNot() {
        return presetNot.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_PRESET_NOT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getPresetNot_JsonNullable() {
    return presetNot;
  }
  
  @JsonProperty(JSON_PROPERTY_PRESET_NOT)
  public void setPresetNot_JsonNullable(JsonNullable<String> presetNot) {
    this.presetNot = presetNot;
  }

  public void setPresetNot(String presetNot) {
    this.presetNot = JsonNullable.<String>of(presetNot);
  }


  public EntityFilterWhereInput presetNotContains(String presetNotContains) {
    this.presetNotContains = JsonNullable.<String>of(presetNotContains);
    return this;
  }

   /**
   * Get presetNotContains
   * @return presetNotContains
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getPresetNotContains() {
        return presetNotContains.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_PRESET_NOT_CONTAINS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getPresetNotContains_JsonNullable() {
    return presetNotContains;
  }
  
  @JsonProperty(JSON_PROPERTY_PRESET_NOT_CONTAINS)
  public void setPresetNotContains_JsonNullable(JsonNullable<String> presetNotContains) {
    this.presetNotContains = presetNotContains;
  }

  public void setPresetNotContains(String presetNotContains) {
    this.presetNotContains = JsonNullable.<String>of(presetNotContains);
  }


  public EntityFilterWhereInput presetNotEndsWith(String presetNotEndsWith) {
    this.presetNotEndsWith = JsonNullable.<String>of(presetNotEndsWith);
    return this;
  }

   /**
   * Get presetNotEndsWith
   * @return presetNotEndsWith
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getPresetNotEndsWith() {
        return presetNotEndsWith.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_PRESET_NOT_ENDS_WITH)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getPresetNotEndsWith_JsonNullable() {
    return presetNotEndsWith;
  }
  
  @JsonProperty(JSON_PROPERTY_PRESET_NOT_ENDS_WITH)
  public void setPresetNotEndsWith_JsonNullable(JsonNullable<String> presetNotEndsWith) {
    this.presetNotEndsWith = presetNotEndsWith;
  }

  public void setPresetNotEndsWith(String presetNotEndsWith) {
    this.presetNotEndsWith = JsonNullable.<String>of(presetNotEndsWith);
  }


  public EntityFilterWhereInput presetNotIn(List<String> presetNotIn) {
    this.presetNotIn = JsonNullable.<List<String>>of(presetNotIn);
    return this;
  }

  public EntityFilterWhereInput addPresetNotInItem(String presetNotInItem) {
    if (this.presetNotIn == null || !this.presetNotIn.isPresent()) {
      this.presetNotIn = JsonNullable.<List<String>>of(new ArrayList<>());
    }
    try {
      this.presetNotIn.get().add(presetNotInItem);
    } catch (java.util.NoSuchElementException e) {
      // this can never happen, as we make sure above that the value is present
    }
    return this;
  }

   /**
   * Get presetNotIn
   * @return presetNotIn
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public List<String> getPresetNotIn() {
        return presetNotIn.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_PRESET_NOT_IN)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<List<String>> getPresetNotIn_JsonNullable() {
    return presetNotIn;
  }
  
  @JsonProperty(JSON_PROPERTY_PRESET_NOT_IN)
  public void setPresetNotIn_JsonNullable(JsonNullable<List<String>> presetNotIn) {
    this.presetNotIn = presetNotIn;
  }

  public void setPresetNotIn(List<String> presetNotIn) {
    this.presetNotIn = JsonNullable.<List<String>>of(presetNotIn);
  }


  public EntityFilterWhereInput presetNotStartsWith(String presetNotStartsWith) {
    this.presetNotStartsWith = JsonNullable.<String>of(presetNotStartsWith);
    return this;
  }

   /**
   * Get presetNotStartsWith
   * @return presetNotStartsWith
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getPresetNotStartsWith() {
        return presetNotStartsWith.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_PRESET_NOT_STARTS_WITH)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getPresetNotStartsWith_JsonNullable() {
    return presetNotStartsWith;
  }
  
  @JsonProperty(JSON_PROPERTY_PRESET_NOT_STARTS_WITH)
  public void setPresetNotStartsWith_JsonNullable(JsonNullable<String> presetNotStartsWith) {
    this.presetNotStartsWith = presetNotStartsWith;
  }

  public void setPresetNotStartsWith(String presetNotStartsWith) {
    this.presetNotStartsWith = JsonNullable.<String>of(presetNotStartsWith);
  }


  public EntityFilterWhereInput presetStartsWith(String presetStartsWith) {
    this.presetStartsWith = JsonNullable.<String>of(presetStartsWith);
    return this;
  }

   /**
   * Get presetStartsWith
   * @return presetStartsWith
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getPresetStartsWith() {
        return presetStartsWith.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_PRESET_STARTS_WITH)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getPresetStartsWith_JsonNullable() {
    return presetStartsWith;
  }
  
  @JsonProperty(JSON_PROPERTY_PRESET_STARTS_WITH)
  public void setPresetStartsWith_JsonNullable(JsonNullable<String> presetStartsWith) {
    this.presetStartsWith = presetStartsWith;
  }

  public void setPresetStartsWith(String presetStartsWith) {
    this.presetStartsWith = JsonNullable.<String>of(presetStartsWith);
  }


  /**
   * Return true if this EntityFilterWhereInput object is equal to o.
   */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    EntityFilterWhereInput entityFilterWhereInput = (EntityFilterWhereInput) o;
    return equalsNullable(this.AND, entityFilterWhereInput.AND) &&
        equalsNullable(this.applyToAllClusters, entityFilterWhereInput.applyToAllClusters) &&
        equalsNullable(this.applyToAllClustersNot, entityFilterWhereInput.applyToAllClustersNot) &&
        equalsNullable(this.clustersEvery, entityFilterWhereInput.clustersEvery) &&
        equalsNullable(this.clustersNone, entityFilterWhereInput.clustersNone) &&
        equalsNullable(this.clustersSome, entityFilterWhereInput.clustersSome) &&
        equalsNullable(this.entityType, entityFilterWhereInput.entityType) &&
        equalsNullable(this.entityTypeIn, entityFilterWhereInput.entityTypeIn) &&
        equalsNullable(this.entityTypeNot, entityFilterWhereInput.entityTypeNot) &&
        equalsNullable(this.entityTypeNotIn, entityFilterWhereInput.entityTypeNotIn) &&
        equalsNullable(this.execFailedClusterEvery, entityFilterWhereInput.execFailedClusterEvery) &&
        equalsNullable(this.execFailedClusterNone, entityFilterWhereInput.execFailedClusterNone) &&
        equalsNullable(this.execFailedClusterSome, entityFilterWhereInput.execFailedClusterSome) &&
        equalsNullable(this.filterStatus, entityFilterWhereInput.filterStatus) &&
        equalsNullable(this.filterStatusIn, entityFilterWhereInput.filterStatusIn) &&
        equalsNullable(this.filterStatusNot, entityFilterWhereInput.filterStatusNot) &&
        equalsNullable(this.filterStatusNotIn, entityFilterWhereInput.filterStatusNotIn) &&
        equalsNullable(this.id, entityFilterWhereInput.id) &&
        equalsNullable(this.idContains, entityFilterWhereInput.idContains) &&
        equalsNullable(this.idEndsWith, entityFilterWhereInput.idEndsWith) &&
        equalsNullable(this.idGt, entityFilterWhereInput.idGt) &&
        equalsNullable(this.idGte, entityFilterWhereInput.idGte) &&
        equalsNullable(this.idIn, entityFilterWhereInput.idIn) &&
        equalsNullable(this.idLt, entityFilterWhereInput.idLt) &&
        equalsNullable(this.idLte, entityFilterWhereInput.idLte) &&
        equalsNullable(this.idNot, entityFilterWhereInput.idNot) &&
        equalsNullable(this.idNotContains, entityFilterWhereInput.idNotContains) &&
        equalsNullable(this.idNotEndsWith, entityFilterWhereInput.idNotEndsWith) &&
        equalsNullable(this.idNotIn, entityFilterWhereInput.idNotIn) &&
        equalsNullable(this.idNotStartsWith, entityFilterWhereInput.idNotStartsWith) &&
        equalsNullable(this.idStartsWith, entityFilterWhereInput.idStartsWith) &&
        equalsNullable(this.lastExecutedAt, entityFilterWhereInput.lastExecutedAt) &&
        equalsNullable(this.lastExecutedAtGt, entityFilterWhereInput.lastExecutedAtGt) &&
        equalsNullable(this.lastExecutedAtGte, entityFilterWhereInput.lastExecutedAtGte) &&
        equalsNullable(this.lastExecutedAtIn, entityFilterWhereInput.lastExecutedAtIn) &&
        equalsNullable(this.lastExecutedAtLt, entityFilterWhereInput.lastExecutedAtLt) &&
        equalsNullable(this.lastExecutedAtLte, entityFilterWhereInput.lastExecutedAtLte) &&
        equalsNullable(this.lastExecutedAtNot, entityFilterWhereInput.lastExecutedAtNot) &&
        equalsNullable(this.lastExecutedAtNotIn, entityFilterWhereInput.lastExecutedAtNotIn) &&
        equalsNullable(this.name, entityFilterWhereInput.name) &&
        equalsNullable(this.nameContains, entityFilterWhereInput.nameContains) &&
        equalsNullable(this.nameEndsWith, entityFilterWhereInput.nameEndsWith) &&
        equalsNullable(this.nameGt, entityFilterWhereInput.nameGt) &&
        equalsNullable(this.nameGte, entityFilterWhereInput.nameGte) &&
        equalsNullable(this.nameIn, entityFilterWhereInput.nameIn) &&
        equalsNullable(this.nameLt, entityFilterWhereInput.nameLt) &&
        equalsNullable(this.nameLte, entityFilterWhereInput.nameLte) &&
        equalsNullable(this.nameNot, entityFilterWhereInput.nameNot) &&
        equalsNullable(this.nameNotContains, entityFilterWhereInput.nameNotContains) &&
        equalsNullable(this.nameNotEndsWith, entityFilterWhereInput.nameNotEndsWith) &&
        equalsNullable(this.nameNotIn, entityFilterWhereInput.nameNotIn) &&
        equalsNullable(this.nameNotStartsWith, entityFilterWhereInput.nameNotStartsWith) &&
        equalsNullable(this.nameStartsWith, entityFilterWhereInput.nameStartsWith) &&
        equalsNullable(this.NOT, entityFilterWhereInput.NOT) &&
        equalsNullable(this.OR, entityFilterWhereInput.OR) &&
        equalsNullable(this.preset, entityFilterWhereInput.preset) &&
        equalsNullable(this.presetContains, entityFilterWhereInput.presetContains) &&
        equalsNullable(this.presetEndsWith, entityFilterWhereInput.presetEndsWith) &&
        equalsNullable(this.presetGt, entityFilterWhereInput.presetGt) &&
        equalsNullable(this.presetGte, entityFilterWhereInput.presetGte) &&
        equalsNullable(this.presetIn, entityFilterWhereInput.presetIn) &&
        equalsNullable(this.presetLt, entityFilterWhereInput.presetLt) &&
        equalsNullable(this.presetLte, entityFilterWhereInput.presetLte) &&
        equalsNullable(this.presetNot, entityFilterWhereInput.presetNot) &&
        equalsNullable(this.presetNotContains, entityFilterWhereInput.presetNotContains) &&
        equalsNullable(this.presetNotEndsWith, entityFilterWhereInput.presetNotEndsWith) &&
        equalsNullable(this.presetNotIn, entityFilterWhereInput.presetNotIn) &&
        equalsNullable(this.presetNotStartsWith, entityFilterWhereInput.presetNotStartsWith) &&
        equalsNullable(this.presetStartsWith, entityFilterWhereInput.presetStartsWith);
  }

  private static <T> boolean equalsNullable(JsonNullable<T> a, JsonNullable<T> b) {
    return a == b || (a != null && b != null && a.isPresent() && b.isPresent() && Objects.deepEquals(a.get(), b.get()));
  }

  @Override
  public int hashCode() {
    return Objects.hash(hashCodeNullable(AND), hashCodeNullable(applyToAllClusters), hashCodeNullable(applyToAllClustersNot), hashCodeNullable(clustersEvery), hashCodeNullable(clustersNone), hashCodeNullable(clustersSome), hashCodeNullable(entityType), hashCodeNullable(entityTypeIn), hashCodeNullable(entityTypeNot), hashCodeNullable(entityTypeNotIn), hashCodeNullable(execFailedClusterEvery), hashCodeNullable(execFailedClusterNone), hashCodeNullable(execFailedClusterSome), hashCodeNullable(filterStatus), hashCodeNullable(filterStatusIn), hashCodeNullable(filterStatusNot), hashCodeNullable(filterStatusNotIn), hashCodeNullable(id), hashCodeNullable(idContains), hashCodeNullable(idEndsWith), hashCodeNullable(idGt), hashCodeNullable(idGte), hashCodeNullable(idIn), hashCodeNullable(idLt), hashCodeNullable(idLte), hashCodeNullable(idNot), hashCodeNullable(idNotContains), hashCodeNullable(idNotEndsWith), hashCodeNullable(idNotIn), hashCodeNullable(idNotStartsWith), hashCodeNullable(idStartsWith), hashCodeNullable(lastExecutedAt), hashCodeNullable(lastExecutedAtGt), hashCodeNullable(lastExecutedAtGte), hashCodeNullable(lastExecutedAtIn), hashCodeNullable(lastExecutedAtLt), hashCodeNullable(lastExecutedAtLte), hashCodeNullable(lastExecutedAtNot), hashCodeNullable(lastExecutedAtNotIn), hashCodeNullable(name), hashCodeNullable(nameContains), hashCodeNullable(nameEndsWith), hashCodeNullable(nameGt), hashCodeNullable(nameGte), hashCodeNullable(nameIn), hashCodeNullable(nameLt), hashCodeNullable(nameLte), hashCodeNullable(nameNot), hashCodeNullable(nameNotContains), hashCodeNullable(nameNotEndsWith), hashCodeNullable(nameNotIn), hashCodeNullable(nameNotStartsWith), hashCodeNullable(nameStartsWith), hashCodeNullable(NOT), hashCodeNullable(OR), hashCodeNullable(preset), hashCodeNullable(presetContains), hashCodeNullable(presetEndsWith), hashCodeNullable(presetGt), hashCodeNullable(presetGte), hashCodeNullable(presetIn), hashCodeNullable(presetLt), hashCodeNullable(presetLte), hashCodeNullable(presetNot), hashCodeNullable(presetNotContains), hashCodeNullable(presetNotEndsWith), hashCodeNullable(presetNotIn), hashCodeNullable(presetNotStartsWith), hashCodeNullable(presetStartsWith));
  }

  private static <T> int hashCodeNullable(JsonNullable<T> a) {
    if (a == null) {
      return 1;
    }
    return a.isPresent() ? Arrays.deepHashCode(new Object[]{a.get()}) : 31;
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class EntityFilterWhereInput {\n");
    sb.append("    AND: ").append(toIndentedString(AND)).append("\n");
    sb.append("    applyToAllClusters: ").append(toIndentedString(applyToAllClusters)).append("\n");
    sb.append("    applyToAllClustersNot: ").append(toIndentedString(applyToAllClustersNot)).append("\n");
    sb.append("    clustersEvery: ").append(toIndentedString(clustersEvery)).append("\n");
    sb.append("    clustersNone: ").append(toIndentedString(clustersNone)).append("\n");
    sb.append("    clustersSome: ").append(toIndentedString(clustersSome)).append("\n");
    sb.append("    entityType: ").append(toIndentedString(entityType)).append("\n");
    sb.append("    entityTypeIn: ").append(toIndentedString(entityTypeIn)).append("\n");
    sb.append("    entityTypeNot: ").append(toIndentedString(entityTypeNot)).append("\n");
    sb.append("    entityTypeNotIn: ").append(toIndentedString(entityTypeNotIn)).append("\n");
    sb.append("    execFailedClusterEvery: ").append(toIndentedString(execFailedClusterEvery)).append("\n");
    sb.append("    execFailedClusterNone: ").append(toIndentedString(execFailedClusterNone)).append("\n");
    sb.append("    execFailedClusterSome: ").append(toIndentedString(execFailedClusterSome)).append("\n");
    sb.append("    filterStatus: ").append(toIndentedString(filterStatus)).append("\n");
    sb.append("    filterStatusIn: ").append(toIndentedString(filterStatusIn)).append("\n");
    sb.append("    filterStatusNot: ").append(toIndentedString(filterStatusNot)).append("\n");
    sb.append("    filterStatusNotIn: ").append(toIndentedString(filterStatusNotIn)).append("\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    idContains: ").append(toIndentedString(idContains)).append("\n");
    sb.append("    idEndsWith: ").append(toIndentedString(idEndsWith)).append("\n");
    sb.append("    idGt: ").append(toIndentedString(idGt)).append("\n");
    sb.append("    idGte: ").append(toIndentedString(idGte)).append("\n");
    sb.append("    idIn: ").append(toIndentedString(idIn)).append("\n");
    sb.append("    idLt: ").append(toIndentedString(idLt)).append("\n");
    sb.append("    idLte: ").append(toIndentedString(idLte)).append("\n");
    sb.append("    idNot: ").append(toIndentedString(idNot)).append("\n");
    sb.append("    idNotContains: ").append(toIndentedString(idNotContains)).append("\n");
    sb.append("    idNotEndsWith: ").append(toIndentedString(idNotEndsWith)).append("\n");
    sb.append("    idNotIn: ").append(toIndentedString(idNotIn)).append("\n");
    sb.append("    idNotStartsWith: ").append(toIndentedString(idNotStartsWith)).append("\n");
    sb.append("    idStartsWith: ").append(toIndentedString(idStartsWith)).append("\n");
    sb.append("    lastExecutedAt: ").append(toIndentedString(lastExecutedAt)).append("\n");
    sb.append("    lastExecutedAtGt: ").append(toIndentedString(lastExecutedAtGt)).append("\n");
    sb.append("    lastExecutedAtGte: ").append(toIndentedString(lastExecutedAtGte)).append("\n");
    sb.append("    lastExecutedAtIn: ").append(toIndentedString(lastExecutedAtIn)).append("\n");
    sb.append("    lastExecutedAtLt: ").append(toIndentedString(lastExecutedAtLt)).append("\n");
    sb.append("    lastExecutedAtLte: ").append(toIndentedString(lastExecutedAtLte)).append("\n");
    sb.append("    lastExecutedAtNot: ").append(toIndentedString(lastExecutedAtNot)).append("\n");
    sb.append("    lastExecutedAtNotIn: ").append(toIndentedString(lastExecutedAtNotIn)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    nameContains: ").append(toIndentedString(nameContains)).append("\n");
    sb.append("    nameEndsWith: ").append(toIndentedString(nameEndsWith)).append("\n");
    sb.append("    nameGt: ").append(toIndentedString(nameGt)).append("\n");
    sb.append("    nameGte: ").append(toIndentedString(nameGte)).append("\n");
    sb.append("    nameIn: ").append(toIndentedString(nameIn)).append("\n");
    sb.append("    nameLt: ").append(toIndentedString(nameLt)).append("\n");
    sb.append("    nameLte: ").append(toIndentedString(nameLte)).append("\n");
    sb.append("    nameNot: ").append(toIndentedString(nameNot)).append("\n");
    sb.append("    nameNotContains: ").append(toIndentedString(nameNotContains)).append("\n");
    sb.append("    nameNotEndsWith: ").append(toIndentedString(nameNotEndsWith)).append("\n");
    sb.append("    nameNotIn: ").append(toIndentedString(nameNotIn)).append("\n");
    sb.append("    nameNotStartsWith: ").append(toIndentedString(nameNotStartsWith)).append("\n");
    sb.append("    nameStartsWith: ").append(toIndentedString(nameStartsWith)).append("\n");
    sb.append("    NOT: ").append(toIndentedString(NOT)).append("\n");
    sb.append("    OR: ").append(toIndentedString(OR)).append("\n");
    sb.append("    preset: ").append(toIndentedString(preset)).append("\n");
    sb.append("    presetContains: ").append(toIndentedString(presetContains)).append("\n");
    sb.append("    presetEndsWith: ").append(toIndentedString(presetEndsWith)).append("\n");
    sb.append("    presetGt: ").append(toIndentedString(presetGt)).append("\n");
    sb.append("    presetGte: ").append(toIndentedString(presetGte)).append("\n");
    sb.append("    presetIn: ").append(toIndentedString(presetIn)).append("\n");
    sb.append("    presetLt: ").append(toIndentedString(presetLt)).append("\n");
    sb.append("    presetLte: ").append(toIndentedString(presetLte)).append("\n");
    sb.append("    presetNot: ").append(toIndentedString(presetNot)).append("\n");
    sb.append("    presetNotContains: ").append(toIndentedString(presetNotContains)).append("\n");
    sb.append("    presetNotEndsWith: ").append(toIndentedString(presetNotEndsWith)).append("\n");
    sb.append("    presetNotIn: ").append(toIndentedString(presetNotIn)).append("\n");
    sb.append("    presetNotStartsWith: ").append(toIndentedString(presetNotStartsWith)).append("\n");
    sb.append("    presetStartsWith: ").append(toIndentedString(presetStartsWith)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

