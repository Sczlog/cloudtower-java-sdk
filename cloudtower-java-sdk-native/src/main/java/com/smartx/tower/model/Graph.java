/*
 * Tower SDK API
 * cloudtower operation API and SDK
 *
 * The version of the OpenAPI document: 1.7.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.smartx.tower.model;

import java.util.Objects;
import java.util.Arrays;
import java.util.Map;
import java.util.HashMap;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import com.smartx.tower.model.AlertDisk;
import com.smartx.tower.model.AlertRuleCluster;
import com.smartx.tower.model.BrickTopoPowers;
import com.smartx.tower.model.EntityAsyncStatus;
import com.smartx.tower.model.GraphType;
import com.smartx.tower.model.MetricType;
import com.smartx.tower.model.NetworkType;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.util.ArrayList;
import java.util.List;
import org.openapitools.jackson.nullable.JsonNullable;
import com.fasterxml.jackson.annotation.JsonIgnore;
import org.openapitools.jackson.nullable.JsonNullable;
import java.util.NoSuchElementException;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;


/**
 * Graph
 */
@JsonPropertyOrder({
  Graph.JSON_PROPERTY_CLUSTER,
  Graph.JSON_PROPERTY_DISKS,
  Graph.JSON_PROPERTY_ENTITY_ASYNC_STATUS,
  Graph.JSON_PROPERTY_HOSTS,
  Graph.JSON_PROPERTY_ID,
  Graph.JSON_PROPERTY_LOCAL_ID,
  Graph.JSON_PROPERTY_LUNS,
  Graph.JSON_PROPERTY_METRIC_COUNT,
  Graph.JSON_PROPERTY_METRIC_NAME,
  Graph.JSON_PROPERTY_METRIC_TYPE,
  Graph.JSON_PROPERTY_NAMESPACES,
  Graph.JSON_PROPERTY_NETWORK,
  Graph.JSON_PROPERTY_NICS,
  Graph.JSON_PROPERTY_RESOURCE_TYPE,
  Graph.JSON_PROPERTY_SERVICE,
  Graph.JSON_PROPERTY_TARGETS,
  Graph.JSON_PROPERTY_TITLE,
  Graph.JSON_PROPERTY_TYPE,
  Graph.JSON_PROPERTY_VIEW,
  Graph.JSON_PROPERTY_VM_NICS,
  Graph.JSON_PROPERTY_VMS,
  Graph.JSON_PROPERTY_VM_VOLUMES,
  Graph.JSON_PROPERTY_WITNESSES,
  Graph.JSON_PROPERTY_ZONES
})
@javax.annotation.processing.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2021-10-27T15:59:14.939791800+08:00[Asia/Shanghai]")
public class Graph {
  public static final String JSON_PROPERTY_CLUSTER = "cluster";
  private JsonNullable<AlertDisk> cluster = JsonNullable.<AlertDisk>undefined();

  public static final String JSON_PROPERTY_DISKS = "disks";
  private JsonNullable<List<AlertRuleCluster>> disks = JsonNullable.<List<AlertRuleCluster>>undefined();

  public static final String JSON_PROPERTY_ENTITY_ASYNC_STATUS = "entityAsyncStatus";
  private JsonNullable<EntityAsyncStatus> entityAsyncStatus = JsonNullable.<EntityAsyncStatus>undefined();

  public static final String JSON_PROPERTY_HOSTS = "hosts";
  private JsonNullable<List<AlertRuleCluster>> hosts = JsonNullable.<List<AlertRuleCluster>>undefined();

  public static final String JSON_PROPERTY_ID = "id";
  private String id;

  public static final String JSON_PROPERTY_LOCAL_ID = "local_id";
  private String localId;

  public static final String JSON_PROPERTY_LUNS = "luns";
  private JsonNullable<List<AlertRuleCluster>> luns = JsonNullable.<List<AlertRuleCluster>>undefined();

  public static final String JSON_PROPERTY_METRIC_COUNT = "metric_count";
  private Double metricCount;

  public static final String JSON_PROPERTY_METRIC_NAME = "metric_name";
  private String metricName;

  public static final String JSON_PROPERTY_METRIC_TYPE = "metric_type";
  private MetricType metricType;

  public static final String JSON_PROPERTY_NAMESPACES = "namespaces";
  private JsonNullable<List<AlertRuleCluster>> namespaces = JsonNullable.<List<AlertRuleCluster>>undefined();

  public static final String JSON_PROPERTY_NETWORK = "network";
  private JsonNullable<NetworkType> network = JsonNullable.<NetworkType>undefined();

  public static final String JSON_PROPERTY_NICS = "nics";
  private JsonNullable<List<AlertRuleCluster>> nics = JsonNullable.<List<AlertRuleCluster>>undefined();

  public static final String JSON_PROPERTY_RESOURCE_TYPE = "resource_type";
  private String resourceType;

  public static final String JSON_PROPERTY_SERVICE = "service";
  private JsonNullable<String> service = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_TARGETS = "targets";
  private Object targets;

  public static final String JSON_PROPERTY_TITLE = "title";
  private String title;

  public static final String JSON_PROPERTY_TYPE = "type";
  private GraphType type;

  public static final String JSON_PROPERTY_VIEW = "view";
  private AlertRuleCluster view;

  public static final String JSON_PROPERTY_VM_NICS = "vmNics";
  private JsonNullable<List<BrickTopoPowers>> vmNics = JsonNullable.<List<BrickTopoPowers>>undefined();

  public static final String JSON_PROPERTY_VMS = "vms";
  private JsonNullable<List<AlertRuleCluster>> vms = JsonNullable.<List<AlertRuleCluster>>undefined();

  public static final String JSON_PROPERTY_VM_VOLUMES = "vmVolumes";
  private JsonNullable<List<AlertRuleCluster>> vmVolumes = JsonNullable.<List<AlertRuleCluster>>undefined();

  public static final String JSON_PROPERTY_WITNESSES = "witnesses";
  private JsonNullable<List<AlertRuleCluster>> witnesses = JsonNullable.<List<AlertRuleCluster>>undefined();

  public static final String JSON_PROPERTY_ZONES = "zones";
  private JsonNullable<List<BrickTopoPowers>> zones = JsonNullable.<List<BrickTopoPowers>>undefined();


  public Graph cluster(AlertDisk cluster) {
    this.cluster = JsonNullable.<AlertDisk>of(cluster);
    return this;
  }

   /**
   * Get cluster
   * @return cluster
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public AlertDisk getCluster() {
        return cluster.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_CLUSTER)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<AlertDisk> getCluster_JsonNullable() {
    return cluster;
  }
  
  @JsonProperty(JSON_PROPERTY_CLUSTER)
  public void setCluster_JsonNullable(JsonNullable<AlertDisk> cluster) {
    this.cluster = cluster;
  }

  public void setCluster(AlertDisk cluster) {
    this.cluster = JsonNullable.<AlertDisk>of(cluster);
  }


  public Graph disks(List<AlertRuleCluster> disks) {
    this.disks = JsonNullable.<List<AlertRuleCluster>>of(disks);
    return this;
  }

  public Graph addDisksItem(AlertRuleCluster disksItem) {
    if (this.disks == null || !this.disks.isPresent()) {
      this.disks = JsonNullable.<List<AlertRuleCluster>>of(new ArrayList<>());
    }
    try {
      this.disks.get().add(disksItem);
    } catch (java.util.NoSuchElementException e) {
      // this can never happen, as we make sure above that the value is present
    }
    return this;
  }

   /**
   * Get disks
   * @return disks
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public List<AlertRuleCluster> getDisks() {
        return disks.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_DISKS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<List<AlertRuleCluster>> getDisks_JsonNullable() {
    return disks;
  }
  
  @JsonProperty(JSON_PROPERTY_DISKS)
  public void setDisks_JsonNullable(JsonNullable<List<AlertRuleCluster>> disks) {
    this.disks = disks;
  }

  public void setDisks(List<AlertRuleCluster> disks) {
    this.disks = JsonNullable.<List<AlertRuleCluster>>of(disks);
  }


  public Graph entityAsyncStatus(EntityAsyncStatus entityAsyncStatus) {
    this.entityAsyncStatus = JsonNullable.<EntityAsyncStatus>of(entityAsyncStatus);
    return this;
  }

   /**
   * Get entityAsyncStatus
   * @return entityAsyncStatus
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public EntityAsyncStatus getEntityAsyncStatus() {
        return entityAsyncStatus.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_ENTITY_ASYNC_STATUS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<EntityAsyncStatus> getEntityAsyncStatus_JsonNullable() {
    return entityAsyncStatus;
  }
  
  @JsonProperty(JSON_PROPERTY_ENTITY_ASYNC_STATUS)
  public void setEntityAsyncStatus_JsonNullable(JsonNullable<EntityAsyncStatus> entityAsyncStatus) {
    this.entityAsyncStatus = entityAsyncStatus;
  }

  public void setEntityAsyncStatus(EntityAsyncStatus entityAsyncStatus) {
    this.entityAsyncStatus = JsonNullable.<EntityAsyncStatus>of(entityAsyncStatus);
  }


  public Graph hosts(List<AlertRuleCluster> hosts) {
    this.hosts = JsonNullable.<List<AlertRuleCluster>>of(hosts);
    return this;
  }

  public Graph addHostsItem(AlertRuleCluster hostsItem) {
    if (this.hosts == null || !this.hosts.isPresent()) {
      this.hosts = JsonNullable.<List<AlertRuleCluster>>of(new ArrayList<>());
    }
    try {
      this.hosts.get().add(hostsItem);
    } catch (java.util.NoSuchElementException e) {
      // this can never happen, as we make sure above that the value is present
    }
    return this;
  }

   /**
   * Get hosts
   * @return hosts
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public List<AlertRuleCluster> getHosts() {
        return hosts.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_HOSTS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<List<AlertRuleCluster>> getHosts_JsonNullable() {
    return hosts;
  }
  
  @JsonProperty(JSON_PROPERTY_HOSTS)
  public void setHosts_JsonNullable(JsonNullable<List<AlertRuleCluster>> hosts) {
    this.hosts = hosts;
  }

  public void setHosts(List<AlertRuleCluster> hosts) {
    this.hosts = JsonNullable.<List<AlertRuleCluster>>of(hosts);
  }


  public Graph id(String id) {
    this.id = id;
    return this;
  }

   /**
   * Get id
   * @return id
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")
  @JsonProperty(JSON_PROPERTY_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getId() {
    return id;
  }


  @JsonProperty(JSON_PROPERTY_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setId(String id) {
    this.id = id;
  }


  public Graph localId(String localId) {
    this.localId = localId;
    return this;
  }

   /**
   * Get localId
   * @return localId
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")
  @JsonProperty(JSON_PROPERTY_LOCAL_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getLocalId() {
    return localId;
  }


  @JsonProperty(JSON_PROPERTY_LOCAL_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setLocalId(String localId) {
    this.localId = localId;
  }


  public Graph luns(List<AlertRuleCluster> luns) {
    this.luns = JsonNullable.<List<AlertRuleCluster>>of(luns);
    return this;
  }

  public Graph addLunsItem(AlertRuleCluster lunsItem) {
    if (this.luns == null || !this.luns.isPresent()) {
      this.luns = JsonNullable.<List<AlertRuleCluster>>of(new ArrayList<>());
    }
    try {
      this.luns.get().add(lunsItem);
    } catch (java.util.NoSuchElementException e) {
      // this can never happen, as we make sure above that the value is present
    }
    return this;
  }

   /**
   * Get luns
   * @return luns
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public List<AlertRuleCluster> getLuns() {
        return luns.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_LUNS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<List<AlertRuleCluster>> getLuns_JsonNullable() {
    return luns;
  }
  
  @JsonProperty(JSON_PROPERTY_LUNS)
  public void setLuns_JsonNullable(JsonNullable<List<AlertRuleCluster>> luns) {
    this.luns = luns;
  }

  public void setLuns(List<AlertRuleCluster> luns) {
    this.luns = JsonNullable.<List<AlertRuleCluster>>of(luns);
  }


  public Graph metricCount(Double metricCount) {
    this.metricCount = metricCount;
    return this;
  }

   /**
   * Get metricCount
   * @return metricCount
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")
  @JsonProperty(JSON_PROPERTY_METRIC_COUNT)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public Double getMetricCount() {
    return metricCount;
  }


  @JsonProperty(JSON_PROPERTY_METRIC_COUNT)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setMetricCount(Double metricCount) {
    this.metricCount = metricCount;
  }


  public Graph metricName(String metricName) {
    this.metricName = metricName;
    return this;
  }

   /**
   * Get metricName
   * @return metricName
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")
  @JsonProperty(JSON_PROPERTY_METRIC_NAME)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getMetricName() {
    return metricName;
  }


  @JsonProperty(JSON_PROPERTY_METRIC_NAME)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setMetricName(String metricName) {
    this.metricName = metricName;
  }


  public Graph metricType(MetricType metricType) {
    this.metricType = metricType;
    return this;
  }

   /**
   * Get metricType
   * @return metricType
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")
  @JsonProperty(JSON_PROPERTY_METRIC_TYPE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public MetricType getMetricType() {
    return metricType;
  }


  @JsonProperty(JSON_PROPERTY_METRIC_TYPE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setMetricType(MetricType metricType) {
    this.metricType = metricType;
  }


  public Graph namespaces(List<AlertRuleCluster> namespaces) {
    this.namespaces = JsonNullable.<List<AlertRuleCluster>>of(namespaces);
    return this;
  }

  public Graph addNamespacesItem(AlertRuleCluster namespacesItem) {
    if (this.namespaces == null || !this.namespaces.isPresent()) {
      this.namespaces = JsonNullable.<List<AlertRuleCluster>>of(new ArrayList<>());
    }
    try {
      this.namespaces.get().add(namespacesItem);
    } catch (java.util.NoSuchElementException e) {
      // this can never happen, as we make sure above that the value is present
    }
    return this;
  }

   /**
   * Get namespaces
   * @return namespaces
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public List<AlertRuleCluster> getNamespaces() {
        return namespaces.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_NAMESPACES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<List<AlertRuleCluster>> getNamespaces_JsonNullable() {
    return namespaces;
  }
  
  @JsonProperty(JSON_PROPERTY_NAMESPACES)
  public void setNamespaces_JsonNullable(JsonNullable<List<AlertRuleCluster>> namespaces) {
    this.namespaces = namespaces;
  }

  public void setNamespaces(List<AlertRuleCluster> namespaces) {
    this.namespaces = JsonNullable.<List<AlertRuleCluster>>of(namespaces);
  }


  public Graph network(NetworkType network) {
    this.network = JsonNullable.<NetworkType>of(network);
    return this;
  }

   /**
   * Get network
   * @return network
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public NetworkType getNetwork() {
        return network.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_NETWORK)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<NetworkType> getNetwork_JsonNullable() {
    return network;
  }
  
  @JsonProperty(JSON_PROPERTY_NETWORK)
  public void setNetwork_JsonNullable(JsonNullable<NetworkType> network) {
    this.network = network;
  }

  public void setNetwork(NetworkType network) {
    this.network = JsonNullable.<NetworkType>of(network);
  }


  public Graph nics(List<AlertRuleCluster> nics) {
    this.nics = JsonNullable.<List<AlertRuleCluster>>of(nics);
    return this;
  }

  public Graph addNicsItem(AlertRuleCluster nicsItem) {
    if (this.nics == null || !this.nics.isPresent()) {
      this.nics = JsonNullable.<List<AlertRuleCluster>>of(new ArrayList<>());
    }
    try {
      this.nics.get().add(nicsItem);
    } catch (java.util.NoSuchElementException e) {
      // this can never happen, as we make sure above that the value is present
    }
    return this;
  }

   /**
   * Get nics
   * @return nics
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public List<AlertRuleCluster> getNics() {
        return nics.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_NICS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<List<AlertRuleCluster>> getNics_JsonNullable() {
    return nics;
  }
  
  @JsonProperty(JSON_PROPERTY_NICS)
  public void setNics_JsonNullable(JsonNullable<List<AlertRuleCluster>> nics) {
    this.nics = nics;
  }

  public void setNics(List<AlertRuleCluster> nics) {
    this.nics = JsonNullable.<List<AlertRuleCluster>>of(nics);
  }


  public Graph resourceType(String resourceType) {
    this.resourceType = resourceType;
    return this;
  }

   /**
   * Get resourceType
   * @return resourceType
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")
  @JsonProperty(JSON_PROPERTY_RESOURCE_TYPE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getResourceType() {
    return resourceType;
  }


  @JsonProperty(JSON_PROPERTY_RESOURCE_TYPE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setResourceType(String resourceType) {
    this.resourceType = resourceType;
  }


  public Graph service(String service) {
    this.service = JsonNullable.<String>of(service);
    return this;
  }

   /**
   * Get service
   * @return service
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getService() {
        return service.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_SERVICE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getService_JsonNullable() {
    return service;
  }
  
  @JsonProperty(JSON_PROPERTY_SERVICE)
  public void setService_JsonNullable(JsonNullable<String> service) {
    this.service = service;
  }

  public void setService(String service) {
    this.service = JsonNullable.<String>of(service);
  }


  public Graph targets(Object targets) {
    this.targets = targets;
    return this;
  }

   /**
   * Get targets
   * @return targets
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")
  @JsonProperty(JSON_PROPERTY_TARGETS)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public Object getTargets() {
    return targets;
  }


  @JsonProperty(JSON_PROPERTY_TARGETS)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setTargets(Object targets) {
    this.targets = targets;
  }


  public Graph title(String title) {
    this.title = title;
    return this;
  }

   /**
   * Get title
   * @return title
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")
  @JsonProperty(JSON_PROPERTY_TITLE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getTitle() {
    return title;
  }


  @JsonProperty(JSON_PROPERTY_TITLE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setTitle(String title) {
    this.title = title;
  }


  public Graph type(GraphType type) {
    this.type = type;
    return this;
  }

   /**
   * Get type
   * @return type
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")
  @JsonProperty(JSON_PROPERTY_TYPE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public GraphType getType() {
    return type;
  }


  @JsonProperty(JSON_PROPERTY_TYPE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setType(GraphType type) {
    this.type = type;
  }


  public Graph view(AlertRuleCluster view) {
    this.view = view;
    return this;
  }

   /**
   * Get view
   * @return view
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")
  @JsonProperty(JSON_PROPERTY_VIEW)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public AlertRuleCluster getView() {
    return view;
  }


  @JsonProperty(JSON_PROPERTY_VIEW)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setView(AlertRuleCluster view) {
    this.view = view;
  }


  public Graph vmNics(List<BrickTopoPowers> vmNics) {
    this.vmNics = JsonNullable.<List<BrickTopoPowers>>of(vmNics);
    return this;
  }

  public Graph addVmNicsItem(BrickTopoPowers vmNicsItem) {
    if (this.vmNics == null || !this.vmNics.isPresent()) {
      this.vmNics = JsonNullable.<List<BrickTopoPowers>>of(new ArrayList<>());
    }
    try {
      this.vmNics.get().add(vmNicsItem);
    } catch (java.util.NoSuchElementException e) {
      // this can never happen, as we make sure above that the value is present
    }
    return this;
  }

   /**
   * Get vmNics
   * @return vmNics
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public List<BrickTopoPowers> getVmNics() {
        return vmNics.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_VM_NICS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<List<BrickTopoPowers>> getVmNics_JsonNullable() {
    return vmNics;
  }
  
  @JsonProperty(JSON_PROPERTY_VM_NICS)
  public void setVmNics_JsonNullable(JsonNullable<List<BrickTopoPowers>> vmNics) {
    this.vmNics = vmNics;
  }

  public void setVmNics(List<BrickTopoPowers> vmNics) {
    this.vmNics = JsonNullable.<List<BrickTopoPowers>>of(vmNics);
  }


  public Graph vms(List<AlertRuleCluster> vms) {
    this.vms = JsonNullable.<List<AlertRuleCluster>>of(vms);
    return this;
  }

  public Graph addVmsItem(AlertRuleCluster vmsItem) {
    if (this.vms == null || !this.vms.isPresent()) {
      this.vms = JsonNullable.<List<AlertRuleCluster>>of(new ArrayList<>());
    }
    try {
      this.vms.get().add(vmsItem);
    } catch (java.util.NoSuchElementException e) {
      // this can never happen, as we make sure above that the value is present
    }
    return this;
  }

   /**
   * Get vms
   * @return vms
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public List<AlertRuleCluster> getVms() {
        return vms.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_VMS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<List<AlertRuleCluster>> getVms_JsonNullable() {
    return vms;
  }
  
  @JsonProperty(JSON_PROPERTY_VMS)
  public void setVms_JsonNullable(JsonNullable<List<AlertRuleCluster>> vms) {
    this.vms = vms;
  }

  public void setVms(List<AlertRuleCluster> vms) {
    this.vms = JsonNullable.<List<AlertRuleCluster>>of(vms);
  }


  public Graph vmVolumes(List<AlertRuleCluster> vmVolumes) {
    this.vmVolumes = JsonNullable.<List<AlertRuleCluster>>of(vmVolumes);
    return this;
  }

  public Graph addVmVolumesItem(AlertRuleCluster vmVolumesItem) {
    if (this.vmVolumes == null || !this.vmVolumes.isPresent()) {
      this.vmVolumes = JsonNullable.<List<AlertRuleCluster>>of(new ArrayList<>());
    }
    try {
      this.vmVolumes.get().add(vmVolumesItem);
    } catch (java.util.NoSuchElementException e) {
      // this can never happen, as we make sure above that the value is present
    }
    return this;
  }

   /**
   * Get vmVolumes
   * @return vmVolumes
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public List<AlertRuleCluster> getVmVolumes() {
        return vmVolumes.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_VM_VOLUMES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<List<AlertRuleCluster>> getVmVolumes_JsonNullable() {
    return vmVolumes;
  }
  
  @JsonProperty(JSON_PROPERTY_VM_VOLUMES)
  public void setVmVolumes_JsonNullable(JsonNullable<List<AlertRuleCluster>> vmVolumes) {
    this.vmVolumes = vmVolumes;
  }

  public void setVmVolumes(List<AlertRuleCluster> vmVolumes) {
    this.vmVolumes = JsonNullable.<List<AlertRuleCluster>>of(vmVolumes);
  }


  public Graph witnesses(List<AlertRuleCluster> witnesses) {
    this.witnesses = JsonNullable.<List<AlertRuleCluster>>of(witnesses);
    return this;
  }

  public Graph addWitnessesItem(AlertRuleCluster witnessesItem) {
    if (this.witnesses == null || !this.witnesses.isPresent()) {
      this.witnesses = JsonNullable.<List<AlertRuleCluster>>of(new ArrayList<>());
    }
    try {
      this.witnesses.get().add(witnessesItem);
    } catch (java.util.NoSuchElementException e) {
      // this can never happen, as we make sure above that the value is present
    }
    return this;
  }

   /**
   * Get witnesses
   * @return witnesses
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public List<AlertRuleCluster> getWitnesses() {
        return witnesses.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_WITNESSES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<List<AlertRuleCluster>> getWitnesses_JsonNullable() {
    return witnesses;
  }
  
  @JsonProperty(JSON_PROPERTY_WITNESSES)
  public void setWitnesses_JsonNullable(JsonNullable<List<AlertRuleCluster>> witnesses) {
    this.witnesses = witnesses;
  }

  public void setWitnesses(List<AlertRuleCluster> witnesses) {
    this.witnesses = JsonNullable.<List<AlertRuleCluster>>of(witnesses);
  }


  public Graph zones(List<BrickTopoPowers> zones) {
    this.zones = JsonNullable.<List<BrickTopoPowers>>of(zones);
    return this;
  }

  public Graph addZonesItem(BrickTopoPowers zonesItem) {
    if (this.zones == null || !this.zones.isPresent()) {
      this.zones = JsonNullable.<List<BrickTopoPowers>>of(new ArrayList<>());
    }
    try {
      this.zones.get().add(zonesItem);
    } catch (java.util.NoSuchElementException e) {
      // this can never happen, as we make sure above that the value is present
    }
    return this;
  }

   /**
   * Get zones
   * @return zones
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public List<BrickTopoPowers> getZones() {
        return zones.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_ZONES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<List<BrickTopoPowers>> getZones_JsonNullable() {
    return zones;
  }
  
  @JsonProperty(JSON_PROPERTY_ZONES)
  public void setZones_JsonNullable(JsonNullable<List<BrickTopoPowers>> zones) {
    this.zones = zones;
  }

  public void setZones(List<BrickTopoPowers> zones) {
    this.zones = JsonNullable.<List<BrickTopoPowers>>of(zones);
  }


  /**
   * Return true if this Graph object is equal to o.
   */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Graph graph = (Graph) o;
    return equalsNullable(this.cluster, graph.cluster) &&
        equalsNullable(this.disks, graph.disks) &&
        equalsNullable(this.entityAsyncStatus, graph.entityAsyncStatus) &&
        equalsNullable(this.hosts, graph.hosts) &&
        Objects.equals(this.id, graph.id) &&
        Objects.equals(this.localId, graph.localId) &&
        equalsNullable(this.luns, graph.luns) &&
        Objects.equals(this.metricCount, graph.metricCount) &&
        Objects.equals(this.metricName, graph.metricName) &&
        Objects.equals(this.metricType, graph.metricType) &&
        equalsNullable(this.namespaces, graph.namespaces) &&
        equalsNullable(this.network, graph.network) &&
        equalsNullable(this.nics, graph.nics) &&
        Objects.equals(this.resourceType, graph.resourceType) &&
        equalsNullable(this.service, graph.service) &&
        Objects.equals(this.targets, graph.targets) &&
        Objects.equals(this.title, graph.title) &&
        Objects.equals(this.type, graph.type) &&
        Objects.equals(this.view, graph.view) &&
        equalsNullable(this.vmNics, graph.vmNics) &&
        equalsNullable(this.vms, graph.vms) &&
        equalsNullable(this.vmVolumes, graph.vmVolumes) &&
        equalsNullable(this.witnesses, graph.witnesses) &&
        equalsNullable(this.zones, graph.zones);
  }

  private static <T> boolean equalsNullable(JsonNullable<T> a, JsonNullable<T> b) {
    return a == b || (a != null && b != null && a.isPresent() && b.isPresent() && Objects.deepEquals(a.get(), b.get()));
  }

  @Override
  public int hashCode() {
    return Objects.hash(hashCodeNullable(cluster), hashCodeNullable(disks), hashCodeNullable(entityAsyncStatus), hashCodeNullable(hosts), id, localId, hashCodeNullable(luns), metricCount, metricName, metricType, hashCodeNullable(namespaces), hashCodeNullable(network), hashCodeNullable(nics), resourceType, hashCodeNullable(service), targets, title, type, view, hashCodeNullable(vmNics), hashCodeNullable(vms), hashCodeNullable(vmVolumes), hashCodeNullable(witnesses), hashCodeNullable(zones));
  }

  private static <T> int hashCodeNullable(JsonNullable<T> a) {
    if (a == null) {
      return 1;
    }
    return a.isPresent() ? Arrays.deepHashCode(new Object[]{a.get()}) : 31;
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Graph {\n");
    sb.append("    cluster: ").append(toIndentedString(cluster)).append("\n");
    sb.append("    disks: ").append(toIndentedString(disks)).append("\n");
    sb.append("    entityAsyncStatus: ").append(toIndentedString(entityAsyncStatus)).append("\n");
    sb.append("    hosts: ").append(toIndentedString(hosts)).append("\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    localId: ").append(toIndentedString(localId)).append("\n");
    sb.append("    luns: ").append(toIndentedString(luns)).append("\n");
    sb.append("    metricCount: ").append(toIndentedString(metricCount)).append("\n");
    sb.append("    metricName: ").append(toIndentedString(metricName)).append("\n");
    sb.append("    metricType: ").append(toIndentedString(metricType)).append("\n");
    sb.append("    namespaces: ").append(toIndentedString(namespaces)).append("\n");
    sb.append("    network: ").append(toIndentedString(network)).append("\n");
    sb.append("    nics: ").append(toIndentedString(nics)).append("\n");
    sb.append("    resourceType: ").append(toIndentedString(resourceType)).append("\n");
    sb.append("    service: ").append(toIndentedString(service)).append("\n");
    sb.append("    targets: ").append(toIndentedString(targets)).append("\n");
    sb.append("    title: ").append(toIndentedString(title)).append("\n");
    sb.append("    type: ").append(toIndentedString(type)).append("\n");
    sb.append("    view: ").append(toIndentedString(view)).append("\n");
    sb.append("    vmNics: ").append(toIndentedString(vmNics)).append("\n");
    sb.append("    vms: ").append(toIndentedString(vms)).append("\n");
    sb.append("    vmVolumes: ").append(toIndentedString(vmVolumes)).append("\n");
    sb.append("    witnesses: ").append(toIndentedString(witnesses)).append("\n");
    sb.append("    zones: ").append(toIndentedString(zones)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

