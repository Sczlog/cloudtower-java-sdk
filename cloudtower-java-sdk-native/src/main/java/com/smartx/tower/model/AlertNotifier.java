/*
 * Tower SDK API
 * cloudtower operation API and SDK
 *
 * The version of the OpenAPI document: 1.7.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.smartx.tower.model;

import java.util.Objects;
import java.util.Arrays;
import java.util.Map;
import java.util.HashMap;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import com.smartx.tower.model.NotifierLanguageCode;
import com.smartx.tower.model.NotifierSecurityMode;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.util.ArrayList;
import java.util.List;
import org.openapitools.jackson.nullable.JsonNullable;
import com.fasterxml.jackson.annotation.JsonIgnore;
import org.openapitools.jackson.nullable.JsonNullable;
import java.util.NoSuchElementException;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;


/**
 * AlertNotifier
 */
@JsonPropertyOrder({
  AlertNotifier.JSON_PROPERTY_DISABLED,
  AlertNotifier.JSON_PROPERTY_EMAIL_FROM,
  AlertNotifier.JSON_PROPERTY_EMAIL_TOS,
  AlertNotifier.JSON_PROPERTY_ID,
  AlertNotifier.JSON_PROPERTY_LANGUAGE_CODE,
  AlertNotifier.JSON_PROPERTY_NOTICE_SEVERITIES,
  AlertNotifier.JSON_PROPERTY_SECURITY_MODE,
  AlertNotifier.JSON_PROPERTY_SMTP_SERVER_HOST,
  AlertNotifier.JSON_PROPERTY_SMTP_SERVER_PORT,
  AlertNotifier.JSON_PROPERTY_USERNAME
})
@javax.annotation.processing.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2021-10-27T15:59:14.939791800+08:00[Asia/Shanghai]")
public class AlertNotifier {
  public static final String JSON_PROPERTY_DISABLED = "disabled";
  private Boolean disabled;

  public static final String JSON_PROPERTY_EMAIL_FROM = "email_from";
  private JsonNullable<String> emailFrom = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_EMAIL_TOS = "email_tos";
  private List<String> emailTos = new ArrayList<>();

  public static final String JSON_PROPERTY_ID = "id";
  private String id;

  public static final String JSON_PROPERTY_LANGUAGE_CODE = "language_code";
  private JsonNullable<NotifierLanguageCode> languageCode = JsonNullable.<NotifierLanguageCode>undefined();

  public static final String JSON_PROPERTY_NOTICE_SEVERITIES = "notice_severities";
  private List<String> noticeSeverities = new ArrayList<>();

  public static final String JSON_PROPERTY_SECURITY_MODE = "security_mode";
  private JsonNullable<NotifierSecurityMode> securityMode = JsonNullable.<NotifierSecurityMode>undefined();

  public static final String JSON_PROPERTY_SMTP_SERVER_HOST = "smtp_server_host";
  private JsonNullable<String> smtpServerHost = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_SMTP_SERVER_PORT = "smtp_server_port";
  private JsonNullable<Double> smtpServerPort = JsonNullable.<Double>undefined();

  public static final String JSON_PROPERTY_USERNAME = "username";
  private JsonNullable<String> username = JsonNullable.<String>undefined();


  public AlertNotifier disabled(Boolean disabled) {
    this.disabled = disabled;
    return this;
  }

   /**
   * Get disabled
   * @return disabled
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")
  @JsonProperty(JSON_PROPERTY_DISABLED)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public Boolean getDisabled() {
    return disabled;
  }


  @JsonProperty(JSON_PROPERTY_DISABLED)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setDisabled(Boolean disabled) {
    this.disabled = disabled;
  }


  public AlertNotifier emailFrom(String emailFrom) {
    this.emailFrom = JsonNullable.<String>of(emailFrom);
    return this;
  }

   /**
   * Get emailFrom
   * @return emailFrom
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getEmailFrom() {
        return emailFrom.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_EMAIL_FROM)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getEmailFrom_JsonNullable() {
    return emailFrom;
  }
  
  @JsonProperty(JSON_PROPERTY_EMAIL_FROM)
  public void setEmailFrom_JsonNullable(JsonNullable<String> emailFrom) {
    this.emailFrom = emailFrom;
  }

  public void setEmailFrom(String emailFrom) {
    this.emailFrom = JsonNullable.<String>of(emailFrom);
  }


  public AlertNotifier emailTos(List<String> emailTos) {
    this.emailTos = emailTos;
    return this;
  }

  public AlertNotifier addEmailTosItem(String emailTosItem) {
    this.emailTos.add(emailTosItem);
    return this;
  }

   /**
   * Get emailTos
   * @return emailTos
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")
  @JsonProperty(JSON_PROPERTY_EMAIL_TOS)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public List<String> getEmailTos() {
    return emailTos;
  }


  @JsonProperty(JSON_PROPERTY_EMAIL_TOS)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setEmailTos(List<String> emailTos) {
    this.emailTos = emailTos;
  }


  public AlertNotifier id(String id) {
    this.id = id;
    return this;
  }

   /**
   * Get id
   * @return id
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")
  @JsonProperty(JSON_PROPERTY_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getId() {
    return id;
  }


  @JsonProperty(JSON_PROPERTY_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setId(String id) {
    this.id = id;
  }


  public AlertNotifier languageCode(NotifierLanguageCode languageCode) {
    this.languageCode = JsonNullable.<NotifierLanguageCode>of(languageCode);
    return this;
  }

   /**
   * Get languageCode
   * @return languageCode
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public NotifierLanguageCode getLanguageCode() {
        return languageCode.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_LANGUAGE_CODE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<NotifierLanguageCode> getLanguageCode_JsonNullable() {
    return languageCode;
  }
  
  @JsonProperty(JSON_PROPERTY_LANGUAGE_CODE)
  public void setLanguageCode_JsonNullable(JsonNullable<NotifierLanguageCode> languageCode) {
    this.languageCode = languageCode;
  }

  public void setLanguageCode(NotifierLanguageCode languageCode) {
    this.languageCode = JsonNullable.<NotifierLanguageCode>of(languageCode);
  }


  public AlertNotifier noticeSeverities(List<String> noticeSeverities) {
    this.noticeSeverities = noticeSeverities;
    return this;
  }

  public AlertNotifier addNoticeSeveritiesItem(String noticeSeveritiesItem) {
    this.noticeSeverities.add(noticeSeveritiesItem);
    return this;
  }

   /**
   * Get noticeSeverities
   * @return noticeSeverities
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")
  @JsonProperty(JSON_PROPERTY_NOTICE_SEVERITIES)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public List<String> getNoticeSeverities() {
    return noticeSeverities;
  }


  @JsonProperty(JSON_PROPERTY_NOTICE_SEVERITIES)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setNoticeSeverities(List<String> noticeSeverities) {
    this.noticeSeverities = noticeSeverities;
  }


  public AlertNotifier securityMode(NotifierSecurityMode securityMode) {
    this.securityMode = JsonNullable.<NotifierSecurityMode>of(securityMode);
    return this;
  }

   /**
   * Get securityMode
   * @return securityMode
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public NotifierSecurityMode getSecurityMode() {
        return securityMode.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_SECURITY_MODE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<NotifierSecurityMode> getSecurityMode_JsonNullable() {
    return securityMode;
  }
  
  @JsonProperty(JSON_PROPERTY_SECURITY_MODE)
  public void setSecurityMode_JsonNullable(JsonNullable<NotifierSecurityMode> securityMode) {
    this.securityMode = securityMode;
  }

  public void setSecurityMode(NotifierSecurityMode securityMode) {
    this.securityMode = JsonNullable.<NotifierSecurityMode>of(securityMode);
  }


  public AlertNotifier smtpServerHost(String smtpServerHost) {
    this.smtpServerHost = JsonNullable.<String>of(smtpServerHost);
    return this;
  }

   /**
   * Get smtpServerHost
   * @return smtpServerHost
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getSmtpServerHost() {
        return smtpServerHost.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_SMTP_SERVER_HOST)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getSmtpServerHost_JsonNullable() {
    return smtpServerHost;
  }
  
  @JsonProperty(JSON_PROPERTY_SMTP_SERVER_HOST)
  public void setSmtpServerHost_JsonNullable(JsonNullable<String> smtpServerHost) {
    this.smtpServerHost = smtpServerHost;
  }

  public void setSmtpServerHost(String smtpServerHost) {
    this.smtpServerHost = JsonNullable.<String>of(smtpServerHost);
  }


  public AlertNotifier smtpServerPort(Double smtpServerPort) {
    this.smtpServerPort = JsonNullable.<Double>of(smtpServerPort);
    return this;
  }

   /**
   * Get smtpServerPort
   * @return smtpServerPort
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public Double getSmtpServerPort() {
        return smtpServerPort.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_SMTP_SERVER_PORT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<Double> getSmtpServerPort_JsonNullable() {
    return smtpServerPort;
  }
  
  @JsonProperty(JSON_PROPERTY_SMTP_SERVER_PORT)
  public void setSmtpServerPort_JsonNullable(JsonNullable<Double> smtpServerPort) {
    this.smtpServerPort = smtpServerPort;
  }

  public void setSmtpServerPort(Double smtpServerPort) {
    this.smtpServerPort = JsonNullable.<Double>of(smtpServerPort);
  }


  public AlertNotifier username(String username) {
    this.username = JsonNullable.<String>of(username);
    return this;
  }

   /**
   * Get username
   * @return username
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getUsername() {
        return username.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_USERNAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getUsername_JsonNullable() {
    return username;
  }
  
  @JsonProperty(JSON_PROPERTY_USERNAME)
  public void setUsername_JsonNullable(JsonNullable<String> username) {
    this.username = username;
  }

  public void setUsername(String username) {
    this.username = JsonNullable.<String>of(username);
  }


  /**
   * Return true if this AlertNotifier object is equal to o.
   */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    AlertNotifier alertNotifier = (AlertNotifier) o;
    return Objects.equals(this.disabled, alertNotifier.disabled) &&
        equalsNullable(this.emailFrom, alertNotifier.emailFrom) &&
        Objects.equals(this.emailTos, alertNotifier.emailTos) &&
        Objects.equals(this.id, alertNotifier.id) &&
        equalsNullable(this.languageCode, alertNotifier.languageCode) &&
        Objects.equals(this.noticeSeverities, alertNotifier.noticeSeverities) &&
        equalsNullable(this.securityMode, alertNotifier.securityMode) &&
        equalsNullable(this.smtpServerHost, alertNotifier.smtpServerHost) &&
        equalsNullable(this.smtpServerPort, alertNotifier.smtpServerPort) &&
        equalsNullable(this.username, alertNotifier.username);
  }

  private static <T> boolean equalsNullable(JsonNullable<T> a, JsonNullable<T> b) {
    return a == b || (a != null && b != null && a.isPresent() && b.isPresent() && Objects.deepEquals(a.get(), b.get()));
  }

  @Override
  public int hashCode() {
    return Objects.hash(disabled, hashCodeNullable(emailFrom), emailTos, id, hashCodeNullable(languageCode), noticeSeverities, hashCodeNullable(securityMode), hashCodeNullable(smtpServerHost), hashCodeNullable(smtpServerPort), hashCodeNullable(username));
  }

  private static <T> int hashCodeNullable(JsonNullable<T> a) {
    if (a == null) {
      return 1;
    }
    return a.isPresent() ? Arrays.deepHashCode(new Object[]{a.get()}) : 31;
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class AlertNotifier {\n");
    sb.append("    disabled: ").append(toIndentedString(disabled)).append("\n");
    sb.append("    emailFrom: ").append(toIndentedString(emailFrom)).append("\n");
    sb.append("    emailTos: ").append(toIndentedString(emailTos)).append("\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    languageCode: ").append(toIndentedString(languageCode)).append("\n");
    sb.append("    noticeSeverities: ").append(toIndentedString(noticeSeverities)).append("\n");
    sb.append("    securityMode: ").append(toIndentedString(securityMode)).append("\n");
    sb.append("    smtpServerHost: ").append(toIndentedString(smtpServerHost)).append("\n");
    sb.append("    smtpServerPort: ").append(toIndentedString(smtpServerPort)).append("\n");
    sb.append("    username: ").append(toIndentedString(username)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

