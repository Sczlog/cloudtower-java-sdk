/*
 * Tower SDK API
 * cloudtower operation API and SDK
 *
 * The version of the OpenAPI document: 1.7.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.smartx.tower.model;

import java.util.Objects;
import java.util.Arrays;
import java.util.Map;
import java.util.HashMap;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import com.smartx.tower.model.EntityAsyncStatus;
import com.smartx.tower.model.LabelWhereInput;
import com.smartx.tower.model.NvmfNamespaceWhereInput;
import com.smartx.tower.model.NvmfSubsystemWhereInput;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.util.ArrayList;
import java.util.List;
import org.openapitools.jackson.nullable.JsonNullable;
import com.fasterxml.jackson.annotation.JsonIgnore;
import org.openapitools.jackson.nullable.JsonNullable;
import java.util.NoSuchElementException;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;


/**
 * NamespaceGroupWhereInput
 */
@JsonPropertyOrder({
  NamespaceGroupWhereInput.JSON_PROPERTY_A_N_D,
  NamespaceGroupWhereInput.JSON_PROPERTY_ENTITY_ASYNC_STATUS,
  NamespaceGroupWhereInput.JSON_PROPERTY_ENTITY_ASYNC_STATUS_IN,
  NamespaceGroupWhereInput.JSON_PROPERTY_ENTITY_ASYNC_STATUS_NOT,
  NamespaceGroupWhereInput.JSON_PROPERTY_ENTITY_ASYNC_STATUS_NOT_IN,
  NamespaceGroupWhereInput.JSON_PROPERTY_ID,
  NamespaceGroupWhereInput.JSON_PROPERTY_ID_CONTAINS,
  NamespaceGroupWhereInput.JSON_PROPERTY_ID_ENDS_WITH,
  NamespaceGroupWhereInput.JSON_PROPERTY_ID_GT,
  NamespaceGroupWhereInput.JSON_PROPERTY_ID_GTE,
  NamespaceGroupWhereInput.JSON_PROPERTY_ID_IN,
  NamespaceGroupWhereInput.JSON_PROPERTY_ID_LT,
  NamespaceGroupWhereInput.JSON_PROPERTY_ID_LTE,
  NamespaceGroupWhereInput.JSON_PROPERTY_ID_NOT,
  NamespaceGroupWhereInput.JSON_PROPERTY_ID_NOT_CONTAINS,
  NamespaceGroupWhereInput.JSON_PROPERTY_ID_NOT_ENDS_WITH,
  NamespaceGroupWhereInput.JSON_PROPERTY_ID_NOT_IN,
  NamespaceGroupWhereInput.JSON_PROPERTY_ID_NOT_STARTS_WITH,
  NamespaceGroupWhereInput.JSON_PROPERTY_ID_STARTS_WITH,
  NamespaceGroupWhereInput.JSON_PROPERTY_LABELS_EVERY,
  NamespaceGroupWhereInput.JSON_PROPERTY_LABELS_NONE,
  NamespaceGroupWhereInput.JSON_PROPERTY_LABELS_SOME,
  NamespaceGroupWhereInput.JSON_PROPERTY_LOCAL_CREATE_TIME,
  NamespaceGroupWhereInput.JSON_PROPERTY_LOCAL_CREATE_TIME_GT,
  NamespaceGroupWhereInput.JSON_PROPERTY_LOCAL_CREATE_TIME_GTE,
  NamespaceGroupWhereInput.JSON_PROPERTY_LOCAL_CREATE_TIME_IN,
  NamespaceGroupWhereInput.JSON_PROPERTY_LOCAL_CREATE_TIME_LT,
  NamespaceGroupWhereInput.JSON_PROPERTY_LOCAL_CREATE_TIME_LTE,
  NamespaceGroupWhereInput.JSON_PROPERTY_LOCAL_CREATE_TIME_NOT,
  NamespaceGroupWhereInput.JSON_PROPERTY_LOCAL_CREATE_TIME_NOT_IN,
  NamespaceGroupWhereInput.JSON_PROPERTY_LOCAL_ID,
  NamespaceGroupWhereInput.JSON_PROPERTY_LOCAL_ID_CONTAINS,
  NamespaceGroupWhereInput.JSON_PROPERTY_LOCAL_ID_ENDS_WITH,
  NamespaceGroupWhereInput.JSON_PROPERTY_LOCAL_ID_GT,
  NamespaceGroupWhereInput.JSON_PROPERTY_LOCAL_ID_GTE,
  NamespaceGroupWhereInput.JSON_PROPERTY_LOCAL_ID_IN,
  NamespaceGroupWhereInput.JSON_PROPERTY_LOCAL_ID_LT,
  NamespaceGroupWhereInput.JSON_PROPERTY_LOCAL_ID_LTE,
  NamespaceGroupWhereInput.JSON_PROPERTY_LOCAL_ID_NOT,
  NamespaceGroupWhereInput.JSON_PROPERTY_LOCAL_ID_NOT_CONTAINS,
  NamespaceGroupWhereInput.JSON_PROPERTY_LOCAL_ID_NOT_ENDS_WITH,
  NamespaceGroupWhereInput.JSON_PROPERTY_LOCAL_ID_NOT_IN,
  NamespaceGroupWhereInput.JSON_PROPERTY_LOCAL_ID_NOT_STARTS_WITH,
  NamespaceGroupWhereInput.JSON_PROPERTY_LOCAL_ID_STARTS_WITH,
  NamespaceGroupWhereInput.JSON_PROPERTY_NAME,
  NamespaceGroupWhereInput.JSON_PROPERTY_NAME_CONTAINS,
  NamespaceGroupWhereInput.JSON_PROPERTY_NAME_ENDS_WITH,
  NamespaceGroupWhereInput.JSON_PROPERTY_NAME_GT,
  NamespaceGroupWhereInput.JSON_PROPERTY_NAME_GTE,
  NamespaceGroupWhereInput.JSON_PROPERTY_NAME_IN,
  NamespaceGroupWhereInput.JSON_PROPERTY_NAME_LT,
  NamespaceGroupWhereInput.JSON_PROPERTY_NAME_LTE,
  NamespaceGroupWhereInput.JSON_PROPERTY_NAME_NOT,
  NamespaceGroupWhereInput.JSON_PROPERTY_NAME_NOT_CONTAINS,
  NamespaceGroupWhereInput.JSON_PROPERTY_NAME_NOT_ENDS_WITH,
  NamespaceGroupWhereInput.JSON_PROPERTY_NAME_NOT_IN,
  NamespaceGroupWhereInput.JSON_PROPERTY_NAME_NOT_STARTS_WITH,
  NamespaceGroupWhereInput.JSON_PROPERTY_NAME_STARTS_WITH,
  NamespaceGroupWhereInput.JSON_PROPERTY_NAMESPACES_EVERY,
  NamespaceGroupWhereInput.JSON_PROPERTY_NAMESPACES_NONE,
  NamespaceGroupWhereInput.JSON_PROPERTY_NAMESPACES_SOME,
  NamespaceGroupWhereInput.JSON_PROPERTY_N_O_T,
  NamespaceGroupWhereInput.JSON_PROPERTY_NVMF_SUBSYSTEM,
  NamespaceGroupWhereInput.JSON_PROPERTY_O_R
})
@javax.annotation.processing.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2021-10-27T15:59:14.939791800+08:00[Asia/Shanghai]")
public class NamespaceGroupWhereInput {
  public static final String JSON_PROPERTY_A_N_D = "AND";
  private JsonNullable<List<NamespaceGroupWhereInput>> AND = JsonNullable.<List<NamespaceGroupWhereInput>>undefined();

  public static final String JSON_PROPERTY_ENTITY_ASYNC_STATUS = "entityAsyncStatus";
  private JsonNullable<EntityAsyncStatus> entityAsyncStatus = JsonNullable.<EntityAsyncStatus>undefined();

  public static final String JSON_PROPERTY_ENTITY_ASYNC_STATUS_IN = "entityAsyncStatus_in";
  private JsonNullable<List<EntityAsyncStatus>> entityAsyncStatusIn = JsonNullable.<List<EntityAsyncStatus>>undefined();

  public static final String JSON_PROPERTY_ENTITY_ASYNC_STATUS_NOT = "entityAsyncStatus_not";
  private JsonNullable<EntityAsyncStatus> entityAsyncStatusNot = JsonNullable.<EntityAsyncStatus>undefined();

  public static final String JSON_PROPERTY_ENTITY_ASYNC_STATUS_NOT_IN = "entityAsyncStatus_not_in";
  private JsonNullable<List<EntityAsyncStatus>> entityAsyncStatusNotIn = JsonNullable.<List<EntityAsyncStatus>>undefined();

  public static final String JSON_PROPERTY_ID = "id";
  private JsonNullable<String> id = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_ID_CONTAINS = "id_contains";
  private JsonNullable<String> idContains = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_ID_ENDS_WITH = "id_ends_with";
  private JsonNullable<String> idEndsWith = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_ID_GT = "id_gt";
  private JsonNullable<String> idGt = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_ID_GTE = "id_gte";
  private JsonNullable<String> idGte = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_ID_IN = "id_in";
  private JsonNullable<List<String>> idIn = JsonNullable.<List<String>>undefined();

  public static final String JSON_PROPERTY_ID_LT = "id_lt";
  private JsonNullable<String> idLt = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_ID_LTE = "id_lte";
  private JsonNullable<String> idLte = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_ID_NOT = "id_not";
  private JsonNullable<String> idNot = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_ID_NOT_CONTAINS = "id_not_contains";
  private JsonNullable<String> idNotContains = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_ID_NOT_ENDS_WITH = "id_not_ends_with";
  private JsonNullable<String> idNotEndsWith = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_ID_NOT_IN = "id_not_in";
  private JsonNullable<List<String>> idNotIn = JsonNullable.<List<String>>undefined();

  public static final String JSON_PROPERTY_ID_NOT_STARTS_WITH = "id_not_starts_with";
  private JsonNullable<String> idNotStartsWith = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_ID_STARTS_WITH = "id_starts_with";
  private JsonNullable<String> idStartsWith = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_LABELS_EVERY = "labels_every";
  private JsonNullable<LabelWhereInput> labelsEvery = JsonNullable.<LabelWhereInput>undefined();

  public static final String JSON_PROPERTY_LABELS_NONE = "labels_none";
  private JsonNullable<LabelWhereInput> labelsNone = JsonNullable.<LabelWhereInput>undefined();

  public static final String JSON_PROPERTY_LABELS_SOME = "labels_some";
  private JsonNullable<LabelWhereInput> labelsSome = JsonNullable.<LabelWhereInput>undefined();

  public static final String JSON_PROPERTY_LOCAL_CREATE_TIME = "local_create_time";
  private JsonNullable<String> localCreateTime = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_LOCAL_CREATE_TIME_GT = "local_create_time_gt";
  private JsonNullable<String> localCreateTimeGt = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_LOCAL_CREATE_TIME_GTE = "local_create_time_gte";
  private JsonNullable<String> localCreateTimeGte = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_LOCAL_CREATE_TIME_IN = "local_create_time_in";
  private JsonNullable<List<String>> localCreateTimeIn = JsonNullable.<List<String>>undefined();

  public static final String JSON_PROPERTY_LOCAL_CREATE_TIME_LT = "local_create_time_lt";
  private JsonNullable<String> localCreateTimeLt = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_LOCAL_CREATE_TIME_LTE = "local_create_time_lte";
  private JsonNullable<String> localCreateTimeLte = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_LOCAL_CREATE_TIME_NOT = "local_create_time_not";
  private JsonNullable<String> localCreateTimeNot = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_LOCAL_CREATE_TIME_NOT_IN = "local_create_time_not_in";
  private JsonNullable<List<String>> localCreateTimeNotIn = JsonNullable.<List<String>>undefined();

  public static final String JSON_PROPERTY_LOCAL_ID = "local_id";
  private JsonNullable<String> localId = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_LOCAL_ID_CONTAINS = "local_id_contains";
  private JsonNullable<String> localIdContains = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_LOCAL_ID_ENDS_WITH = "local_id_ends_with";
  private JsonNullable<String> localIdEndsWith = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_LOCAL_ID_GT = "local_id_gt";
  private JsonNullable<String> localIdGt = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_LOCAL_ID_GTE = "local_id_gte";
  private JsonNullable<String> localIdGte = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_LOCAL_ID_IN = "local_id_in";
  private JsonNullable<List<String>> localIdIn = JsonNullable.<List<String>>undefined();

  public static final String JSON_PROPERTY_LOCAL_ID_LT = "local_id_lt";
  private JsonNullable<String> localIdLt = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_LOCAL_ID_LTE = "local_id_lte";
  private JsonNullable<String> localIdLte = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_LOCAL_ID_NOT = "local_id_not";
  private JsonNullable<String> localIdNot = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_LOCAL_ID_NOT_CONTAINS = "local_id_not_contains";
  private JsonNullable<String> localIdNotContains = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_LOCAL_ID_NOT_ENDS_WITH = "local_id_not_ends_with";
  private JsonNullable<String> localIdNotEndsWith = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_LOCAL_ID_NOT_IN = "local_id_not_in";
  private JsonNullable<List<String>> localIdNotIn = JsonNullable.<List<String>>undefined();

  public static final String JSON_PROPERTY_LOCAL_ID_NOT_STARTS_WITH = "local_id_not_starts_with";
  private JsonNullable<String> localIdNotStartsWith = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_LOCAL_ID_STARTS_WITH = "local_id_starts_with";
  private JsonNullable<String> localIdStartsWith = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_NAME = "name";
  private JsonNullable<String> name = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_NAME_CONTAINS = "name_contains";
  private JsonNullable<String> nameContains = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_NAME_ENDS_WITH = "name_ends_with";
  private JsonNullable<String> nameEndsWith = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_NAME_GT = "name_gt";
  private JsonNullable<String> nameGt = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_NAME_GTE = "name_gte";
  private JsonNullable<String> nameGte = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_NAME_IN = "name_in";
  private JsonNullable<List<String>> nameIn = JsonNullable.<List<String>>undefined();

  public static final String JSON_PROPERTY_NAME_LT = "name_lt";
  private JsonNullable<String> nameLt = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_NAME_LTE = "name_lte";
  private JsonNullable<String> nameLte = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_NAME_NOT = "name_not";
  private JsonNullable<String> nameNot = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_NAME_NOT_CONTAINS = "name_not_contains";
  private JsonNullable<String> nameNotContains = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_NAME_NOT_ENDS_WITH = "name_not_ends_with";
  private JsonNullable<String> nameNotEndsWith = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_NAME_NOT_IN = "name_not_in";
  private JsonNullable<List<String>> nameNotIn = JsonNullable.<List<String>>undefined();

  public static final String JSON_PROPERTY_NAME_NOT_STARTS_WITH = "name_not_starts_with";
  private JsonNullable<String> nameNotStartsWith = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_NAME_STARTS_WITH = "name_starts_with";
  private JsonNullable<String> nameStartsWith = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_NAMESPACES_EVERY = "namespaces_every";
  private JsonNullable<NvmfNamespaceWhereInput> namespacesEvery = JsonNullable.<NvmfNamespaceWhereInput>undefined();

  public static final String JSON_PROPERTY_NAMESPACES_NONE = "namespaces_none";
  private JsonNullable<NvmfNamespaceWhereInput> namespacesNone = JsonNullable.<NvmfNamespaceWhereInput>undefined();

  public static final String JSON_PROPERTY_NAMESPACES_SOME = "namespaces_some";
  private JsonNullable<NvmfNamespaceWhereInput> namespacesSome = JsonNullable.<NvmfNamespaceWhereInput>undefined();

  public static final String JSON_PROPERTY_N_O_T = "NOT";
  private JsonNullable<List<NamespaceGroupWhereInput>> NOT = JsonNullable.<List<NamespaceGroupWhereInput>>undefined();

  public static final String JSON_PROPERTY_NVMF_SUBSYSTEM = "nvmf_subsystem";
  private JsonNullable<NvmfSubsystemWhereInput> nvmfSubsystem = JsonNullable.<NvmfSubsystemWhereInput>undefined();

  public static final String JSON_PROPERTY_O_R = "OR";
  private JsonNullable<List<NamespaceGroupWhereInput>> OR = JsonNullable.<List<NamespaceGroupWhereInput>>undefined();


  public NamespaceGroupWhereInput AND(List<NamespaceGroupWhereInput> AND) {
    this.AND = JsonNullable.<List<NamespaceGroupWhereInput>>of(AND);
    return this;
  }

  public NamespaceGroupWhereInput addANDItem(NamespaceGroupWhereInput ANDItem) {
    if (this.AND == null || !this.AND.isPresent()) {
      this.AND = JsonNullable.<List<NamespaceGroupWhereInput>>of(new ArrayList<>());
    }
    try {
      this.AND.get().add(ANDItem);
    } catch (java.util.NoSuchElementException e) {
      // this can never happen, as we make sure above that the value is present
    }
    return this;
  }

   /**
   * Get AND
   * @return AND
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public List<NamespaceGroupWhereInput> getAND() {
        return AND.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_A_N_D)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<List<NamespaceGroupWhereInput>> getAND_JsonNullable() {
    return AND;
  }
  
  @JsonProperty(JSON_PROPERTY_A_N_D)
  public void setAND_JsonNullable(JsonNullable<List<NamespaceGroupWhereInput>> AND) {
    this.AND = AND;
  }

  public void setAND(List<NamespaceGroupWhereInput> AND) {
    this.AND = JsonNullable.<List<NamespaceGroupWhereInput>>of(AND);
  }


  public NamespaceGroupWhereInput entityAsyncStatus(EntityAsyncStatus entityAsyncStatus) {
    this.entityAsyncStatus = JsonNullable.<EntityAsyncStatus>of(entityAsyncStatus);
    return this;
  }

   /**
   * Get entityAsyncStatus
   * @return entityAsyncStatus
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public EntityAsyncStatus getEntityAsyncStatus() {
        return entityAsyncStatus.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_ENTITY_ASYNC_STATUS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<EntityAsyncStatus> getEntityAsyncStatus_JsonNullable() {
    return entityAsyncStatus;
  }
  
  @JsonProperty(JSON_PROPERTY_ENTITY_ASYNC_STATUS)
  public void setEntityAsyncStatus_JsonNullable(JsonNullable<EntityAsyncStatus> entityAsyncStatus) {
    this.entityAsyncStatus = entityAsyncStatus;
  }

  public void setEntityAsyncStatus(EntityAsyncStatus entityAsyncStatus) {
    this.entityAsyncStatus = JsonNullable.<EntityAsyncStatus>of(entityAsyncStatus);
  }


  public NamespaceGroupWhereInput entityAsyncStatusIn(List<EntityAsyncStatus> entityAsyncStatusIn) {
    this.entityAsyncStatusIn = JsonNullable.<List<EntityAsyncStatus>>of(entityAsyncStatusIn);
    return this;
  }

  public NamespaceGroupWhereInput addEntityAsyncStatusInItem(EntityAsyncStatus entityAsyncStatusInItem) {
    if (this.entityAsyncStatusIn == null || !this.entityAsyncStatusIn.isPresent()) {
      this.entityAsyncStatusIn = JsonNullable.<List<EntityAsyncStatus>>of(new ArrayList<>());
    }
    try {
      this.entityAsyncStatusIn.get().add(entityAsyncStatusInItem);
    } catch (java.util.NoSuchElementException e) {
      // this can never happen, as we make sure above that the value is present
    }
    return this;
  }

   /**
   * Get entityAsyncStatusIn
   * @return entityAsyncStatusIn
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public List<EntityAsyncStatus> getEntityAsyncStatusIn() {
        return entityAsyncStatusIn.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_ENTITY_ASYNC_STATUS_IN)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<List<EntityAsyncStatus>> getEntityAsyncStatusIn_JsonNullable() {
    return entityAsyncStatusIn;
  }
  
  @JsonProperty(JSON_PROPERTY_ENTITY_ASYNC_STATUS_IN)
  public void setEntityAsyncStatusIn_JsonNullable(JsonNullable<List<EntityAsyncStatus>> entityAsyncStatusIn) {
    this.entityAsyncStatusIn = entityAsyncStatusIn;
  }

  public void setEntityAsyncStatusIn(List<EntityAsyncStatus> entityAsyncStatusIn) {
    this.entityAsyncStatusIn = JsonNullable.<List<EntityAsyncStatus>>of(entityAsyncStatusIn);
  }


  public NamespaceGroupWhereInput entityAsyncStatusNot(EntityAsyncStatus entityAsyncStatusNot) {
    this.entityAsyncStatusNot = JsonNullable.<EntityAsyncStatus>of(entityAsyncStatusNot);
    return this;
  }

   /**
   * Get entityAsyncStatusNot
   * @return entityAsyncStatusNot
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public EntityAsyncStatus getEntityAsyncStatusNot() {
        return entityAsyncStatusNot.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_ENTITY_ASYNC_STATUS_NOT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<EntityAsyncStatus> getEntityAsyncStatusNot_JsonNullable() {
    return entityAsyncStatusNot;
  }
  
  @JsonProperty(JSON_PROPERTY_ENTITY_ASYNC_STATUS_NOT)
  public void setEntityAsyncStatusNot_JsonNullable(JsonNullable<EntityAsyncStatus> entityAsyncStatusNot) {
    this.entityAsyncStatusNot = entityAsyncStatusNot;
  }

  public void setEntityAsyncStatusNot(EntityAsyncStatus entityAsyncStatusNot) {
    this.entityAsyncStatusNot = JsonNullable.<EntityAsyncStatus>of(entityAsyncStatusNot);
  }


  public NamespaceGroupWhereInput entityAsyncStatusNotIn(List<EntityAsyncStatus> entityAsyncStatusNotIn) {
    this.entityAsyncStatusNotIn = JsonNullable.<List<EntityAsyncStatus>>of(entityAsyncStatusNotIn);
    return this;
  }

  public NamespaceGroupWhereInput addEntityAsyncStatusNotInItem(EntityAsyncStatus entityAsyncStatusNotInItem) {
    if (this.entityAsyncStatusNotIn == null || !this.entityAsyncStatusNotIn.isPresent()) {
      this.entityAsyncStatusNotIn = JsonNullable.<List<EntityAsyncStatus>>of(new ArrayList<>());
    }
    try {
      this.entityAsyncStatusNotIn.get().add(entityAsyncStatusNotInItem);
    } catch (java.util.NoSuchElementException e) {
      // this can never happen, as we make sure above that the value is present
    }
    return this;
  }

   /**
   * Get entityAsyncStatusNotIn
   * @return entityAsyncStatusNotIn
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public List<EntityAsyncStatus> getEntityAsyncStatusNotIn() {
        return entityAsyncStatusNotIn.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_ENTITY_ASYNC_STATUS_NOT_IN)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<List<EntityAsyncStatus>> getEntityAsyncStatusNotIn_JsonNullable() {
    return entityAsyncStatusNotIn;
  }
  
  @JsonProperty(JSON_PROPERTY_ENTITY_ASYNC_STATUS_NOT_IN)
  public void setEntityAsyncStatusNotIn_JsonNullable(JsonNullable<List<EntityAsyncStatus>> entityAsyncStatusNotIn) {
    this.entityAsyncStatusNotIn = entityAsyncStatusNotIn;
  }

  public void setEntityAsyncStatusNotIn(List<EntityAsyncStatus> entityAsyncStatusNotIn) {
    this.entityAsyncStatusNotIn = JsonNullable.<List<EntityAsyncStatus>>of(entityAsyncStatusNotIn);
  }


  public NamespaceGroupWhereInput id(String id) {
    this.id = JsonNullable.<String>of(id);
    return this;
  }

   /**
   * Get id
   * @return id
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getId() {
        return id.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getId_JsonNullable() {
    return id;
  }
  
  @JsonProperty(JSON_PROPERTY_ID)
  public void setId_JsonNullable(JsonNullable<String> id) {
    this.id = id;
  }

  public void setId(String id) {
    this.id = JsonNullable.<String>of(id);
  }


  public NamespaceGroupWhereInput idContains(String idContains) {
    this.idContains = JsonNullable.<String>of(idContains);
    return this;
  }

   /**
   * Get idContains
   * @return idContains
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getIdContains() {
        return idContains.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_ID_CONTAINS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getIdContains_JsonNullable() {
    return idContains;
  }
  
  @JsonProperty(JSON_PROPERTY_ID_CONTAINS)
  public void setIdContains_JsonNullable(JsonNullable<String> idContains) {
    this.idContains = idContains;
  }

  public void setIdContains(String idContains) {
    this.idContains = JsonNullable.<String>of(idContains);
  }


  public NamespaceGroupWhereInput idEndsWith(String idEndsWith) {
    this.idEndsWith = JsonNullable.<String>of(idEndsWith);
    return this;
  }

   /**
   * Get idEndsWith
   * @return idEndsWith
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getIdEndsWith() {
        return idEndsWith.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_ID_ENDS_WITH)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getIdEndsWith_JsonNullable() {
    return idEndsWith;
  }
  
  @JsonProperty(JSON_PROPERTY_ID_ENDS_WITH)
  public void setIdEndsWith_JsonNullable(JsonNullable<String> idEndsWith) {
    this.idEndsWith = idEndsWith;
  }

  public void setIdEndsWith(String idEndsWith) {
    this.idEndsWith = JsonNullable.<String>of(idEndsWith);
  }


  public NamespaceGroupWhereInput idGt(String idGt) {
    this.idGt = JsonNullable.<String>of(idGt);
    return this;
  }

   /**
   * Get idGt
   * @return idGt
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getIdGt() {
        return idGt.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_ID_GT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getIdGt_JsonNullable() {
    return idGt;
  }
  
  @JsonProperty(JSON_PROPERTY_ID_GT)
  public void setIdGt_JsonNullable(JsonNullable<String> idGt) {
    this.idGt = idGt;
  }

  public void setIdGt(String idGt) {
    this.idGt = JsonNullable.<String>of(idGt);
  }


  public NamespaceGroupWhereInput idGte(String idGte) {
    this.idGte = JsonNullable.<String>of(idGte);
    return this;
  }

   /**
   * Get idGte
   * @return idGte
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getIdGte() {
        return idGte.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_ID_GTE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getIdGte_JsonNullable() {
    return idGte;
  }
  
  @JsonProperty(JSON_PROPERTY_ID_GTE)
  public void setIdGte_JsonNullable(JsonNullable<String> idGte) {
    this.idGte = idGte;
  }

  public void setIdGte(String idGte) {
    this.idGte = JsonNullable.<String>of(idGte);
  }


  public NamespaceGroupWhereInput idIn(List<String> idIn) {
    this.idIn = JsonNullable.<List<String>>of(idIn);
    return this;
  }

  public NamespaceGroupWhereInput addIdInItem(String idInItem) {
    if (this.idIn == null || !this.idIn.isPresent()) {
      this.idIn = JsonNullable.<List<String>>of(new ArrayList<>());
    }
    try {
      this.idIn.get().add(idInItem);
    } catch (java.util.NoSuchElementException e) {
      // this can never happen, as we make sure above that the value is present
    }
    return this;
  }

   /**
   * Get idIn
   * @return idIn
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public List<String> getIdIn() {
        return idIn.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_ID_IN)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<List<String>> getIdIn_JsonNullable() {
    return idIn;
  }
  
  @JsonProperty(JSON_PROPERTY_ID_IN)
  public void setIdIn_JsonNullable(JsonNullable<List<String>> idIn) {
    this.idIn = idIn;
  }

  public void setIdIn(List<String> idIn) {
    this.idIn = JsonNullable.<List<String>>of(idIn);
  }


  public NamespaceGroupWhereInput idLt(String idLt) {
    this.idLt = JsonNullable.<String>of(idLt);
    return this;
  }

   /**
   * Get idLt
   * @return idLt
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getIdLt() {
        return idLt.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_ID_LT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getIdLt_JsonNullable() {
    return idLt;
  }
  
  @JsonProperty(JSON_PROPERTY_ID_LT)
  public void setIdLt_JsonNullable(JsonNullable<String> idLt) {
    this.idLt = idLt;
  }

  public void setIdLt(String idLt) {
    this.idLt = JsonNullable.<String>of(idLt);
  }


  public NamespaceGroupWhereInput idLte(String idLte) {
    this.idLte = JsonNullable.<String>of(idLte);
    return this;
  }

   /**
   * Get idLte
   * @return idLte
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getIdLte() {
        return idLte.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_ID_LTE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getIdLte_JsonNullable() {
    return idLte;
  }
  
  @JsonProperty(JSON_PROPERTY_ID_LTE)
  public void setIdLte_JsonNullable(JsonNullable<String> idLte) {
    this.idLte = idLte;
  }

  public void setIdLte(String idLte) {
    this.idLte = JsonNullable.<String>of(idLte);
  }


  public NamespaceGroupWhereInput idNot(String idNot) {
    this.idNot = JsonNullable.<String>of(idNot);
    return this;
  }

   /**
   * Get idNot
   * @return idNot
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getIdNot() {
        return idNot.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_ID_NOT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getIdNot_JsonNullable() {
    return idNot;
  }
  
  @JsonProperty(JSON_PROPERTY_ID_NOT)
  public void setIdNot_JsonNullable(JsonNullable<String> idNot) {
    this.idNot = idNot;
  }

  public void setIdNot(String idNot) {
    this.idNot = JsonNullable.<String>of(idNot);
  }


  public NamespaceGroupWhereInput idNotContains(String idNotContains) {
    this.idNotContains = JsonNullable.<String>of(idNotContains);
    return this;
  }

   /**
   * Get idNotContains
   * @return idNotContains
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getIdNotContains() {
        return idNotContains.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_ID_NOT_CONTAINS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getIdNotContains_JsonNullable() {
    return idNotContains;
  }
  
  @JsonProperty(JSON_PROPERTY_ID_NOT_CONTAINS)
  public void setIdNotContains_JsonNullable(JsonNullable<String> idNotContains) {
    this.idNotContains = idNotContains;
  }

  public void setIdNotContains(String idNotContains) {
    this.idNotContains = JsonNullable.<String>of(idNotContains);
  }


  public NamespaceGroupWhereInput idNotEndsWith(String idNotEndsWith) {
    this.idNotEndsWith = JsonNullable.<String>of(idNotEndsWith);
    return this;
  }

   /**
   * Get idNotEndsWith
   * @return idNotEndsWith
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getIdNotEndsWith() {
        return idNotEndsWith.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_ID_NOT_ENDS_WITH)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getIdNotEndsWith_JsonNullable() {
    return idNotEndsWith;
  }
  
  @JsonProperty(JSON_PROPERTY_ID_NOT_ENDS_WITH)
  public void setIdNotEndsWith_JsonNullable(JsonNullable<String> idNotEndsWith) {
    this.idNotEndsWith = idNotEndsWith;
  }

  public void setIdNotEndsWith(String idNotEndsWith) {
    this.idNotEndsWith = JsonNullable.<String>of(idNotEndsWith);
  }


  public NamespaceGroupWhereInput idNotIn(List<String> idNotIn) {
    this.idNotIn = JsonNullable.<List<String>>of(idNotIn);
    return this;
  }

  public NamespaceGroupWhereInput addIdNotInItem(String idNotInItem) {
    if (this.idNotIn == null || !this.idNotIn.isPresent()) {
      this.idNotIn = JsonNullable.<List<String>>of(new ArrayList<>());
    }
    try {
      this.idNotIn.get().add(idNotInItem);
    } catch (java.util.NoSuchElementException e) {
      // this can never happen, as we make sure above that the value is present
    }
    return this;
  }

   /**
   * Get idNotIn
   * @return idNotIn
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public List<String> getIdNotIn() {
        return idNotIn.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_ID_NOT_IN)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<List<String>> getIdNotIn_JsonNullable() {
    return idNotIn;
  }
  
  @JsonProperty(JSON_PROPERTY_ID_NOT_IN)
  public void setIdNotIn_JsonNullable(JsonNullable<List<String>> idNotIn) {
    this.idNotIn = idNotIn;
  }

  public void setIdNotIn(List<String> idNotIn) {
    this.idNotIn = JsonNullable.<List<String>>of(idNotIn);
  }


  public NamespaceGroupWhereInput idNotStartsWith(String idNotStartsWith) {
    this.idNotStartsWith = JsonNullable.<String>of(idNotStartsWith);
    return this;
  }

   /**
   * Get idNotStartsWith
   * @return idNotStartsWith
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getIdNotStartsWith() {
        return idNotStartsWith.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_ID_NOT_STARTS_WITH)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getIdNotStartsWith_JsonNullable() {
    return idNotStartsWith;
  }
  
  @JsonProperty(JSON_PROPERTY_ID_NOT_STARTS_WITH)
  public void setIdNotStartsWith_JsonNullable(JsonNullable<String> idNotStartsWith) {
    this.idNotStartsWith = idNotStartsWith;
  }

  public void setIdNotStartsWith(String idNotStartsWith) {
    this.idNotStartsWith = JsonNullable.<String>of(idNotStartsWith);
  }


  public NamespaceGroupWhereInput idStartsWith(String idStartsWith) {
    this.idStartsWith = JsonNullable.<String>of(idStartsWith);
    return this;
  }

   /**
   * Get idStartsWith
   * @return idStartsWith
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getIdStartsWith() {
        return idStartsWith.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_ID_STARTS_WITH)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getIdStartsWith_JsonNullable() {
    return idStartsWith;
  }
  
  @JsonProperty(JSON_PROPERTY_ID_STARTS_WITH)
  public void setIdStartsWith_JsonNullable(JsonNullable<String> idStartsWith) {
    this.idStartsWith = idStartsWith;
  }

  public void setIdStartsWith(String idStartsWith) {
    this.idStartsWith = JsonNullable.<String>of(idStartsWith);
  }


  public NamespaceGroupWhereInput labelsEvery(LabelWhereInput labelsEvery) {
    this.labelsEvery = JsonNullable.<LabelWhereInput>of(labelsEvery);
    return this;
  }

   /**
   * Get labelsEvery
   * @return labelsEvery
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public LabelWhereInput getLabelsEvery() {
        return labelsEvery.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_LABELS_EVERY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<LabelWhereInput> getLabelsEvery_JsonNullable() {
    return labelsEvery;
  }
  
  @JsonProperty(JSON_PROPERTY_LABELS_EVERY)
  public void setLabelsEvery_JsonNullable(JsonNullable<LabelWhereInput> labelsEvery) {
    this.labelsEvery = labelsEvery;
  }

  public void setLabelsEvery(LabelWhereInput labelsEvery) {
    this.labelsEvery = JsonNullable.<LabelWhereInput>of(labelsEvery);
  }


  public NamespaceGroupWhereInput labelsNone(LabelWhereInput labelsNone) {
    this.labelsNone = JsonNullable.<LabelWhereInput>of(labelsNone);
    return this;
  }

   /**
   * Get labelsNone
   * @return labelsNone
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public LabelWhereInput getLabelsNone() {
        return labelsNone.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_LABELS_NONE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<LabelWhereInput> getLabelsNone_JsonNullable() {
    return labelsNone;
  }
  
  @JsonProperty(JSON_PROPERTY_LABELS_NONE)
  public void setLabelsNone_JsonNullable(JsonNullable<LabelWhereInput> labelsNone) {
    this.labelsNone = labelsNone;
  }

  public void setLabelsNone(LabelWhereInput labelsNone) {
    this.labelsNone = JsonNullable.<LabelWhereInput>of(labelsNone);
  }


  public NamespaceGroupWhereInput labelsSome(LabelWhereInput labelsSome) {
    this.labelsSome = JsonNullable.<LabelWhereInput>of(labelsSome);
    return this;
  }

   /**
   * Get labelsSome
   * @return labelsSome
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public LabelWhereInput getLabelsSome() {
        return labelsSome.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_LABELS_SOME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<LabelWhereInput> getLabelsSome_JsonNullable() {
    return labelsSome;
  }
  
  @JsonProperty(JSON_PROPERTY_LABELS_SOME)
  public void setLabelsSome_JsonNullable(JsonNullable<LabelWhereInput> labelsSome) {
    this.labelsSome = labelsSome;
  }

  public void setLabelsSome(LabelWhereInput labelsSome) {
    this.labelsSome = JsonNullable.<LabelWhereInput>of(labelsSome);
  }


  public NamespaceGroupWhereInput localCreateTime(String localCreateTime) {
    this.localCreateTime = JsonNullable.<String>of(localCreateTime);
    return this;
  }

   /**
   * Get localCreateTime
   * @return localCreateTime
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getLocalCreateTime() {
        return localCreateTime.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_LOCAL_CREATE_TIME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getLocalCreateTime_JsonNullable() {
    return localCreateTime;
  }
  
  @JsonProperty(JSON_PROPERTY_LOCAL_CREATE_TIME)
  public void setLocalCreateTime_JsonNullable(JsonNullable<String> localCreateTime) {
    this.localCreateTime = localCreateTime;
  }

  public void setLocalCreateTime(String localCreateTime) {
    this.localCreateTime = JsonNullable.<String>of(localCreateTime);
  }


  public NamespaceGroupWhereInput localCreateTimeGt(String localCreateTimeGt) {
    this.localCreateTimeGt = JsonNullable.<String>of(localCreateTimeGt);
    return this;
  }

   /**
   * Get localCreateTimeGt
   * @return localCreateTimeGt
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getLocalCreateTimeGt() {
        return localCreateTimeGt.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_LOCAL_CREATE_TIME_GT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getLocalCreateTimeGt_JsonNullable() {
    return localCreateTimeGt;
  }
  
  @JsonProperty(JSON_PROPERTY_LOCAL_CREATE_TIME_GT)
  public void setLocalCreateTimeGt_JsonNullable(JsonNullable<String> localCreateTimeGt) {
    this.localCreateTimeGt = localCreateTimeGt;
  }

  public void setLocalCreateTimeGt(String localCreateTimeGt) {
    this.localCreateTimeGt = JsonNullable.<String>of(localCreateTimeGt);
  }


  public NamespaceGroupWhereInput localCreateTimeGte(String localCreateTimeGte) {
    this.localCreateTimeGte = JsonNullable.<String>of(localCreateTimeGte);
    return this;
  }

   /**
   * Get localCreateTimeGte
   * @return localCreateTimeGte
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getLocalCreateTimeGte() {
        return localCreateTimeGte.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_LOCAL_CREATE_TIME_GTE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getLocalCreateTimeGte_JsonNullable() {
    return localCreateTimeGte;
  }
  
  @JsonProperty(JSON_PROPERTY_LOCAL_CREATE_TIME_GTE)
  public void setLocalCreateTimeGte_JsonNullable(JsonNullable<String> localCreateTimeGte) {
    this.localCreateTimeGte = localCreateTimeGte;
  }

  public void setLocalCreateTimeGte(String localCreateTimeGte) {
    this.localCreateTimeGte = JsonNullable.<String>of(localCreateTimeGte);
  }


  public NamespaceGroupWhereInput localCreateTimeIn(List<String> localCreateTimeIn) {
    this.localCreateTimeIn = JsonNullable.<List<String>>of(localCreateTimeIn);
    return this;
  }

  public NamespaceGroupWhereInput addLocalCreateTimeInItem(String localCreateTimeInItem) {
    if (this.localCreateTimeIn == null || !this.localCreateTimeIn.isPresent()) {
      this.localCreateTimeIn = JsonNullable.<List<String>>of(new ArrayList<>());
    }
    try {
      this.localCreateTimeIn.get().add(localCreateTimeInItem);
    } catch (java.util.NoSuchElementException e) {
      // this can never happen, as we make sure above that the value is present
    }
    return this;
  }

   /**
   * Get localCreateTimeIn
   * @return localCreateTimeIn
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public List<String> getLocalCreateTimeIn() {
        return localCreateTimeIn.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_LOCAL_CREATE_TIME_IN)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<List<String>> getLocalCreateTimeIn_JsonNullable() {
    return localCreateTimeIn;
  }
  
  @JsonProperty(JSON_PROPERTY_LOCAL_CREATE_TIME_IN)
  public void setLocalCreateTimeIn_JsonNullable(JsonNullable<List<String>> localCreateTimeIn) {
    this.localCreateTimeIn = localCreateTimeIn;
  }

  public void setLocalCreateTimeIn(List<String> localCreateTimeIn) {
    this.localCreateTimeIn = JsonNullable.<List<String>>of(localCreateTimeIn);
  }


  public NamespaceGroupWhereInput localCreateTimeLt(String localCreateTimeLt) {
    this.localCreateTimeLt = JsonNullable.<String>of(localCreateTimeLt);
    return this;
  }

   /**
   * Get localCreateTimeLt
   * @return localCreateTimeLt
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getLocalCreateTimeLt() {
        return localCreateTimeLt.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_LOCAL_CREATE_TIME_LT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getLocalCreateTimeLt_JsonNullable() {
    return localCreateTimeLt;
  }
  
  @JsonProperty(JSON_PROPERTY_LOCAL_CREATE_TIME_LT)
  public void setLocalCreateTimeLt_JsonNullable(JsonNullable<String> localCreateTimeLt) {
    this.localCreateTimeLt = localCreateTimeLt;
  }

  public void setLocalCreateTimeLt(String localCreateTimeLt) {
    this.localCreateTimeLt = JsonNullable.<String>of(localCreateTimeLt);
  }


  public NamespaceGroupWhereInput localCreateTimeLte(String localCreateTimeLte) {
    this.localCreateTimeLte = JsonNullable.<String>of(localCreateTimeLte);
    return this;
  }

   /**
   * Get localCreateTimeLte
   * @return localCreateTimeLte
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getLocalCreateTimeLte() {
        return localCreateTimeLte.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_LOCAL_CREATE_TIME_LTE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getLocalCreateTimeLte_JsonNullable() {
    return localCreateTimeLte;
  }
  
  @JsonProperty(JSON_PROPERTY_LOCAL_CREATE_TIME_LTE)
  public void setLocalCreateTimeLte_JsonNullable(JsonNullable<String> localCreateTimeLte) {
    this.localCreateTimeLte = localCreateTimeLte;
  }

  public void setLocalCreateTimeLte(String localCreateTimeLte) {
    this.localCreateTimeLte = JsonNullable.<String>of(localCreateTimeLte);
  }


  public NamespaceGroupWhereInput localCreateTimeNot(String localCreateTimeNot) {
    this.localCreateTimeNot = JsonNullable.<String>of(localCreateTimeNot);
    return this;
  }

   /**
   * Get localCreateTimeNot
   * @return localCreateTimeNot
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getLocalCreateTimeNot() {
        return localCreateTimeNot.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_LOCAL_CREATE_TIME_NOT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getLocalCreateTimeNot_JsonNullable() {
    return localCreateTimeNot;
  }
  
  @JsonProperty(JSON_PROPERTY_LOCAL_CREATE_TIME_NOT)
  public void setLocalCreateTimeNot_JsonNullable(JsonNullable<String> localCreateTimeNot) {
    this.localCreateTimeNot = localCreateTimeNot;
  }

  public void setLocalCreateTimeNot(String localCreateTimeNot) {
    this.localCreateTimeNot = JsonNullable.<String>of(localCreateTimeNot);
  }


  public NamespaceGroupWhereInput localCreateTimeNotIn(List<String> localCreateTimeNotIn) {
    this.localCreateTimeNotIn = JsonNullable.<List<String>>of(localCreateTimeNotIn);
    return this;
  }

  public NamespaceGroupWhereInput addLocalCreateTimeNotInItem(String localCreateTimeNotInItem) {
    if (this.localCreateTimeNotIn == null || !this.localCreateTimeNotIn.isPresent()) {
      this.localCreateTimeNotIn = JsonNullable.<List<String>>of(new ArrayList<>());
    }
    try {
      this.localCreateTimeNotIn.get().add(localCreateTimeNotInItem);
    } catch (java.util.NoSuchElementException e) {
      // this can never happen, as we make sure above that the value is present
    }
    return this;
  }

   /**
   * Get localCreateTimeNotIn
   * @return localCreateTimeNotIn
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public List<String> getLocalCreateTimeNotIn() {
        return localCreateTimeNotIn.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_LOCAL_CREATE_TIME_NOT_IN)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<List<String>> getLocalCreateTimeNotIn_JsonNullable() {
    return localCreateTimeNotIn;
  }
  
  @JsonProperty(JSON_PROPERTY_LOCAL_CREATE_TIME_NOT_IN)
  public void setLocalCreateTimeNotIn_JsonNullable(JsonNullable<List<String>> localCreateTimeNotIn) {
    this.localCreateTimeNotIn = localCreateTimeNotIn;
  }

  public void setLocalCreateTimeNotIn(List<String> localCreateTimeNotIn) {
    this.localCreateTimeNotIn = JsonNullable.<List<String>>of(localCreateTimeNotIn);
  }


  public NamespaceGroupWhereInput localId(String localId) {
    this.localId = JsonNullable.<String>of(localId);
    return this;
  }

   /**
   * Get localId
   * @return localId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getLocalId() {
        return localId.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_LOCAL_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getLocalId_JsonNullable() {
    return localId;
  }
  
  @JsonProperty(JSON_PROPERTY_LOCAL_ID)
  public void setLocalId_JsonNullable(JsonNullable<String> localId) {
    this.localId = localId;
  }

  public void setLocalId(String localId) {
    this.localId = JsonNullable.<String>of(localId);
  }


  public NamespaceGroupWhereInput localIdContains(String localIdContains) {
    this.localIdContains = JsonNullable.<String>of(localIdContains);
    return this;
  }

   /**
   * Get localIdContains
   * @return localIdContains
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getLocalIdContains() {
        return localIdContains.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_LOCAL_ID_CONTAINS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getLocalIdContains_JsonNullable() {
    return localIdContains;
  }
  
  @JsonProperty(JSON_PROPERTY_LOCAL_ID_CONTAINS)
  public void setLocalIdContains_JsonNullable(JsonNullable<String> localIdContains) {
    this.localIdContains = localIdContains;
  }

  public void setLocalIdContains(String localIdContains) {
    this.localIdContains = JsonNullable.<String>of(localIdContains);
  }


  public NamespaceGroupWhereInput localIdEndsWith(String localIdEndsWith) {
    this.localIdEndsWith = JsonNullable.<String>of(localIdEndsWith);
    return this;
  }

   /**
   * Get localIdEndsWith
   * @return localIdEndsWith
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getLocalIdEndsWith() {
        return localIdEndsWith.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_LOCAL_ID_ENDS_WITH)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getLocalIdEndsWith_JsonNullable() {
    return localIdEndsWith;
  }
  
  @JsonProperty(JSON_PROPERTY_LOCAL_ID_ENDS_WITH)
  public void setLocalIdEndsWith_JsonNullable(JsonNullable<String> localIdEndsWith) {
    this.localIdEndsWith = localIdEndsWith;
  }

  public void setLocalIdEndsWith(String localIdEndsWith) {
    this.localIdEndsWith = JsonNullable.<String>of(localIdEndsWith);
  }


  public NamespaceGroupWhereInput localIdGt(String localIdGt) {
    this.localIdGt = JsonNullable.<String>of(localIdGt);
    return this;
  }

   /**
   * Get localIdGt
   * @return localIdGt
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getLocalIdGt() {
        return localIdGt.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_LOCAL_ID_GT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getLocalIdGt_JsonNullable() {
    return localIdGt;
  }
  
  @JsonProperty(JSON_PROPERTY_LOCAL_ID_GT)
  public void setLocalIdGt_JsonNullable(JsonNullable<String> localIdGt) {
    this.localIdGt = localIdGt;
  }

  public void setLocalIdGt(String localIdGt) {
    this.localIdGt = JsonNullable.<String>of(localIdGt);
  }


  public NamespaceGroupWhereInput localIdGte(String localIdGte) {
    this.localIdGte = JsonNullable.<String>of(localIdGte);
    return this;
  }

   /**
   * Get localIdGte
   * @return localIdGte
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getLocalIdGte() {
        return localIdGte.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_LOCAL_ID_GTE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getLocalIdGte_JsonNullable() {
    return localIdGte;
  }
  
  @JsonProperty(JSON_PROPERTY_LOCAL_ID_GTE)
  public void setLocalIdGte_JsonNullable(JsonNullable<String> localIdGte) {
    this.localIdGte = localIdGte;
  }

  public void setLocalIdGte(String localIdGte) {
    this.localIdGte = JsonNullable.<String>of(localIdGte);
  }


  public NamespaceGroupWhereInput localIdIn(List<String> localIdIn) {
    this.localIdIn = JsonNullable.<List<String>>of(localIdIn);
    return this;
  }

  public NamespaceGroupWhereInput addLocalIdInItem(String localIdInItem) {
    if (this.localIdIn == null || !this.localIdIn.isPresent()) {
      this.localIdIn = JsonNullable.<List<String>>of(new ArrayList<>());
    }
    try {
      this.localIdIn.get().add(localIdInItem);
    } catch (java.util.NoSuchElementException e) {
      // this can never happen, as we make sure above that the value is present
    }
    return this;
  }

   /**
   * Get localIdIn
   * @return localIdIn
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public List<String> getLocalIdIn() {
        return localIdIn.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_LOCAL_ID_IN)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<List<String>> getLocalIdIn_JsonNullable() {
    return localIdIn;
  }
  
  @JsonProperty(JSON_PROPERTY_LOCAL_ID_IN)
  public void setLocalIdIn_JsonNullable(JsonNullable<List<String>> localIdIn) {
    this.localIdIn = localIdIn;
  }

  public void setLocalIdIn(List<String> localIdIn) {
    this.localIdIn = JsonNullable.<List<String>>of(localIdIn);
  }


  public NamespaceGroupWhereInput localIdLt(String localIdLt) {
    this.localIdLt = JsonNullable.<String>of(localIdLt);
    return this;
  }

   /**
   * Get localIdLt
   * @return localIdLt
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getLocalIdLt() {
        return localIdLt.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_LOCAL_ID_LT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getLocalIdLt_JsonNullable() {
    return localIdLt;
  }
  
  @JsonProperty(JSON_PROPERTY_LOCAL_ID_LT)
  public void setLocalIdLt_JsonNullable(JsonNullable<String> localIdLt) {
    this.localIdLt = localIdLt;
  }

  public void setLocalIdLt(String localIdLt) {
    this.localIdLt = JsonNullable.<String>of(localIdLt);
  }


  public NamespaceGroupWhereInput localIdLte(String localIdLte) {
    this.localIdLte = JsonNullable.<String>of(localIdLte);
    return this;
  }

   /**
   * Get localIdLte
   * @return localIdLte
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getLocalIdLte() {
        return localIdLte.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_LOCAL_ID_LTE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getLocalIdLte_JsonNullable() {
    return localIdLte;
  }
  
  @JsonProperty(JSON_PROPERTY_LOCAL_ID_LTE)
  public void setLocalIdLte_JsonNullable(JsonNullable<String> localIdLte) {
    this.localIdLte = localIdLte;
  }

  public void setLocalIdLte(String localIdLte) {
    this.localIdLte = JsonNullable.<String>of(localIdLte);
  }


  public NamespaceGroupWhereInput localIdNot(String localIdNot) {
    this.localIdNot = JsonNullable.<String>of(localIdNot);
    return this;
  }

   /**
   * Get localIdNot
   * @return localIdNot
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getLocalIdNot() {
        return localIdNot.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_LOCAL_ID_NOT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getLocalIdNot_JsonNullable() {
    return localIdNot;
  }
  
  @JsonProperty(JSON_PROPERTY_LOCAL_ID_NOT)
  public void setLocalIdNot_JsonNullable(JsonNullable<String> localIdNot) {
    this.localIdNot = localIdNot;
  }

  public void setLocalIdNot(String localIdNot) {
    this.localIdNot = JsonNullable.<String>of(localIdNot);
  }


  public NamespaceGroupWhereInput localIdNotContains(String localIdNotContains) {
    this.localIdNotContains = JsonNullable.<String>of(localIdNotContains);
    return this;
  }

   /**
   * Get localIdNotContains
   * @return localIdNotContains
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getLocalIdNotContains() {
        return localIdNotContains.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_LOCAL_ID_NOT_CONTAINS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getLocalIdNotContains_JsonNullable() {
    return localIdNotContains;
  }
  
  @JsonProperty(JSON_PROPERTY_LOCAL_ID_NOT_CONTAINS)
  public void setLocalIdNotContains_JsonNullable(JsonNullable<String> localIdNotContains) {
    this.localIdNotContains = localIdNotContains;
  }

  public void setLocalIdNotContains(String localIdNotContains) {
    this.localIdNotContains = JsonNullable.<String>of(localIdNotContains);
  }


  public NamespaceGroupWhereInput localIdNotEndsWith(String localIdNotEndsWith) {
    this.localIdNotEndsWith = JsonNullable.<String>of(localIdNotEndsWith);
    return this;
  }

   /**
   * Get localIdNotEndsWith
   * @return localIdNotEndsWith
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getLocalIdNotEndsWith() {
        return localIdNotEndsWith.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_LOCAL_ID_NOT_ENDS_WITH)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getLocalIdNotEndsWith_JsonNullable() {
    return localIdNotEndsWith;
  }
  
  @JsonProperty(JSON_PROPERTY_LOCAL_ID_NOT_ENDS_WITH)
  public void setLocalIdNotEndsWith_JsonNullable(JsonNullable<String> localIdNotEndsWith) {
    this.localIdNotEndsWith = localIdNotEndsWith;
  }

  public void setLocalIdNotEndsWith(String localIdNotEndsWith) {
    this.localIdNotEndsWith = JsonNullable.<String>of(localIdNotEndsWith);
  }


  public NamespaceGroupWhereInput localIdNotIn(List<String> localIdNotIn) {
    this.localIdNotIn = JsonNullable.<List<String>>of(localIdNotIn);
    return this;
  }

  public NamespaceGroupWhereInput addLocalIdNotInItem(String localIdNotInItem) {
    if (this.localIdNotIn == null || !this.localIdNotIn.isPresent()) {
      this.localIdNotIn = JsonNullable.<List<String>>of(new ArrayList<>());
    }
    try {
      this.localIdNotIn.get().add(localIdNotInItem);
    } catch (java.util.NoSuchElementException e) {
      // this can never happen, as we make sure above that the value is present
    }
    return this;
  }

   /**
   * Get localIdNotIn
   * @return localIdNotIn
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public List<String> getLocalIdNotIn() {
        return localIdNotIn.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_LOCAL_ID_NOT_IN)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<List<String>> getLocalIdNotIn_JsonNullable() {
    return localIdNotIn;
  }
  
  @JsonProperty(JSON_PROPERTY_LOCAL_ID_NOT_IN)
  public void setLocalIdNotIn_JsonNullable(JsonNullable<List<String>> localIdNotIn) {
    this.localIdNotIn = localIdNotIn;
  }

  public void setLocalIdNotIn(List<String> localIdNotIn) {
    this.localIdNotIn = JsonNullable.<List<String>>of(localIdNotIn);
  }


  public NamespaceGroupWhereInput localIdNotStartsWith(String localIdNotStartsWith) {
    this.localIdNotStartsWith = JsonNullable.<String>of(localIdNotStartsWith);
    return this;
  }

   /**
   * Get localIdNotStartsWith
   * @return localIdNotStartsWith
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getLocalIdNotStartsWith() {
        return localIdNotStartsWith.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_LOCAL_ID_NOT_STARTS_WITH)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getLocalIdNotStartsWith_JsonNullable() {
    return localIdNotStartsWith;
  }
  
  @JsonProperty(JSON_PROPERTY_LOCAL_ID_NOT_STARTS_WITH)
  public void setLocalIdNotStartsWith_JsonNullable(JsonNullable<String> localIdNotStartsWith) {
    this.localIdNotStartsWith = localIdNotStartsWith;
  }

  public void setLocalIdNotStartsWith(String localIdNotStartsWith) {
    this.localIdNotStartsWith = JsonNullable.<String>of(localIdNotStartsWith);
  }


  public NamespaceGroupWhereInput localIdStartsWith(String localIdStartsWith) {
    this.localIdStartsWith = JsonNullable.<String>of(localIdStartsWith);
    return this;
  }

   /**
   * Get localIdStartsWith
   * @return localIdStartsWith
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getLocalIdStartsWith() {
        return localIdStartsWith.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_LOCAL_ID_STARTS_WITH)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getLocalIdStartsWith_JsonNullable() {
    return localIdStartsWith;
  }
  
  @JsonProperty(JSON_PROPERTY_LOCAL_ID_STARTS_WITH)
  public void setLocalIdStartsWith_JsonNullable(JsonNullable<String> localIdStartsWith) {
    this.localIdStartsWith = localIdStartsWith;
  }

  public void setLocalIdStartsWith(String localIdStartsWith) {
    this.localIdStartsWith = JsonNullable.<String>of(localIdStartsWith);
  }


  public NamespaceGroupWhereInput name(String name) {
    this.name = JsonNullable.<String>of(name);
    return this;
  }

   /**
   * Get name
   * @return name
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getName() {
        return name.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getName_JsonNullable() {
    return name;
  }
  
  @JsonProperty(JSON_PROPERTY_NAME)
  public void setName_JsonNullable(JsonNullable<String> name) {
    this.name = name;
  }

  public void setName(String name) {
    this.name = JsonNullable.<String>of(name);
  }


  public NamespaceGroupWhereInput nameContains(String nameContains) {
    this.nameContains = JsonNullable.<String>of(nameContains);
    return this;
  }

   /**
   * Get nameContains
   * @return nameContains
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getNameContains() {
        return nameContains.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_NAME_CONTAINS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getNameContains_JsonNullable() {
    return nameContains;
  }
  
  @JsonProperty(JSON_PROPERTY_NAME_CONTAINS)
  public void setNameContains_JsonNullable(JsonNullable<String> nameContains) {
    this.nameContains = nameContains;
  }

  public void setNameContains(String nameContains) {
    this.nameContains = JsonNullable.<String>of(nameContains);
  }


  public NamespaceGroupWhereInput nameEndsWith(String nameEndsWith) {
    this.nameEndsWith = JsonNullable.<String>of(nameEndsWith);
    return this;
  }

   /**
   * Get nameEndsWith
   * @return nameEndsWith
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getNameEndsWith() {
        return nameEndsWith.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_NAME_ENDS_WITH)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getNameEndsWith_JsonNullable() {
    return nameEndsWith;
  }
  
  @JsonProperty(JSON_PROPERTY_NAME_ENDS_WITH)
  public void setNameEndsWith_JsonNullable(JsonNullable<String> nameEndsWith) {
    this.nameEndsWith = nameEndsWith;
  }

  public void setNameEndsWith(String nameEndsWith) {
    this.nameEndsWith = JsonNullable.<String>of(nameEndsWith);
  }


  public NamespaceGroupWhereInput nameGt(String nameGt) {
    this.nameGt = JsonNullable.<String>of(nameGt);
    return this;
  }

   /**
   * Get nameGt
   * @return nameGt
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getNameGt() {
        return nameGt.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_NAME_GT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getNameGt_JsonNullable() {
    return nameGt;
  }
  
  @JsonProperty(JSON_PROPERTY_NAME_GT)
  public void setNameGt_JsonNullable(JsonNullable<String> nameGt) {
    this.nameGt = nameGt;
  }

  public void setNameGt(String nameGt) {
    this.nameGt = JsonNullable.<String>of(nameGt);
  }


  public NamespaceGroupWhereInput nameGte(String nameGte) {
    this.nameGte = JsonNullable.<String>of(nameGte);
    return this;
  }

   /**
   * Get nameGte
   * @return nameGte
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getNameGte() {
        return nameGte.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_NAME_GTE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getNameGte_JsonNullable() {
    return nameGte;
  }
  
  @JsonProperty(JSON_PROPERTY_NAME_GTE)
  public void setNameGte_JsonNullable(JsonNullable<String> nameGte) {
    this.nameGte = nameGte;
  }

  public void setNameGte(String nameGte) {
    this.nameGte = JsonNullable.<String>of(nameGte);
  }


  public NamespaceGroupWhereInput nameIn(List<String> nameIn) {
    this.nameIn = JsonNullable.<List<String>>of(nameIn);
    return this;
  }

  public NamespaceGroupWhereInput addNameInItem(String nameInItem) {
    if (this.nameIn == null || !this.nameIn.isPresent()) {
      this.nameIn = JsonNullable.<List<String>>of(new ArrayList<>());
    }
    try {
      this.nameIn.get().add(nameInItem);
    } catch (java.util.NoSuchElementException e) {
      // this can never happen, as we make sure above that the value is present
    }
    return this;
  }

   /**
   * Get nameIn
   * @return nameIn
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public List<String> getNameIn() {
        return nameIn.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_NAME_IN)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<List<String>> getNameIn_JsonNullable() {
    return nameIn;
  }
  
  @JsonProperty(JSON_PROPERTY_NAME_IN)
  public void setNameIn_JsonNullable(JsonNullable<List<String>> nameIn) {
    this.nameIn = nameIn;
  }

  public void setNameIn(List<String> nameIn) {
    this.nameIn = JsonNullable.<List<String>>of(nameIn);
  }


  public NamespaceGroupWhereInput nameLt(String nameLt) {
    this.nameLt = JsonNullable.<String>of(nameLt);
    return this;
  }

   /**
   * Get nameLt
   * @return nameLt
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getNameLt() {
        return nameLt.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_NAME_LT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getNameLt_JsonNullable() {
    return nameLt;
  }
  
  @JsonProperty(JSON_PROPERTY_NAME_LT)
  public void setNameLt_JsonNullable(JsonNullable<String> nameLt) {
    this.nameLt = nameLt;
  }

  public void setNameLt(String nameLt) {
    this.nameLt = JsonNullable.<String>of(nameLt);
  }


  public NamespaceGroupWhereInput nameLte(String nameLte) {
    this.nameLte = JsonNullable.<String>of(nameLte);
    return this;
  }

   /**
   * Get nameLte
   * @return nameLte
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getNameLte() {
        return nameLte.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_NAME_LTE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getNameLte_JsonNullable() {
    return nameLte;
  }
  
  @JsonProperty(JSON_PROPERTY_NAME_LTE)
  public void setNameLte_JsonNullable(JsonNullable<String> nameLte) {
    this.nameLte = nameLte;
  }

  public void setNameLte(String nameLte) {
    this.nameLte = JsonNullable.<String>of(nameLte);
  }


  public NamespaceGroupWhereInput nameNot(String nameNot) {
    this.nameNot = JsonNullable.<String>of(nameNot);
    return this;
  }

   /**
   * Get nameNot
   * @return nameNot
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getNameNot() {
        return nameNot.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_NAME_NOT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getNameNot_JsonNullable() {
    return nameNot;
  }
  
  @JsonProperty(JSON_PROPERTY_NAME_NOT)
  public void setNameNot_JsonNullable(JsonNullable<String> nameNot) {
    this.nameNot = nameNot;
  }

  public void setNameNot(String nameNot) {
    this.nameNot = JsonNullable.<String>of(nameNot);
  }


  public NamespaceGroupWhereInput nameNotContains(String nameNotContains) {
    this.nameNotContains = JsonNullable.<String>of(nameNotContains);
    return this;
  }

   /**
   * Get nameNotContains
   * @return nameNotContains
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getNameNotContains() {
        return nameNotContains.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_NAME_NOT_CONTAINS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getNameNotContains_JsonNullable() {
    return nameNotContains;
  }
  
  @JsonProperty(JSON_PROPERTY_NAME_NOT_CONTAINS)
  public void setNameNotContains_JsonNullable(JsonNullable<String> nameNotContains) {
    this.nameNotContains = nameNotContains;
  }

  public void setNameNotContains(String nameNotContains) {
    this.nameNotContains = JsonNullable.<String>of(nameNotContains);
  }


  public NamespaceGroupWhereInput nameNotEndsWith(String nameNotEndsWith) {
    this.nameNotEndsWith = JsonNullable.<String>of(nameNotEndsWith);
    return this;
  }

   /**
   * Get nameNotEndsWith
   * @return nameNotEndsWith
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getNameNotEndsWith() {
        return nameNotEndsWith.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_NAME_NOT_ENDS_WITH)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getNameNotEndsWith_JsonNullable() {
    return nameNotEndsWith;
  }
  
  @JsonProperty(JSON_PROPERTY_NAME_NOT_ENDS_WITH)
  public void setNameNotEndsWith_JsonNullable(JsonNullable<String> nameNotEndsWith) {
    this.nameNotEndsWith = nameNotEndsWith;
  }

  public void setNameNotEndsWith(String nameNotEndsWith) {
    this.nameNotEndsWith = JsonNullable.<String>of(nameNotEndsWith);
  }


  public NamespaceGroupWhereInput nameNotIn(List<String> nameNotIn) {
    this.nameNotIn = JsonNullable.<List<String>>of(nameNotIn);
    return this;
  }

  public NamespaceGroupWhereInput addNameNotInItem(String nameNotInItem) {
    if (this.nameNotIn == null || !this.nameNotIn.isPresent()) {
      this.nameNotIn = JsonNullable.<List<String>>of(new ArrayList<>());
    }
    try {
      this.nameNotIn.get().add(nameNotInItem);
    } catch (java.util.NoSuchElementException e) {
      // this can never happen, as we make sure above that the value is present
    }
    return this;
  }

   /**
   * Get nameNotIn
   * @return nameNotIn
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public List<String> getNameNotIn() {
        return nameNotIn.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_NAME_NOT_IN)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<List<String>> getNameNotIn_JsonNullable() {
    return nameNotIn;
  }
  
  @JsonProperty(JSON_PROPERTY_NAME_NOT_IN)
  public void setNameNotIn_JsonNullable(JsonNullable<List<String>> nameNotIn) {
    this.nameNotIn = nameNotIn;
  }

  public void setNameNotIn(List<String> nameNotIn) {
    this.nameNotIn = JsonNullable.<List<String>>of(nameNotIn);
  }


  public NamespaceGroupWhereInput nameNotStartsWith(String nameNotStartsWith) {
    this.nameNotStartsWith = JsonNullable.<String>of(nameNotStartsWith);
    return this;
  }

   /**
   * Get nameNotStartsWith
   * @return nameNotStartsWith
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getNameNotStartsWith() {
        return nameNotStartsWith.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_NAME_NOT_STARTS_WITH)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getNameNotStartsWith_JsonNullable() {
    return nameNotStartsWith;
  }
  
  @JsonProperty(JSON_PROPERTY_NAME_NOT_STARTS_WITH)
  public void setNameNotStartsWith_JsonNullable(JsonNullable<String> nameNotStartsWith) {
    this.nameNotStartsWith = nameNotStartsWith;
  }

  public void setNameNotStartsWith(String nameNotStartsWith) {
    this.nameNotStartsWith = JsonNullable.<String>of(nameNotStartsWith);
  }


  public NamespaceGroupWhereInput nameStartsWith(String nameStartsWith) {
    this.nameStartsWith = JsonNullable.<String>of(nameStartsWith);
    return this;
  }

   /**
   * Get nameStartsWith
   * @return nameStartsWith
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getNameStartsWith() {
        return nameStartsWith.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_NAME_STARTS_WITH)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getNameStartsWith_JsonNullable() {
    return nameStartsWith;
  }
  
  @JsonProperty(JSON_PROPERTY_NAME_STARTS_WITH)
  public void setNameStartsWith_JsonNullable(JsonNullable<String> nameStartsWith) {
    this.nameStartsWith = nameStartsWith;
  }

  public void setNameStartsWith(String nameStartsWith) {
    this.nameStartsWith = JsonNullable.<String>of(nameStartsWith);
  }


  public NamespaceGroupWhereInput namespacesEvery(NvmfNamespaceWhereInput namespacesEvery) {
    this.namespacesEvery = JsonNullable.<NvmfNamespaceWhereInput>of(namespacesEvery);
    return this;
  }

   /**
   * Get namespacesEvery
   * @return namespacesEvery
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public NvmfNamespaceWhereInput getNamespacesEvery() {
        return namespacesEvery.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_NAMESPACES_EVERY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<NvmfNamespaceWhereInput> getNamespacesEvery_JsonNullable() {
    return namespacesEvery;
  }
  
  @JsonProperty(JSON_PROPERTY_NAMESPACES_EVERY)
  public void setNamespacesEvery_JsonNullable(JsonNullable<NvmfNamespaceWhereInput> namespacesEvery) {
    this.namespacesEvery = namespacesEvery;
  }

  public void setNamespacesEvery(NvmfNamespaceWhereInput namespacesEvery) {
    this.namespacesEvery = JsonNullable.<NvmfNamespaceWhereInput>of(namespacesEvery);
  }


  public NamespaceGroupWhereInput namespacesNone(NvmfNamespaceWhereInput namespacesNone) {
    this.namespacesNone = JsonNullable.<NvmfNamespaceWhereInput>of(namespacesNone);
    return this;
  }

   /**
   * Get namespacesNone
   * @return namespacesNone
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public NvmfNamespaceWhereInput getNamespacesNone() {
        return namespacesNone.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_NAMESPACES_NONE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<NvmfNamespaceWhereInput> getNamespacesNone_JsonNullable() {
    return namespacesNone;
  }
  
  @JsonProperty(JSON_PROPERTY_NAMESPACES_NONE)
  public void setNamespacesNone_JsonNullable(JsonNullable<NvmfNamespaceWhereInput> namespacesNone) {
    this.namespacesNone = namespacesNone;
  }

  public void setNamespacesNone(NvmfNamespaceWhereInput namespacesNone) {
    this.namespacesNone = JsonNullable.<NvmfNamespaceWhereInput>of(namespacesNone);
  }


  public NamespaceGroupWhereInput namespacesSome(NvmfNamespaceWhereInput namespacesSome) {
    this.namespacesSome = JsonNullable.<NvmfNamespaceWhereInput>of(namespacesSome);
    return this;
  }

   /**
   * Get namespacesSome
   * @return namespacesSome
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public NvmfNamespaceWhereInput getNamespacesSome() {
        return namespacesSome.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_NAMESPACES_SOME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<NvmfNamespaceWhereInput> getNamespacesSome_JsonNullable() {
    return namespacesSome;
  }
  
  @JsonProperty(JSON_PROPERTY_NAMESPACES_SOME)
  public void setNamespacesSome_JsonNullable(JsonNullable<NvmfNamespaceWhereInput> namespacesSome) {
    this.namespacesSome = namespacesSome;
  }

  public void setNamespacesSome(NvmfNamespaceWhereInput namespacesSome) {
    this.namespacesSome = JsonNullable.<NvmfNamespaceWhereInput>of(namespacesSome);
  }


  public NamespaceGroupWhereInput NOT(List<NamespaceGroupWhereInput> NOT) {
    this.NOT = JsonNullable.<List<NamespaceGroupWhereInput>>of(NOT);
    return this;
  }

  public NamespaceGroupWhereInput addNOTItem(NamespaceGroupWhereInput NOTItem) {
    if (this.NOT == null || !this.NOT.isPresent()) {
      this.NOT = JsonNullable.<List<NamespaceGroupWhereInput>>of(new ArrayList<>());
    }
    try {
      this.NOT.get().add(NOTItem);
    } catch (java.util.NoSuchElementException e) {
      // this can never happen, as we make sure above that the value is present
    }
    return this;
  }

   /**
   * Get NOT
   * @return NOT
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public List<NamespaceGroupWhereInput> getNOT() {
        return NOT.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_N_O_T)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<List<NamespaceGroupWhereInput>> getNOT_JsonNullable() {
    return NOT;
  }
  
  @JsonProperty(JSON_PROPERTY_N_O_T)
  public void setNOT_JsonNullable(JsonNullable<List<NamespaceGroupWhereInput>> NOT) {
    this.NOT = NOT;
  }

  public void setNOT(List<NamespaceGroupWhereInput> NOT) {
    this.NOT = JsonNullable.<List<NamespaceGroupWhereInput>>of(NOT);
  }


  public NamespaceGroupWhereInput nvmfSubsystem(NvmfSubsystemWhereInput nvmfSubsystem) {
    this.nvmfSubsystem = JsonNullable.<NvmfSubsystemWhereInput>of(nvmfSubsystem);
    return this;
  }

   /**
   * Get nvmfSubsystem
   * @return nvmfSubsystem
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public NvmfSubsystemWhereInput getNvmfSubsystem() {
        return nvmfSubsystem.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_NVMF_SUBSYSTEM)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<NvmfSubsystemWhereInput> getNvmfSubsystem_JsonNullable() {
    return nvmfSubsystem;
  }
  
  @JsonProperty(JSON_PROPERTY_NVMF_SUBSYSTEM)
  public void setNvmfSubsystem_JsonNullable(JsonNullable<NvmfSubsystemWhereInput> nvmfSubsystem) {
    this.nvmfSubsystem = nvmfSubsystem;
  }

  public void setNvmfSubsystem(NvmfSubsystemWhereInput nvmfSubsystem) {
    this.nvmfSubsystem = JsonNullable.<NvmfSubsystemWhereInput>of(nvmfSubsystem);
  }


  public NamespaceGroupWhereInput OR(List<NamespaceGroupWhereInput> OR) {
    this.OR = JsonNullable.<List<NamespaceGroupWhereInput>>of(OR);
    return this;
  }

  public NamespaceGroupWhereInput addORItem(NamespaceGroupWhereInput ORItem) {
    if (this.OR == null || !this.OR.isPresent()) {
      this.OR = JsonNullable.<List<NamespaceGroupWhereInput>>of(new ArrayList<>());
    }
    try {
      this.OR.get().add(ORItem);
    } catch (java.util.NoSuchElementException e) {
      // this can never happen, as we make sure above that the value is present
    }
    return this;
  }

   /**
   * Get OR
   * @return OR
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public List<NamespaceGroupWhereInput> getOR() {
        return OR.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_O_R)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<List<NamespaceGroupWhereInput>> getOR_JsonNullable() {
    return OR;
  }
  
  @JsonProperty(JSON_PROPERTY_O_R)
  public void setOR_JsonNullable(JsonNullable<List<NamespaceGroupWhereInput>> OR) {
    this.OR = OR;
  }

  public void setOR(List<NamespaceGroupWhereInput> OR) {
    this.OR = JsonNullable.<List<NamespaceGroupWhereInput>>of(OR);
  }


  /**
   * Return true if this NamespaceGroupWhereInput object is equal to o.
   */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    NamespaceGroupWhereInput namespaceGroupWhereInput = (NamespaceGroupWhereInput) o;
    return equalsNullable(this.AND, namespaceGroupWhereInput.AND) &&
        equalsNullable(this.entityAsyncStatus, namespaceGroupWhereInput.entityAsyncStatus) &&
        equalsNullable(this.entityAsyncStatusIn, namespaceGroupWhereInput.entityAsyncStatusIn) &&
        equalsNullable(this.entityAsyncStatusNot, namespaceGroupWhereInput.entityAsyncStatusNot) &&
        equalsNullable(this.entityAsyncStatusNotIn, namespaceGroupWhereInput.entityAsyncStatusNotIn) &&
        equalsNullable(this.id, namespaceGroupWhereInput.id) &&
        equalsNullable(this.idContains, namespaceGroupWhereInput.idContains) &&
        equalsNullable(this.idEndsWith, namespaceGroupWhereInput.idEndsWith) &&
        equalsNullable(this.idGt, namespaceGroupWhereInput.idGt) &&
        equalsNullable(this.idGte, namespaceGroupWhereInput.idGte) &&
        equalsNullable(this.idIn, namespaceGroupWhereInput.idIn) &&
        equalsNullable(this.idLt, namespaceGroupWhereInput.idLt) &&
        equalsNullable(this.idLte, namespaceGroupWhereInput.idLte) &&
        equalsNullable(this.idNot, namespaceGroupWhereInput.idNot) &&
        equalsNullable(this.idNotContains, namespaceGroupWhereInput.idNotContains) &&
        equalsNullable(this.idNotEndsWith, namespaceGroupWhereInput.idNotEndsWith) &&
        equalsNullable(this.idNotIn, namespaceGroupWhereInput.idNotIn) &&
        equalsNullable(this.idNotStartsWith, namespaceGroupWhereInput.idNotStartsWith) &&
        equalsNullable(this.idStartsWith, namespaceGroupWhereInput.idStartsWith) &&
        equalsNullable(this.labelsEvery, namespaceGroupWhereInput.labelsEvery) &&
        equalsNullable(this.labelsNone, namespaceGroupWhereInput.labelsNone) &&
        equalsNullable(this.labelsSome, namespaceGroupWhereInput.labelsSome) &&
        equalsNullable(this.localCreateTime, namespaceGroupWhereInput.localCreateTime) &&
        equalsNullable(this.localCreateTimeGt, namespaceGroupWhereInput.localCreateTimeGt) &&
        equalsNullable(this.localCreateTimeGte, namespaceGroupWhereInput.localCreateTimeGte) &&
        equalsNullable(this.localCreateTimeIn, namespaceGroupWhereInput.localCreateTimeIn) &&
        equalsNullable(this.localCreateTimeLt, namespaceGroupWhereInput.localCreateTimeLt) &&
        equalsNullable(this.localCreateTimeLte, namespaceGroupWhereInput.localCreateTimeLte) &&
        equalsNullable(this.localCreateTimeNot, namespaceGroupWhereInput.localCreateTimeNot) &&
        equalsNullable(this.localCreateTimeNotIn, namespaceGroupWhereInput.localCreateTimeNotIn) &&
        equalsNullable(this.localId, namespaceGroupWhereInput.localId) &&
        equalsNullable(this.localIdContains, namespaceGroupWhereInput.localIdContains) &&
        equalsNullable(this.localIdEndsWith, namespaceGroupWhereInput.localIdEndsWith) &&
        equalsNullable(this.localIdGt, namespaceGroupWhereInput.localIdGt) &&
        equalsNullable(this.localIdGte, namespaceGroupWhereInput.localIdGte) &&
        equalsNullable(this.localIdIn, namespaceGroupWhereInput.localIdIn) &&
        equalsNullable(this.localIdLt, namespaceGroupWhereInput.localIdLt) &&
        equalsNullable(this.localIdLte, namespaceGroupWhereInput.localIdLte) &&
        equalsNullable(this.localIdNot, namespaceGroupWhereInput.localIdNot) &&
        equalsNullable(this.localIdNotContains, namespaceGroupWhereInput.localIdNotContains) &&
        equalsNullable(this.localIdNotEndsWith, namespaceGroupWhereInput.localIdNotEndsWith) &&
        equalsNullable(this.localIdNotIn, namespaceGroupWhereInput.localIdNotIn) &&
        equalsNullable(this.localIdNotStartsWith, namespaceGroupWhereInput.localIdNotStartsWith) &&
        equalsNullable(this.localIdStartsWith, namespaceGroupWhereInput.localIdStartsWith) &&
        equalsNullable(this.name, namespaceGroupWhereInput.name) &&
        equalsNullable(this.nameContains, namespaceGroupWhereInput.nameContains) &&
        equalsNullable(this.nameEndsWith, namespaceGroupWhereInput.nameEndsWith) &&
        equalsNullable(this.nameGt, namespaceGroupWhereInput.nameGt) &&
        equalsNullable(this.nameGte, namespaceGroupWhereInput.nameGte) &&
        equalsNullable(this.nameIn, namespaceGroupWhereInput.nameIn) &&
        equalsNullable(this.nameLt, namespaceGroupWhereInput.nameLt) &&
        equalsNullable(this.nameLte, namespaceGroupWhereInput.nameLte) &&
        equalsNullable(this.nameNot, namespaceGroupWhereInput.nameNot) &&
        equalsNullable(this.nameNotContains, namespaceGroupWhereInput.nameNotContains) &&
        equalsNullable(this.nameNotEndsWith, namespaceGroupWhereInput.nameNotEndsWith) &&
        equalsNullable(this.nameNotIn, namespaceGroupWhereInput.nameNotIn) &&
        equalsNullable(this.nameNotStartsWith, namespaceGroupWhereInput.nameNotStartsWith) &&
        equalsNullable(this.nameStartsWith, namespaceGroupWhereInput.nameStartsWith) &&
        equalsNullable(this.namespacesEvery, namespaceGroupWhereInput.namespacesEvery) &&
        equalsNullable(this.namespacesNone, namespaceGroupWhereInput.namespacesNone) &&
        equalsNullable(this.namespacesSome, namespaceGroupWhereInput.namespacesSome) &&
        equalsNullable(this.NOT, namespaceGroupWhereInput.NOT) &&
        equalsNullable(this.nvmfSubsystem, namespaceGroupWhereInput.nvmfSubsystem) &&
        equalsNullable(this.OR, namespaceGroupWhereInput.OR);
  }

  private static <T> boolean equalsNullable(JsonNullable<T> a, JsonNullable<T> b) {
    return a == b || (a != null && b != null && a.isPresent() && b.isPresent() && Objects.deepEquals(a.get(), b.get()));
  }

  @Override
  public int hashCode() {
    return Objects.hash(hashCodeNullable(AND), hashCodeNullable(entityAsyncStatus), hashCodeNullable(entityAsyncStatusIn), hashCodeNullable(entityAsyncStatusNot), hashCodeNullable(entityAsyncStatusNotIn), hashCodeNullable(id), hashCodeNullable(idContains), hashCodeNullable(idEndsWith), hashCodeNullable(idGt), hashCodeNullable(idGte), hashCodeNullable(idIn), hashCodeNullable(idLt), hashCodeNullable(idLte), hashCodeNullable(idNot), hashCodeNullable(idNotContains), hashCodeNullable(idNotEndsWith), hashCodeNullable(idNotIn), hashCodeNullable(idNotStartsWith), hashCodeNullable(idStartsWith), hashCodeNullable(labelsEvery), hashCodeNullable(labelsNone), hashCodeNullable(labelsSome), hashCodeNullable(localCreateTime), hashCodeNullable(localCreateTimeGt), hashCodeNullable(localCreateTimeGte), hashCodeNullable(localCreateTimeIn), hashCodeNullable(localCreateTimeLt), hashCodeNullable(localCreateTimeLte), hashCodeNullable(localCreateTimeNot), hashCodeNullable(localCreateTimeNotIn), hashCodeNullable(localId), hashCodeNullable(localIdContains), hashCodeNullable(localIdEndsWith), hashCodeNullable(localIdGt), hashCodeNullable(localIdGte), hashCodeNullable(localIdIn), hashCodeNullable(localIdLt), hashCodeNullable(localIdLte), hashCodeNullable(localIdNot), hashCodeNullable(localIdNotContains), hashCodeNullable(localIdNotEndsWith), hashCodeNullable(localIdNotIn), hashCodeNullable(localIdNotStartsWith), hashCodeNullable(localIdStartsWith), hashCodeNullable(name), hashCodeNullable(nameContains), hashCodeNullable(nameEndsWith), hashCodeNullable(nameGt), hashCodeNullable(nameGte), hashCodeNullable(nameIn), hashCodeNullable(nameLt), hashCodeNullable(nameLte), hashCodeNullable(nameNot), hashCodeNullable(nameNotContains), hashCodeNullable(nameNotEndsWith), hashCodeNullable(nameNotIn), hashCodeNullable(nameNotStartsWith), hashCodeNullable(nameStartsWith), hashCodeNullable(namespacesEvery), hashCodeNullable(namespacesNone), hashCodeNullable(namespacesSome), hashCodeNullable(NOT), hashCodeNullable(nvmfSubsystem), hashCodeNullable(OR));
  }

  private static <T> int hashCodeNullable(JsonNullable<T> a) {
    if (a == null) {
      return 1;
    }
    return a.isPresent() ? Arrays.deepHashCode(new Object[]{a.get()}) : 31;
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class NamespaceGroupWhereInput {\n");
    sb.append("    AND: ").append(toIndentedString(AND)).append("\n");
    sb.append("    entityAsyncStatus: ").append(toIndentedString(entityAsyncStatus)).append("\n");
    sb.append("    entityAsyncStatusIn: ").append(toIndentedString(entityAsyncStatusIn)).append("\n");
    sb.append("    entityAsyncStatusNot: ").append(toIndentedString(entityAsyncStatusNot)).append("\n");
    sb.append("    entityAsyncStatusNotIn: ").append(toIndentedString(entityAsyncStatusNotIn)).append("\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    idContains: ").append(toIndentedString(idContains)).append("\n");
    sb.append("    idEndsWith: ").append(toIndentedString(idEndsWith)).append("\n");
    sb.append("    idGt: ").append(toIndentedString(idGt)).append("\n");
    sb.append("    idGte: ").append(toIndentedString(idGte)).append("\n");
    sb.append("    idIn: ").append(toIndentedString(idIn)).append("\n");
    sb.append("    idLt: ").append(toIndentedString(idLt)).append("\n");
    sb.append("    idLte: ").append(toIndentedString(idLte)).append("\n");
    sb.append("    idNot: ").append(toIndentedString(idNot)).append("\n");
    sb.append("    idNotContains: ").append(toIndentedString(idNotContains)).append("\n");
    sb.append("    idNotEndsWith: ").append(toIndentedString(idNotEndsWith)).append("\n");
    sb.append("    idNotIn: ").append(toIndentedString(idNotIn)).append("\n");
    sb.append("    idNotStartsWith: ").append(toIndentedString(idNotStartsWith)).append("\n");
    sb.append("    idStartsWith: ").append(toIndentedString(idStartsWith)).append("\n");
    sb.append("    labelsEvery: ").append(toIndentedString(labelsEvery)).append("\n");
    sb.append("    labelsNone: ").append(toIndentedString(labelsNone)).append("\n");
    sb.append("    labelsSome: ").append(toIndentedString(labelsSome)).append("\n");
    sb.append("    localCreateTime: ").append(toIndentedString(localCreateTime)).append("\n");
    sb.append("    localCreateTimeGt: ").append(toIndentedString(localCreateTimeGt)).append("\n");
    sb.append("    localCreateTimeGte: ").append(toIndentedString(localCreateTimeGte)).append("\n");
    sb.append("    localCreateTimeIn: ").append(toIndentedString(localCreateTimeIn)).append("\n");
    sb.append("    localCreateTimeLt: ").append(toIndentedString(localCreateTimeLt)).append("\n");
    sb.append("    localCreateTimeLte: ").append(toIndentedString(localCreateTimeLte)).append("\n");
    sb.append("    localCreateTimeNot: ").append(toIndentedString(localCreateTimeNot)).append("\n");
    sb.append("    localCreateTimeNotIn: ").append(toIndentedString(localCreateTimeNotIn)).append("\n");
    sb.append("    localId: ").append(toIndentedString(localId)).append("\n");
    sb.append("    localIdContains: ").append(toIndentedString(localIdContains)).append("\n");
    sb.append("    localIdEndsWith: ").append(toIndentedString(localIdEndsWith)).append("\n");
    sb.append("    localIdGt: ").append(toIndentedString(localIdGt)).append("\n");
    sb.append("    localIdGte: ").append(toIndentedString(localIdGte)).append("\n");
    sb.append("    localIdIn: ").append(toIndentedString(localIdIn)).append("\n");
    sb.append("    localIdLt: ").append(toIndentedString(localIdLt)).append("\n");
    sb.append("    localIdLte: ").append(toIndentedString(localIdLte)).append("\n");
    sb.append("    localIdNot: ").append(toIndentedString(localIdNot)).append("\n");
    sb.append("    localIdNotContains: ").append(toIndentedString(localIdNotContains)).append("\n");
    sb.append("    localIdNotEndsWith: ").append(toIndentedString(localIdNotEndsWith)).append("\n");
    sb.append("    localIdNotIn: ").append(toIndentedString(localIdNotIn)).append("\n");
    sb.append("    localIdNotStartsWith: ").append(toIndentedString(localIdNotStartsWith)).append("\n");
    sb.append("    localIdStartsWith: ").append(toIndentedString(localIdStartsWith)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    nameContains: ").append(toIndentedString(nameContains)).append("\n");
    sb.append("    nameEndsWith: ").append(toIndentedString(nameEndsWith)).append("\n");
    sb.append("    nameGt: ").append(toIndentedString(nameGt)).append("\n");
    sb.append("    nameGte: ").append(toIndentedString(nameGte)).append("\n");
    sb.append("    nameIn: ").append(toIndentedString(nameIn)).append("\n");
    sb.append("    nameLt: ").append(toIndentedString(nameLt)).append("\n");
    sb.append("    nameLte: ").append(toIndentedString(nameLte)).append("\n");
    sb.append("    nameNot: ").append(toIndentedString(nameNot)).append("\n");
    sb.append("    nameNotContains: ").append(toIndentedString(nameNotContains)).append("\n");
    sb.append("    nameNotEndsWith: ").append(toIndentedString(nameNotEndsWith)).append("\n");
    sb.append("    nameNotIn: ").append(toIndentedString(nameNotIn)).append("\n");
    sb.append("    nameNotStartsWith: ").append(toIndentedString(nameNotStartsWith)).append("\n");
    sb.append("    nameStartsWith: ").append(toIndentedString(nameStartsWith)).append("\n");
    sb.append("    namespacesEvery: ").append(toIndentedString(namespacesEvery)).append("\n");
    sb.append("    namespacesNone: ").append(toIndentedString(namespacesNone)).append("\n");
    sb.append("    namespacesSome: ").append(toIndentedString(namespacesSome)).append("\n");
    sb.append("    NOT: ").append(toIndentedString(NOT)).append("\n");
    sb.append("    nvmfSubsystem: ").append(toIndentedString(nvmfSubsystem)).append("\n");
    sb.append("    OR: ").append(toIndentedString(OR)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

