/*
 * Tower SDK API
 * cloudtower operation API and SDK
 *
 * The version of the OpenAPI document: 1.7.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.smartx.tower.model;

import java.util.Objects;
import java.util.Arrays;
import java.util.Map;
import java.util.HashMap;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import com.smartx.tower.model.AlertRuleObject;
import com.smartx.tower.model.AlertRuleUnit;
import com.smartx.tower.model.AlertRuleWhereInput;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.util.ArrayList;
import java.util.List;
import org.openapitools.jackson.nullable.JsonNullable;
import com.fasterxml.jackson.annotation.JsonIgnore;
import org.openapitools.jackson.nullable.JsonNullable;
import java.util.NoSuchElementException;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;


/**
 * GlobalAlertRuleWhereInput
 */
@JsonPropertyOrder({
  GlobalAlertRuleWhereInput.JSON_PROPERTY_ALERT_RULES_EVERY,
  GlobalAlertRuleWhereInput.JSON_PROPERTY_ALERT_RULES_NONE,
  GlobalAlertRuleWhereInput.JSON_PROPERTY_ALERT_RULES_SOME,
  GlobalAlertRuleWhereInput.JSON_PROPERTY_A_N_D,
  GlobalAlertRuleWhereInput.JSON_PROPERTY_BOOLEAN,
  GlobalAlertRuleWhereInput.JSON_PROPERTY_BOOLEAN_NOT,
  GlobalAlertRuleWhereInput.JSON_PROPERTY_CAUSE,
  GlobalAlertRuleWhereInput.JSON_PROPERTY_CAUSE_CONTAINS,
  GlobalAlertRuleWhereInput.JSON_PROPERTY_CAUSE_ENDS_WITH,
  GlobalAlertRuleWhereInput.JSON_PROPERTY_CAUSE_GT,
  GlobalAlertRuleWhereInput.JSON_PROPERTY_CAUSE_GTE,
  GlobalAlertRuleWhereInput.JSON_PROPERTY_CAUSE_IN,
  GlobalAlertRuleWhereInput.JSON_PROPERTY_CAUSE_LT,
  GlobalAlertRuleWhereInput.JSON_PROPERTY_CAUSE_LTE,
  GlobalAlertRuleWhereInput.JSON_PROPERTY_CAUSE_NOT,
  GlobalAlertRuleWhereInput.JSON_PROPERTY_CAUSE_NOT_CONTAINS,
  GlobalAlertRuleWhereInput.JSON_PROPERTY_CAUSE_NOT_ENDS_WITH,
  GlobalAlertRuleWhereInput.JSON_PROPERTY_CAUSE_NOT_IN,
  GlobalAlertRuleWhereInput.JSON_PROPERTY_CAUSE_NOT_STARTS_WITH,
  GlobalAlertRuleWhereInput.JSON_PROPERTY_CAUSE_STARTS_WITH,
  GlobalAlertRuleWhereInput.JSON_PROPERTY_DISABLED,
  GlobalAlertRuleWhereInput.JSON_PROPERTY_DISABLED_NOT,
  GlobalAlertRuleWhereInput.JSON_PROPERTY_ID,
  GlobalAlertRuleWhereInput.JSON_PROPERTY_ID_CONTAINS,
  GlobalAlertRuleWhereInput.JSON_PROPERTY_ID_ENDS_WITH,
  GlobalAlertRuleWhereInput.JSON_PROPERTY_ID_GT,
  GlobalAlertRuleWhereInput.JSON_PROPERTY_ID_GTE,
  GlobalAlertRuleWhereInput.JSON_PROPERTY_ID_IN,
  GlobalAlertRuleWhereInput.JSON_PROPERTY_ID_LT,
  GlobalAlertRuleWhereInput.JSON_PROPERTY_ID_LTE,
  GlobalAlertRuleWhereInput.JSON_PROPERTY_ID_NOT,
  GlobalAlertRuleWhereInput.JSON_PROPERTY_ID_NOT_CONTAINS,
  GlobalAlertRuleWhereInput.JSON_PROPERTY_ID_NOT_ENDS_WITH,
  GlobalAlertRuleWhereInput.JSON_PROPERTY_ID_NOT_IN,
  GlobalAlertRuleWhereInput.JSON_PROPERTY_ID_NOT_STARTS_WITH,
  GlobalAlertRuleWhereInput.JSON_PROPERTY_ID_STARTS_WITH,
  GlobalAlertRuleWhereInput.JSON_PROPERTY_IMPACT,
  GlobalAlertRuleWhereInput.JSON_PROPERTY_IMPACT_CONTAINS,
  GlobalAlertRuleWhereInput.JSON_PROPERTY_IMPACT_ENDS_WITH,
  GlobalAlertRuleWhereInput.JSON_PROPERTY_IMPACT_GT,
  GlobalAlertRuleWhereInput.JSON_PROPERTY_IMPACT_GTE,
  GlobalAlertRuleWhereInput.JSON_PROPERTY_IMPACT_IN,
  GlobalAlertRuleWhereInput.JSON_PROPERTY_IMPACT_LT,
  GlobalAlertRuleWhereInput.JSON_PROPERTY_IMPACT_LTE,
  GlobalAlertRuleWhereInput.JSON_PROPERTY_IMPACT_NOT,
  GlobalAlertRuleWhereInput.JSON_PROPERTY_IMPACT_NOT_CONTAINS,
  GlobalAlertRuleWhereInput.JSON_PROPERTY_IMPACT_NOT_ENDS_WITH,
  GlobalAlertRuleWhereInput.JSON_PROPERTY_IMPACT_NOT_IN,
  GlobalAlertRuleWhereInput.JSON_PROPERTY_IMPACT_NOT_STARTS_WITH,
  GlobalAlertRuleWhereInput.JSON_PROPERTY_IMPACT_STARTS_WITH,
  GlobalAlertRuleWhereInput.JSON_PROPERTY_MESSAGE,
  GlobalAlertRuleWhereInput.JSON_PROPERTY_MESSAGE_CONTAINS,
  GlobalAlertRuleWhereInput.JSON_PROPERTY_MESSAGE_ENDS_WITH,
  GlobalAlertRuleWhereInput.JSON_PROPERTY_MESSAGE_GT,
  GlobalAlertRuleWhereInput.JSON_PROPERTY_MESSAGE_GTE,
  GlobalAlertRuleWhereInput.JSON_PROPERTY_MESSAGE_IN,
  GlobalAlertRuleWhereInput.JSON_PROPERTY_MESSAGE_LT,
  GlobalAlertRuleWhereInput.JSON_PROPERTY_MESSAGE_LTE,
  GlobalAlertRuleWhereInput.JSON_PROPERTY_MESSAGE_NOT,
  GlobalAlertRuleWhereInput.JSON_PROPERTY_MESSAGE_NOT_CONTAINS,
  GlobalAlertRuleWhereInput.JSON_PROPERTY_MESSAGE_NOT_ENDS_WITH,
  GlobalAlertRuleWhereInput.JSON_PROPERTY_MESSAGE_NOT_IN,
  GlobalAlertRuleWhereInput.JSON_PROPERTY_MESSAGE_NOT_STARTS_WITH,
  GlobalAlertRuleWhereInput.JSON_PROPERTY_MESSAGE_STARTS_WITH,
  GlobalAlertRuleWhereInput.JSON_PROPERTY_NAME,
  GlobalAlertRuleWhereInput.JSON_PROPERTY_NAME_CONTAINS,
  GlobalAlertRuleWhereInput.JSON_PROPERTY_NAME_ENDS_WITH,
  GlobalAlertRuleWhereInput.JSON_PROPERTY_NAME_GT,
  GlobalAlertRuleWhereInput.JSON_PROPERTY_NAME_GTE,
  GlobalAlertRuleWhereInput.JSON_PROPERTY_NAME_IN,
  GlobalAlertRuleWhereInput.JSON_PROPERTY_NAME_LT,
  GlobalAlertRuleWhereInput.JSON_PROPERTY_NAME_LTE,
  GlobalAlertRuleWhereInput.JSON_PROPERTY_NAME_NOT,
  GlobalAlertRuleWhereInput.JSON_PROPERTY_NAME_NOT_CONTAINS,
  GlobalAlertRuleWhereInput.JSON_PROPERTY_NAME_NOT_ENDS_WITH,
  GlobalAlertRuleWhereInput.JSON_PROPERTY_NAME_NOT_IN,
  GlobalAlertRuleWhereInput.JSON_PROPERTY_NAME_NOT_STARTS_WITH,
  GlobalAlertRuleWhereInput.JSON_PROPERTY_NAME_STARTS_WITH,
  GlobalAlertRuleWhereInput.JSON_PROPERTY_N_O_T,
  GlobalAlertRuleWhereInput.JSON_PROPERTY_OBJECT,
  GlobalAlertRuleWhereInput.JSON_PROPERTY_OBJECT_IN,
  GlobalAlertRuleWhereInput.JSON_PROPERTY_OBJECT_NOT,
  GlobalAlertRuleWhereInput.JSON_PROPERTY_OBJECT_NOT_IN,
  GlobalAlertRuleWhereInput.JSON_PROPERTY_OPERATOR,
  GlobalAlertRuleWhereInput.JSON_PROPERTY_OPERATOR_CONTAINS,
  GlobalAlertRuleWhereInput.JSON_PROPERTY_OPERATOR_ENDS_WITH,
  GlobalAlertRuleWhereInput.JSON_PROPERTY_OPERATOR_GT,
  GlobalAlertRuleWhereInput.JSON_PROPERTY_OPERATOR_GTE,
  GlobalAlertRuleWhereInput.JSON_PROPERTY_OPERATOR_IN,
  GlobalAlertRuleWhereInput.JSON_PROPERTY_OPERATOR_LT,
  GlobalAlertRuleWhereInput.JSON_PROPERTY_OPERATOR_LTE,
  GlobalAlertRuleWhereInput.JSON_PROPERTY_OPERATOR_NOT,
  GlobalAlertRuleWhereInput.JSON_PROPERTY_OPERATOR_NOT_CONTAINS,
  GlobalAlertRuleWhereInput.JSON_PROPERTY_OPERATOR_NOT_ENDS_WITH,
  GlobalAlertRuleWhereInput.JSON_PROPERTY_OPERATOR_NOT_IN,
  GlobalAlertRuleWhereInput.JSON_PROPERTY_OPERATOR_NOT_STARTS_WITH,
  GlobalAlertRuleWhereInput.JSON_PROPERTY_OPERATOR_STARTS_WITH,
  GlobalAlertRuleWhereInput.JSON_PROPERTY_O_R,
  GlobalAlertRuleWhereInput.JSON_PROPERTY_SOLUTION,
  GlobalAlertRuleWhereInput.JSON_PROPERTY_SOLUTION_CONTAINS,
  GlobalAlertRuleWhereInput.JSON_PROPERTY_SOLUTION_ENDS_WITH,
  GlobalAlertRuleWhereInput.JSON_PROPERTY_SOLUTION_GT,
  GlobalAlertRuleWhereInput.JSON_PROPERTY_SOLUTION_GTE,
  GlobalAlertRuleWhereInput.JSON_PROPERTY_SOLUTION_IN,
  GlobalAlertRuleWhereInput.JSON_PROPERTY_SOLUTION_LT,
  GlobalAlertRuleWhereInput.JSON_PROPERTY_SOLUTION_LTE,
  GlobalAlertRuleWhereInput.JSON_PROPERTY_SOLUTION_NOT,
  GlobalAlertRuleWhereInput.JSON_PROPERTY_SOLUTION_NOT_CONTAINS,
  GlobalAlertRuleWhereInput.JSON_PROPERTY_SOLUTION_NOT_ENDS_WITH,
  GlobalAlertRuleWhereInput.JSON_PROPERTY_SOLUTION_NOT_IN,
  GlobalAlertRuleWhereInput.JSON_PROPERTY_SOLUTION_NOT_STARTS_WITH,
  GlobalAlertRuleWhereInput.JSON_PROPERTY_SOLUTION_STARTS_WITH,
  GlobalAlertRuleWhereInput.JSON_PROPERTY_UNIT,
  GlobalAlertRuleWhereInput.JSON_PROPERTY_UNIT_IN,
  GlobalAlertRuleWhereInput.JSON_PROPERTY_UNIT_NOT,
  GlobalAlertRuleWhereInput.JSON_PROPERTY_UNIT_NOT_IN
})
@javax.annotation.processing.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2021-10-27T15:59:14.939791800+08:00[Asia/Shanghai]")
public class GlobalAlertRuleWhereInput {
  public static final String JSON_PROPERTY_ALERT_RULES_EVERY = "alert_rules_every";
  private JsonNullable<AlertRuleWhereInput> alertRulesEvery = JsonNullable.<AlertRuleWhereInput>undefined();

  public static final String JSON_PROPERTY_ALERT_RULES_NONE = "alert_rules_none";
  private JsonNullable<AlertRuleWhereInput> alertRulesNone = JsonNullable.<AlertRuleWhereInput>undefined();

  public static final String JSON_PROPERTY_ALERT_RULES_SOME = "alert_rules_some";
  private JsonNullable<AlertRuleWhereInput> alertRulesSome = JsonNullable.<AlertRuleWhereInput>undefined();

  public static final String JSON_PROPERTY_A_N_D = "AND";
  private JsonNullable<List<GlobalAlertRuleWhereInput>> AND = JsonNullable.<List<GlobalAlertRuleWhereInput>>undefined();

  public static final String JSON_PROPERTY_BOOLEAN = "boolean";
  private JsonNullable<Boolean> _boolean = JsonNullable.<Boolean>undefined();

  public static final String JSON_PROPERTY_BOOLEAN_NOT = "boolean_not";
  private JsonNullable<Boolean> booleanNot = JsonNullable.<Boolean>undefined();

  public static final String JSON_PROPERTY_CAUSE = "cause";
  private JsonNullable<String> cause = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_CAUSE_CONTAINS = "cause_contains";
  private JsonNullable<String> causeContains = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_CAUSE_ENDS_WITH = "cause_ends_with";
  private JsonNullable<String> causeEndsWith = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_CAUSE_GT = "cause_gt";
  private JsonNullable<String> causeGt = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_CAUSE_GTE = "cause_gte";
  private JsonNullable<String> causeGte = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_CAUSE_IN = "cause_in";
  private JsonNullable<List<String>> causeIn = JsonNullable.<List<String>>undefined();

  public static final String JSON_PROPERTY_CAUSE_LT = "cause_lt";
  private JsonNullable<String> causeLt = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_CAUSE_LTE = "cause_lte";
  private JsonNullable<String> causeLte = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_CAUSE_NOT = "cause_not";
  private JsonNullable<String> causeNot = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_CAUSE_NOT_CONTAINS = "cause_not_contains";
  private JsonNullable<String> causeNotContains = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_CAUSE_NOT_ENDS_WITH = "cause_not_ends_with";
  private JsonNullable<String> causeNotEndsWith = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_CAUSE_NOT_IN = "cause_not_in";
  private JsonNullable<List<String>> causeNotIn = JsonNullable.<List<String>>undefined();

  public static final String JSON_PROPERTY_CAUSE_NOT_STARTS_WITH = "cause_not_starts_with";
  private JsonNullable<String> causeNotStartsWith = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_CAUSE_STARTS_WITH = "cause_starts_with";
  private JsonNullable<String> causeStartsWith = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_DISABLED = "disabled";
  private JsonNullable<Boolean> disabled = JsonNullable.<Boolean>undefined();

  public static final String JSON_PROPERTY_DISABLED_NOT = "disabled_not";
  private JsonNullable<Boolean> disabledNot = JsonNullable.<Boolean>undefined();

  public static final String JSON_PROPERTY_ID = "id";
  private JsonNullable<String> id = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_ID_CONTAINS = "id_contains";
  private JsonNullable<String> idContains = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_ID_ENDS_WITH = "id_ends_with";
  private JsonNullable<String> idEndsWith = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_ID_GT = "id_gt";
  private JsonNullable<String> idGt = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_ID_GTE = "id_gte";
  private JsonNullable<String> idGte = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_ID_IN = "id_in";
  private JsonNullable<List<String>> idIn = JsonNullable.<List<String>>undefined();

  public static final String JSON_PROPERTY_ID_LT = "id_lt";
  private JsonNullable<String> idLt = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_ID_LTE = "id_lte";
  private JsonNullable<String> idLte = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_ID_NOT = "id_not";
  private JsonNullable<String> idNot = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_ID_NOT_CONTAINS = "id_not_contains";
  private JsonNullable<String> idNotContains = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_ID_NOT_ENDS_WITH = "id_not_ends_with";
  private JsonNullable<String> idNotEndsWith = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_ID_NOT_IN = "id_not_in";
  private JsonNullable<List<String>> idNotIn = JsonNullable.<List<String>>undefined();

  public static final String JSON_PROPERTY_ID_NOT_STARTS_WITH = "id_not_starts_with";
  private JsonNullable<String> idNotStartsWith = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_ID_STARTS_WITH = "id_starts_with";
  private JsonNullable<String> idStartsWith = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_IMPACT = "impact";
  private JsonNullable<String> impact = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_IMPACT_CONTAINS = "impact_contains";
  private JsonNullable<String> impactContains = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_IMPACT_ENDS_WITH = "impact_ends_with";
  private JsonNullable<String> impactEndsWith = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_IMPACT_GT = "impact_gt";
  private JsonNullable<String> impactGt = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_IMPACT_GTE = "impact_gte";
  private JsonNullable<String> impactGte = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_IMPACT_IN = "impact_in";
  private JsonNullable<List<String>> impactIn = JsonNullable.<List<String>>undefined();

  public static final String JSON_PROPERTY_IMPACT_LT = "impact_lt";
  private JsonNullable<String> impactLt = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_IMPACT_LTE = "impact_lte";
  private JsonNullable<String> impactLte = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_IMPACT_NOT = "impact_not";
  private JsonNullable<String> impactNot = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_IMPACT_NOT_CONTAINS = "impact_not_contains";
  private JsonNullable<String> impactNotContains = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_IMPACT_NOT_ENDS_WITH = "impact_not_ends_with";
  private JsonNullable<String> impactNotEndsWith = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_IMPACT_NOT_IN = "impact_not_in";
  private JsonNullable<List<String>> impactNotIn = JsonNullable.<List<String>>undefined();

  public static final String JSON_PROPERTY_IMPACT_NOT_STARTS_WITH = "impact_not_starts_with";
  private JsonNullable<String> impactNotStartsWith = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_IMPACT_STARTS_WITH = "impact_starts_with";
  private JsonNullable<String> impactStartsWith = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_MESSAGE = "message";
  private JsonNullable<String> message = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_MESSAGE_CONTAINS = "message_contains";
  private JsonNullable<String> messageContains = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_MESSAGE_ENDS_WITH = "message_ends_with";
  private JsonNullable<String> messageEndsWith = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_MESSAGE_GT = "message_gt";
  private JsonNullable<String> messageGt = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_MESSAGE_GTE = "message_gte";
  private JsonNullable<String> messageGte = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_MESSAGE_IN = "message_in";
  private JsonNullable<List<String>> messageIn = JsonNullable.<List<String>>undefined();

  public static final String JSON_PROPERTY_MESSAGE_LT = "message_lt";
  private JsonNullable<String> messageLt = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_MESSAGE_LTE = "message_lte";
  private JsonNullable<String> messageLte = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_MESSAGE_NOT = "message_not";
  private JsonNullable<String> messageNot = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_MESSAGE_NOT_CONTAINS = "message_not_contains";
  private JsonNullable<String> messageNotContains = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_MESSAGE_NOT_ENDS_WITH = "message_not_ends_with";
  private JsonNullable<String> messageNotEndsWith = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_MESSAGE_NOT_IN = "message_not_in";
  private JsonNullable<List<String>> messageNotIn = JsonNullable.<List<String>>undefined();

  public static final String JSON_PROPERTY_MESSAGE_NOT_STARTS_WITH = "message_not_starts_with";
  private JsonNullable<String> messageNotStartsWith = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_MESSAGE_STARTS_WITH = "message_starts_with";
  private JsonNullable<String> messageStartsWith = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_NAME = "name";
  private JsonNullable<String> name = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_NAME_CONTAINS = "name_contains";
  private JsonNullable<String> nameContains = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_NAME_ENDS_WITH = "name_ends_with";
  private JsonNullable<String> nameEndsWith = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_NAME_GT = "name_gt";
  private JsonNullable<String> nameGt = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_NAME_GTE = "name_gte";
  private JsonNullable<String> nameGte = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_NAME_IN = "name_in";
  private JsonNullable<List<String>> nameIn = JsonNullable.<List<String>>undefined();

  public static final String JSON_PROPERTY_NAME_LT = "name_lt";
  private JsonNullable<String> nameLt = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_NAME_LTE = "name_lte";
  private JsonNullable<String> nameLte = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_NAME_NOT = "name_not";
  private JsonNullable<String> nameNot = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_NAME_NOT_CONTAINS = "name_not_contains";
  private JsonNullable<String> nameNotContains = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_NAME_NOT_ENDS_WITH = "name_not_ends_with";
  private JsonNullable<String> nameNotEndsWith = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_NAME_NOT_IN = "name_not_in";
  private JsonNullable<List<String>> nameNotIn = JsonNullable.<List<String>>undefined();

  public static final String JSON_PROPERTY_NAME_NOT_STARTS_WITH = "name_not_starts_with";
  private JsonNullable<String> nameNotStartsWith = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_NAME_STARTS_WITH = "name_starts_with";
  private JsonNullable<String> nameStartsWith = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_N_O_T = "NOT";
  private JsonNullable<List<GlobalAlertRuleWhereInput>> NOT = JsonNullable.<List<GlobalAlertRuleWhereInput>>undefined();

  public static final String JSON_PROPERTY_OBJECT = "object";
  private JsonNullable<AlertRuleObject> _object = JsonNullable.<AlertRuleObject>undefined();

  public static final String JSON_PROPERTY_OBJECT_IN = "object_in";
  private JsonNullable<List<AlertRuleObject>> objectIn = JsonNullable.<List<AlertRuleObject>>undefined();

  public static final String JSON_PROPERTY_OBJECT_NOT = "object_not";
  private JsonNullable<AlertRuleObject> objectNot = JsonNullable.<AlertRuleObject>undefined();

  public static final String JSON_PROPERTY_OBJECT_NOT_IN = "object_not_in";
  private JsonNullable<List<AlertRuleObject>> objectNotIn = JsonNullable.<List<AlertRuleObject>>undefined();

  public static final String JSON_PROPERTY_OPERATOR = "operator";
  private JsonNullable<String> operator = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_OPERATOR_CONTAINS = "operator_contains";
  private JsonNullable<String> operatorContains = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_OPERATOR_ENDS_WITH = "operator_ends_with";
  private JsonNullable<String> operatorEndsWith = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_OPERATOR_GT = "operator_gt";
  private JsonNullable<String> operatorGt = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_OPERATOR_GTE = "operator_gte";
  private JsonNullable<String> operatorGte = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_OPERATOR_IN = "operator_in";
  private JsonNullable<List<String>> operatorIn = JsonNullable.<List<String>>undefined();

  public static final String JSON_PROPERTY_OPERATOR_LT = "operator_lt";
  private JsonNullable<String> operatorLt = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_OPERATOR_LTE = "operator_lte";
  private JsonNullable<String> operatorLte = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_OPERATOR_NOT = "operator_not";
  private JsonNullable<String> operatorNot = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_OPERATOR_NOT_CONTAINS = "operator_not_contains";
  private JsonNullable<String> operatorNotContains = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_OPERATOR_NOT_ENDS_WITH = "operator_not_ends_with";
  private JsonNullable<String> operatorNotEndsWith = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_OPERATOR_NOT_IN = "operator_not_in";
  private JsonNullable<List<String>> operatorNotIn = JsonNullable.<List<String>>undefined();

  public static final String JSON_PROPERTY_OPERATOR_NOT_STARTS_WITH = "operator_not_starts_with";
  private JsonNullable<String> operatorNotStartsWith = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_OPERATOR_STARTS_WITH = "operator_starts_with";
  private JsonNullable<String> operatorStartsWith = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_O_R = "OR";
  private JsonNullable<List<GlobalAlertRuleWhereInput>> OR = JsonNullable.<List<GlobalAlertRuleWhereInput>>undefined();

  public static final String JSON_PROPERTY_SOLUTION = "solution";
  private JsonNullable<String> solution = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_SOLUTION_CONTAINS = "solution_contains";
  private JsonNullable<String> solutionContains = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_SOLUTION_ENDS_WITH = "solution_ends_with";
  private JsonNullable<String> solutionEndsWith = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_SOLUTION_GT = "solution_gt";
  private JsonNullable<String> solutionGt = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_SOLUTION_GTE = "solution_gte";
  private JsonNullable<String> solutionGte = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_SOLUTION_IN = "solution_in";
  private JsonNullable<List<String>> solutionIn = JsonNullable.<List<String>>undefined();

  public static final String JSON_PROPERTY_SOLUTION_LT = "solution_lt";
  private JsonNullable<String> solutionLt = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_SOLUTION_LTE = "solution_lte";
  private JsonNullable<String> solutionLte = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_SOLUTION_NOT = "solution_not";
  private JsonNullable<String> solutionNot = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_SOLUTION_NOT_CONTAINS = "solution_not_contains";
  private JsonNullable<String> solutionNotContains = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_SOLUTION_NOT_ENDS_WITH = "solution_not_ends_with";
  private JsonNullable<String> solutionNotEndsWith = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_SOLUTION_NOT_IN = "solution_not_in";
  private JsonNullable<List<String>> solutionNotIn = JsonNullable.<List<String>>undefined();

  public static final String JSON_PROPERTY_SOLUTION_NOT_STARTS_WITH = "solution_not_starts_with";
  private JsonNullable<String> solutionNotStartsWith = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_SOLUTION_STARTS_WITH = "solution_starts_with";
  private JsonNullable<String> solutionStartsWith = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_UNIT = "unit";
  private JsonNullable<AlertRuleUnit> unit = JsonNullable.<AlertRuleUnit>undefined();

  public static final String JSON_PROPERTY_UNIT_IN = "unit_in";
  private JsonNullable<List<AlertRuleUnit>> unitIn = JsonNullable.<List<AlertRuleUnit>>undefined();

  public static final String JSON_PROPERTY_UNIT_NOT = "unit_not";
  private JsonNullable<AlertRuleUnit> unitNot = JsonNullable.<AlertRuleUnit>undefined();

  public static final String JSON_PROPERTY_UNIT_NOT_IN = "unit_not_in";
  private JsonNullable<List<AlertRuleUnit>> unitNotIn = JsonNullable.<List<AlertRuleUnit>>undefined();


  public GlobalAlertRuleWhereInput alertRulesEvery(AlertRuleWhereInput alertRulesEvery) {
    this.alertRulesEvery = JsonNullable.<AlertRuleWhereInput>of(alertRulesEvery);
    return this;
  }

   /**
   * Get alertRulesEvery
   * @return alertRulesEvery
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public AlertRuleWhereInput getAlertRulesEvery() {
        return alertRulesEvery.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_ALERT_RULES_EVERY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<AlertRuleWhereInput> getAlertRulesEvery_JsonNullable() {
    return alertRulesEvery;
  }
  
  @JsonProperty(JSON_PROPERTY_ALERT_RULES_EVERY)
  public void setAlertRulesEvery_JsonNullable(JsonNullable<AlertRuleWhereInput> alertRulesEvery) {
    this.alertRulesEvery = alertRulesEvery;
  }

  public void setAlertRulesEvery(AlertRuleWhereInput alertRulesEvery) {
    this.alertRulesEvery = JsonNullable.<AlertRuleWhereInput>of(alertRulesEvery);
  }


  public GlobalAlertRuleWhereInput alertRulesNone(AlertRuleWhereInput alertRulesNone) {
    this.alertRulesNone = JsonNullable.<AlertRuleWhereInput>of(alertRulesNone);
    return this;
  }

   /**
   * Get alertRulesNone
   * @return alertRulesNone
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public AlertRuleWhereInput getAlertRulesNone() {
        return alertRulesNone.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_ALERT_RULES_NONE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<AlertRuleWhereInput> getAlertRulesNone_JsonNullable() {
    return alertRulesNone;
  }
  
  @JsonProperty(JSON_PROPERTY_ALERT_RULES_NONE)
  public void setAlertRulesNone_JsonNullable(JsonNullable<AlertRuleWhereInput> alertRulesNone) {
    this.alertRulesNone = alertRulesNone;
  }

  public void setAlertRulesNone(AlertRuleWhereInput alertRulesNone) {
    this.alertRulesNone = JsonNullable.<AlertRuleWhereInput>of(alertRulesNone);
  }


  public GlobalAlertRuleWhereInput alertRulesSome(AlertRuleWhereInput alertRulesSome) {
    this.alertRulesSome = JsonNullable.<AlertRuleWhereInput>of(alertRulesSome);
    return this;
  }

   /**
   * Get alertRulesSome
   * @return alertRulesSome
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public AlertRuleWhereInput getAlertRulesSome() {
        return alertRulesSome.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_ALERT_RULES_SOME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<AlertRuleWhereInput> getAlertRulesSome_JsonNullable() {
    return alertRulesSome;
  }
  
  @JsonProperty(JSON_PROPERTY_ALERT_RULES_SOME)
  public void setAlertRulesSome_JsonNullable(JsonNullable<AlertRuleWhereInput> alertRulesSome) {
    this.alertRulesSome = alertRulesSome;
  }

  public void setAlertRulesSome(AlertRuleWhereInput alertRulesSome) {
    this.alertRulesSome = JsonNullable.<AlertRuleWhereInput>of(alertRulesSome);
  }


  public GlobalAlertRuleWhereInput AND(List<GlobalAlertRuleWhereInput> AND) {
    this.AND = JsonNullable.<List<GlobalAlertRuleWhereInput>>of(AND);
    return this;
  }

  public GlobalAlertRuleWhereInput addANDItem(GlobalAlertRuleWhereInput ANDItem) {
    if (this.AND == null || !this.AND.isPresent()) {
      this.AND = JsonNullable.<List<GlobalAlertRuleWhereInput>>of(new ArrayList<>());
    }
    try {
      this.AND.get().add(ANDItem);
    } catch (java.util.NoSuchElementException e) {
      // this can never happen, as we make sure above that the value is present
    }
    return this;
  }

   /**
   * Get AND
   * @return AND
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public List<GlobalAlertRuleWhereInput> getAND() {
        return AND.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_A_N_D)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<List<GlobalAlertRuleWhereInput>> getAND_JsonNullable() {
    return AND;
  }
  
  @JsonProperty(JSON_PROPERTY_A_N_D)
  public void setAND_JsonNullable(JsonNullable<List<GlobalAlertRuleWhereInput>> AND) {
    this.AND = AND;
  }

  public void setAND(List<GlobalAlertRuleWhereInput> AND) {
    this.AND = JsonNullable.<List<GlobalAlertRuleWhereInput>>of(AND);
  }


  public GlobalAlertRuleWhereInput _boolean(Boolean _boolean) {
    this._boolean = JsonNullable.<Boolean>of(_boolean);
    return this;
  }

   /**
   * Get _boolean
   * @return _boolean
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public Boolean getBoolean() {
        return _boolean.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_BOOLEAN)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<Boolean> getBoolean_JsonNullable() {
    return _boolean;
  }
  
  @JsonProperty(JSON_PROPERTY_BOOLEAN)
  public void setBoolean_JsonNullable(JsonNullable<Boolean> _boolean) {
    this._boolean = _boolean;
  }

  public void setBoolean(Boolean _boolean) {
    this._boolean = JsonNullable.<Boolean>of(_boolean);
  }


  public GlobalAlertRuleWhereInput booleanNot(Boolean booleanNot) {
    this.booleanNot = JsonNullable.<Boolean>of(booleanNot);
    return this;
  }

   /**
   * Get booleanNot
   * @return booleanNot
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public Boolean getBooleanNot() {
        return booleanNot.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_BOOLEAN_NOT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<Boolean> getBooleanNot_JsonNullable() {
    return booleanNot;
  }
  
  @JsonProperty(JSON_PROPERTY_BOOLEAN_NOT)
  public void setBooleanNot_JsonNullable(JsonNullable<Boolean> booleanNot) {
    this.booleanNot = booleanNot;
  }

  public void setBooleanNot(Boolean booleanNot) {
    this.booleanNot = JsonNullable.<Boolean>of(booleanNot);
  }


  public GlobalAlertRuleWhereInput cause(String cause) {
    this.cause = JsonNullable.<String>of(cause);
    return this;
  }

   /**
   * Get cause
   * @return cause
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getCause() {
        return cause.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_CAUSE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getCause_JsonNullable() {
    return cause;
  }
  
  @JsonProperty(JSON_PROPERTY_CAUSE)
  public void setCause_JsonNullable(JsonNullable<String> cause) {
    this.cause = cause;
  }

  public void setCause(String cause) {
    this.cause = JsonNullable.<String>of(cause);
  }


  public GlobalAlertRuleWhereInput causeContains(String causeContains) {
    this.causeContains = JsonNullable.<String>of(causeContains);
    return this;
  }

   /**
   * Get causeContains
   * @return causeContains
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getCauseContains() {
        return causeContains.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_CAUSE_CONTAINS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getCauseContains_JsonNullable() {
    return causeContains;
  }
  
  @JsonProperty(JSON_PROPERTY_CAUSE_CONTAINS)
  public void setCauseContains_JsonNullable(JsonNullable<String> causeContains) {
    this.causeContains = causeContains;
  }

  public void setCauseContains(String causeContains) {
    this.causeContains = JsonNullable.<String>of(causeContains);
  }


  public GlobalAlertRuleWhereInput causeEndsWith(String causeEndsWith) {
    this.causeEndsWith = JsonNullable.<String>of(causeEndsWith);
    return this;
  }

   /**
   * Get causeEndsWith
   * @return causeEndsWith
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getCauseEndsWith() {
        return causeEndsWith.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_CAUSE_ENDS_WITH)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getCauseEndsWith_JsonNullable() {
    return causeEndsWith;
  }
  
  @JsonProperty(JSON_PROPERTY_CAUSE_ENDS_WITH)
  public void setCauseEndsWith_JsonNullable(JsonNullable<String> causeEndsWith) {
    this.causeEndsWith = causeEndsWith;
  }

  public void setCauseEndsWith(String causeEndsWith) {
    this.causeEndsWith = JsonNullable.<String>of(causeEndsWith);
  }


  public GlobalAlertRuleWhereInput causeGt(String causeGt) {
    this.causeGt = JsonNullable.<String>of(causeGt);
    return this;
  }

   /**
   * Get causeGt
   * @return causeGt
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getCauseGt() {
        return causeGt.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_CAUSE_GT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getCauseGt_JsonNullable() {
    return causeGt;
  }
  
  @JsonProperty(JSON_PROPERTY_CAUSE_GT)
  public void setCauseGt_JsonNullable(JsonNullable<String> causeGt) {
    this.causeGt = causeGt;
  }

  public void setCauseGt(String causeGt) {
    this.causeGt = JsonNullable.<String>of(causeGt);
  }


  public GlobalAlertRuleWhereInput causeGte(String causeGte) {
    this.causeGte = JsonNullable.<String>of(causeGte);
    return this;
  }

   /**
   * Get causeGte
   * @return causeGte
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getCauseGte() {
        return causeGte.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_CAUSE_GTE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getCauseGte_JsonNullable() {
    return causeGte;
  }
  
  @JsonProperty(JSON_PROPERTY_CAUSE_GTE)
  public void setCauseGte_JsonNullable(JsonNullable<String> causeGte) {
    this.causeGte = causeGte;
  }

  public void setCauseGte(String causeGte) {
    this.causeGte = JsonNullable.<String>of(causeGte);
  }


  public GlobalAlertRuleWhereInput causeIn(List<String> causeIn) {
    this.causeIn = JsonNullable.<List<String>>of(causeIn);
    return this;
  }

  public GlobalAlertRuleWhereInput addCauseInItem(String causeInItem) {
    if (this.causeIn == null || !this.causeIn.isPresent()) {
      this.causeIn = JsonNullable.<List<String>>of(new ArrayList<>());
    }
    try {
      this.causeIn.get().add(causeInItem);
    } catch (java.util.NoSuchElementException e) {
      // this can never happen, as we make sure above that the value is present
    }
    return this;
  }

   /**
   * Get causeIn
   * @return causeIn
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public List<String> getCauseIn() {
        return causeIn.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_CAUSE_IN)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<List<String>> getCauseIn_JsonNullable() {
    return causeIn;
  }
  
  @JsonProperty(JSON_PROPERTY_CAUSE_IN)
  public void setCauseIn_JsonNullable(JsonNullable<List<String>> causeIn) {
    this.causeIn = causeIn;
  }

  public void setCauseIn(List<String> causeIn) {
    this.causeIn = JsonNullable.<List<String>>of(causeIn);
  }


  public GlobalAlertRuleWhereInput causeLt(String causeLt) {
    this.causeLt = JsonNullable.<String>of(causeLt);
    return this;
  }

   /**
   * Get causeLt
   * @return causeLt
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getCauseLt() {
        return causeLt.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_CAUSE_LT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getCauseLt_JsonNullable() {
    return causeLt;
  }
  
  @JsonProperty(JSON_PROPERTY_CAUSE_LT)
  public void setCauseLt_JsonNullable(JsonNullable<String> causeLt) {
    this.causeLt = causeLt;
  }

  public void setCauseLt(String causeLt) {
    this.causeLt = JsonNullable.<String>of(causeLt);
  }


  public GlobalAlertRuleWhereInput causeLte(String causeLte) {
    this.causeLte = JsonNullable.<String>of(causeLte);
    return this;
  }

   /**
   * Get causeLte
   * @return causeLte
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getCauseLte() {
        return causeLte.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_CAUSE_LTE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getCauseLte_JsonNullable() {
    return causeLte;
  }
  
  @JsonProperty(JSON_PROPERTY_CAUSE_LTE)
  public void setCauseLte_JsonNullable(JsonNullable<String> causeLte) {
    this.causeLte = causeLte;
  }

  public void setCauseLte(String causeLte) {
    this.causeLte = JsonNullable.<String>of(causeLte);
  }


  public GlobalAlertRuleWhereInput causeNot(String causeNot) {
    this.causeNot = JsonNullable.<String>of(causeNot);
    return this;
  }

   /**
   * Get causeNot
   * @return causeNot
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getCauseNot() {
        return causeNot.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_CAUSE_NOT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getCauseNot_JsonNullable() {
    return causeNot;
  }
  
  @JsonProperty(JSON_PROPERTY_CAUSE_NOT)
  public void setCauseNot_JsonNullable(JsonNullable<String> causeNot) {
    this.causeNot = causeNot;
  }

  public void setCauseNot(String causeNot) {
    this.causeNot = JsonNullable.<String>of(causeNot);
  }


  public GlobalAlertRuleWhereInput causeNotContains(String causeNotContains) {
    this.causeNotContains = JsonNullable.<String>of(causeNotContains);
    return this;
  }

   /**
   * Get causeNotContains
   * @return causeNotContains
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getCauseNotContains() {
        return causeNotContains.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_CAUSE_NOT_CONTAINS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getCauseNotContains_JsonNullable() {
    return causeNotContains;
  }
  
  @JsonProperty(JSON_PROPERTY_CAUSE_NOT_CONTAINS)
  public void setCauseNotContains_JsonNullable(JsonNullable<String> causeNotContains) {
    this.causeNotContains = causeNotContains;
  }

  public void setCauseNotContains(String causeNotContains) {
    this.causeNotContains = JsonNullable.<String>of(causeNotContains);
  }


  public GlobalAlertRuleWhereInput causeNotEndsWith(String causeNotEndsWith) {
    this.causeNotEndsWith = JsonNullable.<String>of(causeNotEndsWith);
    return this;
  }

   /**
   * Get causeNotEndsWith
   * @return causeNotEndsWith
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getCauseNotEndsWith() {
        return causeNotEndsWith.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_CAUSE_NOT_ENDS_WITH)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getCauseNotEndsWith_JsonNullable() {
    return causeNotEndsWith;
  }
  
  @JsonProperty(JSON_PROPERTY_CAUSE_NOT_ENDS_WITH)
  public void setCauseNotEndsWith_JsonNullable(JsonNullable<String> causeNotEndsWith) {
    this.causeNotEndsWith = causeNotEndsWith;
  }

  public void setCauseNotEndsWith(String causeNotEndsWith) {
    this.causeNotEndsWith = JsonNullable.<String>of(causeNotEndsWith);
  }


  public GlobalAlertRuleWhereInput causeNotIn(List<String> causeNotIn) {
    this.causeNotIn = JsonNullable.<List<String>>of(causeNotIn);
    return this;
  }

  public GlobalAlertRuleWhereInput addCauseNotInItem(String causeNotInItem) {
    if (this.causeNotIn == null || !this.causeNotIn.isPresent()) {
      this.causeNotIn = JsonNullable.<List<String>>of(new ArrayList<>());
    }
    try {
      this.causeNotIn.get().add(causeNotInItem);
    } catch (java.util.NoSuchElementException e) {
      // this can never happen, as we make sure above that the value is present
    }
    return this;
  }

   /**
   * Get causeNotIn
   * @return causeNotIn
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public List<String> getCauseNotIn() {
        return causeNotIn.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_CAUSE_NOT_IN)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<List<String>> getCauseNotIn_JsonNullable() {
    return causeNotIn;
  }
  
  @JsonProperty(JSON_PROPERTY_CAUSE_NOT_IN)
  public void setCauseNotIn_JsonNullable(JsonNullable<List<String>> causeNotIn) {
    this.causeNotIn = causeNotIn;
  }

  public void setCauseNotIn(List<String> causeNotIn) {
    this.causeNotIn = JsonNullable.<List<String>>of(causeNotIn);
  }


  public GlobalAlertRuleWhereInput causeNotStartsWith(String causeNotStartsWith) {
    this.causeNotStartsWith = JsonNullable.<String>of(causeNotStartsWith);
    return this;
  }

   /**
   * Get causeNotStartsWith
   * @return causeNotStartsWith
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getCauseNotStartsWith() {
        return causeNotStartsWith.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_CAUSE_NOT_STARTS_WITH)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getCauseNotStartsWith_JsonNullable() {
    return causeNotStartsWith;
  }
  
  @JsonProperty(JSON_PROPERTY_CAUSE_NOT_STARTS_WITH)
  public void setCauseNotStartsWith_JsonNullable(JsonNullable<String> causeNotStartsWith) {
    this.causeNotStartsWith = causeNotStartsWith;
  }

  public void setCauseNotStartsWith(String causeNotStartsWith) {
    this.causeNotStartsWith = JsonNullable.<String>of(causeNotStartsWith);
  }


  public GlobalAlertRuleWhereInput causeStartsWith(String causeStartsWith) {
    this.causeStartsWith = JsonNullable.<String>of(causeStartsWith);
    return this;
  }

   /**
   * Get causeStartsWith
   * @return causeStartsWith
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getCauseStartsWith() {
        return causeStartsWith.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_CAUSE_STARTS_WITH)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getCauseStartsWith_JsonNullable() {
    return causeStartsWith;
  }
  
  @JsonProperty(JSON_PROPERTY_CAUSE_STARTS_WITH)
  public void setCauseStartsWith_JsonNullable(JsonNullable<String> causeStartsWith) {
    this.causeStartsWith = causeStartsWith;
  }

  public void setCauseStartsWith(String causeStartsWith) {
    this.causeStartsWith = JsonNullable.<String>of(causeStartsWith);
  }


  public GlobalAlertRuleWhereInput disabled(Boolean disabled) {
    this.disabled = JsonNullable.<Boolean>of(disabled);
    return this;
  }

   /**
   * Get disabled
   * @return disabled
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public Boolean getDisabled() {
        return disabled.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_DISABLED)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<Boolean> getDisabled_JsonNullable() {
    return disabled;
  }
  
  @JsonProperty(JSON_PROPERTY_DISABLED)
  public void setDisabled_JsonNullable(JsonNullable<Boolean> disabled) {
    this.disabled = disabled;
  }

  public void setDisabled(Boolean disabled) {
    this.disabled = JsonNullable.<Boolean>of(disabled);
  }


  public GlobalAlertRuleWhereInput disabledNot(Boolean disabledNot) {
    this.disabledNot = JsonNullable.<Boolean>of(disabledNot);
    return this;
  }

   /**
   * Get disabledNot
   * @return disabledNot
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public Boolean getDisabledNot() {
        return disabledNot.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_DISABLED_NOT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<Boolean> getDisabledNot_JsonNullable() {
    return disabledNot;
  }
  
  @JsonProperty(JSON_PROPERTY_DISABLED_NOT)
  public void setDisabledNot_JsonNullable(JsonNullable<Boolean> disabledNot) {
    this.disabledNot = disabledNot;
  }

  public void setDisabledNot(Boolean disabledNot) {
    this.disabledNot = JsonNullable.<Boolean>of(disabledNot);
  }


  public GlobalAlertRuleWhereInput id(String id) {
    this.id = JsonNullable.<String>of(id);
    return this;
  }

   /**
   * Get id
   * @return id
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getId() {
        return id.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getId_JsonNullable() {
    return id;
  }
  
  @JsonProperty(JSON_PROPERTY_ID)
  public void setId_JsonNullable(JsonNullable<String> id) {
    this.id = id;
  }

  public void setId(String id) {
    this.id = JsonNullable.<String>of(id);
  }


  public GlobalAlertRuleWhereInput idContains(String idContains) {
    this.idContains = JsonNullable.<String>of(idContains);
    return this;
  }

   /**
   * Get idContains
   * @return idContains
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getIdContains() {
        return idContains.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_ID_CONTAINS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getIdContains_JsonNullable() {
    return idContains;
  }
  
  @JsonProperty(JSON_PROPERTY_ID_CONTAINS)
  public void setIdContains_JsonNullable(JsonNullable<String> idContains) {
    this.idContains = idContains;
  }

  public void setIdContains(String idContains) {
    this.idContains = JsonNullable.<String>of(idContains);
  }


  public GlobalAlertRuleWhereInput idEndsWith(String idEndsWith) {
    this.idEndsWith = JsonNullable.<String>of(idEndsWith);
    return this;
  }

   /**
   * Get idEndsWith
   * @return idEndsWith
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getIdEndsWith() {
        return idEndsWith.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_ID_ENDS_WITH)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getIdEndsWith_JsonNullable() {
    return idEndsWith;
  }
  
  @JsonProperty(JSON_PROPERTY_ID_ENDS_WITH)
  public void setIdEndsWith_JsonNullable(JsonNullable<String> idEndsWith) {
    this.idEndsWith = idEndsWith;
  }

  public void setIdEndsWith(String idEndsWith) {
    this.idEndsWith = JsonNullable.<String>of(idEndsWith);
  }


  public GlobalAlertRuleWhereInput idGt(String idGt) {
    this.idGt = JsonNullable.<String>of(idGt);
    return this;
  }

   /**
   * Get idGt
   * @return idGt
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getIdGt() {
        return idGt.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_ID_GT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getIdGt_JsonNullable() {
    return idGt;
  }
  
  @JsonProperty(JSON_PROPERTY_ID_GT)
  public void setIdGt_JsonNullable(JsonNullable<String> idGt) {
    this.idGt = idGt;
  }

  public void setIdGt(String idGt) {
    this.idGt = JsonNullable.<String>of(idGt);
  }


  public GlobalAlertRuleWhereInput idGte(String idGte) {
    this.idGte = JsonNullable.<String>of(idGte);
    return this;
  }

   /**
   * Get idGte
   * @return idGte
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getIdGte() {
        return idGte.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_ID_GTE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getIdGte_JsonNullable() {
    return idGte;
  }
  
  @JsonProperty(JSON_PROPERTY_ID_GTE)
  public void setIdGte_JsonNullable(JsonNullable<String> idGte) {
    this.idGte = idGte;
  }

  public void setIdGte(String idGte) {
    this.idGte = JsonNullable.<String>of(idGte);
  }


  public GlobalAlertRuleWhereInput idIn(List<String> idIn) {
    this.idIn = JsonNullable.<List<String>>of(idIn);
    return this;
  }

  public GlobalAlertRuleWhereInput addIdInItem(String idInItem) {
    if (this.idIn == null || !this.idIn.isPresent()) {
      this.idIn = JsonNullable.<List<String>>of(new ArrayList<>());
    }
    try {
      this.idIn.get().add(idInItem);
    } catch (java.util.NoSuchElementException e) {
      // this can never happen, as we make sure above that the value is present
    }
    return this;
  }

   /**
   * Get idIn
   * @return idIn
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public List<String> getIdIn() {
        return idIn.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_ID_IN)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<List<String>> getIdIn_JsonNullable() {
    return idIn;
  }
  
  @JsonProperty(JSON_PROPERTY_ID_IN)
  public void setIdIn_JsonNullable(JsonNullable<List<String>> idIn) {
    this.idIn = idIn;
  }

  public void setIdIn(List<String> idIn) {
    this.idIn = JsonNullable.<List<String>>of(idIn);
  }


  public GlobalAlertRuleWhereInput idLt(String idLt) {
    this.idLt = JsonNullable.<String>of(idLt);
    return this;
  }

   /**
   * Get idLt
   * @return idLt
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getIdLt() {
        return idLt.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_ID_LT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getIdLt_JsonNullable() {
    return idLt;
  }
  
  @JsonProperty(JSON_PROPERTY_ID_LT)
  public void setIdLt_JsonNullable(JsonNullable<String> idLt) {
    this.idLt = idLt;
  }

  public void setIdLt(String idLt) {
    this.idLt = JsonNullable.<String>of(idLt);
  }


  public GlobalAlertRuleWhereInput idLte(String idLte) {
    this.idLte = JsonNullable.<String>of(idLte);
    return this;
  }

   /**
   * Get idLte
   * @return idLte
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getIdLte() {
        return idLte.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_ID_LTE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getIdLte_JsonNullable() {
    return idLte;
  }
  
  @JsonProperty(JSON_PROPERTY_ID_LTE)
  public void setIdLte_JsonNullable(JsonNullable<String> idLte) {
    this.idLte = idLte;
  }

  public void setIdLte(String idLte) {
    this.idLte = JsonNullable.<String>of(idLte);
  }


  public GlobalAlertRuleWhereInput idNot(String idNot) {
    this.idNot = JsonNullable.<String>of(idNot);
    return this;
  }

   /**
   * Get idNot
   * @return idNot
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getIdNot() {
        return idNot.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_ID_NOT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getIdNot_JsonNullable() {
    return idNot;
  }
  
  @JsonProperty(JSON_PROPERTY_ID_NOT)
  public void setIdNot_JsonNullable(JsonNullable<String> idNot) {
    this.idNot = idNot;
  }

  public void setIdNot(String idNot) {
    this.idNot = JsonNullable.<String>of(idNot);
  }


  public GlobalAlertRuleWhereInput idNotContains(String idNotContains) {
    this.idNotContains = JsonNullable.<String>of(idNotContains);
    return this;
  }

   /**
   * Get idNotContains
   * @return idNotContains
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getIdNotContains() {
        return idNotContains.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_ID_NOT_CONTAINS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getIdNotContains_JsonNullable() {
    return idNotContains;
  }
  
  @JsonProperty(JSON_PROPERTY_ID_NOT_CONTAINS)
  public void setIdNotContains_JsonNullable(JsonNullable<String> idNotContains) {
    this.idNotContains = idNotContains;
  }

  public void setIdNotContains(String idNotContains) {
    this.idNotContains = JsonNullable.<String>of(idNotContains);
  }


  public GlobalAlertRuleWhereInput idNotEndsWith(String idNotEndsWith) {
    this.idNotEndsWith = JsonNullable.<String>of(idNotEndsWith);
    return this;
  }

   /**
   * Get idNotEndsWith
   * @return idNotEndsWith
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getIdNotEndsWith() {
        return idNotEndsWith.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_ID_NOT_ENDS_WITH)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getIdNotEndsWith_JsonNullable() {
    return idNotEndsWith;
  }
  
  @JsonProperty(JSON_PROPERTY_ID_NOT_ENDS_WITH)
  public void setIdNotEndsWith_JsonNullable(JsonNullable<String> idNotEndsWith) {
    this.idNotEndsWith = idNotEndsWith;
  }

  public void setIdNotEndsWith(String idNotEndsWith) {
    this.idNotEndsWith = JsonNullable.<String>of(idNotEndsWith);
  }


  public GlobalAlertRuleWhereInput idNotIn(List<String> idNotIn) {
    this.idNotIn = JsonNullable.<List<String>>of(idNotIn);
    return this;
  }

  public GlobalAlertRuleWhereInput addIdNotInItem(String idNotInItem) {
    if (this.idNotIn == null || !this.idNotIn.isPresent()) {
      this.idNotIn = JsonNullable.<List<String>>of(new ArrayList<>());
    }
    try {
      this.idNotIn.get().add(idNotInItem);
    } catch (java.util.NoSuchElementException e) {
      // this can never happen, as we make sure above that the value is present
    }
    return this;
  }

   /**
   * Get idNotIn
   * @return idNotIn
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public List<String> getIdNotIn() {
        return idNotIn.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_ID_NOT_IN)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<List<String>> getIdNotIn_JsonNullable() {
    return idNotIn;
  }
  
  @JsonProperty(JSON_PROPERTY_ID_NOT_IN)
  public void setIdNotIn_JsonNullable(JsonNullable<List<String>> idNotIn) {
    this.idNotIn = idNotIn;
  }

  public void setIdNotIn(List<String> idNotIn) {
    this.idNotIn = JsonNullable.<List<String>>of(idNotIn);
  }


  public GlobalAlertRuleWhereInput idNotStartsWith(String idNotStartsWith) {
    this.idNotStartsWith = JsonNullable.<String>of(idNotStartsWith);
    return this;
  }

   /**
   * Get idNotStartsWith
   * @return idNotStartsWith
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getIdNotStartsWith() {
        return idNotStartsWith.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_ID_NOT_STARTS_WITH)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getIdNotStartsWith_JsonNullable() {
    return idNotStartsWith;
  }
  
  @JsonProperty(JSON_PROPERTY_ID_NOT_STARTS_WITH)
  public void setIdNotStartsWith_JsonNullable(JsonNullable<String> idNotStartsWith) {
    this.idNotStartsWith = idNotStartsWith;
  }

  public void setIdNotStartsWith(String idNotStartsWith) {
    this.idNotStartsWith = JsonNullable.<String>of(idNotStartsWith);
  }


  public GlobalAlertRuleWhereInput idStartsWith(String idStartsWith) {
    this.idStartsWith = JsonNullable.<String>of(idStartsWith);
    return this;
  }

   /**
   * Get idStartsWith
   * @return idStartsWith
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getIdStartsWith() {
        return idStartsWith.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_ID_STARTS_WITH)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getIdStartsWith_JsonNullable() {
    return idStartsWith;
  }
  
  @JsonProperty(JSON_PROPERTY_ID_STARTS_WITH)
  public void setIdStartsWith_JsonNullable(JsonNullable<String> idStartsWith) {
    this.idStartsWith = idStartsWith;
  }

  public void setIdStartsWith(String idStartsWith) {
    this.idStartsWith = JsonNullable.<String>of(idStartsWith);
  }


  public GlobalAlertRuleWhereInput impact(String impact) {
    this.impact = JsonNullable.<String>of(impact);
    return this;
  }

   /**
   * Get impact
   * @return impact
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getImpact() {
        return impact.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_IMPACT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getImpact_JsonNullable() {
    return impact;
  }
  
  @JsonProperty(JSON_PROPERTY_IMPACT)
  public void setImpact_JsonNullable(JsonNullable<String> impact) {
    this.impact = impact;
  }

  public void setImpact(String impact) {
    this.impact = JsonNullable.<String>of(impact);
  }


  public GlobalAlertRuleWhereInput impactContains(String impactContains) {
    this.impactContains = JsonNullable.<String>of(impactContains);
    return this;
  }

   /**
   * Get impactContains
   * @return impactContains
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getImpactContains() {
        return impactContains.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_IMPACT_CONTAINS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getImpactContains_JsonNullable() {
    return impactContains;
  }
  
  @JsonProperty(JSON_PROPERTY_IMPACT_CONTAINS)
  public void setImpactContains_JsonNullable(JsonNullable<String> impactContains) {
    this.impactContains = impactContains;
  }

  public void setImpactContains(String impactContains) {
    this.impactContains = JsonNullable.<String>of(impactContains);
  }


  public GlobalAlertRuleWhereInput impactEndsWith(String impactEndsWith) {
    this.impactEndsWith = JsonNullable.<String>of(impactEndsWith);
    return this;
  }

   /**
   * Get impactEndsWith
   * @return impactEndsWith
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getImpactEndsWith() {
        return impactEndsWith.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_IMPACT_ENDS_WITH)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getImpactEndsWith_JsonNullable() {
    return impactEndsWith;
  }
  
  @JsonProperty(JSON_PROPERTY_IMPACT_ENDS_WITH)
  public void setImpactEndsWith_JsonNullable(JsonNullable<String> impactEndsWith) {
    this.impactEndsWith = impactEndsWith;
  }

  public void setImpactEndsWith(String impactEndsWith) {
    this.impactEndsWith = JsonNullable.<String>of(impactEndsWith);
  }


  public GlobalAlertRuleWhereInput impactGt(String impactGt) {
    this.impactGt = JsonNullable.<String>of(impactGt);
    return this;
  }

   /**
   * Get impactGt
   * @return impactGt
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getImpactGt() {
        return impactGt.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_IMPACT_GT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getImpactGt_JsonNullable() {
    return impactGt;
  }
  
  @JsonProperty(JSON_PROPERTY_IMPACT_GT)
  public void setImpactGt_JsonNullable(JsonNullable<String> impactGt) {
    this.impactGt = impactGt;
  }

  public void setImpactGt(String impactGt) {
    this.impactGt = JsonNullable.<String>of(impactGt);
  }


  public GlobalAlertRuleWhereInput impactGte(String impactGte) {
    this.impactGte = JsonNullable.<String>of(impactGte);
    return this;
  }

   /**
   * Get impactGte
   * @return impactGte
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getImpactGte() {
        return impactGte.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_IMPACT_GTE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getImpactGte_JsonNullable() {
    return impactGte;
  }
  
  @JsonProperty(JSON_PROPERTY_IMPACT_GTE)
  public void setImpactGte_JsonNullable(JsonNullable<String> impactGte) {
    this.impactGte = impactGte;
  }

  public void setImpactGte(String impactGte) {
    this.impactGte = JsonNullable.<String>of(impactGte);
  }


  public GlobalAlertRuleWhereInput impactIn(List<String> impactIn) {
    this.impactIn = JsonNullable.<List<String>>of(impactIn);
    return this;
  }

  public GlobalAlertRuleWhereInput addImpactInItem(String impactInItem) {
    if (this.impactIn == null || !this.impactIn.isPresent()) {
      this.impactIn = JsonNullable.<List<String>>of(new ArrayList<>());
    }
    try {
      this.impactIn.get().add(impactInItem);
    } catch (java.util.NoSuchElementException e) {
      // this can never happen, as we make sure above that the value is present
    }
    return this;
  }

   /**
   * Get impactIn
   * @return impactIn
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public List<String> getImpactIn() {
        return impactIn.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_IMPACT_IN)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<List<String>> getImpactIn_JsonNullable() {
    return impactIn;
  }
  
  @JsonProperty(JSON_PROPERTY_IMPACT_IN)
  public void setImpactIn_JsonNullable(JsonNullable<List<String>> impactIn) {
    this.impactIn = impactIn;
  }

  public void setImpactIn(List<String> impactIn) {
    this.impactIn = JsonNullable.<List<String>>of(impactIn);
  }


  public GlobalAlertRuleWhereInput impactLt(String impactLt) {
    this.impactLt = JsonNullable.<String>of(impactLt);
    return this;
  }

   /**
   * Get impactLt
   * @return impactLt
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getImpactLt() {
        return impactLt.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_IMPACT_LT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getImpactLt_JsonNullable() {
    return impactLt;
  }
  
  @JsonProperty(JSON_PROPERTY_IMPACT_LT)
  public void setImpactLt_JsonNullable(JsonNullable<String> impactLt) {
    this.impactLt = impactLt;
  }

  public void setImpactLt(String impactLt) {
    this.impactLt = JsonNullable.<String>of(impactLt);
  }


  public GlobalAlertRuleWhereInput impactLte(String impactLte) {
    this.impactLte = JsonNullable.<String>of(impactLte);
    return this;
  }

   /**
   * Get impactLte
   * @return impactLte
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getImpactLte() {
        return impactLte.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_IMPACT_LTE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getImpactLte_JsonNullable() {
    return impactLte;
  }
  
  @JsonProperty(JSON_PROPERTY_IMPACT_LTE)
  public void setImpactLte_JsonNullable(JsonNullable<String> impactLte) {
    this.impactLte = impactLte;
  }

  public void setImpactLte(String impactLte) {
    this.impactLte = JsonNullable.<String>of(impactLte);
  }


  public GlobalAlertRuleWhereInput impactNot(String impactNot) {
    this.impactNot = JsonNullable.<String>of(impactNot);
    return this;
  }

   /**
   * Get impactNot
   * @return impactNot
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getImpactNot() {
        return impactNot.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_IMPACT_NOT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getImpactNot_JsonNullable() {
    return impactNot;
  }
  
  @JsonProperty(JSON_PROPERTY_IMPACT_NOT)
  public void setImpactNot_JsonNullable(JsonNullable<String> impactNot) {
    this.impactNot = impactNot;
  }

  public void setImpactNot(String impactNot) {
    this.impactNot = JsonNullable.<String>of(impactNot);
  }


  public GlobalAlertRuleWhereInput impactNotContains(String impactNotContains) {
    this.impactNotContains = JsonNullable.<String>of(impactNotContains);
    return this;
  }

   /**
   * Get impactNotContains
   * @return impactNotContains
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getImpactNotContains() {
        return impactNotContains.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_IMPACT_NOT_CONTAINS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getImpactNotContains_JsonNullable() {
    return impactNotContains;
  }
  
  @JsonProperty(JSON_PROPERTY_IMPACT_NOT_CONTAINS)
  public void setImpactNotContains_JsonNullable(JsonNullable<String> impactNotContains) {
    this.impactNotContains = impactNotContains;
  }

  public void setImpactNotContains(String impactNotContains) {
    this.impactNotContains = JsonNullable.<String>of(impactNotContains);
  }


  public GlobalAlertRuleWhereInput impactNotEndsWith(String impactNotEndsWith) {
    this.impactNotEndsWith = JsonNullable.<String>of(impactNotEndsWith);
    return this;
  }

   /**
   * Get impactNotEndsWith
   * @return impactNotEndsWith
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getImpactNotEndsWith() {
        return impactNotEndsWith.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_IMPACT_NOT_ENDS_WITH)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getImpactNotEndsWith_JsonNullable() {
    return impactNotEndsWith;
  }
  
  @JsonProperty(JSON_PROPERTY_IMPACT_NOT_ENDS_WITH)
  public void setImpactNotEndsWith_JsonNullable(JsonNullable<String> impactNotEndsWith) {
    this.impactNotEndsWith = impactNotEndsWith;
  }

  public void setImpactNotEndsWith(String impactNotEndsWith) {
    this.impactNotEndsWith = JsonNullable.<String>of(impactNotEndsWith);
  }


  public GlobalAlertRuleWhereInput impactNotIn(List<String> impactNotIn) {
    this.impactNotIn = JsonNullable.<List<String>>of(impactNotIn);
    return this;
  }

  public GlobalAlertRuleWhereInput addImpactNotInItem(String impactNotInItem) {
    if (this.impactNotIn == null || !this.impactNotIn.isPresent()) {
      this.impactNotIn = JsonNullable.<List<String>>of(new ArrayList<>());
    }
    try {
      this.impactNotIn.get().add(impactNotInItem);
    } catch (java.util.NoSuchElementException e) {
      // this can never happen, as we make sure above that the value is present
    }
    return this;
  }

   /**
   * Get impactNotIn
   * @return impactNotIn
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public List<String> getImpactNotIn() {
        return impactNotIn.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_IMPACT_NOT_IN)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<List<String>> getImpactNotIn_JsonNullable() {
    return impactNotIn;
  }
  
  @JsonProperty(JSON_PROPERTY_IMPACT_NOT_IN)
  public void setImpactNotIn_JsonNullable(JsonNullable<List<String>> impactNotIn) {
    this.impactNotIn = impactNotIn;
  }

  public void setImpactNotIn(List<String> impactNotIn) {
    this.impactNotIn = JsonNullable.<List<String>>of(impactNotIn);
  }


  public GlobalAlertRuleWhereInput impactNotStartsWith(String impactNotStartsWith) {
    this.impactNotStartsWith = JsonNullable.<String>of(impactNotStartsWith);
    return this;
  }

   /**
   * Get impactNotStartsWith
   * @return impactNotStartsWith
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getImpactNotStartsWith() {
        return impactNotStartsWith.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_IMPACT_NOT_STARTS_WITH)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getImpactNotStartsWith_JsonNullable() {
    return impactNotStartsWith;
  }
  
  @JsonProperty(JSON_PROPERTY_IMPACT_NOT_STARTS_WITH)
  public void setImpactNotStartsWith_JsonNullable(JsonNullable<String> impactNotStartsWith) {
    this.impactNotStartsWith = impactNotStartsWith;
  }

  public void setImpactNotStartsWith(String impactNotStartsWith) {
    this.impactNotStartsWith = JsonNullable.<String>of(impactNotStartsWith);
  }


  public GlobalAlertRuleWhereInput impactStartsWith(String impactStartsWith) {
    this.impactStartsWith = JsonNullable.<String>of(impactStartsWith);
    return this;
  }

   /**
   * Get impactStartsWith
   * @return impactStartsWith
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getImpactStartsWith() {
        return impactStartsWith.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_IMPACT_STARTS_WITH)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getImpactStartsWith_JsonNullable() {
    return impactStartsWith;
  }
  
  @JsonProperty(JSON_PROPERTY_IMPACT_STARTS_WITH)
  public void setImpactStartsWith_JsonNullable(JsonNullable<String> impactStartsWith) {
    this.impactStartsWith = impactStartsWith;
  }

  public void setImpactStartsWith(String impactStartsWith) {
    this.impactStartsWith = JsonNullable.<String>of(impactStartsWith);
  }


  public GlobalAlertRuleWhereInput message(String message) {
    this.message = JsonNullable.<String>of(message);
    return this;
  }

   /**
   * Get message
   * @return message
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getMessage() {
        return message.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_MESSAGE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getMessage_JsonNullable() {
    return message;
  }
  
  @JsonProperty(JSON_PROPERTY_MESSAGE)
  public void setMessage_JsonNullable(JsonNullable<String> message) {
    this.message = message;
  }

  public void setMessage(String message) {
    this.message = JsonNullable.<String>of(message);
  }


  public GlobalAlertRuleWhereInput messageContains(String messageContains) {
    this.messageContains = JsonNullable.<String>of(messageContains);
    return this;
  }

   /**
   * Get messageContains
   * @return messageContains
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getMessageContains() {
        return messageContains.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_MESSAGE_CONTAINS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getMessageContains_JsonNullable() {
    return messageContains;
  }
  
  @JsonProperty(JSON_PROPERTY_MESSAGE_CONTAINS)
  public void setMessageContains_JsonNullable(JsonNullable<String> messageContains) {
    this.messageContains = messageContains;
  }

  public void setMessageContains(String messageContains) {
    this.messageContains = JsonNullable.<String>of(messageContains);
  }


  public GlobalAlertRuleWhereInput messageEndsWith(String messageEndsWith) {
    this.messageEndsWith = JsonNullable.<String>of(messageEndsWith);
    return this;
  }

   /**
   * Get messageEndsWith
   * @return messageEndsWith
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getMessageEndsWith() {
        return messageEndsWith.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_MESSAGE_ENDS_WITH)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getMessageEndsWith_JsonNullable() {
    return messageEndsWith;
  }
  
  @JsonProperty(JSON_PROPERTY_MESSAGE_ENDS_WITH)
  public void setMessageEndsWith_JsonNullable(JsonNullable<String> messageEndsWith) {
    this.messageEndsWith = messageEndsWith;
  }

  public void setMessageEndsWith(String messageEndsWith) {
    this.messageEndsWith = JsonNullable.<String>of(messageEndsWith);
  }


  public GlobalAlertRuleWhereInput messageGt(String messageGt) {
    this.messageGt = JsonNullable.<String>of(messageGt);
    return this;
  }

   /**
   * Get messageGt
   * @return messageGt
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getMessageGt() {
        return messageGt.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_MESSAGE_GT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getMessageGt_JsonNullable() {
    return messageGt;
  }
  
  @JsonProperty(JSON_PROPERTY_MESSAGE_GT)
  public void setMessageGt_JsonNullable(JsonNullable<String> messageGt) {
    this.messageGt = messageGt;
  }

  public void setMessageGt(String messageGt) {
    this.messageGt = JsonNullable.<String>of(messageGt);
  }


  public GlobalAlertRuleWhereInput messageGte(String messageGte) {
    this.messageGte = JsonNullable.<String>of(messageGte);
    return this;
  }

   /**
   * Get messageGte
   * @return messageGte
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getMessageGte() {
        return messageGte.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_MESSAGE_GTE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getMessageGte_JsonNullable() {
    return messageGte;
  }
  
  @JsonProperty(JSON_PROPERTY_MESSAGE_GTE)
  public void setMessageGte_JsonNullable(JsonNullable<String> messageGte) {
    this.messageGte = messageGte;
  }

  public void setMessageGte(String messageGte) {
    this.messageGte = JsonNullable.<String>of(messageGte);
  }


  public GlobalAlertRuleWhereInput messageIn(List<String> messageIn) {
    this.messageIn = JsonNullable.<List<String>>of(messageIn);
    return this;
  }

  public GlobalAlertRuleWhereInput addMessageInItem(String messageInItem) {
    if (this.messageIn == null || !this.messageIn.isPresent()) {
      this.messageIn = JsonNullable.<List<String>>of(new ArrayList<>());
    }
    try {
      this.messageIn.get().add(messageInItem);
    } catch (java.util.NoSuchElementException e) {
      // this can never happen, as we make sure above that the value is present
    }
    return this;
  }

   /**
   * Get messageIn
   * @return messageIn
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public List<String> getMessageIn() {
        return messageIn.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_MESSAGE_IN)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<List<String>> getMessageIn_JsonNullable() {
    return messageIn;
  }
  
  @JsonProperty(JSON_PROPERTY_MESSAGE_IN)
  public void setMessageIn_JsonNullable(JsonNullable<List<String>> messageIn) {
    this.messageIn = messageIn;
  }

  public void setMessageIn(List<String> messageIn) {
    this.messageIn = JsonNullable.<List<String>>of(messageIn);
  }


  public GlobalAlertRuleWhereInput messageLt(String messageLt) {
    this.messageLt = JsonNullable.<String>of(messageLt);
    return this;
  }

   /**
   * Get messageLt
   * @return messageLt
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getMessageLt() {
        return messageLt.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_MESSAGE_LT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getMessageLt_JsonNullable() {
    return messageLt;
  }
  
  @JsonProperty(JSON_PROPERTY_MESSAGE_LT)
  public void setMessageLt_JsonNullable(JsonNullable<String> messageLt) {
    this.messageLt = messageLt;
  }

  public void setMessageLt(String messageLt) {
    this.messageLt = JsonNullable.<String>of(messageLt);
  }


  public GlobalAlertRuleWhereInput messageLte(String messageLte) {
    this.messageLte = JsonNullable.<String>of(messageLte);
    return this;
  }

   /**
   * Get messageLte
   * @return messageLte
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getMessageLte() {
        return messageLte.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_MESSAGE_LTE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getMessageLte_JsonNullable() {
    return messageLte;
  }
  
  @JsonProperty(JSON_PROPERTY_MESSAGE_LTE)
  public void setMessageLte_JsonNullable(JsonNullable<String> messageLte) {
    this.messageLte = messageLte;
  }

  public void setMessageLte(String messageLte) {
    this.messageLte = JsonNullable.<String>of(messageLte);
  }


  public GlobalAlertRuleWhereInput messageNot(String messageNot) {
    this.messageNot = JsonNullable.<String>of(messageNot);
    return this;
  }

   /**
   * Get messageNot
   * @return messageNot
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getMessageNot() {
        return messageNot.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_MESSAGE_NOT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getMessageNot_JsonNullable() {
    return messageNot;
  }
  
  @JsonProperty(JSON_PROPERTY_MESSAGE_NOT)
  public void setMessageNot_JsonNullable(JsonNullable<String> messageNot) {
    this.messageNot = messageNot;
  }

  public void setMessageNot(String messageNot) {
    this.messageNot = JsonNullable.<String>of(messageNot);
  }


  public GlobalAlertRuleWhereInput messageNotContains(String messageNotContains) {
    this.messageNotContains = JsonNullable.<String>of(messageNotContains);
    return this;
  }

   /**
   * Get messageNotContains
   * @return messageNotContains
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getMessageNotContains() {
        return messageNotContains.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_MESSAGE_NOT_CONTAINS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getMessageNotContains_JsonNullable() {
    return messageNotContains;
  }
  
  @JsonProperty(JSON_PROPERTY_MESSAGE_NOT_CONTAINS)
  public void setMessageNotContains_JsonNullable(JsonNullable<String> messageNotContains) {
    this.messageNotContains = messageNotContains;
  }

  public void setMessageNotContains(String messageNotContains) {
    this.messageNotContains = JsonNullable.<String>of(messageNotContains);
  }


  public GlobalAlertRuleWhereInput messageNotEndsWith(String messageNotEndsWith) {
    this.messageNotEndsWith = JsonNullable.<String>of(messageNotEndsWith);
    return this;
  }

   /**
   * Get messageNotEndsWith
   * @return messageNotEndsWith
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getMessageNotEndsWith() {
        return messageNotEndsWith.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_MESSAGE_NOT_ENDS_WITH)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getMessageNotEndsWith_JsonNullable() {
    return messageNotEndsWith;
  }
  
  @JsonProperty(JSON_PROPERTY_MESSAGE_NOT_ENDS_WITH)
  public void setMessageNotEndsWith_JsonNullable(JsonNullable<String> messageNotEndsWith) {
    this.messageNotEndsWith = messageNotEndsWith;
  }

  public void setMessageNotEndsWith(String messageNotEndsWith) {
    this.messageNotEndsWith = JsonNullable.<String>of(messageNotEndsWith);
  }


  public GlobalAlertRuleWhereInput messageNotIn(List<String> messageNotIn) {
    this.messageNotIn = JsonNullable.<List<String>>of(messageNotIn);
    return this;
  }

  public GlobalAlertRuleWhereInput addMessageNotInItem(String messageNotInItem) {
    if (this.messageNotIn == null || !this.messageNotIn.isPresent()) {
      this.messageNotIn = JsonNullable.<List<String>>of(new ArrayList<>());
    }
    try {
      this.messageNotIn.get().add(messageNotInItem);
    } catch (java.util.NoSuchElementException e) {
      // this can never happen, as we make sure above that the value is present
    }
    return this;
  }

   /**
   * Get messageNotIn
   * @return messageNotIn
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public List<String> getMessageNotIn() {
        return messageNotIn.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_MESSAGE_NOT_IN)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<List<String>> getMessageNotIn_JsonNullable() {
    return messageNotIn;
  }
  
  @JsonProperty(JSON_PROPERTY_MESSAGE_NOT_IN)
  public void setMessageNotIn_JsonNullable(JsonNullable<List<String>> messageNotIn) {
    this.messageNotIn = messageNotIn;
  }

  public void setMessageNotIn(List<String> messageNotIn) {
    this.messageNotIn = JsonNullable.<List<String>>of(messageNotIn);
  }


  public GlobalAlertRuleWhereInput messageNotStartsWith(String messageNotStartsWith) {
    this.messageNotStartsWith = JsonNullable.<String>of(messageNotStartsWith);
    return this;
  }

   /**
   * Get messageNotStartsWith
   * @return messageNotStartsWith
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getMessageNotStartsWith() {
        return messageNotStartsWith.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_MESSAGE_NOT_STARTS_WITH)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getMessageNotStartsWith_JsonNullable() {
    return messageNotStartsWith;
  }
  
  @JsonProperty(JSON_PROPERTY_MESSAGE_NOT_STARTS_WITH)
  public void setMessageNotStartsWith_JsonNullable(JsonNullable<String> messageNotStartsWith) {
    this.messageNotStartsWith = messageNotStartsWith;
  }

  public void setMessageNotStartsWith(String messageNotStartsWith) {
    this.messageNotStartsWith = JsonNullable.<String>of(messageNotStartsWith);
  }


  public GlobalAlertRuleWhereInput messageStartsWith(String messageStartsWith) {
    this.messageStartsWith = JsonNullable.<String>of(messageStartsWith);
    return this;
  }

   /**
   * Get messageStartsWith
   * @return messageStartsWith
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getMessageStartsWith() {
        return messageStartsWith.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_MESSAGE_STARTS_WITH)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getMessageStartsWith_JsonNullable() {
    return messageStartsWith;
  }
  
  @JsonProperty(JSON_PROPERTY_MESSAGE_STARTS_WITH)
  public void setMessageStartsWith_JsonNullable(JsonNullable<String> messageStartsWith) {
    this.messageStartsWith = messageStartsWith;
  }

  public void setMessageStartsWith(String messageStartsWith) {
    this.messageStartsWith = JsonNullable.<String>of(messageStartsWith);
  }


  public GlobalAlertRuleWhereInput name(String name) {
    this.name = JsonNullable.<String>of(name);
    return this;
  }

   /**
   * Get name
   * @return name
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getName() {
        return name.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getName_JsonNullable() {
    return name;
  }
  
  @JsonProperty(JSON_PROPERTY_NAME)
  public void setName_JsonNullable(JsonNullable<String> name) {
    this.name = name;
  }

  public void setName(String name) {
    this.name = JsonNullable.<String>of(name);
  }


  public GlobalAlertRuleWhereInput nameContains(String nameContains) {
    this.nameContains = JsonNullable.<String>of(nameContains);
    return this;
  }

   /**
   * Get nameContains
   * @return nameContains
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getNameContains() {
        return nameContains.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_NAME_CONTAINS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getNameContains_JsonNullable() {
    return nameContains;
  }
  
  @JsonProperty(JSON_PROPERTY_NAME_CONTAINS)
  public void setNameContains_JsonNullable(JsonNullable<String> nameContains) {
    this.nameContains = nameContains;
  }

  public void setNameContains(String nameContains) {
    this.nameContains = JsonNullable.<String>of(nameContains);
  }


  public GlobalAlertRuleWhereInput nameEndsWith(String nameEndsWith) {
    this.nameEndsWith = JsonNullable.<String>of(nameEndsWith);
    return this;
  }

   /**
   * Get nameEndsWith
   * @return nameEndsWith
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getNameEndsWith() {
        return nameEndsWith.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_NAME_ENDS_WITH)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getNameEndsWith_JsonNullable() {
    return nameEndsWith;
  }
  
  @JsonProperty(JSON_PROPERTY_NAME_ENDS_WITH)
  public void setNameEndsWith_JsonNullable(JsonNullable<String> nameEndsWith) {
    this.nameEndsWith = nameEndsWith;
  }

  public void setNameEndsWith(String nameEndsWith) {
    this.nameEndsWith = JsonNullable.<String>of(nameEndsWith);
  }


  public GlobalAlertRuleWhereInput nameGt(String nameGt) {
    this.nameGt = JsonNullable.<String>of(nameGt);
    return this;
  }

   /**
   * Get nameGt
   * @return nameGt
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getNameGt() {
        return nameGt.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_NAME_GT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getNameGt_JsonNullable() {
    return nameGt;
  }
  
  @JsonProperty(JSON_PROPERTY_NAME_GT)
  public void setNameGt_JsonNullable(JsonNullable<String> nameGt) {
    this.nameGt = nameGt;
  }

  public void setNameGt(String nameGt) {
    this.nameGt = JsonNullable.<String>of(nameGt);
  }


  public GlobalAlertRuleWhereInput nameGte(String nameGte) {
    this.nameGte = JsonNullable.<String>of(nameGte);
    return this;
  }

   /**
   * Get nameGte
   * @return nameGte
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getNameGte() {
        return nameGte.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_NAME_GTE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getNameGte_JsonNullable() {
    return nameGte;
  }
  
  @JsonProperty(JSON_PROPERTY_NAME_GTE)
  public void setNameGte_JsonNullable(JsonNullable<String> nameGte) {
    this.nameGte = nameGte;
  }

  public void setNameGte(String nameGte) {
    this.nameGte = JsonNullable.<String>of(nameGte);
  }


  public GlobalAlertRuleWhereInput nameIn(List<String> nameIn) {
    this.nameIn = JsonNullable.<List<String>>of(nameIn);
    return this;
  }

  public GlobalAlertRuleWhereInput addNameInItem(String nameInItem) {
    if (this.nameIn == null || !this.nameIn.isPresent()) {
      this.nameIn = JsonNullable.<List<String>>of(new ArrayList<>());
    }
    try {
      this.nameIn.get().add(nameInItem);
    } catch (java.util.NoSuchElementException e) {
      // this can never happen, as we make sure above that the value is present
    }
    return this;
  }

   /**
   * Get nameIn
   * @return nameIn
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public List<String> getNameIn() {
        return nameIn.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_NAME_IN)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<List<String>> getNameIn_JsonNullable() {
    return nameIn;
  }
  
  @JsonProperty(JSON_PROPERTY_NAME_IN)
  public void setNameIn_JsonNullable(JsonNullable<List<String>> nameIn) {
    this.nameIn = nameIn;
  }

  public void setNameIn(List<String> nameIn) {
    this.nameIn = JsonNullable.<List<String>>of(nameIn);
  }


  public GlobalAlertRuleWhereInput nameLt(String nameLt) {
    this.nameLt = JsonNullable.<String>of(nameLt);
    return this;
  }

   /**
   * Get nameLt
   * @return nameLt
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getNameLt() {
        return nameLt.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_NAME_LT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getNameLt_JsonNullable() {
    return nameLt;
  }
  
  @JsonProperty(JSON_PROPERTY_NAME_LT)
  public void setNameLt_JsonNullable(JsonNullable<String> nameLt) {
    this.nameLt = nameLt;
  }

  public void setNameLt(String nameLt) {
    this.nameLt = JsonNullable.<String>of(nameLt);
  }


  public GlobalAlertRuleWhereInput nameLte(String nameLte) {
    this.nameLte = JsonNullable.<String>of(nameLte);
    return this;
  }

   /**
   * Get nameLte
   * @return nameLte
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getNameLte() {
        return nameLte.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_NAME_LTE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getNameLte_JsonNullable() {
    return nameLte;
  }
  
  @JsonProperty(JSON_PROPERTY_NAME_LTE)
  public void setNameLte_JsonNullable(JsonNullable<String> nameLte) {
    this.nameLte = nameLte;
  }

  public void setNameLte(String nameLte) {
    this.nameLte = JsonNullable.<String>of(nameLte);
  }


  public GlobalAlertRuleWhereInput nameNot(String nameNot) {
    this.nameNot = JsonNullable.<String>of(nameNot);
    return this;
  }

   /**
   * Get nameNot
   * @return nameNot
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getNameNot() {
        return nameNot.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_NAME_NOT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getNameNot_JsonNullable() {
    return nameNot;
  }
  
  @JsonProperty(JSON_PROPERTY_NAME_NOT)
  public void setNameNot_JsonNullable(JsonNullable<String> nameNot) {
    this.nameNot = nameNot;
  }

  public void setNameNot(String nameNot) {
    this.nameNot = JsonNullable.<String>of(nameNot);
  }


  public GlobalAlertRuleWhereInput nameNotContains(String nameNotContains) {
    this.nameNotContains = JsonNullable.<String>of(nameNotContains);
    return this;
  }

   /**
   * Get nameNotContains
   * @return nameNotContains
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getNameNotContains() {
        return nameNotContains.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_NAME_NOT_CONTAINS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getNameNotContains_JsonNullable() {
    return nameNotContains;
  }
  
  @JsonProperty(JSON_PROPERTY_NAME_NOT_CONTAINS)
  public void setNameNotContains_JsonNullable(JsonNullable<String> nameNotContains) {
    this.nameNotContains = nameNotContains;
  }

  public void setNameNotContains(String nameNotContains) {
    this.nameNotContains = JsonNullable.<String>of(nameNotContains);
  }


  public GlobalAlertRuleWhereInput nameNotEndsWith(String nameNotEndsWith) {
    this.nameNotEndsWith = JsonNullable.<String>of(nameNotEndsWith);
    return this;
  }

   /**
   * Get nameNotEndsWith
   * @return nameNotEndsWith
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getNameNotEndsWith() {
        return nameNotEndsWith.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_NAME_NOT_ENDS_WITH)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getNameNotEndsWith_JsonNullable() {
    return nameNotEndsWith;
  }
  
  @JsonProperty(JSON_PROPERTY_NAME_NOT_ENDS_WITH)
  public void setNameNotEndsWith_JsonNullable(JsonNullable<String> nameNotEndsWith) {
    this.nameNotEndsWith = nameNotEndsWith;
  }

  public void setNameNotEndsWith(String nameNotEndsWith) {
    this.nameNotEndsWith = JsonNullable.<String>of(nameNotEndsWith);
  }


  public GlobalAlertRuleWhereInput nameNotIn(List<String> nameNotIn) {
    this.nameNotIn = JsonNullable.<List<String>>of(nameNotIn);
    return this;
  }

  public GlobalAlertRuleWhereInput addNameNotInItem(String nameNotInItem) {
    if (this.nameNotIn == null || !this.nameNotIn.isPresent()) {
      this.nameNotIn = JsonNullable.<List<String>>of(new ArrayList<>());
    }
    try {
      this.nameNotIn.get().add(nameNotInItem);
    } catch (java.util.NoSuchElementException e) {
      // this can never happen, as we make sure above that the value is present
    }
    return this;
  }

   /**
   * Get nameNotIn
   * @return nameNotIn
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public List<String> getNameNotIn() {
        return nameNotIn.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_NAME_NOT_IN)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<List<String>> getNameNotIn_JsonNullable() {
    return nameNotIn;
  }
  
  @JsonProperty(JSON_PROPERTY_NAME_NOT_IN)
  public void setNameNotIn_JsonNullable(JsonNullable<List<String>> nameNotIn) {
    this.nameNotIn = nameNotIn;
  }

  public void setNameNotIn(List<String> nameNotIn) {
    this.nameNotIn = JsonNullable.<List<String>>of(nameNotIn);
  }


  public GlobalAlertRuleWhereInput nameNotStartsWith(String nameNotStartsWith) {
    this.nameNotStartsWith = JsonNullable.<String>of(nameNotStartsWith);
    return this;
  }

   /**
   * Get nameNotStartsWith
   * @return nameNotStartsWith
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getNameNotStartsWith() {
        return nameNotStartsWith.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_NAME_NOT_STARTS_WITH)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getNameNotStartsWith_JsonNullable() {
    return nameNotStartsWith;
  }
  
  @JsonProperty(JSON_PROPERTY_NAME_NOT_STARTS_WITH)
  public void setNameNotStartsWith_JsonNullable(JsonNullable<String> nameNotStartsWith) {
    this.nameNotStartsWith = nameNotStartsWith;
  }

  public void setNameNotStartsWith(String nameNotStartsWith) {
    this.nameNotStartsWith = JsonNullable.<String>of(nameNotStartsWith);
  }


  public GlobalAlertRuleWhereInput nameStartsWith(String nameStartsWith) {
    this.nameStartsWith = JsonNullable.<String>of(nameStartsWith);
    return this;
  }

   /**
   * Get nameStartsWith
   * @return nameStartsWith
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getNameStartsWith() {
        return nameStartsWith.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_NAME_STARTS_WITH)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getNameStartsWith_JsonNullable() {
    return nameStartsWith;
  }
  
  @JsonProperty(JSON_PROPERTY_NAME_STARTS_WITH)
  public void setNameStartsWith_JsonNullable(JsonNullable<String> nameStartsWith) {
    this.nameStartsWith = nameStartsWith;
  }

  public void setNameStartsWith(String nameStartsWith) {
    this.nameStartsWith = JsonNullable.<String>of(nameStartsWith);
  }


  public GlobalAlertRuleWhereInput NOT(List<GlobalAlertRuleWhereInput> NOT) {
    this.NOT = JsonNullable.<List<GlobalAlertRuleWhereInput>>of(NOT);
    return this;
  }

  public GlobalAlertRuleWhereInput addNOTItem(GlobalAlertRuleWhereInput NOTItem) {
    if (this.NOT == null || !this.NOT.isPresent()) {
      this.NOT = JsonNullable.<List<GlobalAlertRuleWhereInput>>of(new ArrayList<>());
    }
    try {
      this.NOT.get().add(NOTItem);
    } catch (java.util.NoSuchElementException e) {
      // this can never happen, as we make sure above that the value is present
    }
    return this;
  }

   /**
   * Get NOT
   * @return NOT
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public List<GlobalAlertRuleWhereInput> getNOT() {
        return NOT.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_N_O_T)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<List<GlobalAlertRuleWhereInput>> getNOT_JsonNullable() {
    return NOT;
  }
  
  @JsonProperty(JSON_PROPERTY_N_O_T)
  public void setNOT_JsonNullable(JsonNullable<List<GlobalAlertRuleWhereInput>> NOT) {
    this.NOT = NOT;
  }

  public void setNOT(List<GlobalAlertRuleWhereInput> NOT) {
    this.NOT = JsonNullable.<List<GlobalAlertRuleWhereInput>>of(NOT);
  }


  public GlobalAlertRuleWhereInput _object(AlertRuleObject _object) {
    this._object = JsonNullable.<AlertRuleObject>of(_object);
    return this;
  }

   /**
   * Get _object
   * @return _object
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public AlertRuleObject getObject() {
        return _object.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_OBJECT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<AlertRuleObject> getObject_JsonNullable() {
    return _object;
  }
  
  @JsonProperty(JSON_PROPERTY_OBJECT)
  public void setObject_JsonNullable(JsonNullable<AlertRuleObject> _object) {
    this._object = _object;
  }

  public void setObject(AlertRuleObject _object) {
    this._object = JsonNullable.<AlertRuleObject>of(_object);
  }


  public GlobalAlertRuleWhereInput objectIn(List<AlertRuleObject> objectIn) {
    this.objectIn = JsonNullable.<List<AlertRuleObject>>of(objectIn);
    return this;
  }

  public GlobalAlertRuleWhereInput addObjectInItem(AlertRuleObject objectInItem) {
    if (this.objectIn == null || !this.objectIn.isPresent()) {
      this.objectIn = JsonNullable.<List<AlertRuleObject>>of(new ArrayList<>());
    }
    try {
      this.objectIn.get().add(objectInItem);
    } catch (java.util.NoSuchElementException e) {
      // this can never happen, as we make sure above that the value is present
    }
    return this;
  }

   /**
   * Get objectIn
   * @return objectIn
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public List<AlertRuleObject> getObjectIn() {
        return objectIn.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_OBJECT_IN)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<List<AlertRuleObject>> getObjectIn_JsonNullable() {
    return objectIn;
  }
  
  @JsonProperty(JSON_PROPERTY_OBJECT_IN)
  public void setObjectIn_JsonNullable(JsonNullable<List<AlertRuleObject>> objectIn) {
    this.objectIn = objectIn;
  }

  public void setObjectIn(List<AlertRuleObject> objectIn) {
    this.objectIn = JsonNullable.<List<AlertRuleObject>>of(objectIn);
  }


  public GlobalAlertRuleWhereInput objectNot(AlertRuleObject objectNot) {
    this.objectNot = JsonNullable.<AlertRuleObject>of(objectNot);
    return this;
  }

   /**
   * Get objectNot
   * @return objectNot
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public AlertRuleObject getObjectNot() {
        return objectNot.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_OBJECT_NOT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<AlertRuleObject> getObjectNot_JsonNullable() {
    return objectNot;
  }
  
  @JsonProperty(JSON_PROPERTY_OBJECT_NOT)
  public void setObjectNot_JsonNullable(JsonNullable<AlertRuleObject> objectNot) {
    this.objectNot = objectNot;
  }

  public void setObjectNot(AlertRuleObject objectNot) {
    this.objectNot = JsonNullable.<AlertRuleObject>of(objectNot);
  }


  public GlobalAlertRuleWhereInput objectNotIn(List<AlertRuleObject> objectNotIn) {
    this.objectNotIn = JsonNullable.<List<AlertRuleObject>>of(objectNotIn);
    return this;
  }

  public GlobalAlertRuleWhereInput addObjectNotInItem(AlertRuleObject objectNotInItem) {
    if (this.objectNotIn == null || !this.objectNotIn.isPresent()) {
      this.objectNotIn = JsonNullable.<List<AlertRuleObject>>of(new ArrayList<>());
    }
    try {
      this.objectNotIn.get().add(objectNotInItem);
    } catch (java.util.NoSuchElementException e) {
      // this can never happen, as we make sure above that the value is present
    }
    return this;
  }

   /**
   * Get objectNotIn
   * @return objectNotIn
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public List<AlertRuleObject> getObjectNotIn() {
        return objectNotIn.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_OBJECT_NOT_IN)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<List<AlertRuleObject>> getObjectNotIn_JsonNullable() {
    return objectNotIn;
  }
  
  @JsonProperty(JSON_PROPERTY_OBJECT_NOT_IN)
  public void setObjectNotIn_JsonNullable(JsonNullable<List<AlertRuleObject>> objectNotIn) {
    this.objectNotIn = objectNotIn;
  }

  public void setObjectNotIn(List<AlertRuleObject> objectNotIn) {
    this.objectNotIn = JsonNullable.<List<AlertRuleObject>>of(objectNotIn);
  }


  public GlobalAlertRuleWhereInput operator(String operator) {
    this.operator = JsonNullable.<String>of(operator);
    return this;
  }

   /**
   * Get operator
   * @return operator
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getOperator() {
        return operator.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_OPERATOR)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getOperator_JsonNullable() {
    return operator;
  }
  
  @JsonProperty(JSON_PROPERTY_OPERATOR)
  public void setOperator_JsonNullable(JsonNullable<String> operator) {
    this.operator = operator;
  }

  public void setOperator(String operator) {
    this.operator = JsonNullable.<String>of(operator);
  }


  public GlobalAlertRuleWhereInput operatorContains(String operatorContains) {
    this.operatorContains = JsonNullable.<String>of(operatorContains);
    return this;
  }

   /**
   * Get operatorContains
   * @return operatorContains
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getOperatorContains() {
        return operatorContains.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_OPERATOR_CONTAINS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getOperatorContains_JsonNullable() {
    return operatorContains;
  }
  
  @JsonProperty(JSON_PROPERTY_OPERATOR_CONTAINS)
  public void setOperatorContains_JsonNullable(JsonNullable<String> operatorContains) {
    this.operatorContains = operatorContains;
  }

  public void setOperatorContains(String operatorContains) {
    this.operatorContains = JsonNullable.<String>of(operatorContains);
  }


  public GlobalAlertRuleWhereInput operatorEndsWith(String operatorEndsWith) {
    this.operatorEndsWith = JsonNullable.<String>of(operatorEndsWith);
    return this;
  }

   /**
   * Get operatorEndsWith
   * @return operatorEndsWith
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getOperatorEndsWith() {
        return operatorEndsWith.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_OPERATOR_ENDS_WITH)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getOperatorEndsWith_JsonNullable() {
    return operatorEndsWith;
  }
  
  @JsonProperty(JSON_PROPERTY_OPERATOR_ENDS_WITH)
  public void setOperatorEndsWith_JsonNullable(JsonNullable<String> operatorEndsWith) {
    this.operatorEndsWith = operatorEndsWith;
  }

  public void setOperatorEndsWith(String operatorEndsWith) {
    this.operatorEndsWith = JsonNullable.<String>of(operatorEndsWith);
  }


  public GlobalAlertRuleWhereInput operatorGt(String operatorGt) {
    this.operatorGt = JsonNullable.<String>of(operatorGt);
    return this;
  }

   /**
   * Get operatorGt
   * @return operatorGt
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getOperatorGt() {
        return operatorGt.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_OPERATOR_GT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getOperatorGt_JsonNullable() {
    return operatorGt;
  }
  
  @JsonProperty(JSON_PROPERTY_OPERATOR_GT)
  public void setOperatorGt_JsonNullable(JsonNullable<String> operatorGt) {
    this.operatorGt = operatorGt;
  }

  public void setOperatorGt(String operatorGt) {
    this.operatorGt = JsonNullable.<String>of(operatorGt);
  }


  public GlobalAlertRuleWhereInput operatorGte(String operatorGte) {
    this.operatorGte = JsonNullable.<String>of(operatorGte);
    return this;
  }

   /**
   * Get operatorGte
   * @return operatorGte
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getOperatorGte() {
        return operatorGte.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_OPERATOR_GTE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getOperatorGte_JsonNullable() {
    return operatorGte;
  }
  
  @JsonProperty(JSON_PROPERTY_OPERATOR_GTE)
  public void setOperatorGte_JsonNullable(JsonNullable<String> operatorGte) {
    this.operatorGte = operatorGte;
  }

  public void setOperatorGte(String operatorGte) {
    this.operatorGte = JsonNullable.<String>of(operatorGte);
  }


  public GlobalAlertRuleWhereInput operatorIn(List<String> operatorIn) {
    this.operatorIn = JsonNullable.<List<String>>of(operatorIn);
    return this;
  }

  public GlobalAlertRuleWhereInput addOperatorInItem(String operatorInItem) {
    if (this.operatorIn == null || !this.operatorIn.isPresent()) {
      this.operatorIn = JsonNullable.<List<String>>of(new ArrayList<>());
    }
    try {
      this.operatorIn.get().add(operatorInItem);
    } catch (java.util.NoSuchElementException e) {
      // this can never happen, as we make sure above that the value is present
    }
    return this;
  }

   /**
   * Get operatorIn
   * @return operatorIn
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public List<String> getOperatorIn() {
        return operatorIn.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_OPERATOR_IN)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<List<String>> getOperatorIn_JsonNullable() {
    return operatorIn;
  }
  
  @JsonProperty(JSON_PROPERTY_OPERATOR_IN)
  public void setOperatorIn_JsonNullable(JsonNullable<List<String>> operatorIn) {
    this.operatorIn = operatorIn;
  }

  public void setOperatorIn(List<String> operatorIn) {
    this.operatorIn = JsonNullable.<List<String>>of(operatorIn);
  }


  public GlobalAlertRuleWhereInput operatorLt(String operatorLt) {
    this.operatorLt = JsonNullable.<String>of(operatorLt);
    return this;
  }

   /**
   * Get operatorLt
   * @return operatorLt
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getOperatorLt() {
        return operatorLt.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_OPERATOR_LT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getOperatorLt_JsonNullable() {
    return operatorLt;
  }
  
  @JsonProperty(JSON_PROPERTY_OPERATOR_LT)
  public void setOperatorLt_JsonNullable(JsonNullable<String> operatorLt) {
    this.operatorLt = operatorLt;
  }

  public void setOperatorLt(String operatorLt) {
    this.operatorLt = JsonNullable.<String>of(operatorLt);
  }


  public GlobalAlertRuleWhereInput operatorLte(String operatorLte) {
    this.operatorLte = JsonNullable.<String>of(operatorLte);
    return this;
  }

   /**
   * Get operatorLte
   * @return operatorLte
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getOperatorLte() {
        return operatorLte.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_OPERATOR_LTE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getOperatorLte_JsonNullable() {
    return operatorLte;
  }
  
  @JsonProperty(JSON_PROPERTY_OPERATOR_LTE)
  public void setOperatorLte_JsonNullable(JsonNullable<String> operatorLte) {
    this.operatorLte = operatorLte;
  }

  public void setOperatorLte(String operatorLte) {
    this.operatorLte = JsonNullable.<String>of(operatorLte);
  }


  public GlobalAlertRuleWhereInput operatorNot(String operatorNot) {
    this.operatorNot = JsonNullable.<String>of(operatorNot);
    return this;
  }

   /**
   * Get operatorNot
   * @return operatorNot
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getOperatorNot() {
        return operatorNot.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_OPERATOR_NOT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getOperatorNot_JsonNullable() {
    return operatorNot;
  }
  
  @JsonProperty(JSON_PROPERTY_OPERATOR_NOT)
  public void setOperatorNot_JsonNullable(JsonNullable<String> operatorNot) {
    this.operatorNot = operatorNot;
  }

  public void setOperatorNot(String operatorNot) {
    this.operatorNot = JsonNullable.<String>of(operatorNot);
  }


  public GlobalAlertRuleWhereInput operatorNotContains(String operatorNotContains) {
    this.operatorNotContains = JsonNullable.<String>of(operatorNotContains);
    return this;
  }

   /**
   * Get operatorNotContains
   * @return operatorNotContains
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getOperatorNotContains() {
        return operatorNotContains.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_OPERATOR_NOT_CONTAINS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getOperatorNotContains_JsonNullable() {
    return operatorNotContains;
  }
  
  @JsonProperty(JSON_PROPERTY_OPERATOR_NOT_CONTAINS)
  public void setOperatorNotContains_JsonNullable(JsonNullable<String> operatorNotContains) {
    this.operatorNotContains = operatorNotContains;
  }

  public void setOperatorNotContains(String operatorNotContains) {
    this.operatorNotContains = JsonNullable.<String>of(operatorNotContains);
  }


  public GlobalAlertRuleWhereInput operatorNotEndsWith(String operatorNotEndsWith) {
    this.operatorNotEndsWith = JsonNullable.<String>of(operatorNotEndsWith);
    return this;
  }

   /**
   * Get operatorNotEndsWith
   * @return operatorNotEndsWith
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getOperatorNotEndsWith() {
        return operatorNotEndsWith.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_OPERATOR_NOT_ENDS_WITH)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getOperatorNotEndsWith_JsonNullable() {
    return operatorNotEndsWith;
  }
  
  @JsonProperty(JSON_PROPERTY_OPERATOR_NOT_ENDS_WITH)
  public void setOperatorNotEndsWith_JsonNullable(JsonNullable<String> operatorNotEndsWith) {
    this.operatorNotEndsWith = operatorNotEndsWith;
  }

  public void setOperatorNotEndsWith(String operatorNotEndsWith) {
    this.operatorNotEndsWith = JsonNullable.<String>of(operatorNotEndsWith);
  }


  public GlobalAlertRuleWhereInput operatorNotIn(List<String> operatorNotIn) {
    this.operatorNotIn = JsonNullable.<List<String>>of(operatorNotIn);
    return this;
  }

  public GlobalAlertRuleWhereInput addOperatorNotInItem(String operatorNotInItem) {
    if (this.operatorNotIn == null || !this.operatorNotIn.isPresent()) {
      this.operatorNotIn = JsonNullable.<List<String>>of(new ArrayList<>());
    }
    try {
      this.operatorNotIn.get().add(operatorNotInItem);
    } catch (java.util.NoSuchElementException e) {
      // this can never happen, as we make sure above that the value is present
    }
    return this;
  }

   /**
   * Get operatorNotIn
   * @return operatorNotIn
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public List<String> getOperatorNotIn() {
        return operatorNotIn.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_OPERATOR_NOT_IN)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<List<String>> getOperatorNotIn_JsonNullable() {
    return operatorNotIn;
  }
  
  @JsonProperty(JSON_PROPERTY_OPERATOR_NOT_IN)
  public void setOperatorNotIn_JsonNullable(JsonNullable<List<String>> operatorNotIn) {
    this.operatorNotIn = operatorNotIn;
  }

  public void setOperatorNotIn(List<String> operatorNotIn) {
    this.operatorNotIn = JsonNullable.<List<String>>of(operatorNotIn);
  }


  public GlobalAlertRuleWhereInput operatorNotStartsWith(String operatorNotStartsWith) {
    this.operatorNotStartsWith = JsonNullable.<String>of(operatorNotStartsWith);
    return this;
  }

   /**
   * Get operatorNotStartsWith
   * @return operatorNotStartsWith
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getOperatorNotStartsWith() {
        return operatorNotStartsWith.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_OPERATOR_NOT_STARTS_WITH)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getOperatorNotStartsWith_JsonNullable() {
    return operatorNotStartsWith;
  }
  
  @JsonProperty(JSON_PROPERTY_OPERATOR_NOT_STARTS_WITH)
  public void setOperatorNotStartsWith_JsonNullable(JsonNullable<String> operatorNotStartsWith) {
    this.operatorNotStartsWith = operatorNotStartsWith;
  }

  public void setOperatorNotStartsWith(String operatorNotStartsWith) {
    this.operatorNotStartsWith = JsonNullable.<String>of(operatorNotStartsWith);
  }


  public GlobalAlertRuleWhereInput operatorStartsWith(String operatorStartsWith) {
    this.operatorStartsWith = JsonNullable.<String>of(operatorStartsWith);
    return this;
  }

   /**
   * Get operatorStartsWith
   * @return operatorStartsWith
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getOperatorStartsWith() {
        return operatorStartsWith.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_OPERATOR_STARTS_WITH)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getOperatorStartsWith_JsonNullable() {
    return operatorStartsWith;
  }
  
  @JsonProperty(JSON_PROPERTY_OPERATOR_STARTS_WITH)
  public void setOperatorStartsWith_JsonNullable(JsonNullable<String> operatorStartsWith) {
    this.operatorStartsWith = operatorStartsWith;
  }

  public void setOperatorStartsWith(String operatorStartsWith) {
    this.operatorStartsWith = JsonNullable.<String>of(operatorStartsWith);
  }


  public GlobalAlertRuleWhereInput OR(List<GlobalAlertRuleWhereInput> OR) {
    this.OR = JsonNullable.<List<GlobalAlertRuleWhereInput>>of(OR);
    return this;
  }

  public GlobalAlertRuleWhereInput addORItem(GlobalAlertRuleWhereInput ORItem) {
    if (this.OR == null || !this.OR.isPresent()) {
      this.OR = JsonNullable.<List<GlobalAlertRuleWhereInput>>of(new ArrayList<>());
    }
    try {
      this.OR.get().add(ORItem);
    } catch (java.util.NoSuchElementException e) {
      // this can never happen, as we make sure above that the value is present
    }
    return this;
  }

   /**
   * Get OR
   * @return OR
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public List<GlobalAlertRuleWhereInput> getOR() {
        return OR.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_O_R)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<List<GlobalAlertRuleWhereInput>> getOR_JsonNullable() {
    return OR;
  }
  
  @JsonProperty(JSON_PROPERTY_O_R)
  public void setOR_JsonNullable(JsonNullable<List<GlobalAlertRuleWhereInput>> OR) {
    this.OR = OR;
  }

  public void setOR(List<GlobalAlertRuleWhereInput> OR) {
    this.OR = JsonNullable.<List<GlobalAlertRuleWhereInput>>of(OR);
  }


  public GlobalAlertRuleWhereInput solution(String solution) {
    this.solution = JsonNullable.<String>of(solution);
    return this;
  }

   /**
   * Get solution
   * @return solution
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getSolution() {
        return solution.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_SOLUTION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getSolution_JsonNullable() {
    return solution;
  }
  
  @JsonProperty(JSON_PROPERTY_SOLUTION)
  public void setSolution_JsonNullable(JsonNullable<String> solution) {
    this.solution = solution;
  }

  public void setSolution(String solution) {
    this.solution = JsonNullable.<String>of(solution);
  }


  public GlobalAlertRuleWhereInput solutionContains(String solutionContains) {
    this.solutionContains = JsonNullable.<String>of(solutionContains);
    return this;
  }

   /**
   * Get solutionContains
   * @return solutionContains
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getSolutionContains() {
        return solutionContains.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_SOLUTION_CONTAINS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getSolutionContains_JsonNullable() {
    return solutionContains;
  }
  
  @JsonProperty(JSON_PROPERTY_SOLUTION_CONTAINS)
  public void setSolutionContains_JsonNullable(JsonNullable<String> solutionContains) {
    this.solutionContains = solutionContains;
  }

  public void setSolutionContains(String solutionContains) {
    this.solutionContains = JsonNullable.<String>of(solutionContains);
  }


  public GlobalAlertRuleWhereInput solutionEndsWith(String solutionEndsWith) {
    this.solutionEndsWith = JsonNullable.<String>of(solutionEndsWith);
    return this;
  }

   /**
   * Get solutionEndsWith
   * @return solutionEndsWith
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getSolutionEndsWith() {
        return solutionEndsWith.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_SOLUTION_ENDS_WITH)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getSolutionEndsWith_JsonNullable() {
    return solutionEndsWith;
  }
  
  @JsonProperty(JSON_PROPERTY_SOLUTION_ENDS_WITH)
  public void setSolutionEndsWith_JsonNullable(JsonNullable<String> solutionEndsWith) {
    this.solutionEndsWith = solutionEndsWith;
  }

  public void setSolutionEndsWith(String solutionEndsWith) {
    this.solutionEndsWith = JsonNullable.<String>of(solutionEndsWith);
  }


  public GlobalAlertRuleWhereInput solutionGt(String solutionGt) {
    this.solutionGt = JsonNullable.<String>of(solutionGt);
    return this;
  }

   /**
   * Get solutionGt
   * @return solutionGt
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getSolutionGt() {
        return solutionGt.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_SOLUTION_GT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getSolutionGt_JsonNullable() {
    return solutionGt;
  }
  
  @JsonProperty(JSON_PROPERTY_SOLUTION_GT)
  public void setSolutionGt_JsonNullable(JsonNullable<String> solutionGt) {
    this.solutionGt = solutionGt;
  }

  public void setSolutionGt(String solutionGt) {
    this.solutionGt = JsonNullable.<String>of(solutionGt);
  }


  public GlobalAlertRuleWhereInput solutionGte(String solutionGte) {
    this.solutionGte = JsonNullable.<String>of(solutionGte);
    return this;
  }

   /**
   * Get solutionGte
   * @return solutionGte
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getSolutionGte() {
        return solutionGte.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_SOLUTION_GTE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getSolutionGte_JsonNullable() {
    return solutionGte;
  }
  
  @JsonProperty(JSON_PROPERTY_SOLUTION_GTE)
  public void setSolutionGte_JsonNullable(JsonNullable<String> solutionGte) {
    this.solutionGte = solutionGte;
  }

  public void setSolutionGte(String solutionGte) {
    this.solutionGte = JsonNullable.<String>of(solutionGte);
  }


  public GlobalAlertRuleWhereInput solutionIn(List<String> solutionIn) {
    this.solutionIn = JsonNullable.<List<String>>of(solutionIn);
    return this;
  }

  public GlobalAlertRuleWhereInput addSolutionInItem(String solutionInItem) {
    if (this.solutionIn == null || !this.solutionIn.isPresent()) {
      this.solutionIn = JsonNullable.<List<String>>of(new ArrayList<>());
    }
    try {
      this.solutionIn.get().add(solutionInItem);
    } catch (java.util.NoSuchElementException e) {
      // this can never happen, as we make sure above that the value is present
    }
    return this;
  }

   /**
   * Get solutionIn
   * @return solutionIn
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public List<String> getSolutionIn() {
        return solutionIn.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_SOLUTION_IN)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<List<String>> getSolutionIn_JsonNullable() {
    return solutionIn;
  }
  
  @JsonProperty(JSON_PROPERTY_SOLUTION_IN)
  public void setSolutionIn_JsonNullable(JsonNullable<List<String>> solutionIn) {
    this.solutionIn = solutionIn;
  }

  public void setSolutionIn(List<String> solutionIn) {
    this.solutionIn = JsonNullable.<List<String>>of(solutionIn);
  }


  public GlobalAlertRuleWhereInput solutionLt(String solutionLt) {
    this.solutionLt = JsonNullable.<String>of(solutionLt);
    return this;
  }

   /**
   * Get solutionLt
   * @return solutionLt
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getSolutionLt() {
        return solutionLt.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_SOLUTION_LT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getSolutionLt_JsonNullable() {
    return solutionLt;
  }
  
  @JsonProperty(JSON_PROPERTY_SOLUTION_LT)
  public void setSolutionLt_JsonNullable(JsonNullable<String> solutionLt) {
    this.solutionLt = solutionLt;
  }

  public void setSolutionLt(String solutionLt) {
    this.solutionLt = JsonNullable.<String>of(solutionLt);
  }


  public GlobalAlertRuleWhereInput solutionLte(String solutionLte) {
    this.solutionLte = JsonNullable.<String>of(solutionLte);
    return this;
  }

   /**
   * Get solutionLte
   * @return solutionLte
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getSolutionLte() {
        return solutionLte.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_SOLUTION_LTE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getSolutionLte_JsonNullable() {
    return solutionLte;
  }
  
  @JsonProperty(JSON_PROPERTY_SOLUTION_LTE)
  public void setSolutionLte_JsonNullable(JsonNullable<String> solutionLte) {
    this.solutionLte = solutionLte;
  }

  public void setSolutionLte(String solutionLte) {
    this.solutionLte = JsonNullable.<String>of(solutionLte);
  }


  public GlobalAlertRuleWhereInput solutionNot(String solutionNot) {
    this.solutionNot = JsonNullable.<String>of(solutionNot);
    return this;
  }

   /**
   * Get solutionNot
   * @return solutionNot
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getSolutionNot() {
        return solutionNot.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_SOLUTION_NOT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getSolutionNot_JsonNullable() {
    return solutionNot;
  }
  
  @JsonProperty(JSON_PROPERTY_SOLUTION_NOT)
  public void setSolutionNot_JsonNullable(JsonNullable<String> solutionNot) {
    this.solutionNot = solutionNot;
  }

  public void setSolutionNot(String solutionNot) {
    this.solutionNot = JsonNullable.<String>of(solutionNot);
  }


  public GlobalAlertRuleWhereInput solutionNotContains(String solutionNotContains) {
    this.solutionNotContains = JsonNullable.<String>of(solutionNotContains);
    return this;
  }

   /**
   * Get solutionNotContains
   * @return solutionNotContains
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getSolutionNotContains() {
        return solutionNotContains.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_SOLUTION_NOT_CONTAINS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getSolutionNotContains_JsonNullable() {
    return solutionNotContains;
  }
  
  @JsonProperty(JSON_PROPERTY_SOLUTION_NOT_CONTAINS)
  public void setSolutionNotContains_JsonNullable(JsonNullable<String> solutionNotContains) {
    this.solutionNotContains = solutionNotContains;
  }

  public void setSolutionNotContains(String solutionNotContains) {
    this.solutionNotContains = JsonNullable.<String>of(solutionNotContains);
  }


  public GlobalAlertRuleWhereInput solutionNotEndsWith(String solutionNotEndsWith) {
    this.solutionNotEndsWith = JsonNullable.<String>of(solutionNotEndsWith);
    return this;
  }

   /**
   * Get solutionNotEndsWith
   * @return solutionNotEndsWith
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getSolutionNotEndsWith() {
        return solutionNotEndsWith.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_SOLUTION_NOT_ENDS_WITH)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getSolutionNotEndsWith_JsonNullable() {
    return solutionNotEndsWith;
  }
  
  @JsonProperty(JSON_PROPERTY_SOLUTION_NOT_ENDS_WITH)
  public void setSolutionNotEndsWith_JsonNullable(JsonNullable<String> solutionNotEndsWith) {
    this.solutionNotEndsWith = solutionNotEndsWith;
  }

  public void setSolutionNotEndsWith(String solutionNotEndsWith) {
    this.solutionNotEndsWith = JsonNullable.<String>of(solutionNotEndsWith);
  }


  public GlobalAlertRuleWhereInput solutionNotIn(List<String> solutionNotIn) {
    this.solutionNotIn = JsonNullable.<List<String>>of(solutionNotIn);
    return this;
  }

  public GlobalAlertRuleWhereInput addSolutionNotInItem(String solutionNotInItem) {
    if (this.solutionNotIn == null || !this.solutionNotIn.isPresent()) {
      this.solutionNotIn = JsonNullable.<List<String>>of(new ArrayList<>());
    }
    try {
      this.solutionNotIn.get().add(solutionNotInItem);
    } catch (java.util.NoSuchElementException e) {
      // this can never happen, as we make sure above that the value is present
    }
    return this;
  }

   /**
   * Get solutionNotIn
   * @return solutionNotIn
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public List<String> getSolutionNotIn() {
        return solutionNotIn.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_SOLUTION_NOT_IN)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<List<String>> getSolutionNotIn_JsonNullable() {
    return solutionNotIn;
  }
  
  @JsonProperty(JSON_PROPERTY_SOLUTION_NOT_IN)
  public void setSolutionNotIn_JsonNullable(JsonNullable<List<String>> solutionNotIn) {
    this.solutionNotIn = solutionNotIn;
  }

  public void setSolutionNotIn(List<String> solutionNotIn) {
    this.solutionNotIn = JsonNullable.<List<String>>of(solutionNotIn);
  }


  public GlobalAlertRuleWhereInput solutionNotStartsWith(String solutionNotStartsWith) {
    this.solutionNotStartsWith = JsonNullable.<String>of(solutionNotStartsWith);
    return this;
  }

   /**
   * Get solutionNotStartsWith
   * @return solutionNotStartsWith
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getSolutionNotStartsWith() {
        return solutionNotStartsWith.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_SOLUTION_NOT_STARTS_WITH)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getSolutionNotStartsWith_JsonNullable() {
    return solutionNotStartsWith;
  }
  
  @JsonProperty(JSON_PROPERTY_SOLUTION_NOT_STARTS_WITH)
  public void setSolutionNotStartsWith_JsonNullable(JsonNullable<String> solutionNotStartsWith) {
    this.solutionNotStartsWith = solutionNotStartsWith;
  }

  public void setSolutionNotStartsWith(String solutionNotStartsWith) {
    this.solutionNotStartsWith = JsonNullable.<String>of(solutionNotStartsWith);
  }


  public GlobalAlertRuleWhereInput solutionStartsWith(String solutionStartsWith) {
    this.solutionStartsWith = JsonNullable.<String>of(solutionStartsWith);
    return this;
  }

   /**
   * Get solutionStartsWith
   * @return solutionStartsWith
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getSolutionStartsWith() {
        return solutionStartsWith.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_SOLUTION_STARTS_WITH)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getSolutionStartsWith_JsonNullable() {
    return solutionStartsWith;
  }
  
  @JsonProperty(JSON_PROPERTY_SOLUTION_STARTS_WITH)
  public void setSolutionStartsWith_JsonNullable(JsonNullable<String> solutionStartsWith) {
    this.solutionStartsWith = solutionStartsWith;
  }

  public void setSolutionStartsWith(String solutionStartsWith) {
    this.solutionStartsWith = JsonNullable.<String>of(solutionStartsWith);
  }


  public GlobalAlertRuleWhereInput unit(AlertRuleUnit unit) {
    this.unit = JsonNullable.<AlertRuleUnit>of(unit);
    return this;
  }

   /**
   * Get unit
   * @return unit
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public AlertRuleUnit getUnit() {
        return unit.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_UNIT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<AlertRuleUnit> getUnit_JsonNullable() {
    return unit;
  }
  
  @JsonProperty(JSON_PROPERTY_UNIT)
  public void setUnit_JsonNullable(JsonNullable<AlertRuleUnit> unit) {
    this.unit = unit;
  }

  public void setUnit(AlertRuleUnit unit) {
    this.unit = JsonNullable.<AlertRuleUnit>of(unit);
  }


  public GlobalAlertRuleWhereInput unitIn(List<AlertRuleUnit> unitIn) {
    this.unitIn = JsonNullable.<List<AlertRuleUnit>>of(unitIn);
    return this;
  }

  public GlobalAlertRuleWhereInput addUnitInItem(AlertRuleUnit unitInItem) {
    if (this.unitIn == null || !this.unitIn.isPresent()) {
      this.unitIn = JsonNullable.<List<AlertRuleUnit>>of(new ArrayList<>());
    }
    try {
      this.unitIn.get().add(unitInItem);
    } catch (java.util.NoSuchElementException e) {
      // this can never happen, as we make sure above that the value is present
    }
    return this;
  }

   /**
   * Get unitIn
   * @return unitIn
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public List<AlertRuleUnit> getUnitIn() {
        return unitIn.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_UNIT_IN)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<List<AlertRuleUnit>> getUnitIn_JsonNullable() {
    return unitIn;
  }
  
  @JsonProperty(JSON_PROPERTY_UNIT_IN)
  public void setUnitIn_JsonNullable(JsonNullable<List<AlertRuleUnit>> unitIn) {
    this.unitIn = unitIn;
  }

  public void setUnitIn(List<AlertRuleUnit> unitIn) {
    this.unitIn = JsonNullable.<List<AlertRuleUnit>>of(unitIn);
  }


  public GlobalAlertRuleWhereInput unitNot(AlertRuleUnit unitNot) {
    this.unitNot = JsonNullable.<AlertRuleUnit>of(unitNot);
    return this;
  }

   /**
   * Get unitNot
   * @return unitNot
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public AlertRuleUnit getUnitNot() {
        return unitNot.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_UNIT_NOT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<AlertRuleUnit> getUnitNot_JsonNullable() {
    return unitNot;
  }
  
  @JsonProperty(JSON_PROPERTY_UNIT_NOT)
  public void setUnitNot_JsonNullable(JsonNullable<AlertRuleUnit> unitNot) {
    this.unitNot = unitNot;
  }

  public void setUnitNot(AlertRuleUnit unitNot) {
    this.unitNot = JsonNullable.<AlertRuleUnit>of(unitNot);
  }


  public GlobalAlertRuleWhereInput unitNotIn(List<AlertRuleUnit> unitNotIn) {
    this.unitNotIn = JsonNullable.<List<AlertRuleUnit>>of(unitNotIn);
    return this;
  }

  public GlobalAlertRuleWhereInput addUnitNotInItem(AlertRuleUnit unitNotInItem) {
    if (this.unitNotIn == null || !this.unitNotIn.isPresent()) {
      this.unitNotIn = JsonNullable.<List<AlertRuleUnit>>of(new ArrayList<>());
    }
    try {
      this.unitNotIn.get().add(unitNotInItem);
    } catch (java.util.NoSuchElementException e) {
      // this can never happen, as we make sure above that the value is present
    }
    return this;
  }

   /**
   * Get unitNotIn
   * @return unitNotIn
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public List<AlertRuleUnit> getUnitNotIn() {
        return unitNotIn.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_UNIT_NOT_IN)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<List<AlertRuleUnit>> getUnitNotIn_JsonNullable() {
    return unitNotIn;
  }
  
  @JsonProperty(JSON_PROPERTY_UNIT_NOT_IN)
  public void setUnitNotIn_JsonNullable(JsonNullable<List<AlertRuleUnit>> unitNotIn) {
    this.unitNotIn = unitNotIn;
  }

  public void setUnitNotIn(List<AlertRuleUnit> unitNotIn) {
    this.unitNotIn = JsonNullable.<List<AlertRuleUnit>>of(unitNotIn);
  }


  /**
   * Return true if this GlobalAlertRuleWhereInput object is equal to o.
   */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    GlobalAlertRuleWhereInput globalAlertRuleWhereInput = (GlobalAlertRuleWhereInput) o;
    return equalsNullable(this.alertRulesEvery, globalAlertRuleWhereInput.alertRulesEvery) &&
        equalsNullable(this.alertRulesNone, globalAlertRuleWhereInput.alertRulesNone) &&
        equalsNullable(this.alertRulesSome, globalAlertRuleWhereInput.alertRulesSome) &&
        equalsNullable(this.AND, globalAlertRuleWhereInput.AND) &&
        equalsNullable(this._boolean, globalAlertRuleWhereInput._boolean) &&
        equalsNullable(this.booleanNot, globalAlertRuleWhereInput.booleanNot) &&
        equalsNullable(this.cause, globalAlertRuleWhereInput.cause) &&
        equalsNullable(this.causeContains, globalAlertRuleWhereInput.causeContains) &&
        equalsNullable(this.causeEndsWith, globalAlertRuleWhereInput.causeEndsWith) &&
        equalsNullable(this.causeGt, globalAlertRuleWhereInput.causeGt) &&
        equalsNullable(this.causeGte, globalAlertRuleWhereInput.causeGte) &&
        equalsNullable(this.causeIn, globalAlertRuleWhereInput.causeIn) &&
        equalsNullable(this.causeLt, globalAlertRuleWhereInput.causeLt) &&
        equalsNullable(this.causeLte, globalAlertRuleWhereInput.causeLte) &&
        equalsNullable(this.causeNot, globalAlertRuleWhereInput.causeNot) &&
        equalsNullable(this.causeNotContains, globalAlertRuleWhereInput.causeNotContains) &&
        equalsNullable(this.causeNotEndsWith, globalAlertRuleWhereInput.causeNotEndsWith) &&
        equalsNullable(this.causeNotIn, globalAlertRuleWhereInput.causeNotIn) &&
        equalsNullable(this.causeNotStartsWith, globalAlertRuleWhereInput.causeNotStartsWith) &&
        equalsNullable(this.causeStartsWith, globalAlertRuleWhereInput.causeStartsWith) &&
        equalsNullable(this.disabled, globalAlertRuleWhereInput.disabled) &&
        equalsNullable(this.disabledNot, globalAlertRuleWhereInput.disabledNot) &&
        equalsNullable(this.id, globalAlertRuleWhereInput.id) &&
        equalsNullable(this.idContains, globalAlertRuleWhereInput.idContains) &&
        equalsNullable(this.idEndsWith, globalAlertRuleWhereInput.idEndsWith) &&
        equalsNullable(this.idGt, globalAlertRuleWhereInput.idGt) &&
        equalsNullable(this.idGte, globalAlertRuleWhereInput.idGte) &&
        equalsNullable(this.idIn, globalAlertRuleWhereInput.idIn) &&
        equalsNullable(this.idLt, globalAlertRuleWhereInput.idLt) &&
        equalsNullable(this.idLte, globalAlertRuleWhereInput.idLte) &&
        equalsNullable(this.idNot, globalAlertRuleWhereInput.idNot) &&
        equalsNullable(this.idNotContains, globalAlertRuleWhereInput.idNotContains) &&
        equalsNullable(this.idNotEndsWith, globalAlertRuleWhereInput.idNotEndsWith) &&
        equalsNullable(this.idNotIn, globalAlertRuleWhereInput.idNotIn) &&
        equalsNullable(this.idNotStartsWith, globalAlertRuleWhereInput.idNotStartsWith) &&
        equalsNullable(this.idStartsWith, globalAlertRuleWhereInput.idStartsWith) &&
        equalsNullable(this.impact, globalAlertRuleWhereInput.impact) &&
        equalsNullable(this.impactContains, globalAlertRuleWhereInput.impactContains) &&
        equalsNullable(this.impactEndsWith, globalAlertRuleWhereInput.impactEndsWith) &&
        equalsNullable(this.impactGt, globalAlertRuleWhereInput.impactGt) &&
        equalsNullable(this.impactGte, globalAlertRuleWhereInput.impactGte) &&
        equalsNullable(this.impactIn, globalAlertRuleWhereInput.impactIn) &&
        equalsNullable(this.impactLt, globalAlertRuleWhereInput.impactLt) &&
        equalsNullable(this.impactLte, globalAlertRuleWhereInput.impactLte) &&
        equalsNullable(this.impactNot, globalAlertRuleWhereInput.impactNot) &&
        equalsNullable(this.impactNotContains, globalAlertRuleWhereInput.impactNotContains) &&
        equalsNullable(this.impactNotEndsWith, globalAlertRuleWhereInput.impactNotEndsWith) &&
        equalsNullable(this.impactNotIn, globalAlertRuleWhereInput.impactNotIn) &&
        equalsNullable(this.impactNotStartsWith, globalAlertRuleWhereInput.impactNotStartsWith) &&
        equalsNullable(this.impactStartsWith, globalAlertRuleWhereInput.impactStartsWith) &&
        equalsNullable(this.message, globalAlertRuleWhereInput.message) &&
        equalsNullable(this.messageContains, globalAlertRuleWhereInput.messageContains) &&
        equalsNullable(this.messageEndsWith, globalAlertRuleWhereInput.messageEndsWith) &&
        equalsNullable(this.messageGt, globalAlertRuleWhereInput.messageGt) &&
        equalsNullable(this.messageGte, globalAlertRuleWhereInput.messageGte) &&
        equalsNullable(this.messageIn, globalAlertRuleWhereInput.messageIn) &&
        equalsNullable(this.messageLt, globalAlertRuleWhereInput.messageLt) &&
        equalsNullable(this.messageLte, globalAlertRuleWhereInput.messageLte) &&
        equalsNullable(this.messageNot, globalAlertRuleWhereInput.messageNot) &&
        equalsNullable(this.messageNotContains, globalAlertRuleWhereInput.messageNotContains) &&
        equalsNullable(this.messageNotEndsWith, globalAlertRuleWhereInput.messageNotEndsWith) &&
        equalsNullable(this.messageNotIn, globalAlertRuleWhereInput.messageNotIn) &&
        equalsNullable(this.messageNotStartsWith, globalAlertRuleWhereInput.messageNotStartsWith) &&
        equalsNullable(this.messageStartsWith, globalAlertRuleWhereInput.messageStartsWith) &&
        equalsNullable(this.name, globalAlertRuleWhereInput.name) &&
        equalsNullable(this.nameContains, globalAlertRuleWhereInput.nameContains) &&
        equalsNullable(this.nameEndsWith, globalAlertRuleWhereInput.nameEndsWith) &&
        equalsNullable(this.nameGt, globalAlertRuleWhereInput.nameGt) &&
        equalsNullable(this.nameGte, globalAlertRuleWhereInput.nameGte) &&
        equalsNullable(this.nameIn, globalAlertRuleWhereInput.nameIn) &&
        equalsNullable(this.nameLt, globalAlertRuleWhereInput.nameLt) &&
        equalsNullable(this.nameLte, globalAlertRuleWhereInput.nameLte) &&
        equalsNullable(this.nameNot, globalAlertRuleWhereInput.nameNot) &&
        equalsNullable(this.nameNotContains, globalAlertRuleWhereInput.nameNotContains) &&
        equalsNullable(this.nameNotEndsWith, globalAlertRuleWhereInput.nameNotEndsWith) &&
        equalsNullable(this.nameNotIn, globalAlertRuleWhereInput.nameNotIn) &&
        equalsNullable(this.nameNotStartsWith, globalAlertRuleWhereInput.nameNotStartsWith) &&
        equalsNullable(this.nameStartsWith, globalAlertRuleWhereInput.nameStartsWith) &&
        equalsNullable(this.NOT, globalAlertRuleWhereInput.NOT) &&
        equalsNullable(this._object, globalAlertRuleWhereInput._object) &&
        equalsNullable(this.objectIn, globalAlertRuleWhereInput.objectIn) &&
        equalsNullable(this.objectNot, globalAlertRuleWhereInput.objectNot) &&
        equalsNullable(this.objectNotIn, globalAlertRuleWhereInput.objectNotIn) &&
        equalsNullable(this.operator, globalAlertRuleWhereInput.operator) &&
        equalsNullable(this.operatorContains, globalAlertRuleWhereInput.operatorContains) &&
        equalsNullable(this.operatorEndsWith, globalAlertRuleWhereInput.operatorEndsWith) &&
        equalsNullable(this.operatorGt, globalAlertRuleWhereInput.operatorGt) &&
        equalsNullable(this.operatorGte, globalAlertRuleWhereInput.operatorGte) &&
        equalsNullable(this.operatorIn, globalAlertRuleWhereInput.operatorIn) &&
        equalsNullable(this.operatorLt, globalAlertRuleWhereInput.operatorLt) &&
        equalsNullable(this.operatorLte, globalAlertRuleWhereInput.operatorLte) &&
        equalsNullable(this.operatorNot, globalAlertRuleWhereInput.operatorNot) &&
        equalsNullable(this.operatorNotContains, globalAlertRuleWhereInput.operatorNotContains) &&
        equalsNullable(this.operatorNotEndsWith, globalAlertRuleWhereInput.operatorNotEndsWith) &&
        equalsNullable(this.operatorNotIn, globalAlertRuleWhereInput.operatorNotIn) &&
        equalsNullable(this.operatorNotStartsWith, globalAlertRuleWhereInput.operatorNotStartsWith) &&
        equalsNullable(this.operatorStartsWith, globalAlertRuleWhereInput.operatorStartsWith) &&
        equalsNullable(this.OR, globalAlertRuleWhereInput.OR) &&
        equalsNullable(this.solution, globalAlertRuleWhereInput.solution) &&
        equalsNullable(this.solutionContains, globalAlertRuleWhereInput.solutionContains) &&
        equalsNullable(this.solutionEndsWith, globalAlertRuleWhereInput.solutionEndsWith) &&
        equalsNullable(this.solutionGt, globalAlertRuleWhereInput.solutionGt) &&
        equalsNullable(this.solutionGte, globalAlertRuleWhereInput.solutionGte) &&
        equalsNullable(this.solutionIn, globalAlertRuleWhereInput.solutionIn) &&
        equalsNullable(this.solutionLt, globalAlertRuleWhereInput.solutionLt) &&
        equalsNullable(this.solutionLte, globalAlertRuleWhereInput.solutionLte) &&
        equalsNullable(this.solutionNot, globalAlertRuleWhereInput.solutionNot) &&
        equalsNullable(this.solutionNotContains, globalAlertRuleWhereInput.solutionNotContains) &&
        equalsNullable(this.solutionNotEndsWith, globalAlertRuleWhereInput.solutionNotEndsWith) &&
        equalsNullable(this.solutionNotIn, globalAlertRuleWhereInput.solutionNotIn) &&
        equalsNullable(this.solutionNotStartsWith, globalAlertRuleWhereInput.solutionNotStartsWith) &&
        equalsNullable(this.solutionStartsWith, globalAlertRuleWhereInput.solutionStartsWith) &&
        equalsNullable(this.unit, globalAlertRuleWhereInput.unit) &&
        equalsNullable(this.unitIn, globalAlertRuleWhereInput.unitIn) &&
        equalsNullable(this.unitNot, globalAlertRuleWhereInput.unitNot) &&
        equalsNullable(this.unitNotIn, globalAlertRuleWhereInput.unitNotIn);
  }

  private static <T> boolean equalsNullable(JsonNullable<T> a, JsonNullable<T> b) {
    return a == b || (a != null && b != null && a.isPresent() && b.isPresent() && Objects.deepEquals(a.get(), b.get()));
  }

  @Override
  public int hashCode() {
    return Objects.hash(hashCodeNullable(alertRulesEvery), hashCodeNullable(alertRulesNone), hashCodeNullable(alertRulesSome), hashCodeNullable(AND), hashCodeNullable(_boolean), hashCodeNullable(booleanNot), hashCodeNullable(cause), hashCodeNullable(causeContains), hashCodeNullable(causeEndsWith), hashCodeNullable(causeGt), hashCodeNullable(causeGte), hashCodeNullable(causeIn), hashCodeNullable(causeLt), hashCodeNullable(causeLte), hashCodeNullable(causeNot), hashCodeNullable(causeNotContains), hashCodeNullable(causeNotEndsWith), hashCodeNullable(causeNotIn), hashCodeNullable(causeNotStartsWith), hashCodeNullable(causeStartsWith), hashCodeNullable(disabled), hashCodeNullable(disabledNot), hashCodeNullable(id), hashCodeNullable(idContains), hashCodeNullable(idEndsWith), hashCodeNullable(idGt), hashCodeNullable(idGte), hashCodeNullable(idIn), hashCodeNullable(idLt), hashCodeNullable(idLte), hashCodeNullable(idNot), hashCodeNullable(idNotContains), hashCodeNullable(idNotEndsWith), hashCodeNullable(idNotIn), hashCodeNullable(idNotStartsWith), hashCodeNullable(idStartsWith), hashCodeNullable(impact), hashCodeNullable(impactContains), hashCodeNullable(impactEndsWith), hashCodeNullable(impactGt), hashCodeNullable(impactGte), hashCodeNullable(impactIn), hashCodeNullable(impactLt), hashCodeNullable(impactLte), hashCodeNullable(impactNot), hashCodeNullable(impactNotContains), hashCodeNullable(impactNotEndsWith), hashCodeNullable(impactNotIn), hashCodeNullable(impactNotStartsWith), hashCodeNullable(impactStartsWith), hashCodeNullable(message), hashCodeNullable(messageContains), hashCodeNullable(messageEndsWith), hashCodeNullable(messageGt), hashCodeNullable(messageGte), hashCodeNullable(messageIn), hashCodeNullable(messageLt), hashCodeNullable(messageLte), hashCodeNullable(messageNot), hashCodeNullable(messageNotContains), hashCodeNullable(messageNotEndsWith), hashCodeNullable(messageNotIn), hashCodeNullable(messageNotStartsWith), hashCodeNullable(messageStartsWith), hashCodeNullable(name), hashCodeNullable(nameContains), hashCodeNullable(nameEndsWith), hashCodeNullable(nameGt), hashCodeNullable(nameGte), hashCodeNullable(nameIn), hashCodeNullable(nameLt), hashCodeNullable(nameLte), hashCodeNullable(nameNot), hashCodeNullable(nameNotContains), hashCodeNullable(nameNotEndsWith), hashCodeNullable(nameNotIn), hashCodeNullable(nameNotStartsWith), hashCodeNullable(nameStartsWith), hashCodeNullable(NOT), hashCodeNullable(_object), hashCodeNullable(objectIn), hashCodeNullable(objectNot), hashCodeNullable(objectNotIn), hashCodeNullable(operator), hashCodeNullable(operatorContains), hashCodeNullable(operatorEndsWith), hashCodeNullable(operatorGt), hashCodeNullable(operatorGte), hashCodeNullable(operatorIn), hashCodeNullable(operatorLt), hashCodeNullable(operatorLte), hashCodeNullable(operatorNot), hashCodeNullable(operatorNotContains), hashCodeNullable(operatorNotEndsWith), hashCodeNullable(operatorNotIn), hashCodeNullable(operatorNotStartsWith), hashCodeNullable(operatorStartsWith), hashCodeNullable(OR), hashCodeNullable(solution), hashCodeNullable(solutionContains), hashCodeNullable(solutionEndsWith), hashCodeNullable(solutionGt), hashCodeNullable(solutionGte), hashCodeNullable(solutionIn), hashCodeNullable(solutionLt), hashCodeNullable(solutionLte), hashCodeNullable(solutionNot), hashCodeNullable(solutionNotContains), hashCodeNullable(solutionNotEndsWith), hashCodeNullable(solutionNotIn), hashCodeNullable(solutionNotStartsWith), hashCodeNullable(solutionStartsWith), hashCodeNullable(unit), hashCodeNullable(unitIn), hashCodeNullable(unitNot), hashCodeNullable(unitNotIn));
  }

  private static <T> int hashCodeNullable(JsonNullable<T> a) {
    if (a == null) {
      return 1;
    }
    return a.isPresent() ? Arrays.deepHashCode(new Object[]{a.get()}) : 31;
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class GlobalAlertRuleWhereInput {\n");
    sb.append("    alertRulesEvery: ").append(toIndentedString(alertRulesEvery)).append("\n");
    sb.append("    alertRulesNone: ").append(toIndentedString(alertRulesNone)).append("\n");
    sb.append("    alertRulesSome: ").append(toIndentedString(alertRulesSome)).append("\n");
    sb.append("    AND: ").append(toIndentedString(AND)).append("\n");
    sb.append("    _boolean: ").append(toIndentedString(_boolean)).append("\n");
    sb.append("    booleanNot: ").append(toIndentedString(booleanNot)).append("\n");
    sb.append("    cause: ").append(toIndentedString(cause)).append("\n");
    sb.append("    causeContains: ").append(toIndentedString(causeContains)).append("\n");
    sb.append("    causeEndsWith: ").append(toIndentedString(causeEndsWith)).append("\n");
    sb.append("    causeGt: ").append(toIndentedString(causeGt)).append("\n");
    sb.append("    causeGte: ").append(toIndentedString(causeGte)).append("\n");
    sb.append("    causeIn: ").append(toIndentedString(causeIn)).append("\n");
    sb.append("    causeLt: ").append(toIndentedString(causeLt)).append("\n");
    sb.append("    causeLte: ").append(toIndentedString(causeLte)).append("\n");
    sb.append("    causeNot: ").append(toIndentedString(causeNot)).append("\n");
    sb.append("    causeNotContains: ").append(toIndentedString(causeNotContains)).append("\n");
    sb.append("    causeNotEndsWith: ").append(toIndentedString(causeNotEndsWith)).append("\n");
    sb.append("    causeNotIn: ").append(toIndentedString(causeNotIn)).append("\n");
    sb.append("    causeNotStartsWith: ").append(toIndentedString(causeNotStartsWith)).append("\n");
    sb.append("    causeStartsWith: ").append(toIndentedString(causeStartsWith)).append("\n");
    sb.append("    disabled: ").append(toIndentedString(disabled)).append("\n");
    sb.append("    disabledNot: ").append(toIndentedString(disabledNot)).append("\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    idContains: ").append(toIndentedString(idContains)).append("\n");
    sb.append("    idEndsWith: ").append(toIndentedString(idEndsWith)).append("\n");
    sb.append("    idGt: ").append(toIndentedString(idGt)).append("\n");
    sb.append("    idGte: ").append(toIndentedString(idGte)).append("\n");
    sb.append("    idIn: ").append(toIndentedString(idIn)).append("\n");
    sb.append("    idLt: ").append(toIndentedString(idLt)).append("\n");
    sb.append("    idLte: ").append(toIndentedString(idLte)).append("\n");
    sb.append("    idNot: ").append(toIndentedString(idNot)).append("\n");
    sb.append("    idNotContains: ").append(toIndentedString(idNotContains)).append("\n");
    sb.append("    idNotEndsWith: ").append(toIndentedString(idNotEndsWith)).append("\n");
    sb.append("    idNotIn: ").append(toIndentedString(idNotIn)).append("\n");
    sb.append("    idNotStartsWith: ").append(toIndentedString(idNotStartsWith)).append("\n");
    sb.append("    idStartsWith: ").append(toIndentedString(idStartsWith)).append("\n");
    sb.append("    impact: ").append(toIndentedString(impact)).append("\n");
    sb.append("    impactContains: ").append(toIndentedString(impactContains)).append("\n");
    sb.append("    impactEndsWith: ").append(toIndentedString(impactEndsWith)).append("\n");
    sb.append("    impactGt: ").append(toIndentedString(impactGt)).append("\n");
    sb.append("    impactGte: ").append(toIndentedString(impactGte)).append("\n");
    sb.append("    impactIn: ").append(toIndentedString(impactIn)).append("\n");
    sb.append("    impactLt: ").append(toIndentedString(impactLt)).append("\n");
    sb.append("    impactLte: ").append(toIndentedString(impactLte)).append("\n");
    sb.append("    impactNot: ").append(toIndentedString(impactNot)).append("\n");
    sb.append("    impactNotContains: ").append(toIndentedString(impactNotContains)).append("\n");
    sb.append("    impactNotEndsWith: ").append(toIndentedString(impactNotEndsWith)).append("\n");
    sb.append("    impactNotIn: ").append(toIndentedString(impactNotIn)).append("\n");
    sb.append("    impactNotStartsWith: ").append(toIndentedString(impactNotStartsWith)).append("\n");
    sb.append("    impactStartsWith: ").append(toIndentedString(impactStartsWith)).append("\n");
    sb.append("    message: ").append(toIndentedString(message)).append("\n");
    sb.append("    messageContains: ").append(toIndentedString(messageContains)).append("\n");
    sb.append("    messageEndsWith: ").append(toIndentedString(messageEndsWith)).append("\n");
    sb.append("    messageGt: ").append(toIndentedString(messageGt)).append("\n");
    sb.append("    messageGte: ").append(toIndentedString(messageGte)).append("\n");
    sb.append("    messageIn: ").append(toIndentedString(messageIn)).append("\n");
    sb.append("    messageLt: ").append(toIndentedString(messageLt)).append("\n");
    sb.append("    messageLte: ").append(toIndentedString(messageLte)).append("\n");
    sb.append("    messageNot: ").append(toIndentedString(messageNot)).append("\n");
    sb.append("    messageNotContains: ").append(toIndentedString(messageNotContains)).append("\n");
    sb.append("    messageNotEndsWith: ").append(toIndentedString(messageNotEndsWith)).append("\n");
    sb.append("    messageNotIn: ").append(toIndentedString(messageNotIn)).append("\n");
    sb.append("    messageNotStartsWith: ").append(toIndentedString(messageNotStartsWith)).append("\n");
    sb.append("    messageStartsWith: ").append(toIndentedString(messageStartsWith)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    nameContains: ").append(toIndentedString(nameContains)).append("\n");
    sb.append("    nameEndsWith: ").append(toIndentedString(nameEndsWith)).append("\n");
    sb.append("    nameGt: ").append(toIndentedString(nameGt)).append("\n");
    sb.append("    nameGte: ").append(toIndentedString(nameGte)).append("\n");
    sb.append("    nameIn: ").append(toIndentedString(nameIn)).append("\n");
    sb.append("    nameLt: ").append(toIndentedString(nameLt)).append("\n");
    sb.append("    nameLte: ").append(toIndentedString(nameLte)).append("\n");
    sb.append("    nameNot: ").append(toIndentedString(nameNot)).append("\n");
    sb.append("    nameNotContains: ").append(toIndentedString(nameNotContains)).append("\n");
    sb.append("    nameNotEndsWith: ").append(toIndentedString(nameNotEndsWith)).append("\n");
    sb.append("    nameNotIn: ").append(toIndentedString(nameNotIn)).append("\n");
    sb.append("    nameNotStartsWith: ").append(toIndentedString(nameNotStartsWith)).append("\n");
    sb.append("    nameStartsWith: ").append(toIndentedString(nameStartsWith)).append("\n");
    sb.append("    NOT: ").append(toIndentedString(NOT)).append("\n");
    sb.append("    _object: ").append(toIndentedString(_object)).append("\n");
    sb.append("    objectIn: ").append(toIndentedString(objectIn)).append("\n");
    sb.append("    objectNot: ").append(toIndentedString(objectNot)).append("\n");
    sb.append("    objectNotIn: ").append(toIndentedString(objectNotIn)).append("\n");
    sb.append("    operator: ").append(toIndentedString(operator)).append("\n");
    sb.append("    operatorContains: ").append(toIndentedString(operatorContains)).append("\n");
    sb.append("    operatorEndsWith: ").append(toIndentedString(operatorEndsWith)).append("\n");
    sb.append("    operatorGt: ").append(toIndentedString(operatorGt)).append("\n");
    sb.append("    operatorGte: ").append(toIndentedString(operatorGte)).append("\n");
    sb.append("    operatorIn: ").append(toIndentedString(operatorIn)).append("\n");
    sb.append("    operatorLt: ").append(toIndentedString(operatorLt)).append("\n");
    sb.append("    operatorLte: ").append(toIndentedString(operatorLte)).append("\n");
    sb.append("    operatorNot: ").append(toIndentedString(operatorNot)).append("\n");
    sb.append("    operatorNotContains: ").append(toIndentedString(operatorNotContains)).append("\n");
    sb.append("    operatorNotEndsWith: ").append(toIndentedString(operatorNotEndsWith)).append("\n");
    sb.append("    operatorNotIn: ").append(toIndentedString(operatorNotIn)).append("\n");
    sb.append("    operatorNotStartsWith: ").append(toIndentedString(operatorNotStartsWith)).append("\n");
    sb.append("    operatorStartsWith: ").append(toIndentedString(operatorStartsWith)).append("\n");
    sb.append("    OR: ").append(toIndentedString(OR)).append("\n");
    sb.append("    solution: ").append(toIndentedString(solution)).append("\n");
    sb.append("    solutionContains: ").append(toIndentedString(solutionContains)).append("\n");
    sb.append("    solutionEndsWith: ").append(toIndentedString(solutionEndsWith)).append("\n");
    sb.append("    solutionGt: ").append(toIndentedString(solutionGt)).append("\n");
    sb.append("    solutionGte: ").append(toIndentedString(solutionGte)).append("\n");
    sb.append("    solutionIn: ").append(toIndentedString(solutionIn)).append("\n");
    sb.append("    solutionLt: ").append(toIndentedString(solutionLt)).append("\n");
    sb.append("    solutionLte: ").append(toIndentedString(solutionLte)).append("\n");
    sb.append("    solutionNot: ").append(toIndentedString(solutionNot)).append("\n");
    sb.append("    solutionNotContains: ").append(toIndentedString(solutionNotContains)).append("\n");
    sb.append("    solutionNotEndsWith: ").append(toIndentedString(solutionNotEndsWith)).append("\n");
    sb.append("    solutionNotIn: ").append(toIndentedString(solutionNotIn)).append("\n");
    sb.append("    solutionNotStartsWith: ").append(toIndentedString(solutionNotStartsWith)).append("\n");
    sb.append("    solutionStartsWith: ").append(toIndentedString(solutionStartsWith)).append("\n");
    sb.append("    unit: ").append(toIndentedString(unit)).append("\n");
    sb.append("    unitIn: ").append(toIndentedString(unitIn)).append("\n");
    sb.append("    unitNot: ").append(toIndentedString(unitNot)).append("\n");
    sb.append("    unitNotIn: ").append(toIndentedString(unitNotIn)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

