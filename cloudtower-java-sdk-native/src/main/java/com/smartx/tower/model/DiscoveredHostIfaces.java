/*
 * Tower SDK API
 * cloudtower operation API and SDK
 *
 * The version of the OpenAPI document: 1.7.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.smartx.tower.model;

import java.util.Objects;
import java.util.Arrays;
import java.util.Map;
import java.util.HashMap;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import org.openapitools.jackson.nullable.JsonNullable;
import com.fasterxml.jackson.annotation.JsonIgnore;
import org.openapitools.jackson.nullable.JsonNullable;
import java.util.NoSuchElementException;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;


/**
 * DiscoveredHostIfaces
 */
@JsonPropertyOrder({
  DiscoveredHostIfaces.JSON_PROPERTY_UP,
  DiscoveredHostIfaces.JSON_PROPERTY_SPEED,
  DiscoveredHostIfaces.JSON_PROPERTY_RDMA_ENABLED,
  DiscoveredHostIfaces.JSON_PROPERTY_PCI_SLOT_NAME,
  DiscoveredHostIfaces.JSON_PROPERTY_NAME,
  DiscoveredHostIfaces.JSON_PROPERTY_MTU,
  DiscoveredHostIfaces.JSON_PROPERTY_MAC_ADDRESS,
  DiscoveredHostIfaces.JSON_PROPERTY_IPV6,
  DiscoveredHostIfaces.JSON_PROPERTY_IPV4
})
@javax.annotation.processing.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2021-10-27T15:59:14.939791800+08:00[Asia/Shanghai]")
public class DiscoveredHostIfaces {
  public static final String JSON_PROPERTY_UP = "up";
  private Boolean up;

  public static final String JSON_PROPERTY_SPEED = "speed";
  private JsonNullable<Double> speed = JsonNullable.<Double>undefined();

  public static final String JSON_PROPERTY_RDMA_ENABLED = "rdma_enabled";
  private JsonNullable<Boolean> rdmaEnabled = JsonNullable.<Boolean>undefined();

  public static final String JSON_PROPERTY_PCI_SLOT_NAME = "pci_slot_name";
  private JsonNullable<String> pciSlotName = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_NAME = "name";
  private String name;

  public static final String JSON_PROPERTY_MTU = "mtu";
  private Double mtu;

  public static final String JSON_PROPERTY_MAC_ADDRESS = "mac_address";
  private String macAddress;

  public static final String JSON_PROPERTY_IPV6 = "ipv6";
  private JsonNullable<String> ipv6 = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_IPV4 = "ipv4";
  private JsonNullable<String> ipv4 = JsonNullable.<String>undefined();


  public DiscoveredHostIfaces up(Boolean up) {
    this.up = up;
    return this;
  }

   /**
   * Get up
   * @return up
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")
  @JsonProperty(JSON_PROPERTY_UP)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public Boolean getUp() {
    return up;
  }


  @JsonProperty(JSON_PROPERTY_UP)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setUp(Boolean up) {
    this.up = up;
  }


  public DiscoveredHostIfaces speed(Double speed) {
    this.speed = JsonNullable.<Double>of(speed);
    return this;
  }

   /**
   * Get speed
   * @return speed
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public Double getSpeed() {
        return speed.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_SPEED)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<Double> getSpeed_JsonNullable() {
    return speed;
  }
  
  @JsonProperty(JSON_PROPERTY_SPEED)
  public void setSpeed_JsonNullable(JsonNullable<Double> speed) {
    this.speed = speed;
  }

  public void setSpeed(Double speed) {
    this.speed = JsonNullable.<Double>of(speed);
  }


  public DiscoveredHostIfaces rdmaEnabled(Boolean rdmaEnabled) {
    this.rdmaEnabled = JsonNullable.<Boolean>of(rdmaEnabled);
    return this;
  }

   /**
   * Get rdmaEnabled
   * @return rdmaEnabled
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public Boolean getRdmaEnabled() {
        return rdmaEnabled.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_RDMA_ENABLED)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<Boolean> getRdmaEnabled_JsonNullable() {
    return rdmaEnabled;
  }
  
  @JsonProperty(JSON_PROPERTY_RDMA_ENABLED)
  public void setRdmaEnabled_JsonNullable(JsonNullable<Boolean> rdmaEnabled) {
    this.rdmaEnabled = rdmaEnabled;
  }

  public void setRdmaEnabled(Boolean rdmaEnabled) {
    this.rdmaEnabled = JsonNullable.<Boolean>of(rdmaEnabled);
  }


  public DiscoveredHostIfaces pciSlotName(String pciSlotName) {
    this.pciSlotName = JsonNullable.<String>of(pciSlotName);
    return this;
  }

   /**
   * Get pciSlotName
   * @return pciSlotName
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getPciSlotName() {
        return pciSlotName.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_PCI_SLOT_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getPciSlotName_JsonNullable() {
    return pciSlotName;
  }
  
  @JsonProperty(JSON_PROPERTY_PCI_SLOT_NAME)
  public void setPciSlotName_JsonNullable(JsonNullable<String> pciSlotName) {
    this.pciSlotName = pciSlotName;
  }

  public void setPciSlotName(String pciSlotName) {
    this.pciSlotName = JsonNullable.<String>of(pciSlotName);
  }


  public DiscoveredHostIfaces name(String name) {
    this.name = name;
    return this;
  }

   /**
   * Get name
   * @return name
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")
  @JsonProperty(JSON_PROPERTY_NAME)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getName() {
    return name;
  }


  @JsonProperty(JSON_PROPERTY_NAME)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setName(String name) {
    this.name = name;
  }


  public DiscoveredHostIfaces mtu(Double mtu) {
    this.mtu = mtu;
    return this;
  }

   /**
   * Get mtu
   * @return mtu
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")
  @JsonProperty(JSON_PROPERTY_MTU)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public Double getMtu() {
    return mtu;
  }


  @JsonProperty(JSON_PROPERTY_MTU)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setMtu(Double mtu) {
    this.mtu = mtu;
  }


  public DiscoveredHostIfaces macAddress(String macAddress) {
    this.macAddress = macAddress;
    return this;
  }

   /**
   * Get macAddress
   * @return macAddress
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")
  @JsonProperty(JSON_PROPERTY_MAC_ADDRESS)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getMacAddress() {
    return macAddress;
  }


  @JsonProperty(JSON_PROPERTY_MAC_ADDRESS)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setMacAddress(String macAddress) {
    this.macAddress = macAddress;
  }


  public DiscoveredHostIfaces ipv6(String ipv6) {
    this.ipv6 = JsonNullable.<String>of(ipv6);
    return this;
  }

   /**
   * Get ipv6
   * @return ipv6
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getIpv6() {
        return ipv6.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_IPV6)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getIpv6_JsonNullable() {
    return ipv6;
  }
  
  @JsonProperty(JSON_PROPERTY_IPV6)
  public void setIpv6_JsonNullable(JsonNullable<String> ipv6) {
    this.ipv6 = ipv6;
  }

  public void setIpv6(String ipv6) {
    this.ipv6 = JsonNullable.<String>of(ipv6);
  }


  public DiscoveredHostIfaces ipv4(String ipv4) {
    this.ipv4 = JsonNullable.<String>of(ipv4);
    return this;
  }

   /**
   * Get ipv4
   * @return ipv4
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getIpv4() {
        return ipv4.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_IPV4)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getIpv4_JsonNullable() {
    return ipv4;
  }
  
  @JsonProperty(JSON_PROPERTY_IPV4)
  public void setIpv4_JsonNullable(JsonNullable<String> ipv4) {
    this.ipv4 = ipv4;
  }

  public void setIpv4(String ipv4) {
    this.ipv4 = JsonNullable.<String>of(ipv4);
  }


  /**
   * Return true if this DiscoveredHost_ifaces object is equal to o.
   */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    DiscoveredHostIfaces discoveredHostIfaces = (DiscoveredHostIfaces) o;
    return Objects.equals(this.up, discoveredHostIfaces.up) &&
        equalsNullable(this.speed, discoveredHostIfaces.speed) &&
        equalsNullable(this.rdmaEnabled, discoveredHostIfaces.rdmaEnabled) &&
        equalsNullable(this.pciSlotName, discoveredHostIfaces.pciSlotName) &&
        Objects.equals(this.name, discoveredHostIfaces.name) &&
        Objects.equals(this.mtu, discoveredHostIfaces.mtu) &&
        Objects.equals(this.macAddress, discoveredHostIfaces.macAddress) &&
        equalsNullable(this.ipv6, discoveredHostIfaces.ipv6) &&
        equalsNullable(this.ipv4, discoveredHostIfaces.ipv4);
  }

  private static <T> boolean equalsNullable(JsonNullable<T> a, JsonNullable<T> b) {
    return a == b || (a != null && b != null && a.isPresent() && b.isPresent() && Objects.deepEquals(a.get(), b.get()));
  }

  @Override
  public int hashCode() {
    return Objects.hash(up, hashCodeNullable(speed), hashCodeNullable(rdmaEnabled), hashCodeNullable(pciSlotName), name, mtu, macAddress, hashCodeNullable(ipv6), hashCodeNullable(ipv4));
  }

  private static <T> int hashCodeNullable(JsonNullable<T> a) {
    if (a == null) {
      return 1;
    }
    return a.isPresent() ? Arrays.deepHashCode(new Object[]{a.get()}) : 31;
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class DiscoveredHostIfaces {\n");
    sb.append("    up: ").append(toIndentedString(up)).append("\n");
    sb.append("    speed: ").append(toIndentedString(speed)).append("\n");
    sb.append("    rdmaEnabled: ").append(toIndentedString(rdmaEnabled)).append("\n");
    sb.append("    pciSlotName: ").append(toIndentedString(pciSlotName)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    mtu: ").append(toIndentedString(mtu)).append("\n");
    sb.append("    macAddress: ").append(toIndentedString(macAddress)).append("\n");
    sb.append("    ipv6: ").append(toIndentedString(ipv6)).append("\n");
    sb.append("    ipv4: ").append(toIndentedString(ipv4)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

