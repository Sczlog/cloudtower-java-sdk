/*
 * Tower SDK API
 * cloudtower operation API and SDK
 *
 * The version of the OpenAPI document: 1.7.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.smartx.tower.model;

import java.util.Objects;
import java.util.Arrays;
import java.util.Map;
import java.util.HashMap;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import com.smartx.tower.model.LicenseWhereInput;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.util.ArrayList;
import java.util.List;
import org.openapitools.jackson.nullable.JsonNullable;
import com.fasterxml.jackson.annotation.JsonIgnore;
import org.openapitools.jackson.nullable.JsonNullable;
import java.util.NoSuchElementException;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;


/**
 * DeployWhereInput
 */
@JsonPropertyOrder({
  DeployWhereInput.JSON_PROPERTY_A_N_D,
  DeployWhereInput.JSON_PROPERTY_ID,
  DeployWhereInput.JSON_PROPERTY_ID_CONTAINS,
  DeployWhereInput.JSON_PROPERTY_ID_ENDS_WITH,
  DeployWhereInput.JSON_PROPERTY_ID_GT,
  DeployWhereInput.JSON_PROPERTY_ID_GTE,
  DeployWhereInput.JSON_PROPERTY_ID_IN,
  DeployWhereInput.JSON_PROPERTY_ID_LT,
  DeployWhereInput.JSON_PROPERTY_ID_LTE,
  DeployWhereInput.JSON_PROPERTY_ID_NOT,
  DeployWhereInput.JSON_PROPERTY_ID_NOT_CONTAINS,
  DeployWhereInput.JSON_PROPERTY_ID_NOT_ENDS_WITH,
  DeployWhereInput.JSON_PROPERTY_ID_NOT_IN,
  DeployWhereInput.JSON_PROPERTY_ID_NOT_STARTS_WITH,
  DeployWhereInput.JSON_PROPERTY_ID_STARTS_WITH,
  DeployWhereInput.JSON_PROPERTY_LICENSE,
  DeployWhereInput.JSON_PROPERTY_N_O_T,
  DeployWhereInput.JSON_PROPERTY_O_R,
  DeployWhereInput.JSON_PROPERTY_VERSION,
  DeployWhereInput.JSON_PROPERTY_VERSION_CONTAINS,
  DeployWhereInput.JSON_PROPERTY_VERSION_ENDS_WITH,
  DeployWhereInput.JSON_PROPERTY_VERSION_GT,
  DeployWhereInput.JSON_PROPERTY_VERSION_GTE,
  DeployWhereInput.JSON_PROPERTY_VERSION_IN,
  DeployWhereInput.JSON_PROPERTY_VERSION_LT,
  DeployWhereInput.JSON_PROPERTY_VERSION_LTE,
  DeployWhereInput.JSON_PROPERTY_VERSION_NOT,
  DeployWhereInput.JSON_PROPERTY_VERSION_NOT_CONTAINS,
  DeployWhereInput.JSON_PROPERTY_VERSION_NOT_ENDS_WITH,
  DeployWhereInput.JSON_PROPERTY_VERSION_NOT_IN,
  DeployWhereInput.JSON_PROPERTY_VERSION_NOT_STARTS_WITH,
  DeployWhereInput.JSON_PROPERTY_VERSION_STARTS_WITH
})
@javax.annotation.processing.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2021-10-27T15:59:14.939791800+08:00[Asia/Shanghai]")
public class DeployWhereInput {
  public static final String JSON_PROPERTY_A_N_D = "AND";
  private JsonNullable<List<DeployWhereInput>> AND = JsonNullable.<List<DeployWhereInput>>undefined();

  public static final String JSON_PROPERTY_ID = "id";
  private JsonNullable<String> id = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_ID_CONTAINS = "id_contains";
  private JsonNullable<String> idContains = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_ID_ENDS_WITH = "id_ends_with";
  private JsonNullable<String> idEndsWith = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_ID_GT = "id_gt";
  private JsonNullable<String> idGt = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_ID_GTE = "id_gte";
  private JsonNullable<String> idGte = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_ID_IN = "id_in";
  private JsonNullable<List<String>> idIn = JsonNullable.<List<String>>undefined();

  public static final String JSON_PROPERTY_ID_LT = "id_lt";
  private JsonNullable<String> idLt = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_ID_LTE = "id_lte";
  private JsonNullable<String> idLte = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_ID_NOT = "id_not";
  private JsonNullable<String> idNot = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_ID_NOT_CONTAINS = "id_not_contains";
  private JsonNullable<String> idNotContains = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_ID_NOT_ENDS_WITH = "id_not_ends_with";
  private JsonNullable<String> idNotEndsWith = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_ID_NOT_IN = "id_not_in";
  private JsonNullable<List<String>> idNotIn = JsonNullable.<List<String>>undefined();

  public static final String JSON_PROPERTY_ID_NOT_STARTS_WITH = "id_not_starts_with";
  private JsonNullable<String> idNotStartsWith = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_ID_STARTS_WITH = "id_starts_with";
  private JsonNullable<String> idStartsWith = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_LICENSE = "license";
  private JsonNullable<LicenseWhereInput> license = JsonNullable.<LicenseWhereInput>undefined();

  public static final String JSON_PROPERTY_N_O_T = "NOT";
  private JsonNullable<List<DeployWhereInput>> NOT = JsonNullable.<List<DeployWhereInput>>undefined();

  public static final String JSON_PROPERTY_O_R = "OR";
  private JsonNullable<List<DeployWhereInput>> OR = JsonNullable.<List<DeployWhereInput>>undefined();

  public static final String JSON_PROPERTY_VERSION = "version";
  private JsonNullable<String> version = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_VERSION_CONTAINS = "version_contains";
  private JsonNullable<String> versionContains = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_VERSION_ENDS_WITH = "version_ends_with";
  private JsonNullable<String> versionEndsWith = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_VERSION_GT = "version_gt";
  private JsonNullable<String> versionGt = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_VERSION_GTE = "version_gte";
  private JsonNullable<String> versionGte = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_VERSION_IN = "version_in";
  private JsonNullable<List<String>> versionIn = JsonNullable.<List<String>>undefined();

  public static final String JSON_PROPERTY_VERSION_LT = "version_lt";
  private JsonNullable<String> versionLt = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_VERSION_LTE = "version_lte";
  private JsonNullable<String> versionLte = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_VERSION_NOT = "version_not";
  private JsonNullable<String> versionNot = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_VERSION_NOT_CONTAINS = "version_not_contains";
  private JsonNullable<String> versionNotContains = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_VERSION_NOT_ENDS_WITH = "version_not_ends_with";
  private JsonNullable<String> versionNotEndsWith = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_VERSION_NOT_IN = "version_not_in";
  private JsonNullable<List<String>> versionNotIn = JsonNullable.<List<String>>undefined();

  public static final String JSON_PROPERTY_VERSION_NOT_STARTS_WITH = "version_not_starts_with";
  private JsonNullable<String> versionNotStartsWith = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_VERSION_STARTS_WITH = "version_starts_with";
  private JsonNullable<String> versionStartsWith = JsonNullable.<String>undefined();


  public DeployWhereInput AND(List<DeployWhereInput> AND) {
    this.AND = JsonNullable.<List<DeployWhereInput>>of(AND);
    return this;
  }

  public DeployWhereInput addANDItem(DeployWhereInput ANDItem) {
    if (this.AND == null || !this.AND.isPresent()) {
      this.AND = JsonNullable.<List<DeployWhereInput>>of(new ArrayList<>());
    }
    try {
      this.AND.get().add(ANDItem);
    } catch (java.util.NoSuchElementException e) {
      // this can never happen, as we make sure above that the value is present
    }
    return this;
  }

   /**
   * Get AND
   * @return AND
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public List<DeployWhereInput> getAND() {
        return AND.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_A_N_D)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<List<DeployWhereInput>> getAND_JsonNullable() {
    return AND;
  }
  
  @JsonProperty(JSON_PROPERTY_A_N_D)
  public void setAND_JsonNullable(JsonNullable<List<DeployWhereInput>> AND) {
    this.AND = AND;
  }

  public void setAND(List<DeployWhereInput> AND) {
    this.AND = JsonNullable.<List<DeployWhereInput>>of(AND);
  }


  public DeployWhereInput id(String id) {
    this.id = JsonNullable.<String>of(id);
    return this;
  }

   /**
   * Get id
   * @return id
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getId() {
        return id.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getId_JsonNullable() {
    return id;
  }
  
  @JsonProperty(JSON_PROPERTY_ID)
  public void setId_JsonNullable(JsonNullable<String> id) {
    this.id = id;
  }

  public void setId(String id) {
    this.id = JsonNullable.<String>of(id);
  }


  public DeployWhereInput idContains(String idContains) {
    this.idContains = JsonNullable.<String>of(idContains);
    return this;
  }

   /**
   * Get idContains
   * @return idContains
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getIdContains() {
        return idContains.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_ID_CONTAINS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getIdContains_JsonNullable() {
    return idContains;
  }
  
  @JsonProperty(JSON_PROPERTY_ID_CONTAINS)
  public void setIdContains_JsonNullable(JsonNullable<String> idContains) {
    this.idContains = idContains;
  }

  public void setIdContains(String idContains) {
    this.idContains = JsonNullable.<String>of(idContains);
  }


  public DeployWhereInput idEndsWith(String idEndsWith) {
    this.idEndsWith = JsonNullable.<String>of(idEndsWith);
    return this;
  }

   /**
   * Get idEndsWith
   * @return idEndsWith
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getIdEndsWith() {
        return idEndsWith.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_ID_ENDS_WITH)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getIdEndsWith_JsonNullable() {
    return idEndsWith;
  }
  
  @JsonProperty(JSON_PROPERTY_ID_ENDS_WITH)
  public void setIdEndsWith_JsonNullable(JsonNullable<String> idEndsWith) {
    this.idEndsWith = idEndsWith;
  }

  public void setIdEndsWith(String idEndsWith) {
    this.idEndsWith = JsonNullable.<String>of(idEndsWith);
  }


  public DeployWhereInput idGt(String idGt) {
    this.idGt = JsonNullable.<String>of(idGt);
    return this;
  }

   /**
   * Get idGt
   * @return idGt
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getIdGt() {
        return idGt.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_ID_GT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getIdGt_JsonNullable() {
    return idGt;
  }
  
  @JsonProperty(JSON_PROPERTY_ID_GT)
  public void setIdGt_JsonNullable(JsonNullable<String> idGt) {
    this.idGt = idGt;
  }

  public void setIdGt(String idGt) {
    this.idGt = JsonNullable.<String>of(idGt);
  }


  public DeployWhereInput idGte(String idGte) {
    this.idGte = JsonNullable.<String>of(idGte);
    return this;
  }

   /**
   * Get idGte
   * @return idGte
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getIdGte() {
        return idGte.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_ID_GTE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getIdGte_JsonNullable() {
    return idGte;
  }
  
  @JsonProperty(JSON_PROPERTY_ID_GTE)
  public void setIdGte_JsonNullable(JsonNullable<String> idGte) {
    this.idGte = idGte;
  }

  public void setIdGte(String idGte) {
    this.idGte = JsonNullable.<String>of(idGte);
  }


  public DeployWhereInput idIn(List<String> idIn) {
    this.idIn = JsonNullable.<List<String>>of(idIn);
    return this;
  }

  public DeployWhereInput addIdInItem(String idInItem) {
    if (this.idIn == null || !this.idIn.isPresent()) {
      this.idIn = JsonNullable.<List<String>>of(new ArrayList<>());
    }
    try {
      this.idIn.get().add(idInItem);
    } catch (java.util.NoSuchElementException e) {
      // this can never happen, as we make sure above that the value is present
    }
    return this;
  }

   /**
   * Get idIn
   * @return idIn
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public List<String> getIdIn() {
        return idIn.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_ID_IN)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<List<String>> getIdIn_JsonNullable() {
    return idIn;
  }
  
  @JsonProperty(JSON_PROPERTY_ID_IN)
  public void setIdIn_JsonNullable(JsonNullable<List<String>> idIn) {
    this.idIn = idIn;
  }

  public void setIdIn(List<String> idIn) {
    this.idIn = JsonNullable.<List<String>>of(idIn);
  }


  public DeployWhereInput idLt(String idLt) {
    this.idLt = JsonNullable.<String>of(idLt);
    return this;
  }

   /**
   * Get idLt
   * @return idLt
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getIdLt() {
        return idLt.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_ID_LT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getIdLt_JsonNullable() {
    return idLt;
  }
  
  @JsonProperty(JSON_PROPERTY_ID_LT)
  public void setIdLt_JsonNullable(JsonNullable<String> idLt) {
    this.idLt = idLt;
  }

  public void setIdLt(String idLt) {
    this.idLt = JsonNullable.<String>of(idLt);
  }


  public DeployWhereInput idLte(String idLte) {
    this.idLte = JsonNullable.<String>of(idLte);
    return this;
  }

   /**
   * Get idLte
   * @return idLte
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getIdLte() {
        return idLte.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_ID_LTE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getIdLte_JsonNullable() {
    return idLte;
  }
  
  @JsonProperty(JSON_PROPERTY_ID_LTE)
  public void setIdLte_JsonNullable(JsonNullable<String> idLte) {
    this.idLte = idLte;
  }

  public void setIdLte(String idLte) {
    this.idLte = JsonNullable.<String>of(idLte);
  }


  public DeployWhereInput idNot(String idNot) {
    this.idNot = JsonNullable.<String>of(idNot);
    return this;
  }

   /**
   * Get idNot
   * @return idNot
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getIdNot() {
        return idNot.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_ID_NOT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getIdNot_JsonNullable() {
    return idNot;
  }
  
  @JsonProperty(JSON_PROPERTY_ID_NOT)
  public void setIdNot_JsonNullable(JsonNullable<String> idNot) {
    this.idNot = idNot;
  }

  public void setIdNot(String idNot) {
    this.idNot = JsonNullable.<String>of(idNot);
  }


  public DeployWhereInput idNotContains(String idNotContains) {
    this.idNotContains = JsonNullable.<String>of(idNotContains);
    return this;
  }

   /**
   * Get idNotContains
   * @return idNotContains
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getIdNotContains() {
        return idNotContains.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_ID_NOT_CONTAINS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getIdNotContains_JsonNullable() {
    return idNotContains;
  }
  
  @JsonProperty(JSON_PROPERTY_ID_NOT_CONTAINS)
  public void setIdNotContains_JsonNullable(JsonNullable<String> idNotContains) {
    this.idNotContains = idNotContains;
  }

  public void setIdNotContains(String idNotContains) {
    this.idNotContains = JsonNullable.<String>of(idNotContains);
  }


  public DeployWhereInput idNotEndsWith(String idNotEndsWith) {
    this.idNotEndsWith = JsonNullable.<String>of(idNotEndsWith);
    return this;
  }

   /**
   * Get idNotEndsWith
   * @return idNotEndsWith
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getIdNotEndsWith() {
        return idNotEndsWith.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_ID_NOT_ENDS_WITH)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getIdNotEndsWith_JsonNullable() {
    return idNotEndsWith;
  }
  
  @JsonProperty(JSON_PROPERTY_ID_NOT_ENDS_WITH)
  public void setIdNotEndsWith_JsonNullable(JsonNullable<String> idNotEndsWith) {
    this.idNotEndsWith = idNotEndsWith;
  }

  public void setIdNotEndsWith(String idNotEndsWith) {
    this.idNotEndsWith = JsonNullable.<String>of(idNotEndsWith);
  }


  public DeployWhereInput idNotIn(List<String> idNotIn) {
    this.idNotIn = JsonNullable.<List<String>>of(idNotIn);
    return this;
  }

  public DeployWhereInput addIdNotInItem(String idNotInItem) {
    if (this.idNotIn == null || !this.idNotIn.isPresent()) {
      this.idNotIn = JsonNullable.<List<String>>of(new ArrayList<>());
    }
    try {
      this.idNotIn.get().add(idNotInItem);
    } catch (java.util.NoSuchElementException e) {
      // this can never happen, as we make sure above that the value is present
    }
    return this;
  }

   /**
   * Get idNotIn
   * @return idNotIn
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public List<String> getIdNotIn() {
        return idNotIn.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_ID_NOT_IN)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<List<String>> getIdNotIn_JsonNullable() {
    return idNotIn;
  }
  
  @JsonProperty(JSON_PROPERTY_ID_NOT_IN)
  public void setIdNotIn_JsonNullable(JsonNullable<List<String>> idNotIn) {
    this.idNotIn = idNotIn;
  }

  public void setIdNotIn(List<String> idNotIn) {
    this.idNotIn = JsonNullable.<List<String>>of(idNotIn);
  }


  public DeployWhereInput idNotStartsWith(String idNotStartsWith) {
    this.idNotStartsWith = JsonNullable.<String>of(idNotStartsWith);
    return this;
  }

   /**
   * Get idNotStartsWith
   * @return idNotStartsWith
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getIdNotStartsWith() {
        return idNotStartsWith.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_ID_NOT_STARTS_WITH)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getIdNotStartsWith_JsonNullable() {
    return idNotStartsWith;
  }
  
  @JsonProperty(JSON_PROPERTY_ID_NOT_STARTS_WITH)
  public void setIdNotStartsWith_JsonNullable(JsonNullable<String> idNotStartsWith) {
    this.idNotStartsWith = idNotStartsWith;
  }

  public void setIdNotStartsWith(String idNotStartsWith) {
    this.idNotStartsWith = JsonNullable.<String>of(idNotStartsWith);
  }


  public DeployWhereInput idStartsWith(String idStartsWith) {
    this.idStartsWith = JsonNullable.<String>of(idStartsWith);
    return this;
  }

   /**
   * Get idStartsWith
   * @return idStartsWith
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getIdStartsWith() {
        return idStartsWith.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_ID_STARTS_WITH)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getIdStartsWith_JsonNullable() {
    return idStartsWith;
  }
  
  @JsonProperty(JSON_PROPERTY_ID_STARTS_WITH)
  public void setIdStartsWith_JsonNullable(JsonNullable<String> idStartsWith) {
    this.idStartsWith = idStartsWith;
  }

  public void setIdStartsWith(String idStartsWith) {
    this.idStartsWith = JsonNullable.<String>of(idStartsWith);
  }


  public DeployWhereInput license(LicenseWhereInput license) {
    this.license = JsonNullable.<LicenseWhereInput>of(license);
    return this;
  }

   /**
   * Get license
   * @return license
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public LicenseWhereInput getLicense() {
        return license.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_LICENSE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<LicenseWhereInput> getLicense_JsonNullable() {
    return license;
  }
  
  @JsonProperty(JSON_PROPERTY_LICENSE)
  public void setLicense_JsonNullable(JsonNullable<LicenseWhereInput> license) {
    this.license = license;
  }

  public void setLicense(LicenseWhereInput license) {
    this.license = JsonNullable.<LicenseWhereInput>of(license);
  }


  public DeployWhereInput NOT(List<DeployWhereInput> NOT) {
    this.NOT = JsonNullable.<List<DeployWhereInput>>of(NOT);
    return this;
  }

  public DeployWhereInput addNOTItem(DeployWhereInput NOTItem) {
    if (this.NOT == null || !this.NOT.isPresent()) {
      this.NOT = JsonNullable.<List<DeployWhereInput>>of(new ArrayList<>());
    }
    try {
      this.NOT.get().add(NOTItem);
    } catch (java.util.NoSuchElementException e) {
      // this can never happen, as we make sure above that the value is present
    }
    return this;
  }

   /**
   * Get NOT
   * @return NOT
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public List<DeployWhereInput> getNOT() {
        return NOT.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_N_O_T)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<List<DeployWhereInput>> getNOT_JsonNullable() {
    return NOT;
  }
  
  @JsonProperty(JSON_PROPERTY_N_O_T)
  public void setNOT_JsonNullable(JsonNullable<List<DeployWhereInput>> NOT) {
    this.NOT = NOT;
  }

  public void setNOT(List<DeployWhereInput> NOT) {
    this.NOT = JsonNullable.<List<DeployWhereInput>>of(NOT);
  }


  public DeployWhereInput OR(List<DeployWhereInput> OR) {
    this.OR = JsonNullable.<List<DeployWhereInput>>of(OR);
    return this;
  }

  public DeployWhereInput addORItem(DeployWhereInput ORItem) {
    if (this.OR == null || !this.OR.isPresent()) {
      this.OR = JsonNullable.<List<DeployWhereInput>>of(new ArrayList<>());
    }
    try {
      this.OR.get().add(ORItem);
    } catch (java.util.NoSuchElementException e) {
      // this can never happen, as we make sure above that the value is present
    }
    return this;
  }

   /**
   * Get OR
   * @return OR
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public List<DeployWhereInput> getOR() {
        return OR.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_O_R)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<List<DeployWhereInput>> getOR_JsonNullable() {
    return OR;
  }
  
  @JsonProperty(JSON_PROPERTY_O_R)
  public void setOR_JsonNullable(JsonNullable<List<DeployWhereInput>> OR) {
    this.OR = OR;
  }

  public void setOR(List<DeployWhereInput> OR) {
    this.OR = JsonNullable.<List<DeployWhereInput>>of(OR);
  }


  public DeployWhereInput version(String version) {
    this.version = JsonNullable.<String>of(version);
    return this;
  }

   /**
   * Get version
   * @return version
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getVersion() {
        return version.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_VERSION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getVersion_JsonNullable() {
    return version;
  }
  
  @JsonProperty(JSON_PROPERTY_VERSION)
  public void setVersion_JsonNullable(JsonNullable<String> version) {
    this.version = version;
  }

  public void setVersion(String version) {
    this.version = JsonNullable.<String>of(version);
  }


  public DeployWhereInput versionContains(String versionContains) {
    this.versionContains = JsonNullable.<String>of(versionContains);
    return this;
  }

   /**
   * Get versionContains
   * @return versionContains
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getVersionContains() {
        return versionContains.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_VERSION_CONTAINS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getVersionContains_JsonNullable() {
    return versionContains;
  }
  
  @JsonProperty(JSON_PROPERTY_VERSION_CONTAINS)
  public void setVersionContains_JsonNullable(JsonNullable<String> versionContains) {
    this.versionContains = versionContains;
  }

  public void setVersionContains(String versionContains) {
    this.versionContains = JsonNullable.<String>of(versionContains);
  }


  public DeployWhereInput versionEndsWith(String versionEndsWith) {
    this.versionEndsWith = JsonNullable.<String>of(versionEndsWith);
    return this;
  }

   /**
   * Get versionEndsWith
   * @return versionEndsWith
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getVersionEndsWith() {
        return versionEndsWith.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_VERSION_ENDS_WITH)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getVersionEndsWith_JsonNullable() {
    return versionEndsWith;
  }
  
  @JsonProperty(JSON_PROPERTY_VERSION_ENDS_WITH)
  public void setVersionEndsWith_JsonNullable(JsonNullable<String> versionEndsWith) {
    this.versionEndsWith = versionEndsWith;
  }

  public void setVersionEndsWith(String versionEndsWith) {
    this.versionEndsWith = JsonNullable.<String>of(versionEndsWith);
  }


  public DeployWhereInput versionGt(String versionGt) {
    this.versionGt = JsonNullable.<String>of(versionGt);
    return this;
  }

   /**
   * Get versionGt
   * @return versionGt
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getVersionGt() {
        return versionGt.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_VERSION_GT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getVersionGt_JsonNullable() {
    return versionGt;
  }
  
  @JsonProperty(JSON_PROPERTY_VERSION_GT)
  public void setVersionGt_JsonNullable(JsonNullable<String> versionGt) {
    this.versionGt = versionGt;
  }

  public void setVersionGt(String versionGt) {
    this.versionGt = JsonNullable.<String>of(versionGt);
  }


  public DeployWhereInput versionGte(String versionGte) {
    this.versionGte = JsonNullable.<String>of(versionGte);
    return this;
  }

   /**
   * Get versionGte
   * @return versionGte
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getVersionGte() {
        return versionGte.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_VERSION_GTE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getVersionGte_JsonNullable() {
    return versionGte;
  }
  
  @JsonProperty(JSON_PROPERTY_VERSION_GTE)
  public void setVersionGte_JsonNullable(JsonNullable<String> versionGte) {
    this.versionGte = versionGte;
  }

  public void setVersionGte(String versionGte) {
    this.versionGte = JsonNullable.<String>of(versionGte);
  }


  public DeployWhereInput versionIn(List<String> versionIn) {
    this.versionIn = JsonNullable.<List<String>>of(versionIn);
    return this;
  }

  public DeployWhereInput addVersionInItem(String versionInItem) {
    if (this.versionIn == null || !this.versionIn.isPresent()) {
      this.versionIn = JsonNullable.<List<String>>of(new ArrayList<>());
    }
    try {
      this.versionIn.get().add(versionInItem);
    } catch (java.util.NoSuchElementException e) {
      // this can never happen, as we make sure above that the value is present
    }
    return this;
  }

   /**
   * Get versionIn
   * @return versionIn
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public List<String> getVersionIn() {
        return versionIn.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_VERSION_IN)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<List<String>> getVersionIn_JsonNullable() {
    return versionIn;
  }
  
  @JsonProperty(JSON_PROPERTY_VERSION_IN)
  public void setVersionIn_JsonNullable(JsonNullable<List<String>> versionIn) {
    this.versionIn = versionIn;
  }

  public void setVersionIn(List<String> versionIn) {
    this.versionIn = JsonNullable.<List<String>>of(versionIn);
  }


  public DeployWhereInput versionLt(String versionLt) {
    this.versionLt = JsonNullable.<String>of(versionLt);
    return this;
  }

   /**
   * Get versionLt
   * @return versionLt
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getVersionLt() {
        return versionLt.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_VERSION_LT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getVersionLt_JsonNullable() {
    return versionLt;
  }
  
  @JsonProperty(JSON_PROPERTY_VERSION_LT)
  public void setVersionLt_JsonNullable(JsonNullable<String> versionLt) {
    this.versionLt = versionLt;
  }

  public void setVersionLt(String versionLt) {
    this.versionLt = JsonNullable.<String>of(versionLt);
  }


  public DeployWhereInput versionLte(String versionLte) {
    this.versionLte = JsonNullable.<String>of(versionLte);
    return this;
  }

   /**
   * Get versionLte
   * @return versionLte
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getVersionLte() {
        return versionLte.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_VERSION_LTE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getVersionLte_JsonNullable() {
    return versionLte;
  }
  
  @JsonProperty(JSON_PROPERTY_VERSION_LTE)
  public void setVersionLte_JsonNullable(JsonNullable<String> versionLte) {
    this.versionLte = versionLte;
  }

  public void setVersionLte(String versionLte) {
    this.versionLte = JsonNullable.<String>of(versionLte);
  }


  public DeployWhereInput versionNot(String versionNot) {
    this.versionNot = JsonNullable.<String>of(versionNot);
    return this;
  }

   /**
   * Get versionNot
   * @return versionNot
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getVersionNot() {
        return versionNot.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_VERSION_NOT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getVersionNot_JsonNullable() {
    return versionNot;
  }
  
  @JsonProperty(JSON_PROPERTY_VERSION_NOT)
  public void setVersionNot_JsonNullable(JsonNullable<String> versionNot) {
    this.versionNot = versionNot;
  }

  public void setVersionNot(String versionNot) {
    this.versionNot = JsonNullable.<String>of(versionNot);
  }


  public DeployWhereInput versionNotContains(String versionNotContains) {
    this.versionNotContains = JsonNullable.<String>of(versionNotContains);
    return this;
  }

   /**
   * Get versionNotContains
   * @return versionNotContains
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getVersionNotContains() {
        return versionNotContains.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_VERSION_NOT_CONTAINS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getVersionNotContains_JsonNullable() {
    return versionNotContains;
  }
  
  @JsonProperty(JSON_PROPERTY_VERSION_NOT_CONTAINS)
  public void setVersionNotContains_JsonNullable(JsonNullable<String> versionNotContains) {
    this.versionNotContains = versionNotContains;
  }

  public void setVersionNotContains(String versionNotContains) {
    this.versionNotContains = JsonNullable.<String>of(versionNotContains);
  }


  public DeployWhereInput versionNotEndsWith(String versionNotEndsWith) {
    this.versionNotEndsWith = JsonNullable.<String>of(versionNotEndsWith);
    return this;
  }

   /**
   * Get versionNotEndsWith
   * @return versionNotEndsWith
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getVersionNotEndsWith() {
        return versionNotEndsWith.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_VERSION_NOT_ENDS_WITH)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getVersionNotEndsWith_JsonNullable() {
    return versionNotEndsWith;
  }
  
  @JsonProperty(JSON_PROPERTY_VERSION_NOT_ENDS_WITH)
  public void setVersionNotEndsWith_JsonNullable(JsonNullable<String> versionNotEndsWith) {
    this.versionNotEndsWith = versionNotEndsWith;
  }

  public void setVersionNotEndsWith(String versionNotEndsWith) {
    this.versionNotEndsWith = JsonNullable.<String>of(versionNotEndsWith);
  }


  public DeployWhereInput versionNotIn(List<String> versionNotIn) {
    this.versionNotIn = JsonNullable.<List<String>>of(versionNotIn);
    return this;
  }

  public DeployWhereInput addVersionNotInItem(String versionNotInItem) {
    if (this.versionNotIn == null || !this.versionNotIn.isPresent()) {
      this.versionNotIn = JsonNullable.<List<String>>of(new ArrayList<>());
    }
    try {
      this.versionNotIn.get().add(versionNotInItem);
    } catch (java.util.NoSuchElementException e) {
      // this can never happen, as we make sure above that the value is present
    }
    return this;
  }

   /**
   * Get versionNotIn
   * @return versionNotIn
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public List<String> getVersionNotIn() {
        return versionNotIn.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_VERSION_NOT_IN)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<List<String>> getVersionNotIn_JsonNullable() {
    return versionNotIn;
  }
  
  @JsonProperty(JSON_PROPERTY_VERSION_NOT_IN)
  public void setVersionNotIn_JsonNullable(JsonNullable<List<String>> versionNotIn) {
    this.versionNotIn = versionNotIn;
  }

  public void setVersionNotIn(List<String> versionNotIn) {
    this.versionNotIn = JsonNullable.<List<String>>of(versionNotIn);
  }


  public DeployWhereInput versionNotStartsWith(String versionNotStartsWith) {
    this.versionNotStartsWith = JsonNullable.<String>of(versionNotStartsWith);
    return this;
  }

   /**
   * Get versionNotStartsWith
   * @return versionNotStartsWith
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getVersionNotStartsWith() {
        return versionNotStartsWith.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_VERSION_NOT_STARTS_WITH)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getVersionNotStartsWith_JsonNullable() {
    return versionNotStartsWith;
  }
  
  @JsonProperty(JSON_PROPERTY_VERSION_NOT_STARTS_WITH)
  public void setVersionNotStartsWith_JsonNullable(JsonNullable<String> versionNotStartsWith) {
    this.versionNotStartsWith = versionNotStartsWith;
  }

  public void setVersionNotStartsWith(String versionNotStartsWith) {
    this.versionNotStartsWith = JsonNullable.<String>of(versionNotStartsWith);
  }


  public DeployWhereInput versionStartsWith(String versionStartsWith) {
    this.versionStartsWith = JsonNullable.<String>of(versionStartsWith);
    return this;
  }

   /**
   * Get versionStartsWith
   * @return versionStartsWith
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getVersionStartsWith() {
        return versionStartsWith.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_VERSION_STARTS_WITH)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getVersionStartsWith_JsonNullable() {
    return versionStartsWith;
  }
  
  @JsonProperty(JSON_PROPERTY_VERSION_STARTS_WITH)
  public void setVersionStartsWith_JsonNullable(JsonNullable<String> versionStartsWith) {
    this.versionStartsWith = versionStartsWith;
  }

  public void setVersionStartsWith(String versionStartsWith) {
    this.versionStartsWith = JsonNullable.<String>of(versionStartsWith);
  }


  /**
   * Return true if this DeployWhereInput object is equal to o.
   */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    DeployWhereInput deployWhereInput = (DeployWhereInput) o;
    return equalsNullable(this.AND, deployWhereInput.AND) &&
        equalsNullable(this.id, deployWhereInput.id) &&
        equalsNullable(this.idContains, deployWhereInput.idContains) &&
        equalsNullable(this.idEndsWith, deployWhereInput.idEndsWith) &&
        equalsNullable(this.idGt, deployWhereInput.idGt) &&
        equalsNullable(this.idGte, deployWhereInput.idGte) &&
        equalsNullable(this.idIn, deployWhereInput.idIn) &&
        equalsNullable(this.idLt, deployWhereInput.idLt) &&
        equalsNullable(this.idLte, deployWhereInput.idLte) &&
        equalsNullable(this.idNot, deployWhereInput.idNot) &&
        equalsNullable(this.idNotContains, deployWhereInput.idNotContains) &&
        equalsNullable(this.idNotEndsWith, deployWhereInput.idNotEndsWith) &&
        equalsNullable(this.idNotIn, deployWhereInput.idNotIn) &&
        equalsNullable(this.idNotStartsWith, deployWhereInput.idNotStartsWith) &&
        equalsNullable(this.idStartsWith, deployWhereInput.idStartsWith) &&
        equalsNullable(this.license, deployWhereInput.license) &&
        equalsNullable(this.NOT, deployWhereInput.NOT) &&
        equalsNullable(this.OR, deployWhereInput.OR) &&
        equalsNullable(this.version, deployWhereInput.version) &&
        equalsNullable(this.versionContains, deployWhereInput.versionContains) &&
        equalsNullable(this.versionEndsWith, deployWhereInput.versionEndsWith) &&
        equalsNullable(this.versionGt, deployWhereInput.versionGt) &&
        equalsNullable(this.versionGte, deployWhereInput.versionGte) &&
        equalsNullable(this.versionIn, deployWhereInput.versionIn) &&
        equalsNullable(this.versionLt, deployWhereInput.versionLt) &&
        equalsNullable(this.versionLte, deployWhereInput.versionLte) &&
        equalsNullable(this.versionNot, deployWhereInput.versionNot) &&
        equalsNullable(this.versionNotContains, deployWhereInput.versionNotContains) &&
        equalsNullable(this.versionNotEndsWith, deployWhereInput.versionNotEndsWith) &&
        equalsNullable(this.versionNotIn, deployWhereInput.versionNotIn) &&
        equalsNullable(this.versionNotStartsWith, deployWhereInput.versionNotStartsWith) &&
        equalsNullable(this.versionStartsWith, deployWhereInput.versionStartsWith);
  }

  private static <T> boolean equalsNullable(JsonNullable<T> a, JsonNullable<T> b) {
    return a == b || (a != null && b != null && a.isPresent() && b.isPresent() && Objects.deepEquals(a.get(), b.get()));
  }

  @Override
  public int hashCode() {
    return Objects.hash(hashCodeNullable(AND), hashCodeNullable(id), hashCodeNullable(idContains), hashCodeNullable(idEndsWith), hashCodeNullable(idGt), hashCodeNullable(idGte), hashCodeNullable(idIn), hashCodeNullable(idLt), hashCodeNullable(idLte), hashCodeNullable(idNot), hashCodeNullable(idNotContains), hashCodeNullable(idNotEndsWith), hashCodeNullable(idNotIn), hashCodeNullable(idNotStartsWith), hashCodeNullable(idStartsWith), hashCodeNullable(license), hashCodeNullable(NOT), hashCodeNullable(OR), hashCodeNullable(version), hashCodeNullable(versionContains), hashCodeNullable(versionEndsWith), hashCodeNullable(versionGt), hashCodeNullable(versionGte), hashCodeNullable(versionIn), hashCodeNullable(versionLt), hashCodeNullable(versionLte), hashCodeNullable(versionNot), hashCodeNullable(versionNotContains), hashCodeNullable(versionNotEndsWith), hashCodeNullable(versionNotIn), hashCodeNullable(versionNotStartsWith), hashCodeNullable(versionStartsWith));
  }

  private static <T> int hashCodeNullable(JsonNullable<T> a) {
    if (a == null) {
      return 1;
    }
    return a.isPresent() ? Arrays.deepHashCode(new Object[]{a.get()}) : 31;
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class DeployWhereInput {\n");
    sb.append("    AND: ").append(toIndentedString(AND)).append("\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    idContains: ").append(toIndentedString(idContains)).append("\n");
    sb.append("    idEndsWith: ").append(toIndentedString(idEndsWith)).append("\n");
    sb.append("    idGt: ").append(toIndentedString(idGt)).append("\n");
    sb.append("    idGte: ").append(toIndentedString(idGte)).append("\n");
    sb.append("    idIn: ").append(toIndentedString(idIn)).append("\n");
    sb.append("    idLt: ").append(toIndentedString(idLt)).append("\n");
    sb.append("    idLte: ").append(toIndentedString(idLte)).append("\n");
    sb.append("    idNot: ").append(toIndentedString(idNot)).append("\n");
    sb.append("    idNotContains: ").append(toIndentedString(idNotContains)).append("\n");
    sb.append("    idNotEndsWith: ").append(toIndentedString(idNotEndsWith)).append("\n");
    sb.append("    idNotIn: ").append(toIndentedString(idNotIn)).append("\n");
    sb.append("    idNotStartsWith: ").append(toIndentedString(idNotStartsWith)).append("\n");
    sb.append("    idStartsWith: ").append(toIndentedString(idStartsWith)).append("\n");
    sb.append("    license: ").append(toIndentedString(license)).append("\n");
    sb.append("    NOT: ").append(toIndentedString(NOT)).append("\n");
    sb.append("    OR: ").append(toIndentedString(OR)).append("\n");
    sb.append("    version: ").append(toIndentedString(version)).append("\n");
    sb.append("    versionContains: ").append(toIndentedString(versionContains)).append("\n");
    sb.append("    versionEndsWith: ").append(toIndentedString(versionEndsWith)).append("\n");
    sb.append("    versionGt: ").append(toIndentedString(versionGt)).append("\n");
    sb.append("    versionGte: ").append(toIndentedString(versionGte)).append("\n");
    sb.append("    versionIn: ").append(toIndentedString(versionIn)).append("\n");
    sb.append("    versionLt: ").append(toIndentedString(versionLt)).append("\n");
    sb.append("    versionLte: ").append(toIndentedString(versionLte)).append("\n");
    sb.append("    versionNot: ").append(toIndentedString(versionNot)).append("\n");
    sb.append("    versionNotContains: ").append(toIndentedString(versionNotContains)).append("\n");
    sb.append("    versionNotEndsWith: ").append(toIndentedString(versionNotEndsWith)).append("\n");
    sb.append("    versionNotIn: ").append(toIndentedString(versionNotIn)).append("\n");
    sb.append("    versionNotStartsWith: ").append(toIndentedString(versionNotStartsWith)).append("\n");
    sb.append("    versionStartsWith: ").append(toIndentedString(versionStartsWith)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

