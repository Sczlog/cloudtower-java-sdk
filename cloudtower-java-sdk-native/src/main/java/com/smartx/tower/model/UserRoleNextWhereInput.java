/*
 * Tower SDK API
 * cloudtower operation API and SDK
 *
 * The version of the OpenAPI document: 1.7.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.smartx.tower.model;

import java.util.Objects;
import java.util.Arrays;
import java.util.Map;
import java.util.HashMap;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import com.smartx.tower.model.UserRolePlatform;
import com.smartx.tower.model.UserRolePreset;
import com.smartx.tower.model.UserWhereInput;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.util.ArrayList;
import java.util.List;
import org.openapitools.jackson.nullable.JsonNullable;
import com.fasterxml.jackson.annotation.JsonIgnore;
import org.openapitools.jackson.nullable.JsonNullable;
import java.util.NoSuchElementException;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;


/**
 * UserRoleNextWhereInput
 */
@JsonPropertyOrder({
  UserRoleNextWhereInput.JSON_PROPERTY_A_N_D,
  UserRoleNextWhereInput.JSON_PROPERTY_ID,
  UserRoleNextWhereInput.JSON_PROPERTY_ID_CONTAINS,
  UserRoleNextWhereInput.JSON_PROPERTY_ID_ENDS_WITH,
  UserRoleNextWhereInput.JSON_PROPERTY_ID_GT,
  UserRoleNextWhereInput.JSON_PROPERTY_ID_GTE,
  UserRoleNextWhereInput.JSON_PROPERTY_ID_IN,
  UserRoleNextWhereInput.JSON_PROPERTY_ID_LT,
  UserRoleNextWhereInput.JSON_PROPERTY_ID_LTE,
  UserRoleNextWhereInput.JSON_PROPERTY_ID_NOT,
  UserRoleNextWhereInput.JSON_PROPERTY_ID_NOT_CONTAINS,
  UserRoleNextWhereInput.JSON_PROPERTY_ID_NOT_ENDS_WITH,
  UserRoleNextWhereInput.JSON_PROPERTY_ID_NOT_IN,
  UserRoleNextWhereInput.JSON_PROPERTY_ID_NOT_STARTS_WITH,
  UserRoleNextWhereInput.JSON_PROPERTY_ID_STARTS_WITH,
  UserRoleNextWhereInput.JSON_PROPERTY_NAME,
  UserRoleNextWhereInput.JSON_PROPERTY_NAME_CONTAINS,
  UserRoleNextWhereInput.JSON_PROPERTY_NAME_ENDS_WITH,
  UserRoleNextWhereInput.JSON_PROPERTY_NAME_GT,
  UserRoleNextWhereInput.JSON_PROPERTY_NAME_GTE,
  UserRoleNextWhereInput.JSON_PROPERTY_NAME_IN,
  UserRoleNextWhereInput.JSON_PROPERTY_NAME_LT,
  UserRoleNextWhereInput.JSON_PROPERTY_NAME_LTE,
  UserRoleNextWhereInput.JSON_PROPERTY_NAME_NOT,
  UserRoleNextWhereInput.JSON_PROPERTY_NAME_NOT_CONTAINS,
  UserRoleNextWhereInput.JSON_PROPERTY_NAME_NOT_ENDS_WITH,
  UserRoleNextWhereInput.JSON_PROPERTY_NAME_NOT_IN,
  UserRoleNextWhereInput.JSON_PROPERTY_NAME_NOT_STARTS_WITH,
  UserRoleNextWhereInput.JSON_PROPERTY_NAME_STARTS_WITH,
  UserRoleNextWhereInput.JSON_PROPERTY_N_O_T,
  UserRoleNextWhereInput.JSON_PROPERTY_O_R,
  UserRoleNextWhereInput.JSON_PROPERTY_PLATFORM,
  UserRoleNextWhereInput.JSON_PROPERTY_PLATFORM_IN,
  UserRoleNextWhereInput.JSON_PROPERTY_PLATFORM_NOT,
  UserRoleNextWhereInput.JSON_PROPERTY_PLATFORM_NOT_IN,
  UserRoleNextWhereInput.JSON_PROPERTY_PRESET,
  UserRoleNextWhereInput.JSON_PROPERTY_PRESET_IN,
  UserRoleNextWhereInput.JSON_PROPERTY_PRESET_NOT,
  UserRoleNextWhereInput.JSON_PROPERTY_PRESET_NOT_IN,
  UserRoleNextWhereInput.JSON_PROPERTY_USERS_EVERY,
  UserRoleNextWhereInput.JSON_PROPERTY_USERS_NONE,
  UserRoleNextWhereInput.JSON_PROPERTY_USERS_SOME
})
@javax.annotation.processing.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2021-10-27T15:59:14.939791800+08:00[Asia/Shanghai]")
public class UserRoleNextWhereInput {
  public static final String JSON_PROPERTY_A_N_D = "AND";
  private JsonNullable<List<UserRoleNextWhereInput>> AND = JsonNullable.<List<UserRoleNextWhereInput>>undefined();

  public static final String JSON_PROPERTY_ID = "id";
  private JsonNullable<String> id = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_ID_CONTAINS = "id_contains";
  private JsonNullable<String> idContains = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_ID_ENDS_WITH = "id_ends_with";
  private JsonNullable<String> idEndsWith = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_ID_GT = "id_gt";
  private JsonNullable<String> idGt = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_ID_GTE = "id_gte";
  private JsonNullable<String> idGte = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_ID_IN = "id_in";
  private JsonNullable<List<String>> idIn = JsonNullable.<List<String>>undefined();

  public static final String JSON_PROPERTY_ID_LT = "id_lt";
  private JsonNullable<String> idLt = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_ID_LTE = "id_lte";
  private JsonNullable<String> idLte = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_ID_NOT = "id_not";
  private JsonNullable<String> idNot = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_ID_NOT_CONTAINS = "id_not_contains";
  private JsonNullable<String> idNotContains = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_ID_NOT_ENDS_WITH = "id_not_ends_with";
  private JsonNullable<String> idNotEndsWith = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_ID_NOT_IN = "id_not_in";
  private JsonNullable<List<String>> idNotIn = JsonNullable.<List<String>>undefined();

  public static final String JSON_PROPERTY_ID_NOT_STARTS_WITH = "id_not_starts_with";
  private JsonNullable<String> idNotStartsWith = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_ID_STARTS_WITH = "id_starts_with";
  private JsonNullable<String> idStartsWith = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_NAME = "name";
  private JsonNullable<String> name = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_NAME_CONTAINS = "name_contains";
  private JsonNullable<String> nameContains = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_NAME_ENDS_WITH = "name_ends_with";
  private JsonNullable<String> nameEndsWith = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_NAME_GT = "name_gt";
  private JsonNullable<String> nameGt = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_NAME_GTE = "name_gte";
  private JsonNullable<String> nameGte = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_NAME_IN = "name_in";
  private JsonNullable<List<String>> nameIn = JsonNullable.<List<String>>undefined();

  public static final String JSON_PROPERTY_NAME_LT = "name_lt";
  private JsonNullable<String> nameLt = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_NAME_LTE = "name_lte";
  private JsonNullable<String> nameLte = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_NAME_NOT = "name_not";
  private JsonNullable<String> nameNot = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_NAME_NOT_CONTAINS = "name_not_contains";
  private JsonNullable<String> nameNotContains = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_NAME_NOT_ENDS_WITH = "name_not_ends_with";
  private JsonNullable<String> nameNotEndsWith = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_NAME_NOT_IN = "name_not_in";
  private JsonNullable<List<String>> nameNotIn = JsonNullable.<List<String>>undefined();

  public static final String JSON_PROPERTY_NAME_NOT_STARTS_WITH = "name_not_starts_with";
  private JsonNullable<String> nameNotStartsWith = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_NAME_STARTS_WITH = "name_starts_with";
  private JsonNullable<String> nameStartsWith = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_N_O_T = "NOT";
  private JsonNullable<List<UserRoleNextWhereInput>> NOT = JsonNullable.<List<UserRoleNextWhereInput>>undefined();

  public static final String JSON_PROPERTY_O_R = "OR";
  private JsonNullable<List<UserRoleNextWhereInput>> OR = JsonNullable.<List<UserRoleNextWhereInput>>undefined();

  public static final String JSON_PROPERTY_PLATFORM = "platform";
  private JsonNullable<UserRolePlatform> platform = JsonNullable.<UserRolePlatform>undefined();

  public static final String JSON_PROPERTY_PLATFORM_IN = "platform_in";
  private JsonNullable<List<UserRolePlatform>> platformIn = JsonNullable.<List<UserRolePlatform>>undefined();

  public static final String JSON_PROPERTY_PLATFORM_NOT = "platform_not";
  private JsonNullable<UserRolePlatform> platformNot = JsonNullable.<UserRolePlatform>undefined();

  public static final String JSON_PROPERTY_PLATFORM_NOT_IN = "platform_not_in";
  private JsonNullable<List<UserRolePlatform>> platformNotIn = JsonNullable.<List<UserRolePlatform>>undefined();

  public static final String JSON_PROPERTY_PRESET = "preset";
  private JsonNullable<UserRolePreset> preset = JsonNullable.<UserRolePreset>undefined();

  public static final String JSON_PROPERTY_PRESET_IN = "preset_in";
  private JsonNullable<List<UserRolePreset>> presetIn = JsonNullable.<List<UserRolePreset>>undefined();

  public static final String JSON_PROPERTY_PRESET_NOT = "preset_not";
  private JsonNullable<UserRolePreset> presetNot = JsonNullable.<UserRolePreset>undefined();

  public static final String JSON_PROPERTY_PRESET_NOT_IN = "preset_not_in";
  private JsonNullable<List<UserRolePreset>> presetNotIn = JsonNullable.<List<UserRolePreset>>undefined();

  public static final String JSON_PROPERTY_USERS_EVERY = "users_every";
  private JsonNullable<UserWhereInput> usersEvery = JsonNullable.<UserWhereInput>undefined();

  public static final String JSON_PROPERTY_USERS_NONE = "users_none";
  private JsonNullable<UserWhereInput> usersNone = JsonNullable.<UserWhereInput>undefined();

  public static final String JSON_PROPERTY_USERS_SOME = "users_some";
  private JsonNullable<UserWhereInput> usersSome = JsonNullable.<UserWhereInput>undefined();


  public UserRoleNextWhereInput AND(List<UserRoleNextWhereInput> AND) {
    this.AND = JsonNullable.<List<UserRoleNextWhereInput>>of(AND);
    return this;
  }

  public UserRoleNextWhereInput addANDItem(UserRoleNextWhereInput ANDItem) {
    if (this.AND == null || !this.AND.isPresent()) {
      this.AND = JsonNullable.<List<UserRoleNextWhereInput>>of(new ArrayList<>());
    }
    try {
      this.AND.get().add(ANDItem);
    } catch (java.util.NoSuchElementException e) {
      // this can never happen, as we make sure above that the value is present
    }
    return this;
  }

   /**
   * Get AND
   * @return AND
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public List<UserRoleNextWhereInput> getAND() {
        return AND.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_A_N_D)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<List<UserRoleNextWhereInput>> getAND_JsonNullable() {
    return AND;
  }
  
  @JsonProperty(JSON_PROPERTY_A_N_D)
  public void setAND_JsonNullable(JsonNullable<List<UserRoleNextWhereInput>> AND) {
    this.AND = AND;
  }

  public void setAND(List<UserRoleNextWhereInput> AND) {
    this.AND = JsonNullable.<List<UserRoleNextWhereInput>>of(AND);
  }


  public UserRoleNextWhereInput id(String id) {
    this.id = JsonNullable.<String>of(id);
    return this;
  }

   /**
   * Get id
   * @return id
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getId() {
        return id.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getId_JsonNullable() {
    return id;
  }
  
  @JsonProperty(JSON_PROPERTY_ID)
  public void setId_JsonNullable(JsonNullable<String> id) {
    this.id = id;
  }

  public void setId(String id) {
    this.id = JsonNullable.<String>of(id);
  }


  public UserRoleNextWhereInput idContains(String idContains) {
    this.idContains = JsonNullable.<String>of(idContains);
    return this;
  }

   /**
   * Get idContains
   * @return idContains
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getIdContains() {
        return idContains.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_ID_CONTAINS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getIdContains_JsonNullable() {
    return idContains;
  }
  
  @JsonProperty(JSON_PROPERTY_ID_CONTAINS)
  public void setIdContains_JsonNullable(JsonNullable<String> idContains) {
    this.idContains = idContains;
  }

  public void setIdContains(String idContains) {
    this.idContains = JsonNullable.<String>of(idContains);
  }


  public UserRoleNextWhereInput idEndsWith(String idEndsWith) {
    this.idEndsWith = JsonNullable.<String>of(idEndsWith);
    return this;
  }

   /**
   * Get idEndsWith
   * @return idEndsWith
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getIdEndsWith() {
        return idEndsWith.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_ID_ENDS_WITH)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getIdEndsWith_JsonNullable() {
    return idEndsWith;
  }
  
  @JsonProperty(JSON_PROPERTY_ID_ENDS_WITH)
  public void setIdEndsWith_JsonNullable(JsonNullable<String> idEndsWith) {
    this.idEndsWith = idEndsWith;
  }

  public void setIdEndsWith(String idEndsWith) {
    this.idEndsWith = JsonNullable.<String>of(idEndsWith);
  }


  public UserRoleNextWhereInput idGt(String idGt) {
    this.idGt = JsonNullable.<String>of(idGt);
    return this;
  }

   /**
   * Get idGt
   * @return idGt
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getIdGt() {
        return idGt.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_ID_GT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getIdGt_JsonNullable() {
    return idGt;
  }
  
  @JsonProperty(JSON_PROPERTY_ID_GT)
  public void setIdGt_JsonNullable(JsonNullable<String> idGt) {
    this.idGt = idGt;
  }

  public void setIdGt(String idGt) {
    this.idGt = JsonNullable.<String>of(idGt);
  }


  public UserRoleNextWhereInput idGte(String idGte) {
    this.idGte = JsonNullable.<String>of(idGte);
    return this;
  }

   /**
   * Get idGte
   * @return idGte
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getIdGte() {
        return idGte.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_ID_GTE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getIdGte_JsonNullable() {
    return idGte;
  }
  
  @JsonProperty(JSON_PROPERTY_ID_GTE)
  public void setIdGte_JsonNullable(JsonNullable<String> idGte) {
    this.idGte = idGte;
  }

  public void setIdGte(String idGte) {
    this.idGte = JsonNullable.<String>of(idGte);
  }


  public UserRoleNextWhereInput idIn(List<String> idIn) {
    this.idIn = JsonNullable.<List<String>>of(idIn);
    return this;
  }

  public UserRoleNextWhereInput addIdInItem(String idInItem) {
    if (this.idIn == null || !this.idIn.isPresent()) {
      this.idIn = JsonNullable.<List<String>>of(new ArrayList<>());
    }
    try {
      this.idIn.get().add(idInItem);
    } catch (java.util.NoSuchElementException e) {
      // this can never happen, as we make sure above that the value is present
    }
    return this;
  }

   /**
   * Get idIn
   * @return idIn
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public List<String> getIdIn() {
        return idIn.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_ID_IN)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<List<String>> getIdIn_JsonNullable() {
    return idIn;
  }
  
  @JsonProperty(JSON_PROPERTY_ID_IN)
  public void setIdIn_JsonNullable(JsonNullable<List<String>> idIn) {
    this.idIn = idIn;
  }

  public void setIdIn(List<String> idIn) {
    this.idIn = JsonNullable.<List<String>>of(idIn);
  }


  public UserRoleNextWhereInput idLt(String idLt) {
    this.idLt = JsonNullable.<String>of(idLt);
    return this;
  }

   /**
   * Get idLt
   * @return idLt
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getIdLt() {
        return idLt.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_ID_LT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getIdLt_JsonNullable() {
    return idLt;
  }
  
  @JsonProperty(JSON_PROPERTY_ID_LT)
  public void setIdLt_JsonNullable(JsonNullable<String> idLt) {
    this.idLt = idLt;
  }

  public void setIdLt(String idLt) {
    this.idLt = JsonNullable.<String>of(idLt);
  }


  public UserRoleNextWhereInput idLte(String idLte) {
    this.idLte = JsonNullable.<String>of(idLte);
    return this;
  }

   /**
   * Get idLte
   * @return idLte
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getIdLte() {
        return idLte.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_ID_LTE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getIdLte_JsonNullable() {
    return idLte;
  }
  
  @JsonProperty(JSON_PROPERTY_ID_LTE)
  public void setIdLte_JsonNullable(JsonNullable<String> idLte) {
    this.idLte = idLte;
  }

  public void setIdLte(String idLte) {
    this.idLte = JsonNullable.<String>of(idLte);
  }


  public UserRoleNextWhereInput idNot(String idNot) {
    this.idNot = JsonNullable.<String>of(idNot);
    return this;
  }

   /**
   * Get idNot
   * @return idNot
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getIdNot() {
        return idNot.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_ID_NOT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getIdNot_JsonNullable() {
    return idNot;
  }
  
  @JsonProperty(JSON_PROPERTY_ID_NOT)
  public void setIdNot_JsonNullable(JsonNullable<String> idNot) {
    this.idNot = idNot;
  }

  public void setIdNot(String idNot) {
    this.idNot = JsonNullable.<String>of(idNot);
  }


  public UserRoleNextWhereInput idNotContains(String idNotContains) {
    this.idNotContains = JsonNullable.<String>of(idNotContains);
    return this;
  }

   /**
   * Get idNotContains
   * @return idNotContains
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getIdNotContains() {
        return idNotContains.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_ID_NOT_CONTAINS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getIdNotContains_JsonNullable() {
    return idNotContains;
  }
  
  @JsonProperty(JSON_PROPERTY_ID_NOT_CONTAINS)
  public void setIdNotContains_JsonNullable(JsonNullable<String> idNotContains) {
    this.idNotContains = idNotContains;
  }

  public void setIdNotContains(String idNotContains) {
    this.idNotContains = JsonNullable.<String>of(idNotContains);
  }


  public UserRoleNextWhereInput idNotEndsWith(String idNotEndsWith) {
    this.idNotEndsWith = JsonNullable.<String>of(idNotEndsWith);
    return this;
  }

   /**
   * Get idNotEndsWith
   * @return idNotEndsWith
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getIdNotEndsWith() {
        return idNotEndsWith.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_ID_NOT_ENDS_WITH)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getIdNotEndsWith_JsonNullable() {
    return idNotEndsWith;
  }
  
  @JsonProperty(JSON_PROPERTY_ID_NOT_ENDS_WITH)
  public void setIdNotEndsWith_JsonNullable(JsonNullable<String> idNotEndsWith) {
    this.idNotEndsWith = idNotEndsWith;
  }

  public void setIdNotEndsWith(String idNotEndsWith) {
    this.idNotEndsWith = JsonNullable.<String>of(idNotEndsWith);
  }


  public UserRoleNextWhereInput idNotIn(List<String> idNotIn) {
    this.idNotIn = JsonNullable.<List<String>>of(idNotIn);
    return this;
  }

  public UserRoleNextWhereInput addIdNotInItem(String idNotInItem) {
    if (this.idNotIn == null || !this.idNotIn.isPresent()) {
      this.idNotIn = JsonNullable.<List<String>>of(new ArrayList<>());
    }
    try {
      this.idNotIn.get().add(idNotInItem);
    } catch (java.util.NoSuchElementException e) {
      // this can never happen, as we make sure above that the value is present
    }
    return this;
  }

   /**
   * Get idNotIn
   * @return idNotIn
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public List<String> getIdNotIn() {
        return idNotIn.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_ID_NOT_IN)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<List<String>> getIdNotIn_JsonNullable() {
    return idNotIn;
  }
  
  @JsonProperty(JSON_PROPERTY_ID_NOT_IN)
  public void setIdNotIn_JsonNullable(JsonNullable<List<String>> idNotIn) {
    this.idNotIn = idNotIn;
  }

  public void setIdNotIn(List<String> idNotIn) {
    this.idNotIn = JsonNullable.<List<String>>of(idNotIn);
  }


  public UserRoleNextWhereInput idNotStartsWith(String idNotStartsWith) {
    this.idNotStartsWith = JsonNullable.<String>of(idNotStartsWith);
    return this;
  }

   /**
   * Get idNotStartsWith
   * @return idNotStartsWith
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getIdNotStartsWith() {
        return idNotStartsWith.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_ID_NOT_STARTS_WITH)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getIdNotStartsWith_JsonNullable() {
    return idNotStartsWith;
  }
  
  @JsonProperty(JSON_PROPERTY_ID_NOT_STARTS_WITH)
  public void setIdNotStartsWith_JsonNullable(JsonNullable<String> idNotStartsWith) {
    this.idNotStartsWith = idNotStartsWith;
  }

  public void setIdNotStartsWith(String idNotStartsWith) {
    this.idNotStartsWith = JsonNullable.<String>of(idNotStartsWith);
  }


  public UserRoleNextWhereInput idStartsWith(String idStartsWith) {
    this.idStartsWith = JsonNullable.<String>of(idStartsWith);
    return this;
  }

   /**
   * Get idStartsWith
   * @return idStartsWith
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getIdStartsWith() {
        return idStartsWith.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_ID_STARTS_WITH)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getIdStartsWith_JsonNullable() {
    return idStartsWith;
  }
  
  @JsonProperty(JSON_PROPERTY_ID_STARTS_WITH)
  public void setIdStartsWith_JsonNullable(JsonNullable<String> idStartsWith) {
    this.idStartsWith = idStartsWith;
  }

  public void setIdStartsWith(String idStartsWith) {
    this.idStartsWith = JsonNullable.<String>of(idStartsWith);
  }


  public UserRoleNextWhereInput name(String name) {
    this.name = JsonNullable.<String>of(name);
    return this;
  }

   /**
   * Get name
   * @return name
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getName() {
        return name.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getName_JsonNullable() {
    return name;
  }
  
  @JsonProperty(JSON_PROPERTY_NAME)
  public void setName_JsonNullable(JsonNullable<String> name) {
    this.name = name;
  }

  public void setName(String name) {
    this.name = JsonNullable.<String>of(name);
  }


  public UserRoleNextWhereInput nameContains(String nameContains) {
    this.nameContains = JsonNullable.<String>of(nameContains);
    return this;
  }

   /**
   * Get nameContains
   * @return nameContains
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getNameContains() {
        return nameContains.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_NAME_CONTAINS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getNameContains_JsonNullable() {
    return nameContains;
  }
  
  @JsonProperty(JSON_PROPERTY_NAME_CONTAINS)
  public void setNameContains_JsonNullable(JsonNullable<String> nameContains) {
    this.nameContains = nameContains;
  }

  public void setNameContains(String nameContains) {
    this.nameContains = JsonNullable.<String>of(nameContains);
  }


  public UserRoleNextWhereInput nameEndsWith(String nameEndsWith) {
    this.nameEndsWith = JsonNullable.<String>of(nameEndsWith);
    return this;
  }

   /**
   * Get nameEndsWith
   * @return nameEndsWith
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getNameEndsWith() {
        return nameEndsWith.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_NAME_ENDS_WITH)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getNameEndsWith_JsonNullable() {
    return nameEndsWith;
  }
  
  @JsonProperty(JSON_PROPERTY_NAME_ENDS_WITH)
  public void setNameEndsWith_JsonNullable(JsonNullable<String> nameEndsWith) {
    this.nameEndsWith = nameEndsWith;
  }

  public void setNameEndsWith(String nameEndsWith) {
    this.nameEndsWith = JsonNullable.<String>of(nameEndsWith);
  }


  public UserRoleNextWhereInput nameGt(String nameGt) {
    this.nameGt = JsonNullable.<String>of(nameGt);
    return this;
  }

   /**
   * Get nameGt
   * @return nameGt
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getNameGt() {
        return nameGt.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_NAME_GT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getNameGt_JsonNullable() {
    return nameGt;
  }
  
  @JsonProperty(JSON_PROPERTY_NAME_GT)
  public void setNameGt_JsonNullable(JsonNullable<String> nameGt) {
    this.nameGt = nameGt;
  }

  public void setNameGt(String nameGt) {
    this.nameGt = JsonNullable.<String>of(nameGt);
  }


  public UserRoleNextWhereInput nameGte(String nameGte) {
    this.nameGte = JsonNullable.<String>of(nameGte);
    return this;
  }

   /**
   * Get nameGte
   * @return nameGte
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getNameGte() {
        return nameGte.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_NAME_GTE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getNameGte_JsonNullable() {
    return nameGte;
  }
  
  @JsonProperty(JSON_PROPERTY_NAME_GTE)
  public void setNameGte_JsonNullable(JsonNullable<String> nameGte) {
    this.nameGte = nameGte;
  }

  public void setNameGte(String nameGte) {
    this.nameGte = JsonNullable.<String>of(nameGte);
  }


  public UserRoleNextWhereInput nameIn(List<String> nameIn) {
    this.nameIn = JsonNullable.<List<String>>of(nameIn);
    return this;
  }

  public UserRoleNextWhereInput addNameInItem(String nameInItem) {
    if (this.nameIn == null || !this.nameIn.isPresent()) {
      this.nameIn = JsonNullable.<List<String>>of(new ArrayList<>());
    }
    try {
      this.nameIn.get().add(nameInItem);
    } catch (java.util.NoSuchElementException e) {
      // this can never happen, as we make sure above that the value is present
    }
    return this;
  }

   /**
   * Get nameIn
   * @return nameIn
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public List<String> getNameIn() {
        return nameIn.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_NAME_IN)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<List<String>> getNameIn_JsonNullable() {
    return nameIn;
  }
  
  @JsonProperty(JSON_PROPERTY_NAME_IN)
  public void setNameIn_JsonNullable(JsonNullable<List<String>> nameIn) {
    this.nameIn = nameIn;
  }

  public void setNameIn(List<String> nameIn) {
    this.nameIn = JsonNullable.<List<String>>of(nameIn);
  }


  public UserRoleNextWhereInput nameLt(String nameLt) {
    this.nameLt = JsonNullable.<String>of(nameLt);
    return this;
  }

   /**
   * Get nameLt
   * @return nameLt
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getNameLt() {
        return nameLt.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_NAME_LT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getNameLt_JsonNullable() {
    return nameLt;
  }
  
  @JsonProperty(JSON_PROPERTY_NAME_LT)
  public void setNameLt_JsonNullable(JsonNullable<String> nameLt) {
    this.nameLt = nameLt;
  }

  public void setNameLt(String nameLt) {
    this.nameLt = JsonNullable.<String>of(nameLt);
  }


  public UserRoleNextWhereInput nameLte(String nameLte) {
    this.nameLte = JsonNullable.<String>of(nameLte);
    return this;
  }

   /**
   * Get nameLte
   * @return nameLte
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getNameLte() {
        return nameLte.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_NAME_LTE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getNameLte_JsonNullable() {
    return nameLte;
  }
  
  @JsonProperty(JSON_PROPERTY_NAME_LTE)
  public void setNameLte_JsonNullable(JsonNullable<String> nameLte) {
    this.nameLte = nameLte;
  }

  public void setNameLte(String nameLte) {
    this.nameLte = JsonNullable.<String>of(nameLte);
  }


  public UserRoleNextWhereInput nameNot(String nameNot) {
    this.nameNot = JsonNullable.<String>of(nameNot);
    return this;
  }

   /**
   * Get nameNot
   * @return nameNot
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getNameNot() {
        return nameNot.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_NAME_NOT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getNameNot_JsonNullable() {
    return nameNot;
  }
  
  @JsonProperty(JSON_PROPERTY_NAME_NOT)
  public void setNameNot_JsonNullable(JsonNullable<String> nameNot) {
    this.nameNot = nameNot;
  }

  public void setNameNot(String nameNot) {
    this.nameNot = JsonNullable.<String>of(nameNot);
  }


  public UserRoleNextWhereInput nameNotContains(String nameNotContains) {
    this.nameNotContains = JsonNullable.<String>of(nameNotContains);
    return this;
  }

   /**
   * Get nameNotContains
   * @return nameNotContains
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getNameNotContains() {
        return nameNotContains.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_NAME_NOT_CONTAINS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getNameNotContains_JsonNullable() {
    return nameNotContains;
  }
  
  @JsonProperty(JSON_PROPERTY_NAME_NOT_CONTAINS)
  public void setNameNotContains_JsonNullable(JsonNullable<String> nameNotContains) {
    this.nameNotContains = nameNotContains;
  }

  public void setNameNotContains(String nameNotContains) {
    this.nameNotContains = JsonNullable.<String>of(nameNotContains);
  }


  public UserRoleNextWhereInput nameNotEndsWith(String nameNotEndsWith) {
    this.nameNotEndsWith = JsonNullable.<String>of(nameNotEndsWith);
    return this;
  }

   /**
   * Get nameNotEndsWith
   * @return nameNotEndsWith
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getNameNotEndsWith() {
        return nameNotEndsWith.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_NAME_NOT_ENDS_WITH)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getNameNotEndsWith_JsonNullable() {
    return nameNotEndsWith;
  }
  
  @JsonProperty(JSON_PROPERTY_NAME_NOT_ENDS_WITH)
  public void setNameNotEndsWith_JsonNullable(JsonNullable<String> nameNotEndsWith) {
    this.nameNotEndsWith = nameNotEndsWith;
  }

  public void setNameNotEndsWith(String nameNotEndsWith) {
    this.nameNotEndsWith = JsonNullable.<String>of(nameNotEndsWith);
  }


  public UserRoleNextWhereInput nameNotIn(List<String> nameNotIn) {
    this.nameNotIn = JsonNullable.<List<String>>of(nameNotIn);
    return this;
  }

  public UserRoleNextWhereInput addNameNotInItem(String nameNotInItem) {
    if (this.nameNotIn == null || !this.nameNotIn.isPresent()) {
      this.nameNotIn = JsonNullable.<List<String>>of(new ArrayList<>());
    }
    try {
      this.nameNotIn.get().add(nameNotInItem);
    } catch (java.util.NoSuchElementException e) {
      // this can never happen, as we make sure above that the value is present
    }
    return this;
  }

   /**
   * Get nameNotIn
   * @return nameNotIn
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public List<String> getNameNotIn() {
        return nameNotIn.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_NAME_NOT_IN)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<List<String>> getNameNotIn_JsonNullable() {
    return nameNotIn;
  }
  
  @JsonProperty(JSON_PROPERTY_NAME_NOT_IN)
  public void setNameNotIn_JsonNullable(JsonNullable<List<String>> nameNotIn) {
    this.nameNotIn = nameNotIn;
  }

  public void setNameNotIn(List<String> nameNotIn) {
    this.nameNotIn = JsonNullable.<List<String>>of(nameNotIn);
  }


  public UserRoleNextWhereInput nameNotStartsWith(String nameNotStartsWith) {
    this.nameNotStartsWith = JsonNullable.<String>of(nameNotStartsWith);
    return this;
  }

   /**
   * Get nameNotStartsWith
   * @return nameNotStartsWith
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getNameNotStartsWith() {
        return nameNotStartsWith.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_NAME_NOT_STARTS_WITH)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getNameNotStartsWith_JsonNullable() {
    return nameNotStartsWith;
  }
  
  @JsonProperty(JSON_PROPERTY_NAME_NOT_STARTS_WITH)
  public void setNameNotStartsWith_JsonNullable(JsonNullable<String> nameNotStartsWith) {
    this.nameNotStartsWith = nameNotStartsWith;
  }

  public void setNameNotStartsWith(String nameNotStartsWith) {
    this.nameNotStartsWith = JsonNullable.<String>of(nameNotStartsWith);
  }


  public UserRoleNextWhereInput nameStartsWith(String nameStartsWith) {
    this.nameStartsWith = JsonNullable.<String>of(nameStartsWith);
    return this;
  }

   /**
   * Get nameStartsWith
   * @return nameStartsWith
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getNameStartsWith() {
        return nameStartsWith.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_NAME_STARTS_WITH)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getNameStartsWith_JsonNullable() {
    return nameStartsWith;
  }
  
  @JsonProperty(JSON_PROPERTY_NAME_STARTS_WITH)
  public void setNameStartsWith_JsonNullable(JsonNullable<String> nameStartsWith) {
    this.nameStartsWith = nameStartsWith;
  }

  public void setNameStartsWith(String nameStartsWith) {
    this.nameStartsWith = JsonNullable.<String>of(nameStartsWith);
  }


  public UserRoleNextWhereInput NOT(List<UserRoleNextWhereInput> NOT) {
    this.NOT = JsonNullable.<List<UserRoleNextWhereInput>>of(NOT);
    return this;
  }

  public UserRoleNextWhereInput addNOTItem(UserRoleNextWhereInput NOTItem) {
    if (this.NOT == null || !this.NOT.isPresent()) {
      this.NOT = JsonNullable.<List<UserRoleNextWhereInput>>of(new ArrayList<>());
    }
    try {
      this.NOT.get().add(NOTItem);
    } catch (java.util.NoSuchElementException e) {
      // this can never happen, as we make sure above that the value is present
    }
    return this;
  }

   /**
   * Get NOT
   * @return NOT
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public List<UserRoleNextWhereInput> getNOT() {
        return NOT.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_N_O_T)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<List<UserRoleNextWhereInput>> getNOT_JsonNullable() {
    return NOT;
  }
  
  @JsonProperty(JSON_PROPERTY_N_O_T)
  public void setNOT_JsonNullable(JsonNullable<List<UserRoleNextWhereInput>> NOT) {
    this.NOT = NOT;
  }

  public void setNOT(List<UserRoleNextWhereInput> NOT) {
    this.NOT = JsonNullable.<List<UserRoleNextWhereInput>>of(NOT);
  }


  public UserRoleNextWhereInput OR(List<UserRoleNextWhereInput> OR) {
    this.OR = JsonNullable.<List<UserRoleNextWhereInput>>of(OR);
    return this;
  }

  public UserRoleNextWhereInput addORItem(UserRoleNextWhereInput ORItem) {
    if (this.OR == null || !this.OR.isPresent()) {
      this.OR = JsonNullable.<List<UserRoleNextWhereInput>>of(new ArrayList<>());
    }
    try {
      this.OR.get().add(ORItem);
    } catch (java.util.NoSuchElementException e) {
      // this can never happen, as we make sure above that the value is present
    }
    return this;
  }

   /**
   * Get OR
   * @return OR
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public List<UserRoleNextWhereInput> getOR() {
        return OR.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_O_R)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<List<UserRoleNextWhereInput>> getOR_JsonNullable() {
    return OR;
  }
  
  @JsonProperty(JSON_PROPERTY_O_R)
  public void setOR_JsonNullable(JsonNullable<List<UserRoleNextWhereInput>> OR) {
    this.OR = OR;
  }

  public void setOR(List<UserRoleNextWhereInput> OR) {
    this.OR = JsonNullable.<List<UserRoleNextWhereInput>>of(OR);
  }


  public UserRoleNextWhereInput platform(UserRolePlatform platform) {
    this.platform = JsonNullable.<UserRolePlatform>of(platform);
    return this;
  }

   /**
   * Get platform
   * @return platform
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public UserRolePlatform getPlatform() {
        return platform.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_PLATFORM)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<UserRolePlatform> getPlatform_JsonNullable() {
    return platform;
  }
  
  @JsonProperty(JSON_PROPERTY_PLATFORM)
  public void setPlatform_JsonNullable(JsonNullable<UserRolePlatform> platform) {
    this.platform = platform;
  }

  public void setPlatform(UserRolePlatform platform) {
    this.platform = JsonNullable.<UserRolePlatform>of(platform);
  }


  public UserRoleNextWhereInput platformIn(List<UserRolePlatform> platformIn) {
    this.platformIn = JsonNullable.<List<UserRolePlatform>>of(platformIn);
    return this;
  }

  public UserRoleNextWhereInput addPlatformInItem(UserRolePlatform platformInItem) {
    if (this.platformIn == null || !this.platformIn.isPresent()) {
      this.platformIn = JsonNullable.<List<UserRolePlatform>>of(new ArrayList<>());
    }
    try {
      this.platformIn.get().add(platformInItem);
    } catch (java.util.NoSuchElementException e) {
      // this can never happen, as we make sure above that the value is present
    }
    return this;
  }

   /**
   * Get platformIn
   * @return platformIn
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public List<UserRolePlatform> getPlatformIn() {
        return platformIn.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_PLATFORM_IN)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<List<UserRolePlatform>> getPlatformIn_JsonNullable() {
    return platformIn;
  }
  
  @JsonProperty(JSON_PROPERTY_PLATFORM_IN)
  public void setPlatformIn_JsonNullable(JsonNullable<List<UserRolePlatform>> platformIn) {
    this.platformIn = platformIn;
  }

  public void setPlatformIn(List<UserRolePlatform> platformIn) {
    this.platformIn = JsonNullable.<List<UserRolePlatform>>of(platformIn);
  }


  public UserRoleNextWhereInput platformNot(UserRolePlatform platformNot) {
    this.platformNot = JsonNullable.<UserRolePlatform>of(platformNot);
    return this;
  }

   /**
   * Get platformNot
   * @return platformNot
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public UserRolePlatform getPlatformNot() {
        return platformNot.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_PLATFORM_NOT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<UserRolePlatform> getPlatformNot_JsonNullable() {
    return platformNot;
  }
  
  @JsonProperty(JSON_PROPERTY_PLATFORM_NOT)
  public void setPlatformNot_JsonNullable(JsonNullable<UserRolePlatform> platformNot) {
    this.platformNot = platformNot;
  }

  public void setPlatformNot(UserRolePlatform platformNot) {
    this.platformNot = JsonNullable.<UserRolePlatform>of(platformNot);
  }


  public UserRoleNextWhereInput platformNotIn(List<UserRolePlatform> platformNotIn) {
    this.platformNotIn = JsonNullable.<List<UserRolePlatform>>of(platformNotIn);
    return this;
  }

  public UserRoleNextWhereInput addPlatformNotInItem(UserRolePlatform platformNotInItem) {
    if (this.platformNotIn == null || !this.platformNotIn.isPresent()) {
      this.platformNotIn = JsonNullable.<List<UserRolePlatform>>of(new ArrayList<>());
    }
    try {
      this.platformNotIn.get().add(platformNotInItem);
    } catch (java.util.NoSuchElementException e) {
      // this can never happen, as we make sure above that the value is present
    }
    return this;
  }

   /**
   * Get platformNotIn
   * @return platformNotIn
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public List<UserRolePlatform> getPlatformNotIn() {
        return platformNotIn.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_PLATFORM_NOT_IN)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<List<UserRolePlatform>> getPlatformNotIn_JsonNullable() {
    return platformNotIn;
  }
  
  @JsonProperty(JSON_PROPERTY_PLATFORM_NOT_IN)
  public void setPlatformNotIn_JsonNullable(JsonNullable<List<UserRolePlatform>> platformNotIn) {
    this.platformNotIn = platformNotIn;
  }

  public void setPlatformNotIn(List<UserRolePlatform> platformNotIn) {
    this.platformNotIn = JsonNullable.<List<UserRolePlatform>>of(platformNotIn);
  }


  public UserRoleNextWhereInput preset(UserRolePreset preset) {
    this.preset = JsonNullable.<UserRolePreset>of(preset);
    return this;
  }

   /**
   * Get preset
   * @return preset
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public UserRolePreset getPreset() {
        return preset.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_PRESET)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<UserRolePreset> getPreset_JsonNullable() {
    return preset;
  }
  
  @JsonProperty(JSON_PROPERTY_PRESET)
  public void setPreset_JsonNullable(JsonNullable<UserRolePreset> preset) {
    this.preset = preset;
  }

  public void setPreset(UserRolePreset preset) {
    this.preset = JsonNullable.<UserRolePreset>of(preset);
  }


  public UserRoleNextWhereInput presetIn(List<UserRolePreset> presetIn) {
    this.presetIn = JsonNullable.<List<UserRolePreset>>of(presetIn);
    return this;
  }

  public UserRoleNextWhereInput addPresetInItem(UserRolePreset presetInItem) {
    if (this.presetIn == null || !this.presetIn.isPresent()) {
      this.presetIn = JsonNullable.<List<UserRolePreset>>of(new ArrayList<>());
    }
    try {
      this.presetIn.get().add(presetInItem);
    } catch (java.util.NoSuchElementException e) {
      // this can never happen, as we make sure above that the value is present
    }
    return this;
  }

   /**
   * Get presetIn
   * @return presetIn
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public List<UserRolePreset> getPresetIn() {
        return presetIn.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_PRESET_IN)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<List<UserRolePreset>> getPresetIn_JsonNullable() {
    return presetIn;
  }
  
  @JsonProperty(JSON_PROPERTY_PRESET_IN)
  public void setPresetIn_JsonNullable(JsonNullable<List<UserRolePreset>> presetIn) {
    this.presetIn = presetIn;
  }

  public void setPresetIn(List<UserRolePreset> presetIn) {
    this.presetIn = JsonNullable.<List<UserRolePreset>>of(presetIn);
  }


  public UserRoleNextWhereInput presetNot(UserRolePreset presetNot) {
    this.presetNot = JsonNullable.<UserRolePreset>of(presetNot);
    return this;
  }

   /**
   * Get presetNot
   * @return presetNot
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public UserRolePreset getPresetNot() {
        return presetNot.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_PRESET_NOT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<UserRolePreset> getPresetNot_JsonNullable() {
    return presetNot;
  }
  
  @JsonProperty(JSON_PROPERTY_PRESET_NOT)
  public void setPresetNot_JsonNullable(JsonNullable<UserRolePreset> presetNot) {
    this.presetNot = presetNot;
  }

  public void setPresetNot(UserRolePreset presetNot) {
    this.presetNot = JsonNullable.<UserRolePreset>of(presetNot);
  }


  public UserRoleNextWhereInput presetNotIn(List<UserRolePreset> presetNotIn) {
    this.presetNotIn = JsonNullable.<List<UserRolePreset>>of(presetNotIn);
    return this;
  }

  public UserRoleNextWhereInput addPresetNotInItem(UserRolePreset presetNotInItem) {
    if (this.presetNotIn == null || !this.presetNotIn.isPresent()) {
      this.presetNotIn = JsonNullable.<List<UserRolePreset>>of(new ArrayList<>());
    }
    try {
      this.presetNotIn.get().add(presetNotInItem);
    } catch (java.util.NoSuchElementException e) {
      // this can never happen, as we make sure above that the value is present
    }
    return this;
  }

   /**
   * Get presetNotIn
   * @return presetNotIn
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public List<UserRolePreset> getPresetNotIn() {
        return presetNotIn.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_PRESET_NOT_IN)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<List<UserRolePreset>> getPresetNotIn_JsonNullable() {
    return presetNotIn;
  }
  
  @JsonProperty(JSON_PROPERTY_PRESET_NOT_IN)
  public void setPresetNotIn_JsonNullable(JsonNullable<List<UserRolePreset>> presetNotIn) {
    this.presetNotIn = presetNotIn;
  }

  public void setPresetNotIn(List<UserRolePreset> presetNotIn) {
    this.presetNotIn = JsonNullable.<List<UserRolePreset>>of(presetNotIn);
  }


  public UserRoleNextWhereInput usersEvery(UserWhereInput usersEvery) {
    this.usersEvery = JsonNullable.<UserWhereInput>of(usersEvery);
    return this;
  }

   /**
   * Get usersEvery
   * @return usersEvery
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public UserWhereInput getUsersEvery() {
        return usersEvery.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_USERS_EVERY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<UserWhereInput> getUsersEvery_JsonNullable() {
    return usersEvery;
  }
  
  @JsonProperty(JSON_PROPERTY_USERS_EVERY)
  public void setUsersEvery_JsonNullable(JsonNullable<UserWhereInput> usersEvery) {
    this.usersEvery = usersEvery;
  }

  public void setUsersEvery(UserWhereInput usersEvery) {
    this.usersEvery = JsonNullable.<UserWhereInput>of(usersEvery);
  }


  public UserRoleNextWhereInput usersNone(UserWhereInput usersNone) {
    this.usersNone = JsonNullable.<UserWhereInput>of(usersNone);
    return this;
  }

   /**
   * Get usersNone
   * @return usersNone
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public UserWhereInput getUsersNone() {
        return usersNone.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_USERS_NONE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<UserWhereInput> getUsersNone_JsonNullable() {
    return usersNone;
  }
  
  @JsonProperty(JSON_PROPERTY_USERS_NONE)
  public void setUsersNone_JsonNullable(JsonNullable<UserWhereInput> usersNone) {
    this.usersNone = usersNone;
  }

  public void setUsersNone(UserWhereInput usersNone) {
    this.usersNone = JsonNullable.<UserWhereInput>of(usersNone);
  }


  public UserRoleNextWhereInput usersSome(UserWhereInput usersSome) {
    this.usersSome = JsonNullable.<UserWhereInput>of(usersSome);
    return this;
  }

   /**
   * Get usersSome
   * @return usersSome
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public UserWhereInput getUsersSome() {
        return usersSome.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_USERS_SOME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<UserWhereInput> getUsersSome_JsonNullable() {
    return usersSome;
  }
  
  @JsonProperty(JSON_PROPERTY_USERS_SOME)
  public void setUsersSome_JsonNullable(JsonNullable<UserWhereInput> usersSome) {
    this.usersSome = usersSome;
  }

  public void setUsersSome(UserWhereInput usersSome) {
    this.usersSome = JsonNullable.<UserWhereInput>of(usersSome);
  }


  /**
   * Return true if this UserRoleNextWhereInput object is equal to o.
   */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    UserRoleNextWhereInput userRoleNextWhereInput = (UserRoleNextWhereInput) o;
    return equalsNullable(this.AND, userRoleNextWhereInput.AND) &&
        equalsNullable(this.id, userRoleNextWhereInput.id) &&
        equalsNullable(this.idContains, userRoleNextWhereInput.idContains) &&
        equalsNullable(this.idEndsWith, userRoleNextWhereInput.idEndsWith) &&
        equalsNullable(this.idGt, userRoleNextWhereInput.idGt) &&
        equalsNullable(this.idGte, userRoleNextWhereInput.idGte) &&
        equalsNullable(this.idIn, userRoleNextWhereInput.idIn) &&
        equalsNullable(this.idLt, userRoleNextWhereInput.idLt) &&
        equalsNullable(this.idLte, userRoleNextWhereInput.idLte) &&
        equalsNullable(this.idNot, userRoleNextWhereInput.idNot) &&
        equalsNullable(this.idNotContains, userRoleNextWhereInput.idNotContains) &&
        equalsNullable(this.idNotEndsWith, userRoleNextWhereInput.idNotEndsWith) &&
        equalsNullable(this.idNotIn, userRoleNextWhereInput.idNotIn) &&
        equalsNullable(this.idNotStartsWith, userRoleNextWhereInput.idNotStartsWith) &&
        equalsNullable(this.idStartsWith, userRoleNextWhereInput.idStartsWith) &&
        equalsNullable(this.name, userRoleNextWhereInput.name) &&
        equalsNullable(this.nameContains, userRoleNextWhereInput.nameContains) &&
        equalsNullable(this.nameEndsWith, userRoleNextWhereInput.nameEndsWith) &&
        equalsNullable(this.nameGt, userRoleNextWhereInput.nameGt) &&
        equalsNullable(this.nameGte, userRoleNextWhereInput.nameGte) &&
        equalsNullable(this.nameIn, userRoleNextWhereInput.nameIn) &&
        equalsNullable(this.nameLt, userRoleNextWhereInput.nameLt) &&
        equalsNullable(this.nameLte, userRoleNextWhereInput.nameLte) &&
        equalsNullable(this.nameNot, userRoleNextWhereInput.nameNot) &&
        equalsNullable(this.nameNotContains, userRoleNextWhereInput.nameNotContains) &&
        equalsNullable(this.nameNotEndsWith, userRoleNextWhereInput.nameNotEndsWith) &&
        equalsNullable(this.nameNotIn, userRoleNextWhereInput.nameNotIn) &&
        equalsNullable(this.nameNotStartsWith, userRoleNextWhereInput.nameNotStartsWith) &&
        equalsNullable(this.nameStartsWith, userRoleNextWhereInput.nameStartsWith) &&
        equalsNullable(this.NOT, userRoleNextWhereInput.NOT) &&
        equalsNullable(this.OR, userRoleNextWhereInput.OR) &&
        equalsNullable(this.platform, userRoleNextWhereInput.platform) &&
        equalsNullable(this.platformIn, userRoleNextWhereInput.platformIn) &&
        equalsNullable(this.platformNot, userRoleNextWhereInput.platformNot) &&
        equalsNullable(this.platformNotIn, userRoleNextWhereInput.platformNotIn) &&
        equalsNullable(this.preset, userRoleNextWhereInput.preset) &&
        equalsNullable(this.presetIn, userRoleNextWhereInput.presetIn) &&
        equalsNullable(this.presetNot, userRoleNextWhereInput.presetNot) &&
        equalsNullable(this.presetNotIn, userRoleNextWhereInput.presetNotIn) &&
        equalsNullable(this.usersEvery, userRoleNextWhereInput.usersEvery) &&
        equalsNullable(this.usersNone, userRoleNextWhereInput.usersNone) &&
        equalsNullable(this.usersSome, userRoleNextWhereInput.usersSome);
  }

  private static <T> boolean equalsNullable(JsonNullable<T> a, JsonNullable<T> b) {
    return a == b || (a != null && b != null && a.isPresent() && b.isPresent() && Objects.deepEquals(a.get(), b.get()));
  }

  @Override
  public int hashCode() {
    return Objects.hash(hashCodeNullable(AND), hashCodeNullable(id), hashCodeNullable(idContains), hashCodeNullable(idEndsWith), hashCodeNullable(idGt), hashCodeNullable(idGte), hashCodeNullable(idIn), hashCodeNullable(idLt), hashCodeNullable(idLte), hashCodeNullable(idNot), hashCodeNullable(idNotContains), hashCodeNullable(idNotEndsWith), hashCodeNullable(idNotIn), hashCodeNullable(idNotStartsWith), hashCodeNullable(idStartsWith), hashCodeNullable(name), hashCodeNullable(nameContains), hashCodeNullable(nameEndsWith), hashCodeNullable(nameGt), hashCodeNullable(nameGte), hashCodeNullable(nameIn), hashCodeNullable(nameLt), hashCodeNullable(nameLte), hashCodeNullable(nameNot), hashCodeNullable(nameNotContains), hashCodeNullable(nameNotEndsWith), hashCodeNullable(nameNotIn), hashCodeNullable(nameNotStartsWith), hashCodeNullable(nameStartsWith), hashCodeNullable(NOT), hashCodeNullable(OR), hashCodeNullable(platform), hashCodeNullable(platformIn), hashCodeNullable(platformNot), hashCodeNullable(platformNotIn), hashCodeNullable(preset), hashCodeNullable(presetIn), hashCodeNullable(presetNot), hashCodeNullable(presetNotIn), hashCodeNullable(usersEvery), hashCodeNullable(usersNone), hashCodeNullable(usersSome));
  }

  private static <T> int hashCodeNullable(JsonNullable<T> a) {
    if (a == null) {
      return 1;
    }
    return a.isPresent() ? Arrays.deepHashCode(new Object[]{a.get()}) : 31;
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class UserRoleNextWhereInput {\n");
    sb.append("    AND: ").append(toIndentedString(AND)).append("\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    idContains: ").append(toIndentedString(idContains)).append("\n");
    sb.append("    idEndsWith: ").append(toIndentedString(idEndsWith)).append("\n");
    sb.append("    idGt: ").append(toIndentedString(idGt)).append("\n");
    sb.append("    idGte: ").append(toIndentedString(idGte)).append("\n");
    sb.append("    idIn: ").append(toIndentedString(idIn)).append("\n");
    sb.append("    idLt: ").append(toIndentedString(idLt)).append("\n");
    sb.append("    idLte: ").append(toIndentedString(idLte)).append("\n");
    sb.append("    idNot: ").append(toIndentedString(idNot)).append("\n");
    sb.append("    idNotContains: ").append(toIndentedString(idNotContains)).append("\n");
    sb.append("    idNotEndsWith: ").append(toIndentedString(idNotEndsWith)).append("\n");
    sb.append("    idNotIn: ").append(toIndentedString(idNotIn)).append("\n");
    sb.append("    idNotStartsWith: ").append(toIndentedString(idNotStartsWith)).append("\n");
    sb.append("    idStartsWith: ").append(toIndentedString(idStartsWith)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    nameContains: ").append(toIndentedString(nameContains)).append("\n");
    sb.append("    nameEndsWith: ").append(toIndentedString(nameEndsWith)).append("\n");
    sb.append("    nameGt: ").append(toIndentedString(nameGt)).append("\n");
    sb.append("    nameGte: ").append(toIndentedString(nameGte)).append("\n");
    sb.append("    nameIn: ").append(toIndentedString(nameIn)).append("\n");
    sb.append("    nameLt: ").append(toIndentedString(nameLt)).append("\n");
    sb.append("    nameLte: ").append(toIndentedString(nameLte)).append("\n");
    sb.append("    nameNot: ").append(toIndentedString(nameNot)).append("\n");
    sb.append("    nameNotContains: ").append(toIndentedString(nameNotContains)).append("\n");
    sb.append("    nameNotEndsWith: ").append(toIndentedString(nameNotEndsWith)).append("\n");
    sb.append("    nameNotIn: ").append(toIndentedString(nameNotIn)).append("\n");
    sb.append("    nameNotStartsWith: ").append(toIndentedString(nameNotStartsWith)).append("\n");
    sb.append("    nameStartsWith: ").append(toIndentedString(nameStartsWith)).append("\n");
    sb.append("    NOT: ").append(toIndentedString(NOT)).append("\n");
    sb.append("    OR: ").append(toIndentedString(OR)).append("\n");
    sb.append("    platform: ").append(toIndentedString(platform)).append("\n");
    sb.append("    platformIn: ").append(toIndentedString(platformIn)).append("\n");
    sb.append("    platformNot: ").append(toIndentedString(platformNot)).append("\n");
    sb.append("    platformNotIn: ").append(toIndentedString(platformNotIn)).append("\n");
    sb.append("    preset: ").append(toIndentedString(preset)).append("\n");
    sb.append("    presetIn: ").append(toIndentedString(presetIn)).append("\n");
    sb.append("    presetNot: ").append(toIndentedString(presetNot)).append("\n");
    sb.append("    presetNotIn: ").append(toIndentedString(presetNotIn)).append("\n");
    sb.append("    usersEvery: ").append(toIndentedString(usersEvery)).append("\n");
    sb.append("    usersNone: ").append(toIndentedString(usersNone)).append("\n");
    sb.append("    usersSome: ").append(toIndentedString(usersSome)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

