/*
 * Tower SDK API
 * cloudtower operation API and SDK
 *
 * The version of the OpenAPI document: 1.7.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.smartx.tower.model;

import java.util.Objects;
import java.util.Arrays;
import java.util.Map;
import java.util.HashMap;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import com.smartx.tower.model.UploadResourceType;
import com.smartx.tower.model.UploadTaskStatus;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.util.ArrayList;
import java.util.List;
import org.openapitools.jackson.nullable.JsonNullable;
import com.fasterxml.jackson.annotation.JsonIgnore;
import org.openapitools.jackson.nullable.JsonNullable;
import java.util.NoSuchElementException;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;


/**
 * UploadTaskWhereInput
 */
@JsonPropertyOrder({
  UploadTaskWhereInput.JSON_PROPERTY_A_N_D,
  UploadTaskWhereInput.JSON_PROPERTY_CHUNK_SIZE,
  UploadTaskWhereInput.JSON_PROPERTY_CHUNK_SIZE_GT,
  UploadTaskWhereInput.JSON_PROPERTY_CHUNK_SIZE_GTE,
  UploadTaskWhereInput.JSON_PROPERTY_CHUNK_SIZE_IN,
  UploadTaskWhereInput.JSON_PROPERTY_CHUNK_SIZE_LT,
  UploadTaskWhereInput.JSON_PROPERTY_CHUNK_SIZE_LTE,
  UploadTaskWhereInput.JSON_PROPERTY_CHUNK_SIZE_NOT,
  UploadTaskWhereInput.JSON_PROPERTY_CHUNK_SIZE_NOT_IN,
  UploadTaskWhereInput.JSON_PROPERTY_CURRENT_CHUNK,
  UploadTaskWhereInput.JSON_PROPERTY_CURRENT_CHUNK_GT,
  UploadTaskWhereInput.JSON_PROPERTY_CURRENT_CHUNK_GTE,
  UploadTaskWhereInput.JSON_PROPERTY_CURRENT_CHUNK_IN,
  UploadTaskWhereInput.JSON_PROPERTY_CURRENT_CHUNK_LT,
  UploadTaskWhereInput.JSON_PROPERTY_CURRENT_CHUNK_LTE,
  UploadTaskWhereInput.JSON_PROPERTY_CURRENT_CHUNK_NOT,
  UploadTaskWhereInput.JSON_PROPERTY_CURRENT_CHUNK_NOT_IN,
  UploadTaskWhereInput.JSON_PROPERTY_FINISHED_AT,
  UploadTaskWhereInput.JSON_PROPERTY_FINISHED_AT_GT,
  UploadTaskWhereInput.JSON_PROPERTY_FINISHED_AT_GTE,
  UploadTaskWhereInput.JSON_PROPERTY_FINISHED_AT_IN,
  UploadTaskWhereInput.JSON_PROPERTY_FINISHED_AT_LT,
  UploadTaskWhereInput.JSON_PROPERTY_FINISHED_AT_LTE,
  UploadTaskWhereInput.JSON_PROPERTY_FINISHED_AT_NOT,
  UploadTaskWhereInput.JSON_PROPERTY_FINISHED_AT_NOT_IN,
  UploadTaskWhereInput.JSON_PROPERTY_ID,
  UploadTaskWhereInput.JSON_PROPERTY_ID_CONTAINS,
  UploadTaskWhereInput.JSON_PROPERTY_ID_ENDS_WITH,
  UploadTaskWhereInput.JSON_PROPERTY_ID_GT,
  UploadTaskWhereInput.JSON_PROPERTY_ID_GTE,
  UploadTaskWhereInput.JSON_PROPERTY_ID_IN,
  UploadTaskWhereInput.JSON_PROPERTY_ID_LT,
  UploadTaskWhereInput.JSON_PROPERTY_ID_LTE,
  UploadTaskWhereInput.JSON_PROPERTY_ID_NOT,
  UploadTaskWhereInput.JSON_PROPERTY_ID_NOT_CONTAINS,
  UploadTaskWhereInput.JSON_PROPERTY_ID_NOT_ENDS_WITH,
  UploadTaskWhereInput.JSON_PROPERTY_ID_NOT_IN,
  UploadTaskWhereInput.JSON_PROPERTY_ID_NOT_STARTS_WITH,
  UploadTaskWhereInput.JSON_PROPERTY_ID_STARTS_WITH,
  UploadTaskWhereInput.JSON_PROPERTY_N_O_T,
  UploadTaskWhereInput.JSON_PROPERTY_O_R,
  UploadTaskWhereInput.JSON_PROPERTY_RESOURCE_TYPE,
  UploadTaskWhereInput.JSON_PROPERTY_RESOURCE_TYPE_IN,
  UploadTaskWhereInput.JSON_PROPERTY_RESOURCE_TYPE_NOT,
  UploadTaskWhereInput.JSON_PROPERTY_RESOURCE_TYPE_NOT_IN,
  UploadTaskWhereInput.JSON_PROPERTY_SIZE,
  UploadTaskWhereInput.JSON_PROPERTY_SIZE_GT,
  UploadTaskWhereInput.JSON_PROPERTY_SIZE_GTE,
  UploadTaskWhereInput.JSON_PROPERTY_SIZE_IN,
  UploadTaskWhereInput.JSON_PROPERTY_SIZE_LT,
  UploadTaskWhereInput.JSON_PROPERTY_SIZE_LTE,
  UploadTaskWhereInput.JSON_PROPERTY_SIZE_NOT,
  UploadTaskWhereInput.JSON_PROPERTY_SIZE_NOT_IN,
  UploadTaskWhereInput.JSON_PROPERTY_STARTED_AT,
  UploadTaskWhereInput.JSON_PROPERTY_STARTED_AT_GT,
  UploadTaskWhereInput.JSON_PROPERTY_STARTED_AT_GTE,
  UploadTaskWhereInput.JSON_PROPERTY_STARTED_AT_IN,
  UploadTaskWhereInput.JSON_PROPERTY_STARTED_AT_LT,
  UploadTaskWhereInput.JSON_PROPERTY_STARTED_AT_LTE,
  UploadTaskWhereInput.JSON_PROPERTY_STARTED_AT_NOT,
  UploadTaskWhereInput.JSON_PROPERTY_STARTED_AT_NOT_IN,
  UploadTaskWhereInput.JSON_PROPERTY_STATUS,
  UploadTaskWhereInput.JSON_PROPERTY_STATUS_IN,
  UploadTaskWhereInput.JSON_PROPERTY_STATUS_NOT,
  UploadTaskWhereInput.JSON_PROPERTY_STATUS_NOT_IN,
  UploadTaskWhereInput.JSON_PROPERTY_UPDATED_AT,
  UploadTaskWhereInput.JSON_PROPERTY_UPDATED_AT_GT,
  UploadTaskWhereInput.JSON_PROPERTY_UPDATED_AT_GTE,
  UploadTaskWhereInput.JSON_PROPERTY_UPDATED_AT_IN,
  UploadTaskWhereInput.JSON_PROPERTY_UPDATED_AT_LT,
  UploadTaskWhereInput.JSON_PROPERTY_UPDATED_AT_LTE,
  UploadTaskWhereInput.JSON_PROPERTY_UPDATED_AT_NOT,
  UploadTaskWhereInput.JSON_PROPERTY_UPDATED_AT_NOT_IN
})
@javax.annotation.processing.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2021-10-27T15:59:14.939791800+08:00[Asia/Shanghai]")
public class UploadTaskWhereInput {
  public static final String JSON_PROPERTY_A_N_D = "AND";
  private JsonNullable<List<UploadTaskWhereInput>> AND = JsonNullable.<List<UploadTaskWhereInput>>undefined();

  public static final String JSON_PROPERTY_CHUNK_SIZE = "chunk_size";
  private JsonNullable<Double> chunkSize = JsonNullable.<Double>undefined();

  public static final String JSON_PROPERTY_CHUNK_SIZE_GT = "chunk_size_gt";
  private JsonNullable<Double> chunkSizeGt = JsonNullable.<Double>undefined();

  public static final String JSON_PROPERTY_CHUNK_SIZE_GTE = "chunk_size_gte";
  private JsonNullable<Double> chunkSizeGte = JsonNullable.<Double>undefined();

  public static final String JSON_PROPERTY_CHUNK_SIZE_IN = "chunk_size_in";
  private JsonNullable<List<Double>> chunkSizeIn = JsonNullable.<List<Double>>undefined();

  public static final String JSON_PROPERTY_CHUNK_SIZE_LT = "chunk_size_lt";
  private JsonNullable<Double> chunkSizeLt = JsonNullable.<Double>undefined();

  public static final String JSON_PROPERTY_CHUNK_SIZE_LTE = "chunk_size_lte";
  private JsonNullable<Double> chunkSizeLte = JsonNullable.<Double>undefined();

  public static final String JSON_PROPERTY_CHUNK_SIZE_NOT = "chunk_size_not";
  private JsonNullable<Double> chunkSizeNot = JsonNullable.<Double>undefined();

  public static final String JSON_PROPERTY_CHUNK_SIZE_NOT_IN = "chunk_size_not_in";
  private JsonNullable<List<Double>> chunkSizeNotIn = JsonNullable.<List<Double>>undefined();

  public static final String JSON_PROPERTY_CURRENT_CHUNK = "current_chunk";
  private JsonNullable<Double> currentChunk = JsonNullable.<Double>undefined();

  public static final String JSON_PROPERTY_CURRENT_CHUNK_GT = "current_chunk_gt";
  private JsonNullable<Double> currentChunkGt = JsonNullable.<Double>undefined();

  public static final String JSON_PROPERTY_CURRENT_CHUNK_GTE = "current_chunk_gte";
  private JsonNullable<Double> currentChunkGte = JsonNullable.<Double>undefined();

  public static final String JSON_PROPERTY_CURRENT_CHUNK_IN = "current_chunk_in";
  private JsonNullable<List<Double>> currentChunkIn = JsonNullable.<List<Double>>undefined();

  public static final String JSON_PROPERTY_CURRENT_CHUNK_LT = "current_chunk_lt";
  private JsonNullable<Double> currentChunkLt = JsonNullable.<Double>undefined();

  public static final String JSON_PROPERTY_CURRENT_CHUNK_LTE = "current_chunk_lte";
  private JsonNullable<Double> currentChunkLte = JsonNullable.<Double>undefined();

  public static final String JSON_PROPERTY_CURRENT_CHUNK_NOT = "current_chunk_not";
  private JsonNullable<Double> currentChunkNot = JsonNullable.<Double>undefined();

  public static final String JSON_PROPERTY_CURRENT_CHUNK_NOT_IN = "current_chunk_not_in";
  private JsonNullable<List<Double>> currentChunkNotIn = JsonNullable.<List<Double>>undefined();

  public static final String JSON_PROPERTY_FINISHED_AT = "finished_at";
  private JsonNullable<String> finishedAt = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_FINISHED_AT_GT = "finished_at_gt";
  private JsonNullable<String> finishedAtGt = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_FINISHED_AT_GTE = "finished_at_gte";
  private JsonNullable<String> finishedAtGte = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_FINISHED_AT_IN = "finished_at_in";
  private JsonNullable<List<String>> finishedAtIn = JsonNullable.<List<String>>undefined();

  public static final String JSON_PROPERTY_FINISHED_AT_LT = "finished_at_lt";
  private JsonNullable<String> finishedAtLt = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_FINISHED_AT_LTE = "finished_at_lte";
  private JsonNullable<String> finishedAtLte = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_FINISHED_AT_NOT = "finished_at_not";
  private JsonNullable<String> finishedAtNot = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_FINISHED_AT_NOT_IN = "finished_at_not_in";
  private JsonNullable<List<String>> finishedAtNotIn = JsonNullable.<List<String>>undefined();

  public static final String JSON_PROPERTY_ID = "id";
  private JsonNullable<String> id = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_ID_CONTAINS = "id_contains";
  private JsonNullable<String> idContains = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_ID_ENDS_WITH = "id_ends_with";
  private JsonNullable<String> idEndsWith = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_ID_GT = "id_gt";
  private JsonNullable<String> idGt = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_ID_GTE = "id_gte";
  private JsonNullable<String> idGte = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_ID_IN = "id_in";
  private JsonNullable<List<String>> idIn = JsonNullable.<List<String>>undefined();

  public static final String JSON_PROPERTY_ID_LT = "id_lt";
  private JsonNullable<String> idLt = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_ID_LTE = "id_lte";
  private JsonNullable<String> idLte = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_ID_NOT = "id_not";
  private JsonNullable<String> idNot = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_ID_NOT_CONTAINS = "id_not_contains";
  private JsonNullable<String> idNotContains = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_ID_NOT_ENDS_WITH = "id_not_ends_with";
  private JsonNullable<String> idNotEndsWith = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_ID_NOT_IN = "id_not_in";
  private JsonNullable<List<String>> idNotIn = JsonNullable.<List<String>>undefined();

  public static final String JSON_PROPERTY_ID_NOT_STARTS_WITH = "id_not_starts_with";
  private JsonNullable<String> idNotStartsWith = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_ID_STARTS_WITH = "id_starts_with";
  private JsonNullable<String> idStartsWith = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_N_O_T = "NOT";
  private JsonNullable<List<UploadTaskWhereInput>> NOT = JsonNullable.<List<UploadTaskWhereInput>>undefined();

  public static final String JSON_PROPERTY_O_R = "OR";
  private JsonNullable<List<UploadTaskWhereInput>> OR = JsonNullable.<List<UploadTaskWhereInput>>undefined();

  public static final String JSON_PROPERTY_RESOURCE_TYPE = "resource_type";
  private JsonNullable<UploadResourceType> resourceType = JsonNullable.<UploadResourceType>undefined();

  public static final String JSON_PROPERTY_RESOURCE_TYPE_IN = "resource_type_in";
  private JsonNullable<List<UploadResourceType>> resourceTypeIn = JsonNullable.<List<UploadResourceType>>undefined();

  public static final String JSON_PROPERTY_RESOURCE_TYPE_NOT = "resource_type_not";
  private JsonNullable<UploadResourceType> resourceTypeNot = JsonNullable.<UploadResourceType>undefined();

  public static final String JSON_PROPERTY_RESOURCE_TYPE_NOT_IN = "resource_type_not_in";
  private JsonNullable<List<UploadResourceType>> resourceTypeNotIn = JsonNullable.<List<UploadResourceType>>undefined();

  public static final String JSON_PROPERTY_SIZE = "size";
  private JsonNullable<Double> size = JsonNullable.<Double>undefined();

  public static final String JSON_PROPERTY_SIZE_GT = "size_gt";
  private JsonNullable<Double> sizeGt = JsonNullable.<Double>undefined();

  public static final String JSON_PROPERTY_SIZE_GTE = "size_gte";
  private JsonNullable<Double> sizeGte = JsonNullable.<Double>undefined();

  public static final String JSON_PROPERTY_SIZE_IN = "size_in";
  private JsonNullable<List<Double>> sizeIn = JsonNullable.<List<Double>>undefined();

  public static final String JSON_PROPERTY_SIZE_LT = "size_lt";
  private JsonNullable<Double> sizeLt = JsonNullable.<Double>undefined();

  public static final String JSON_PROPERTY_SIZE_LTE = "size_lte";
  private JsonNullable<Double> sizeLte = JsonNullable.<Double>undefined();

  public static final String JSON_PROPERTY_SIZE_NOT = "size_not";
  private JsonNullable<Double> sizeNot = JsonNullable.<Double>undefined();

  public static final String JSON_PROPERTY_SIZE_NOT_IN = "size_not_in";
  private JsonNullable<List<Double>> sizeNotIn = JsonNullable.<List<Double>>undefined();

  public static final String JSON_PROPERTY_STARTED_AT = "started_at";
  private JsonNullable<String> startedAt = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_STARTED_AT_GT = "started_at_gt";
  private JsonNullable<String> startedAtGt = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_STARTED_AT_GTE = "started_at_gte";
  private JsonNullable<String> startedAtGte = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_STARTED_AT_IN = "started_at_in";
  private JsonNullable<List<String>> startedAtIn = JsonNullable.<List<String>>undefined();

  public static final String JSON_PROPERTY_STARTED_AT_LT = "started_at_lt";
  private JsonNullable<String> startedAtLt = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_STARTED_AT_LTE = "started_at_lte";
  private JsonNullable<String> startedAtLte = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_STARTED_AT_NOT = "started_at_not";
  private JsonNullable<String> startedAtNot = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_STARTED_AT_NOT_IN = "started_at_not_in";
  private JsonNullable<List<String>> startedAtNotIn = JsonNullable.<List<String>>undefined();

  public static final String JSON_PROPERTY_STATUS = "status";
  private JsonNullable<UploadTaskStatus> status = JsonNullable.<UploadTaskStatus>undefined();

  public static final String JSON_PROPERTY_STATUS_IN = "status_in";
  private JsonNullable<List<UploadTaskStatus>> statusIn = JsonNullable.<List<UploadTaskStatus>>undefined();

  public static final String JSON_PROPERTY_STATUS_NOT = "status_not";
  private JsonNullable<UploadTaskStatus> statusNot = JsonNullable.<UploadTaskStatus>undefined();

  public static final String JSON_PROPERTY_STATUS_NOT_IN = "status_not_in";
  private JsonNullable<List<UploadTaskStatus>> statusNotIn = JsonNullable.<List<UploadTaskStatus>>undefined();

  public static final String JSON_PROPERTY_UPDATED_AT = "updatedAt";
  private JsonNullable<String> updatedAt = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_UPDATED_AT_GT = "updatedAt_gt";
  private JsonNullable<String> updatedAtGt = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_UPDATED_AT_GTE = "updatedAt_gte";
  private JsonNullable<String> updatedAtGte = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_UPDATED_AT_IN = "updatedAt_in";
  private JsonNullable<List<String>> updatedAtIn = JsonNullable.<List<String>>undefined();

  public static final String JSON_PROPERTY_UPDATED_AT_LT = "updatedAt_lt";
  private JsonNullable<String> updatedAtLt = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_UPDATED_AT_LTE = "updatedAt_lte";
  private JsonNullable<String> updatedAtLte = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_UPDATED_AT_NOT = "updatedAt_not";
  private JsonNullable<String> updatedAtNot = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_UPDATED_AT_NOT_IN = "updatedAt_not_in";
  private JsonNullable<List<String>> updatedAtNotIn = JsonNullable.<List<String>>undefined();


  public UploadTaskWhereInput AND(List<UploadTaskWhereInput> AND) {
    this.AND = JsonNullable.<List<UploadTaskWhereInput>>of(AND);
    return this;
  }

  public UploadTaskWhereInput addANDItem(UploadTaskWhereInput ANDItem) {
    if (this.AND == null || !this.AND.isPresent()) {
      this.AND = JsonNullable.<List<UploadTaskWhereInput>>of(new ArrayList<>());
    }
    try {
      this.AND.get().add(ANDItem);
    } catch (java.util.NoSuchElementException e) {
      // this can never happen, as we make sure above that the value is present
    }
    return this;
  }

   /**
   * Get AND
   * @return AND
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public List<UploadTaskWhereInput> getAND() {
        return AND.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_A_N_D)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<List<UploadTaskWhereInput>> getAND_JsonNullable() {
    return AND;
  }
  
  @JsonProperty(JSON_PROPERTY_A_N_D)
  public void setAND_JsonNullable(JsonNullable<List<UploadTaskWhereInput>> AND) {
    this.AND = AND;
  }

  public void setAND(List<UploadTaskWhereInput> AND) {
    this.AND = JsonNullable.<List<UploadTaskWhereInput>>of(AND);
  }


  public UploadTaskWhereInput chunkSize(Double chunkSize) {
    this.chunkSize = JsonNullable.<Double>of(chunkSize);
    return this;
  }

   /**
   * Get chunkSize
   * @return chunkSize
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public Double getChunkSize() {
        return chunkSize.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_CHUNK_SIZE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<Double> getChunkSize_JsonNullable() {
    return chunkSize;
  }
  
  @JsonProperty(JSON_PROPERTY_CHUNK_SIZE)
  public void setChunkSize_JsonNullable(JsonNullable<Double> chunkSize) {
    this.chunkSize = chunkSize;
  }

  public void setChunkSize(Double chunkSize) {
    this.chunkSize = JsonNullable.<Double>of(chunkSize);
  }


  public UploadTaskWhereInput chunkSizeGt(Double chunkSizeGt) {
    this.chunkSizeGt = JsonNullable.<Double>of(chunkSizeGt);
    return this;
  }

   /**
   * Get chunkSizeGt
   * @return chunkSizeGt
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public Double getChunkSizeGt() {
        return chunkSizeGt.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_CHUNK_SIZE_GT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<Double> getChunkSizeGt_JsonNullable() {
    return chunkSizeGt;
  }
  
  @JsonProperty(JSON_PROPERTY_CHUNK_SIZE_GT)
  public void setChunkSizeGt_JsonNullable(JsonNullable<Double> chunkSizeGt) {
    this.chunkSizeGt = chunkSizeGt;
  }

  public void setChunkSizeGt(Double chunkSizeGt) {
    this.chunkSizeGt = JsonNullable.<Double>of(chunkSizeGt);
  }


  public UploadTaskWhereInput chunkSizeGte(Double chunkSizeGte) {
    this.chunkSizeGte = JsonNullable.<Double>of(chunkSizeGte);
    return this;
  }

   /**
   * Get chunkSizeGte
   * @return chunkSizeGte
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public Double getChunkSizeGte() {
        return chunkSizeGte.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_CHUNK_SIZE_GTE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<Double> getChunkSizeGte_JsonNullable() {
    return chunkSizeGte;
  }
  
  @JsonProperty(JSON_PROPERTY_CHUNK_SIZE_GTE)
  public void setChunkSizeGte_JsonNullable(JsonNullable<Double> chunkSizeGte) {
    this.chunkSizeGte = chunkSizeGte;
  }

  public void setChunkSizeGte(Double chunkSizeGte) {
    this.chunkSizeGte = JsonNullable.<Double>of(chunkSizeGte);
  }


  public UploadTaskWhereInput chunkSizeIn(List<Double> chunkSizeIn) {
    this.chunkSizeIn = JsonNullable.<List<Double>>of(chunkSizeIn);
    return this;
  }

  public UploadTaskWhereInput addChunkSizeInItem(Double chunkSizeInItem) {
    if (this.chunkSizeIn == null || !this.chunkSizeIn.isPresent()) {
      this.chunkSizeIn = JsonNullable.<List<Double>>of(new ArrayList<>());
    }
    try {
      this.chunkSizeIn.get().add(chunkSizeInItem);
    } catch (java.util.NoSuchElementException e) {
      // this can never happen, as we make sure above that the value is present
    }
    return this;
  }

   /**
   * Get chunkSizeIn
   * @return chunkSizeIn
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public List<Double> getChunkSizeIn() {
        return chunkSizeIn.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_CHUNK_SIZE_IN)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<List<Double>> getChunkSizeIn_JsonNullable() {
    return chunkSizeIn;
  }
  
  @JsonProperty(JSON_PROPERTY_CHUNK_SIZE_IN)
  public void setChunkSizeIn_JsonNullable(JsonNullable<List<Double>> chunkSizeIn) {
    this.chunkSizeIn = chunkSizeIn;
  }

  public void setChunkSizeIn(List<Double> chunkSizeIn) {
    this.chunkSizeIn = JsonNullable.<List<Double>>of(chunkSizeIn);
  }


  public UploadTaskWhereInput chunkSizeLt(Double chunkSizeLt) {
    this.chunkSizeLt = JsonNullable.<Double>of(chunkSizeLt);
    return this;
  }

   /**
   * Get chunkSizeLt
   * @return chunkSizeLt
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public Double getChunkSizeLt() {
        return chunkSizeLt.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_CHUNK_SIZE_LT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<Double> getChunkSizeLt_JsonNullable() {
    return chunkSizeLt;
  }
  
  @JsonProperty(JSON_PROPERTY_CHUNK_SIZE_LT)
  public void setChunkSizeLt_JsonNullable(JsonNullable<Double> chunkSizeLt) {
    this.chunkSizeLt = chunkSizeLt;
  }

  public void setChunkSizeLt(Double chunkSizeLt) {
    this.chunkSizeLt = JsonNullable.<Double>of(chunkSizeLt);
  }


  public UploadTaskWhereInput chunkSizeLte(Double chunkSizeLte) {
    this.chunkSizeLte = JsonNullable.<Double>of(chunkSizeLte);
    return this;
  }

   /**
   * Get chunkSizeLte
   * @return chunkSizeLte
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public Double getChunkSizeLte() {
        return chunkSizeLte.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_CHUNK_SIZE_LTE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<Double> getChunkSizeLte_JsonNullable() {
    return chunkSizeLte;
  }
  
  @JsonProperty(JSON_PROPERTY_CHUNK_SIZE_LTE)
  public void setChunkSizeLte_JsonNullable(JsonNullable<Double> chunkSizeLte) {
    this.chunkSizeLte = chunkSizeLte;
  }

  public void setChunkSizeLte(Double chunkSizeLte) {
    this.chunkSizeLte = JsonNullable.<Double>of(chunkSizeLte);
  }


  public UploadTaskWhereInput chunkSizeNot(Double chunkSizeNot) {
    this.chunkSizeNot = JsonNullable.<Double>of(chunkSizeNot);
    return this;
  }

   /**
   * Get chunkSizeNot
   * @return chunkSizeNot
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public Double getChunkSizeNot() {
        return chunkSizeNot.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_CHUNK_SIZE_NOT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<Double> getChunkSizeNot_JsonNullable() {
    return chunkSizeNot;
  }
  
  @JsonProperty(JSON_PROPERTY_CHUNK_SIZE_NOT)
  public void setChunkSizeNot_JsonNullable(JsonNullable<Double> chunkSizeNot) {
    this.chunkSizeNot = chunkSizeNot;
  }

  public void setChunkSizeNot(Double chunkSizeNot) {
    this.chunkSizeNot = JsonNullable.<Double>of(chunkSizeNot);
  }


  public UploadTaskWhereInput chunkSizeNotIn(List<Double> chunkSizeNotIn) {
    this.chunkSizeNotIn = JsonNullable.<List<Double>>of(chunkSizeNotIn);
    return this;
  }

  public UploadTaskWhereInput addChunkSizeNotInItem(Double chunkSizeNotInItem) {
    if (this.chunkSizeNotIn == null || !this.chunkSizeNotIn.isPresent()) {
      this.chunkSizeNotIn = JsonNullable.<List<Double>>of(new ArrayList<>());
    }
    try {
      this.chunkSizeNotIn.get().add(chunkSizeNotInItem);
    } catch (java.util.NoSuchElementException e) {
      // this can never happen, as we make sure above that the value is present
    }
    return this;
  }

   /**
   * Get chunkSizeNotIn
   * @return chunkSizeNotIn
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public List<Double> getChunkSizeNotIn() {
        return chunkSizeNotIn.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_CHUNK_SIZE_NOT_IN)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<List<Double>> getChunkSizeNotIn_JsonNullable() {
    return chunkSizeNotIn;
  }
  
  @JsonProperty(JSON_PROPERTY_CHUNK_SIZE_NOT_IN)
  public void setChunkSizeNotIn_JsonNullable(JsonNullable<List<Double>> chunkSizeNotIn) {
    this.chunkSizeNotIn = chunkSizeNotIn;
  }

  public void setChunkSizeNotIn(List<Double> chunkSizeNotIn) {
    this.chunkSizeNotIn = JsonNullable.<List<Double>>of(chunkSizeNotIn);
  }


  public UploadTaskWhereInput currentChunk(Double currentChunk) {
    this.currentChunk = JsonNullable.<Double>of(currentChunk);
    return this;
  }

   /**
   * Get currentChunk
   * @return currentChunk
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public Double getCurrentChunk() {
        return currentChunk.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_CURRENT_CHUNK)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<Double> getCurrentChunk_JsonNullable() {
    return currentChunk;
  }
  
  @JsonProperty(JSON_PROPERTY_CURRENT_CHUNK)
  public void setCurrentChunk_JsonNullable(JsonNullable<Double> currentChunk) {
    this.currentChunk = currentChunk;
  }

  public void setCurrentChunk(Double currentChunk) {
    this.currentChunk = JsonNullable.<Double>of(currentChunk);
  }


  public UploadTaskWhereInput currentChunkGt(Double currentChunkGt) {
    this.currentChunkGt = JsonNullable.<Double>of(currentChunkGt);
    return this;
  }

   /**
   * Get currentChunkGt
   * @return currentChunkGt
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public Double getCurrentChunkGt() {
        return currentChunkGt.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_CURRENT_CHUNK_GT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<Double> getCurrentChunkGt_JsonNullable() {
    return currentChunkGt;
  }
  
  @JsonProperty(JSON_PROPERTY_CURRENT_CHUNK_GT)
  public void setCurrentChunkGt_JsonNullable(JsonNullable<Double> currentChunkGt) {
    this.currentChunkGt = currentChunkGt;
  }

  public void setCurrentChunkGt(Double currentChunkGt) {
    this.currentChunkGt = JsonNullable.<Double>of(currentChunkGt);
  }


  public UploadTaskWhereInput currentChunkGte(Double currentChunkGte) {
    this.currentChunkGte = JsonNullable.<Double>of(currentChunkGte);
    return this;
  }

   /**
   * Get currentChunkGte
   * @return currentChunkGte
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public Double getCurrentChunkGte() {
        return currentChunkGte.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_CURRENT_CHUNK_GTE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<Double> getCurrentChunkGte_JsonNullable() {
    return currentChunkGte;
  }
  
  @JsonProperty(JSON_PROPERTY_CURRENT_CHUNK_GTE)
  public void setCurrentChunkGte_JsonNullable(JsonNullable<Double> currentChunkGte) {
    this.currentChunkGte = currentChunkGte;
  }

  public void setCurrentChunkGte(Double currentChunkGte) {
    this.currentChunkGte = JsonNullable.<Double>of(currentChunkGte);
  }


  public UploadTaskWhereInput currentChunkIn(List<Double> currentChunkIn) {
    this.currentChunkIn = JsonNullable.<List<Double>>of(currentChunkIn);
    return this;
  }

  public UploadTaskWhereInput addCurrentChunkInItem(Double currentChunkInItem) {
    if (this.currentChunkIn == null || !this.currentChunkIn.isPresent()) {
      this.currentChunkIn = JsonNullable.<List<Double>>of(new ArrayList<>());
    }
    try {
      this.currentChunkIn.get().add(currentChunkInItem);
    } catch (java.util.NoSuchElementException e) {
      // this can never happen, as we make sure above that the value is present
    }
    return this;
  }

   /**
   * Get currentChunkIn
   * @return currentChunkIn
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public List<Double> getCurrentChunkIn() {
        return currentChunkIn.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_CURRENT_CHUNK_IN)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<List<Double>> getCurrentChunkIn_JsonNullable() {
    return currentChunkIn;
  }
  
  @JsonProperty(JSON_PROPERTY_CURRENT_CHUNK_IN)
  public void setCurrentChunkIn_JsonNullable(JsonNullable<List<Double>> currentChunkIn) {
    this.currentChunkIn = currentChunkIn;
  }

  public void setCurrentChunkIn(List<Double> currentChunkIn) {
    this.currentChunkIn = JsonNullable.<List<Double>>of(currentChunkIn);
  }


  public UploadTaskWhereInput currentChunkLt(Double currentChunkLt) {
    this.currentChunkLt = JsonNullable.<Double>of(currentChunkLt);
    return this;
  }

   /**
   * Get currentChunkLt
   * @return currentChunkLt
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public Double getCurrentChunkLt() {
        return currentChunkLt.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_CURRENT_CHUNK_LT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<Double> getCurrentChunkLt_JsonNullable() {
    return currentChunkLt;
  }
  
  @JsonProperty(JSON_PROPERTY_CURRENT_CHUNK_LT)
  public void setCurrentChunkLt_JsonNullable(JsonNullable<Double> currentChunkLt) {
    this.currentChunkLt = currentChunkLt;
  }

  public void setCurrentChunkLt(Double currentChunkLt) {
    this.currentChunkLt = JsonNullable.<Double>of(currentChunkLt);
  }


  public UploadTaskWhereInput currentChunkLte(Double currentChunkLte) {
    this.currentChunkLte = JsonNullable.<Double>of(currentChunkLte);
    return this;
  }

   /**
   * Get currentChunkLte
   * @return currentChunkLte
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public Double getCurrentChunkLte() {
        return currentChunkLte.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_CURRENT_CHUNK_LTE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<Double> getCurrentChunkLte_JsonNullable() {
    return currentChunkLte;
  }
  
  @JsonProperty(JSON_PROPERTY_CURRENT_CHUNK_LTE)
  public void setCurrentChunkLte_JsonNullable(JsonNullable<Double> currentChunkLte) {
    this.currentChunkLte = currentChunkLte;
  }

  public void setCurrentChunkLte(Double currentChunkLte) {
    this.currentChunkLte = JsonNullable.<Double>of(currentChunkLte);
  }


  public UploadTaskWhereInput currentChunkNot(Double currentChunkNot) {
    this.currentChunkNot = JsonNullable.<Double>of(currentChunkNot);
    return this;
  }

   /**
   * Get currentChunkNot
   * @return currentChunkNot
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public Double getCurrentChunkNot() {
        return currentChunkNot.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_CURRENT_CHUNK_NOT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<Double> getCurrentChunkNot_JsonNullable() {
    return currentChunkNot;
  }
  
  @JsonProperty(JSON_PROPERTY_CURRENT_CHUNK_NOT)
  public void setCurrentChunkNot_JsonNullable(JsonNullable<Double> currentChunkNot) {
    this.currentChunkNot = currentChunkNot;
  }

  public void setCurrentChunkNot(Double currentChunkNot) {
    this.currentChunkNot = JsonNullable.<Double>of(currentChunkNot);
  }


  public UploadTaskWhereInput currentChunkNotIn(List<Double> currentChunkNotIn) {
    this.currentChunkNotIn = JsonNullable.<List<Double>>of(currentChunkNotIn);
    return this;
  }

  public UploadTaskWhereInput addCurrentChunkNotInItem(Double currentChunkNotInItem) {
    if (this.currentChunkNotIn == null || !this.currentChunkNotIn.isPresent()) {
      this.currentChunkNotIn = JsonNullable.<List<Double>>of(new ArrayList<>());
    }
    try {
      this.currentChunkNotIn.get().add(currentChunkNotInItem);
    } catch (java.util.NoSuchElementException e) {
      // this can never happen, as we make sure above that the value is present
    }
    return this;
  }

   /**
   * Get currentChunkNotIn
   * @return currentChunkNotIn
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public List<Double> getCurrentChunkNotIn() {
        return currentChunkNotIn.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_CURRENT_CHUNK_NOT_IN)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<List<Double>> getCurrentChunkNotIn_JsonNullable() {
    return currentChunkNotIn;
  }
  
  @JsonProperty(JSON_PROPERTY_CURRENT_CHUNK_NOT_IN)
  public void setCurrentChunkNotIn_JsonNullable(JsonNullable<List<Double>> currentChunkNotIn) {
    this.currentChunkNotIn = currentChunkNotIn;
  }

  public void setCurrentChunkNotIn(List<Double> currentChunkNotIn) {
    this.currentChunkNotIn = JsonNullable.<List<Double>>of(currentChunkNotIn);
  }


  public UploadTaskWhereInput finishedAt(String finishedAt) {
    this.finishedAt = JsonNullable.<String>of(finishedAt);
    return this;
  }

   /**
   * Get finishedAt
   * @return finishedAt
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getFinishedAt() {
        return finishedAt.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_FINISHED_AT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getFinishedAt_JsonNullable() {
    return finishedAt;
  }
  
  @JsonProperty(JSON_PROPERTY_FINISHED_AT)
  public void setFinishedAt_JsonNullable(JsonNullable<String> finishedAt) {
    this.finishedAt = finishedAt;
  }

  public void setFinishedAt(String finishedAt) {
    this.finishedAt = JsonNullable.<String>of(finishedAt);
  }


  public UploadTaskWhereInput finishedAtGt(String finishedAtGt) {
    this.finishedAtGt = JsonNullable.<String>of(finishedAtGt);
    return this;
  }

   /**
   * Get finishedAtGt
   * @return finishedAtGt
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getFinishedAtGt() {
        return finishedAtGt.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_FINISHED_AT_GT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getFinishedAtGt_JsonNullable() {
    return finishedAtGt;
  }
  
  @JsonProperty(JSON_PROPERTY_FINISHED_AT_GT)
  public void setFinishedAtGt_JsonNullable(JsonNullable<String> finishedAtGt) {
    this.finishedAtGt = finishedAtGt;
  }

  public void setFinishedAtGt(String finishedAtGt) {
    this.finishedAtGt = JsonNullable.<String>of(finishedAtGt);
  }


  public UploadTaskWhereInput finishedAtGte(String finishedAtGte) {
    this.finishedAtGte = JsonNullable.<String>of(finishedAtGte);
    return this;
  }

   /**
   * Get finishedAtGte
   * @return finishedAtGte
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getFinishedAtGte() {
        return finishedAtGte.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_FINISHED_AT_GTE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getFinishedAtGte_JsonNullable() {
    return finishedAtGte;
  }
  
  @JsonProperty(JSON_PROPERTY_FINISHED_AT_GTE)
  public void setFinishedAtGte_JsonNullable(JsonNullable<String> finishedAtGte) {
    this.finishedAtGte = finishedAtGte;
  }

  public void setFinishedAtGte(String finishedAtGte) {
    this.finishedAtGte = JsonNullable.<String>of(finishedAtGte);
  }


  public UploadTaskWhereInput finishedAtIn(List<String> finishedAtIn) {
    this.finishedAtIn = JsonNullable.<List<String>>of(finishedAtIn);
    return this;
  }

  public UploadTaskWhereInput addFinishedAtInItem(String finishedAtInItem) {
    if (this.finishedAtIn == null || !this.finishedAtIn.isPresent()) {
      this.finishedAtIn = JsonNullable.<List<String>>of(new ArrayList<>());
    }
    try {
      this.finishedAtIn.get().add(finishedAtInItem);
    } catch (java.util.NoSuchElementException e) {
      // this can never happen, as we make sure above that the value is present
    }
    return this;
  }

   /**
   * Get finishedAtIn
   * @return finishedAtIn
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public List<String> getFinishedAtIn() {
        return finishedAtIn.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_FINISHED_AT_IN)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<List<String>> getFinishedAtIn_JsonNullable() {
    return finishedAtIn;
  }
  
  @JsonProperty(JSON_PROPERTY_FINISHED_AT_IN)
  public void setFinishedAtIn_JsonNullable(JsonNullable<List<String>> finishedAtIn) {
    this.finishedAtIn = finishedAtIn;
  }

  public void setFinishedAtIn(List<String> finishedAtIn) {
    this.finishedAtIn = JsonNullable.<List<String>>of(finishedAtIn);
  }


  public UploadTaskWhereInput finishedAtLt(String finishedAtLt) {
    this.finishedAtLt = JsonNullable.<String>of(finishedAtLt);
    return this;
  }

   /**
   * Get finishedAtLt
   * @return finishedAtLt
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getFinishedAtLt() {
        return finishedAtLt.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_FINISHED_AT_LT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getFinishedAtLt_JsonNullable() {
    return finishedAtLt;
  }
  
  @JsonProperty(JSON_PROPERTY_FINISHED_AT_LT)
  public void setFinishedAtLt_JsonNullable(JsonNullable<String> finishedAtLt) {
    this.finishedAtLt = finishedAtLt;
  }

  public void setFinishedAtLt(String finishedAtLt) {
    this.finishedAtLt = JsonNullable.<String>of(finishedAtLt);
  }


  public UploadTaskWhereInput finishedAtLte(String finishedAtLte) {
    this.finishedAtLte = JsonNullable.<String>of(finishedAtLte);
    return this;
  }

   /**
   * Get finishedAtLte
   * @return finishedAtLte
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getFinishedAtLte() {
        return finishedAtLte.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_FINISHED_AT_LTE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getFinishedAtLte_JsonNullable() {
    return finishedAtLte;
  }
  
  @JsonProperty(JSON_PROPERTY_FINISHED_AT_LTE)
  public void setFinishedAtLte_JsonNullable(JsonNullable<String> finishedAtLte) {
    this.finishedAtLte = finishedAtLte;
  }

  public void setFinishedAtLte(String finishedAtLte) {
    this.finishedAtLte = JsonNullable.<String>of(finishedAtLte);
  }


  public UploadTaskWhereInput finishedAtNot(String finishedAtNot) {
    this.finishedAtNot = JsonNullable.<String>of(finishedAtNot);
    return this;
  }

   /**
   * Get finishedAtNot
   * @return finishedAtNot
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getFinishedAtNot() {
        return finishedAtNot.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_FINISHED_AT_NOT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getFinishedAtNot_JsonNullable() {
    return finishedAtNot;
  }
  
  @JsonProperty(JSON_PROPERTY_FINISHED_AT_NOT)
  public void setFinishedAtNot_JsonNullable(JsonNullable<String> finishedAtNot) {
    this.finishedAtNot = finishedAtNot;
  }

  public void setFinishedAtNot(String finishedAtNot) {
    this.finishedAtNot = JsonNullable.<String>of(finishedAtNot);
  }


  public UploadTaskWhereInput finishedAtNotIn(List<String> finishedAtNotIn) {
    this.finishedAtNotIn = JsonNullable.<List<String>>of(finishedAtNotIn);
    return this;
  }

  public UploadTaskWhereInput addFinishedAtNotInItem(String finishedAtNotInItem) {
    if (this.finishedAtNotIn == null || !this.finishedAtNotIn.isPresent()) {
      this.finishedAtNotIn = JsonNullable.<List<String>>of(new ArrayList<>());
    }
    try {
      this.finishedAtNotIn.get().add(finishedAtNotInItem);
    } catch (java.util.NoSuchElementException e) {
      // this can never happen, as we make sure above that the value is present
    }
    return this;
  }

   /**
   * Get finishedAtNotIn
   * @return finishedAtNotIn
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public List<String> getFinishedAtNotIn() {
        return finishedAtNotIn.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_FINISHED_AT_NOT_IN)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<List<String>> getFinishedAtNotIn_JsonNullable() {
    return finishedAtNotIn;
  }
  
  @JsonProperty(JSON_PROPERTY_FINISHED_AT_NOT_IN)
  public void setFinishedAtNotIn_JsonNullable(JsonNullable<List<String>> finishedAtNotIn) {
    this.finishedAtNotIn = finishedAtNotIn;
  }

  public void setFinishedAtNotIn(List<String> finishedAtNotIn) {
    this.finishedAtNotIn = JsonNullable.<List<String>>of(finishedAtNotIn);
  }


  public UploadTaskWhereInput id(String id) {
    this.id = JsonNullable.<String>of(id);
    return this;
  }

   /**
   * Get id
   * @return id
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getId() {
        return id.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getId_JsonNullable() {
    return id;
  }
  
  @JsonProperty(JSON_PROPERTY_ID)
  public void setId_JsonNullable(JsonNullable<String> id) {
    this.id = id;
  }

  public void setId(String id) {
    this.id = JsonNullable.<String>of(id);
  }


  public UploadTaskWhereInput idContains(String idContains) {
    this.idContains = JsonNullable.<String>of(idContains);
    return this;
  }

   /**
   * Get idContains
   * @return idContains
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getIdContains() {
        return idContains.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_ID_CONTAINS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getIdContains_JsonNullable() {
    return idContains;
  }
  
  @JsonProperty(JSON_PROPERTY_ID_CONTAINS)
  public void setIdContains_JsonNullable(JsonNullable<String> idContains) {
    this.idContains = idContains;
  }

  public void setIdContains(String idContains) {
    this.idContains = JsonNullable.<String>of(idContains);
  }


  public UploadTaskWhereInput idEndsWith(String idEndsWith) {
    this.idEndsWith = JsonNullable.<String>of(idEndsWith);
    return this;
  }

   /**
   * Get idEndsWith
   * @return idEndsWith
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getIdEndsWith() {
        return idEndsWith.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_ID_ENDS_WITH)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getIdEndsWith_JsonNullable() {
    return idEndsWith;
  }
  
  @JsonProperty(JSON_PROPERTY_ID_ENDS_WITH)
  public void setIdEndsWith_JsonNullable(JsonNullable<String> idEndsWith) {
    this.idEndsWith = idEndsWith;
  }

  public void setIdEndsWith(String idEndsWith) {
    this.idEndsWith = JsonNullable.<String>of(idEndsWith);
  }


  public UploadTaskWhereInput idGt(String idGt) {
    this.idGt = JsonNullable.<String>of(idGt);
    return this;
  }

   /**
   * Get idGt
   * @return idGt
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getIdGt() {
        return idGt.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_ID_GT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getIdGt_JsonNullable() {
    return idGt;
  }
  
  @JsonProperty(JSON_PROPERTY_ID_GT)
  public void setIdGt_JsonNullable(JsonNullable<String> idGt) {
    this.idGt = idGt;
  }

  public void setIdGt(String idGt) {
    this.idGt = JsonNullable.<String>of(idGt);
  }


  public UploadTaskWhereInput idGte(String idGte) {
    this.idGte = JsonNullable.<String>of(idGte);
    return this;
  }

   /**
   * Get idGte
   * @return idGte
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getIdGte() {
        return idGte.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_ID_GTE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getIdGte_JsonNullable() {
    return idGte;
  }
  
  @JsonProperty(JSON_PROPERTY_ID_GTE)
  public void setIdGte_JsonNullable(JsonNullable<String> idGte) {
    this.idGte = idGte;
  }

  public void setIdGte(String idGte) {
    this.idGte = JsonNullable.<String>of(idGte);
  }


  public UploadTaskWhereInput idIn(List<String> idIn) {
    this.idIn = JsonNullable.<List<String>>of(idIn);
    return this;
  }

  public UploadTaskWhereInput addIdInItem(String idInItem) {
    if (this.idIn == null || !this.idIn.isPresent()) {
      this.idIn = JsonNullable.<List<String>>of(new ArrayList<>());
    }
    try {
      this.idIn.get().add(idInItem);
    } catch (java.util.NoSuchElementException e) {
      // this can never happen, as we make sure above that the value is present
    }
    return this;
  }

   /**
   * Get idIn
   * @return idIn
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public List<String> getIdIn() {
        return idIn.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_ID_IN)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<List<String>> getIdIn_JsonNullable() {
    return idIn;
  }
  
  @JsonProperty(JSON_PROPERTY_ID_IN)
  public void setIdIn_JsonNullable(JsonNullable<List<String>> idIn) {
    this.idIn = idIn;
  }

  public void setIdIn(List<String> idIn) {
    this.idIn = JsonNullable.<List<String>>of(idIn);
  }


  public UploadTaskWhereInput idLt(String idLt) {
    this.idLt = JsonNullable.<String>of(idLt);
    return this;
  }

   /**
   * Get idLt
   * @return idLt
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getIdLt() {
        return idLt.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_ID_LT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getIdLt_JsonNullable() {
    return idLt;
  }
  
  @JsonProperty(JSON_PROPERTY_ID_LT)
  public void setIdLt_JsonNullable(JsonNullable<String> idLt) {
    this.idLt = idLt;
  }

  public void setIdLt(String idLt) {
    this.idLt = JsonNullable.<String>of(idLt);
  }


  public UploadTaskWhereInput idLte(String idLte) {
    this.idLte = JsonNullable.<String>of(idLte);
    return this;
  }

   /**
   * Get idLte
   * @return idLte
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getIdLte() {
        return idLte.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_ID_LTE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getIdLte_JsonNullable() {
    return idLte;
  }
  
  @JsonProperty(JSON_PROPERTY_ID_LTE)
  public void setIdLte_JsonNullable(JsonNullable<String> idLte) {
    this.idLte = idLte;
  }

  public void setIdLte(String idLte) {
    this.idLte = JsonNullable.<String>of(idLte);
  }


  public UploadTaskWhereInput idNot(String idNot) {
    this.idNot = JsonNullable.<String>of(idNot);
    return this;
  }

   /**
   * Get idNot
   * @return idNot
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getIdNot() {
        return idNot.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_ID_NOT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getIdNot_JsonNullable() {
    return idNot;
  }
  
  @JsonProperty(JSON_PROPERTY_ID_NOT)
  public void setIdNot_JsonNullable(JsonNullable<String> idNot) {
    this.idNot = idNot;
  }

  public void setIdNot(String idNot) {
    this.idNot = JsonNullable.<String>of(idNot);
  }


  public UploadTaskWhereInput idNotContains(String idNotContains) {
    this.idNotContains = JsonNullable.<String>of(idNotContains);
    return this;
  }

   /**
   * Get idNotContains
   * @return idNotContains
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getIdNotContains() {
        return idNotContains.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_ID_NOT_CONTAINS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getIdNotContains_JsonNullable() {
    return idNotContains;
  }
  
  @JsonProperty(JSON_PROPERTY_ID_NOT_CONTAINS)
  public void setIdNotContains_JsonNullable(JsonNullable<String> idNotContains) {
    this.idNotContains = idNotContains;
  }

  public void setIdNotContains(String idNotContains) {
    this.idNotContains = JsonNullable.<String>of(idNotContains);
  }


  public UploadTaskWhereInput idNotEndsWith(String idNotEndsWith) {
    this.idNotEndsWith = JsonNullable.<String>of(idNotEndsWith);
    return this;
  }

   /**
   * Get idNotEndsWith
   * @return idNotEndsWith
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getIdNotEndsWith() {
        return idNotEndsWith.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_ID_NOT_ENDS_WITH)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getIdNotEndsWith_JsonNullable() {
    return idNotEndsWith;
  }
  
  @JsonProperty(JSON_PROPERTY_ID_NOT_ENDS_WITH)
  public void setIdNotEndsWith_JsonNullable(JsonNullable<String> idNotEndsWith) {
    this.idNotEndsWith = idNotEndsWith;
  }

  public void setIdNotEndsWith(String idNotEndsWith) {
    this.idNotEndsWith = JsonNullable.<String>of(idNotEndsWith);
  }


  public UploadTaskWhereInput idNotIn(List<String> idNotIn) {
    this.idNotIn = JsonNullable.<List<String>>of(idNotIn);
    return this;
  }

  public UploadTaskWhereInput addIdNotInItem(String idNotInItem) {
    if (this.idNotIn == null || !this.idNotIn.isPresent()) {
      this.idNotIn = JsonNullable.<List<String>>of(new ArrayList<>());
    }
    try {
      this.idNotIn.get().add(idNotInItem);
    } catch (java.util.NoSuchElementException e) {
      // this can never happen, as we make sure above that the value is present
    }
    return this;
  }

   /**
   * Get idNotIn
   * @return idNotIn
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public List<String> getIdNotIn() {
        return idNotIn.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_ID_NOT_IN)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<List<String>> getIdNotIn_JsonNullable() {
    return idNotIn;
  }
  
  @JsonProperty(JSON_PROPERTY_ID_NOT_IN)
  public void setIdNotIn_JsonNullable(JsonNullable<List<String>> idNotIn) {
    this.idNotIn = idNotIn;
  }

  public void setIdNotIn(List<String> idNotIn) {
    this.idNotIn = JsonNullable.<List<String>>of(idNotIn);
  }


  public UploadTaskWhereInput idNotStartsWith(String idNotStartsWith) {
    this.idNotStartsWith = JsonNullable.<String>of(idNotStartsWith);
    return this;
  }

   /**
   * Get idNotStartsWith
   * @return idNotStartsWith
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getIdNotStartsWith() {
        return idNotStartsWith.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_ID_NOT_STARTS_WITH)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getIdNotStartsWith_JsonNullable() {
    return idNotStartsWith;
  }
  
  @JsonProperty(JSON_PROPERTY_ID_NOT_STARTS_WITH)
  public void setIdNotStartsWith_JsonNullable(JsonNullable<String> idNotStartsWith) {
    this.idNotStartsWith = idNotStartsWith;
  }

  public void setIdNotStartsWith(String idNotStartsWith) {
    this.idNotStartsWith = JsonNullable.<String>of(idNotStartsWith);
  }


  public UploadTaskWhereInput idStartsWith(String idStartsWith) {
    this.idStartsWith = JsonNullable.<String>of(idStartsWith);
    return this;
  }

   /**
   * Get idStartsWith
   * @return idStartsWith
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getIdStartsWith() {
        return idStartsWith.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_ID_STARTS_WITH)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getIdStartsWith_JsonNullable() {
    return idStartsWith;
  }
  
  @JsonProperty(JSON_PROPERTY_ID_STARTS_WITH)
  public void setIdStartsWith_JsonNullable(JsonNullable<String> idStartsWith) {
    this.idStartsWith = idStartsWith;
  }

  public void setIdStartsWith(String idStartsWith) {
    this.idStartsWith = JsonNullable.<String>of(idStartsWith);
  }


  public UploadTaskWhereInput NOT(List<UploadTaskWhereInput> NOT) {
    this.NOT = JsonNullable.<List<UploadTaskWhereInput>>of(NOT);
    return this;
  }

  public UploadTaskWhereInput addNOTItem(UploadTaskWhereInput NOTItem) {
    if (this.NOT == null || !this.NOT.isPresent()) {
      this.NOT = JsonNullable.<List<UploadTaskWhereInput>>of(new ArrayList<>());
    }
    try {
      this.NOT.get().add(NOTItem);
    } catch (java.util.NoSuchElementException e) {
      // this can never happen, as we make sure above that the value is present
    }
    return this;
  }

   /**
   * Get NOT
   * @return NOT
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public List<UploadTaskWhereInput> getNOT() {
        return NOT.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_N_O_T)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<List<UploadTaskWhereInput>> getNOT_JsonNullable() {
    return NOT;
  }
  
  @JsonProperty(JSON_PROPERTY_N_O_T)
  public void setNOT_JsonNullable(JsonNullable<List<UploadTaskWhereInput>> NOT) {
    this.NOT = NOT;
  }

  public void setNOT(List<UploadTaskWhereInput> NOT) {
    this.NOT = JsonNullable.<List<UploadTaskWhereInput>>of(NOT);
  }


  public UploadTaskWhereInput OR(List<UploadTaskWhereInput> OR) {
    this.OR = JsonNullable.<List<UploadTaskWhereInput>>of(OR);
    return this;
  }

  public UploadTaskWhereInput addORItem(UploadTaskWhereInput ORItem) {
    if (this.OR == null || !this.OR.isPresent()) {
      this.OR = JsonNullable.<List<UploadTaskWhereInput>>of(new ArrayList<>());
    }
    try {
      this.OR.get().add(ORItem);
    } catch (java.util.NoSuchElementException e) {
      // this can never happen, as we make sure above that the value is present
    }
    return this;
  }

   /**
   * Get OR
   * @return OR
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public List<UploadTaskWhereInput> getOR() {
        return OR.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_O_R)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<List<UploadTaskWhereInput>> getOR_JsonNullable() {
    return OR;
  }
  
  @JsonProperty(JSON_PROPERTY_O_R)
  public void setOR_JsonNullable(JsonNullable<List<UploadTaskWhereInput>> OR) {
    this.OR = OR;
  }

  public void setOR(List<UploadTaskWhereInput> OR) {
    this.OR = JsonNullable.<List<UploadTaskWhereInput>>of(OR);
  }


  public UploadTaskWhereInput resourceType(UploadResourceType resourceType) {
    this.resourceType = JsonNullable.<UploadResourceType>of(resourceType);
    return this;
  }

   /**
   * Get resourceType
   * @return resourceType
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public UploadResourceType getResourceType() {
        return resourceType.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_RESOURCE_TYPE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<UploadResourceType> getResourceType_JsonNullable() {
    return resourceType;
  }
  
  @JsonProperty(JSON_PROPERTY_RESOURCE_TYPE)
  public void setResourceType_JsonNullable(JsonNullable<UploadResourceType> resourceType) {
    this.resourceType = resourceType;
  }

  public void setResourceType(UploadResourceType resourceType) {
    this.resourceType = JsonNullable.<UploadResourceType>of(resourceType);
  }


  public UploadTaskWhereInput resourceTypeIn(List<UploadResourceType> resourceTypeIn) {
    this.resourceTypeIn = JsonNullable.<List<UploadResourceType>>of(resourceTypeIn);
    return this;
  }

  public UploadTaskWhereInput addResourceTypeInItem(UploadResourceType resourceTypeInItem) {
    if (this.resourceTypeIn == null || !this.resourceTypeIn.isPresent()) {
      this.resourceTypeIn = JsonNullable.<List<UploadResourceType>>of(new ArrayList<>());
    }
    try {
      this.resourceTypeIn.get().add(resourceTypeInItem);
    } catch (java.util.NoSuchElementException e) {
      // this can never happen, as we make sure above that the value is present
    }
    return this;
  }

   /**
   * Get resourceTypeIn
   * @return resourceTypeIn
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public List<UploadResourceType> getResourceTypeIn() {
        return resourceTypeIn.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_RESOURCE_TYPE_IN)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<List<UploadResourceType>> getResourceTypeIn_JsonNullable() {
    return resourceTypeIn;
  }
  
  @JsonProperty(JSON_PROPERTY_RESOURCE_TYPE_IN)
  public void setResourceTypeIn_JsonNullable(JsonNullable<List<UploadResourceType>> resourceTypeIn) {
    this.resourceTypeIn = resourceTypeIn;
  }

  public void setResourceTypeIn(List<UploadResourceType> resourceTypeIn) {
    this.resourceTypeIn = JsonNullable.<List<UploadResourceType>>of(resourceTypeIn);
  }


  public UploadTaskWhereInput resourceTypeNot(UploadResourceType resourceTypeNot) {
    this.resourceTypeNot = JsonNullable.<UploadResourceType>of(resourceTypeNot);
    return this;
  }

   /**
   * Get resourceTypeNot
   * @return resourceTypeNot
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public UploadResourceType getResourceTypeNot() {
        return resourceTypeNot.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_RESOURCE_TYPE_NOT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<UploadResourceType> getResourceTypeNot_JsonNullable() {
    return resourceTypeNot;
  }
  
  @JsonProperty(JSON_PROPERTY_RESOURCE_TYPE_NOT)
  public void setResourceTypeNot_JsonNullable(JsonNullable<UploadResourceType> resourceTypeNot) {
    this.resourceTypeNot = resourceTypeNot;
  }

  public void setResourceTypeNot(UploadResourceType resourceTypeNot) {
    this.resourceTypeNot = JsonNullable.<UploadResourceType>of(resourceTypeNot);
  }


  public UploadTaskWhereInput resourceTypeNotIn(List<UploadResourceType> resourceTypeNotIn) {
    this.resourceTypeNotIn = JsonNullable.<List<UploadResourceType>>of(resourceTypeNotIn);
    return this;
  }

  public UploadTaskWhereInput addResourceTypeNotInItem(UploadResourceType resourceTypeNotInItem) {
    if (this.resourceTypeNotIn == null || !this.resourceTypeNotIn.isPresent()) {
      this.resourceTypeNotIn = JsonNullable.<List<UploadResourceType>>of(new ArrayList<>());
    }
    try {
      this.resourceTypeNotIn.get().add(resourceTypeNotInItem);
    } catch (java.util.NoSuchElementException e) {
      // this can never happen, as we make sure above that the value is present
    }
    return this;
  }

   /**
   * Get resourceTypeNotIn
   * @return resourceTypeNotIn
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public List<UploadResourceType> getResourceTypeNotIn() {
        return resourceTypeNotIn.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_RESOURCE_TYPE_NOT_IN)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<List<UploadResourceType>> getResourceTypeNotIn_JsonNullable() {
    return resourceTypeNotIn;
  }
  
  @JsonProperty(JSON_PROPERTY_RESOURCE_TYPE_NOT_IN)
  public void setResourceTypeNotIn_JsonNullable(JsonNullable<List<UploadResourceType>> resourceTypeNotIn) {
    this.resourceTypeNotIn = resourceTypeNotIn;
  }

  public void setResourceTypeNotIn(List<UploadResourceType> resourceTypeNotIn) {
    this.resourceTypeNotIn = JsonNullable.<List<UploadResourceType>>of(resourceTypeNotIn);
  }


  public UploadTaskWhereInput size(Double size) {
    this.size = JsonNullable.<Double>of(size);
    return this;
  }

   /**
   * Get size
   * @return size
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public Double getSize() {
        return size.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_SIZE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<Double> getSize_JsonNullable() {
    return size;
  }
  
  @JsonProperty(JSON_PROPERTY_SIZE)
  public void setSize_JsonNullable(JsonNullable<Double> size) {
    this.size = size;
  }

  public void setSize(Double size) {
    this.size = JsonNullable.<Double>of(size);
  }


  public UploadTaskWhereInput sizeGt(Double sizeGt) {
    this.sizeGt = JsonNullable.<Double>of(sizeGt);
    return this;
  }

   /**
   * Get sizeGt
   * @return sizeGt
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public Double getSizeGt() {
        return sizeGt.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_SIZE_GT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<Double> getSizeGt_JsonNullable() {
    return sizeGt;
  }
  
  @JsonProperty(JSON_PROPERTY_SIZE_GT)
  public void setSizeGt_JsonNullable(JsonNullable<Double> sizeGt) {
    this.sizeGt = sizeGt;
  }

  public void setSizeGt(Double sizeGt) {
    this.sizeGt = JsonNullable.<Double>of(sizeGt);
  }


  public UploadTaskWhereInput sizeGte(Double sizeGte) {
    this.sizeGte = JsonNullable.<Double>of(sizeGte);
    return this;
  }

   /**
   * Get sizeGte
   * @return sizeGte
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public Double getSizeGte() {
        return sizeGte.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_SIZE_GTE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<Double> getSizeGte_JsonNullable() {
    return sizeGte;
  }
  
  @JsonProperty(JSON_PROPERTY_SIZE_GTE)
  public void setSizeGte_JsonNullable(JsonNullable<Double> sizeGte) {
    this.sizeGte = sizeGte;
  }

  public void setSizeGte(Double sizeGte) {
    this.sizeGte = JsonNullable.<Double>of(sizeGte);
  }


  public UploadTaskWhereInput sizeIn(List<Double> sizeIn) {
    this.sizeIn = JsonNullable.<List<Double>>of(sizeIn);
    return this;
  }

  public UploadTaskWhereInput addSizeInItem(Double sizeInItem) {
    if (this.sizeIn == null || !this.sizeIn.isPresent()) {
      this.sizeIn = JsonNullable.<List<Double>>of(new ArrayList<>());
    }
    try {
      this.sizeIn.get().add(sizeInItem);
    } catch (java.util.NoSuchElementException e) {
      // this can never happen, as we make sure above that the value is present
    }
    return this;
  }

   /**
   * Get sizeIn
   * @return sizeIn
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public List<Double> getSizeIn() {
        return sizeIn.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_SIZE_IN)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<List<Double>> getSizeIn_JsonNullable() {
    return sizeIn;
  }
  
  @JsonProperty(JSON_PROPERTY_SIZE_IN)
  public void setSizeIn_JsonNullable(JsonNullable<List<Double>> sizeIn) {
    this.sizeIn = sizeIn;
  }

  public void setSizeIn(List<Double> sizeIn) {
    this.sizeIn = JsonNullable.<List<Double>>of(sizeIn);
  }


  public UploadTaskWhereInput sizeLt(Double sizeLt) {
    this.sizeLt = JsonNullable.<Double>of(sizeLt);
    return this;
  }

   /**
   * Get sizeLt
   * @return sizeLt
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public Double getSizeLt() {
        return sizeLt.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_SIZE_LT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<Double> getSizeLt_JsonNullable() {
    return sizeLt;
  }
  
  @JsonProperty(JSON_PROPERTY_SIZE_LT)
  public void setSizeLt_JsonNullable(JsonNullable<Double> sizeLt) {
    this.sizeLt = sizeLt;
  }

  public void setSizeLt(Double sizeLt) {
    this.sizeLt = JsonNullable.<Double>of(sizeLt);
  }


  public UploadTaskWhereInput sizeLte(Double sizeLte) {
    this.sizeLte = JsonNullable.<Double>of(sizeLte);
    return this;
  }

   /**
   * Get sizeLte
   * @return sizeLte
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public Double getSizeLte() {
        return sizeLte.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_SIZE_LTE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<Double> getSizeLte_JsonNullable() {
    return sizeLte;
  }
  
  @JsonProperty(JSON_PROPERTY_SIZE_LTE)
  public void setSizeLte_JsonNullable(JsonNullable<Double> sizeLte) {
    this.sizeLte = sizeLte;
  }

  public void setSizeLte(Double sizeLte) {
    this.sizeLte = JsonNullable.<Double>of(sizeLte);
  }


  public UploadTaskWhereInput sizeNot(Double sizeNot) {
    this.sizeNot = JsonNullable.<Double>of(sizeNot);
    return this;
  }

   /**
   * Get sizeNot
   * @return sizeNot
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public Double getSizeNot() {
        return sizeNot.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_SIZE_NOT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<Double> getSizeNot_JsonNullable() {
    return sizeNot;
  }
  
  @JsonProperty(JSON_PROPERTY_SIZE_NOT)
  public void setSizeNot_JsonNullable(JsonNullable<Double> sizeNot) {
    this.sizeNot = sizeNot;
  }

  public void setSizeNot(Double sizeNot) {
    this.sizeNot = JsonNullable.<Double>of(sizeNot);
  }


  public UploadTaskWhereInput sizeNotIn(List<Double> sizeNotIn) {
    this.sizeNotIn = JsonNullable.<List<Double>>of(sizeNotIn);
    return this;
  }

  public UploadTaskWhereInput addSizeNotInItem(Double sizeNotInItem) {
    if (this.sizeNotIn == null || !this.sizeNotIn.isPresent()) {
      this.sizeNotIn = JsonNullable.<List<Double>>of(new ArrayList<>());
    }
    try {
      this.sizeNotIn.get().add(sizeNotInItem);
    } catch (java.util.NoSuchElementException e) {
      // this can never happen, as we make sure above that the value is present
    }
    return this;
  }

   /**
   * Get sizeNotIn
   * @return sizeNotIn
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public List<Double> getSizeNotIn() {
        return sizeNotIn.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_SIZE_NOT_IN)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<List<Double>> getSizeNotIn_JsonNullable() {
    return sizeNotIn;
  }
  
  @JsonProperty(JSON_PROPERTY_SIZE_NOT_IN)
  public void setSizeNotIn_JsonNullable(JsonNullable<List<Double>> sizeNotIn) {
    this.sizeNotIn = sizeNotIn;
  }

  public void setSizeNotIn(List<Double> sizeNotIn) {
    this.sizeNotIn = JsonNullable.<List<Double>>of(sizeNotIn);
  }


  public UploadTaskWhereInput startedAt(String startedAt) {
    this.startedAt = JsonNullable.<String>of(startedAt);
    return this;
  }

   /**
   * Get startedAt
   * @return startedAt
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getStartedAt() {
        return startedAt.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_STARTED_AT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getStartedAt_JsonNullable() {
    return startedAt;
  }
  
  @JsonProperty(JSON_PROPERTY_STARTED_AT)
  public void setStartedAt_JsonNullable(JsonNullable<String> startedAt) {
    this.startedAt = startedAt;
  }

  public void setStartedAt(String startedAt) {
    this.startedAt = JsonNullable.<String>of(startedAt);
  }


  public UploadTaskWhereInput startedAtGt(String startedAtGt) {
    this.startedAtGt = JsonNullable.<String>of(startedAtGt);
    return this;
  }

   /**
   * Get startedAtGt
   * @return startedAtGt
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getStartedAtGt() {
        return startedAtGt.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_STARTED_AT_GT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getStartedAtGt_JsonNullable() {
    return startedAtGt;
  }
  
  @JsonProperty(JSON_PROPERTY_STARTED_AT_GT)
  public void setStartedAtGt_JsonNullable(JsonNullable<String> startedAtGt) {
    this.startedAtGt = startedAtGt;
  }

  public void setStartedAtGt(String startedAtGt) {
    this.startedAtGt = JsonNullable.<String>of(startedAtGt);
  }


  public UploadTaskWhereInput startedAtGte(String startedAtGte) {
    this.startedAtGte = JsonNullable.<String>of(startedAtGte);
    return this;
  }

   /**
   * Get startedAtGte
   * @return startedAtGte
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getStartedAtGte() {
        return startedAtGte.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_STARTED_AT_GTE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getStartedAtGte_JsonNullable() {
    return startedAtGte;
  }
  
  @JsonProperty(JSON_PROPERTY_STARTED_AT_GTE)
  public void setStartedAtGte_JsonNullable(JsonNullable<String> startedAtGte) {
    this.startedAtGte = startedAtGte;
  }

  public void setStartedAtGte(String startedAtGte) {
    this.startedAtGte = JsonNullable.<String>of(startedAtGte);
  }


  public UploadTaskWhereInput startedAtIn(List<String> startedAtIn) {
    this.startedAtIn = JsonNullable.<List<String>>of(startedAtIn);
    return this;
  }

  public UploadTaskWhereInput addStartedAtInItem(String startedAtInItem) {
    if (this.startedAtIn == null || !this.startedAtIn.isPresent()) {
      this.startedAtIn = JsonNullable.<List<String>>of(new ArrayList<>());
    }
    try {
      this.startedAtIn.get().add(startedAtInItem);
    } catch (java.util.NoSuchElementException e) {
      // this can never happen, as we make sure above that the value is present
    }
    return this;
  }

   /**
   * Get startedAtIn
   * @return startedAtIn
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public List<String> getStartedAtIn() {
        return startedAtIn.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_STARTED_AT_IN)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<List<String>> getStartedAtIn_JsonNullable() {
    return startedAtIn;
  }
  
  @JsonProperty(JSON_PROPERTY_STARTED_AT_IN)
  public void setStartedAtIn_JsonNullable(JsonNullable<List<String>> startedAtIn) {
    this.startedAtIn = startedAtIn;
  }

  public void setStartedAtIn(List<String> startedAtIn) {
    this.startedAtIn = JsonNullable.<List<String>>of(startedAtIn);
  }


  public UploadTaskWhereInput startedAtLt(String startedAtLt) {
    this.startedAtLt = JsonNullable.<String>of(startedAtLt);
    return this;
  }

   /**
   * Get startedAtLt
   * @return startedAtLt
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getStartedAtLt() {
        return startedAtLt.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_STARTED_AT_LT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getStartedAtLt_JsonNullable() {
    return startedAtLt;
  }
  
  @JsonProperty(JSON_PROPERTY_STARTED_AT_LT)
  public void setStartedAtLt_JsonNullable(JsonNullable<String> startedAtLt) {
    this.startedAtLt = startedAtLt;
  }

  public void setStartedAtLt(String startedAtLt) {
    this.startedAtLt = JsonNullable.<String>of(startedAtLt);
  }


  public UploadTaskWhereInput startedAtLte(String startedAtLte) {
    this.startedAtLte = JsonNullable.<String>of(startedAtLte);
    return this;
  }

   /**
   * Get startedAtLte
   * @return startedAtLte
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getStartedAtLte() {
        return startedAtLte.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_STARTED_AT_LTE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getStartedAtLte_JsonNullable() {
    return startedAtLte;
  }
  
  @JsonProperty(JSON_PROPERTY_STARTED_AT_LTE)
  public void setStartedAtLte_JsonNullable(JsonNullable<String> startedAtLte) {
    this.startedAtLte = startedAtLte;
  }

  public void setStartedAtLte(String startedAtLte) {
    this.startedAtLte = JsonNullable.<String>of(startedAtLte);
  }


  public UploadTaskWhereInput startedAtNot(String startedAtNot) {
    this.startedAtNot = JsonNullable.<String>of(startedAtNot);
    return this;
  }

   /**
   * Get startedAtNot
   * @return startedAtNot
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getStartedAtNot() {
        return startedAtNot.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_STARTED_AT_NOT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getStartedAtNot_JsonNullable() {
    return startedAtNot;
  }
  
  @JsonProperty(JSON_PROPERTY_STARTED_AT_NOT)
  public void setStartedAtNot_JsonNullable(JsonNullable<String> startedAtNot) {
    this.startedAtNot = startedAtNot;
  }

  public void setStartedAtNot(String startedAtNot) {
    this.startedAtNot = JsonNullable.<String>of(startedAtNot);
  }


  public UploadTaskWhereInput startedAtNotIn(List<String> startedAtNotIn) {
    this.startedAtNotIn = JsonNullable.<List<String>>of(startedAtNotIn);
    return this;
  }

  public UploadTaskWhereInput addStartedAtNotInItem(String startedAtNotInItem) {
    if (this.startedAtNotIn == null || !this.startedAtNotIn.isPresent()) {
      this.startedAtNotIn = JsonNullable.<List<String>>of(new ArrayList<>());
    }
    try {
      this.startedAtNotIn.get().add(startedAtNotInItem);
    } catch (java.util.NoSuchElementException e) {
      // this can never happen, as we make sure above that the value is present
    }
    return this;
  }

   /**
   * Get startedAtNotIn
   * @return startedAtNotIn
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public List<String> getStartedAtNotIn() {
        return startedAtNotIn.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_STARTED_AT_NOT_IN)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<List<String>> getStartedAtNotIn_JsonNullable() {
    return startedAtNotIn;
  }
  
  @JsonProperty(JSON_PROPERTY_STARTED_AT_NOT_IN)
  public void setStartedAtNotIn_JsonNullable(JsonNullable<List<String>> startedAtNotIn) {
    this.startedAtNotIn = startedAtNotIn;
  }

  public void setStartedAtNotIn(List<String> startedAtNotIn) {
    this.startedAtNotIn = JsonNullable.<List<String>>of(startedAtNotIn);
  }


  public UploadTaskWhereInput status(UploadTaskStatus status) {
    this.status = JsonNullable.<UploadTaskStatus>of(status);
    return this;
  }

   /**
   * Get status
   * @return status
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public UploadTaskStatus getStatus() {
        return status.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_STATUS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<UploadTaskStatus> getStatus_JsonNullable() {
    return status;
  }
  
  @JsonProperty(JSON_PROPERTY_STATUS)
  public void setStatus_JsonNullable(JsonNullable<UploadTaskStatus> status) {
    this.status = status;
  }

  public void setStatus(UploadTaskStatus status) {
    this.status = JsonNullable.<UploadTaskStatus>of(status);
  }


  public UploadTaskWhereInput statusIn(List<UploadTaskStatus> statusIn) {
    this.statusIn = JsonNullable.<List<UploadTaskStatus>>of(statusIn);
    return this;
  }

  public UploadTaskWhereInput addStatusInItem(UploadTaskStatus statusInItem) {
    if (this.statusIn == null || !this.statusIn.isPresent()) {
      this.statusIn = JsonNullable.<List<UploadTaskStatus>>of(new ArrayList<>());
    }
    try {
      this.statusIn.get().add(statusInItem);
    } catch (java.util.NoSuchElementException e) {
      // this can never happen, as we make sure above that the value is present
    }
    return this;
  }

   /**
   * Get statusIn
   * @return statusIn
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public List<UploadTaskStatus> getStatusIn() {
        return statusIn.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_STATUS_IN)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<List<UploadTaskStatus>> getStatusIn_JsonNullable() {
    return statusIn;
  }
  
  @JsonProperty(JSON_PROPERTY_STATUS_IN)
  public void setStatusIn_JsonNullable(JsonNullable<List<UploadTaskStatus>> statusIn) {
    this.statusIn = statusIn;
  }

  public void setStatusIn(List<UploadTaskStatus> statusIn) {
    this.statusIn = JsonNullable.<List<UploadTaskStatus>>of(statusIn);
  }


  public UploadTaskWhereInput statusNot(UploadTaskStatus statusNot) {
    this.statusNot = JsonNullable.<UploadTaskStatus>of(statusNot);
    return this;
  }

   /**
   * Get statusNot
   * @return statusNot
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public UploadTaskStatus getStatusNot() {
        return statusNot.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_STATUS_NOT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<UploadTaskStatus> getStatusNot_JsonNullable() {
    return statusNot;
  }
  
  @JsonProperty(JSON_PROPERTY_STATUS_NOT)
  public void setStatusNot_JsonNullable(JsonNullable<UploadTaskStatus> statusNot) {
    this.statusNot = statusNot;
  }

  public void setStatusNot(UploadTaskStatus statusNot) {
    this.statusNot = JsonNullable.<UploadTaskStatus>of(statusNot);
  }


  public UploadTaskWhereInput statusNotIn(List<UploadTaskStatus> statusNotIn) {
    this.statusNotIn = JsonNullable.<List<UploadTaskStatus>>of(statusNotIn);
    return this;
  }

  public UploadTaskWhereInput addStatusNotInItem(UploadTaskStatus statusNotInItem) {
    if (this.statusNotIn == null || !this.statusNotIn.isPresent()) {
      this.statusNotIn = JsonNullable.<List<UploadTaskStatus>>of(new ArrayList<>());
    }
    try {
      this.statusNotIn.get().add(statusNotInItem);
    } catch (java.util.NoSuchElementException e) {
      // this can never happen, as we make sure above that the value is present
    }
    return this;
  }

   /**
   * Get statusNotIn
   * @return statusNotIn
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public List<UploadTaskStatus> getStatusNotIn() {
        return statusNotIn.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_STATUS_NOT_IN)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<List<UploadTaskStatus>> getStatusNotIn_JsonNullable() {
    return statusNotIn;
  }
  
  @JsonProperty(JSON_PROPERTY_STATUS_NOT_IN)
  public void setStatusNotIn_JsonNullable(JsonNullable<List<UploadTaskStatus>> statusNotIn) {
    this.statusNotIn = statusNotIn;
  }

  public void setStatusNotIn(List<UploadTaskStatus> statusNotIn) {
    this.statusNotIn = JsonNullable.<List<UploadTaskStatus>>of(statusNotIn);
  }


  public UploadTaskWhereInput updatedAt(String updatedAt) {
    this.updatedAt = JsonNullable.<String>of(updatedAt);
    return this;
  }

   /**
   * Get updatedAt
   * @return updatedAt
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getUpdatedAt() {
        return updatedAt.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_UPDATED_AT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getUpdatedAt_JsonNullable() {
    return updatedAt;
  }
  
  @JsonProperty(JSON_PROPERTY_UPDATED_AT)
  public void setUpdatedAt_JsonNullable(JsonNullable<String> updatedAt) {
    this.updatedAt = updatedAt;
  }

  public void setUpdatedAt(String updatedAt) {
    this.updatedAt = JsonNullable.<String>of(updatedAt);
  }


  public UploadTaskWhereInput updatedAtGt(String updatedAtGt) {
    this.updatedAtGt = JsonNullable.<String>of(updatedAtGt);
    return this;
  }

   /**
   * Get updatedAtGt
   * @return updatedAtGt
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getUpdatedAtGt() {
        return updatedAtGt.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_UPDATED_AT_GT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getUpdatedAtGt_JsonNullable() {
    return updatedAtGt;
  }
  
  @JsonProperty(JSON_PROPERTY_UPDATED_AT_GT)
  public void setUpdatedAtGt_JsonNullable(JsonNullable<String> updatedAtGt) {
    this.updatedAtGt = updatedAtGt;
  }

  public void setUpdatedAtGt(String updatedAtGt) {
    this.updatedAtGt = JsonNullable.<String>of(updatedAtGt);
  }


  public UploadTaskWhereInput updatedAtGte(String updatedAtGte) {
    this.updatedAtGte = JsonNullable.<String>of(updatedAtGte);
    return this;
  }

   /**
   * Get updatedAtGte
   * @return updatedAtGte
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getUpdatedAtGte() {
        return updatedAtGte.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_UPDATED_AT_GTE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getUpdatedAtGte_JsonNullable() {
    return updatedAtGte;
  }
  
  @JsonProperty(JSON_PROPERTY_UPDATED_AT_GTE)
  public void setUpdatedAtGte_JsonNullable(JsonNullable<String> updatedAtGte) {
    this.updatedAtGte = updatedAtGte;
  }

  public void setUpdatedAtGte(String updatedAtGte) {
    this.updatedAtGte = JsonNullable.<String>of(updatedAtGte);
  }


  public UploadTaskWhereInput updatedAtIn(List<String> updatedAtIn) {
    this.updatedAtIn = JsonNullable.<List<String>>of(updatedAtIn);
    return this;
  }

  public UploadTaskWhereInput addUpdatedAtInItem(String updatedAtInItem) {
    if (this.updatedAtIn == null || !this.updatedAtIn.isPresent()) {
      this.updatedAtIn = JsonNullable.<List<String>>of(new ArrayList<>());
    }
    try {
      this.updatedAtIn.get().add(updatedAtInItem);
    } catch (java.util.NoSuchElementException e) {
      // this can never happen, as we make sure above that the value is present
    }
    return this;
  }

   /**
   * Get updatedAtIn
   * @return updatedAtIn
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public List<String> getUpdatedAtIn() {
        return updatedAtIn.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_UPDATED_AT_IN)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<List<String>> getUpdatedAtIn_JsonNullable() {
    return updatedAtIn;
  }
  
  @JsonProperty(JSON_PROPERTY_UPDATED_AT_IN)
  public void setUpdatedAtIn_JsonNullable(JsonNullable<List<String>> updatedAtIn) {
    this.updatedAtIn = updatedAtIn;
  }

  public void setUpdatedAtIn(List<String> updatedAtIn) {
    this.updatedAtIn = JsonNullable.<List<String>>of(updatedAtIn);
  }


  public UploadTaskWhereInput updatedAtLt(String updatedAtLt) {
    this.updatedAtLt = JsonNullable.<String>of(updatedAtLt);
    return this;
  }

   /**
   * Get updatedAtLt
   * @return updatedAtLt
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getUpdatedAtLt() {
        return updatedAtLt.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_UPDATED_AT_LT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getUpdatedAtLt_JsonNullable() {
    return updatedAtLt;
  }
  
  @JsonProperty(JSON_PROPERTY_UPDATED_AT_LT)
  public void setUpdatedAtLt_JsonNullable(JsonNullable<String> updatedAtLt) {
    this.updatedAtLt = updatedAtLt;
  }

  public void setUpdatedAtLt(String updatedAtLt) {
    this.updatedAtLt = JsonNullable.<String>of(updatedAtLt);
  }


  public UploadTaskWhereInput updatedAtLte(String updatedAtLte) {
    this.updatedAtLte = JsonNullable.<String>of(updatedAtLte);
    return this;
  }

   /**
   * Get updatedAtLte
   * @return updatedAtLte
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getUpdatedAtLte() {
        return updatedAtLte.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_UPDATED_AT_LTE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getUpdatedAtLte_JsonNullable() {
    return updatedAtLte;
  }
  
  @JsonProperty(JSON_PROPERTY_UPDATED_AT_LTE)
  public void setUpdatedAtLte_JsonNullable(JsonNullable<String> updatedAtLte) {
    this.updatedAtLte = updatedAtLte;
  }

  public void setUpdatedAtLte(String updatedAtLte) {
    this.updatedAtLte = JsonNullable.<String>of(updatedAtLte);
  }


  public UploadTaskWhereInput updatedAtNot(String updatedAtNot) {
    this.updatedAtNot = JsonNullable.<String>of(updatedAtNot);
    return this;
  }

   /**
   * Get updatedAtNot
   * @return updatedAtNot
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getUpdatedAtNot() {
        return updatedAtNot.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_UPDATED_AT_NOT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getUpdatedAtNot_JsonNullable() {
    return updatedAtNot;
  }
  
  @JsonProperty(JSON_PROPERTY_UPDATED_AT_NOT)
  public void setUpdatedAtNot_JsonNullable(JsonNullable<String> updatedAtNot) {
    this.updatedAtNot = updatedAtNot;
  }

  public void setUpdatedAtNot(String updatedAtNot) {
    this.updatedAtNot = JsonNullable.<String>of(updatedAtNot);
  }


  public UploadTaskWhereInput updatedAtNotIn(List<String> updatedAtNotIn) {
    this.updatedAtNotIn = JsonNullable.<List<String>>of(updatedAtNotIn);
    return this;
  }

  public UploadTaskWhereInput addUpdatedAtNotInItem(String updatedAtNotInItem) {
    if (this.updatedAtNotIn == null || !this.updatedAtNotIn.isPresent()) {
      this.updatedAtNotIn = JsonNullable.<List<String>>of(new ArrayList<>());
    }
    try {
      this.updatedAtNotIn.get().add(updatedAtNotInItem);
    } catch (java.util.NoSuchElementException e) {
      // this can never happen, as we make sure above that the value is present
    }
    return this;
  }

   /**
   * Get updatedAtNotIn
   * @return updatedAtNotIn
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public List<String> getUpdatedAtNotIn() {
        return updatedAtNotIn.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_UPDATED_AT_NOT_IN)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<List<String>> getUpdatedAtNotIn_JsonNullable() {
    return updatedAtNotIn;
  }
  
  @JsonProperty(JSON_PROPERTY_UPDATED_AT_NOT_IN)
  public void setUpdatedAtNotIn_JsonNullable(JsonNullable<List<String>> updatedAtNotIn) {
    this.updatedAtNotIn = updatedAtNotIn;
  }

  public void setUpdatedAtNotIn(List<String> updatedAtNotIn) {
    this.updatedAtNotIn = JsonNullable.<List<String>>of(updatedAtNotIn);
  }


  /**
   * Return true if this UploadTaskWhereInput object is equal to o.
   */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    UploadTaskWhereInput uploadTaskWhereInput = (UploadTaskWhereInput) o;
    return equalsNullable(this.AND, uploadTaskWhereInput.AND) &&
        equalsNullable(this.chunkSize, uploadTaskWhereInput.chunkSize) &&
        equalsNullable(this.chunkSizeGt, uploadTaskWhereInput.chunkSizeGt) &&
        equalsNullable(this.chunkSizeGte, uploadTaskWhereInput.chunkSizeGte) &&
        equalsNullable(this.chunkSizeIn, uploadTaskWhereInput.chunkSizeIn) &&
        equalsNullable(this.chunkSizeLt, uploadTaskWhereInput.chunkSizeLt) &&
        equalsNullable(this.chunkSizeLte, uploadTaskWhereInput.chunkSizeLte) &&
        equalsNullable(this.chunkSizeNot, uploadTaskWhereInput.chunkSizeNot) &&
        equalsNullable(this.chunkSizeNotIn, uploadTaskWhereInput.chunkSizeNotIn) &&
        equalsNullable(this.currentChunk, uploadTaskWhereInput.currentChunk) &&
        equalsNullable(this.currentChunkGt, uploadTaskWhereInput.currentChunkGt) &&
        equalsNullable(this.currentChunkGte, uploadTaskWhereInput.currentChunkGte) &&
        equalsNullable(this.currentChunkIn, uploadTaskWhereInput.currentChunkIn) &&
        equalsNullable(this.currentChunkLt, uploadTaskWhereInput.currentChunkLt) &&
        equalsNullable(this.currentChunkLte, uploadTaskWhereInput.currentChunkLte) &&
        equalsNullable(this.currentChunkNot, uploadTaskWhereInput.currentChunkNot) &&
        equalsNullable(this.currentChunkNotIn, uploadTaskWhereInput.currentChunkNotIn) &&
        equalsNullable(this.finishedAt, uploadTaskWhereInput.finishedAt) &&
        equalsNullable(this.finishedAtGt, uploadTaskWhereInput.finishedAtGt) &&
        equalsNullable(this.finishedAtGte, uploadTaskWhereInput.finishedAtGte) &&
        equalsNullable(this.finishedAtIn, uploadTaskWhereInput.finishedAtIn) &&
        equalsNullable(this.finishedAtLt, uploadTaskWhereInput.finishedAtLt) &&
        equalsNullable(this.finishedAtLte, uploadTaskWhereInput.finishedAtLte) &&
        equalsNullable(this.finishedAtNot, uploadTaskWhereInput.finishedAtNot) &&
        equalsNullable(this.finishedAtNotIn, uploadTaskWhereInput.finishedAtNotIn) &&
        equalsNullable(this.id, uploadTaskWhereInput.id) &&
        equalsNullable(this.idContains, uploadTaskWhereInput.idContains) &&
        equalsNullable(this.idEndsWith, uploadTaskWhereInput.idEndsWith) &&
        equalsNullable(this.idGt, uploadTaskWhereInput.idGt) &&
        equalsNullable(this.idGte, uploadTaskWhereInput.idGte) &&
        equalsNullable(this.idIn, uploadTaskWhereInput.idIn) &&
        equalsNullable(this.idLt, uploadTaskWhereInput.idLt) &&
        equalsNullable(this.idLte, uploadTaskWhereInput.idLte) &&
        equalsNullable(this.idNot, uploadTaskWhereInput.idNot) &&
        equalsNullable(this.idNotContains, uploadTaskWhereInput.idNotContains) &&
        equalsNullable(this.idNotEndsWith, uploadTaskWhereInput.idNotEndsWith) &&
        equalsNullable(this.idNotIn, uploadTaskWhereInput.idNotIn) &&
        equalsNullable(this.idNotStartsWith, uploadTaskWhereInput.idNotStartsWith) &&
        equalsNullable(this.idStartsWith, uploadTaskWhereInput.idStartsWith) &&
        equalsNullable(this.NOT, uploadTaskWhereInput.NOT) &&
        equalsNullable(this.OR, uploadTaskWhereInput.OR) &&
        equalsNullable(this.resourceType, uploadTaskWhereInput.resourceType) &&
        equalsNullable(this.resourceTypeIn, uploadTaskWhereInput.resourceTypeIn) &&
        equalsNullable(this.resourceTypeNot, uploadTaskWhereInput.resourceTypeNot) &&
        equalsNullable(this.resourceTypeNotIn, uploadTaskWhereInput.resourceTypeNotIn) &&
        equalsNullable(this.size, uploadTaskWhereInput.size) &&
        equalsNullable(this.sizeGt, uploadTaskWhereInput.sizeGt) &&
        equalsNullable(this.sizeGte, uploadTaskWhereInput.sizeGte) &&
        equalsNullable(this.sizeIn, uploadTaskWhereInput.sizeIn) &&
        equalsNullable(this.sizeLt, uploadTaskWhereInput.sizeLt) &&
        equalsNullable(this.sizeLte, uploadTaskWhereInput.sizeLte) &&
        equalsNullable(this.sizeNot, uploadTaskWhereInput.sizeNot) &&
        equalsNullable(this.sizeNotIn, uploadTaskWhereInput.sizeNotIn) &&
        equalsNullable(this.startedAt, uploadTaskWhereInput.startedAt) &&
        equalsNullable(this.startedAtGt, uploadTaskWhereInput.startedAtGt) &&
        equalsNullable(this.startedAtGte, uploadTaskWhereInput.startedAtGte) &&
        equalsNullable(this.startedAtIn, uploadTaskWhereInput.startedAtIn) &&
        equalsNullable(this.startedAtLt, uploadTaskWhereInput.startedAtLt) &&
        equalsNullable(this.startedAtLte, uploadTaskWhereInput.startedAtLte) &&
        equalsNullable(this.startedAtNot, uploadTaskWhereInput.startedAtNot) &&
        equalsNullable(this.startedAtNotIn, uploadTaskWhereInput.startedAtNotIn) &&
        equalsNullable(this.status, uploadTaskWhereInput.status) &&
        equalsNullable(this.statusIn, uploadTaskWhereInput.statusIn) &&
        equalsNullable(this.statusNot, uploadTaskWhereInput.statusNot) &&
        equalsNullable(this.statusNotIn, uploadTaskWhereInput.statusNotIn) &&
        equalsNullable(this.updatedAt, uploadTaskWhereInput.updatedAt) &&
        equalsNullable(this.updatedAtGt, uploadTaskWhereInput.updatedAtGt) &&
        equalsNullable(this.updatedAtGte, uploadTaskWhereInput.updatedAtGte) &&
        equalsNullable(this.updatedAtIn, uploadTaskWhereInput.updatedAtIn) &&
        equalsNullable(this.updatedAtLt, uploadTaskWhereInput.updatedAtLt) &&
        equalsNullable(this.updatedAtLte, uploadTaskWhereInput.updatedAtLte) &&
        equalsNullable(this.updatedAtNot, uploadTaskWhereInput.updatedAtNot) &&
        equalsNullable(this.updatedAtNotIn, uploadTaskWhereInput.updatedAtNotIn);
  }

  private static <T> boolean equalsNullable(JsonNullable<T> a, JsonNullable<T> b) {
    return a == b || (a != null && b != null && a.isPresent() && b.isPresent() && Objects.deepEquals(a.get(), b.get()));
  }

  @Override
  public int hashCode() {
    return Objects.hash(hashCodeNullable(AND), hashCodeNullable(chunkSize), hashCodeNullable(chunkSizeGt), hashCodeNullable(chunkSizeGte), hashCodeNullable(chunkSizeIn), hashCodeNullable(chunkSizeLt), hashCodeNullable(chunkSizeLte), hashCodeNullable(chunkSizeNot), hashCodeNullable(chunkSizeNotIn), hashCodeNullable(currentChunk), hashCodeNullable(currentChunkGt), hashCodeNullable(currentChunkGte), hashCodeNullable(currentChunkIn), hashCodeNullable(currentChunkLt), hashCodeNullable(currentChunkLte), hashCodeNullable(currentChunkNot), hashCodeNullable(currentChunkNotIn), hashCodeNullable(finishedAt), hashCodeNullable(finishedAtGt), hashCodeNullable(finishedAtGte), hashCodeNullable(finishedAtIn), hashCodeNullable(finishedAtLt), hashCodeNullable(finishedAtLte), hashCodeNullable(finishedAtNot), hashCodeNullable(finishedAtNotIn), hashCodeNullable(id), hashCodeNullable(idContains), hashCodeNullable(idEndsWith), hashCodeNullable(idGt), hashCodeNullable(idGte), hashCodeNullable(idIn), hashCodeNullable(idLt), hashCodeNullable(idLte), hashCodeNullable(idNot), hashCodeNullable(idNotContains), hashCodeNullable(idNotEndsWith), hashCodeNullable(idNotIn), hashCodeNullable(idNotStartsWith), hashCodeNullable(idStartsWith), hashCodeNullable(NOT), hashCodeNullable(OR), hashCodeNullable(resourceType), hashCodeNullable(resourceTypeIn), hashCodeNullable(resourceTypeNot), hashCodeNullable(resourceTypeNotIn), hashCodeNullable(size), hashCodeNullable(sizeGt), hashCodeNullable(sizeGte), hashCodeNullable(sizeIn), hashCodeNullable(sizeLt), hashCodeNullable(sizeLte), hashCodeNullable(sizeNot), hashCodeNullable(sizeNotIn), hashCodeNullable(startedAt), hashCodeNullable(startedAtGt), hashCodeNullable(startedAtGte), hashCodeNullable(startedAtIn), hashCodeNullable(startedAtLt), hashCodeNullable(startedAtLte), hashCodeNullable(startedAtNot), hashCodeNullable(startedAtNotIn), hashCodeNullable(status), hashCodeNullable(statusIn), hashCodeNullable(statusNot), hashCodeNullable(statusNotIn), hashCodeNullable(updatedAt), hashCodeNullable(updatedAtGt), hashCodeNullable(updatedAtGte), hashCodeNullable(updatedAtIn), hashCodeNullable(updatedAtLt), hashCodeNullable(updatedAtLte), hashCodeNullable(updatedAtNot), hashCodeNullable(updatedAtNotIn));
  }

  private static <T> int hashCodeNullable(JsonNullable<T> a) {
    if (a == null) {
      return 1;
    }
    return a.isPresent() ? Arrays.deepHashCode(new Object[]{a.get()}) : 31;
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class UploadTaskWhereInput {\n");
    sb.append("    AND: ").append(toIndentedString(AND)).append("\n");
    sb.append("    chunkSize: ").append(toIndentedString(chunkSize)).append("\n");
    sb.append("    chunkSizeGt: ").append(toIndentedString(chunkSizeGt)).append("\n");
    sb.append("    chunkSizeGte: ").append(toIndentedString(chunkSizeGte)).append("\n");
    sb.append("    chunkSizeIn: ").append(toIndentedString(chunkSizeIn)).append("\n");
    sb.append("    chunkSizeLt: ").append(toIndentedString(chunkSizeLt)).append("\n");
    sb.append("    chunkSizeLte: ").append(toIndentedString(chunkSizeLte)).append("\n");
    sb.append("    chunkSizeNot: ").append(toIndentedString(chunkSizeNot)).append("\n");
    sb.append("    chunkSizeNotIn: ").append(toIndentedString(chunkSizeNotIn)).append("\n");
    sb.append("    currentChunk: ").append(toIndentedString(currentChunk)).append("\n");
    sb.append("    currentChunkGt: ").append(toIndentedString(currentChunkGt)).append("\n");
    sb.append("    currentChunkGte: ").append(toIndentedString(currentChunkGte)).append("\n");
    sb.append("    currentChunkIn: ").append(toIndentedString(currentChunkIn)).append("\n");
    sb.append("    currentChunkLt: ").append(toIndentedString(currentChunkLt)).append("\n");
    sb.append("    currentChunkLte: ").append(toIndentedString(currentChunkLte)).append("\n");
    sb.append("    currentChunkNot: ").append(toIndentedString(currentChunkNot)).append("\n");
    sb.append("    currentChunkNotIn: ").append(toIndentedString(currentChunkNotIn)).append("\n");
    sb.append("    finishedAt: ").append(toIndentedString(finishedAt)).append("\n");
    sb.append("    finishedAtGt: ").append(toIndentedString(finishedAtGt)).append("\n");
    sb.append("    finishedAtGte: ").append(toIndentedString(finishedAtGte)).append("\n");
    sb.append("    finishedAtIn: ").append(toIndentedString(finishedAtIn)).append("\n");
    sb.append("    finishedAtLt: ").append(toIndentedString(finishedAtLt)).append("\n");
    sb.append("    finishedAtLte: ").append(toIndentedString(finishedAtLte)).append("\n");
    sb.append("    finishedAtNot: ").append(toIndentedString(finishedAtNot)).append("\n");
    sb.append("    finishedAtNotIn: ").append(toIndentedString(finishedAtNotIn)).append("\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    idContains: ").append(toIndentedString(idContains)).append("\n");
    sb.append("    idEndsWith: ").append(toIndentedString(idEndsWith)).append("\n");
    sb.append("    idGt: ").append(toIndentedString(idGt)).append("\n");
    sb.append("    idGte: ").append(toIndentedString(idGte)).append("\n");
    sb.append("    idIn: ").append(toIndentedString(idIn)).append("\n");
    sb.append("    idLt: ").append(toIndentedString(idLt)).append("\n");
    sb.append("    idLte: ").append(toIndentedString(idLte)).append("\n");
    sb.append("    idNot: ").append(toIndentedString(idNot)).append("\n");
    sb.append("    idNotContains: ").append(toIndentedString(idNotContains)).append("\n");
    sb.append("    idNotEndsWith: ").append(toIndentedString(idNotEndsWith)).append("\n");
    sb.append("    idNotIn: ").append(toIndentedString(idNotIn)).append("\n");
    sb.append("    idNotStartsWith: ").append(toIndentedString(idNotStartsWith)).append("\n");
    sb.append("    idStartsWith: ").append(toIndentedString(idStartsWith)).append("\n");
    sb.append("    NOT: ").append(toIndentedString(NOT)).append("\n");
    sb.append("    OR: ").append(toIndentedString(OR)).append("\n");
    sb.append("    resourceType: ").append(toIndentedString(resourceType)).append("\n");
    sb.append("    resourceTypeIn: ").append(toIndentedString(resourceTypeIn)).append("\n");
    sb.append("    resourceTypeNot: ").append(toIndentedString(resourceTypeNot)).append("\n");
    sb.append("    resourceTypeNotIn: ").append(toIndentedString(resourceTypeNotIn)).append("\n");
    sb.append("    size: ").append(toIndentedString(size)).append("\n");
    sb.append("    sizeGt: ").append(toIndentedString(sizeGt)).append("\n");
    sb.append("    sizeGte: ").append(toIndentedString(sizeGte)).append("\n");
    sb.append("    sizeIn: ").append(toIndentedString(sizeIn)).append("\n");
    sb.append("    sizeLt: ").append(toIndentedString(sizeLt)).append("\n");
    sb.append("    sizeLte: ").append(toIndentedString(sizeLte)).append("\n");
    sb.append("    sizeNot: ").append(toIndentedString(sizeNot)).append("\n");
    sb.append("    sizeNotIn: ").append(toIndentedString(sizeNotIn)).append("\n");
    sb.append("    startedAt: ").append(toIndentedString(startedAt)).append("\n");
    sb.append("    startedAtGt: ").append(toIndentedString(startedAtGt)).append("\n");
    sb.append("    startedAtGte: ").append(toIndentedString(startedAtGte)).append("\n");
    sb.append("    startedAtIn: ").append(toIndentedString(startedAtIn)).append("\n");
    sb.append("    startedAtLt: ").append(toIndentedString(startedAtLt)).append("\n");
    sb.append("    startedAtLte: ").append(toIndentedString(startedAtLte)).append("\n");
    sb.append("    startedAtNot: ").append(toIndentedString(startedAtNot)).append("\n");
    sb.append("    startedAtNotIn: ").append(toIndentedString(startedAtNotIn)).append("\n");
    sb.append("    status: ").append(toIndentedString(status)).append("\n");
    sb.append("    statusIn: ").append(toIndentedString(statusIn)).append("\n");
    sb.append("    statusNot: ").append(toIndentedString(statusNot)).append("\n");
    sb.append("    statusNotIn: ").append(toIndentedString(statusNotIn)).append("\n");
    sb.append("    updatedAt: ").append(toIndentedString(updatedAt)).append("\n");
    sb.append("    updatedAtGt: ").append(toIndentedString(updatedAtGt)).append("\n");
    sb.append("    updatedAtGte: ").append(toIndentedString(updatedAtGte)).append("\n");
    sb.append("    updatedAtIn: ").append(toIndentedString(updatedAtIn)).append("\n");
    sb.append("    updatedAtLt: ").append(toIndentedString(updatedAtLt)).append("\n");
    sb.append("    updatedAtLte: ").append(toIndentedString(updatedAtLte)).append("\n");
    sb.append("    updatedAtNot: ").append(toIndentedString(updatedAtNot)).append("\n");
    sb.append("    updatedAtNotIn: ").append(toIndentedString(updatedAtNotIn)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

