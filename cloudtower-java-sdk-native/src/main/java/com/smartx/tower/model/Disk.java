/*
 * Tower SDK API
 * cloudtower operation API and SDK
 *
 * The version of the OpenAPI document: 1.7.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.smartx.tower.model;

import java.util.Objects;
import java.util.Arrays;
import java.util.Map;
import java.util.HashMap;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import com.smartx.tower.model.AlertRuleCluster;
import com.smartx.tower.model.BrickTopoPowers;
import com.smartx.tower.model.DiskFailureInformation;
import com.smartx.tower.model.DiskFunction;
import com.smartx.tower.model.DiskHealthStatus;
import com.smartx.tower.model.DiskPartitions;
import com.smartx.tower.model.DiskType;
import com.smartx.tower.model.DiskUsage;
import com.smartx.tower.model.DiskUsageStatus;
import com.smartx.tower.model.EntityAsyncStatus;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.util.ArrayList;
import java.util.List;
import org.openapitools.jackson.nullable.JsonNullable;
import com.fasterxml.jackson.annotation.JsonIgnore;
import org.openapitools.jackson.nullable.JsonNullable;
import java.util.NoSuchElementException;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;


/**
 * Disk
 */
@JsonPropertyOrder({
  Disk.JSON_PROPERTY_ENTITY_ASYNC_STATUS,
  Disk.JSON_PROPERTY_FAILURE_INFORMATION,
  Disk.JSON_PROPERTY_FIRMWARE,
  Disk.JSON_PROPERTY_FUNCTION,
  Disk.JSON_PROPERTY_HEALTH_STATUS,
  Disk.JSON_PROPERTY_HEALTHY,
  Disk.JSON_PROPERTY_HOST,
  Disk.JSON_PROPERTY_ID,
  Disk.JSON_PROPERTY_LABELS,
  Disk.JSON_PROPERTY_LOCAL_ID,
  Disk.JSON_PROPERTY_MODEL,
  Disk.JSON_PROPERTY_MOUNTED,
  Disk.JSON_PROPERTY_NAME,
  Disk.JSON_PROPERTY_NUMA_NODE,
  Disk.JSON_PROPERTY_OFFLINE,
  Disk.JSON_PROPERTY_PARTITIONS,
  Disk.JSON_PROPERTY_PATH,
  Disk.JSON_PROPERTY_PERSISTENT_MEMORY_TYPE,
  Disk.JSON_PROPERTY_PHYSICAL_SLOT_ON_BRICK,
  Disk.JSON_PROPERTY_PMEM_DIMMS,
  Disk.JSON_PROPERTY_RECOMMENDED_USAGE,
  Disk.JSON_PROPERTY_REMAINING_LIFE_PERCENT,
  Disk.JSON_PROPERTY_SERIAL,
  Disk.JSON_PROPERTY_SIZE,
  Disk.JSON_PROPERTY_TYPE,
  Disk.JSON_PROPERTY_USAGE,
  Disk.JSON_PROPERTY_USAGE_STATUS
})
@javax.annotation.processing.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2021-10-27T15:59:14.939791800+08:00[Asia/Shanghai]")
public class Disk {
  public static final String JSON_PROPERTY_ENTITY_ASYNC_STATUS = "entityAsyncStatus";
  private JsonNullable<EntityAsyncStatus> entityAsyncStatus = JsonNullable.<EntityAsyncStatus>undefined();

  public static final String JSON_PROPERTY_FAILURE_INFORMATION = "failure_information";
  private JsonNullable<DiskFailureInformation> failureInformation = JsonNullable.<DiskFailureInformation>undefined();

  public static final String JSON_PROPERTY_FIRMWARE = "firmware";
  private String firmware;

  public static final String JSON_PROPERTY_FUNCTION = "function";
  private JsonNullable<DiskFunction> function = JsonNullable.<DiskFunction>undefined();

  public static final String JSON_PROPERTY_HEALTH_STATUS = "health_status";
  private JsonNullable<DiskHealthStatus> healthStatus = JsonNullable.<DiskHealthStatus>undefined();

  public static final String JSON_PROPERTY_HEALTHY = "healthy";
  private Boolean healthy;

  public static final String JSON_PROPERTY_HOST = "host";
  private AlertRuleCluster host;

  public static final String JSON_PROPERTY_ID = "id";
  private String id;

  public static final String JSON_PROPERTY_LABELS = "labels";
  private JsonNullable<List<BrickTopoPowers>> labels = JsonNullable.<List<BrickTopoPowers>>undefined();

  public static final String JSON_PROPERTY_LOCAL_ID = "local_id";
  private String localId;

  public static final String JSON_PROPERTY_MODEL = "model";
  private String model;

  public static final String JSON_PROPERTY_MOUNTED = "mounted";
  private Boolean mounted;

  public static final String JSON_PROPERTY_NAME = "name";
  private String name;

  public static final String JSON_PROPERTY_NUMA_NODE = "numa_node";
  private JsonNullable<Double> numaNode = JsonNullable.<Double>undefined();

  public static final String JSON_PROPERTY_OFFLINE = "offline";
  private Boolean offline;

  public static final String JSON_PROPERTY_PARTITIONS = "partitions";
  private List<DiskPartitions> partitions = new ArrayList<>();

  public static final String JSON_PROPERTY_PATH = "path";
  private String path;

  public static final String JSON_PROPERTY_PERSISTENT_MEMORY_TYPE = "persistent_memory_type";
  private JsonNullable<String> persistentMemoryType = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_PHYSICAL_SLOT_ON_BRICK = "physical_slot_on_brick";
  private JsonNullable<Double> physicalSlotOnBrick = JsonNullable.<Double>undefined();

  public static final String JSON_PROPERTY_PMEM_DIMMS = "pmem_dimms";
  private JsonNullable<List<AlertRuleCluster>> pmemDimms = JsonNullable.<List<AlertRuleCluster>>undefined();

  public static final String JSON_PROPERTY_RECOMMENDED_USAGE = "recommended_usage";
  private JsonNullable<DiskUsage> recommendedUsage = JsonNullable.<DiskUsage>undefined();

  public static final String JSON_PROPERTY_REMAINING_LIFE_PERCENT = "remaining_life_percent";
  private JsonNullable<Double> remainingLifePercent = JsonNullable.<Double>undefined();

  public static final String JSON_PROPERTY_SERIAL = "serial";
  private String serial;

  public static final String JSON_PROPERTY_SIZE = "size";
  private Double size;

  public static final String JSON_PROPERTY_TYPE = "type";
  private DiskType type;

  public static final String JSON_PROPERTY_USAGE = "usage";
  private DiskUsage usage;

  public static final String JSON_PROPERTY_USAGE_STATUS = "usage_status";
  private JsonNullable<DiskUsageStatus> usageStatus = JsonNullable.<DiskUsageStatus>undefined();


  public Disk entityAsyncStatus(EntityAsyncStatus entityAsyncStatus) {
    this.entityAsyncStatus = JsonNullable.<EntityAsyncStatus>of(entityAsyncStatus);
    return this;
  }

   /**
   * Get entityAsyncStatus
   * @return entityAsyncStatus
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public EntityAsyncStatus getEntityAsyncStatus() {
        return entityAsyncStatus.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_ENTITY_ASYNC_STATUS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<EntityAsyncStatus> getEntityAsyncStatus_JsonNullable() {
    return entityAsyncStatus;
  }
  
  @JsonProperty(JSON_PROPERTY_ENTITY_ASYNC_STATUS)
  public void setEntityAsyncStatus_JsonNullable(JsonNullable<EntityAsyncStatus> entityAsyncStatus) {
    this.entityAsyncStatus = entityAsyncStatus;
  }

  public void setEntityAsyncStatus(EntityAsyncStatus entityAsyncStatus) {
    this.entityAsyncStatus = JsonNullable.<EntityAsyncStatus>of(entityAsyncStatus);
  }


  public Disk failureInformation(DiskFailureInformation failureInformation) {
    this.failureInformation = JsonNullable.<DiskFailureInformation>of(failureInformation);
    return this;
  }

   /**
   * Get failureInformation
   * @return failureInformation
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public DiskFailureInformation getFailureInformation() {
        return failureInformation.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_FAILURE_INFORMATION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<DiskFailureInformation> getFailureInformation_JsonNullable() {
    return failureInformation;
  }
  
  @JsonProperty(JSON_PROPERTY_FAILURE_INFORMATION)
  public void setFailureInformation_JsonNullable(JsonNullable<DiskFailureInformation> failureInformation) {
    this.failureInformation = failureInformation;
  }

  public void setFailureInformation(DiskFailureInformation failureInformation) {
    this.failureInformation = JsonNullable.<DiskFailureInformation>of(failureInformation);
  }


  public Disk firmware(String firmware) {
    this.firmware = firmware;
    return this;
  }

   /**
   * Get firmware
   * @return firmware
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")
  @JsonProperty(JSON_PROPERTY_FIRMWARE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getFirmware() {
    return firmware;
  }


  @JsonProperty(JSON_PROPERTY_FIRMWARE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setFirmware(String firmware) {
    this.firmware = firmware;
  }


  public Disk function(DiskFunction function) {
    this.function = JsonNullable.<DiskFunction>of(function);
    return this;
  }

   /**
   * Get function
   * @return function
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public DiskFunction getFunction() {
        return function.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_FUNCTION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<DiskFunction> getFunction_JsonNullable() {
    return function;
  }
  
  @JsonProperty(JSON_PROPERTY_FUNCTION)
  public void setFunction_JsonNullable(JsonNullable<DiskFunction> function) {
    this.function = function;
  }

  public void setFunction(DiskFunction function) {
    this.function = JsonNullable.<DiskFunction>of(function);
  }


  public Disk healthStatus(DiskHealthStatus healthStatus) {
    this.healthStatus = JsonNullable.<DiskHealthStatus>of(healthStatus);
    return this;
  }

   /**
   * Get healthStatus
   * @return healthStatus
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public DiskHealthStatus getHealthStatus() {
        return healthStatus.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_HEALTH_STATUS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<DiskHealthStatus> getHealthStatus_JsonNullable() {
    return healthStatus;
  }
  
  @JsonProperty(JSON_PROPERTY_HEALTH_STATUS)
  public void setHealthStatus_JsonNullable(JsonNullable<DiskHealthStatus> healthStatus) {
    this.healthStatus = healthStatus;
  }

  public void setHealthStatus(DiskHealthStatus healthStatus) {
    this.healthStatus = JsonNullable.<DiskHealthStatus>of(healthStatus);
  }


  public Disk healthy(Boolean healthy) {
    this.healthy = healthy;
    return this;
  }

   /**
   * Get healthy
   * @return healthy
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")
  @JsonProperty(JSON_PROPERTY_HEALTHY)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public Boolean getHealthy() {
    return healthy;
  }


  @JsonProperty(JSON_PROPERTY_HEALTHY)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setHealthy(Boolean healthy) {
    this.healthy = healthy;
  }


  public Disk host(AlertRuleCluster host) {
    this.host = host;
    return this;
  }

   /**
   * Get host
   * @return host
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")
  @JsonProperty(JSON_PROPERTY_HOST)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public AlertRuleCluster getHost() {
    return host;
  }


  @JsonProperty(JSON_PROPERTY_HOST)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setHost(AlertRuleCluster host) {
    this.host = host;
  }


  public Disk id(String id) {
    this.id = id;
    return this;
  }

   /**
   * Get id
   * @return id
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")
  @JsonProperty(JSON_PROPERTY_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getId() {
    return id;
  }


  @JsonProperty(JSON_PROPERTY_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setId(String id) {
    this.id = id;
  }


  public Disk labels(List<BrickTopoPowers> labels) {
    this.labels = JsonNullable.<List<BrickTopoPowers>>of(labels);
    return this;
  }

  public Disk addLabelsItem(BrickTopoPowers labelsItem) {
    if (this.labels == null || !this.labels.isPresent()) {
      this.labels = JsonNullable.<List<BrickTopoPowers>>of(new ArrayList<>());
    }
    try {
      this.labels.get().add(labelsItem);
    } catch (java.util.NoSuchElementException e) {
      // this can never happen, as we make sure above that the value is present
    }
    return this;
  }

   /**
   * Get labels
   * @return labels
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public List<BrickTopoPowers> getLabels() {
        return labels.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_LABELS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<List<BrickTopoPowers>> getLabels_JsonNullable() {
    return labels;
  }
  
  @JsonProperty(JSON_PROPERTY_LABELS)
  public void setLabels_JsonNullable(JsonNullable<List<BrickTopoPowers>> labels) {
    this.labels = labels;
  }

  public void setLabels(List<BrickTopoPowers> labels) {
    this.labels = JsonNullable.<List<BrickTopoPowers>>of(labels);
  }


  public Disk localId(String localId) {
    this.localId = localId;
    return this;
  }

   /**
   * Get localId
   * @return localId
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")
  @JsonProperty(JSON_PROPERTY_LOCAL_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getLocalId() {
    return localId;
  }


  @JsonProperty(JSON_PROPERTY_LOCAL_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setLocalId(String localId) {
    this.localId = localId;
  }


  public Disk model(String model) {
    this.model = model;
    return this;
  }

   /**
   * Get model
   * @return model
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")
  @JsonProperty(JSON_PROPERTY_MODEL)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getModel() {
    return model;
  }


  @JsonProperty(JSON_PROPERTY_MODEL)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setModel(String model) {
    this.model = model;
  }


  public Disk mounted(Boolean mounted) {
    this.mounted = mounted;
    return this;
  }

   /**
   * Get mounted
   * @return mounted
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")
  @JsonProperty(JSON_PROPERTY_MOUNTED)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public Boolean getMounted() {
    return mounted;
  }


  @JsonProperty(JSON_PROPERTY_MOUNTED)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setMounted(Boolean mounted) {
    this.mounted = mounted;
  }


  public Disk name(String name) {
    this.name = name;
    return this;
  }

   /**
   * Get name
   * @return name
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")
  @JsonProperty(JSON_PROPERTY_NAME)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getName() {
    return name;
  }


  @JsonProperty(JSON_PROPERTY_NAME)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setName(String name) {
    this.name = name;
  }


  public Disk numaNode(Double numaNode) {
    this.numaNode = JsonNullable.<Double>of(numaNode);
    return this;
  }

   /**
   * Get numaNode
   * @return numaNode
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public Double getNumaNode() {
        return numaNode.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_NUMA_NODE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<Double> getNumaNode_JsonNullable() {
    return numaNode;
  }
  
  @JsonProperty(JSON_PROPERTY_NUMA_NODE)
  public void setNumaNode_JsonNullable(JsonNullable<Double> numaNode) {
    this.numaNode = numaNode;
  }

  public void setNumaNode(Double numaNode) {
    this.numaNode = JsonNullable.<Double>of(numaNode);
  }


  public Disk offline(Boolean offline) {
    this.offline = offline;
    return this;
  }

   /**
   * Get offline
   * @return offline
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")
  @JsonProperty(JSON_PROPERTY_OFFLINE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public Boolean getOffline() {
    return offline;
  }


  @JsonProperty(JSON_PROPERTY_OFFLINE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setOffline(Boolean offline) {
    this.offline = offline;
  }


  public Disk partitions(List<DiskPartitions> partitions) {
    this.partitions = partitions;
    return this;
  }

  public Disk addPartitionsItem(DiskPartitions partitionsItem) {
    this.partitions.add(partitionsItem);
    return this;
  }

   /**
   * Get partitions
   * @return partitions
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")
  @JsonProperty(JSON_PROPERTY_PARTITIONS)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public List<DiskPartitions> getPartitions() {
    return partitions;
  }


  @JsonProperty(JSON_PROPERTY_PARTITIONS)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setPartitions(List<DiskPartitions> partitions) {
    this.partitions = partitions;
  }


  public Disk path(String path) {
    this.path = path;
    return this;
  }

   /**
   * Get path
   * @return path
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")
  @JsonProperty(JSON_PROPERTY_PATH)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getPath() {
    return path;
  }


  @JsonProperty(JSON_PROPERTY_PATH)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setPath(String path) {
    this.path = path;
  }


  public Disk persistentMemoryType(String persistentMemoryType) {
    this.persistentMemoryType = JsonNullable.<String>of(persistentMemoryType);
    return this;
  }

   /**
   * Get persistentMemoryType
   * @return persistentMemoryType
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getPersistentMemoryType() {
        return persistentMemoryType.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_PERSISTENT_MEMORY_TYPE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getPersistentMemoryType_JsonNullable() {
    return persistentMemoryType;
  }
  
  @JsonProperty(JSON_PROPERTY_PERSISTENT_MEMORY_TYPE)
  public void setPersistentMemoryType_JsonNullable(JsonNullable<String> persistentMemoryType) {
    this.persistentMemoryType = persistentMemoryType;
  }

  public void setPersistentMemoryType(String persistentMemoryType) {
    this.persistentMemoryType = JsonNullable.<String>of(persistentMemoryType);
  }


  public Disk physicalSlotOnBrick(Double physicalSlotOnBrick) {
    this.physicalSlotOnBrick = JsonNullable.<Double>of(physicalSlotOnBrick);
    return this;
  }

   /**
   * Get physicalSlotOnBrick
   * @return physicalSlotOnBrick
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public Double getPhysicalSlotOnBrick() {
        return physicalSlotOnBrick.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_PHYSICAL_SLOT_ON_BRICK)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<Double> getPhysicalSlotOnBrick_JsonNullable() {
    return physicalSlotOnBrick;
  }
  
  @JsonProperty(JSON_PROPERTY_PHYSICAL_SLOT_ON_BRICK)
  public void setPhysicalSlotOnBrick_JsonNullable(JsonNullable<Double> physicalSlotOnBrick) {
    this.physicalSlotOnBrick = physicalSlotOnBrick;
  }

  public void setPhysicalSlotOnBrick(Double physicalSlotOnBrick) {
    this.physicalSlotOnBrick = JsonNullable.<Double>of(physicalSlotOnBrick);
  }


  public Disk pmemDimms(List<AlertRuleCluster> pmemDimms) {
    this.pmemDimms = JsonNullable.<List<AlertRuleCluster>>of(pmemDimms);
    return this;
  }

  public Disk addPmemDimmsItem(AlertRuleCluster pmemDimmsItem) {
    if (this.pmemDimms == null || !this.pmemDimms.isPresent()) {
      this.pmemDimms = JsonNullable.<List<AlertRuleCluster>>of(new ArrayList<>());
    }
    try {
      this.pmemDimms.get().add(pmemDimmsItem);
    } catch (java.util.NoSuchElementException e) {
      // this can never happen, as we make sure above that the value is present
    }
    return this;
  }

   /**
   * Get pmemDimms
   * @return pmemDimms
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public List<AlertRuleCluster> getPmemDimms() {
        return pmemDimms.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_PMEM_DIMMS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<List<AlertRuleCluster>> getPmemDimms_JsonNullable() {
    return pmemDimms;
  }
  
  @JsonProperty(JSON_PROPERTY_PMEM_DIMMS)
  public void setPmemDimms_JsonNullable(JsonNullable<List<AlertRuleCluster>> pmemDimms) {
    this.pmemDimms = pmemDimms;
  }

  public void setPmemDimms(List<AlertRuleCluster> pmemDimms) {
    this.pmemDimms = JsonNullable.<List<AlertRuleCluster>>of(pmemDimms);
  }


  public Disk recommendedUsage(DiskUsage recommendedUsage) {
    this.recommendedUsage = JsonNullable.<DiskUsage>of(recommendedUsage);
    return this;
  }

   /**
   * Get recommendedUsage
   * @return recommendedUsage
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public DiskUsage getRecommendedUsage() {
        return recommendedUsage.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_RECOMMENDED_USAGE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<DiskUsage> getRecommendedUsage_JsonNullable() {
    return recommendedUsage;
  }
  
  @JsonProperty(JSON_PROPERTY_RECOMMENDED_USAGE)
  public void setRecommendedUsage_JsonNullable(JsonNullable<DiskUsage> recommendedUsage) {
    this.recommendedUsage = recommendedUsage;
  }

  public void setRecommendedUsage(DiskUsage recommendedUsage) {
    this.recommendedUsage = JsonNullable.<DiskUsage>of(recommendedUsage);
  }


  public Disk remainingLifePercent(Double remainingLifePercent) {
    this.remainingLifePercent = JsonNullable.<Double>of(remainingLifePercent);
    return this;
  }

   /**
   * Get remainingLifePercent
   * @return remainingLifePercent
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public Double getRemainingLifePercent() {
        return remainingLifePercent.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_REMAINING_LIFE_PERCENT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<Double> getRemainingLifePercent_JsonNullable() {
    return remainingLifePercent;
  }
  
  @JsonProperty(JSON_PROPERTY_REMAINING_LIFE_PERCENT)
  public void setRemainingLifePercent_JsonNullable(JsonNullable<Double> remainingLifePercent) {
    this.remainingLifePercent = remainingLifePercent;
  }

  public void setRemainingLifePercent(Double remainingLifePercent) {
    this.remainingLifePercent = JsonNullable.<Double>of(remainingLifePercent);
  }


  public Disk serial(String serial) {
    this.serial = serial;
    return this;
  }

   /**
   * Get serial
   * @return serial
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")
  @JsonProperty(JSON_PROPERTY_SERIAL)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getSerial() {
    return serial;
  }


  @JsonProperty(JSON_PROPERTY_SERIAL)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setSerial(String serial) {
    this.serial = serial;
  }


  public Disk size(Double size) {
    this.size = size;
    return this;
  }

   /**
   * Get size
   * @return size
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")
  @JsonProperty(JSON_PROPERTY_SIZE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public Double getSize() {
    return size;
  }


  @JsonProperty(JSON_PROPERTY_SIZE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setSize(Double size) {
    this.size = size;
  }


  public Disk type(DiskType type) {
    this.type = type;
    return this;
  }

   /**
   * Get type
   * @return type
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")
  @JsonProperty(JSON_PROPERTY_TYPE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public DiskType getType() {
    return type;
  }


  @JsonProperty(JSON_PROPERTY_TYPE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setType(DiskType type) {
    this.type = type;
  }


  public Disk usage(DiskUsage usage) {
    this.usage = usage;
    return this;
  }

   /**
   * Get usage
   * @return usage
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")
  @JsonProperty(JSON_PROPERTY_USAGE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public DiskUsage getUsage() {
    return usage;
  }


  @JsonProperty(JSON_PROPERTY_USAGE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setUsage(DiskUsage usage) {
    this.usage = usage;
  }


  public Disk usageStatus(DiskUsageStatus usageStatus) {
    this.usageStatus = JsonNullable.<DiskUsageStatus>of(usageStatus);
    return this;
  }

   /**
   * Get usageStatus
   * @return usageStatus
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public DiskUsageStatus getUsageStatus() {
        return usageStatus.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_USAGE_STATUS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<DiskUsageStatus> getUsageStatus_JsonNullable() {
    return usageStatus;
  }
  
  @JsonProperty(JSON_PROPERTY_USAGE_STATUS)
  public void setUsageStatus_JsonNullable(JsonNullable<DiskUsageStatus> usageStatus) {
    this.usageStatus = usageStatus;
  }

  public void setUsageStatus(DiskUsageStatus usageStatus) {
    this.usageStatus = JsonNullable.<DiskUsageStatus>of(usageStatus);
  }


  /**
   * Return true if this Disk object is equal to o.
   */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Disk disk = (Disk) o;
    return equalsNullable(this.entityAsyncStatus, disk.entityAsyncStatus) &&
        equalsNullable(this.failureInformation, disk.failureInformation) &&
        Objects.equals(this.firmware, disk.firmware) &&
        equalsNullable(this.function, disk.function) &&
        equalsNullable(this.healthStatus, disk.healthStatus) &&
        Objects.equals(this.healthy, disk.healthy) &&
        Objects.equals(this.host, disk.host) &&
        Objects.equals(this.id, disk.id) &&
        equalsNullable(this.labels, disk.labels) &&
        Objects.equals(this.localId, disk.localId) &&
        Objects.equals(this.model, disk.model) &&
        Objects.equals(this.mounted, disk.mounted) &&
        Objects.equals(this.name, disk.name) &&
        equalsNullable(this.numaNode, disk.numaNode) &&
        Objects.equals(this.offline, disk.offline) &&
        Objects.equals(this.partitions, disk.partitions) &&
        Objects.equals(this.path, disk.path) &&
        equalsNullable(this.persistentMemoryType, disk.persistentMemoryType) &&
        equalsNullable(this.physicalSlotOnBrick, disk.physicalSlotOnBrick) &&
        equalsNullable(this.pmemDimms, disk.pmemDimms) &&
        equalsNullable(this.recommendedUsage, disk.recommendedUsage) &&
        equalsNullable(this.remainingLifePercent, disk.remainingLifePercent) &&
        Objects.equals(this.serial, disk.serial) &&
        Objects.equals(this.size, disk.size) &&
        Objects.equals(this.type, disk.type) &&
        Objects.equals(this.usage, disk.usage) &&
        equalsNullable(this.usageStatus, disk.usageStatus);
  }

  private static <T> boolean equalsNullable(JsonNullable<T> a, JsonNullable<T> b) {
    return a == b || (a != null && b != null && a.isPresent() && b.isPresent() && Objects.deepEquals(a.get(), b.get()));
  }

  @Override
  public int hashCode() {
    return Objects.hash(hashCodeNullable(entityAsyncStatus), hashCodeNullable(failureInformation), firmware, hashCodeNullable(function), hashCodeNullable(healthStatus), healthy, host, id, hashCodeNullable(labels), localId, model, mounted, name, hashCodeNullable(numaNode), offline, partitions, path, hashCodeNullable(persistentMemoryType), hashCodeNullable(physicalSlotOnBrick), hashCodeNullable(pmemDimms), hashCodeNullable(recommendedUsage), hashCodeNullable(remainingLifePercent), serial, size, type, usage, hashCodeNullable(usageStatus));
  }

  private static <T> int hashCodeNullable(JsonNullable<T> a) {
    if (a == null) {
      return 1;
    }
    return a.isPresent() ? Arrays.deepHashCode(new Object[]{a.get()}) : 31;
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Disk {\n");
    sb.append("    entityAsyncStatus: ").append(toIndentedString(entityAsyncStatus)).append("\n");
    sb.append("    failureInformation: ").append(toIndentedString(failureInformation)).append("\n");
    sb.append("    firmware: ").append(toIndentedString(firmware)).append("\n");
    sb.append("    function: ").append(toIndentedString(function)).append("\n");
    sb.append("    healthStatus: ").append(toIndentedString(healthStatus)).append("\n");
    sb.append("    healthy: ").append(toIndentedString(healthy)).append("\n");
    sb.append("    host: ").append(toIndentedString(host)).append("\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    labels: ").append(toIndentedString(labels)).append("\n");
    sb.append("    localId: ").append(toIndentedString(localId)).append("\n");
    sb.append("    model: ").append(toIndentedString(model)).append("\n");
    sb.append("    mounted: ").append(toIndentedString(mounted)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    numaNode: ").append(toIndentedString(numaNode)).append("\n");
    sb.append("    offline: ").append(toIndentedString(offline)).append("\n");
    sb.append("    partitions: ").append(toIndentedString(partitions)).append("\n");
    sb.append("    path: ").append(toIndentedString(path)).append("\n");
    sb.append("    persistentMemoryType: ").append(toIndentedString(persistentMemoryType)).append("\n");
    sb.append("    physicalSlotOnBrick: ").append(toIndentedString(physicalSlotOnBrick)).append("\n");
    sb.append("    pmemDimms: ").append(toIndentedString(pmemDimms)).append("\n");
    sb.append("    recommendedUsage: ").append(toIndentedString(recommendedUsage)).append("\n");
    sb.append("    remainingLifePercent: ").append(toIndentedString(remainingLifePercent)).append("\n");
    sb.append("    serial: ").append(toIndentedString(serial)).append("\n");
    sb.append("    size: ").append(toIndentedString(size)).append("\n");
    sb.append("    type: ").append(toIndentedString(type)).append("\n");
    sb.append("    usage: ").append(toIndentedString(usage)).append("\n");
    sb.append("    usageStatus: ").append(toIndentedString(usageStatus)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

