/*
 * Tower SDK API
 * cloudtower operation API and SDK
 *
 * The version of the OpenAPI document: 1.7.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.smartx.tower.model;

import java.util.Objects;
import java.util.Arrays;
import java.util.Map;
import java.util.HashMap;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import com.smartx.tower.model.AlertRuleCluster;
import com.smartx.tower.model.UserRolePlatform;
import com.smartx.tower.model.UserRolePreset;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.util.ArrayList;
import java.util.List;
import org.openapitools.jackson.nullable.JsonNullable;
import com.fasterxml.jackson.annotation.JsonIgnore;
import org.openapitools.jackson.nullable.JsonNullable;
import java.util.NoSuchElementException;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;


/**
 * UserRoleNext
 */
@JsonPropertyOrder({
  UserRoleNext.JSON_PROPERTY_ACTIONS,
  UserRoleNext.JSON_PROPERTY_ID,
  UserRoleNext.JSON_PROPERTY_NAME,
  UserRoleNext.JSON_PROPERTY_PLATFORM,
  UserRoleNext.JSON_PROPERTY_PRESET,
  UserRoleNext.JSON_PROPERTY_USERS
})
@javax.annotation.processing.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2021-10-27T15:59:14.939791800+08:00[Asia/Shanghai]")
public class UserRoleNext {
  public static final String JSON_PROPERTY_ACTIONS = "actions";
  private List<String> actions = new ArrayList<>();

  public static final String JSON_PROPERTY_ID = "id";
  private String id;

  public static final String JSON_PROPERTY_NAME = "name";
  private String name;

  public static final String JSON_PROPERTY_PLATFORM = "platform";
  private UserRolePlatform platform;

  public static final String JSON_PROPERTY_PRESET = "preset";
  private JsonNullable<UserRolePreset> preset = JsonNullable.<UserRolePreset>undefined();

  public static final String JSON_PROPERTY_USERS = "users";
  private JsonNullable<List<AlertRuleCluster>> users = JsonNullable.<List<AlertRuleCluster>>undefined();


  public UserRoleNext actions(List<String> actions) {
    this.actions = actions;
    return this;
  }

  public UserRoleNext addActionsItem(String actionsItem) {
    this.actions.add(actionsItem);
    return this;
  }

   /**
   * Get actions
   * @return actions
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")
  @JsonProperty(JSON_PROPERTY_ACTIONS)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public List<String> getActions() {
    return actions;
  }


  @JsonProperty(JSON_PROPERTY_ACTIONS)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setActions(List<String> actions) {
    this.actions = actions;
  }


  public UserRoleNext id(String id) {
    this.id = id;
    return this;
  }

   /**
   * Get id
   * @return id
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")
  @JsonProperty(JSON_PROPERTY_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getId() {
    return id;
  }


  @JsonProperty(JSON_PROPERTY_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setId(String id) {
    this.id = id;
  }


  public UserRoleNext name(String name) {
    this.name = name;
    return this;
  }

   /**
   * Get name
   * @return name
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")
  @JsonProperty(JSON_PROPERTY_NAME)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getName() {
    return name;
  }


  @JsonProperty(JSON_PROPERTY_NAME)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setName(String name) {
    this.name = name;
  }


  public UserRoleNext platform(UserRolePlatform platform) {
    this.platform = platform;
    return this;
  }

   /**
   * Get platform
   * @return platform
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")
  @JsonProperty(JSON_PROPERTY_PLATFORM)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public UserRolePlatform getPlatform() {
    return platform;
  }


  @JsonProperty(JSON_PROPERTY_PLATFORM)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setPlatform(UserRolePlatform platform) {
    this.platform = platform;
  }


  public UserRoleNext preset(UserRolePreset preset) {
    this.preset = JsonNullable.<UserRolePreset>of(preset);
    return this;
  }

   /**
   * Get preset
   * @return preset
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public UserRolePreset getPreset() {
        return preset.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_PRESET)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<UserRolePreset> getPreset_JsonNullable() {
    return preset;
  }
  
  @JsonProperty(JSON_PROPERTY_PRESET)
  public void setPreset_JsonNullable(JsonNullable<UserRolePreset> preset) {
    this.preset = preset;
  }

  public void setPreset(UserRolePreset preset) {
    this.preset = JsonNullable.<UserRolePreset>of(preset);
  }


  public UserRoleNext users(List<AlertRuleCluster> users) {
    this.users = JsonNullable.<List<AlertRuleCluster>>of(users);
    return this;
  }

  public UserRoleNext addUsersItem(AlertRuleCluster usersItem) {
    if (this.users == null || !this.users.isPresent()) {
      this.users = JsonNullable.<List<AlertRuleCluster>>of(new ArrayList<>());
    }
    try {
      this.users.get().add(usersItem);
    } catch (java.util.NoSuchElementException e) {
      // this can never happen, as we make sure above that the value is present
    }
    return this;
  }

   /**
   * Get users
   * @return users
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public List<AlertRuleCluster> getUsers() {
        return users.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_USERS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<List<AlertRuleCluster>> getUsers_JsonNullable() {
    return users;
  }
  
  @JsonProperty(JSON_PROPERTY_USERS)
  public void setUsers_JsonNullable(JsonNullable<List<AlertRuleCluster>> users) {
    this.users = users;
  }

  public void setUsers(List<AlertRuleCluster> users) {
    this.users = JsonNullable.<List<AlertRuleCluster>>of(users);
  }


  /**
   * Return true if this UserRoleNext object is equal to o.
   */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    UserRoleNext userRoleNext = (UserRoleNext) o;
    return Objects.equals(this.actions, userRoleNext.actions) &&
        Objects.equals(this.id, userRoleNext.id) &&
        Objects.equals(this.name, userRoleNext.name) &&
        Objects.equals(this.platform, userRoleNext.platform) &&
        equalsNullable(this.preset, userRoleNext.preset) &&
        equalsNullable(this.users, userRoleNext.users);
  }

  private static <T> boolean equalsNullable(JsonNullable<T> a, JsonNullable<T> b) {
    return a == b || (a != null && b != null && a.isPresent() && b.isPresent() && Objects.deepEquals(a.get(), b.get()));
  }

  @Override
  public int hashCode() {
    return Objects.hash(actions, id, name, platform, hashCodeNullable(preset), hashCodeNullable(users));
  }

  private static <T> int hashCodeNullable(JsonNullable<T> a) {
    if (a == null) {
      return 1;
    }
    return a.isPresent() ? Arrays.deepHashCode(new Object[]{a.get()}) : 31;
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class UserRoleNext {\n");
    sb.append("    actions: ").append(toIndentedString(actions)).append("\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    platform: ").append(toIndentedString(platform)).append("\n");
    sb.append("    preset: ").append(toIndentedString(preset)).append("\n");
    sb.append("    users: ").append(toIndentedString(users)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

