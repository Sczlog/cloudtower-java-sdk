/*
 * Tower SDK API
 * cloudtower operation API and SDK
 *
 * The version of the OpenAPI document: 1.7.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.smartx.tower.model;

import java.util.Objects;
import java.util.Arrays;
import java.util.Map;
import java.util.HashMap;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import com.smartx.tower.model.UserRole;
import com.smartx.tower.model.UserRoleNextWhereInput;
import com.smartx.tower.model.UserSource;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.util.ArrayList;
import java.util.List;
import org.openapitools.jackson.nullable.JsonNullable;
import com.fasterxml.jackson.annotation.JsonIgnore;
import org.openapitools.jackson.nullable.JsonNullable;
import java.util.NoSuchElementException;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;


/**
 * UserWhereInput
 */
@JsonPropertyOrder({
  UserWhereInput.JSON_PROPERTY_A_N_D,
  UserWhereInput.JSON_PROPERTY_EMAIL_ADDRESS,
  UserWhereInput.JSON_PROPERTY_EMAIL_ADDRESS_CONTAINS,
  UserWhereInput.JSON_PROPERTY_EMAIL_ADDRESS_ENDS_WITH,
  UserWhereInput.JSON_PROPERTY_EMAIL_ADDRESS_GT,
  UserWhereInput.JSON_PROPERTY_EMAIL_ADDRESS_GTE,
  UserWhereInput.JSON_PROPERTY_EMAIL_ADDRESS_IN,
  UserWhereInput.JSON_PROPERTY_EMAIL_ADDRESS_LT,
  UserWhereInput.JSON_PROPERTY_EMAIL_ADDRESS_LTE,
  UserWhereInput.JSON_PROPERTY_EMAIL_ADDRESS_NOT,
  UserWhereInput.JSON_PROPERTY_EMAIL_ADDRESS_NOT_CONTAINS,
  UserWhereInput.JSON_PROPERTY_EMAIL_ADDRESS_NOT_ENDS_WITH,
  UserWhereInput.JSON_PROPERTY_EMAIL_ADDRESS_NOT_IN,
  UserWhereInput.JSON_PROPERTY_EMAIL_ADDRESS_NOT_STARTS_WITH,
  UserWhereInput.JSON_PROPERTY_EMAIL_ADDRESS_STARTS_WITH,
  UserWhereInput.JSON_PROPERTY_ID,
  UserWhereInput.JSON_PROPERTY_ID_CONTAINS,
  UserWhereInput.JSON_PROPERTY_ID_ENDS_WITH,
  UserWhereInput.JSON_PROPERTY_ID_GT,
  UserWhereInput.JSON_PROPERTY_ID_GTE,
  UserWhereInput.JSON_PROPERTY_ID_IN,
  UserWhereInput.JSON_PROPERTY_ID_LT,
  UserWhereInput.JSON_PROPERTY_ID_LTE,
  UserWhereInput.JSON_PROPERTY_ID_NOT,
  UserWhereInput.JSON_PROPERTY_ID_NOT_CONTAINS,
  UserWhereInput.JSON_PROPERTY_ID_NOT_ENDS_WITH,
  UserWhereInput.JSON_PROPERTY_ID_NOT_IN,
  UserWhereInput.JSON_PROPERTY_ID_NOT_STARTS_WITH,
  UserWhereInput.JSON_PROPERTY_ID_STARTS_WITH,
  UserWhereInput.JSON_PROPERTY_INTERNAL,
  UserWhereInput.JSON_PROPERTY_INTERNAL_NOT,
  UserWhereInput.JSON_PROPERTY_LDAP_DN,
  UserWhereInput.JSON_PROPERTY_LDAP_DN_CONTAINS,
  UserWhereInput.JSON_PROPERTY_LDAP_DN_ENDS_WITH,
  UserWhereInput.JSON_PROPERTY_LDAP_DN_GT,
  UserWhereInput.JSON_PROPERTY_LDAP_DN_GTE,
  UserWhereInput.JSON_PROPERTY_LDAP_DN_IN,
  UserWhereInput.JSON_PROPERTY_LDAP_DN_LT,
  UserWhereInput.JSON_PROPERTY_LDAP_DN_LTE,
  UserWhereInput.JSON_PROPERTY_LDAP_DN_NOT,
  UserWhereInput.JSON_PROPERTY_LDAP_DN_NOT_CONTAINS,
  UserWhereInput.JSON_PROPERTY_LDAP_DN_NOT_ENDS_WITH,
  UserWhereInput.JSON_PROPERTY_LDAP_DN_NOT_IN,
  UserWhereInput.JSON_PROPERTY_LDAP_DN_NOT_STARTS_WITH,
  UserWhereInput.JSON_PROPERTY_LDAP_DN_STARTS_WITH,
  UserWhereInput.JSON_PROPERTY_MOBILE_PHONE,
  UserWhereInput.JSON_PROPERTY_MOBILE_PHONE_CONTAINS,
  UserWhereInput.JSON_PROPERTY_MOBILE_PHONE_ENDS_WITH,
  UserWhereInput.JSON_PROPERTY_MOBILE_PHONE_GT,
  UserWhereInput.JSON_PROPERTY_MOBILE_PHONE_GTE,
  UserWhereInput.JSON_PROPERTY_MOBILE_PHONE_IN,
  UserWhereInput.JSON_PROPERTY_MOBILE_PHONE_LT,
  UserWhereInput.JSON_PROPERTY_MOBILE_PHONE_LTE,
  UserWhereInput.JSON_PROPERTY_MOBILE_PHONE_NOT,
  UserWhereInput.JSON_PROPERTY_MOBILE_PHONE_NOT_CONTAINS,
  UserWhereInput.JSON_PROPERTY_MOBILE_PHONE_NOT_ENDS_WITH,
  UserWhereInput.JSON_PROPERTY_MOBILE_PHONE_NOT_IN,
  UserWhereInput.JSON_PROPERTY_MOBILE_PHONE_NOT_STARTS_WITH,
  UserWhereInput.JSON_PROPERTY_MOBILE_PHONE_STARTS_WITH,
  UserWhereInput.JSON_PROPERTY_NAME,
  UserWhereInput.JSON_PROPERTY_NAME_CONTAINS,
  UserWhereInput.JSON_PROPERTY_NAME_ENDS_WITH,
  UserWhereInput.JSON_PROPERTY_NAME_GT,
  UserWhereInput.JSON_PROPERTY_NAME_GTE,
  UserWhereInput.JSON_PROPERTY_NAME_IN,
  UserWhereInput.JSON_PROPERTY_NAME_LT,
  UserWhereInput.JSON_PROPERTY_NAME_LTE,
  UserWhereInput.JSON_PROPERTY_NAME_NOT,
  UserWhereInput.JSON_PROPERTY_NAME_NOT_CONTAINS,
  UserWhereInput.JSON_PROPERTY_NAME_NOT_ENDS_WITH,
  UserWhereInput.JSON_PROPERTY_NAME_NOT_IN,
  UserWhereInput.JSON_PROPERTY_NAME_NOT_STARTS_WITH,
  UserWhereInput.JSON_PROPERTY_NAME_STARTS_WITH,
  UserWhereInput.JSON_PROPERTY_N_O_T,
  UserWhereInput.JSON_PROPERTY_O_R,
  UserWhereInput.JSON_PROPERTY_PASSWORD,
  UserWhereInput.JSON_PROPERTY_PASSWORD_CONTAINS,
  UserWhereInput.JSON_PROPERTY_PASSWORD_ENDS_WITH,
  UserWhereInput.JSON_PROPERTY_PASSWORD_GT,
  UserWhereInput.JSON_PROPERTY_PASSWORD_GTE,
  UserWhereInput.JSON_PROPERTY_PASSWORD_IN,
  UserWhereInput.JSON_PROPERTY_PASSWORD_LT,
  UserWhereInput.JSON_PROPERTY_PASSWORD_LTE,
  UserWhereInput.JSON_PROPERTY_PASSWORD_NOT,
  UserWhereInput.JSON_PROPERTY_PASSWORD_NOT_CONTAINS,
  UserWhereInput.JSON_PROPERTY_PASSWORD_NOT_ENDS_WITH,
  UserWhereInput.JSON_PROPERTY_PASSWORD_NOT_IN,
  UserWhereInput.JSON_PROPERTY_PASSWORD_NOT_STARTS_WITH,
  UserWhereInput.JSON_PROPERTY_PASSWORD_STARTS_WITH,
  UserWhereInput.JSON_PROPERTY_ROLE,
  UserWhereInput.JSON_PROPERTY_ROLE_IN,
  UserWhereInput.JSON_PROPERTY_ROLE_NOT,
  UserWhereInput.JSON_PROPERTY_ROLE_NOT_IN,
  UserWhereInput.JSON_PROPERTY_ROLES_EVERY,
  UserWhereInput.JSON_PROPERTY_ROLES_NONE,
  UserWhereInput.JSON_PROPERTY_ROLES_SOME,
  UserWhereInput.JSON_PROPERTY_SOURCE,
  UserWhereInput.JSON_PROPERTY_SOURCE_IN,
  UserWhereInput.JSON_PROPERTY_SOURCE_NOT,
  UserWhereInput.JSON_PROPERTY_SOURCE_NOT_IN,
  UserWhereInput.JSON_PROPERTY_USERNAME,
  UserWhereInput.JSON_PROPERTY_USERNAME_CONTAINS,
  UserWhereInput.JSON_PROPERTY_USERNAME_ENDS_WITH,
  UserWhereInput.JSON_PROPERTY_USERNAME_GT,
  UserWhereInput.JSON_PROPERTY_USERNAME_GTE,
  UserWhereInput.JSON_PROPERTY_USERNAME_IN,
  UserWhereInput.JSON_PROPERTY_USERNAME_LT,
  UserWhereInput.JSON_PROPERTY_USERNAME_LTE,
  UserWhereInput.JSON_PROPERTY_USERNAME_NOT,
  UserWhereInput.JSON_PROPERTY_USERNAME_NOT_CONTAINS,
  UserWhereInput.JSON_PROPERTY_USERNAME_NOT_ENDS_WITH,
  UserWhereInput.JSON_PROPERTY_USERNAME_NOT_IN,
  UserWhereInput.JSON_PROPERTY_USERNAME_NOT_STARTS_WITH,
  UserWhereInput.JSON_PROPERTY_USERNAME_STARTS_WITH
})
@javax.annotation.processing.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2021-10-27T15:59:14.939791800+08:00[Asia/Shanghai]")
public class UserWhereInput {
  public static final String JSON_PROPERTY_A_N_D = "AND";
  private JsonNullable<List<UserWhereInput>> AND = JsonNullable.<List<UserWhereInput>>undefined();

  public static final String JSON_PROPERTY_EMAIL_ADDRESS = "email_address";
  private JsonNullable<String> emailAddress = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_EMAIL_ADDRESS_CONTAINS = "email_address_contains";
  private JsonNullable<String> emailAddressContains = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_EMAIL_ADDRESS_ENDS_WITH = "email_address_ends_with";
  private JsonNullable<String> emailAddressEndsWith = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_EMAIL_ADDRESS_GT = "email_address_gt";
  private JsonNullable<String> emailAddressGt = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_EMAIL_ADDRESS_GTE = "email_address_gte";
  private JsonNullable<String> emailAddressGte = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_EMAIL_ADDRESS_IN = "email_address_in";
  private JsonNullable<List<String>> emailAddressIn = JsonNullable.<List<String>>undefined();

  public static final String JSON_PROPERTY_EMAIL_ADDRESS_LT = "email_address_lt";
  private JsonNullable<String> emailAddressLt = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_EMAIL_ADDRESS_LTE = "email_address_lte";
  private JsonNullable<String> emailAddressLte = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_EMAIL_ADDRESS_NOT = "email_address_not";
  private JsonNullable<String> emailAddressNot = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_EMAIL_ADDRESS_NOT_CONTAINS = "email_address_not_contains";
  private JsonNullable<String> emailAddressNotContains = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_EMAIL_ADDRESS_NOT_ENDS_WITH = "email_address_not_ends_with";
  private JsonNullable<String> emailAddressNotEndsWith = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_EMAIL_ADDRESS_NOT_IN = "email_address_not_in";
  private JsonNullable<List<String>> emailAddressNotIn = JsonNullable.<List<String>>undefined();

  public static final String JSON_PROPERTY_EMAIL_ADDRESS_NOT_STARTS_WITH = "email_address_not_starts_with";
  private JsonNullable<String> emailAddressNotStartsWith = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_EMAIL_ADDRESS_STARTS_WITH = "email_address_starts_with";
  private JsonNullable<String> emailAddressStartsWith = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_ID = "id";
  private JsonNullable<String> id = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_ID_CONTAINS = "id_contains";
  private JsonNullable<String> idContains = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_ID_ENDS_WITH = "id_ends_with";
  private JsonNullable<String> idEndsWith = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_ID_GT = "id_gt";
  private JsonNullable<String> idGt = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_ID_GTE = "id_gte";
  private JsonNullable<String> idGte = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_ID_IN = "id_in";
  private JsonNullable<List<String>> idIn = JsonNullable.<List<String>>undefined();

  public static final String JSON_PROPERTY_ID_LT = "id_lt";
  private JsonNullable<String> idLt = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_ID_LTE = "id_lte";
  private JsonNullable<String> idLte = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_ID_NOT = "id_not";
  private JsonNullable<String> idNot = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_ID_NOT_CONTAINS = "id_not_contains";
  private JsonNullable<String> idNotContains = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_ID_NOT_ENDS_WITH = "id_not_ends_with";
  private JsonNullable<String> idNotEndsWith = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_ID_NOT_IN = "id_not_in";
  private JsonNullable<List<String>> idNotIn = JsonNullable.<List<String>>undefined();

  public static final String JSON_PROPERTY_ID_NOT_STARTS_WITH = "id_not_starts_with";
  private JsonNullable<String> idNotStartsWith = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_ID_STARTS_WITH = "id_starts_with";
  private JsonNullable<String> idStartsWith = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_INTERNAL = "internal";
  private JsonNullable<Boolean> internal = JsonNullable.<Boolean>undefined();

  public static final String JSON_PROPERTY_INTERNAL_NOT = "internal_not";
  private JsonNullable<Boolean> internalNot = JsonNullable.<Boolean>undefined();

  public static final String JSON_PROPERTY_LDAP_DN = "ldap_dn";
  private JsonNullable<String> ldapDn = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_LDAP_DN_CONTAINS = "ldap_dn_contains";
  private JsonNullable<String> ldapDnContains = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_LDAP_DN_ENDS_WITH = "ldap_dn_ends_with";
  private JsonNullable<String> ldapDnEndsWith = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_LDAP_DN_GT = "ldap_dn_gt";
  private JsonNullable<String> ldapDnGt = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_LDAP_DN_GTE = "ldap_dn_gte";
  private JsonNullable<String> ldapDnGte = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_LDAP_DN_IN = "ldap_dn_in";
  private JsonNullable<List<String>> ldapDnIn = JsonNullable.<List<String>>undefined();

  public static final String JSON_PROPERTY_LDAP_DN_LT = "ldap_dn_lt";
  private JsonNullable<String> ldapDnLt = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_LDAP_DN_LTE = "ldap_dn_lte";
  private JsonNullable<String> ldapDnLte = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_LDAP_DN_NOT = "ldap_dn_not";
  private JsonNullable<String> ldapDnNot = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_LDAP_DN_NOT_CONTAINS = "ldap_dn_not_contains";
  private JsonNullable<String> ldapDnNotContains = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_LDAP_DN_NOT_ENDS_WITH = "ldap_dn_not_ends_with";
  private JsonNullable<String> ldapDnNotEndsWith = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_LDAP_DN_NOT_IN = "ldap_dn_not_in";
  private JsonNullable<List<String>> ldapDnNotIn = JsonNullable.<List<String>>undefined();

  public static final String JSON_PROPERTY_LDAP_DN_NOT_STARTS_WITH = "ldap_dn_not_starts_with";
  private JsonNullable<String> ldapDnNotStartsWith = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_LDAP_DN_STARTS_WITH = "ldap_dn_starts_with";
  private JsonNullable<String> ldapDnStartsWith = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_MOBILE_PHONE = "mobile_phone";
  private JsonNullable<String> mobilePhone = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_MOBILE_PHONE_CONTAINS = "mobile_phone_contains";
  private JsonNullable<String> mobilePhoneContains = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_MOBILE_PHONE_ENDS_WITH = "mobile_phone_ends_with";
  private JsonNullable<String> mobilePhoneEndsWith = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_MOBILE_PHONE_GT = "mobile_phone_gt";
  private JsonNullable<String> mobilePhoneGt = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_MOBILE_PHONE_GTE = "mobile_phone_gte";
  private JsonNullable<String> mobilePhoneGte = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_MOBILE_PHONE_IN = "mobile_phone_in";
  private JsonNullable<List<String>> mobilePhoneIn = JsonNullable.<List<String>>undefined();

  public static final String JSON_PROPERTY_MOBILE_PHONE_LT = "mobile_phone_lt";
  private JsonNullable<String> mobilePhoneLt = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_MOBILE_PHONE_LTE = "mobile_phone_lte";
  private JsonNullable<String> mobilePhoneLte = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_MOBILE_PHONE_NOT = "mobile_phone_not";
  private JsonNullable<String> mobilePhoneNot = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_MOBILE_PHONE_NOT_CONTAINS = "mobile_phone_not_contains";
  private JsonNullable<String> mobilePhoneNotContains = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_MOBILE_PHONE_NOT_ENDS_WITH = "mobile_phone_not_ends_with";
  private JsonNullable<String> mobilePhoneNotEndsWith = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_MOBILE_PHONE_NOT_IN = "mobile_phone_not_in";
  private JsonNullable<List<String>> mobilePhoneNotIn = JsonNullable.<List<String>>undefined();

  public static final String JSON_PROPERTY_MOBILE_PHONE_NOT_STARTS_WITH = "mobile_phone_not_starts_with";
  private JsonNullable<String> mobilePhoneNotStartsWith = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_MOBILE_PHONE_STARTS_WITH = "mobile_phone_starts_with";
  private JsonNullable<String> mobilePhoneStartsWith = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_NAME = "name";
  private JsonNullable<String> name = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_NAME_CONTAINS = "name_contains";
  private JsonNullable<String> nameContains = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_NAME_ENDS_WITH = "name_ends_with";
  private JsonNullable<String> nameEndsWith = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_NAME_GT = "name_gt";
  private JsonNullable<String> nameGt = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_NAME_GTE = "name_gte";
  private JsonNullable<String> nameGte = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_NAME_IN = "name_in";
  private JsonNullable<List<String>> nameIn = JsonNullable.<List<String>>undefined();

  public static final String JSON_PROPERTY_NAME_LT = "name_lt";
  private JsonNullable<String> nameLt = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_NAME_LTE = "name_lte";
  private JsonNullable<String> nameLte = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_NAME_NOT = "name_not";
  private JsonNullable<String> nameNot = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_NAME_NOT_CONTAINS = "name_not_contains";
  private JsonNullable<String> nameNotContains = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_NAME_NOT_ENDS_WITH = "name_not_ends_with";
  private JsonNullable<String> nameNotEndsWith = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_NAME_NOT_IN = "name_not_in";
  private JsonNullable<List<String>> nameNotIn = JsonNullable.<List<String>>undefined();

  public static final String JSON_PROPERTY_NAME_NOT_STARTS_WITH = "name_not_starts_with";
  private JsonNullable<String> nameNotStartsWith = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_NAME_STARTS_WITH = "name_starts_with";
  private JsonNullable<String> nameStartsWith = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_N_O_T = "NOT";
  private JsonNullable<List<UserWhereInput>> NOT = JsonNullable.<List<UserWhereInput>>undefined();

  public static final String JSON_PROPERTY_O_R = "OR";
  private JsonNullable<List<UserWhereInput>> OR = JsonNullable.<List<UserWhereInput>>undefined();

  public static final String JSON_PROPERTY_PASSWORD = "password";
  private JsonNullable<String> password = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_PASSWORD_CONTAINS = "password_contains";
  private JsonNullable<String> passwordContains = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_PASSWORD_ENDS_WITH = "password_ends_with";
  private JsonNullable<String> passwordEndsWith = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_PASSWORD_GT = "password_gt";
  private JsonNullable<String> passwordGt = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_PASSWORD_GTE = "password_gte";
  private JsonNullable<String> passwordGte = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_PASSWORD_IN = "password_in";
  private JsonNullable<List<String>> passwordIn = JsonNullable.<List<String>>undefined();

  public static final String JSON_PROPERTY_PASSWORD_LT = "password_lt";
  private JsonNullable<String> passwordLt = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_PASSWORD_LTE = "password_lte";
  private JsonNullable<String> passwordLte = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_PASSWORD_NOT = "password_not";
  private JsonNullable<String> passwordNot = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_PASSWORD_NOT_CONTAINS = "password_not_contains";
  private JsonNullable<String> passwordNotContains = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_PASSWORD_NOT_ENDS_WITH = "password_not_ends_with";
  private JsonNullable<String> passwordNotEndsWith = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_PASSWORD_NOT_IN = "password_not_in";
  private JsonNullable<List<String>> passwordNotIn = JsonNullable.<List<String>>undefined();

  public static final String JSON_PROPERTY_PASSWORD_NOT_STARTS_WITH = "password_not_starts_with";
  private JsonNullable<String> passwordNotStartsWith = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_PASSWORD_STARTS_WITH = "password_starts_with";
  private JsonNullable<String> passwordStartsWith = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_ROLE = "role";
  private JsonNullable<UserRole> role = JsonNullable.<UserRole>undefined();

  public static final String JSON_PROPERTY_ROLE_IN = "role_in";
  private JsonNullable<List<UserRole>> roleIn = JsonNullable.<List<UserRole>>undefined();

  public static final String JSON_PROPERTY_ROLE_NOT = "role_not";
  private JsonNullable<UserRole> roleNot = JsonNullable.<UserRole>undefined();

  public static final String JSON_PROPERTY_ROLE_NOT_IN = "role_not_in";
  private JsonNullable<List<UserRole>> roleNotIn = JsonNullable.<List<UserRole>>undefined();

  public static final String JSON_PROPERTY_ROLES_EVERY = "roles_every";
  private JsonNullable<UserRoleNextWhereInput> rolesEvery = JsonNullable.<UserRoleNextWhereInput>undefined();

  public static final String JSON_PROPERTY_ROLES_NONE = "roles_none";
  private JsonNullable<UserRoleNextWhereInput> rolesNone = JsonNullable.<UserRoleNextWhereInput>undefined();

  public static final String JSON_PROPERTY_ROLES_SOME = "roles_some";
  private JsonNullable<UserRoleNextWhereInput> rolesSome = JsonNullable.<UserRoleNextWhereInput>undefined();

  public static final String JSON_PROPERTY_SOURCE = "source";
  private JsonNullable<UserSource> source = JsonNullable.<UserSource>undefined();

  public static final String JSON_PROPERTY_SOURCE_IN = "source_in";
  private JsonNullable<List<UserSource>> sourceIn = JsonNullable.<List<UserSource>>undefined();

  public static final String JSON_PROPERTY_SOURCE_NOT = "source_not";
  private JsonNullable<UserSource> sourceNot = JsonNullable.<UserSource>undefined();

  public static final String JSON_PROPERTY_SOURCE_NOT_IN = "source_not_in";
  private JsonNullable<List<UserSource>> sourceNotIn = JsonNullable.<List<UserSource>>undefined();

  public static final String JSON_PROPERTY_USERNAME = "username";
  private JsonNullable<String> username = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_USERNAME_CONTAINS = "username_contains";
  private JsonNullable<String> usernameContains = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_USERNAME_ENDS_WITH = "username_ends_with";
  private JsonNullable<String> usernameEndsWith = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_USERNAME_GT = "username_gt";
  private JsonNullable<String> usernameGt = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_USERNAME_GTE = "username_gte";
  private JsonNullable<String> usernameGte = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_USERNAME_IN = "username_in";
  private JsonNullable<List<String>> usernameIn = JsonNullable.<List<String>>undefined();

  public static final String JSON_PROPERTY_USERNAME_LT = "username_lt";
  private JsonNullable<String> usernameLt = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_USERNAME_LTE = "username_lte";
  private JsonNullable<String> usernameLte = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_USERNAME_NOT = "username_not";
  private JsonNullable<String> usernameNot = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_USERNAME_NOT_CONTAINS = "username_not_contains";
  private JsonNullable<String> usernameNotContains = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_USERNAME_NOT_ENDS_WITH = "username_not_ends_with";
  private JsonNullable<String> usernameNotEndsWith = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_USERNAME_NOT_IN = "username_not_in";
  private JsonNullable<List<String>> usernameNotIn = JsonNullable.<List<String>>undefined();

  public static final String JSON_PROPERTY_USERNAME_NOT_STARTS_WITH = "username_not_starts_with";
  private JsonNullable<String> usernameNotStartsWith = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_USERNAME_STARTS_WITH = "username_starts_with";
  private JsonNullable<String> usernameStartsWith = JsonNullable.<String>undefined();


  public UserWhereInput AND(List<UserWhereInput> AND) {
    this.AND = JsonNullable.<List<UserWhereInput>>of(AND);
    return this;
  }

  public UserWhereInput addANDItem(UserWhereInput ANDItem) {
    if (this.AND == null || !this.AND.isPresent()) {
      this.AND = JsonNullable.<List<UserWhereInput>>of(new ArrayList<>());
    }
    try {
      this.AND.get().add(ANDItem);
    } catch (java.util.NoSuchElementException e) {
      // this can never happen, as we make sure above that the value is present
    }
    return this;
  }

   /**
   * Get AND
   * @return AND
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public List<UserWhereInput> getAND() {
        return AND.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_A_N_D)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<List<UserWhereInput>> getAND_JsonNullable() {
    return AND;
  }
  
  @JsonProperty(JSON_PROPERTY_A_N_D)
  public void setAND_JsonNullable(JsonNullable<List<UserWhereInput>> AND) {
    this.AND = AND;
  }

  public void setAND(List<UserWhereInput> AND) {
    this.AND = JsonNullable.<List<UserWhereInput>>of(AND);
  }


  public UserWhereInput emailAddress(String emailAddress) {
    this.emailAddress = JsonNullable.<String>of(emailAddress);
    return this;
  }

   /**
   * Get emailAddress
   * @return emailAddress
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getEmailAddress() {
        return emailAddress.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_EMAIL_ADDRESS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getEmailAddress_JsonNullable() {
    return emailAddress;
  }
  
  @JsonProperty(JSON_PROPERTY_EMAIL_ADDRESS)
  public void setEmailAddress_JsonNullable(JsonNullable<String> emailAddress) {
    this.emailAddress = emailAddress;
  }

  public void setEmailAddress(String emailAddress) {
    this.emailAddress = JsonNullable.<String>of(emailAddress);
  }


  public UserWhereInput emailAddressContains(String emailAddressContains) {
    this.emailAddressContains = JsonNullable.<String>of(emailAddressContains);
    return this;
  }

   /**
   * Get emailAddressContains
   * @return emailAddressContains
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getEmailAddressContains() {
        return emailAddressContains.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_EMAIL_ADDRESS_CONTAINS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getEmailAddressContains_JsonNullable() {
    return emailAddressContains;
  }
  
  @JsonProperty(JSON_PROPERTY_EMAIL_ADDRESS_CONTAINS)
  public void setEmailAddressContains_JsonNullable(JsonNullable<String> emailAddressContains) {
    this.emailAddressContains = emailAddressContains;
  }

  public void setEmailAddressContains(String emailAddressContains) {
    this.emailAddressContains = JsonNullable.<String>of(emailAddressContains);
  }


  public UserWhereInput emailAddressEndsWith(String emailAddressEndsWith) {
    this.emailAddressEndsWith = JsonNullable.<String>of(emailAddressEndsWith);
    return this;
  }

   /**
   * Get emailAddressEndsWith
   * @return emailAddressEndsWith
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getEmailAddressEndsWith() {
        return emailAddressEndsWith.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_EMAIL_ADDRESS_ENDS_WITH)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getEmailAddressEndsWith_JsonNullable() {
    return emailAddressEndsWith;
  }
  
  @JsonProperty(JSON_PROPERTY_EMAIL_ADDRESS_ENDS_WITH)
  public void setEmailAddressEndsWith_JsonNullable(JsonNullable<String> emailAddressEndsWith) {
    this.emailAddressEndsWith = emailAddressEndsWith;
  }

  public void setEmailAddressEndsWith(String emailAddressEndsWith) {
    this.emailAddressEndsWith = JsonNullable.<String>of(emailAddressEndsWith);
  }


  public UserWhereInput emailAddressGt(String emailAddressGt) {
    this.emailAddressGt = JsonNullable.<String>of(emailAddressGt);
    return this;
  }

   /**
   * Get emailAddressGt
   * @return emailAddressGt
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getEmailAddressGt() {
        return emailAddressGt.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_EMAIL_ADDRESS_GT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getEmailAddressGt_JsonNullable() {
    return emailAddressGt;
  }
  
  @JsonProperty(JSON_PROPERTY_EMAIL_ADDRESS_GT)
  public void setEmailAddressGt_JsonNullable(JsonNullable<String> emailAddressGt) {
    this.emailAddressGt = emailAddressGt;
  }

  public void setEmailAddressGt(String emailAddressGt) {
    this.emailAddressGt = JsonNullable.<String>of(emailAddressGt);
  }


  public UserWhereInput emailAddressGte(String emailAddressGte) {
    this.emailAddressGte = JsonNullable.<String>of(emailAddressGte);
    return this;
  }

   /**
   * Get emailAddressGte
   * @return emailAddressGte
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getEmailAddressGte() {
        return emailAddressGte.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_EMAIL_ADDRESS_GTE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getEmailAddressGte_JsonNullable() {
    return emailAddressGte;
  }
  
  @JsonProperty(JSON_PROPERTY_EMAIL_ADDRESS_GTE)
  public void setEmailAddressGte_JsonNullable(JsonNullable<String> emailAddressGte) {
    this.emailAddressGte = emailAddressGte;
  }

  public void setEmailAddressGte(String emailAddressGte) {
    this.emailAddressGte = JsonNullable.<String>of(emailAddressGte);
  }


  public UserWhereInput emailAddressIn(List<String> emailAddressIn) {
    this.emailAddressIn = JsonNullable.<List<String>>of(emailAddressIn);
    return this;
  }

  public UserWhereInput addEmailAddressInItem(String emailAddressInItem) {
    if (this.emailAddressIn == null || !this.emailAddressIn.isPresent()) {
      this.emailAddressIn = JsonNullable.<List<String>>of(new ArrayList<>());
    }
    try {
      this.emailAddressIn.get().add(emailAddressInItem);
    } catch (java.util.NoSuchElementException e) {
      // this can never happen, as we make sure above that the value is present
    }
    return this;
  }

   /**
   * Get emailAddressIn
   * @return emailAddressIn
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public List<String> getEmailAddressIn() {
        return emailAddressIn.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_EMAIL_ADDRESS_IN)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<List<String>> getEmailAddressIn_JsonNullable() {
    return emailAddressIn;
  }
  
  @JsonProperty(JSON_PROPERTY_EMAIL_ADDRESS_IN)
  public void setEmailAddressIn_JsonNullable(JsonNullable<List<String>> emailAddressIn) {
    this.emailAddressIn = emailAddressIn;
  }

  public void setEmailAddressIn(List<String> emailAddressIn) {
    this.emailAddressIn = JsonNullable.<List<String>>of(emailAddressIn);
  }


  public UserWhereInput emailAddressLt(String emailAddressLt) {
    this.emailAddressLt = JsonNullable.<String>of(emailAddressLt);
    return this;
  }

   /**
   * Get emailAddressLt
   * @return emailAddressLt
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getEmailAddressLt() {
        return emailAddressLt.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_EMAIL_ADDRESS_LT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getEmailAddressLt_JsonNullable() {
    return emailAddressLt;
  }
  
  @JsonProperty(JSON_PROPERTY_EMAIL_ADDRESS_LT)
  public void setEmailAddressLt_JsonNullable(JsonNullable<String> emailAddressLt) {
    this.emailAddressLt = emailAddressLt;
  }

  public void setEmailAddressLt(String emailAddressLt) {
    this.emailAddressLt = JsonNullable.<String>of(emailAddressLt);
  }


  public UserWhereInput emailAddressLte(String emailAddressLte) {
    this.emailAddressLte = JsonNullable.<String>of(emailAddressLte);
    return this;
  }

   /**
   * Get emailAddressLte
   * @return emailAddressLte
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getEmailAddressLte() {
        return emailAddressLte.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_EMAIL_ADDRESS_LTE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getEmailAddressLte_JsonNullable() {
    return emailAddressLte;
  }
  
  @JsonProperty(JSON_PROPERTY_EMAIL_ADDRESS_LTE)
  public void setEmailAddressLte_JsonNullable(JsonNullable<String> emailAddressLte) {
    this.emailAddressLte = emailAddressLte;
  }

  public void setEmailAddressLte(String emailAddressLte) {
    this.emailAddressLte = JsonNullable.<String>of(emailAddressLte);
  }


  public UserWhereInput emailAddressNot(String emailAddressNot) {
    this.emailAddressNot = JsonNullable.<String>of(emailAddressNot);
    return this;
  }

   /**
   * Get emailAddressNot
   * @return emailAddressNot
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getEmailAddressNot() {
        return emailAddressNot.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_EMAIL_ADDRESS_NOT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getEmailAddressNot_JsonNullable() {
    return emailAddressNot;
  }
  
  @JsonProperty(JSON_PROPERTY_EMAIL_ADDRESS_NOT)
  public void setEmailAddressNot_JsonNullable(JsonNullable<String> emailAddressNot) {
    this.emailAddressNot = emailAddressNot;
  }

  public void setEmailAddressNot(String emailAddressNot) {
    this.emailAddressNot = JsonNullable.<String>of(emailAddressNot);
  }


  public UserWhereInput emailAddressNotContains(String emailAddressNotContains) {
    this.emailAddressNotContains = JsonNullable.<String>of(emailAddressNotContains);
    return this;
  }

   /**
   * Get emailAddressNotContains
   * @return emailAddressNotContains
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getEmailAddressNotContains() {
        return emailAddressNotContains.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_EMAIL_ADDRESS_NOT_CONTAINS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getEmailAddressNotContains_JsonNullable() {
    return emailAddressNotContains;
  }
  
  @JsonProperty(JSON_PROPERTY_EMAIL_ADDRESS_NOT_CONTAINS)
  public void setEmailAddressNotContains_JsonNullable(JsonNullable<String> emailAddressNotContains) {
    this.emailAddressNotContains = emailAddressNotContains;
  }

  public void setEmailAddressNotContains(String emailAddressNotContains) {
    this.emailAddressNotContains = JsonNullable.<String>of(emailAddressNotContains);
  }


  public UserWhereInput emailAddressNotEndsWith(String emailAddressNotEndsWith) {
    this.emailAddressNotEndsWith = JsonNullable.<String>of(emailAddressNotEndsWith);
    return this;
  }

   /**
   * Get emailAddressNotEndsWith
   * @return emailAddressNotEndsWith
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getEmailAddressNotEndsWith() {
        return emailAddressNotEndsWith.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_EMAIL_ADDRESS_NOT_ENDS_WITH)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getEmailAddressNotEndsWith_JsonNullable() {
    return emailAddressNotEndsWith;
  }
  
  @JsonProperty(JSON_PROPERTY_EMAIL_ADDRESS_NOT_ENDS_WITH)
  public void setEmailAddressNotEndsWith_JsonNullable(JsonNullable<String> emailAddressNotEndsWith) {
    this.emailAddressNotEndsWith = emailAddressNotEndsWith;
  }

  public void setEmailAddressNotEndsWith(String emailAddressNotEndsWith) {
    this.emailAddressNotEndsWith = JsonNullable.<String>of(emailAddressNotEndsWith);
  }


  public UserWhereInput emailAddressNotIn(List<String> emailAddressNotIn) {
    this.emailAddressNotIn = JsonNullable.<List<String>>of(emailAddressNotIn);
    return this;
  }

  public UserWhereInput addEmailAddressNotInItem(String emailAddressNotInItem) {
    if (this.emailAddressNotIn == null || !this.emailAddressNotIn.isPresent()) {
      this.emailAddressNotIn = JsonNullable.<List<String>>of(new ArrayList<>());
    }
    try {
      this.emailAddressNotIn.get().add(emailAddressNotInItem);
    } catch (java.util.NoSuchElementException e) {
      // this can never happen, as we make sure above that the value is present
    }
    return this;
  }

   /**
   * Get emailAddressNotIn
   * @return emailAddressNotIn
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public List<String> getEmailAddressNotIn() {
        return emailAddressNotIn.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_EMAIL_ADDRESS_NOT_IN)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<List<String>> getEmailAddressNotIn_JsonNullable() {
    return emailAddressNotIn;
  }
  
  @JsonProperty(JSON_PROPERTY_EMAIL_ADDRESS_NOT_IN)
  public void setEmailAddressNotIn_JsonNullable(JsonNullable<List<String>> emailAddressNotIn) {
    this.emailAddressNotIn = emailAddressNotIn;
  }

  public void setEmailAddressNotIn(List<String> emailAddressNotIn) {
    this.emailAddressNotIn = JsonNullable.<List<String>>of(emailAddressNotIn);
  }


  public UserWhereInput emailAddressNotStartsWith(String emailAddressNotStartsWith) {
    this.emailAddressNotStartsWith = JsonNullable.<String>of(emailAddressNotStartsWith);
    return this;
  }

   /**
   * Get emailAddressNotStartsWith
   * @return emailAddressNotStartsWith
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getEmailAddressNotStartsWith() {
        return emailAddressNotStartsWith.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_EMAIL_ADDRESS_NOT_STARTS_WITH)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getEmailAddressNotStartsWith_JsonNullable() {
    return emailAddressNotStartsWith;
  }
  
  @JsonProperty(JSON_PROPERTY_EMAIL_ADDRESS_NOT_STARTS_WITH)
  public void setEmailAddressNotStartsWith_JsonNullable(JsonNullable<String> emailAddressNotStartsWith) {
    this.emailAddressNotStartsWith = emailAddressNotStartsWith;
  }

  public void setEmailAddressNotStartsWith(String emailAddressNotStartsWith) {
    this.emailAddressNotStartsWith = JsonNullable.<String>of(emailAddressNotStartsWith);
  }


  public UserWhereInput emailAddressStartsWith(String emailAddressStartsWith) {
    this.emailAddressStartsWith = JsonNullable.<String>of(emailAddressStartsWith);
    return this;
  }

   /**
   * Get emailAddressStartsWith
   * @return emailAddressStartsWith
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getEmailAddressStartsWith() {
        return emailAddressStartsWith.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_EMAIL_ADDRESS_STARTS_WITH)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getEmailAddressStartsWith_JsonNullable() {
    return emailAddressStartsWith;
  }
  
  @JsonProperty(JSON_PROPERTY_EMAIL_ADDRESS_STARTS_WITH)
  public void setEmailAddressStartsWith_JsonNullable(JsonNullable<String> emailAddressStartsWith) {
    this.emailAddressStartsWith = emailAddressStartsWith;
  }

  public void setEmailAddressStartsWith(String emailAddressStartsWith) {
    this.emailAddressStartsWith = JsonNullable.<String>of(emailAddressStartsWith);
  }


  public UserWhereInput id(String id) {
    this.id = JsonNullable.<String>of(id);
    return this;
  }

   /**
   * Get id
   * @return id
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getId() {
        return id.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getId_JsonNullable() {
    return id;
  }
  
  @JsonProperty(JSON_PROPERTY_ID)
  public void setId_JsonNullable(JsonNullable<String> id) {
    this.id = id;
  }

  public void setId(String id) {
    this.id = JsonNullable.<String>of(id);
  }


  public UserWhereInput idContains(String idContains) {
    this.idContains = JsonNullable.<String>of(idContains);
    return this;
  }

   /**
   * Get idContains
   * @return idContains
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getIdContains() {
        return idContains.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_ID_CONTAINS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getIdContains_JsonNullable() {
    return idContains;
  }
  
  @JsonProperty(JSON_PROPERTY_ID_CONTAINS)
  public void setIdContains_JsonNullable(JsonNullable<String> idContains) {
    this.idContains = idContains;
  }

  public void setIdContains(String idContains) {
    this.idContains = JsonNullable.<String>of(idContains);
  }


  public UserWhereInput idEndsWith(String idEndsWith) {
    this.idEndsWith = JsonNullable.<String>of(idEndsWith);
    return this;
  }

   /**
   * Get idEndsWith
   * @return idEndsWith
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getIdEndsWith() {
        return idEndsWith.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_ID_ENDS_WITH)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getIdEndsWith_JsonNullable() {
    return idEndsWith;
  }
  
  @JsonProperty(JSON_PROPERTY_ID_ENDS_WITH)
  public void setIdEndsWith_JsonNullable(JsonNullable<String> idEndsWith) {
    this.idEndsWith = idEndsWith;
  }

  public void setIdEndsWith(String idEndsWith) {
    this.idEndsWith = JsonNullable.<String>of(idEndsWith);
  }


  public UserWhereInput idGt(String idGt) {
    this.idGt = JsonNullable.<String>of(idGt);
    return this;
  }

   /**
   * Get idGt
   * @return idGt
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getIdGt() {
        return idGt.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_ID_GT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getIdGt_JsonNullable() {
    return idGt;
  }
  
  @JsonProperty(JSON_PROPERTY_ID_GT)
  public void setIdGt_JsonNullable(JsonNullable<String> idGt) {
    this.idGt = idGt;
  }

  public void setIdGt(String idGt) {
    this.idGt = JsonNullable.<String>of(idGt);
  }


  public UserWhereInput idGte(String idGte) {
    this.idGte = JsonNullable.<String>of(idGte);
    return this;
  }

   /**
   * Get idGte
   * @return idGte
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getIdGte() {
        return idGte.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_ID_GTE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getIdGte_JsonNullable() {
    return idGte;
  }
  
  @JsonProperty(JSON_PROPERTY_ID_GTE)
  public void setIdGte_JsonNullable(JsonNullable<String> idGte) {
    this.idGte = idGte;
  }

  public void setIdGte(String idGte) {
    this.idGte = JsonNullable.<String>of(idGte);
  }


  public UserWhereInput idIn(List<String> idIn) {
    this.idIn = JsonNullable.<List<String>>of(idIn);
    return this;
  }

  public UserWhereInput addIdInItem(String idInItem) {
    if (this.idIn == null || !this.idIn.isPresent()) {
      this.idIn = JsonNullable.<List<String>>of(new ArrayList<>());
    }
    try {
      this.idIn.get().add(idInItem);
    } catch (java.util.NoSuchElementException e) {
      // this can never happen, as we make sure above that the value is present
    }
    return this;
  }

   /**
   * Get idIn
   * @return idIn
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public List<String> getIdIn() {
        return idIn.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_ID_IN)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<List<String>> getIdIn_JsonNullable() {
    return idIn;
  }
  
  @JsonProperty(JSON_PROPERTY_ID_IN)
  public void setIdIn_JsonNullable(JsonNullable<List<String>> idIn) {
    this.idIn = idIn;
  }

  public void setIdIn(List<String> idIn) {
    this.idIn = JsonNullable.<List<String>>of(idIn);
  }


  public UserWhereInput idLt(String idLt) {
    this.idLt = JsonNullable.<String>of(idLt);
    return this;
  }

   /**
   * Get idLt
   * @return idLt
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getIdLt() {
        return idLt.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_ID_LT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getIdLt_JsonNullable() {
    return idLt;
  }
  
  @JsonProperty(JSON_PROPERTY_ID_LT)
  public void setIdLt_JsonNullable(JsonNullable<String> idLt) {
    this.idLt = idLt;
  }

  public void setIdLt(String idLt) {
    this.idLt = JsonNullable.<String>of(idLt);
  }


  public UserWhereInput idLte(String idLte) {
    this.idLte = JsonNullable.<String>of(idLte);
    return this;
  }

   /**
   * Get idLte
   * @return idLte
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getIdLte() {
        return idLte.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_ID_LTE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getIdLte_JsonNullable() {
    return idLte;
  }
  
  @JsonProperty(JSON_PROPERTY_ID_LTE)
  public void setIdLte_JsonNullable(JsonNullable<String> idLte) {
    this.idLte = idLte;
  }

  public void setIdLte(String idLte) {
    this.idLte = JsonNullable.<String>of(idLte);
  }


  public UserWhereInput idNot(String idNot) {
    this.idNot = JsonNullable.<String>of(idNot);
    return this;
  }

   /**
   * Get idNot
   * @return idNot
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getIdNot() {
        return idNot.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_ID_NOT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getIdNot_JsonNullable() {
    return idNot;
  }
  
  @JsonProperty(JSON_PROPERTY_ID_NOT)
  public void setIdNot_JsonNullable(JsonNullable<String> idNot) {
    this.idNot = idNot;
  }

  public void setIdNot(String idNot) {
    this.idNot = JsonNullable.<String>of(idNot);
  }


  public UserWhereInput idNotContains(String idNotContains) {
    this.idNotContains = JsonNullable.<String>of(idNotContains);
    return this;
  }

   /**
   * Get idNotContains
   * @return idNotContains
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getIdNotContains() {
        return idNotContains.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_ID_NOT_CONTAINS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getIdNotContains_JsonNullable() {
    return idNotContains;
  }
  
  @JsonProperty(JSON_PROPERTY_ID_NOT_CONTAINS)
  public void setIdNotContains_JsonNullable(JsonNullable<String> idNotContains) {
    this.idNotContains = idNotContains;
  }

  public void setIdNotContains(String idNotContains) {
    this.idNotContains = JsonNullable.<String>of(idNotContains);
  }


  public UserWhereInput idNotEndsWith(String idNotEndsWith) {
    this.idNotEndsWith = JsonNullable.<String>of(idNotEndsWith);
    return this;
  }

   /**
   * Get idNotEndsWith
   * @return idNotEndsWith
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getIdNotEndsWith() {
        return idNotEndsWith.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_ID_NOT_ENDS_WITH)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getIdNotEndsWith_JsonNullable() {
    return idNotEndsWith;
  }
  
  @JsonProperty(JSON_PROPERTY_ID_NOT_ENDS_WITH)
  public void setIdNotEndsWith_JsonNullable(JsonNullable<String> idNotEndsWith) {
    this.idNotEndsWith = idNotEndsWith;
  }

  public void setIdNotEndsWith(String idNotEndsWith) {
    this.idNotEndsWith = JsonNullable.<String>of(idNotEndsWith);
  }


  public UserWhereInput idNotIn(List<String> idNotIn) {
    this.idNotIn = JsonNullable.<List<String>>of(idNotIn);
    return this;
  }

  public UserWhereInput addIdNotInItem(String idNotInItem) {
    if (this.idNotIn == null || !this.idNotIn.isPresent()) {
      this.idNotIn = JsonNullable.<List<String>>of(new ArrayList<>());
    }
    try {
      this.idNotIn.get().add(idNotInItem);
    } catch (java.util.NoSuchElementException e) {
      // this can never happen, as we make sure above that the value is present
    }
    return this;
  }

   /**
   * Get idNotIn
   * @return idNotIn
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public List<String> getIdNotIn() {
        return idNotIn.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_ID_NOT_IN)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<List<String>> getIdNotIn_JsonNullable() {
    return idNotIn;
  }
  
  @JsonProperty(JSON_PROPERTY_ID_NOT_IN)
  public void setIdNotIn_JsonNullable(JsonNullable<List<String>> idNotIn) {
    this.idNotIn = idNotIn;
  }

  public void setIdNotIn(List<String> idNotIn) {
    this.idNotIn = JsonNullable.<List<String>>of(idNotIn);
  }


  public UserWhereInput idNotStartsWith(String idNotStartsWith) {
    this.idNotStartsWith = JsonNullable.<String>of(idNotStartsWith);
    return this;
  }

   /**
   * Get idNotStartsWith
   * @return idNotStartsWith
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getIdNotStartsWith() {
        return idNotStartsWith.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_ID_NOT_STARTS_WITH)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getIdNotStartsWith_JsonNullable() {
    return idNotStartsWith;
  }
  
  @JsonProperty(JSON_PROPERTY_ID_NOT_STARTS_WITH)
  public void setIdNotStartsWith_JsonNullable(JsonNullable<String> idNotStartsWith) {
    this.idNotStartsWith = idNotStartsWith;
  }

  public void setIdNotStartsWith(String idNotStartsWith) {
    this.idNotStartsWith = JsonNullable.<String>of(idNotStartsWith);
  }


  public UserWhereInput idStartsWith(String idStartsWith) {
    this.idStartsWith = JsonNullable.<String>of(idStartsWith);
    return this;
  }

   /**
   * Get idStartsWith
   * @return idStartsWith
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getIdStartsWith() {
        return idStartsWith.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_ID_STARTS_WITH)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getIdStartsWith_JsonNullable() {
    return idStartsWith;
  }
  
  @JsonProperty(JSON_PROPERTY_ID_STARTS_WITH)
  public void setIdStartsWith_JsonNullable(JsonNullable<String> idStartsWith) {
    this.idStartsWith = idStartsWith;
  }

  public void setIdStartsWith(String idStartsWith) {
    this.idStartsWith = JsonNullable.<String>of(idStartsWith);
  }


  public UserWhereInput internal(Boolean internal) {
    this.internal = JsonNullable.<Boolean>of(internal);
    return this;
  }

   /**
   * Get internal
   * @return internal
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public Boolean getInternal() {
        return internal.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_INTERNAL)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<Boolean> getInternal_JsonNullable() {
    return internal;
  }
  
  @JsonProperty(JSON_PROPERTY_INTERNAL)
  public void setInternal_JsonNullable(JsonNullable<Boolean> internal) {
    this.internal = internal;
  }

  public void setInternal(Boolean internal) {
    this.internal = JsonNullable.<Boolean>of(internal);
  }


  public UserWhereInput internalNot(Boolean internalNot) {
    this.internalNot = JsonNullable.<Boolean>of(internalNot);
    return this;
  }

   /**
   * Get internalNot
   * @return internalNot
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public Boolean getInternalNot() {
        return internalNot.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_INTERNAL_NOT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<Boolean> getInternalNot_JsonNullable() {
    return internalNot;
  }
  
  @JsonProperty(JSON_PROPERTY_INTERNAL_NOT)
  public void setInternalNot_JsonNullable(JsonNullable<Boolean> internalNot) {
    this.internalNot = internalNot;
  }

  public void setInternalNot(Boolean internalNot) {
    this.internalNot = JsonNullable.<Boolean>of(internalNot);
  }


  public UserWhereInput ldapDn(String ldapDn) {
    this.ldapDn = JsonNullable.<String>of(ldapDn);
    return this;
  }

   /**
   * Get ldapDn
   * @return ldapDn
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getLdapDn() {
        return ldapDn.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_LDAP_DN)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getLdapDn_JsonNullable() {
    return ldapDn;
  }
  
  @JsonProperty(JSON_PROPERTY_LDAP_DN)
  public void setLdapDn_JsonNullable(JsonNullable<String> ldapDn) {
    this.ldapDn = ldapDn;
  }

  public void setLdapDn(String ldapDn) {
    this.ldapDn = JsonNullable.<String>of(ldapDn);
  }


  public UserWhereInput ldapDnContains(String ldapDnContains) {
    this.ldapDnContains = JsonNullable.<String>of(ldapDnContains);
    return this;
  }

   /**
   * Get ldapDnContains
   * @return ldapDnContains
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getLdapDnContains() {
        return ldapDnContains.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_LDAP_DN_CONTAINS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getLdapDnContains_JsonNullable() {
    return ldapDnContains;
  }
  
  @JsonProperty(JSON_PROPERTY_LDAP_DN_CONTAINS)
  public void setLdapDnContains_JsonNullable(JsonNullable<String> ldapDnContains) {
    this.ldapDnContains = ldapDnContains;
  }

  public void setLdapDnContains(String ldapDnContains) {
    this.ldapDnContains = JsonNullable.<String>of(ldapDnContains);
  }


  public UserWhereInput ldapDnEndsWith(String ldapDnEndsWith) {
    this.ldapDnEndsWith = JsonNullable.<String>of(ldapDnEndsWith);
    return this;
  }

   /**
   * Get ldapDnEndsWith
   * @return ldapDnEndsWith
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getLdapDnEndsWith() {
        return ldapDnEndsWith.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_LDAP_DN_ENDS_WITH)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getLdapDnEndsWith_JsonNullable() {
    return ldapDnEndsWith;
  }
  
  @JsonProperty(JSON_PROPERTY_LDAP_DN_ENDS_WITH)
  public void setLdapDnEndsWith_JsonNullable(JsonNullable<String> ldapDnEndsWith) {
    this.ldapDnEndsWith = ldapDnEndsWith;
  }

  public void setLdapDnEndsWith(String ldapDnEndsWith) {
    this.ldapDnEndsWith = JsonNullable.<String>of(ldapDnEndsWith);
  }


  public UserWhereInput ldapDnGt(String ldapDnGt) {
    this.ldapDnGt = JsonNullable.<String>of(ldapDnGt);
    return this;
  }

   /**
   * Get ldapDnGt
   * @return ldapDnGt
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getLdapDnGt() {
        return ldapDnGt.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_LDAP_DN_GT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getLdapDnGt_JsonNullable() {
    return ldapDnGt;
  }
  
  @JsonProperty(JSON_PROPERTY_LDAP_DN_GT)
  public void setLdapDnGt_JsonNullable(JsonNullable<String> ldapDnGt) {
    this.ldapDnGt = ldapDnGt;
  }

  public void setLdapDnGt(String ldapDnGt) {
    this.ldapDnGt = JsonNullable.<String>of(ldapDnGt);
  }


  public UserWhereInput ldapDnGte(String ldapDnGte) {
    this.ldapDnGte = JsonNullable.<String>of(ldapDnGte);
    return this;
  }

   /**
   * Get ldapDnGte
   * @return ldapDnGte
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getLdapDnGte() {
        return ldapDnGte.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_LDAP_DN_GTE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getLdapDnGte_JsonNullable() {
    return ldapDnGte;
  }
  
  @JsonProperty(JSON_PROPERTY_LDAP_DN_GTE)
  public void setLdapDnGte_JsonNullable(JsonNullable<String> ldapDnGte) {
    this.ldapDnGte = ldapDnGte;
  }

  public void setLdapDnGte(String ldapDnGte) {
    this.ldapDnGte = JsonNullable.<String>of(ldapDnGte);
  }


  public UserWhereInput ldapDnIn(List<String> ldapDnIn) {
    this.ldapDnIn = JsonNullable.<List<String>>of(ldapDnIn);
    return this;
  }

  public UserWhereInput addLdapDnInItem(String ldapDnInItem) {
    if (this.ldapDnIn == null || !this.ldapDnIn.isPresent()) {
      this.ldapDnIn = JsonNullable.<List<String>>of(new ArrayList<>());
    }
    try {
      this.ldapDnIn.get().add(ldapDnInItem);
    } catch (java.util.NoSuchElementException e) {
      // this can never happen, as we make sure above that the value is present
    }
    return this;
  }

   /**
   * Get ldapDnIn
   * @return ldapDnIn
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public List<String> getLdapDnIn() {
        return ldapDnIn.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_LDAP_DN_IN)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<List<String>> getLdapDnIn_JsonNullable() {
    return ldapDnIn;
  }
  
  @JsonProperty(JSON_PROPERTY_LDAP_DN_IN)
  public void setLdapDnIn_JsonNullable(JsonNullable<List<String>> ldapDnIn) {
    this.ldapDnIn = ldapDnIn;
  }

  public void setLdapDnIn(List<String> ldapDnIn) {
    this.ldapDnIn = JsonNullable.<List<String>>of(ldapDnIn);
  }


  public UserWhereInput ldapDnLt(String ldapDnLt) {
    this.ldapDnLt = JsonNullable.<String>of(ldapDnLt);
    return this;
  }

   /**
   * Get ldapDnLt
   * @return ldapDnLt
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getLdapDnLt() {
        return ldapDnLt.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_LDAP_DN_LT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getLdapDnLt_JsonNullable() {
    return ldapDnLt;
  }
  
  @JsonProperty(JSON_PROPERTY_LDAP_DN_LT)
  public void setLdapDnLt_JsonNullable(JsonNullable<String> ldapDnLt) {
    this.ldapDnLt = ldapDnLt;
  }

  public void setLdapDnLt(String ldapDnLt) {
    this.ldapDnLt = JsonNullable.<String>of(ldapDnLt);
  }


  public UserWhereInput ldapDnLte(String ldapDnLte) {
    this.ldapDnLte = JsonNullable.<String>of(ldapDnLte);
    return this;
  }

   /**
   * Get ldapDnLte
   * @return ldapDnLte
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getLdapDnLte() {
        return ldapDnLte.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_LDAP_DN_LTE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getLdapDnLte_JsonNullable() {
    return ldapDnLte;
  }
  
  @JsonProperty(JSON_PROPERTY_LDAP_DN_LTE)
  public void setLdapDnLte_JsonNullable(JsonNullable<String> ldapDnLte) {
    this.ldapDnLte = ldapDnLte;
  }

  public void setLdapDnLte(String ldapDnLte) {
    this.ldapDnLte = JsonNullable.<String>of(ldapDnLte);
  }


  public UserWhereInput ldapDnNot(String ldapDnNot) {
    this.ldapDnNot = JsonNullable.<String>of(ldapDnNot);
    return this;
  }

   /**
   * Get ldapDnNot
   * @return ldapDnNot
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getLdapDnNot() {
        return ldapDnNot.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_LDAP_DN_NOT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getLdapDnNot_JsonNullable() {
    return ldapDnNot;
  }
  
  @JsonProperty(JSON_PROPERTY_LDAP_DN_NOT)
  public void setLdapDnNot_JsonNullable(JsonNullable<String> ldapDnNot) {
    this.ldapDnNot = ldapDnNot;
  }

  public void setLdapDnNot(String ldapDnNot) {
    this.ldapDnNot = JsonNullable.<String>of(ldapDnNot);
  }


  public UserWhereInput ldapDnNotContains(String ldapDnNotContains) {
    this.ldapDnNotContains = JsonNullable.<String>of(ldapDnNotContains);
    return this;
  }

   /**
   * Get ldapDnNotContains
   * @return ldapDnNotContains
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getLdapDnNotContains() {
        return ldapDnNotContains.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_LDAP_DN_NOT_CONTAINS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getLdapDnNotContains_JsonNullable() {
    return ldapDnNotContains;
  }
  
  @JsonProperty(JSON_PROPERTY_LDAP_DN_NOT_CONTAINS)
  public void setLdapDnNotContains_JsonNullable(JsonNullable<String> ldapDnNotContains) {
    this.ldapDnNotContains = ldapDnNotContains;
  }

  public void setLdapDnNotContains(String ldapDnNotContains) {
    this.ldapDnNotContains = JsonNullable.<String>of(ldapDnNotContains);
  }


  public UserWhereInput ldapDnNotEndsWith(String ldapDnNotEndsWith) {
    this.ldapDnNotEndsWith = JsonNullable.<String>of(ldapDnNotEndsWith);
    return this;
  }

   /**
   * Get ldapDnNotEndsWith
   * @return ldapDnNotEndsWith
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getLdapDnNotEndsWith() {
        return ldapDnNotEndsWith.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_LDAP_DN_NOT_ENDS_WITH)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getLdapDnNotEndsWith_JsonNullable() {
    return ldapDnNotEndsWith;
  }
  
  @JsonProperty(JSON_PROPERTY_LDAP_DN_NOT_ENDS_WITH)
  public void setLdapDnNotEndsWith_JsonNullable(JsonNullable<String> ldapDnNotEndsWith) {
    this.ldapDnNotEndsWith = ldapDnNotEndsWith;
  }

  public void setLdapDnNotEndsWith(String ldapDnNotEndsWith) {
    this.ldapDnNotEndsWith = JsonNullable.<String>of(ldapDnNotEndsWith);
  }


  public UserWhereInput ldapDnNotIn(List<String> ldapDnNotIn) {
    this.ldapDnNotIn = JsonNullable.<List<String>>of(ldapDnNotIn);
    return this;
  }

  public UserWhereInput addLdapDnNotInItem(String ldapDnNotInItem) {
    if (this.ldapDnNotIn == null || !this.ldapDnNotIn.isPresent()) {
      this.ldapDnNotIn = JsonNullable.<List<String>>of(new ArrayList<>());
    }
    try {
      this.ldapDnNotIn.get().add(ldapDnNotInItem);
    } catch (java.util.NoSuchElementException e) {
      // this can never happen, as we make sure above that the value is present
    }
    return this;
  }

   /**
   * Get ldapDnNotIn
   * @return ldapDnNotIn
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public List<String> getLdapDnNotIn() {
        return ldapDnNotIn.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_LDAP_DN_NOT_IN)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<List<String>> getLdapDnNotIn_JsonNullable() {
    return ldapDnNotIn;
  }
  
  @JsonProperty(JSON_PROPERTY_LDAP_DN_NOT_IN)
  public void setLdapDnNotIn_JsonNullable(JsonNullable<List<String>> ldapDnNotIn) {
    this.ldapDnNotIn = ldapDnNotIn;
  }

  public void setLdapDnNotIn(List<String> ldapDnNotIn) {
    this.ldapDnNotIn = JsonNullable.<List<String>>of(ldapDnNotIn);
  }


  public UserWhereInput ldapDnNotStartsWith(String ldapDnNotStartsWith) {
    this.ldapDnNotStartsWith = JsonNullable.<String>of(ldapDnNotStartsWith);
    return this;
  }

   /**
   * Get ldapDnNotStartsWith
   * @return ldapDnNotStartsWith
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getLdapDnNotStartsWith() {
        return ldapDnNotStartsWith.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_LDAP_DN_NOT_STARTS_WITH)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getLdapDnNotStartsWith_JsonNullable() {
    return ldapDnNotStartsWith;
  }
  
  @JsonProperty(JSON_PROPERTY_LDAP_DN_NOT_STARTS_WITH)
  public void setLdapDnNotStartsWith_JsonNullable(JsonNullable<String> ldapDnNotStartsWith) {
    this.ldapDnNotStartsWith = ldapDnNotStartsWith;
  }

  public void setLdapDnNotStartsWith(String ldapDnNotStartsWith) {
    this.ldapDnNotStartsWith = JsonNullable.<String>of(ldapDnNotStartsWith);
  }


  public UserWhereInput ldapDnStartsWith(String ldapDnStartsWith) {
    this.ldapDnStartsWith = JsonNullable.<String>of(ldapDnStartsWith);
    return this;
  }

   /**
   * Get ldapDnStartsWith
   * @return ldapDnStartsWith
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getLdapDnStartsWith() {
        return ldapDnStartsWith.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_LDAP_DN_STARTS_WITH)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getLdapDnStartsWith_JsonNullable() {
    return ldapDnStartsWith;
  }
  
  @JsonProperty(JSON_PROPERTY_LDAP_DN_STARTS_WITH)
  public void setLdapDnStartsWith_JsonNullable(JsonNullable<String> ldapDnStartsWith) {
    this.ldapDnStartsWith = ldapDnStartsWith;
  }

  public void setLdapDnStartsWith(String ldapDnStartsWith) {
    this.ldapDnStartsWith = JsonNullable.<String>of(ldapDnStartsWith);
  }


  public UserWhereInput mobilePhone(String mobilePhone) {
    this.mobilePhone = JsonNullable.<String>of(mobilePhone);
    return this;
  }

   /**
   * Get mobilePhone
   * @return mobilePhone
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getMobilePhone() {
        return mobilePhone.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_MOBILE_PHONE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getMobilePhone_JsonNullable() {
    return mobilePhone;
  }
  
  @JsonProperty(JSON_PROPERTY_MOBILE_PHONE)
  public void setMobilePhone_JsonNullable(JsonNullable<String> mobilePhone) {
    this.mobilePhone = mobilePhone;
  }

  public void setMobilePhone(String mobilePhone) {
    this.mobilePhone = JsonNullable.<String>of(mobilePhone);
  }


  public UserWhereInput mobilePhoneContains(String mobilePhoneContains) {
    this.mobilePhoneContains = JsonNullable.<String>of(mobilePhoneContains);
    return this;
  }

   /**
   * Get mobilePhoneContains
   * @return mobilePhoneContains
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getMobilePhoneContains() {
        return mobilePhoneContains.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_MOBILE_PHONE_CONTAINS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getMobilePhoneContains_JsonNullable() {
    return mobilePhoneContains;
  }
  
  @JsonProperty(JSON_PROPERTY_MOBILE_PHONE_CONTAINS)
  public void setMobilePhoneContains_JsonNullable(JsonNullable<String> mobilePhoneContains) {
    this.mobilePhoneContains = mobilePhoneContains;
  }

  public void setMobilePhoneContains(String mobilePhoneContains) {
    this.mobilePhoneContains = JsonNullable.<String>of(mobilePhoneContains);
  }


  public UserWhereInput mobilePhoneEndsWith(String mobilePhoneEndsWith) {
    this.mobilePhoneEndsWith = JsonNullable.<String>of(mobilePhoneEndsWith);
    return this;
  }

   /**
   * Get mobilePhoneEndsWith
   * @return mobilePhoneEndsWith
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getMobilePhoneEndsWith() {
        return mobilePhoneEndsWith.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_MOBILE_PHONE_ENDS_WITH)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getMobilePhoneEndsWith_JsonNullable() {
    return mobilePhoneEndsWith;
  }
  
  @JsonProperty(JSON_PROPERTY_MOBILE_PHONE_ENDS_WITH)
  public void setMobilePhoneEndsWith_JsonNullable(JsonNullable<String> mobilePhoneEndsWith) {
    this.mobilePhoneEndsWith = mobilePhoneEndsWith;
  }

  public void setMobilePhoneEndsWith(String mobilePhoneEndsWith) {
    this.mobilePhoneEndsWith = JsonNullable.<String>of(mobilePhoneEndsWith);
  }


  public UserWhereInput mobilePhoneGt(String mobilePhoneGt) {
    this.mobilePhoneGt = JsonNullable.<String>of(mobilePhoneGt);
    return this;
  }

   /**
   * Get mobilePhoneGt
   * @return mobilePhoneGt
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getMobilePhoneGt() {
        return mobilePhoneGt.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_MOBILE_PHONE_GT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getMobilePhoneGt_JsonNullable() {
    return mobilePhoneGt;
  }
  
  @JsonProperty(JSON_PROPERTY_MOBILE_PHONE_GT)
  public void setMobilePhoneGt_JsonNullable(JsonNullable<String> mobilePhoneGt) {
    this.mobilePhoneGt = mobilePhoneGt;
  }

  public void setMobilePhoneGt(String mobilePhoneGt) {
    this.mobilePhoneGt = JsonNullable.<String>of(mobilePhoneGt);
  }


  public UserWhereInput mobilePhoneGte(String mobilePhoneGte) {
    this.mobilePhoneGte = JsonNullable.<String>of(mobilePhoneGte);
    return this;
  }

   /**
   * Get mobilePhoneGte
   * @return mobilePhoneGte
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getMobilePhoneGte() {
        return mobilePhoneGte.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_MOBILE_PHONE_GTE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getMobilePhoneGte_JsonNullable() {
    return mobilePhoneGte;
  }
  
  @JsonProperty(JSON_PROPERTY_MOBILE_PHONE_GTE)
  public void setMobilePhoneGte_JsonNullable(JsonNullable<String> mobilePhoneGte) {
    this.mobilePhoneGte = mobilePhoneGte;
  }

  public void setMobilePhoneGte(String mobilePhoneGte) {
    this.mobilePhoneGte = JsonNullable.<String>of(mobilePhoneGte);
  }


  public UserWhereInput mobilePhoneIn(List<String> mobilePhoneIn) {
    this.mobilePhoneIn = JsonNullable.<List<String>>of(mobilePhoneIn);
    return this;
  }

  public UserWhereInput addMobilePhoneInItem(String mobilePhoneInItem) {
    if (this.mobilePhoneIn == null || !this.mobilePhoneIn.isPresent()) {
      this.mobilePhoneIn = JsonNullable.<List<String>>of(new ArrayList<>());
    }
    try {
      this.mobilePhoneIn.get().add(mobilePhoneInItem);
    } catch (java.util.NoSuchElementException e) {
      // this can never happen, as we make sure above that the value is present
    }
    return this;
  }

   /**
   * Get mobilePhoneIn
   * @return mobilePhoneIn
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public List<String> getMobilePhoneIn() {
        return mobilePhoneIn.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_MOBILE_PHONE_IN)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<List<String>> getMobilePhoneIn_JsonNullable() {
    return mobilePhoneIn;
  }
  
  @JsonProperty(JSON_PROPERTY_MOBILE_PHONE_IN)
  public void setMobilePhoneIn_JsonNullable(JsonNullable<List<String>> mobilePhoneIn) {
    this.mobilePhoneIn = mobilePhoneIn;
  }

  public void setMobilePhoneIn(List<String> mobilePhoneIn) {
    this.mobilePhoneIn = JsonNullable.<List<String>>of(mobilePhoneIn);
  }


  public UserWhereInput mobilePhoneLt(String mobilePhoneLt) {
    this.mobilePhoneLt = JsonNullable.<String>of(mobilePhoneLt);
    return this;
  }

   /**
   * Get mobilePhoneLt
   * @return mobilePhoneLt
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getMobilePhoneLt() {
        return mobilePhoneLt.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_MOBILE_PHONE_LT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getMobilePhoneLt_JsonNullable() {
    return mobilePhoneLt;
  }
  
  @JsonProperty(JSON_PROPERTY_MOBILE_PHONE_LT)
  public void setMobilePhoneLt_JsonNullable(JsonNullable<String> mobilePhoneLt) {
    this.mobilePhoneLt = mobilePhoneLt;
  }

  public void setMobilePhoneLt(String mobilePhoneLt) {
    this.mobilePhoneLt = JsonNullable.<String>of(mobilePhoneLt);
  }


  public UserWhereInput mobilePhoneLte(String mobilePhoneLte) {
    this.mobilePhoneLte = JsonNullable.<String>of(mobilePhoneLte);
    return this;
  }

   /**
   * Get mobilePhoneLte
   * @return mobilePhoneLte
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getMobilePhoneLte() {
        return mobilePhoneLte.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_MOBILE_PHONE_LTE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getMobilePhoneLte_JsonNullable() {
    return mobilePhoneLte;
  }
  
  @JsonProperty(JSON_PROPERTY_MOBILE_PHONE_LTE)
  public void setMobilePhoneLte_JsonNullable(JsonNullable<String> mobilePhoneLte) {
    this.mobilePhoneLte = mobilePhoneLte;
  }

  public void setMobilePhoneLte(String mobilePhoneLte) {
    this.mobilePhoneLte = JsonNullable.<String>of(mobilePhoneLte);
  }


  public UserWhereInput mobilePhoneNot(String mobilePhoneNot) {
    this.mobilePhoneNot = JsonNullable.<String>of(mobilePhoneNot);
    return this;
  }

   /**
   * Get mobilePhoneNot
   * @return mobilePhoneNot
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getMobilePhoneNot() {
        return mobilePhoneNot.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_MOBILE_PHONE_NOT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getMobilePhoneNot_JsonNullable() {
    return mobilePhoneNot;
  }
  
  @JsonProperty(JSON_PROPERTY_MOBILE_PHONE_NOT)
  public void setMobilePhoneNot_JsonNullable(JsonNullable<String> mobilePhoneNot) {
    this.mobilePhoneNot = mobilePhoneNot;
  }

  public void setMobilePhoneNot(String mobilePhoneNot) {
    this.mobilePhoneNot = JsonNullable.<String>of(mobilePhoneNot);
  }


  public UserWhereInput mobilePhoneNotContains(String mobilePhoneNotContains) {
    this.mobilePhoneNotContains = JsonNullable.<String>of(mobilePhoneNotContains);
    return this;
  }

   /**
   * Get mobilePhoneNotContains
   * @return mobilePhoneNotContains
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getMobilePhoneNotContains() {
        return mobilePhoneNotContains.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_MOBILE_PHONE_NOT_CONTAINS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getMobilePhoneNotContains_JsonNullable() {
    return mobilePhoneNotContains;
  }
  
  @JsonProperty(JSON_PROPERTY_MOBILE_PHONE_NOT_CONTAINS)
  public void setMobilePhoneNotContains_JsonNullable(JsonNullable<String> mobilePhoneNotContains) {
    this.mobilePhoneNotContains = mobilePhoneNotContains;
  }

  public void setMobilePhoneNotContains(String mobilePhoneNotContains) {
    this.mobilePhoneNotContains = JsonNullable.<String>of(mobilePhoneNotContains);
  }


  public UserWhereInput mobilePhoneNotEndsWith(String mobilePhoneNotEndsWith) {
    this.mobilePhoneNotEndsWith = JsonNullable.<String>of(mobilePhoneNotEndsWith);
    return this;
  }

   /**
   * Get mobilePhoneNotEndsWith
   * @return mobilePhoneNotEndsWith
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getMobilePhoneNotEndsWith() {
        return mobilePhoneNotEndsWith.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_MOBILE_PHONE_NOT_ENDS_WITH)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getMobilePhoneNotEndsWith_JsonNullable() {
    return mobilePhoneNotEndsWith;
  }
  
  @JsonProperty(JSON_PROPERTY_MOBILE_PHONE_NOT_ENDS_WITH)
  public void setMobilePhoneNotEndsWith_JsonNullable(JsonNullable<String> mobilePhoneNotEndsWith) {
    this.mobilePhoneNotEndsWith = mobilePhoneNotEndsWith;
  }

  public void setMobilePhoneNotEndsWith(String mobilePhoneNotEndsWith) {
    this.mobilePhoneNotEndsWith = JsonNullable.<String>of(mobilePhoneNotEndsWith);
  }


  public UserWhereInput mobilePhoneNotIn(List<String> mobilePhoneNotIn) {
    this.mobilePhoneNotIn = JsonNullable.<List<String>>of(mobilePhoneNotIn);
    return this;
  }

  public UserWhereInput addMobilePhoneNotInItem(String mobilePhoneNotInItem) {
    if (this.mobilePhoneNotIn == null || !this.mobilePhoneNotIn.isPresent()) {
      this.mobilePhoneNotIn = JsonNullable.<List<String>>of(new ArrayList<>());
    }
    try {
      this.mobilePhoneNotIn.get().add(mobilePhoneNotInItem);
    } catch (java.util.NoSuchElementException e) {
      // this can never happen, as we make sure above that the value is present
    }
    return this;
  }

   /**
   * Get mobilePhoneNotIn
   * @return mobilePhoneNotIn
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public List<String> getMobilePhoneNotIn() {
        return mobilePhoneNotIn.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_MOBILE_PHONE_NOT_IN)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<List<String>> getMobilePhoneNotIn_JsonNullable() {
    return mobilePhoneNotIn;
  }
  
  @JsonProperty(JSON_PROPERTY_MOBILE_PHONE_NOT_IN)
  public void setMobilePhoneNotIn_JsonNullable(JsonNullable<List<String>> mobilePhoneNotIn) {
    this.mobilePhoneNotIn = mobilePhoneNotIn;
  }

  public void setMobilePhoneNotIn(List<String> mobilePhoneNotIn) {
    this.mobilePhoneNotIn = JsonNullable.<List<String>>of(mobilePhoneNotIn);
  }


  public UserWhereInput mobilePhoneNotStartsWith(String mobilePhoneNotStartsWith) {
    this.mobilePhoneNotStartsWith = JsonNullable.<String>of(mobilePhoneNotStartsWith);
    return this;
  }

   /**
   * Get mobilePhoneNotStartsWith
   * @return mobilePhoneNotStartsWith
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getMobilePhoneNotStartsWith() {
        return mobilePhoneNotStartsWith.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_MOBILE_PHONE_NOT_STARTS_WITH)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getMobilePhoneNotStartsWith_JsonNullable() {
    return mobilePhoneNotStartsWith;
  }
  
  @JsonProperty(JSON_PROPERTY_MOBILE_PHONE_NOT_STARTS_WITH)
  public void setMobilePhoneNotStartsWith_JsonNullable(JsonNullable<String> mobilePhoneNotStartsWith) {
    this.mobilePhoneNotStartsWith = mobilePhoneNotStartsWith;
  }

  public void setMobilePhoneNotStartsWith(String mobilePhoneNotStartsWith) {
    this.mobilePhoneNotStartsWith = JsonNullable.<String>of(mobilePhoneNotStartsWith);
  }


  public UserWhereInput mobilePhoneStartsWith(String mobilePhoneStartsWith) {
    this.mobilePhoneStartsWith = JsonNullable.<String>of(mobilePhoneStartsWith);
    return this;
  }

   /**
   * Get mobilePhoneStartsWith
   * @return mobilePhoneStartsWith
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getMobilePhoneStartsWith() {
        return mobilePhoneStartsWith.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_MOBILE_PHONE_STARTS_WITH)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getMobilePhoneStartsWith_JsonNullable() {
    return mobilePhoneStartsWith;
  }
  
  @JsonProperty(JSON_PROPERTY_MOBILE_PHONE_STARTS_WITH)
  public void setMobilePhoneStartsWith_JsonNullable(JsonNullable<String> mobilePhoneStartsWith) {
    this.mobilePhoneStartsWith = mobilePhoneStartsWith;
  }

  public void setMobilePhoneStartsWith(String mobilePhoneStartsWith) {
    this.mobilePhoneStartsWith = JsonNullable.<String>of(mobilePhoneStartsWith);
  }


  public UserWhereInput name(String name) {
    this.name = JsonNullable.<String>of(name);
    return this;
  }

   /**
   * Get name
   * @return name
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getName() {
        return name.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getName_JsonNullable() {
    return name;
  }
  
  @JsonProperty(JSON_PROPERTY_NAME)
  public void setName_JsonNullable(JsonNullable<String> name) {
    this.name = name;
  }

  public void setName(String name) {
    this.name = JsonNullable.<String>of(name);
  }


  public UserWhereInput nameContains(String nameContains) {
    this.nameContains = JsonNullable.<String>of(nameContains);
    return this;
  }

   /**
   * Get nameContains
   * @return nameContains
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getNameContains() {
        return nameContains.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_NAME_CONTAINS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getNameContains_JsonNullable() {
    return nameContains;
  }
  
  @JsonProperty(JSON_PROPERTY_NAME_CONTAINS)
  public void setNameContains_JsonNullable(JsonNullable<String> nameContains) {
    this.nameContains = nameContains;
  }

  public void setNameContains(String nameContains) {
    this.nameContains = JsonNullable.<String>of(nameContains);
  }


  public UserWhereInput nameEndsWith(String nameEndsWith) {
    this.nameEndsWith = JsonNullable.<String>of(nameEndsWith);
    return this;
  }

   /**
   * Get nameEndsWith
   * @return nameEndsWith
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getNameEndsWith() {
        return nameEndsWith.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_NAME_ENDS_WITH)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getNameEndsWith_JsonNullable() {
    return nameEndsWith;
  }
  
  @JsonProperty(JSON_PROPERTY_NAME_ENDS_WITH)
  public void setNameEndsWith_JsonNullable(JsonNullable<String> nameEndsWith) {
    this.nameEndsWith = nameEndsWith;
  }

  public void setNameEndsWith(String nameEndsWith) {
    this.nameEndsWith = JsonNullable.<String>of(nameEndsWith);
  }


  public UserWhereInput nameGt(String nameGt) {
    this.nameGt = JsonNullable.<String>of(nameGt);
    return this;
  }

   /**
   * Get nameGt
   * @return nameGt
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getNameGt() {
        return nameGt.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_NAME_GT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getNameGt_JsonNullable() {
    return nameGt;
  }
  
  @JsonProperty(JSON_PROPERTY_NAME_GT)
  public void setNameGt_JsonNullable(JsonNullable<String> nameGt) {
    this.nameGt = nameGt;
  }

  public void setNameGt(String nameGt) {
    this.nameGt = JsonNullable.<String>of(nameGt);
  }


  public UserWhereInput nameGte(String nameGte) {
    this.nameGte = JsonNullable.<String>of(nameGte);
    return this;
  }

   /**
   * Get nameGte
   * @return nameGte
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getNameGte() {
        return nameGte.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_NAME_GTE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getNameGte_JsonNullable() {
    return nameGte;
  }
  
  @JsonProperty(JSON_PROPERTY_NAME_GTE)
  public void setNameGte_JsonNullable(JsonNullable<String> nameGte) {
    this.nameGte = nameGte;
  }

  public void setNameGte(String nameGte) {
    this.nameGte = JsonNullable.<String>of(nameGte);
  }


  public UserWhereInput nameIn(List<String> nameIn) {
    this.nameIn = JsonNullable.<List<String>>of(nameIn);
    return this;
  }

  public UserWhereInput addNameInItem(String nameInItem) {
    if (this.nameIn == null || !this.nameIn.isPresent()) {
      this.nameIn = JsonNullable.<List<String>>of(new ArrayList<>());
    }
    try {
      this.nameIn.get().add(nameInItem);
    } catch (java.util.NoSuchElementException e) {
      // this can never happen, as we make sure above that the value is present
    }
    return this;
  }

   /**
   * Get nameIn
   * @return nameIn
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public List<String> getNameIn() {
        return nameIn.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_NAME_IN)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<List<String>> getNameIn_JsonNullable() {
    return nameIn;
  }
  
  @JsonProperty(JSON_PROPERTY_NAME_IN)
  public void setNameIn_JsonNullable(JsonNullable<List<String>> nameIn) {
    this.nameIn = nameIn;
  }

  public void setNameIn(List<String> nameIn) {
    this.nameIn = JsonNullable.<List<String>>of(nameIn);
  }


  public UserWhereInput nameLt(String nameLt) {
    this.nameLt = JsonNullable.<String>of(nameLt);
    return this;
  }

   /**
   * Get nameLt
   * @return nameLt
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getNameLt() {
        return nameLt.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_NAME_LT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getNameLt_JsonNullable() {
    return nameLt;
  }
  
  @JsonProperty(JSON_PROPERTY_NAME_LT)
  public void setNameLt_JsonNullable(JsonNullable<String> nameLt) {
    this.nameLt = nameLt;
  }

  public void setNameLt(String nameLt) {
    this.nameLt = JsonNullable.<String>of(nameLt);
  }


  public UserWhereInput nameLte(String nameLte) {
    this.nameLte = JsonNullable.<String>of(nameLte);
    return this;
  }

   /**
   * Get nameLte
   * @return nameLte
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getNameLte() {
        return nameLte.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_NAME_LTE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getNameLte_JsonNullable() {
    return nameLte;
  }
  
  @JsonProperty(JSON_PROPERTY_NAME_LTE)
  public void setNameLte_JsonNullable(JsonNullable<String> nameLte) {
    this.nameLte = nameLte;
  }

  public void setNameLte(String nameLte) {
    this.nameLte = JsonNullable.<String>of(nameLte);
  }


  public UserWhereInput nameNot(String nameNot) {
    this.nameNot = JsonNullable.<String>of(nameNot);
    return this;
  }

   /**
   * Get nameNot
   * @return nameNot
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getNameNot() {
        return nameNot.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_NAME_NOT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getNameNot_JsonNullable() {
    return nameNot;
  }
  
  @JsonProperty(JSON_PROPERTY_NAME_NOT)
  public void setNameNot_JsonNullable(JsonNullable<String> nameNot) {
    this.nameNot = nameNot;
  }

  public void setNameNot(String nameNot) {
    this.nameNot = JsonNullable.<String>of(nameNot);
  }


  public UserWhereInput nameNotContains(String nameNotContains) {
    this.nameNotContains = JsonNullable.<String>of(nameNotContains);
    return this;
  }

   /**
   * Get nameNotContains
   * @return nameNotContains
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getNameNotContains() {
        return nameNotContains.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_NAME_NOT_CONTAINS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getNameNotContains_JsonNullable() {
    return nameNotContains;
  }
  
  @JsonProperty(JSON_PROPERTY_NAME_NOT_CONTAINS)
  public void setNameNotContains_JsonNullable(JsonNullable<String> nameNotContains) {
    this.nameNotContains = nameNotContains;
  }

  public void setNameNotContains(String nameNotContains) {
    this.nameNotContains = JsonNullable.<String>of(nameNotContains);
  }


  public UserWhereInput nameNotEndsWith(String nameNotEndsWith) {
    this.nameNotEndsWith = JsonNullable.<String>of(nameNotEndsWith);
    return this;
  }

   /**
   * Get nameNotEndsWith
   * @return nameNotEndsWith
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getNameNotEndsWith() {
        return nameNotEndsWith.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_NAME_NOT_ENDS_WITH)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getNameNotEndsWith_JsonNullable() {
    return nameNotEndsWith;
  }
  
  @JsonProperty(JSON_PROPERTY_NAME_NOT_ENDS_WITH)
  public void setNameNotEndsWith_JsonNullable(JsonNullable<String> nameNotEndsWith) {
    this.nameNotEndsWith = nameNotEndsWith;
  }

  public void setNameNotEndsWith(String nameNotEndsWith) {
    this.nameNotEndsWith = JsonNullable.<String>of(nameNotEndsWith);
  }


  public UserWhereInput nameNotIn(List<String> nameNotIn) {
    this.nameNotIn = JsonNullable.<List<String>>of(nameNotIn);
    return this;
  }

  public UserWhereInput addNameNotInItem(String nameNotInItem) {
    if (this.nameNotIn == null || !this.nameNotIn.isPresent()) {
      this.nameNotIn = JsonNullable.<List<String>>of(new ArrayList<>());
    }
    try {
      this.nameNotIn.get().add(nameNotInItem);
    } catch (java.util.NoSuchElementException e) {
      // this can never happen, as we make sure above that the value is present
    }
    return this;
  }

   /**
   * Get nameNotIn
   * @return nameNotIn
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public List<String> getNameNotIn() {
        return nameNotIn.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_NAME_NOT_IN)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<List<String>> getNameNotIn_JsonNullable() {
    return nameNotIn;
  }
  
  @JsonProperty(JSON_PROPERTY_NAME_NOT_IN)
  public void setNameNotIn_JsonNullable(JsonNullable<List<String>> nameNotIn) {
    this.nameNotIn = nameNotIn;
  }

  public void setNameNotIn(List<String> nameNotIn) {
    this.nameNotIn = JsonNullable.<List<String>>of(nameNotIn);
  }


  public UserWhereInput nameNotStartsWith(String nameNotStartsWith) {
    this.nameNotStartsWith = JsonNullable.<String>of(nameNotStartsWith);
    return this;
  }

   /**
   * Get nameNotStartsWith
   * @return nameNotStartsWith
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getNameNotStartsWith() {
        return nameNotStartsWith.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_NAME_NOT_STARTS_WITH)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getNameNotStartsWith_JsonNullable() {
    return nameNotStartsWith;
  }
  
  @JsonProperty(JSON_PROPERTY_NAME_NOT_STARTS_WITH)
  public void setNameNotStartsWith_JsonNullable(JsonNullable<String> nameNotStartsWith) {
    this.nameNotStartsWith = nameNotStartsWith;
  }

  public void setNameNotStartsWith(String nameNotStartsWith) {
    this.nameNotStartsWith = JsonNullable.<String>of(nameNotStartsWith);
  }


  public UserWhereInput nameStartsWith(String nameStartsWith) {
    this.nameStartsWith = JsonNullable.<String>of(nameStartsWith);
    return this;
  }

   /**
   * Get nameStartsWith
   * @return nameStartsWith
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getNameStartsWith() {
        return nameStartsWith.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_NAME_STARTS_WITH)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getNameStartsWith_JsonNullable() {
    return nameStartsWith;
  }
  
  @JsonProperty(JSON_PROPERTY_NAME_STARTS_WITH)
  public void setNameStartsWith_JsonNullable(JsonNullable<String> nameStartsWith) {
    this.nameStartsWith = nameStartsWith;
  }

  public void setNameStartsWith(String nameStartsWith) {
    this.nameStartsWith = JsonNullable.<String>of(nameStartsWith);
  }


  public UserWhereInput NOT(List<UserWhereInput> NOT) {
    this.NOT = JsonNullable.<List<UserWhereInput>>of(NOT);
    return this;
  }

  public UserWhereInput addNOTItem(UserWhereInput NOTItem) {
    if (this.NOT == null || !this.NOT.isPresent()) {
      this.NOT = JsonNullable.<List<UserWhereInput>>of(new ArrayList<>());
    }
    try {
      this.NOT.get().add(NOTItem);
    } catch (java.util.NoSuchElementException e) {
      // this can never happen, as we make sure above that the value is present
    }
    return this;
  }

   /**
   * Get NOT
   * @return NOT
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public List<UserWhereInput> getNOT() {
        return NOT.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_N_O_T)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<List<UserWhereInput>> getNOT_JsonNullable() {
    return NOT;
  }
  
  @JsonProperty(JSON_PROPERTY_N_O_T)
  public void setNOT_JsonNullable(JsonNullable<List<UserWhereInput>> NOT) {
    this.NOT = NOT;
  }

  public void setNOT(List<UserWhereInput> NOT) {
    this.NOT = JsonNullable.<List<UserWhereInput>>of(NOT);
  }


  public UserWhereInput OR(List<UserWhereInput> OR) {
    this.OR = JsonNullable.<List<UserWhereInput>>of(OR);
    return this;
  }

  public UserWhereInput addORItem(UserWhereInput ORItem) {
    if (this.OR == null || !this.OR.isPresent()) {
      this.OR = JsonNullable.<List<UserWhereInput>>of(new ArrayList<>());
    }
    try {
      this.OR.get().add(ORItem);
    } catch (java.util.NoSuchElementException e) {
      // this can never happen, as we make sure above that the value is present
    }
    return this;
  }

   /**
   * Get OR
   * @return OR
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public List<UserWhereInput> getOR() {
        return OR.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_O_R)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<List<UserWhereInput>> getOR_JsonNullable() {
    return OR;
  }
  
  @JsonProperty(JSON_PROPERTY_O_R)
  public void setOR_JsonNullable(JsonNullable<List<UserWhereInput>> OR) {
    this.OR = OR;
  }

  public void setOR(List<UserWhereInput> OR) {
    this.OR = JsonNullable.<List<UserWhereInput>>of(OR);
  }


  public UserWhereInput password(String password) {
    this.password = JsonNullable.<String>of(password);
    return this;
  }

   /**
   * Get password
   * @return password
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getPassword() {
        return password.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_PASSWORD)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getPassword_JsonNullable() {
    return password;
  }
  
  @JsonProperty(JSON_PROPERTY_PASSWORD)
  public void setPassword_JsonNullable(JsonNullable<String> password) {
    this.password = password;
  }

  public void setPassword(String password) {
    this.password = JsonNullable.<String>of(password);
  }


  public UserWhereInput passwordContains(String passwordContains) {
    this.passwordContains = JsonNullable.<String>of(passwordContains);
    return this;
  }

   /**
   * Get passwordContains
   * @return passwordContains
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getPasswordContains() {
        return passwordContains.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_PASSWORD_CONTAINS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getPasswordContains_JsonNullable() {
    return passwordContains;
  }
  
  @JsonProperty(JSON_PROPERTY_PASSWORD_CONTAINS)
  public void setPasswordContains_JsonNullable(JsonNullable<String> passwordContains) {
    this.passwordContains = passwordContains;
  }

  public void setPasswordContains(String passwordContains) {
    this.passwordContains = JsonNullable.<String>of(passwordContains);
  }


  public UserWhereInput passwordEndsWith(String passwordEndsWith) {
    this.passwordEndsWith = JsonNullable.<String>of(passwordEndsWith);
    return this;
  }

   /**
   * Get passwordEndsWith
   * @return passwordEndsWith
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getPasswordEndsWith() {
        return passwordEndsWith.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_PASSWORD_ENDS_WITH)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getPasswordEndsWith_JsonNullable() {
    return passwordEndsWith;
  }
  
  @JsonProperty(JSON_PROPERTY_PASSWORD_ENDS_WITH)
  public void setPasswordEndsWith_JsonNullable(JsonNullable<String> passwordEndsWith) {
    this.passwordEndsWith = passwordEndsWith;
  }

  public void setPasswordEndsWith(String passwordEndsWith) {
    this.passwordEndsWith = JsonNullable.<String>of(passwordEndsWith);
  }


  public UserWhereInput passwordGt(String passwordGt) {
    this.passwordGt = JsonNullable.<String>of(passwordGt);
    return this;
  }

   /**
   * Get passwordGt
   * @return passwordGt
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getPasswordGt() {
        return passwordGt.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_PASSWORD_GT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getPasswordGt_JsonNullable() {
    return passwordGt;
  }
  
  @JsonProperty(JSON_PROPERTY_PASSWORD_GT)
  public void setPasswordGt_JsonNullable(JsonNullable<String> passwordGt) {
    this.passwordGt = passwordGt;
  }

  public void setPasswordGt(String passwordGt) {
    this.passwordGt = JsonNullable.<String>of(passwordGt);
  }


  public UserWhereInput passwordGte(String passwordGte) {
    this.passwordGte = JsonNullable.<String>of(passwordGte);
    return this;
  }

   /**
   * Get passwordGte
   * @return passwordGte
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getPasswordGte() {
        return passwordGte.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_PASSWORD_GTE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getPasswordGte_JsonNullable() {
    return passwordGte;
  }
  
  @JsonProperty(JSON_PROPERTY_PASSWORD_GTE)
  public void setPasswordGte_JsonNullable(JsonNullable<String> passwordGte) {
    this.passwordGte = passwordGte;
  }

  public void setPasswordGte(String passwordGte) {
    this.passwordGte = JsonNullable.<String>of(passwordGte);
  }


  public UserWhereInput passwordIn(List<String> passwordIn) {
    this.passwordIn = JsonNullable.<List<String>>of(passwordIn);
    return this;
  }

  public UserWhereInput addPasswordInItem(String passwordInItem) {
    if (this.passwordIn == null || !this.passwordIn.isPresent()) {
      this.passwordIn = JsonNullable.<List<String>>of(new ArrayList<>());
    }
    try {
      this.passwordIn.get().add(passwordInItem);
    } catch (java.util.NoSuchElementException e) {
      // this can never happen, as we make sure above that the value is present
    }
    return this;
  }

   /**
   * Get passwordIn
   * @return passwordIn
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public List<String> getPasswordIn() {
        return passwordIn.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_PASSWORD_IN)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<List<String>> getPasswordIn_JsonNullable() {
    return passwordIn;
  }
  
  @JsonProperty(JSON_PROPERTY_PASSWORD_IN)
  public void setPasswordIn_JsonNullable(JsonNullable<List<String>> passwordIn) {
    this.passwordIn = passwordIn;
  }

  public void setPasswordIn(List<String> passwordIn) {
    this.passwordIn = JsonNullable.<List<String>>of(passwordIn);
  }


  public UserWhereInput passwordLt(String passwordLt) {
    this.passwordLt = JsonNullable.<String>of(passwordLt);
    return this;
  }

   /**
   * Get passwordLt
   * @return passwordLt
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getPasswordLt() {
        return passwordLt.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_PASSWORD_LT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getPasswordLt_JsonNullable() {
    return passwordLt;
  }
  
  @JsonProperty(JSON_PROPERTY_PASSWORD_LT)
  public void setPasswordLt_JsonNullable(JsonNullable<String> passwordLt) {
    this.passwordLt = passwordLt;
  }

  public void setPasswordLt(String passwordLt) {
    this.passwordLt = JsonNullable.<String>of(passwordLt);
  }


  public UserWhereInput passwordLte(String passwordLte) {
    this.passwordLte = JsonNullable.<String>of(passwordLte);
    return this;
  }

   /**
   * Get passwordLte
   * @return passwordLte
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getPasswordLte() {
        return passwordLte.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_PASSWORD_LTE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getPasswordLte_JsonNullable() {
    return passwordLte;
  }
  
  @JsonProperty(JSON_PROPERTY_PASSWORD_LTE)
  public void setPasswordLte_JsonNullable(JsonNullable<String> passwordLte) {
    this.passwordLte = passwordLte;
  }

  public void setPasswordLte(String passwordLte) {
    this.passwordLte = JsonNullable.<String>of(passwordLte);
  }


  public UserWhereInput passwordNot(String passwordNot) {
    this.passwordNot = JsonNullable.<String>of(passwordNot);
    return this;
  }

   /**
   * Get passwordNot
   * @return passwordNot
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getPasswordNot() {
        return passwordNot.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_PASSWORD_NOT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getPasswordNot_JsonNullable() {
    return passwordNot;
  }
  
  @JsonProperty(JSON_PROPERTY_PASSWORD_NOT)
  public void setPasswordNot_JsonNullable(JsonNullable<String> passwordNot) {
    this.passwordNot = passwordNot;
  }

  public void setPasswordNot(String passwordNot) {
    this.passwordNot = JsonNullable.<String>of(passwordNot);
  }


  public UserWhereInput passwordNotContains(String passwordNotContains) {
    this.passwordNotContains = JsonNullable.<String>of(passwordNotContains);
    return this;
  }

   /**
   * Get passwordNotContains
   * @return passwordNotContains
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getPasswordNotContains() {
        return passwordNotContains.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_PASSWORD_NOT_CONTAINS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getPasswordNotContains_JsonNullable() {
    return passwordNotContains;
  }
  
  @JsonProperty(JSON_PROPERTY_PASSWORD_NOT_CONTAINS)
  public void setPasswordNotContains_JsonNullable(JsonNullable<String> passwordNotContains) {
    this.passwordNotContains = passwordNotContains;
  }

  public void setPasswordNotContains(String passwordNotContains) {
    this.passwordNotContains = JsonNullable.<String>of(passwordNotContains);
  }


  public UserWhereInput passwordNotEndsWith(String passwordNotEndsWith) {
    this.passwordNotEndsWith = JsonNullable.<String>of(passwordNotEndsWith);
    return this;
  }

   /**
   * Get passwordNotEndsWith
   * @return passwordNotEndsWith
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getPasswordNotEndsWith() {
        return passwordNotEndsWith.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_PASSWORD_NOT_ENDS_WITH)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getPasswordNotEndsWith_JsonNullable() {
    return passwordNotEndsWith;
  }
  
  @JsonProperty(JSON_PROPERTY_PASSWORD_NOT_ENDS_WITH)
  public void setPasswordNotEndsWith_JsonNullable(JsonNullable<String> passwordNotEndsWith) {
    this.passwordNotEndsWith = passwordNotEndsWith;
  }

  public void setPasswordNotEndsWith(String passwordNotEndsWith) {
    this.passwordNotEndsWith = JsonNullable.<String>of(passwordNotEndsWith);
  }


  public UserWhereInput passwordNotIn(List<String> passwordNotIn) {
    this.passwordNotIn = JsonNullable.<List<String>>of(passwordNotIn);
    return this;
  }

  public UserWhereInput addPasswordNotInItem(String passwordNotInItem) {
    if (this.passwordNotIn == null || !this.passwordNotIn.isPresent()) {
      this.passwordNotIn = JsonNullable.<List<String>>of(new ArrayList<>());
    }
    try {
      this.passwordNotIn.get().add(passwordNotInItem);
    } catch (java.util.NoSuchElementException e) {
      // this can never happen, as we make sure above that the value is present
    }
    return this;
  }

   /**
   * Get passwordNotIn
   * @return passwordNotIn
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public List<String> getPasswordNotIn() {
        return passwordNotIn.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_PASSWORD_NOT_IN)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<List<String>> getPasswordNotIn_JsonNullable() {
    return passwordNotIn;
  }
  
  @JsonProperty(JSON_PROPERTY_PASSWORD_NOT_IN)
  public void setPasswordNotIn_JsonNullable(JsonNullable<List<String>> passwordNotIn) {
    this.passwordNotIn = passwordNotIn;
  }

  public void setPasswordNotIn(List<String> passwordNotIn) {
    this.passwordNotIn = JsonNullable.<List<String>>of(passwordNotIn);
  }


  public UserWhereInput passwordNotStartsWith(String passwordNotStartsWith) {
    this.passwordNotStartsWith = JsonNullable.<String>of(passwordNotStartsWith);
    return this;
  }

   /**
   * Get passwordNotStartsWith
   * @return passwordNotStartsWith
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getPasswordNotStartsWith() {
        return passwordNotStartsWith.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_PASSWORD_NOT_STARTS_WITH)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getPasswordNotStartsWith_JsonNullable() {
    return passwordNotStartsWith;
  }
  
  @JsonProperty(JSON_PROPERTY_PASSWORD_NOT_STARTS_WITH)
  public void setPasswordNotStartsWith_JsonNullable(JsonNullable<String> passwordNotStartsWith) {
    this.passwordNotStartsWith = passwordNotStartsWith;
  }

  public void setPasswordNotStartsWith(String passwordNotStartsWith) {
    this.passwordNotStartsWith = JsonNullable.<String>of(passwordNotStartsWith);
  }


  public UserWhereInput passwordStartsWith(String passwordStartsWith) {
    this.passwordStartsWith = JsonNullable.<String>of(passwordStartsWith);
    return this;
  }

   /**
   * Get passwordStartsWith
   * @return passwordStartsWith
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getPasswordStartsWith() {
        return passwordStartsWith.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_PASSWORD_STARTS_WITH)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getPasswordStartsWith_JsonNullable() {
    return passwordStartsWith;
  }
  
  @JsonProperty(JSON_PROPERTY_PASSWORD_STARTS_WITH)
  public void setPasswordStartsWith_JsonNullable(JsonNullable<String> passwordStartsWith) {
    this.passwordStartsWith = passwordStartsWith;
  }

  public void setPasswordStartsWith(String passwordStartsWith) {
    this.passwordStartsWith = JsonNullable.<String>of(passwordStartsWith);
  }


  public UserWhereInput role(UserRole role) {
    this.role = JsonNullable.<UserRole>of(role);
    return this;
  }

   /**
   * Get role
   * @return role
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public UserRole getRole() {
        return role.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_ROLE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<UserRole> getRole_JsonNullable() {
    return role;
  }
  
  @JsonProperty(JSON_PROPERTY_ROLE)
  public void setRole_JsonNullable(JsonNullable<UserRole> role) {
    this.role = role;
  }

  public void setRole(UserRole role) {
    this.role = JsonNullable.<UserRole>of(role);
  }


  public UserWhereInput roleIn(List<UserRole> roleIn) {
    this.roleIn = JsonNullable.<List<UserRole>>of(roleIn);
    return this;
  }

  public UserWhereInput addRoleInItem(UserRole roleInItem) {
    if (this.roleIn == null || !this.roleIn.isPresent()) {
      this.roleIn = JsonNullable.<List<UserRole>>of(new ArrayList<>());
    }
    try {
      this.roleIn.get().add(roleInItem);
    } catch (java.util.NoSuchElementException e) {
      // this can never happen, as we make sure above that the value is present
    }
    return this;
  }

   /**
   * Get roleIn
   * @return roleIn
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public List<UserRole> getRoleIn() {
        return roleIn.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_ROLE_IN)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<List<UserRole>> getRoleIn_JsonNullable() {
    return roleIn;
  }
  
  @JsonProperty(JSON_PROPERTY_ROLE_IN)
  public void setRoleIn_JsonNullable(JsonNullable<List<UserRole>> roleIn) {
    this.roleIn = roleIn;
  }

  public void setRoleIn(List<UserRole> roleIn) {
    this.roleIn = JsonNullable.<List<UserRole>>of(roleIn);
  }


  public UserWhereInput roleNot(UserRole roleNot) {
    this.roleNot = JsonNullable.<UserRole>of(roleNot);
    return this;
  }

   /**
   * Get roleNot
   * @return roleNot
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public UserRole getRoleNot() {
        return roleNot.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_ROLE_NOT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<UserRole> getRoleNot_JsonNullable() {
    return roleNot;
  }
  
  @JsonProperty(JSON_PROPERTY_ROLE_NOT)
  public void setRoleNot_JsonNullable(JsonNullable<UserRole> roleNot) {
    this.roleNot = roleNot;
  }

  public void setRoleNot(UserRole roleNot) {
    this.roleNot = JsonNullable.<UserRole>of(roleNot);
  }


  public UserWhereInput roleNotIn(List<UserRole> roleNotIn) {
    this.roleNotIn = JsonNullable.<List<UserRole>>of(roleNotIn);
    return this;
  }

  public UserWhereInput addRoleNotInItem(UserRole roleNotInItem) {
    if (this.roleNotIn == null || !this.roleNotIn.isPresent()) {
      this.roleNotIn = JsonNullable.<List<UserRole>>of(new ArrayList<>());
    }
    try {
      this.roleNotIn.get().add(roleNotInItem);
    } catch (java.util.NoSuchElementException e) {
      // this can never happen, as we make sure above that the value is present
    }
    return this;
  }

   /**
   * Get roleNotIn
   * @return roleNotIn
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public List<UserRole> getRoleNotIn() {
        return roleNotIn.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_ROLE_NOT_IN)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<List<UserRole>> getRoleNotIn_JsonNullable() {
    return roleNotIn;
  }
  
  @JsonProperty(JSON_PROPERTY_ROLE_NOT_IN)
  public void setRoleNotIn_JsonNullable(JsonNullable<List<UserRole>> roleNotIn) {
    this.roleNotIn = roleNotIn;
  }

  public void setRoleNotIn(List<UserRole> roleNotIn) {
    this.roleNotIn = JsonNullable.<List<UserRole>>of(roleNotIn);
  }


  public UserWhereInput rolesEvery(UserRoleNextWhereInput rolesEvery) {
    this.rolesEvery = JsonNullable.<UserRoleNextWhereInput>of(rolesEvery);
    return this;
  }

   /**
   * Get rolesEvery
   * @return rolesEvery
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public UserRoleNextWhereInput getRolesEvery() {
        return rolesEvery.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_ROLES_EVERY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<UserRoleNextWhereInput> getRolesEvery_JsonNullable() {
    return rolesEvery;
  }
  
  @JsonProperty(JSON_PROPERTY_ROLES_EVERY)
  public void setRolesEvery_JsonNullable(JsonNullable<UserRoleNextWhereInput> rolesEvery) {
    this.rolesEvery = rolesEvery;
  }

  public void setRolesEvery(UserRoleNextWhereInput rolesEvery) {
    this.rolesEvery = JsonNullable.<UserRoleNextWhereInput>of(rolesEvery);
  }


  public UserWhereInput rolesNone(UserRoleNextWhereInput rolesNone) {
    this.rolesNone = JsonNullable.<UserRoleNextWhereInput>of(rolesNone);
    return this;
  }

   /**
   * Get rolesNone
   * @return rolesNone
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public UserRoleNextWhereInput getRolesNone() {
        return rolesNone.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_ROLES_NONE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<UserRoleNextWhereInput> getRolesNone_JsonNullable() {
    return rolesNone;
  }
  
  @JsonProperty(JSON_PROPERTY_ROLES_NONE)
  public void setRolesNone_JsonNullable(JsonNullable<UserRoleNextWhereInput> rolesNone) {
    this.rolesNone = rolesNone;
  }

  public void setRolesNone(UserRoleNextWhereInput rolesNone) {
    this.rolesNone = JsonNullable.<UserRoleNextWhereInput>of(rolesNone);
  }


  public UserWhereInput rolesSome(UserRoleNextWhereInput rolesSome) {
    this.rolesSome = JsonNullable.<UserRoleNextWhereInput>of(rolesSome);
    return this;
  }

   /**
   * Get rolesSome
   * @return rolesSome
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public UserRoleNextWhereInput getRolesSome() {
        return rolesSome.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_ROLES_SOME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<UserRoleNextWhereInput> getRolesSome_JsonNullable() {
    return rolesSome;
  }
  
  @JsonProperty(JSON_PROPERTY_ROLES_SOME)
  public void setRolesSome_JsonNullable(JsonNullable<UserRoleNextWhereInput> rolesSome) {
    this.rolesSome = rolesSome;
  }

  public void setRolesSome(UserRoleNextWhereInput rolesSome) {
    this.rolesSome = JsonNullable.<UserRoleNextWhereInput>of(rolesSome);
  }


  public UserWhereInput source(UserSource source) {
    this.source = JsonNullable.<UserSource>of(source);
    return this;
  }

   /**
   * Get source
   * @return source
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public UserSource getSource() {
        return source.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_SOURCE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<UserSource> getSource_JsonNullable() {
    return source;
  }
  
  @JsonProperty(JSON_PROPERTY_SOURCE)
  public void setSource_JsonNullable(JsonNullable<UserSource> source) {
    this.source = source;
  }

  public void setSource(UserSource source) {
    this.source = JsonNullable.<UserSource>of(source);
  }


  public UserWhereInput sourceIn(List<UserSource> sourceIn) {
    this.sourceIn = JsonNullable.<List<UserSource>>of(sourceIn);
    return this;
  }

  public UserWhereInput addSourceInItem(UserSource sourceInItem) {
    if (this.sourceIn == null || !this.sourceIn.isPresent()) {
      this.sourceIn = JsonNullable.<List<UserSource>>of(new ArrayList<>());
    }
    try {
      this.sourceIn.get().add(sourceInItem);
    } catch (java.util.NoSuchElementException e) {
      // this can never happen, as we make sure above that the value is present
    }
    return this;
  }

   /**
   * Get sourceIn
   * @return sourceIn
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public List<UserSource> getSourceIn() {
        return sourceIn.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_SOURCE_IN)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<List<UserSource>> getSourceIn_JsonNullable() {
    return sourceIn;
  }
  
  @JsonProperty(JSON_PROPERTY_SOURCE_IN)
  public void setSourceIn_JsonNullable(JsonNullable<List<UserSource>> sourceIn) {
    this.sourceIn = sourceIn;
  }

  public void setSourceIn(List<UserSource> sourceIn) {
    this.sourceIn = JsonNullable.<List<UserSource>>of(sourceIn);
  }


  public UserWhereInput sourceNot(UserSource sourceNot) {
    this.sourceNot = JsonNullable.<UserSource>of(sourceNot);
    return this;
  }

   /**
   * Get sourceNot
   * @return sourceNot
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public UserSource getSourceNot() {
        return sourceNot.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_SOURCE_NOT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<UserSource> getSourceNot_JsonNullable() {
    return sourceNot;
  }
  
  @JsonProperty(JSON_PROPERTY_SOURCE_NOT)
  public void setSourceNot_JsonNullable(JsonNullable<UserSource> sourceNot) {
    this.sourceNot = sourceNot;
  }

  public void setSourceNot(UserSource sourceNot) {
    this.sourceNot = JsonNullable.<UserSource>of(sourceNot);
  }


  public UserWhereInput sourceNotIn(List<UserSource> sourceNotIn) {
    this.sourceNotIn = JsonNullable.<List<UserSource>>of(sourceNotIn);
    return this;
  }

  public UserWhereInput addSourceNotInItem(UserSource sourceNotInItem) {
    if (this.sourceNotIn == null || !this.sourceNotIn.isPresent()) {
      this.sourceNotIn = JsonNullable.<List<UserSource>>of(new ArrayList<>());
    }
    try {
      this.sourceNotIn.get().add(sourceNotInItem);
    } catch (java.util.NoSuchElementException e) {
      // this can never happen, as we make sure above that the value is present
    }
    return this;
  }

   /**
   * Get sourceNotIn
   * @return sourceNotIn
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public List<UserSource> getSourceNotIn() {
        return sourceNotIn.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_SOURCE_NOT_IN)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<List<UserSource>> getSourceNotIn_JsonNullable() {
    return sourceNotIn;
  }
  
  @JsonProperty(JSON_PROPERTY_SOURCE_NOT_IN)
  public void setSourceNotIn_JsonNullable(JsonNullable<List<UserSource>> sourceNotIn) {
    this.sourceNotIn = sourceNotIn;
  }

  public void setSourceNotIn(List<UserSource> sourceNotIn) {
    this.sourceNotIn = JsonNullable.<List<UserSource>>of(sourceNotIn);
  }


  public UserWhereInput username(String username) {
    this.username = JsonNullable.<String>of(username);
    return this;
  }

   /**
   * Get username
   * @return username
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getUsername() {
        return username.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_USERNAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getUsername_JsonNullable() {
    return username;
  }
  
  @JsonProperty(JSON_PROPERTY_USERNAME)
  public void setUsername_JsonNullable(JsonNullable<String> username) {
    this.username = username;
  }

  public void setUsername(String username) {
    this.username = JsonNullable.<String>of(username);
  }


  public UserWhereInput usernameContains(String usernameContains) {
    this.usernameContains = JsonNullable.<String>of(usernameContains);
    return this;
  }

   /**
   * Get usernameContains
   * @return usernameContains
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getUsernameContains() {
        return usernameContains.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_USERNAME_CONTAINS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getUsernameContains_JsonNullable() {
    return usernameContains;
  }
  
  @JsonProperty(JSON_PROPERTY_USERNAME_CONTAINS)
  public void setUsernameContains_JsonNullable(JsonNullable<String> usernameContains) {
    this.usernameContains = usernameContains;
  }

  public void setUsernameContains(String usernameContains) {
    this.usernameContains = JsonNullable.<String>of(usernameContains);
  }


  public UserWhereInput usernameEndsWith(String usernameEndsWith) {
    this.usernameEndsWith = JsonNullable.<String>of(usernameEndsWith);
    return this;
  }

   /**
   * Get usernameEndsWith
   * @return usernameEndsWith
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getUsernameEndsWith() {
        return usernameEndsWith.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_USERNAME_ENDS_WITH)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getUsernameEndsWith_JsonNullable() {
    return usernameEndsWith;
  }
  
  @JsonProperty(JSON_PROPERTY_USERNAME_ENDS_WITH)
  public void setUsernameEndsWith_JsonNullable(JsonNullable<String> usernameEndsWith) {
    this.usernameEndsWith = usernameEndsWith;
  }

  public void setUsernameEndsWith(String usernameEndsWith) {
    this.usernameEndsWith = JsonNullable.<String>of(usernameEndsWith);
  }


  public UserWhereInput usernameGt(String usernameGt) {
    this.usernameGt = JsonNullable.<String>of(usernameGt);
    return this;
  }

   /**
   * Get usernameGt
   * @return usernameGt
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getUsernameGt() {
        return usernameGt.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_USERNAME_GT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getUsernameGt_JsonNullable() {
    return usernameGt;
  }
  
  @JsonProperty(JSON_PROPERTY_USERNAME_GT)
  public void setUsernameGt_JsonNullable(JsonNullable<String> usernameGt) {
    this.usernameGt = usernameGt;
  }

  public void setUsernameGt(String usernameGt) {
    this.usernameGt = JsonNullable.<String>of(usernameGt);
  }


  public UserWhereInput usernameGte(String usernameGte) {
    this.usernameGte = JsonNullable.<String>of(usernameGte);
    return this;
  }

   /**
   * Get usernameGte
   * @return usernameGte
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getUsernameGte() {
        return usernameGte.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_USERNAME_GTE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getUsernameGte_JsonNullable() {
    return usernameGte;
  }
  
  @JsonProperty(JSON_PROPERTY_USERNAME_GTE)
  public void setUsernameGte_JsonNullable(JsonNullable<String> usernameGte) {
    this.usernameGte = usernameGte;
  }

  public void setUsernameGte(String usernameGte) {
    this.usernameGte = JsonNullable.<String>of(usernameGte);
  }


  public UserWhereInput usernameIn(List<String> usernameIn) {
    this.usernameIn = JsonNullable.<List<String>>of(usernameIn);
    return this;
  }

  public UserWhereInput addUsernameInItem(String usernameInItem) {
    if (this.usernameIn == null || !this.usernameIn.isPresent()) {
      this.usernameIn = JsonNullable.<List<String>>of(new ArrayList<>());
    }
    try {
      this.usernameIn.get().add(usernameInItem);
    } catch (java.util.NoSuchElementException e) {
      // this can never happen, as we make sure above that the value is present
    }
    return this;
  }

   /**
   * Get usernameIn
   * @return usernameIn
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public List<String> getUsernameIn() {
        return usernameIn.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_USERNAME_IN)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<List<String>> getUsernameIn_JsonNullable() {
    return usernameIn;
  }
  
  @JsonProperty(JSON_PROPERTY_USERNAME_IN)
  public void setUsernameIn_JsonNullable(JsonNullable<List<String>> usernameIn) {
    this.usernameIn = usernameIn;
  }

  public void setUsernameIn(List<String> usernameIn) {
    this.usernameIn = JsonNullable.<List<String>>of(usernameIn);
  }


  public UserWhereInput usernameLt(String usernameLt) {
    this.usernameLt = JsonNullable.<String>of(usernameLt);
    return this;
  }

   /**
   * Get usernameLt
   * @return usernameLt
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getUsernameLt() {
        return usernameLt.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_USERNAME_LT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getUsernameLt_JsonNullable() {
    return usernameLt;
  }
  
  @JsonProperty(JSON_PROPERTY_USERNAME_LT)
  public void setUsernameLt_JsonNullable(JsonNullable<String> usernameLt) {
    this.usernameLt = usernameLt;
  }

  public void setUsernameLt(String usernameLt) {
    this.usernameLt = JsonNullable.<String>of(usernameLt);
  }


  public UserWhereInput usernameLte(String usernameLte) {
    this.usernameLte = JsonNullable.<String>of(usernameLte);
    return this;
  }

   /**
   * Get usernameLte
   * @return usernameLte
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getUsernameLte() {
        return usernameLte.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_USERNAME_LTE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getUsernameLte_JsonNullable() {
    return usernameLte;
  }
  
  @JsonProperty(JSON_PROPERTY_USERNAME_LTE)
  public void setUsernameLte_JsonNullable(JsonNullable<String> usernameLte) {
    this.usernameLte = usernameLte;
  }

  public void setUsernameLte(String usernameLte) {
    this.usernameLte = JsonNullable.<String>of(usernameLte);
  }


  public UserWhereInput usernameNot(String usernameNot) {
    this.usernameNot = JsonNullable.<String>of(usernameNot);
    return this;
  }

   /**
   * Get usernameNot
   * @return usernameNot
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getUsernameNot() {
        return usernameNot.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_USERNAME_NOT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getUsernameNot_JsonNullable() {
    return usernameNot;
  }
  
  @JsonProperty(JSON_PROPERTY_USERNAME_NOT)
  public void setUsernameNot_JsonNullable(JsonNullable<String> usernameNot) {
    this.usernameNot = usernameNot;
  }

  public void setUsernameNot(String usernameNot) {
    this.usernameNot = JsonNullable.<String>of(usernameNot);
  }


  public UserWhereInput usernameNotContains(String usernameNotContains) {
    this.usernameNotContains = JsonNullable.<String>of(usernameNotContains);
    return this;
  }

   /**
   * Get usernameNotContains
   * @return usernameNotContains
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getUsernameNotContains() {
        return usernameNotContains.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_USERNAME_NOT_CONTAINS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getUsernameNotContains_JsonNullable() {
    return usernameNotContains;
  }
  
  @JsonProperty(JSON_PROPERTY_USERNAME_NOT_CONTAINS)
  public void setUsernameNotContains_JsonNullable(JsonNullable<String> usernameNotContains) {
    this.usernameNotContains = usernameNotContains;
  }

  public void setUsernameNotContains(String usernameNotContains) {
    this.usernameNotContains = JsonNullable.<String>of(usernameNotContains);
  }


  public UserWhereInput usernameNotEndsWith(String usernameNotEndsWith) {
    this.usernameNotEndsWith = JsonNullable.<String>of(usernameNotEndsWith);
    return this;
  }

   /**
   * Get usernameNotEndsWith
   * @return usernameNotEndsWith
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getUsernameNotEndsWith() {
        return usernameNotEndsWith.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_USERNAME_NOT_ENDS_WITH)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getUsernameNotEndsWith_JsonNullable() {
    return usernameNotEndsWith;
  }
  
  @JsonProperty(JSON_PROPERTY_USERNAME_NOT_ENDS_WITH)
  public void setUsernameNotEndsWith_JsonNullable(JsonNullable<String> usernameNotEndsWith) {
    this.usernameNotEndsWith = usernameNotEndsWith;
  }

  public void setUsernameNotEndsWith(String usernameNotEndsWith) {
    this.usernameNotEndsWith = JsonNullable.<String>of(usernameNotEndsWith);
  }


  public UserWhereInput usernameNotIn(List<String> usernameNotIn) {
    this.usernameNotIn = JsonNullable.<List<String>>of(usernameNotIn);
    return this;
  }

  public UserWhereInput addUsernameNotInItem(String usernameNotInItem) {
    if (this.usernameNotIn == null || !this.usernameNotIn.isPresent()) {
      this.usernameNotIn = JsonNullable.<List<String>>of(new ArrayList<>());
    }
    try {
      this.usernameNotIn.get().add(usernameNotInItem);
    } catch (java.util.NoSuchElementException e) {
      // this can never happen, as we make sure above that the value is present
    }
    return this;
  }

   /**
   * Get usernameNotIn
   * @return usernameNotIn
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public List<String> getUsernameNotIn() {
        return usernameNotIn.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_USERNAME_NOT_IN)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<List<String>> getUsernameNotIn_JsonNullable() {
    return usernameNotIn;
  }
  
  @JsonProperty(JSON_PROPERTY_USERNAME_NOT_IN)
  public void setUsernameNotIn_JsonNullable(JsonNullable<List<String>> usernameNotIn) {
    this.usernameNotIn = usernameNotIn;
  }

  public void setUsernameNotIn(List<String> usernameNotIn) {
    this.usernameNotIn = JsonNullable.<List<String>>of(usernameNotIn);
  }


  public UserWhereInput usernameNotStartsWith(String usernameNotStartsWith) {
    this.usernameNotStartsWith = JsonNullable.<String>of(usernameNotStartsWith);
    return this;
  }

   /**
   * Get usernameNotStartsWith
   * @return usernameNotStartsWith
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getUsernameNotStartsWith() {
        return usernameNotStartsWith.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_USERNAME_NOT_STARTS_WITH)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getUsernameNotStartsWith_JsonNullable() {
    return usernameNotStartsWith;
  }
  
  @JsonProperty(JSON_PROPERTY_USERNAME_NOT_STARTS_WITH)
  public void setUsernameNotStartsWith_JsonNullable(JsonNullable<String> usernameNotStartsWith) {
    this.usernameNotStartsWith = usernameNotStartsWith;
  }

  public void setUsernameNotStartsWith(String usernameNotStartsWith) {
    this.usernameNotStartsWith = JsonNullable.<String>of(usernameNotStartsWith);
  }


  public UserWhereInput usernameStartsWith(String usernameStartsWith) {
    this.usernameStartsWith = JsonNullable.<String>of(usernameStartsWith);
    return this;
  }

   /**
   * Get usernameStartsWith
   * @return usernameStartsWith
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getUsernameStartsWith() {
        return usernameStartsWith.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_USERNAME_STARTS_WITH)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getUsernameStartsWith_JsonNullable() {
    return usernameStartsWith;
  }
  
  @JsonProperty(JSON_PROPERTY_USERNAME_STARTS_WITH)
  public void setUsernameStartsWith_JsonNullable(JsonNullable<String> usernameStartsWith) {
    this.usernameStartsWith = usernameStartsWith;
  }

  public void setUsernameStartsWith(String usernameStartsWith) {
    this.usernameStartsWith = JsonNullable.<String>of(usernameStartsWith);
  }


  /**
   * Return true if this UserWhereInput object is equal to o.
   */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    UserWhereInput userWhereInput = (UserWhereInput) o;
    return equalsNullable(this.AND, userWhereInput.AND) &&
        equalsNullable(this.emailAddress, userWhereInput.emailAddress) &&
        equalsNullable(this.emailAddressContains, userWhereInput.emailAddressContains) &&
        equalsNullable(this.emailAddressEndsWith, userWhereInput.emailAddressEndsWith) &&
        equalsNullable(this.emailAddressGt, userWhereInput.emailAddressGt) &&
        equalsNullable(this.emailAddressGte, userWhereInput.emailAddressGte) &&
        equalsNullable(this.emailAddressIn, userWhereInput.emailAddressIn) &&
        equalsNullable(this.emailAddressLt, userWhereInput.emailAddressLt) &&
        equalsNullable(this.emailAddressLte, userWhereInput.emailAddressLte) &&
        equalsNullable(this.emailAddressNot, userWhereInput.emailAddressNot) &&
        equalsNullable(this.emailAddressNotContains, userWhereInput.emailAddressNotContains) &&
        equalsNullable(this.emailAddressNotEndsWith, userWhereInput.emailAddressNotEndsWith) &&
        equalsNullable(this.emailAddressNotIn, userWhereInput.emailAddressNotIn) &&
        equalsNullable(this.emailAddressNotStartsWith, userWhereInput.emailAddressNotStartsWith) &&
        equalsNullable(this.emailAddressStartsWith, userWhereInput.emailAddressStartsWith) &&
        equalsNullable(this.id, userWhereInput.id) &&
        equalsNullable(this.idContains, userWhereInput.idContains) &&
        equalsNullable(this.idEndsWith, userWhereInput.idEndsWith) &&
        equalsNullable(this.idGt, userWhereInput.idGt) &&
        equalsNullable(this.idGte, userWhereInput.idGte) &&
        equalsNullable(this.idIn, userWhereInput.idIn) &&
        equalsNullable(this.idLt, userWhereInput.idLt) &&
        equalsNullable(this.idLte, userWhereInput.idLte) &&
        equalsNullable(this.idNot, userWhereInput.idNot) &&
        equalsNullable(this.idNotContains, userWhereInput.idNotContains) &&
        equalsNullable(this.idNotEndsWith, userWhereInput.idNotEndsWith) &&
        equalsNullable(this.idNotIn, userWhereInput.idNotIn) &&
        equalsNullable(this.idNotStartsWith, userWhereInput.idNotStartsWith) &&
        equalsNullable(this.idStartsWith, userWhereInput.idStartsWith) &&
        equalsNullable(this.internal, userWhereInput.internal) &&
        equalsNullable(this.internalNot, userWhereInput.internalNot) &&
        equalsNullable(this.ldapDn, userWhereInput.ldapDn) &&
        equalsNullable(this.ldapDnContains, userWhereInput.ldapDnContains) &&
        equalsNullable(this.ldapDnEndsWith, userWhereInput.ldapDnEndsWith) &&
        equalsNullable(this.ldapDnGt, userWhereInput.ldapDnGt) &&
        equalsNullable(this.ldapDnGte, userWhereInput.ldapDnGte) &&
        equalsNullable(this.ldapDnIn, userWhereInput.ldapDnIn) &&
        equalsNullable(this.ldapDnLt, userWhereInput.ldapDnLt) &&
        equalsNullable(this.ldapDnLte, userWhereInput.ldapDnLte) &&
        equalsNullable(this.ldapDnNot, userWhereInput.ldapDnNot) &&
        equalsNullable(this.ldapDnNotContains, userWhereInput.ldapDnNotContains) &&
        equalsNullable(this.ldapDnNotEndsWith, userWhereInput.ldapDnNotEndsWith) &&
        equalsNullable(this.ldapDnNotIn, userWhereInput.ldapDnNotIn) &&
        equalsNullable(this.ldapDnNotStartsWith, userWhereInput.ldapDnNotStartsWith) &&
        equalsNullable(this.ldapDnStartsWith, userWhereInput.ldapDnStartsWith) &&
        equalsNullable(this.mobilePhone, userWhereInput.mobilePhone) &&
        equalsNullable(this.mobilePhoneContains, userWhereInput.mobilePhoneContains) &&
        equalsNullable(this.mobilePhoneEndsWith, userWhereInput.mobilePhoneEndsWith) &&
        equalsNullable(this.mobilePhoneGt, userWhereInput.mobilePhoneGt) &&
        equalsNullable(this.mobilePhoneGte, userWhereInput.mobilePhoneGte) &&
        equalsNullable(this.mobilePhoneIn, userWhereInput.mobilePhoneIn) &&
        equalsNullable(this.mobilePhoneLt, userWhereInput.mobilePhoneLt) &&
        equalsNullable(this.mobilePhoneLte, userWhereInput.mobilePhoneLte) &&
        equalsNullable(this.mobilePhoneNot, userWhereInput.mobilePhoneNot) &&
        equalsNullable(this.mobilePhoneNotContains, userWhereInput.mobilePhoneNotContains) &&
        equalsNullable(this.mobilePhoneNotEndsWith, userWhereInput.mobilePhoneNotEndsWith) &&
        equalsNullable(this.mobilePhoneNotIn, userWhereInput.mobilePhoneNotIn) &&
        equalsNullable(this.mobilePhoneNotStartsWith, userWhereInput.mobilePhoneNotStartsWith) &&
        equalsNullable(this.mobilePhoneStartsWith, userWhereInput.mobilePhoneStartsWith) &&
        equalsNullable(this.name, userWhereInput.name) &&
        equalsNullable(this.nameContains, userWhereInput.nameContains) &&
        equalsNullable(this.nameEndsWith, userWhereInput.nameEndsWith) &&
        equalsNullable(this.nameGt, userWhereInput.nameGt) &&
        equalsNullable(this.nameGte, userWhereInput.nameGte) &&
        equalsNullable(this.nameIn, userWhereInput.nameIn) &&
        equalsNullable(this.nameLt, userWhereInput.nameLt) &&
        equalsNullable(this.nameLte, userWhereInput.nameLte) &&
        equalsNullable(this.nameNot, userWhereInput.nameNot) &&
        equalsNullable(this.nameNotContains, userWhereInput.nameNotContains) &&
        equalsNullable(this.nameNotEndsWith, userWhereInput.nameNotEndsWith) &&
        equalsNullable(this.nameNotIn, userWhereInput.nameNotIn) &&
        equalsNullable(this.nameNotStartsWith, userWhereInput.nameNotStartsWith) &&
        equalsNullable(this.nameStartsWith, userWhereInput.nameStartsWith) &&
        equalsNullable(this.NOT, userWhereInput.NOT) &&
        equalsNullable(this.OR, userWhereInput.OR) &&
        equalsNullable(this.password, userWhereInput.password) &&
        equalsNullable(this.passwordContains, userWhereInput.passwordContains) &&
        equalsNullable(this.passwordEndsWith, userWhereInput.passwordEndsWith) &&
        equalsNullable(this.passwordGt, userWhereInput.passwordGt) &&
        equalsNullable(this.passwordGte, userWhereInput.passwordGte) &&
        equalsNullable(this.passwordIn, userWhereInput.passwordIn) &&
        equalsNullable(this.passwordLt, userWhereInput.passwordLt) &&
        equalsNullable(this.passwordLte, userWhereInput.passwordLte) &&
        equalsNullable(this.passwordNot, userWhereInput.passwordNot) &&
        equalsNullable(this.passwordNotContains, userWhereInput.passwordNotContains) &&
        equalsNullable(this.passwordNotEndsWith, userWhereInput.passwordNotEndsWith) &&
        equalsNullable(this.passwordNotIn, userWhereInput.passwordNotIn) &&
        equalsNullable(this.passwordNotStartsWith, userWhereInput.passwordNotStartsWith) &&
        equalsNullable(this.passwordStartsWith, userWhereInput.passwordStartsWith) &&
        equalsNullable(this.role, userWhereInput.role) &&
        equalsNullable(this.roleIn, userWhereInput.roleIn) &&
        equalsNullable(this.roleNot, userWhereInput.roleNot) &&
        equalsNullable(this.roleNotIn, userWhereInput.roleNotIn) &&
        equalsNullable(this.rolesEvery, userWhereInput.rolesEvery) &&
        equalsNullable(this.rolesNone, userWhereInput.rolesNone) &&
        equalsNullable(this.rolesSome, userWhereInput.rolesSome) &&
        equalsNullable(this.source, userWhereInput.source) &&
        equalsNullable(this.sourceIn, userWhereInput.sourceIn) &&
        equalsNullable(this.sourceNot, userWhereInput.sourceNot) &&
        equalsNullable(this.sourceNotIn, userWhereInput.sourceNotIn) &&
        equalsNullable(this.username, userWhereInput.username) &&
        equalsNullable(this.usernameContains, userWhereInput.usernameContains) &&
        equalsNullable(this.usernameEndsWith, userWhereInput.usernameEndsWith) &&
        equalsNullable(this.usernameGt, userWhereInput.usernameGt) &&
        equalsNullable(this.usernameGte, userWhereInput.usernameGte) &&
        equalsNullable(this.usernameIn, userWhereInput.usernameIn) &&
        equalsNullable(this.usernameLt, userWhereInput.usernameLt) &&
        equalsNullable(this.usernameLte, userWhereInput.usernameLte) &&
        equalsNullable(this.usernameNot, userWhereInput.usernameNot) &&
        equalsNullable(this.usernameNotContains, userWhereInput.usernameNotContains) &&
        equalsNullable(this.usernameNotEndsWith, userWhereInput.usernameNotEndsWith) &&
        equalsNullable(this.usernameNotIn, userWhereInput.usernameNotIn) &&
        equalsNullable(this.usernameNotStartsWith, userWhereInput.usernameNotStartsWith) &&
        equalsNullable(this.usernameStartsWith, userWhereInput.usernameStartsWith);
  }

  private static <T> boolean equalsNullable(JsonNullable<T> a, JsonNullable<T> b) {
    return a == b || (a != null && b != null && a.isPresent() && b.isPresent() && Objects.deepEquals(a.get(), b.get()));
  }

  @Override
  public int hashCode() {
    return Objects.hash(hashCodeNullable(AND), hashCodeNullable(emailAddress), hashCodeNullable(emailAddressContains), hashCodeNullable(emailAddressEndsWith), hashCodeNullable(emailAddressGt), hashCodeNullable(emailAddressGte), hashCodeNullable(emailAddressIn), hashCodeNullable(emailAddressLt), hashCodeNullable(emailAddressLte), hashCodeNullable(emailAddressNot), hashCodeNullable(emailAddressNotContains), hashCodeNullable(emailAddressNotEndsWith), hashCodeNullable(emailAddressNotIn), hashCodeNullable(emailAddressNotStartsWith), hashCodeNullable(emailAddressStartsWith), hashCodeNullable(id), hashCodeNullable(idContains), hashCodeNullable(idEndsWith), hashCodeNullable(idGt), hashCodeNullable(idGte), hashCodeNullable(idIn), hashCodeNullable(idLt), hashCodeNullable(idLte), hashCodeNullable(idNot), hashCodeNullable(idNotContains), hashCodeNullable(idNotEndsWith), hashCodeNullable(idNotIn), hashCodeNullable(idNotStartsWith), hashCodeNullable(idStartsWith), hashCodeNullable(internal), hashCodeNullable(internalNot), hashCodeNullable(ldapDn), hashCodeNullable(ldapDnContains), hashCodeNullable(ldapDnEndsWith), hashCodeNullable(ldapDnGt), hashCodeNullable(ldapDnGte), hashCodeNullable(ldapDnIn), hashCodeNullable(ldapDnLt), hashCodeNullable(ldapDnLte), hashCodeNullable(ldapDnNot), hashCodeNullable(ldapDnNotContains), hashCodeNullable(ldapDnNotEndsWith), hashCodeNullable(ldapDnNotIn), hashCodeNullable(ldapDnNotStartsWith), hashCodeNullable(ldapDnStartsWith), hashCodeNullable(mobilePhone), hashCodeNullable(mobilePhoneContains), hashCodeNullable(mobilePhoneEndsWith), hashCodeNullable(mobilePhoneGt), hashCodeNullable(mobilePhoneGte), hashCodeNullable(mobilePhoneIn), hashCodeNullable(mobilePhoneLt), hashCodeNullable(mobilePhoneLte), hashCodeNullable(mobilePhoneNot), hashCodeNullable(mobilePhoneNotContains), hashCodeNullable(mobilePhoneNotEndsWith), hashCodeNullable(mobilePhoneNotIn), hashCodeNullable(mobilePhoneNotStartsWith), hashCodeNullable(mobilePhoneStartsWith), hashCodeNullable(name), hashCodeNullable(nameContains), hashCodeNullable(nameEndsWith), hashCodeNullable(nameGt), hashCodeNullable(nameGte), hashCodeNullable(nameIn), hashCodeNullable(nameLt), hashCodeNullable(nameLte), hashCodeNullable(nameNot), hashCodeNullable(nameNotContains), hashCodeNullable(nameNotEndsWith), hashCodeNullable(nameNotIn), hashCodeNullable(nameNotStartsWith), hashCodeNullable(nameStartsWith), hashCodeNullable(NOT), hashCodeNullable(OR), hashCodeNullable(password), hashCodeNullable(passwordContains), hashCodeNullable(passwordEndsWith), hashCodeNullable(passwordGt), hashCodeNullable(passwordGte), hashCodeNullable(passwordIn), hashCodeNullable(passwordLt), hashCodeNullable(passwordLte), hashCodeNullable(passwordNot), hashCodeNullable(passwordNotContains), hashCodeNullable(passwordNotEndsWith), hashCodeNullable(passwordNotIn), hashCodeNullable(passwordNotStartsWith), hashCodeNullable(passwordStartsWith), hashCodeNullable(role), hashCodeNullable(roleIn), hashCodeNullable(roleNot), hashCodeNullable(roleNotIn), hashCodeNullable(rolesEvery), hashCodeNullable(rolesNone), hashCodeNullable(rolesSome), hashCodeNullable(source), hashCodeNullable(sourceIn), hashCodeNullable(sourceNot), hashCodeNullable(sourceNotIn), hashCodeNullable(username), hashCodeNullable(usernameContains), hashCodeNullable(usernameEndsWith), hashCodeNullable(usernameGt), hashCodeNullable(usernameGte), hashCodeNullable(usernameIn), hashCodeNullable(usernameLt), hashCodeNullable(usernameLte), hashCodeNullable(usernameNot), hashCodeNullable(usernameNotContains), hashCodeNullable(usernameNotEndsWith), hashCodeNullable(usernameNotIn), hashCodeNullable(usernameNotStartsWith), hashCodeNullable(usernameStartsWith));
  }

  private static <T> int hashCodeNullable(JsonNullable<T> a) {
    if (a == null) {
      return 1;
    }
    return a.isPresent() ? Arrays.deepHashCode(new Object[]{a.get()}) : 31;
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class UserWhereInput {\n");
    sb.append("    AND: ").append(toIndentedString(AND)).append("\n");
    sb.append("    emailAddress: ").append(toIndentedString(emailAddress)).append("\n");
    sb.append("    emailAddressContains: ").append(toIndentedString(emailAddressContains)).append("\n");
    sb.append("    emailAddressEndsWith: ").append(toIndentedString(emailAddressEndsWith)).append("\n");
    sb.append("    emailAddressGt: ").append(toIndentedString(emailAddressGt)).append("\n");
    sb.append("    emailAddressGte: ").append(toIndentedString(emailAddressGte)).append("\n");
    sb.append("    emailAddressIn: ").append(toIndentedString(emailAddressIn)).append("\n");
    sb.append("    emailAddressLt: ").append(toIndentedString(emailAddressLt)).append("\n");
    sb.append("    emailAddressLte: ").append(toIndentedString(emailAddressLte)).append("\n");
    sb.append("    emailAddressNot: ").append(toIndentedString(emailAddressNot)).append("\n");
    sb.append("    emailAddressNotContains: ").append(toIndentedString(emailAddressNotContains)).append("\n");
    sb.append("    emailAddressNotEndsWith: ").append(toIndentedString(emailAddressNotEndsWith)).append("\n");
    sb.append("    emailAddressNotIn: ").append(toIndentedString(emailAddressNotIn)).append("\n");
    sb.append("    emailAddressNotStartsWith: ").append(toIndentedString(emailAddressNotStartsWith)).append("\n");
    sb.append("    emailAddressStartsWith: ").append(toIndentedString(emailAddressStartsWith)).append("\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    idContains: ").append(toIndentedString(idContains)).append("\n");
    sb.append("    idEndsWith: ").append(toIndentedString(idEndsWith)).append("\n");
    sb.append("    idGt: ").append(toIndentedString(idGt)).append("\n");
    sb.append("    idGte: ").append(toIndentedString(idGte)).append("\n");
    sb.append("    idIn: ").append(toIndentedString(idIn)).append("\n");
    sb.append("    idLt: ").append(toIndentedString(idLt)).append("\n");
    sb.append("    idLte: ").append(toIndentedString(idLte)).append("\n");
    sb.append("    idNot: ").append(toIndentedString(idNot)).append("\n");
    sb.append("    idNotContains: ").append(toIndentedString(idNotContains)).append("\n");
    sb.append("    idNotEndsWith: ").append(toIndentedString(idNotEndsWith)).append("\n");
    sb.append("    idNotIn: ").append(toIndentedString(idNotIn)).append("\n");
    sb.append("    idNotStartsWith: ").append(toIndentedString(idNotStartsWith)).append("\n");
    sb.append("    idStartsWith: ").append(toIndentedString(idStartsWith)).append("\n");
    sb.append("    internal: ").append(toIndentedString(internal)).append("\n");
    sb.append("    internalNot: ").append(toIndentedString(internalNot)).append("\n");
    sb.append("    ldapDn: ").append(toIndentedString(ldapDn)).append("\n");
    sb.append("    ldapDnContains: ").append(toIndentedString(ldapDnContains)).append("\n");
    sb.append("    ldapDnEndsWith: ").append(toIndentedString(ldapDnEndsWith)).append("\n");
    sb.append("    ldapDnGt: ").append(toIndentedString(ldapDnGt)).append("\n");
    sb.append("    ldapDnGte: ").append(toIndentedString(ldapDnGte)).append("\n");
    sb.append("    ldapDnIn: ").append(toIndentedString(ldapDnIn)).append("\n");
    sb.append("    ldapDnLt: ").append(toIndentedString(ldapDnLt)).append("\n");
    sb.append("    ldapDnLte: ").append(toIndentedString(ldapDnLte)).append("\n");
    sb.append("    ldapDnNot: ").append(toIndentedString(ldapDnNot)).append("\n");
    sb.append("    ldapDnNotContains: ").append(toIndentedString(ldapDnNotContains)).append("\n");
    sb.append("    ldapDnNotEndsWith: ").append(toIndentedString(ldapDnNotEndsWith)).append("\n");
    sb.append("    ldapDnNotIn: ").append(toIndentedString(ldapDnNotIn)).append("\n");
    sb.append("    ldapDnNotStartsWith: ").append(toIndentedString(ldapDnNotStartsWith)).append("\n");
    sb.append("    ldapDnStartsWith: ").append(toIndentedString(ldapDnStartsWith)).append("\n");
    sb.append("    mobilePhone: ").append(toIndentedString(mobilePhone)).append("\n");
    sb.append("    mobilePhoneContains: ").append(toIndentedString(mobilePhoneContains)).append("\n");
    sb.append("    mobilePhoneEndsWith: ").append(toIndentedString(mobilePhoneEndsWith)).append("\n");
    sb.append("    mobilePhoneGt: ").append(toIndentedString(mobilePhoneGt)).append("\n");
    sb.append("    mobilePhoneGte: ").append(toIndentedString(mobilePhoneGte)).append("\n");
    sb.append("    mobilePhoneIn: ").append(toIndentedString(mobilePhoneIn)).append("\n");
    sb.append("    mobilePhoneLt: ").append(toIndentedString(mobilePhoneLt)).append("\n");
    sb.append("    mobilePhoneLte: ").append(toIndentedString(mobilePhoneLte)).append("\n");
    sb.append("    mobilePhoneNot: ").append(toIndentedString(mobilePhoneNot)).append("\n");
    sb.append("    mobilePhoneNotContains: ").append(toIndentedString(mobilePhoneNotContains)).append("\n");
    sb.append("    mobilePhoneNotEndsWith: ").append(toIndentedString(mobilePhoneNotEndsWith)).append("\n");
    sb.append("    mobilePhoneNotIn: ").append(toIndentedString(mobilePhoneNotIn)).append("\n");
    sb.append("    mobilePhoneNotStartsWith: ").append(toIndentedString(mobilePhoneNotStartsWith)).append("\n");
    sb.append("    mobilePhoneStartsWith: ").append(toIndentedString(mobilePhoneStartsWith)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    nameContains: ").append(toIndentedString(nameContains)).append("\n");
    sb.append("    nameEndsWith: ").append(toIndentedString(nameEndsWith)).append("\n");
    sb.append("    nameGt: ").append(toIndentedString(nameGt)).append("\n");
    sb.append("    nameGte: ").append(toIndentedString(nameGte)).append("\n");
    sb.append("    nameIn: ").append(toIndentedString(nameIn)).append("\n");
    sb.append("    nameLt: ").append(toIndentedString(nameLt)).append("\n");
    sb.append("    nameLte: ").append(toIndentedString(nameLte)).append("\n");
    sb.append("    nameNot: ").append(toIndentedString(nameNot)).append("\n");
    sb.append("    nameNotContains: ").append(toIndentedString(nameNotContains)).append("\n");
    sb.append("    nameNotEndsWith: ").append(toIndentedString(nameNotEndsWith)).append("\n");
    sb.append("    nameNotIn: ").append(toIndentedString(nameNotIn)).append("\n");
    sb.append("    nameNotStartsWith: ").append(toIndentedString(nameNotStartsWith)).append("\n");
    sb.append("    nameStartsWith: ").append(toIndentedString(nameStartsWith)).append("\n");
    sb.append("    NOT: ").append(toIndentedString(NOT)).append("\n");
    sb.append("    OR: ").append(toIndentedString(OR)).append("\n");
    sb.append("    password: ").append(toIndentedString(password)).append("\n");
    sb.append("    passwordContains: ").append(toIndentedString(passwordContains)).append("\n");
    sb.append("    passwordEndsWith: ").append(toIndentedString(passwordEndsWith)).append("\n");
    sb.append("    passwordGt: ").append(toIndentedString(passwordGt)).append("\n");
    sb.append("    passwordGte: ").append(toIndentedString(passwordGte)).append("\n");
    sb.append("    passwordIn: ").append(toIndentedString(passwordIn)).append("\n");
    sb.append("    passwordLt: ").append(toIndentedString(passwordLt)).append("\n");
    sb.append("    passwordLte: ").append(toIndentedString(passwordLte)).append("\n");
    sb.append("    passwordNot: ").append(toIndentedString(passwordNot)).append("\n");
    sb.append("    passwordNotContains: ").append(toIndentedString(passwordNotContains)).append("\n");
    sb.append("    passwordNotEndsWith: ").append(toIndentedString(passwordNotEndsWith)).append("\n");
    sb.append("    passwordNotIn: ").append(toIndentedString(passwordNotIn)).append("\n");
    sb.append("    passwordNotStartsWith: ").append(toIndentedString(passwordNotStartsWith)).append("\n");
    sb.append("    passwordStartsWith: ").append(toIndentedString(passwordStartsWith)).append("\n");
    sb.append("    role: ").append(toIndentedString(role)).append("\n");
    sb.append("    roleIn: ").append(toIndentedString(roleIn)).append("\n");
    sb.append("    roleNot: ").append(toIndentedString(roleNot)).append("\n");
    sb.append("    roleNotIn: ").append(toIndentedString(roleNotIn)).append("\n");
    sb.append("    rolesEvery: ").append(toIndentedString(rolesEvery)).append("\n");
    sb.append("    rolesNone: ").append(toIndentedString(rolesNone)).append("\n");
    sb.append("    rolesSome: ").append(toIndentedString(rolesSome)).append("\n");
    sb.append("    source: ").append(toIndentedString(source)).append("\n");
    sb.append("    sourceIn: ").append(toIndentedString(sourceIn)).append("\n");
    sb.append("    sourceNot: ").append(toIndentedString(sourceNot)).append("\n");
    sb.append("    sourceNotIn: ").append(toIndentedString(sourceNotIn)).append("\n");
    sb.append("    username: ").append(toIndentedString(username)).append("\n");
    sb.append("    usernameContains: ").append(toIndentedString(usernameContains)).append("\n");
    sb.append("    usernameEndsWith: ").append(toIndentedString(usernameEndsWith)).append("\n");
    sb.append("    usernameGt: ").append(toIndentedString(usernameGt)).append("\n");
    sb.append("    usernameGte: ").append(toIndentedString(usernameGte)).append("\n");
    sb.append("    usernameIn: ").append(toIndentedString(usernameIn)).append("\n");
    sb.append("    usernameLt: ").append(toIndentedString(usernameLt)).append("\n");
    sb.append("    usernameLte: ").append(toIndentedString(usernameLte)).append("\n");
    sb.append("    usernameNot: ").append(toIndentedString(usernameNot)).append("\n");
    sb.append("    usernameNotContains: ").append(toIndentedString(usernameNotContains)).append("\n");
    sb.append("    usernameNotEndsWith: ").append(toIndentedString(usernameNotEndsWith)).append("\n");
    sb.append("    usernameNotIn: ").append(toIndentedString(usernameNotIn)).append("\n");
    sb.append("    usernameNotStartsWith: ").append(toIndentedString(usernameNotStartsWith)).append("\n");
    sb.append("    usernameStartsWith: ").append(toIndentedString(usernameStartsWith)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

