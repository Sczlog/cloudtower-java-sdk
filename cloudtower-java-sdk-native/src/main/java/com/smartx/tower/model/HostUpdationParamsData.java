/*
 * Tower SDK API
 * cloudtower operation API and SDK
 *
 * The version of the OpenAPI document: 1.7.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.smartx.tower.model;

import java.util.Objects;
import java.util.Arrays;
import java.util.Map;
import java.util.HashMap;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import com.smartx.tower.model.HostBatchCreateIpmiInput;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;


/**
 * HostUpdationParamsData
 */
@JsonPropertyOrder({
  HostUpdationParamsData.JSON_PROPERTY_IPMI,
  HostUpdationParamsData.JSON_PROPERTY_SCVM_NAME,
  HostUpdationParamsData.JSON_PROPERTY_NAME
})
@javax.annotation.processing.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2021-10-27T15:59:14.939791800+08:00[Asia/Shanghai]")
public class HostUpdationParamsData {
  public static final String JSON_PROPERTY_IPMI = "ipmi";
  private HostBatchCreateIpmiInput ipmi;

  public static final String JSON_PROPERTY_SCVM_NAME = "scvm_name";
  private String scvmName;

  public static final String JSON_PROPERTY_NAME = "name";
  private String name;


  public HostUpdationParamsData ipmi(HostBatchCreateIpmiInput ipmi) {
    this.ipmi = ipmi;
    return this;
  }

   /**
   * Get ipmi
   * @return ipmi
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_IPMI)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public HostBatchCreateIpmiInput getIpmi() {
    return ipmi;
  }


  @JsonProperty(JSON_PROPERTY_IPMI)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setIpmi(HostBatchCreateIpmiInput ipmi) {
    this.ipmi = ipmi;
  }


  public HostUpdationParamsData scvmName(String scvmName) {
    this.scvmName = scvmName;
    return this;
  }

   /**
   * Get scvmName
   * @return scvmName
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_SCVM_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getScvmName() {
    return scvmName;
  }


  @JsonProperty(JSON_PROPERTY_SCVM_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setScvmName(String scvmName) {
    this.scvmName = scvmName;
  }


  public HostUpdationParamsData name(String name) {
    this.name = name;
    return this;
  }

   /**
   * Get name
   * @return name
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getName() {
    return name;
  }


  @JsonProperty(JSON_PROPERTY_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setName(String name) {
    this.name = name;
  }


  /**
   * Return true if this HostUpdationParams_data object is equal to o.
   */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    HostUpdationParamsData hostUpdationParamsData = (HostUpdationParamsData) o;
    return Objects.equals(this.ipmi, hostUpdationParamsData.ipmi) &&
        Objects.equals(this.scvmName, hostUpdationParamsData.scvmName) &&
        Objects.equals(this.name, hostUpdationParamsData.name);
  }

  @Override
  public int hashCode() {
    return Objects.hash(ipmi, scvmName, name);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class HostUpdationParamsData {\n");
    sb.append("    ipmi: ").append(toIndentedString(ipmi)).append("\n");
    sb.append("    scvmName: ").append(toIndentedString(scvmName)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

