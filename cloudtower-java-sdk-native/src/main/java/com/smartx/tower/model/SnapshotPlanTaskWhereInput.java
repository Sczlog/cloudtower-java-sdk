/*
 * Tower SDK API
 * cloudtower operation API and SDK
 *
 * The version of the OpenAPI document: 1.7.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.smartx.tower.model;

import java.util.Objects;
import java.util.Arrays;
import java.util.Map;
import java.util.HashMap;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import com.smartx.tower.model.ClusterWhereInput;
import com.smartx.tower.model.EntityAsyncStatus;
import com.smartx.tower.model.SnapshotGroupWhereInput;
import com.smartx.tower.model.SnapshotPlanExecuteStatus;
import com.smartx.tower.model.SnapshotPlanTaskType;
import com.smartx.tower.model.SnapshotPlanWhereInput;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.util.ArrayList;
import java.util.List;
import org.openapitools.jackson.nullable.JsonNullable;
import com.fasterxml.jackson.annotation.JsonIgnore;
import org.openapitools.jackson.nullable.JsonNullable;
import java.util.NoSuchElementException;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;


/**
 * SnapshotPlanTaskWhereInput
 */
@JsonPropertyOrder({
  SnapshotPlanTaskWhereInput.JSON_PROPERTY_A_N_D,
  SnapshotPlanTaskWhereInput.JSON_PROPERTY_CLUSTER,
  SnapshotPlanTaskWhereInput.JSON_PROPERTY_END_TIME,
  SnapshotPlanTaskWhereInput.JSON_PROPERTY_END_TIME_GT,
  SnapshotPlanTaskWhereInput.JSON_PROPERTY_END_TIME_GTE,
  SnapshotPlanTaskWhereInput.JSON_PROPERTY_END_TIME_IN,
  SnapshotPlanTaskWhereInput.JSON_PROPERTY_END_TIME_LT,
  SnapshotPlanTaskWhereInput.JSON_PROPERTY_END_TIME_LTE,
  SnapshotPlanTaskWhereInput.JSON_PROPERTY_END_TIME_NOT,
  SnapshotPlanTaskWhereInput.JSON_PROPERTY_END_TIME_NOT_IN,
  SnapshotPlanTaskWhereInput.JSON_PROPERTY_ENTITY_ASYNC_STATUS,
  SnapshotPlanTaskWhereInput.JSON_PROPERTY_ENTITY_ASYNC_STATUS_IN,
  SnapshotPlanTaskWhereInput.JSON_PROPERTY_ENTITY_ASYNC_STATUS_NOT,
  SnapshotPlanTaskWhereInput.JSON_PROPERTY_ENTITY_ASYNC_STATUS_NOT_IN,
  SnapshotPlanTaskWhereInput.JSON_PROPERTY_ID,
  SnapshotPlanTaskWhereInput.JSON_PROPERTY_ID_CONTAINS,
  SnapshotPlanTaskWhereInput.JSON_PROPERTY_ID_ENDS_WITH,
  SnapshotPlanTaskWhereInput.JSON_PROPERTY_ID_GT,
  SnapshotPlanTaskWhereInput.JSON_PROPERTY_ID_GTE,
  SnapshotPlanTaskWhereInput.JSON_PROPERTY_ID_IN,
  SnapshotPlanTaskWhereInput.JSON_PROPERTY_ID_LT,
  SnapshotPlanTaskWhereInput.JSON_PROPERTY_ID_LTE,
  SnapshotPlanTaskWhereInput.JSON_PROPERTY_ID_NOT,
  SnapshotPlanTaskWhereInput.JSON_PROPERTY_ID_NOT_CONTAINS,
  SnapshotPlanTaskWhereInput.JSON_PROPERTY_ID_NOT_ENDS_WITH,
  SnapshotPlanTaskWhereInput.JSON_PROPERTY_ID_NOT_IN,
  SnapshotPlanTaskWhereInput.JSON_PROPERTY_ID_NOT_STARTS_WITH,
  SnapshotPlanTaskWhereInput.JSON_PROPERTY_ID_STARTS_WITH,
  SnapshotPlanTaskWhereInput.JSON_PROPERTY_INTERNAL,
  SnapshotPlanTaskWhereInput.JSON_PROPERTY_INTERNAL_NOT,
  SnapshotPlanTaskWhereInput.JSON_PROPERTY_LOCAL_ID,
  SnapshotPlanTaskWhereInput.JSON_PROPERTY_LOCAL_ID_CONTAINS,
  SnapshotPlanTaskWhereInput.JSON_PROPERTY_LOCAL_ID_ENDS_WITH,
  SnapshotPlanTaskWhereInput.JSON_PROPERTY_LOCAL_ID_GT,
  SnapshotPlanTaskWhereInput.JSON_PROPERTY_LOCAL_ID_GTE,
  SnapshotPlanTaskWhereInput.JSON_PROPERTY_LOCAL_ID_IN,
  SnapshotPlanTaskWhereInput.JSON_PROPERTY_LOCAL_ID_LT,
  SnapshotPlanTaskWhereInput.JSON_PROPERTY_LOCAL_ID_LTE,
  SnapshotPlanTaskWhereInput.JSON_PROPERTY_LOCAL_ID_NOT,
  SnapshotPlanTaskWhereInput.JSON_PROPERTY_LOCAL_ID_NOT_CONTAINS,
  SnapshotPlanTaskWhereInput.JSON_PROPERTY_LOCAL_ID_NOT_ENDS_WITH,
  SnapshotPlanTaskWhereInput.JSON_PROPERTY_LOCAL_ID_NOT_IN,
  SnapshotPlanTaskWhereInput.JSON_PROPERTY_LOCAL_ID_NOT_STARTS_WITH,
  SnapshotPlanTaskWhereInput.JSON_PROPERTY_LOCAL_ID_STARTS_WITH,
  SnapshotPlanTaskWhereInput.JSON_PROPERTY_N_O_T,
  SnapshotPlanTaskWhereInput.JSON_PROPERTY_O_R,
  SnapshotPlanTaskWhereInput.JSON_PROPERTY_SNAPSHOT_GROUP,
  SnapshotPlanTaskWhereInput.JSON_PROPERTY_SNAPSHOT_PLAN,
  SnapshotPlanTaskWhereInput.JSON_PROPERTY_START_TIME,
  SnapshotPlanTaskWhereInput.JSON_PROPERTY_START_TIME_GT,
  SnapshotPlanTaskWhereInput.JSON_PROPERTY_START_TIME_GTE,
  SnapshotPlanTaskWhereInput.JSON_PROPERTY_START_TIME_IN,
  SnapshotPlanTaskWhereInput.JSON_PROPERTY_START_TIME_LT,
  SnapshotPlanTaskWhereInput.JSON_PROPERTY_START_TIME_LTE,
  SnapshotPlanTaskWhereInput.JSON_PROPERTY_START_TIME_NOT,
  SnapshotPlanTaskWhereInput.JSON_PROPERTY_START_TIME_NOT_IN,
  SnapshotPlanTaskWhereInput.JSON_PROPERTY_STATUS,
  SnapshotPlanTaskWhereInput.JSON_PROPERTY_STATUS_IN,
  SnapshotPlanTaskWhereInput.JSON_PROPERTY_STATUS_NOT,
  SnapshotPlanTaskWhereInput.JSON_PROPERTY_STATUS_NOT_IN,
  SnapshotPlanTaskWhereInput.JSON_PROPERTY_TYPE,
  SnapshotPlanTaskWhereInput.JSON_PROPERTY_TYPE_IN,
  SnapshotPlanTaskWhereInput.JSON_PROPERTY_TYPE_NOT,
  SnapshotPlanTaskWhereInput.JSON_PROPERTY_TYPE_NOT_IN
})
@javax.annotation.processing.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2021-10-27T15:59:14.939791800+08:00[Asia/Shanghai]")
public class SnapshotPlanTaskWhereInput {
  public static final String JSON_PROPERTY_A_N_D = "AND";
  private JsonNullable<List<SnapshotPlanTaskWhereInput>> AND = JsonNullable.<List<SnapshotPlanTaskWhereInput>>undefined();

  public static final String JSON_PROPERTY_CLUSTER = "cluster";
  private JsonNullable<ClusterWhereInput> cluster = JsonNullable.<ClusterWhereInput>undefined();

  public static final String JSON_PROPERTY_END_TIME = "end_time";
  private JsonNullable<String> endTime = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_END_TIME_GT = "end_time_gt";
  private JsonNullable<String> endTimeGt = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_END_TIME_GTE = "end_time_gte";
  private JsonNullable<String> endTimeGte = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_END_TIME_IN = "end_time_in";
  private JsonNullable<List<String>> endTimeIn = JsonNullable.<List<String>>undefined();

  public static final String JSON_PROPERTY_END_TIME_LT = "end_time_lt";
  private JsonNullable<String> endTimeLt = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_END_TIME_LTE = "end_time_lte";
  private JsonNullable<String> endTimeLte = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_END_TIME_NOT = "end_time_not";
  private JsonNullable<String> endTimeNot = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_END_TIME_NOT_IN = "end_time_not_in";
  private JsonNullable<List<String>> endTimeNotIn = JsonNullable.<List<String>>undefined();

  public static final String JSON_PROPERTY_ENTITY_ASYNC_STATUS = "entityAsyncStatus";
  private JsonNullable<EntityAsyncStatus> entityAsyncStatus = JsonNullable.<EntityAsyncStatus>undefined();

  public static final String JSON_PROPERTY_ENTITY_ASYNC_STATUS_IN = "entityAsyncStatus_in";
  private JsonNullable<List<EntityAsyncStatus>> entityAsyncStatusIn = JsonNullable.<List<EntityAsyncStatus>>undefined();

  public static final String JSON_PROPERTY_ENTITY_ASYNC_STATUS_NOT = "entityAsyncStatus_not";
  private JsonNullable<EntityAsyncStatus> entityAsyncStatusNot = JsonNullable.<EntityAsyncStatus>undefined();

  public static final String JSON_PROPERTY_ENTITY_ASYNC_STATUS_NOT_IN = "entityAsyncStatus_not_in";
  private JsonNullable<List<EntityAsyncStatus>> entityAsyncStatusNotIn = JsonNullable.<List<EntityAsyncStatus>>undefined();

  public static final String JSON_PROPERTY_ID = "id";
  private JsonNullable<String> id = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_ID_CONTAINS = "id_contains";
  private JsonNullable<String> idContains = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_ID_ENDS_WITH = "id_ends_with";
  private JsonNullable<String> idEndsWith = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_ID_GT = "id_gt";
  private JsonNullable<String> idGt = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_ID_GTE = "id_gte";
  private JsonNullable<String> idGte = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_ID_IN = "id_in";
  private JsonNullable<List<String>> idIn = JsonNullable.<List<String>>undefined();

  public static final String JSON_PROPERTY_ID_LT = "id_lt";
  private JsonNullable<String> idLt = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_ID_LTE = "id_lte";
  private JsonNullable<String> idLte = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_ID_NOT = "id_not";
  private JsonNullable<String> idNot = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_ID_NOT_CONTAINS = "id_not_contains";
  private JsonNullable<String> idNotContains = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_ID_NOT_ENDS_WITH = "id_not_ends_with";
  private JsonNullable<String> idNotEndsWith = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_ID_NOT_IN = "id_not_in";
  private JsonNullable<List<String>> idNotIn = JsonNullable.<List<String>>undefined();

  public static final String JSON_PROPERTY_ID_NOT_STARTS_WITH = "id_not_starts_with";
  private JsonNullable<String> idNotStartsWith = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_ID_STARTS_WITH = "id_starts_with";
  private JsonNullable<String> idStartsWith = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_INTERNAL = "internal";
  private JsonNullable<Boolean> internal = JsonNullable.<Boolean>undefined();

  public static final String JSON_PROPERTY_INTERNAL_NOT = "internal_not";
  private JsonNullable<Boolean> internalNot = JsonNullable.<Boolean>undefined();

  public static final String JSON_PROPERTY_LOCAL_ID = "local_id";
  private JsonNullable<String> localId = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_LOCAL_ID_CONTAINS = "local_id_contains";
  private JsonNullable<String> localIdContains = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_LOCAL_ID_ENDS_WITH = "local_id_ends_with";
  private JsonNullable<String> localIdEndsWith = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_LOCAL_ID_GT = "local_id_gt";
  private JsonNullable<String> localIdGt = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_LOCAL_ID_GTE = "local_id_gte";
  private JsonNullable<String> localIdGte = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_LOCAL_ID_IN = "local_id_in";
  private JsonNullable<List<String>> localIdIn = JsonNullable.<List<String>>undefined();

  public static final String JSON_PROPERTY_LOCAL_ID_LT = "local_id_lt";
  private JsonNullable<String> localIdLt = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_LOCAL_ID_LTE = "local_id_lte";
  private JsonNullable<String> localIdLte = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_LOCAL_ID_NOT = "local_id_not";
  private JsonNullable<String> localIdNot = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_LOCAL_ID_NOT_CONTAINS = "local_id_not_contains";
  private JsonNullable<String> localIdNotContains = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_LOCAL_ID_NOT_ENDS_WITH = "local_id_not_ends_with";
  private JsonNullable<String> localIdNotEndsWith = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_LOCAL_ID_NOT_IN = "local_id_not_in";
  private JsonNullable<List<String>> localIdNotIn = JsonNullable.<List<String>>undefined();

  public static final String JSON_PROPERTY_LOCAL_ID_NOT_STARTS_WITH = "local_id_not_starts_with";
  private JsonNullable<String> localIdNotStartsWith = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_LOCAL_ID_STARTS_WITH = "local_id_starts_with";
  private JsonNullable<String> localIdStartsWith = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_N_O_T = "NOT";
  private JsonNullable<List<SnapshotPlanTaskWhereInput>> NOT = JsonNullable.<List<SnapshotPlanTaskWhereInput>>undefined();

  public static final String JSON_PROPERTY_O_R = "OR";
  private JsonNullable<List<SnapshotPlanTaskWhereInput>> OR = JsonNullable.<List<SnapshotPlanTaskWhereInput>>undefined();

  public static final String JSON_PROPERTY_SNAPSHOT_GROUP = "snapshotGroup";
  private JsonNullable<SnapshotGroupWhereInput> snapshotGroup = JsonNullable.<SnapshotGroupWhereInput>undefined();

  public static final String JSON_PROPERTY_SNAPSHOT_PLAN = "snapshotPlan";
  private JsonNullable<SnapshotPlanWhereInput> snapshotPlan = JsonNullable.<SnapshotPlanWhereInput>undefined();

  public static final String JSON_PROPERTY_START_TIME = "start_time";
  private JsonNullable<String> startTime = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_START_TIME_GT = "start_time_gt";
  private JsonNullable<String> startTimeGt = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_START_TIME_GTE = "start_time_gte";
  private JsonNullable<String> startTimeGte = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_START_TIME_IN = "start_time_in";
  private JsonNullable<List<String>> startTimeIn = JsonNullable.<List<String>>undefined();

  public static final String JSON_PROPERTY_START_TIME_LT = "start_time_lt";
  private JsonNullable<String> startTimeLt = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_START_TIME_LTE = "start_time_lte";
  private JsonNullable<String> startTimeLte = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_START_TIME_NOT = "start_time_not";
  private JsonNullable<String> startTimeNot = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_START_TIME_NOT_IN = "start_time_not_in";
  private JsonNullable<List<String>> startTimeNotIn = JsonNullable.<List<String>>undefined();

  public static final String JSON_PROPERTY_STATUS = "status";
  private JsonNullable<SnapshotPlanExecuteStatus> status = JsonNullable.<SnapshotPlanExecuteStatus>undefined();

  public static final String JSON_PROPERTY_STATUS_IN = "status_in";
  private JsonNullable<List<SnapshotPlanExecuteStatus>> statusIn = JsonNullable.<List<SnapshotPlanExecuteStatus>>undefined();

  public static final String JSON_PROPERTY_STATUS_NOT = "status_not";
  private JsonNullable<SnapshotPlanExecuteStatus> statusNot = JsonNullable.<SnapshotPlanExecuteStatus>undefined();

  public static final String JSON_PROPERTY_STATUS_NOT_IN = "status_not_in";
  private JsonNullable<List<SnapshotPlanExecuteStatus>> statusNotIn = JsonNullable.<List<SnapshotPlanExecuteStatus>>undefined();

  public static final String JSON_PROPERTY_TYPE = "type";
  private JsonNullable<SnapshotPlanTaskType> type = JsonNullable.<SnapshotPlanTaskType>undefined();

  public static final String JSON_PROPERTY_TYPE_IN = "type_in";
  private JsonNullable<List<SnapshotPlanTaskType>> typeIn = JsonNullable.<List<SnapshotPlanTaskType>>undefined();

  public static final String JSON_PROPERTY_TYPE_NOT = "type_not";
  private JsonNullable<SnapshotPlanTaskType> typeNot = JsonNullable.<SnapshotPlanTaskType>undefined();

  public static final String JSON_PROPERTY_TYPE_NOT_IN = "type_not_in";
  private JsonNullable<List<SnapshotPlanTaskType>> typeNotIn = JsonNullable.<List<SnapshotPlanTaskType>>undefined();


  public SnapshotPlanTaskWhereInput AND(List<SnapshotPlanTaskWhereInput> AND) {
    this.AND = JsonNullable.<List<SnapshotPlanTaskWhereInput>>of(AND);
    return this;
  }

  public SnapshotPlanTaskWhereInput addANDItem(SnapshotPlanTaskWhereInput ANDItem) {
    if (this.AND == null || !this.AND.isPresent()) {
      this.AND = JsonNullable.<List<SnapshotPlanTaskWhereInput>>of(new ArrayList<>());
    }
    try {
      this.AND.get().add(ANDItem);
    } catch (java.util.NoSuchElementException e) {
      // this can never happen, as we make sure above that the value is present
    }
    return this;
  }

   /**
   * Get AND
   * @return AND
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public List<SnapshotPlanTaskWhereInput> getAND() {
        return AND.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_A_N_D)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<List<SnapshotPlanTaskWhereInput>> getAND_JsonNullable() {
    return AND;
  }
  
  @JsonProperty(JSON_PROPERTY_A_N_D)
  public void setAND_JsonNullable(JsonNullable<List<SnapshotPlanTaskWhereInput>> AND) {
    this.AND = AND;
  }

  public void setAND(List<SnapshotPlanTaskWhereInput> AND) {
    this.AND = JsonNullable.<List<SnapshotPlanTaskWhereInput>>of(AND);
  }


  public SnapshotPlanTaskWhereInput cluster(ClusterWhereInput cluster) {
    this.cluster = JsonNullable.<ClusterWhereInput>of(cluster);
    return this;
  }

   /**
   * Get cluster
   * @return cluster
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public ClusterWhereInput getCluster() {
        return cluster.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_CLUSTER)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<ClusterWhereInput> getCluster_JsonNullable() {
    return cluster;
  }
  
  @JsonProperty(JSON_PROPERTY_CLUSTER)
  public void setCluster_JsonNullable(JsonNullable<ClusterWhereInput> cluster) {
    this.cluster = cluster;
  }

  public void setCluster(ClusterWhereInput cluster) {
    this.cluster = JsonNullable.<ClusterWhereInput>of(cluster);
  }


  public SnapshotPlanTaskWhereInput endTime(String endTime) {
    this.endTime = JsonNullable.<String>of(endTime);
    return this;
  }

   /**
   * Get endTime
   * @return endTime
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getEndTime() {
        return endTime.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_END_TIME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getEndTime_JsonNullable() {
    return endTime;
  }
  
  @JsonProperty(JSON_PROPERTY_END_TIME)
  public void setEndTime_JsonNullable(JsonNullable<String> endTime) {
    this.endTime = endTime;
  }

  public void setEndTime(String endTime) {
    this.endTime = JsonNullable.<String>of(endTime);
  }


  public SnapshotPlanTaskWhereInput endTimeGt(String endTimeGt) {
    this.endTimeGt = JsonNullable.<String>of(endTimeGt);
    return this;
  }

   /**
   * Get endTimeGt
   * @return endTimeGt
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getEndTimeGt() {
        return endTimeGt.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_END_TIME_GT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getEndTimeGt_JsonNullable() {
    return endTimeGt;
  }
  
  @JsonProperty(JSON_PROPERTY_END_TIME_GT)
  public void setEndTimeGt_JsonNullable(JsonNullable<String> endTimeGt) {
    this.endTimeGt = endTimeGt;
  }

  public void setEndTimeGt(String endTimeGt) {
    this.endTimeGt = JsonNullable.<String>of(endTimeGt);
  }


  public SnapshotPlanTaskWhereInput endTimeGte(String endTimeGte) {
    this.endTimeGte = JsonNullable.<String>of(endTimeGte);
    return this;
  }

   /**
   * Get endTimeGte
   * @return endTimeGte
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getEndTimeGte() {
        return endTimeGte.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_END_TIME_GTE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getEndTimeGte_JsonNullable() {
    return endTimeGte;
  }
  
  @JsonProperty(JSON_PROPERTY_END_TIME_GTE)
  public void setEndTimeGte_JsonNullable(JsonNullable<String> endTimeGte) {
    this.endTimeGte = endTimeGte;
  }

  public void setEndTimeGte(String endTimeGte) {
    this.endTimeGte = JsonNullable.<String>of(endTimeGte);
  }


  public SnapshotPlanTaskWhereInput endTimeIn(List<String> endTimeIn) {
    this.endTimeIn = JsonNullable.<List<String>>of(endTimeIn);
    return this;
  }

  public SnapshotPlanTaskWhereInput addEndTimeInItem(String endTimeInItem) {
    if (this.endTimeIn == null || !this.endTimeIn.isPresent()) {
      this.endTimeIn = JsonNullable.<List<String>>of(new ArrayList<>());
    }
    try {
      this.endTimeIn.get().add(endTimeInItem);
    } catch (java.util.NoSuchElementException e) {
      // this can never happen, as we make sure above that the value is present
    }
    return this;
  }

   /**
   * Get endTimeIn
   * @return endTimeIn
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public List<String> getEndTimeIn() {
        return endTimeIn.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_END_TIME_IN)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<List<String>> getEndTimeIn_JsonNullable() {
    return endTimeIn;
  }
  
  @JsonProperty(JSON_PROPERTY_END_TIME_IN)
  public void setEndTimeIn_JsonNullable(JsonNullable<List<String>> endTimeIn) {
    this.endTimeIn = endTimeIn;
  }

  public void setEndTimeIn(List<String> endTimeIn) {
    this.endTimeIn = JsonNullable.<List<String>>of(endTimeIn);
  }


  public SnapshotPlanTaskWhereInput endTimeLt(String endTimeLt) {
    this.endTimeLt = JsonNullable.<String>of(endTimeLt);
    return this;
  }

   /**
   * Get endTimeLt
   * @return endTimeLt
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getEndTimeLt() {
        return endTimeLt.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_END_TIME_LT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getEndTimeLt_JsonNullable() {
    return endTimeLt;
  }
  
  @JsonProperty(JSON_PROPERTY_END_TIME_LT)
  public void setEndTimeLt_JsonNullable(JsonNullable<String> endTimeLt) {
    this.endTimeLt = endTimeLt;
  }

  public void setEndTimeLt(String endTimeLt) {
    this.endTimeLt = JsonNullable.<String>of(endTimeLt);
  }


  public SnapshotPlanTaskWhereInput endTimeLte(String endTimeLte) {
    this.endTimeLte = JsonNullable.<String>of(endTimeLte);
    return this;
  }

   /**
   * Get endTimeLte
   * @return endTimeLte
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getEndTimeLte() {
        return endTimeLte.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_END_TIME_LTE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getEndTimeLte_JsonNullable() {
    return endTimeLte;
  }
  
  @JsonProperty(JSON_PROPERTY_END_TIME_LTE)
  public void setEndTimeLte_JsonNullable(JsonNullable<String> endTimeLte) {
    this.endTimeLte = endTimeLte;
  }

  public void setEndTimeLte(String endTimeLte) {
    this.endTimeLte = JsonNullable.<String>of(endTimeLte);
  }


  public SnapshotPlanTaskWhereInput endTimeNot(String endTimeNot) {
    this.endTimeNot = JsonNullable.<String>of(endTimeNot);
    return this;
  }

   /**
   * Get endTimeNot
   * @return endTimeNot
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getEndTimeNot() {
        return endTimeNot.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_END_TIME_NOT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getEndTimeNot_JsonNullable() {
    return endTimeNot;
  }
  
  @JsonProperty(JSON_PROPERTY_END_TIME_NOT)
  public void setEndTimeNot_JsonNullable(JsonNullable<String> endTimeNot) {
    this.endTimeNot = endTimeNot;
  }

  public void setEndTimeNot(String endTimeNot) {
    this.endTimeNot = JsonNullable.<String>of(endTimeNot);
  }


  public SnapshotPlanTaskWhereInput endTimeNotIn(List<String> endTimeNotIn) {
    this.endTimeNotIn = JsonNullable.<List<String>>of(endTimeNotIn);
    return this;
  }

  public SnapshotPlanTaskWhereInput addEndTimeNotInItem(String endTimeNotInItem) {
    if (this.endTimeNotIn == null || !this.endTimeNotIn.isPresent()) {
      this.endTimeNotIn = JsonNullable.<List<String>>of(new ArrayList<>());
    }
    try {
      this.endTimeNotIn.get().add(endTimeNotInItem);
    } catch (java.util.NoSuchElementException e) {
      // this can never happen, as we make sure above that the value is present
    }
    return this;
  }

   /**
   * Get endTimeNotIn
   * @return endTimeNotIn
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public List<String> getEndTimeNotIn() {
        return endTimeNotIn.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_END_TIME_NOT_IN)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<List<String>> getEndTimeNotIn_JsonNullable() {
    return endTimeNotIn;
  }
  
  @JsonProperty(JSON_PROPERTY_END_TIME_NOT_IN)
  public void setEndTimeNotIn_JsonNullable(JsonNullable<List<String>> endTimeNotIn) {
    this.endTimeNotIn = endTimeNotIn;
  }

  public void setEndTimeNotIn(List<String> endTimeNotIn) {
    this.endTimeNotIn = JsonNullable.<List<String>>of(endTimeNotIn);
  }


  public SnapshotPlanTaskWhereInput entityAsyncStatus(EntityAsyncStatus entityAsyncStatus) {
    this.entityAsyncStatus = JsonNullable.<EntityAsyncStatus>of(entityAsyncStatus);
    return this;
  }

   /**
   * Get entityAsyncStatus
   * @return entityAsyncStatus
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public EntityAsyncStatus getEntityAsyncStatus() {
        return entityAsyncStatus.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_ENTITY_ASYNC_STATUS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<EntityAsyncStatus> getEntityAsyncStatus_JsonNullable() {
    return entityAsyncStatus;
  }
  
  @JsonProperty(JSON_PROPERTY_ENTITY_ASYNC_STATUS)
  public void setEntityAsyncStatus_JsonNullable(JsonNullable<EntityAsyncStatus> entityAsyncStatus) {
    this.entityAsyncStatus = entityAsyncStatus;
  }

  public void setEntityAsyncStatus(EntityAsyncStatus entityAsyncStatus) {
    this.entityAsyncStatus = JsonNullable.<EntityAsyncStatus>of(entityAsyncStatus);
  }


  public SnapshotPlanTaskWhereInput entityAsyncStatusIn(List<EntityAsyncStatus> entityAsyncStatusIn) {
    this.entityAsyncStatusIn = JsonNullable.<List<EntityAsyncStatus>>of(entityAsyncStatusIn);
    return this;
  }

  public SnapshotPlanTaskWhereInput addEntityAsyncStatusInItem(EntityAsyncStatus entityAsyncStatusInItem) {
    if (this.entityAsyncStatusIn == null || !this.entityAsyncStatusIn.isPresent()) {
      this.entityAsyncStatusIn = JsonNullable.<List<EntityAsyncStatus>>of(new ArrayList<>());
    }
    try {
      this.entityAsyncStatusIn.get().add(entityAsyncStatusInItem);
    } catch (java.util.NoSuchElementException e) {
      // this can never happen, as we make sure above that the value is present
    }
    return this;
  }

   /**
   * Get entityAsyncStatusIn
   * @return entityAsyncStatusIn
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public List<EntityAsyncStatus> getEntityAsyncStatusIn() {
        return entityAsyncStatusIn.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_ENTITY_ASYNC_STATUS_IN)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<List<EntityAsyncStatus>> getEntityAsyncStatusIn_JsonNullable() {
    return entityAsyncStatusIn;
  }
  
  @JsonProperty(JSON_PROPERTY_ENTITY_ASYNC_STATUS_IN)
  public void setEntityAsyncStatusIn_JsonNullable(JsonNullable<List<EntityAsyncStatus>> entityAsyncStatusIn) {
    this.entityAsyncStatusIn = entityAsyncStatusIn;
  }

  public void setEntityAsyncStatusIn(List<EntityAsyncStatus> entityAsyncStatusIn) {
    this.entityAsyncStatusIn = JsonNullable.<List<EntityAsyncStatus>>of(entityAsyncStatusIn);
  }


  public SnapshotPlanTaskWhereInput entityAsyncStatusNot(EntityAsyncStatus entityAsyncStatusNot) {
    this.entityAsyncStatusNot = JsonNullable.<EntityAsyncStatus>of(entityAsyncStatusNot);
    return this;
  }

   /**
   * Get entityAsyncStatusNot
   * @return entityAsyncStatusNot
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public EntityAsyncStatus getEntityAsyncStatusNot() {
        return entityAsyncStatusNot.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_ENTITY_ASYNC_STATUS_NOT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<EntityAsyncStatus> getEntityAsyncStatusNot_JsonNullable() {
    return entityAsyncStatusNot;
  }
  
  @JsonProperty(JSON_PROPERTY_ENTITY_ASYNC_STATUS_NOT)
  public void setEntityAsyncStatusNot_JsonNullable(JsonNullable<EntityAsyncStatus> entityAsyncStatusNot) {
    this.entityAsyncStatusNot = entityAsyncStatusNot;
  }

  public void setEntityAsyncStatusNot(EntityAsyncStatus entityAsyncStatusNot) {
    this.entityAsyncStatusNot = JsonNullable.<EntityAsyncStatus>of(entityAsyncStatusNot);
  }


  public SnapshotPlanTaskWhereInput entityAsyncStatusNotIn(List<EntityAsyncStatus> entityAsyncStatusNotIn) {
    this.entityAsyncStatusNotIn = JsonNullable.<List<EntityAsyncStatus>>of(entityAsyncStatusNotIn);
    return this;
  }

  public SnapshotPlanTaskWhereInput addEntityAsyncStatusNotInItem(EntityAsyncStatus entityAsyncStatusNotInItem) {
    if (this.entityAsyncStatusNotIn == null || !this.entityAsyncStatusNotIn.isPresent()) {
      this.entityAsyncStatusNotIn = JsonNullable.<List<EntityAsyncStatus>>of(new ArrayList<>());
    }
    try {
      this.entityAsyncStatusNotIn.get().add(entityAsyncStatusNotInItem);
    } catch (java.util.NoSuchElementException e) {
      // this can never happen, as we make sure above that the value is present
    }
    return this;
  }

   /**
   * Get entityAsyncStatusNotIn
   * @return entityAsyncStatusNotIn
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public List<EntityAsyncStatus> getEntityAsyncStatusNotIn() {
        return entityAsyncStatusNotIn.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_ENTITY_ASYNC_STATUS_NOT_IN)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<List<EntityAsyncStatus>> getEntityAsyncStatusNotIn_JsonNullable() {
    return entityAsyncStatusNotIn;
  }
  
  @JsonProperty(JSON_PROPERTY_ENTITY_ASYNC_STATUS_NOT_IN)
  public void setEntityAsyncStatusNotIn_JsonNullable(JsonNullable<List<EntityAsyncStatus>> entityAsyncStatusNotIn) {
    this.entityAsyncStatusNotIn = entityAsyncStatusNotIn;
  }

  public void setEntityAsyncStatusNotIn(List<EntityAsyncStatus> entityAsyncStatusNotIn) {
    this.entityAsyncStatusNotIn = JsonNullable.<List<EntityAsyncStatus>>of(entityAsyncStatusNotIn);
  }


  public SnapshotPlanTaskWhereInput id(String id) {
    this.id = JsonNullable.<String>of(id);
    return this;
  }

   /**
   * Get id
   * @return id
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getId() {
        return id.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getId_JsonNullable() {
    return id;
  }
  
  @JsonProperty(JSON_PROPERTY_ID)
  public void setId_JsonNullable(JsonNullable<String> id) {
    this.id = id;
  }

  public void setId(String id) {
    this.id = JsonNullable.<String>of(id);
  }


  public SnapshotPlanTaskWhereInput idContains(String idContains) {
    this.idContains = JsonNullable.<String>of(idContains);
    return this;
  }

   /**
   * Get idContains
   * @return idContains
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getIdContains() {
        return idContains.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_ID_CONTAINS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getIdContains_JsonNullable() {
    return idContains;
  }
  
  @JsonProperty(JSON_PROPERTY_ID_CONTAINS)
  public void setIdContains_JsonNullable(JsonNullable<String> idContains) {
    this.idContains = idContains;
  }

  public void setIdContains(String idContains) {
    this.idContains = JsonNullable.<String>of(idContains);
  }


  public SnapshotPlanTaskWhereInput idEndsWith(String idEndsWith) {
    this.idEndsWith = JsonNullable.<String>of(idEndsWith);
    return this;
  }

   /**
   * Get idEndsWith
   * @return idEndsWith
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getIdEndsWith() {
        return idEndsWith.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_ID_ENDS_WITH)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getIdEndsWith_JsonNullable() {
    return idEndsWith;
  }
  
  @JsonProperty(JSON_PROPERTY_ID_ENDS_WITH)
  public void setIdEndsWith_JsonNullable(JsonNullable<String> idEndsWith) {
    this.idEndsWith = idEndsWith;
  }

  public void setIdEndsWith(String idEndsWith) {
    this.idEndsWith = JsonNullable.<String>of(idEndsWith);
  }


  public SnapshotPlanTaskWhereInput idGt(String idGt) {
    this.idGt = JsonNullable.<String>of(idGt);
    return this;
  }

   /**
   * Get idGt
   * @return idGt
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getIdGt() {
        return idGt.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_ID_GT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getIdGt_JsonNullable() {
    return idGt;
  }
  
  @JsonProperty(JSON_PROPERTY_ID_GT)
  public void setIdGt_JsonNullable(JsonNullable<String> idGt) {
    this.idGt = idGt;
  }

  public void setIdGt(String idGt) {
    this.idGt = JsonNullable.<String>of(idGt);
  }


  public SnapshotPlanTaskWhereInput idGte(String idGte) {
    this.idGte = JsonNullable.<String>of(idGte);
    return this;
  }

   /**
   * Get idGte
   * @return idGte
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getIdGte() {
        return idGte.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_ID_GTE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getIdGte_JsonNullable() {
    return idGte;
  }
  
  @JsonProperty(JSON_PROPERTY_ID_GTE)
  public void setIdGte_JsonNullable(JsonNullable<String> idGte) {
    this.idGte = idGte;
  }

  public void setIdGte(String idGte) {
    this.idGte = JsonNullable.<String>of(idGte);
  }


  public SnapshotPlanTaskWhereInput idIn(List<String> idIn) {
    this.idIn = JsonNullable.<List<String>>of(idIn);
    return this;
  }

  public SnapshotPlanTaskWhereInput addIdInItem(String idInItem) {
    if (this.idIn == null || !this.idIn.isPresent()) {
      this.idIn = JsonNullable.<List<String>>of(new ArrayList<>());
    }
    try {
      this.idIn.get().add(idInItem);
    } catch (java.util.NoSuchElementException e) {
      // this can never happen, as we make sure above that the value is present
    }
    return this;
  }

   /**
   * Get idIn
   * @return idIn
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public List<String> getIdIn() {
        return idIn.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_ID_IN)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<List<String>> getIdIn_JsonNullable() {
    return idIn;
  }
  
  @JsonProperty(JSON_PROPERTY_ID_IN)
  public void setIdIn_JsonNullable(JsonNullable<List<String>> idIn) {
    this.idIn = idIn;
  }

  public void setIdIn(List<String> idIn) {
    this.idIn = JsonNullable.<List<String>>of(idIn);
  }


  public SnapshotPlanTaskWhereInput idLt(String idLt) {
    this.idLt = JsonNullable.<String>of(idLt);
    return this;
  }

   /**
   * Get idLt
   * @return idLt
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getIdLt() {
        return idLt.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_ID_LT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getIdLt_JsonNullable() {
    return idLt;
  }
  
  @JsonProperty(JSON_PROPERTY_ID_LT)
  public void setIdLt_JsonNullable(JsonNullable<String> idLt) {
    this.idLt = idLt;
  }

  public void setIdLt(String idLt) {
    this.idLt = JsonNullable.<String>of(idLt);
  }


  public SnapshotPlanTaskWhereInput idLte(String idLte) {
    this.idLte = JsonNullable.<String>of(idLte);
    return this;
  }

   /**
   * Get idLte
   * @return idLte
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getIdLte() {
        return idLte.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_ID_LTE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getIdLte_JsonNullable() {
    return idLte;
  }
  
  @JsonProperty(JSON_PROPERTY_ID_LTE)
  public void setIdLte_JsonNullable(JsonNullable<String> idLte) {
    this.idLte = idLte;
  }

  public void setIdLte(String idLte) {
    this.idLte = JsonNullable.<String>of(idLte);
  }


  public SnapshotPlanTaskWhereInput idNot(String idNot) {
    this.idNot = JsonNullable.<String>of(idNot);
    return this;
  }

   /**
   * Get idNot
   * @return idNot
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getIdNot() {
        return idNot.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_ID_NOT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getIdNot_JsonNullable() {
    return idNot;
  }
  
  @JsonProperty(JSON_PROPERTY_ID_NOT)
  public void setIdNot_JsonNullable(JsonNullable<String> idNot) {
    this.idNot = idNot;
  }

  public void setIdNot(String idNot) {
    this.idNot = JsonNullable.<String>of(idNot);
  }


  public SnapshotPlanTaskWhereInput idNotContains(String idNotContains) {
    this.idNotContains = JsonNullable.<String>of(idNotContains);
    return this;
  }

   /**
   * Get idNotContains
   * @return idNotContains
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getIdNotContains() {
        return idNotContains.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_ID_NOT_CONTAINS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getIdNotContains_JsonNullable() {
    return idNotContains;
  }
  
  @JsonProperty(JSON_PROPERTY_ID_NOT_CONTAINS)
  public void setIdNotContains_JsonNullable(JsonNullable<String> idNotContains) {
    this.idNotContains = idNotContains;
  }

  public void setIdNotContains(String idNotContains) {
    this.idNotContains = JsonNullable.<String>of(idNotContains);
  }


  public SnapshotPlanTaskWhereInput idNotEndsWith(String idNotEndsWith) {
    this.idNotEndsWith = JsonNullable.<String>of(idNotEndsWith);
    return this;
  }

   /**
   * Get idNotEndsWith
   * @return idNotEndsWith
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getIdNotEndsWith() {
        return idNotEndsWith.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_ID_NOT_ENDS_WITH)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getIdNotEndsWith_JsonNullable() {
    return idNotEndsWith;
  }
  
  @JsonProperty(JSON_PROPERTY_ID_NOT_ENDS_WITH)
  public void setIdNotEndsWith_JsonNullable(JsonNullable<String> idNotEndsWith) {
    this.idNotEndsWith = idNotEndsWith;
  }

  public void setIdNotEndsWith(String idNotEndsWith) {
    this.idNotEndsWith = JsonNullable.<String>of(idNotEndsWith);
  }


  public SnapshotPlanTaskWhereInput idNotIn(List<String> idNotIn) {
    this.idNotIn = JsonNullable.<List<String>>of(idNotIn);
    return this;
  }

  public SnapshotPlanTaskWhereInput addIdNotInItem(String idNotInItem) {
    if (this.idNotIn == null || !this.idNotIn.isPresent()) {
      this.idNotIn = JsonNullable.<List<String>>of(new ArrayList<>());
    }
    try {
      this.idNotIn.get().add(idNotInItem);
    } catch (java.util.NoSuchElementException e) {
      // this can never happen, as we make sure above that the value is present
    }
    return this;
  }

   /**
   * Get idNotIn
   * @return idNotIn
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public List<String> getIdNotIn() {
        return idNotIn.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_ID_NOT_IN)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<List<String>> getIdNotIn_JsonNullable() {
    return idNotIn;
  }
  
  @JsonProperty(JSON_PROPERTY_ID_NOT_IN)
  public void setIdNotIn_JsonNullable(JsonNullable<List<String>> idNotIn) {
    this.idNotIn = idNotIn;
  }

  public void setIdNotIn(List<String> idNotIn) {
    this.idNotIn = JsonNullable.<List<String>>of(idNotIn);
  }


  public SnapshotPlanTaskWhereInput idNotStartsWith(String idNotStartsWith) {
    this.idNotStartsWith = JsonNullable.<String>of(idNotStartsWith);
    return this;
  }

   /**
   * Get idNotStartsWith
   * @return idNotStartsWith
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getIdNotStartsWith() {
        return idNotStartsWith.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_ID_NOT_STARTS_WITH)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getIdNotStartsWith_JsonNullable() {
    return idNotStartsWith;
  }
  
  @JsonProperty(JSON_PROPERTY_ID_NOT_STARTS_WITH)
  public void setIdNotStartsWith_JsonNullable(JsonNullable<String> idNotStartsWith) {
    this.idNotStartsWith = idNotStartsWith;
  }

  public void setIdNotStartsWith(String idNotStartsWith) {
    this.idNotStartsWith = JsonNullable.<String>of(idNotStartsWith);
  }


  public SnapshotPlanTaskWhereInput idStartsWith(String idStartsWith) {
    this.idStartsWith = JsonNullable.<String>of(idStartsWith);
    return this;
  }

   /**
   * Get idStartsWith
   * @return idStartsWith
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getIdStartsWith() {
        return idStartsWith.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_ID_STARTS_WITH)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getIdStartsWith_JsonNullable() {
    return idStartsWith;
  }
  
  @JsonProperty(JSON_PROPERTY_ID_STARTS_WITH)
  public void setIdStartsWith_JsonNullable(JsonNullable<String> idStartsWith) {
    this.idStartsWith = idStartsWith;
  }

  public void setIdStartsWith(String idStartsWith) {
    this.idStartsWith = JsonNullable.<String>of(idStartsWith);
  }


  public SnapshotPlanTaskWhereInput internal(Boolean internal) {
    this.internal = JsonNullable.<Boolean>of(internal);
    return this;
  }

   /**
   * Get internal
   * @return internal
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public Boolean getInternal() {
        return internal.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_INTERNAL)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<Boolean> getInternal_JsonNullable() {
    return internal;
  }
  
  @JsonProperty(JSON_PROPERTY_INTERNAL)
  public void setInternal_JsonNullable(JsonNullable<Boolean> internal) {
    this.internal = internal;
  }

  public void setInternal(Boolean internal) {
    this.internal = JsonNullable.<Boolean>of(internal);
  }


  public SnapshotPlanTaskWhereInput internalNot(Boolean internalNot) {
    this.internalNot = JsonNullable.<Boolean>of(internalNot);
    return this;
  }

   /**
   * Get internalNot
   * @return internalNot
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public Boolean getInternalNot() {
        return internalNot.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_INTERNAL_NOT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<Boolean> getInternalNot_JsonNullable() {
    return internalNot;
  }
  
  @JsonProperty(JSON_PROPERTY_INTERNAL_NOT)
  public void setInternalNot_JsonNullable(JsonNullable<Boolean> internalNot) {
    this.internalNot = internalNot;
  }

  public void setInternalNot(Boolean internalNot) {
    this.internalNot = JsonNullable.<Boolean>of(internalNot);
  }


  public SnapshotPlanTaskWhereInput localId(String localId) {
    this.localId = JsonNullable.<String>of(localId);
    return this;
  }

   /**
   * Get localId
   * @return localId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getLocalId() {
        return localId.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_LOCAL_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getLocalId_JsonNullable() {
    return localId;
  }
  
  @JsonProperty(JSON_PROPERTY_LOCAL_ID)
  public void setLocalId_JsonNullable(JsonNullable<String> localId) {
    this.localId = localId;
  }

  public void setLocalId(String localId) {
    this.localId = JsonNullable.<String>of(localId);
  }


  public SnapshotPlanTaskWhereInput localIdContains(String localIdContains) {
    this.localIdContains = JsonNullable.<String>of(localIdContains);
    return this;
  }

   /**
   * Get localIdContains
   * @return localIdContains
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getLocalIdContains() {
        return localIdContains.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_LOCAL_ID_CONTAINS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getLocalIdContains_JsonNullable() {
    return localIdContains;
  }
  
  @JsonProperty(JSON_PROPERTY_LOCAL_ID_CONTAINS)
  public void setLocalIdContains_JsonNullable(JsonNullable<String> localIdContains) {
    this.localIdContains = localIdContains;
  }

  public void setLocalIdContains(String localIdContains) {
    this.localIdContains = JsonNullable.<String>of(localIdContains);
  }


  public SnapshotPlanTaskWhereInput localIdEndsWith(String localIdEndsWith) {
    this.localIdEndsWith = JsonNullable.<String>of(localIdEndsWith);
    return this;
  }

   /**
   * Get localIdEndsWith
   * @return localIdEndsWith
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getLocalIdEndsWith() {
        return localIdEndsWith.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_LOCAL_ID_ENDS_WITH)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getLocalIdEndsWith_JsonNullable() {
    return localIdEndsWith;
  }
  
  @JsonProperty(JSON_PROPERTY_LOCAL_ID_ENDS_WITH)
  public void setLocalIdEndsWith_JsonNullable(JsonNullable<String> localIdEndsWith) {
    this.localIdEndsWith = localIdEndsWith;
  }

  public void setLocalIdEndsWith(String localIdEndsWith) {
    this.localIdEndsWith = JsonNullable.<String>of(localIdEndsWith);
  }


  public SnapshotPlanTaskWhereInput localIdGt(String localIdGt) {
    this.localIdGt = JsonNullable.<String>of(localIdGt);
    return this;
  }

   /**
   * Get localIdGt
   * @return localIdGt
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getLocalIdGt() {
        return localIdGt.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_LOCAL_ID_GT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getLocalIdGt_JsonNullable() {
    return localIdGt;
  }
  
  @JsonProperty(JSON_PROPERTY_LOCAL_ID_GT)
  public void setLocalIdGt_JsonNullable(JsonNullable<String> localIdGt) {
    this.localIdGt = localIdGt;
  }

  public void setLocalIdGt(String localIdGt) {
    this.localIdGt = JsonNullable.<String>of(localIdGt);
  }


  public SnapshotPlanTaskWhereInput localIdGte(String localIdGte) {
    this.localIdGte = JsonNullable.<String>of(localIdGte);
    return this;
  }

   /**
   * Get localIdGte
   * @return localIdGte
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getLocalIdGte() {
        return localIdGte.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_LOCAL_ID_GTE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getLocalIdGte_JsonNullable() {
    return localIdGte;
  }
  
  @JsonProperty(JSON_PROPERTY_LOCAL_ID_GTE)
  public void setLocalIdGte_JsonNullable(JsonNullable<String> localIdGte) {
    this.localIdGte = localIdGte;
  }

  public void setLocalIdGte(String localIdGte) {
    this.localIdGte = JsonNullable.<String>of(localIdGte);
  }


  public SnapshotPlanTaskWhereInput localIdIn(List<String> localIdIn) {
    this.localIdIn = JsonNullable.<List<String>>of(localIdIn);
    return this;
  }

  public SnapshotPlanTaskWhereInput addLocalIdInItem(String localIdInItem) {
    if (this.localIdIn == null || !this.localIdIn.isPresent()) {
      this.localIdIn = JsonNullable.<List<String>>of(new ArrayList<>());
    }
    try {
      this.localIdIn.get().add(localIdInItem);
    } catch (java.util.NoSuchElementException e) {
      // this can never happen, as we make sure above that the value is present
    }
    return this;
  }

   /**
   * Get localIdIn
   * @return localIdIn
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public List<String> getLocalIdIn() {
        return localIdIn.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_LOCAL_ID_IN)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<List<String>> getLocalIdIn_JsonNullable() {
    return localIdIn;
  }
  
  @JsonProperty(JSON_PROPERTY_LOCAL_ID_IN)
  public void setLocalIdIn_JsonNullable(JsonNullable<List<String>> localIdIn) {
    this.localIdIn = localIdIn;
  }

  public void setLocalIdIn(List<String> localIdIn) {
    this.localIdIn = JsonNullable.<List<String>>of(localIdIn);
  }


  public SnapshotPlanTaskWhereInput localIdLt(String localIdLt) {
    this.localIdLt = JsonNullable.<String>of(localIdLt);
    return this;
  }

   /**
   * Get localIdLt
   * @return localIdLt
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getLocalIdLt() {
        return localIdLt.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_LOCAL_ID_LT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getLocalIdLt_JsonNullable() {
    return localIdLt;
  }
  
  @JsonProperty(JSON_PROPERTY_LOCAL_ID_LT)
  public void setLocalIdLt_JsonNullable(JsonNullable<String> localIdLt) {
    this.localIdLt = localIdLt;
  }

  public void setLocalIdLt(String localIdLt) {
    this.localIdLt = JsonNullable.<String>of(localIdLt);
  }


  public SnapshotPlanTaskWhereInput localIdLte(String localIdLte) {
    this.localIdLte = JsonNullable.<String>of(localIdLte);
    return this;
  }

   /**
   * Get localIdLte
   * @return localIdLte
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getLocalIdLte() {
        return localIdLte.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_LOCAL_ID_LTE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getLocalIdLte_JsonNullable() {
    return localIdLte;
  }
  
  @JsonProperty(JSON_PROPERTY_LOCAL_ID_LTE)
  public void setLocalIdLte_JsonNullable(JsonNullable<String> localIdLte) {
    this.localIdLte = localIdLte;
  }

  public void setLocalIdLte(String localIdLte) {
    this.localIdLte = JsonNullable.<String>of(localIdLte);
  }


  public SnapshotPlanTaskWhereInput localIdNot(String localIdNot) {
    this.localIdNot = JsonNullable.<String>of(localIdNot);
    return this;
  }

   /**
   * Get localIdNot
   * @return localIdNot
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getLocalIdNot() {
        return localIdNot.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_LOCAL_ID_NOT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getLocalIdNot_JsonNullable() {
    return localIdNot;
  }
  
  @JsonProperty(JSON_PROPERTY_LOCAL_ID_NOT)
  public void setLocalIdNot_JsonNullable(JsonNullable<String> localIdNot) {
    this.localIdNot = localIdNot;
  }

  public void setLocalIdNot(String localIdNot) {
    this.localIdNot = JsonNullable.<String>of(localIdNot);
  }


  public SnapshotPlanTaskWhereInput localIdNotContains(String localIdNotContains) {
    this.localIdNotContains = JsonNullable.<String>of(localIdNotContains);
    return this;
  }

   /**
   * Get localIdNotContains
   * @return localIdNotContains
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getLocalIdNotContains() {
        return localIdNotContains.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_LOCAL_ID_NOT_CONTAINS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getLocalIdNotContains_JsonNullable() {
    return localIdNotContains;
  }
  
  @JsonProperty(JSON_PROPERTY_LOCAL_ID_NOT_CONTAINS)
  public void setLocalIdNotContains_JsonNullable(JsonNullable<String> localIdNotContains) {
    this.localIdNotContains = localIdNotContains;
  }

  public void setLocalIdNotContains(String localIdNotContains) {
    this.localIdNotContains = JsonNullable.<String>of(localIdNotContains);
  }


  public SnapshotPlanTaskWhereInput localIdNotEndsWith(String localIdNotEndsWith) {
    this.localIdNotEndsWith = JsonNullable.<String>of(localIdNotEndsWith);
    return this;
  }

   /**
   * Get localIdNotEndsWith
   * @return localIdNotEndsWith
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getLocalIdNotEndsWith() {
        return localIdNotEndsWith.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_LOCAL_ID_NOT_ENDS_WITH)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getLocalIdNotEndsWith_JsonNullable() {
    return localIdNotEndsWith;
  }
  
  @JsonProperty(JSON_PROPERTY_LOCAL_ID_NOT_ENDS_WITH)
  public void setLocalIdNotEndsWith_JsonNullable(JsonNullable<String> localIdNotEndsWith) {
    this.localIdNotEndsWith = localIdNotEndsWith;
  }

  public void setLocalIdNotEndsWith(String localIdNotEndsWith) {
    this.localIdNotEndsWith = JsonNullable.<String>of(localIdNotEndsWith);
  }


  public SnapshotPlanTaskWhereInput localIdNotIn(List<String> localIdNotIn) {
    this.localIdNotIn = JsonNullable.<List<String>>of(localIdNotIn);
    return this;
  }

  public SnapshotPlanTaskWhereInput addLocalIdNotInItem(String localIdNotInItem) {
    if (this.localIdNotIn == null || !this.localIdNotIn.isPresent()) {
      this.localIdNotIn = JsonNullable.<List<String>>of(new ArrayList<>());
    }
    try {
      this.localIdNotIn.get().add(localIdNotInItem);
    } catch (java.util.NoSuchElementException e) {
      // this can never happen, as we make sure above that the value is present
    }
    return this;
  }

   /**
   * Get localIdNotIn
   * @return localIdNotIn
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public List<String> getLocalIdNotIn() {
        return localIdNotIn.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_LOCAL_ID_NOT_IN)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<List<String>> getLocalIdNotIn_JsonNullable() {
    return localIdNotIn;
  }
  
  @JsonProperty(JSON_PROPERTY_LOCAL_ID_NOT_IN)
  public void setLocalIdNotIn_JsonNullable(JsonNullable<List<String>> localIdNotIn) {
    this.localIdNotIn = localIdNotIn;
  }

  public void setLocalIdNotIn(List<String> localIdNotIn) {
    this.localIdNotIn = JsonNullable.<List<String>>of(localIdNotIn);
  }


  public SnapshotPlanTaskWhereInput localIdNotStartsWith(String localIdNotStartsWith) {
    this.localIdNotStartsWith = JsonNullable.<String>of(localIdNotStartsWith);
    return this;
  }

   /**
   * Get localIdNotStartsWith
   * @return localIdNotStartsWith
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getLocalIdNotStartsWith() {
        return localIdNotStartsWith.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_LOCAL_ID_NOT_STARTS_WITH)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getLocalIdNotStartsWith_JsonNullable() {
    return localIdNotStartsWith;
  }
  
  @JsonProperty(JSON_PROPERTY_LOCAL_ID_NOT_STARTS_WITH)
  public void setLocalIdNotStartsWith_JsonNullable(JsonNullable<String> localIdNotStartsWith) {
    this.localIdNotStartsWith = localIdNotStartsWith;
  }

  public void setLocalIdNotStartsWith(String localIdNotStartsWith) {
    this.localIdNotStartsWith = JsonNullable.<String>of(localIdNotStartsWith);
  }


  public SnapshotPlanTaskWhereInput localIdStartsWith(String localIdStartsWith) {
    this.localIdStartsWith = JsonNullable.<String>of(localIdStartsWith);
    return this;
  }

   /**
   * Get localIdStartsWith
   * @return localIdStartsWith
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getLocalIdStartsWith() {
        return localIdStartsWith.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_LOCAL_ID_STARTS_WITH)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getLocalIdStartsWith_JsonNullable() {
    return localIdStartsWith;
  }
  
  @JsonProperty(JSON_PROPERTY_LOCAL_ID_STARTS_WITH)
  public void setLocalIdStartsWith_JsonNullable(JsonNullable<String> localIdStartsWith) {
    this.localIdStartsWith = localIdStartsWith;
  }

  public void setLocalIdStartsWith(String localIdStartsWith) {
    this.localIdStartsWith = JsonNullable.<String>of(localIdStartsWith);
  }


  public SnapshotPlanTaskWhereInput NOT(List<SnapshotPlanTaskWhereInput> NOT) {
    this.NOT = JsonNullable.<List<SnapshotPlanTaskWhereInput>>of(NOT);
    return this;
  }

  public SnapshotPlanTaskWhereInput addNOTItem(SnapshotPlanTaskWhereInput NOTItem) {
    if (this.NOT == null || !this.NOT.isPresent()) {
      this.NOT = JsonNullable.<List<SnapshotPlanTaskWhereInput>>of(new ArrayList<>());
    }
    try {
      this.NOT.get().add(NOTItem);
    } catch (java.util.NoSuchElementException e) {
      // this can never happen, as we make sure above that the value is present
    }
    return this;
  }

   /**
   * Get NOT
   * @return NOT
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public List<SnapshotPlanTaskWhereInput> getNOT() {
        return NOT.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_N_O_T)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<List<SnapshotPlanTaskWhereInput>> getNOT_JsonNullable() {
    return NOT;
  }
  
  @JsonProperty(JSON_PROPERTY_N_O_T)
  public void setNOT_JsonNullable(JsonNullable<List<SnapshotPlanTaskWhereInput>> NOT) {
    this.NOT = NOT;
  }

  public void setNOT(List<SnapshotPlanTaskWhereInput> NOT) {
    this.NOT = JsonNullable.<List<SnapshotPlanTaskWhereInput>>of(NOT);
  }


  public SnapshotPlanTaskWhereInput OR(List<SnapshotPlanTaskWhereInput> OR) {
    this.OR = JsonNullable.<List<SnapshotPlanTaskWhereInput>>of(OR);
    return this;
  }

  public SnapshotPlanTaskWhereInput addORItem(SnapshotPlanTaskWhereInput ORItem) {
    if (this.OR == null || !this.OR.isPresent()) {
      this.OR = JsonNullable.<List<SnapshotPlanTaskWhereInput>>of(new ArrayList<>());
    }
    try {
      this.OR.get().add(ORItem);
    } catch (java.util.NoSuchElementException e) {
      // this can never happen, as we make sure above that the value is present
    }
    return this;
  }

   /**
   * Get OR
   * @return OR
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public List<SnapshotPlanTaskWhereInput> getOR() {
        return OR.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_O_R)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<List<SnapshotPlanTaskWhereInput>> getOR_JsonNullable() {
    return OR;
  }
  
  @JsonProperty(JSON_PROPERTY_O_R)
  public void setOR_JsonNullable(JsonNullable<List<SnapshotPlanTaskWhereInput>> OR) {
    this.OR = OR;
  }

  public void setOR(List<SnapshotPlanTaskWhereInput> OR) {
    this.OR = JsonNullable.<List<SnapshotPlanTaskWhereInput>>of(OR);
  }


  public SnapshotPlanTaskWhereInput snapshotGroup(SnapshotGroupWhereInput snapshotGroup) {
    this.snapshotGroup = JsonNullable.<SnapshotGroupWhereInput>of(snapshotGroup);
    return this;
  }

   /**
   * Get snapshotGroup
   * @return snapshotGroup
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public SnapshotGroupWhereInput getSnapshotGroup() {
        return snapshotGroup.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_SNAPSHOT_GROUP)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<SnapshotGroupWhereInput> getSnapshotGroup_JsonNullable() {
    return snapshotGroup;
  }
  
  @JsonProperty(JSON_PROPERTY_SNAPSHOT_GROUP)
  public void setSnapshotGroup_JsonNullable(JsonNullable<SnapshotGroupWhereInput> snapshotGroup) {
    this.snapshotGroup = snapshotGroup;
  }

  public void setSnapshotGroup(SnapshotGroupWhereInput snapshotGroup) {
    this.snapshotGroup = JsonNullable.<SnapshotGroupWhereInput>of(snapshotGroup);
  }


  public SnapshotPlanTaskWhereInput snapshotPlan(SnapshotPlanWhereInput snapshotPlan) {
    this.snapshotPlan = JsonNullable.<SnapshotPlanWhereInput>of(snapshotPlan);
    return this;
  }

   /**
   * Get snapshotPlan
   * @return snapshotPlan
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public SnapshotPlanWhereInput getSnapshotPlan() {
        return snapshotPlan.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_SNAPSHOT_PLAN)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<SnapshotPlanWhereInput> getSnapshotPlan_JsonNullable() {
    return snapshotPlan;
  }
  
  @JsonProperty(JSON_PROPERTY_SNAPSHOT_PLAN)
  public void setSnapshotPlan_JsonNullable(JsonNullable<SnapshotPlanWhereInput> snapshotPlan) {
    this.snapshotPlan = snapshotPlan;
  }

  public void setSnapshotPlan(SnapshotPlanWhereInput snapshotPlan) {
    this.snapshotPlan = JsonNullable.<SnapshotPlanWhereInput>of(snapshotPlan);
  }


  public SnapshotPlanTaskWhereInput startTime(String startTime) {
    this.startTime = JsonNullable.<String>of(startTime);
    return this;
  }

   /**
   * Get startTime
   * @return startTime
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getStartTime() {
        return startTime.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_START_TIME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getStartTime_JsonNullable() {
    return startTime;
  }
  
  @JsonProperty(JSON_PROPERTY_START_TIME)
  public void setStartTime_JsonNullable(JsonNullable<String> startTime) {
    this.startTime = startTime;
  }

  public void setStartTime(String startTime) {
    this.startTime = JsonNullable.<String>of(startTime);
  }


  public SnapshotPlanTaskWhereInput startTimeGt(String startTimeGt) {
    this.startTimeGt = JsonNullable.<String>of(startTimeGt);
    return this;
  }

   /**
   * Get startTimeGt
   * @return startTimeGt
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getStartTimeGt() {
        return startTimeGt.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_START_TIME_GT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getStartTimeGt_JsonNullable() {
    return startTimeGt;
  }
  
  @JsonProperty(JSON_PROPERTY_START_TIME_GT)
  public void setStartTimeGt_JsonNullable(JsonNullable<String> startTimeGt) {
    this.startTimeGt = startTimeGt;
  }

  public void setStartTimeGt(String startTimeGt) {
    this.startTimeGt = JsonNullable.<String>of(startTimeGt);
  }


  public SnapshotPlanTaskWhereInput startTimeGte(String startTimeGte) {
    this.startTimeGte = JsonNullable.<String>of(startTimeGte);
    return this;
  }

   /**
   * Get startTimeGte
   * @return startTimeGte
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getStartTimeGte() {
        return startTimeGte.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_START_TIME_GTE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getStartTimeGte_JsonNullable() {
    return startTimeGte;
  }
  
  @JsonProperty(JSON_PROPERTY_START_TIME_GTE)
  public void setStartTimeGte_JsonNullable(JsonNullable<String> startTimeGte) {
    this.startTimeGte = startTimeGte;
  }

  public void setStartTimeGte(String startTimeGte) {
    this.startTimeGte = JsonNullable.<String>of(startTimeGte);
  }


  public SnapshotPlanTaskWhereInput startTimeIn(List<String> startTimeIn) {
    this.startTimeIn = JsonNullable.<List<String>>of(startTimeIn);
    return this;
  }

  public SnapshotPlanTaskWhereInput addStartTimeInItem(String startTimeInItem) {
    if (this.startTimeIn == null || !this.startTimeIn.isPresent()) {
      this.startTimeIn = JsonNullable.<List<String>>of(new ArrayList<>());
    }
    try {
      this.startTimeIn.get().add(startTimeInItem);
    } catch (java.util.NoSuchElementException e) {
      // this can never happen, as we make sure above that the value is present
    }
    return this;
  }

   /**
   * Get startTimeIn
   * @return startTimeIn
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public List<String> getStartTimeIn() {
        return startTimeIn.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_START_TIME_IN)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<List<String>> getStartTimeIn_JsonNullable() {
    return startTimeIn;
  }
  
  @JsonProperty(JSON_PROPERTY_START_TIME_IN)
  public void setStartTimeIn_JsonNullable(JsonNullable<List<String>> startTimeIn) {
    this.startTimeIn = startTimeIn;
  }

  public void setStartTimeIn(List<String> startTimeIn) {
    this.startTimeIn = JsonNullable.<List<String>>of(startTimeIn);
  }


  public SnapshotPlanTaskWhereInput startTimeLt(String startTimeLt) {
    this.startTimeLt = JsonNullable.<String>of(startTimeLt);
    return this;
  }

   /**
   * Get startTimeLt
   * @return startTimeLt
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getStartTimeLt() {
        return startTimeLt.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_START_TIME_LT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getStartTimeLt_JsonNullable() {
    return startTimeLt;
  }
  
  @JsonProperty(JSON_PROPERTY_START_TIME_LT)
  public void setStartTimeLt_JsonNullable(JsonNullable<String> startTimeLt) {
    this.startTimeLt = startTimeLt;
  }

  public void setStartTimeLt(String startTimeLt) {
    this.startTimeLt = JsonNullable.<String>of(startTimeLt);
  }


  public SnapshotPlanTaskWhereInput startTimeLte(String startTimeLte) {
    this.startTimeLte = JsonNullable.<String>of(startTimeLte);
    return this;
  }

   /**
   * Get startTimeLte
   * @return startTimeLte
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getStartTimeLte() {
        return startTimeLte.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_START_TIME_LTE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getStartTimeLte_JsonNullable() {
    return startTimeLte;
  }
  
  @JsonProperty(JSON_PROPERTY_START_TIME_LTE)
  public void setStartTimeLte_JsonNullable(JsonNullable<String> startTimeLte) {
    this.startTimeLte = startTimeLte;
  }

  public void setStartTimeLte(String startTimeLte) {
    this.startTimeLte = JsonNullable.<String>of(startTimeLte);
  }


  public SnapshotPlanTaskWhereInput startTimeNot(String startTimeNot) {
    this.startTimeNot = JsonNullable.<String>of(startTimeNot);
    return this;
  }

   /**
   * Get startTimeNot
   * @return startTimeNot
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getStartTimeNot() {
        return startTimeNot.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_START_TIME_NOT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getStartTimeNot_JsonNullable() {
    return startTimeNot;
  }
  
  @JsonProperty(JSON_PROPERTY_START_TIME_NOT)
  public void setStartTimeNot_JsonNullable(JsonNullable<String> startTimeNot) {
    this.startTimeNot = startTimeNot;
  }

  public void setStartTimeNot(String startTimeNot) {
    this.startTimeNot = JsonNullable.<String>of(startTimeNot);
  }


  public SnapshotPlanTaskWhereInput startTimeNotIn(List<String> startTimeNotIn) {
    this.startTimeNotIn = JsonNullable.<List<String>>of(startTimeNotIn);
    return this;
  }

  public SnapshotPlanTaskWhereInput addStartTimeNotInItem(String startTimeNotInItem) {
    if (this.startTimeNotIn == null || !this.startTimeNotIn.isPresent()) {
      this.startTimeNotIn = JsonNullable.<List<String>>of(new ArrayList<>());
    }
    try {
      this.startTimeNotIn.get().add(startTimeNotInItem);
    } catch (java.util.NoSuchElementException e) {
      // this can never happen, as we make sure above that the value is present
    }
    return this;
  }

   /**
   * Get startTimeNotIn
   * @return startTimeNotIn
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public List<String> getStartTimeNotIn() {
        return startTimeNotIn.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_START_TIME_NOT_IN)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<List<String>> getStartTimeNotIn_JsonNullable() {
    return startTimeNotIn;
  }
  
  @JsonProperty(JSON_PROPERTY_START_TIME_NOT_IN)
  public void setStartTimeNotIn_JsonNullable(JsonNullable<List<String>> startTimeNotIn) {
    this.startTimeNotIn = startTimeNotIn;
  }

  public void setStartTimeNotIn(List<String> startTimeNotIn) {
    this.startTimeNotIn = JsonNullable.<List<String>>of(startTimeNotIn);
  }


  public SnapshotPlanTaskWhereInput status(SnapshotPlanExecuteStatus status) {
    this.status = JsonNullable.<SnapshotPlanExecuteStatus>of(status);
    return this;
  }

   /**
   * Get status
   * @return status
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public SnapshotPlanExecuteStatus getStatus() {
        return status.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_STATUS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<SnapshotPlanExecuteStatus> getStatus_JsonNullable() {
    return status;
  }
  
  @JsonProperty(JSON_PROPERTY_STATUS)
  public void setStatus_JsonNullable(JsonNullable<SnapshotPlanExecuteStatus> status) {
    this.status = status;
  }

  public void setStatus(SnapshotPlanExecuteStatus status) {
    this.status = JsonNullable.<SnapshotPlanExecuteStatus>of(status);
  }


  public SnapshotPlanTaskWhereInput statusIn(List<SnapshotPlanExecuteStatus> statusIn) {
    this.statusIn = JsonNullable.<List<SnapshotPlanExecuteStatus>>of(statusIn);
    return this;
  }

  public SnapshotPlanTaskWhereInput addStatusInItem(SnapshotPlanExecuteStatus statusInItem) {
    if (this.statusIn == null || !this.statusIn.isPresent()) {
      this.statusIn = JsonNullable.<List<SnapshotPlanExecuteStatus>>of(new ArrayList<>());
    }
    try {
      this.statusIn.get().add(statusInItem);
    } catch (java.util.NoSuchElementException e) {
      // this can never happen, as we make sure above that the value is present
    }
    return this;
  }

   /**
   * Get statusIn
   * @return statusIn
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public List<SnapshotPlanExecuteStatus> getStatusIn() {
        return statusIn.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_STATUS_IN)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<List<SnapshotPlanExecuteStatus>> getStatusIn_JsonNullable() {
    return statusIn;
  }
  
  @JsonProperty(JSON_PROPERTY_STATUS_IN)
  public void setStatusIn_JsonNullable(JsonNullable<List<SnapshotPlanExecuteStatus>> statusIn) {
    this.statusIn = statusIn;
  }

  public void setStatusIn(List<SnapshotPlanExecuteStatus> statusIn) {
    this.statusIn = JsonNullable.<List<SnapshotPlanExecuteStatus>>of(statusIn);
  }


  public SnapshotPlanTaskWhereInput statusNot(SnapshotPlanExecuteStatus statusNot) {
    this.statusNot = JsonNullable.<SnapshotPlanExecuteStatus>of(statusNot);
    return this;
  }

   /**
   * Get statusNot
   * @return statusNot
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public SnapshotPlanExecuteStatus getStatusNot() {
        return statusNot.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_STATUS_NOT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<SnapshotPlanExecuteStatus> getStatusNot_JsonNullable() {
    return statusNot;
  }
  
  @JsonProperty(JSON_PROPERTY_STATUS_NOT)
  public void setStatusNot_JsonNullable(JsonNullable<SnapshotPlanExecuteStatus> statusNot) {
    this.statusNot = statusNot;
  }

  public void setStatusNot(SnapshotPlanExecuteStatus statusNot) {
    this.statusNot = JsonNullable.<SnapshotPlanExecuteStatus>of(statusNot);
  }


  public SnapshotPlanTaskWhereInput statusNotIn(List<SnapshotPlanExecuteStatus> statusNotIn) {
    this.statusNotIn = JsonNullable.<List<SnapshotPlanExecuteStatus>>of(statusNotIn);
    return this;
  }

  public SnapshotPlanTaskWhereInput addStatusNotInItem(SnapshotPlanExecuteStatus statusNotInItem) {
    if (this.statusNotIn == null || !this.statusNotIn.isPresent()) {
      this.statusNotIn = JsonNullable.<List<SnapshotPlanExecuteStatus>>of(new ArrayList<>());
    }
    try {
      this.statusNotIn.get().add(statusNotInItem);
    } catch (java.util.NoSuchElementException e) {
      // this can never happen, as we make sure above that the value is present
    }
    return this;
  }

   /**
   * Get statusNotIn
   * @return statusNotIn
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public List<SnapshotPlanExecuteStatus> getStatusNotIn() {
        return statusNotIn.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_STATUS_NOT_IN)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<List<SnapshotPlanExecuteStatus>> getStatusNotIn_JsonNullable() {
    return statusNotIn;
  }
  
  @JsonProperty(JSON_PROPERTY_STATUS_NOT_IN)
  public void setStatusNotIn_JsonNullable(JsonNullable<List<SnapshotPlanExecuteStatus>> statusNotIn) {
    this.statusNotIn = statusNotIn;
  }

  public void setStatusNotIn(List<SnapshotPlanExecuteStatus> statusNotIn) {
    this.statusNotIn = JsonNullable.<List<SnapshotPlanExecuteStatus>>of(statusNotIn);
  }


  public SnapshotPlanTaskWhereInput type(SnapshotPlanTaskType type) {
    this.type = JsonNullable.<SnapshotPlanTaskType>of(type);
    return this;
  }

   /**
   * Get type
   * @return type
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public SnapshotPlanTaskType getType() {
        return type.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_TYPE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<SnapshotPlanTaskType> getType_JsonNullable() {
    return type;
  }
  
  @JsonProperty(JSON_PROPERTY_TYPE)
  public void setType_JsonNullable(JsonNullable<SnapshotPlanTaskType> type) {
    this.type = type;
  }

  public void setType(SnapshotPlanTaskType type) {
    this.type = JsonNullable.<SnapshotPlanTaskType>of(type);
  }


  public SnapshotPlanTaskWhereInput typeIn(List<SnapshotPlanTaskType> typeIn) {
    this.typeIn = JsonNullable.<List<SnapshotPlanTaskType>>of(typeIn);
    return this;
  }

  public SnapshotPlanTaskWhereInput addTypeInItem(SnapshotPlanTaskType typeInItem) {
    if (this.typeIn == null || !this.typeIn.isPresent()) {
      this.typeIn = JsonNullable.<List<SnapshotPlanTaskType>>of(new ArrayList<>());
    }
    try {
      this.typeIn.get().add(typeInItem);
    } catch (java.util.NoSuchElementException e) {
      // this can never happen, as we make sure above that the value is present
    }
    return this;
  }

   /**
   * Get typeIn
   * @return typeIn
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public List<SnapshotPlanTaskType> getTypeIn() {
        return typeIn.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_TYPE_IN)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<List<SnapshotPlanTaskType>> getTypeIn_JsonNullable() {
    return typeIn;
  }
  
  @JsonProperty(JSON_PROPERTY_TYPE_IN)
  public void setTypeIn_JsonNullable(JsonNullable<List<SnapshotPlanTaskType>> typeIn) {
    this.typeIn = typeIn;
  }

  public void setTypeIn(List<SnapshotPlanTaskType> typeIn) {
    this.typeIn = JsonNullable.<List<SnapshotPlanTaskType>>of(typeIn);
  }


  public SnapshotPlanTaskWhereInput typeNot(SnapshotPlanTaskType typeNot) {
    this.typeNot = JsonNullable.<SnapshotPlanTaskType>of(typeNot);
    return this;
  }

   /**
   * Get typeNot
   * @return typeNot
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public SnapshotPlanTaskType getTypeNot() {
        return typeNot.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_TYPE_NOT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<SnapshotPlanTaskType> getTypeNot_JsonNullable() {
    return typeNot;
  }
  
  @JsonProperty(JSON_PROPERTY_TYPE_NOT)
  public void setTypeNot_JsonNullable(JsonNullable<SnapshotPlanTaskType> typeNot) {
    this.typeNot = typeNot;
  }

  public void setTypeNot(SnapshotPlanTaskType typeNot) {
    this.typeNot = JsonNullable.<SnapshotPlanTaskType>of(typeNot);
  }


  public SnapshotPlanTaskWhereInput typeNotIn(List<SnapshotPlanTaskType> typeNotIn) {
    this.typeNotIn = JsonNullable.<List<SnapshotPlanTaskType>>of(typeNotIn);
    return this;
  }

  public SnapshotPlanTaskWhereInput addTypeNotInItem(SnapshotPlanTaskType typeNotInItem) {
    if (this.typeNotIn == null || !this.typeNotIn.isPresent()) {
      this.typeNotIn = JsonNullable.<List<SnapshotPlanTaskType>>of(new ArrayList<>());
    }
    try {
      this.typeNotIn.get().add(typeNotInItem);
    } catch (java.util.NoSuchElementException e) {
      // this can never happen, as we make sure above that the value is present
    }
    return this;
  }

   /**
   * Get typeNotIn
   * @return typeNotIn
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public List<SnapshotPlanTaskType> getTypeNotIn() {
        return typeNotIn.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_TYPE_NOT_IN)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<List<SnapshotPlanTaskType>> getTypeNotIn_JsonNullable() {
    return typeNotIn;
  }
  
  @JsonProperty(JSON_PROPERTY_TYPE_NOT_IN)
  public void setTypeNotIn_JsonNullable(JsonNullable<List<SnapshotPlanTaskType>> typeNotIn) {
    this.typeNotIn = typeNotIn;
  }

  public void setTypeNotIn(List<SnapshotPlanTaskType> typeNotIn) {
    this.typeNotIn = JsonNullable.<List<SnapshotPlanTaskType>>of(typeNotIn);
  }


  /**
   * Return true if this SnapshotPlanTaskWhereInput object is equal to o.
   */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    SnapshotPlanTaskWhereInput snapshotPlanTaskWhereInput = (SnapshotPlanTaskWhereInput) o;
    return equalsNullable(this.AND, snapshotPlanTaskWhereInput.AND) &&
        equalsNullable(this.cluster, snapshotPlanTaskWhereInput.cluster) &&
        equalsNullable(this.endTime, snapshotPlanTaskWhereInput.endTime) &&
        equalsNullable(this.endTimeGt, snapshotPlanTaskWhereInput.endTimeGt) &&
        equalsNullable(this.endTimeGte, snapshotPlanTaskWhereInput.endTimeGte) &&
        equalsNullable(this.endTimeIn, snapshotPlanTaskWhereInput.endTimeIn) &&
        equalsNullable(this.endTimeLt, snapshotPlanTaskWhereInput.endTimeLt) &&
        equalsNullable(this.endTimeLte, snapshotPlanTaskWhereInput.endTimeLte) &&
        equalsNullable(this.endTimeNot, snapshotPlanTaskWhereInput.endTimeNot) &&
        equalsNullable(this.endTimeNotIn, snapshotPlanTaskWhereInput.endTimeNotIn) &&
        equalsNullable(this.entityAsyncStatus, snapshotPlanTaskWhereInput.entityAsyncStatus) &&
        equalsNullable(this.entityAsyncStatusIn, snapshotPlanTaskWhereInput.entityAsyncStatusIn) &&
        equalsNullable(this.entityAsyncStatusNot, snapshotPlanTaskWhereInput.entityAsyncStatusNot) &&
        equalsNullable(this.entityAsyncStatusNotIn, snapshotPlanTaskWhereInput.entityAsyncStatusNotIn) &&
        equalsNullable(this.id, snapshotPlanTaskWhereInput.id) &&
        equalsNullable(this.idContains, snapshotPlanTaskWhereInput.idContains) &&
        equalsNullable(this.idEndsWith, snapshotPlanTaskWhereInput.idEndsWith) &&
        equalsNullable(this.idGt, snapshotPlanTaskWhereInput.idGt) &&
        equalsNullable(this.idGte, snapshotPlanTaskWhereInput.idGte) &&
        equalsNullable(this.idIn, snapshotPlanTaskWhereInput.idIn) &&
        equalsNullable(this.idLt, snapshotPlanTaskWhereInput.idLt) &&
        equalsNullable(this.idLte, snapshotPlanTaskWhereInput.idLte) &&
        equalsNullable(this.idNot, snapshotPlanTaskWhereInput.idNot) &&
        equalsNullable(this.idNotContains, snapshotPlanTaskWhereInput.idNotContains) &&
        equalsNullable(this.idNotEndsWith, snapshotPlanTaskWhereInput.idNotEndsWith) &&
        equalsNullable(this.idNotIn, snapshotPlanTaskWhereInput.idNotIn) &&
        equalsNullable(this.idNotStartsWith, snapshotPlanTaskWhereInput.idNotStartsWith) &&
        equalsNullable(this.idStartsWith, snapshotPlanTaskWhereInput.idStartsWith) &&
        equalsNullable(this.internal, snapshotPlanTaskWhereInput.internal) &&
        equalsNullable(this.internalNot, snapshotPlanTaskWhereInput.internalNot) &&
        equalsNullable(this.localId, snapshotPlanTaskWhereInput.localId) &&
        equalsNullable(this.localIdContains, snapshotPlanTaskWhereInput.localIdContains) &&
        equalsNullable(this.localIdEndsWith, snapshotPlanTaskWhereInput.localIdEndsWith) &&
        equalsNullable(this.localIdGt, snapshotPlanTaskWhereInput.localIdGt) &&
        equalsNullable(this.localIdGte, snapshotPlanTaskWhereInput.localIdGte) &&
        equalsNullable(this.localIdIn, snapshotPlanTaskWhereInput.localIdIn) &&
        equalsNullable(this.localIdLt, snapshotPlanTaskWhereInput.localIdLt) &&
        equalsNullable(this.localIdLte, snapshotPlanTaskWhereInput.localIdLte) &&
        equalsNullable(this.localIdNot, snapshotPlanTaskWhereInput.localIdNot) &&
        equalsNullable(this.localIdNotContains, snapshotPlanTaskWhereInput.localIdNotContains) &&
        equalsNullable(this.localIdNotEndsWith, snapshotPlanTaskWhereInput.localIdNotEndsWith) &&
        equalsNullable(this.localIdNotIn, snapshotPlanTaskWhereInput.localIdNotIn) &&
        equalsNullable(this.localIdNotStartsWith, snapshotPlanTaskWhereInput.localIdNotStartsWith) &&
        equalsNullable(this.localIdStartsWith, snapshotPlanTaskWhereInput.localIdStartsWith) &&
        equalsNullable(this.NOT, snapshotPlanTaskWhereInput.NOT) &&
        equalsNullable(this.OR, snapshotPlanTaskWhereInput.OR) &&
        equalsNullable(this.snapshotGroup, snapshotPlanTaskWhereInput.snapshotGroup) &&
        equalsNullable(this.snapshotPlan, snapshotPlanTaskWhereInput.snapshotPlan) &&
        equalsNullable(this.startTime, snapshotPlanTaskWhereInput.startTime) &&
        equalsNullable(this.startTimeGt, snapshotPlanTaskWhereInput.startTimeGt) &&
        equalsNullable(this.startTimeGte, snapshotPlanTaskWhereInput.startTimeGte) &&
        equalsNullable(this.startTimeIn, snapshotPlanTaskWhereInput.startTimeIn) &&
        equalsNullable(this.startTimeLt, snapshotPlanTaskWhereInput.startTimeLt) &&
        equalsNullable(this.startTimeLte, snapshotPlanTaskWhereInput.startTimeLte) &&
        equalsNullable(this.startTimeNot, snapshotPlanTaskWhereInput.startTimeNot) &&
        equalsNullable(this.startTimeNotIn, snapshotPlanTaskWhereInput.startTimeNotIn) &&
        equalsNullable(this.status, snapshotPlanTaskWhereInput.status) &&
        equalsNullable(this.statusIn, snapshotPlanTaskWhereInput.statusIn) &&
        equalsNullable(this.statusNot, snapshotPlanTaskWhereInput.statusNot) &&
        equalsNullable(this.statusNotIn, snapshotPlanTaskWhereInput.statusNotIn) &&
        equalsNullable(this.type, snapshotPlanTaskWhereInput.type) &&
        equalsNullable(this.typeIn, snapshotPlanTaskWhereInput.typeIn) &&
        equalsNullable(this.typeNot, snapshotPlanTaskWhereInput.typeNot) &&
        equalsNullable(this.typeNotIn, snapshotPlanTaskWhereInput.typeNotIn);
  }

  private static <T> boolean equalsNullable(JsonNullable<T> a, JsonNullable<T> b) {
    return a == b || (a != null && b != null && a.isPresent() && b.isPresent() && Objects.deepEquals(a.get(), b.get()));
  }

  @Override
  public int hashCode() {
    return Objects.hash(hashCodeNullable(AND), hashCodeNullable(cluster), hashCodeNullable(endTime), hashCodeNullable(endTimeGt), hashCodeNullable(endTimeGte), hashCodeNullable(endTimeIn), hashCodeNullable(endTimeLt), hashCodeNullable(endTimeLte), hashCodeNullable(endTimeNot), hashCodeNullable(endTimeNotIn), hashCodeNullable(entityAsyncStatus), hashCodeNullable(entityAsyncStatusIn), hashCodeNullable(entityAsyncStatusNot), hashCodeNullable(entityAsyncStatusNotIn), hashCodeNullable(id), hashCodeNullable(idContains), hashCodeNullable(idEndsWith), hashCodeNullable(idGt), hashCodeNullable(idGte), hashCodeNullable(idIn), hashCodeNullable(idLt), hashCodeNullable(idLte), hashCodeNullable(idNot), hashCodeNullable(idNotContains), hashCodeNullable(idNotEndsWith), hashCodeNullable(idNotIn), hashCodeNullable(idNotStartsWith), hashCodeNullable(idStartsWith), hashCodeNullable(internal), hashCodeNullable(internalNot), hashCodeNullable(localId), hashCodeNullable(localIdContains), hashCodeNullable(localIdEndsWith), hashCodeNullable(localIdGt), hashCodeNullable(localIdGte), hashCodeNullable(localIdIn), hashCodeNullable(localIdLt), hashCodeNullable(localIdLte), hashCodeNullable(localIdNot), hashCodeNullable(localIdNotContains), hashCodeNullable(localIdNotEndsWith), hashCodeNullable(localIdNotIn), hashCodeNullable(localIdNotStartsWith), hashCodeNullable(localIdStartsWith), hashCodeNullable(NOT), hashCodeNullable(OR), hashCodeNullable(snapshotGroup), hashCodeNullable(snapshotPlan), hashCodeNullable(startTime), hashCodeNullable(startTimeGt), hashCodeNullable(startTimeGte), hashCodeNullable(startTimeIn), hashCodeNullable(startTimeLt), hashCodeNullable(startTimeLte), hashCodeNullable(startTimeNot), hashCodeNullable(startTimeNotIn), hashCodeNullable(status), hashCodeNullable(statusIn), hashCodeNullable(statusNot), hashCodeNullable(statusNotIn), hashCodeNullable(type), hashCodeNullable(typeIn), hashCodeNullable(typeNot), hashCodeNullable(typeNotIn));
  }

  private static <T> int hashCodeNullable(JsonNullable<T> a) {
    if (a == null) {
      return 1;
    }
    return a.isPresent() ? Arrays.deepHashCode(new Object[]{a.get()}) : 31;
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class SnapshotPlanTaskWhereInput {\n");
    sb.append("    AND: ").append(toIndentedString(AND)).append("\n");
    sb.append("    cluster: ").append(toIndentedString(cluster)).append("\n");
    sb.append("    endTime: ").append(toIndentedString(endTime)).append("\n");
    sb.append("    endTimeGt: ").append(toIndentedString(endTimeGt)).append("\n");
    sb.append("    endTimeGte: ").append(toIndentedString(endTimeGte)).append("\n");
    sb.append("    endTimeIn: ").append(toIndentedString(endTimeIn)).append("\n");
    sb.append("    endTimeLt: ").append(toIndentedString(endTimeLt)).append("\n");
    sb.append("    endTimeLte: ").append(toIndentedString(endTimeLte)).append("\n");
    sb.append("    endTimeNot: ").append(toIndentedString(endTimeNot)).append("\n");
    sb.append("    endTimeNotIn: ").append(toIndentedString(endTimeNotIn)).append("\n");
    sb.append("    entityAsyncStatus: ").append(toIndentedString(entityAsyncStatus)).append("\n");
    sb.append("    entityAsyncStatusIn: ").append(toIndentedString(entityAsyncStatusIn)).append("\n");
    sb.append("    entityAsyncStatusNot: ").append(toIndentedString(entityAsyncStatusNot)).append("\n");
    sb.append("    entityAsyncStatusNotIn: ").append(toIndentedString(entityAsyncStatusNotIn)).append("\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    idContains: ").append(toIndentedString(idContains)).append("\n");
    sb.append("    idEndsWith: ").append(toIndentedString(idEndsWith)).append("\n");
    sb.append("    idGt: ").append(toIndentedString(idGt)).append("\n");
    sb.append("    idGte: ").append(toIndentedString(idGte)).append("\n");
    sb.append("    idIn: ").append(toIndentedString(idIn)).append("\n");
    sb.append("    idLt: ").append(toIndentedString(idLt)).append("\n");
    sb.append("    idLte: ").append(toIndentedString(idLte)).append("\n");
    sb.append("    idNot: ").append(toIndentedString(idNot)).append("\n");
    sb.append("    idNotContains: ").append(toIndentedString(idNotContains)).append("\n");
    sb.append("    idNotEndsWith: ").append(toIndentedString(idNotEndsWith)).append("\n");
    sb.append("    idNotIn: ").append(toIndentedString(idNotIn)).append("\n");
    sb.append("    idNotStartsWith: ").append(toIndentedString(idNotStartsWith)).append("\n");
    sb.append("    idStartsWith: ").append(toIndentedString(idStartsWith)).append("\n");
    sb.append("    internal: ").append(toIndentedString(internal)).append("\n");
    sb.append("    internalNot: ").append(toIndentedString(internalNot)).append("\n");
    sb.append("    localId: ").append(toIndentedString(localId)).append("\n");
    sb.append("    localIdContains: ").append(toIndentedString(localIdContains)).append("\n");
    sb.append("    localIdEndsWith: ").append(toIndentedString(localIdEndsWith)).append("\n");
    sb.append("    localIdGt: ").append(toIndentedString(localIdGt)).append("\n");
    sb.append("    localIdGte: ").append(toIndentedString(localIdGte)).append("\n");
    sb.append("    localIdIn: ").append(toIndentedString(localIdIn)).append("\n");
    sb.append("    localIdLt: ").append(toIndentedString(localIdLt)).append("\n");
    sb.append("    localIdLte: ").append(toIndentedString(localIdLte)).append("\n");
    sb.append("    localIdNot: ").append(toIndentedString(localIdNot)).append("\n");
    sb.append("    localIdNotContains: ").append(toIndentedString(localIdNotContains)).append("\n");
    sb.append("    localIdNotEndsWith: ").append(toIndentedString(localIdNotEndsWith)).append("\n");
    sb.append("    localIdNotIn: ").append(toIndentedString(localIdNotIn)).append("\n");
    sb.append("    localIdNotStartsWith: ").append(toIndentedString(localIdNotStartsWith)).append("\n");
    sb.append("    localIdStartsWith: ").append(toIndentedString(localIdStartsWith)).append("\n");
    sb.append("    NOT: ").append(toIndentedString(NOT)).append("\n");
    sb.append("    OR: ").append(toIndentedString(OR)).append("\n");
    sb.append("    snapshotGroup: ").append(toIndentedString(snapshotGroup)).append("\n");
    sb.append("    snapshotPlan: ").append(toIndentedString(snapshotPlan)).append("\n");
    sb.append("    startTime: ").append(toIndentedString(startTime)).append("\n");
    sb.append("    startTimeGt: ").append(toIndentedString(startTimeGt)).append("\n");
    sb.append("    startTimeGte: ").append(toIndentedString(startTimeGte)).append("\n");
    sb.append("    startTimeIn: ").append(toIndentedString(startTimeIn)).append("\n");
    sb.append("    startTimeLt: ").append(toIndentedString(startTimeLt)).append("\n");
    sb.append("    startTimeLte: ").append(toIndentedString(startTimeLte)).append("\n");
    sb.append("    startTimeNot: ").append(toIndentedString(startTimeNot)).append("\n");
    sb.append("    startTimeNotIn: ").append(toIndentedString(startTimeNotIn)).append("\n");
    sb.append("    status: ").append(toIndentedString(status)).append("\n");
    sb.append("    statusIn: ").append(toIndentedString(statusIn)).append("\n");
    sb.append("    statusNot: ").append(toIndentedString(statusNot)).append("\n");
    sb.append("    statusNotIn: ").append(toIndentedString(statusNotIn)).append("\n");
    sb.append("    type: ").append(toIndentedString(type)).append("\n");
    sb.append("    typeIn: ").append(toIndentedString(typeIn)).append("\n");
    sb.append("    typeNot: ").append(toIndentedString(typeNot)).append("\n");
    sb.append("    typeNotIn: ").append(toIndentedString(typeNotIn)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

