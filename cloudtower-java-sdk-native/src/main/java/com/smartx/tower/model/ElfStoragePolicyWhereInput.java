/*
 * Tower SDK API
 * cloudtower operation API and SDK
 *
 * The version of the OpenAPI document: 1.7.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.smartx.tower.model;

import java.util.Objects;
import java.util.Arrays;
import java.util.Map;
import java.util.HashMap;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import com.smartx.tower.model.ClusterWhereInput;
import com.smartx.tower.model.EntityAsyncStatus;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.util.ArrayList;
import java.util.List;
import org.openapitools.jackson.nullable.JsonNullable;
import com.fasterxml.jackson.annotation.JsonIgnore;
import org.openapitools.jackson.nullable.JsonNullable;
import java.util.NoSuchElementException;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;


/**
 * ElfStoragePolicyWhereInput
 */
@JsonPropertyOrder({
  ElfStoragePolicyWhereInput.JSON_PROPERTY_A_N_D,
  ElfStoragePolicyWhereInput.JSON_PROPERTY_CLUSTER,
  ElfStoragePolicyWhereInput.JSON_PROPERTY_DESCRIPTION,
  ElfStoragePolicyWhereInput.JSON_PROPERTY_DESCRIPTION_CONTAINS,
  ElfStoragePolicyWhereInput.JSON_PROPERTY_DESCRIPTION_ENDS_WITH,
  ElfStoragePolicyWhereInput.JSON_PROPERTY_DESCRIPTION_GT,
  ElfStoragePolicyWhereInput.JSON_PROPERTY_DESCRIPTION_GTE,
  ElfStoragePolicyWhereInput.JSON_PROPERTY_DESCRIPTION_IN,
  ElfStoragePolicyWhereInput.JSON_PROPERTY_DESCRIPTION_LT,
  ElfStoragePolicyWhereInput.JSON_PROPERTY_DESCRIPTION_LTE,
  ElfStoragePolicyWhereInput.JSON_PROPERTY_DESCRIPTION_NOT,
  ElfStoragePolicyWhereInput.JSON_PROPERTY_DESCRIPTION_NOT_CONTAINS,
  ElfStoragePolicyWhereInput.JSON_PROPERTY_DESCRIPTION_NOT_ENDS_WITH,
  ElfStoragePolicyWhereInput.JSON_PROPERTY_DESCRIPTION_NOT_IN,
  ElfStoragePolicyWhereInput.JSON_PROPERTY_DESCRIPTION_NOT_STARTS_WITH,
  ElfStoragePolicyWhereInput.JSON_PROPERTY_DESCRIPTION_STARTS_WITH,
  ElfStoragePolicyWhereInput.JSON_PROPERTY_ENTITY_ASYNC_STATUS,
  ElfStoragePolicyWhereInput.JSON_PROPERTY_ENTITY_ASYNC_STATUS_IN,
  ElfStoragePolicyWhereInput.JSON_PROPERTY_ENTITY_ASYNC_STATUS_NOT,
  ElfStoragePolicyWhereInput.JSON_PROPERTY_ENTITY_ASYNC_STATUS_NOT_IN,
  ElfStoragePolicyWhereInput.JSON_PROPERTY_ID,
  ElfStoragePolicyWhereInput.JSON_PROPERTY_ID_CONTAINS,
  ElfStoragePolicyWhereInput.JSON_PROPERTY_ID_ENDS_WITH,
  ElfStoragePolicyWhereInput.JSON_PROPERTY_ID_GT,
  ElfStoragePolicyWhereInput.JSON_PROPERTY_ID_GTE,
  ElfStoragePolicyWhereInput.JSON_PROPERTY_ID_IN,
  ElfStoragePolicyWhereInput.JSON_PROPERTY_ID_LT,
  ElfStoragePolicyWhereInput.JSON_PROPERTY_ID_LTE,
  ElfStoragePolicyWhereInput.JSON_PROPERTY_ID_NOT,
  ElfStoragePolicyWhereInput.JSON_PROPERTY_ID_NOT_CONTAINS,
  ElfStoragePolicyWhereInput.JSON_PROPERTY_ID_NOT_ENDS_WITH,
  ElfStoragePolicyWhereInput.JSON_PROPERTY_ID_NOT_IN,
  ElfStoragePolicyWhereInput.JSON_PROPERTY_ID_NOT_STARTS_WITH,
  ElfStoragePolicyWhereInput.JSON_PROPERTY_ID_STARTS_WITH,
  ElfStoragePolicyWhereInput.JSON_PROPERTY_LOCAL_ID,
  ElfStoragePolicyWhereInput.JSON_PROPERTY_LOCAL_ID_CONTAINS,
  ElfStoragePolicyWhereInput.JSON_PROPERTY_LOCAL_ID_ENDS_WITH,
  ElfStoragePolicyWhereInput.JSON_PROPERTY_LOCAL_ID_GT,
  ElfStoragePolicyWhereInput.JSON_PROPERTY_LOCAL_ID_GTE,
  ElfStoragePolicyWhereInput.JSON_PROPERTY_LOCAL_ID_IN,
  ElfStoragePolicyWhereInput.JSON_PROPERTY_LOCAL_ID_LT,
  ElfStoragePolicyWhereInput.JSON_PROPERTY_LOCAL_ID_LTE,
  ElfStoragePolicyWhereInput.JSON_PROPERTY_LOCAL_ID_NOT,
  ElfStoragePolicyWhereInput.JSON_PROPERTY_LOCAL_ID_NOT_CONTAINS,
  ElfStoragePolicyWhereInput.JSON_PROPERTY_LOCAL_ID_NOT_ENDS_WITH,
  ElfStoragePolicyWhereInput.JSON_PROPERTY_LOCAL_ID_NOT_IN,
  ElfStoragePolicyWhereInput.JSON_PROPERTY_LOCAL_ID_NOT_STARTS_WITH,
  ElfStoragePolicyWhereInput.JSON_PROPERTY_LOCAL_ID_STARTS_WITH,
  ElfStoragePolicyWhereInput.JSON_PROPERTY_NAME,
  ElfStoragePolicyWhereInput.JSON_PROPERTY_NAME_CONTAINS,
  ElfStoragePolicyWhereInput.JSON_PROPERTY_NAME_ENDS_WITH,
  ElfStoragePolicyWhereInput.JSON_PROPERTY_NAME_GT,
  ElfStoragePolicyWhereInput.JSON_PROPERTY_NAME_GTE,
  ElfStoragePolicyWhereInput.JSON_PROPERTY_NAME_IN,
  ElfStoragePolicyWhereInput.JSON_PROPERTY_NAME_LT,
  ElfStoragePolicyWhereInput.JSON_PROPERTY_NAME_LTE,
  ElfStoragePolicyWhereInput.JSON_PROPERTY_NAME_NOT,
  ElfStoragePolicyWhereInput.JSON_PROPERTY_NAME_NOT_CONTAINS,
  ElfStoragePolicyWhereInput.JSON_PROPERTY_NAME_NOT_ENDS_WITH,
  ElfStoragePolicyWhereInput.JSON_PROPERTY_NAME_NOT_IN,
  ElfStoragePolicyWhereInput.JSON_PROPERTY_NAME_NOT_STARTS_WITH,
  ElfStoragePolicyWhereInput.JSON_PROPERTY_NAME_STARTS_WITH,
  ElfStoragePolicyWhereInput.JSON_PROPERTY_N_O_T,
  ElfStoragePolicyWhereInput.JSON_PROPERTY_O_R,
  ElfStoragePolicyWhereInput.JSON_PROPERTY_REPLICA_NUM,
  ElfStoragePolicyWhereInput.JSON_PROPERTY_REPLICA_NUM_GT,
  ElfStoragePolicyWhereInput.JSON_PROPERTY_REPLICA_NUM_GTE,
  ElfStoragePolicyWhereInput.JSON_PROPERTY_REPLICA_NUM_IN,
  ElfStoragePolicyWhereInput.JSON_PROPERTY_REPLICA_NUM_LT,
  ElfStoragePolicyWhereInput.JSON_PROPERTY_REPLICA_NUM_LTE,
  ElfStoragePolicyWhereInput.JSON_PROPERTY_REPLICA_NUM_NOT,
  ElfStoragePolicyWhereInput.JSON_PROPERTY_REPLICA_NUM_NOT_IN,
  ElfStoragePolicyWhereInput.JSON_PROPERTY_STRIPE_NUM,
  ElfStoragePolicyWhereInput.JSON_PROPERTY_STRIPE_NUM_GT,
  ElfStoragePolicyWhereInput.JSON_PROPERTY_STRIPE_NUM_GTE,
  ElfStoragePolicyWhereInput.JSON_PROPERTY_STRIPE_NUM_IN,
  ElfStoragePolicyWhereInput.JSON_PROPERTY_STRIPE_NUM_LT,
  ElfStoragePolicyWhereInput.JSON_PROPERTY_STRIPE_NUM_LTE,
  ElfStoragePolicyWhereInput.JSON_PROPERTY_STRIPE_NUM_NOT,
  ElfStoragePolicyWhereInput.JSON_PROPERTY_STRIPE_NUM_NOT_IN,
  ElfStoragePolicyWhereInput.JSON_PROPERTY_STRIPE_SIZE,
  ElfStoragePolicyWhereInput.JSON_PROPERTY_STRIPE_SIZE_GT,
  ElfStoragePolicyWhereInput.JSON_PROPERTY_STRIPE_SIZE_GTE,
  ElfStoragePolicyWhereInput.JSON_PROPERTY_STRIPE_SIZE_IN,
  ElfStoragePolicyWhereInput.JSON_PROPERTY_STRIPE_SIZE_LT,
  ElfStoragePolicyWhereInput.JSON_PROPERTY_STRIPE_SIZE_LTE,
  ElfStoragePolicyWhereInput.JSON_PROPERTY_STRIPE_SIZE_NOT,
  ElfStoragePolicyWhereInput.JSON_PROPERTY_STRIPE_SIZE_NOT_IN,
  ElfStoragePolicyWhereInput.JSON_PROPERTY_THIN_PROVISION,
  ElfStoragePolicyWhereInput.JSON_PROPERTY_THIN_PROVISION_NOT
})
@javax.annotation.processing.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2021-10-27T15:59:14.939791800+08:00[Asia/Shanghai]")
public class ElfStoragePolicyWhereInput {
  public static final String JSON_PROPERTY_A_N_D = "AND";
  private JsonNullable<List<ElfStoragePolicyWhereInput>> AND = JsonNullable.<List<ElfStoragePolicyWhereInput>>undefined();

  public static final String JSON_PROPERTY_CLUSTER = "cluster";
  private JsonNullable<ClusterWhereInput> cluster = JsonNullable.<ClusterWhereInput>undefined();

  public static final String JSON_PROPERTY_DESCRIPTION = "description";
  private JsonNullable<String> description = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_DESCRIPTION_CONTAINS = "description_contains";
  private JsonNullable<String> descriptionContains = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_DESCRIPTION_ENDS_WITH = "description_ends_with";
  private JsonNullable<String> descriptionEndsWith = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_DESCRIPTION_GT = "description_gt";
  private JsonNullable<String> descriptionGt = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_DESCRIPTION_GTE = "description_gte";
  private JsonNullable<String> descriptionGte = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_DESCRIPTION_IN = "description_in";
  private JsonNullable<List<String>> descriptionIn = JsonNullable.<List<String>>undefined();

  public static final String JSON_PROPERTY_DESCRIPTION_LT = "description_lt";
  private JsonNullable<String> descriptionLt = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_DESCRIPTION_LTE = "description_lte";
  private JsonNullable<String> descriptionLte = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_DESCRIPTION_NOT = "description_not";
  private JsonNullable<String> descriptionNot = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_DESCRIPTION_NOT_CONTAINS = "description_not_contains";
  private JsonNullable<String> descriptionNotContains = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_DESCRIPTION_NOT_ENDS_WITH = "description_not_ends_with";
  private JsonNullable<String> descriptionNotEndsWith = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_DESCRIPTION_NOT_IN = "description_not_in";
  private JsonNullable<List<String>> descriptionNotIn = JsonNullable.<List<String>>undefined();

  public static final String JSON_PROPERTY_DESCRIPTION_NOT_STARTS_WITH = "description_not_starts_with";
  private JsonNullable<String> descriptionNotStartsWith = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_DESCRIPTION_STARTS_WITH = "description_starts_with";
  private JsonNullable<String> descriptionStartsWith = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_ENTITY_ASYNC_STATUS = "entityAsyncStatus";
  private JsonNullable<EntityAsyncStatus> entityAsyncStatus = JsonNullable.<EntityAsyncStatus>undefined();

  public static final String JSON_PROPERTY_ENTITY_ASYNC_STATUS_IN = "entityAsyncStatus_in";
  private JsonNullable<List<EntityAsyncStatus>> entityAsyncStatusIn = JsonNullable.<List<EntityAsyncStatus>>undefined();

  public static final String JSON_PROPERTY_ENTITY_ASYNC_STATUS_NOT = "entityAsyncStatus_not";
  private JsonNullable<EntityAsyncStatus> entityAsyncStatusNot = JsonNullable.<EntityAsyncStatus>undefined();

  public static final String JSON_PROPERTY_ENTITY_ASYNC_STATUS_NOT_IN = "entityAsyncStatus_not_in";
  private JsonNullable<List<EntityAsyncStatus>> entityAsyncStatusNotIn = JsonNullable.<List<EntityAsyncStatus>>undefined();

  public static final String JSON_PROPERTY_ID = "id";
  private JsonNullable<String> id = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_ID_CONTAINS = "id_contains";
  private JsonNullable<String> idContains = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_ID_ENDS_WITH = "id_ends_with";
  private JsonNullable<String> idEndsWith = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_ID_GT = "id_gt";
  private JsonNullable<String> idGt = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_ID_GTE = "id_gte";
  private JsonNullable<String> idGte = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_ID_IN = "id_in";
  private JsonNullable<List<String>> idIn = JsonNullable.<List<String>>undefined();

  public static final String JSON_PROPERTY_ID_LT = "id_lt";
  private JsonNullable<String> idLt = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_ID_LTE = "id_lte";
  private JsonNullable<String> idLte = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_ID_NOT = "id_not";
  private JsonNullable<String> idNot = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_ID_NOT_CONTAINS = "id_not_contains";
  private JsonNullable<String> idNotContains = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_ID_NOT_ENDS_WITH = "id_not_ends_with";
  private JsonNullable<String> idNotEndsWith = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_ID_NOT_IN = "id_not_in";
  private JsonNullable<List<String>> idNotIn = JsonNullable.<List<String>>undefined();

  public static final String JSON_PROPERTY_ID_NOT_STARTS_WITH = "id_not_starts_with";
  private JsonNullable<String> idNotStartsWith = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_ID_STARTS_WITH = "id_starts_with";
  private JsonNullable<String> idStartsWith = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_LOCAL_ID = "local_id";
  private JsonNullable<String> localId = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_LOCAL_ID_CONTAINS = "local_id_contains";
  private JsonNullable<String> localIdContains = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_LOCAL_ID_ENDS_WITH = "local_id_ends_with";
  private JsonNullable<String> localIdEndsWith = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_LOCAL_ID_GT = "local_id_gt";
  private JsonNullable<String> localIdGt = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_LOCAL_ID_GTE = "local_id_gte";
  private JsonNullable<String> localIdGte = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_LOCAL_ID_IN = "local_id_in";
  private JsonNullable<List<String>> localIdIn = JsonNullable.<List<String>>undefined();

  public static final String JSON_PROPERTY_LOCAL_ID_LT = "local_id_lt";
  private JsonNullable<String> localIdLt = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_LOCAL_ID_LTE = "local_id_lte";
  private JsonNullable<String> localIdLte = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_LOCAL_ID_NOT = "local_id_not";
  private JsonNullable<String> localIdNot = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_LOCAL_ID_NOT_CONTAINS = "local_id_not_contains";
  private JsonNullable<String> localIdNotContains = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_LOCAL_ID_NOT_ENDS_WITH = "local_id_not_ends_with";
  private JsonNullable<String> localIdNotEndsWith = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_LOCAL_ID_NOT_IN = "local_id_not_in";
  private JsonNullable<List<String>> localIdNotIn = JsonNullable.<List<String>>undefined();

  public static final String JSON_PROPERTY_LOCAL_ID_NOT_STARTS_WITH = "local_id_not_starts_with";
  private JsonNullable<String> localIdNotStartsWith = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_LOCAL_ID_STARTS_WITH = "local_id_starts_with";
  private JsonNullable<String> localIdStartsWith = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_NAME = "name";
  private JsonNullable<String> name = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_NAME_CONTAINS = "name_contains";
  private JsonNullable<String> nameContains = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_NAME_ENDS_WITH = "name_ends_with";
  private JsonNullable<String> nameEndsWith = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_NAME_GT = "name_gt";
  private JsonNullable<String> nameGt = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_NAME_GTE = "name_gte";
  private JsonNullable<String> nameGte = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_NAME_IN = "name_in";
  private JsonNullable<List<String>> nameIn = JsonNullable.<List<String>>undefined();

  public static final String JSON_PROPERTY_NAME_LT = "name_lt";
  private JsonNullable<String> nameLt = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_NAME_LTE = "name_lte";
  private JsonNullable<String> nameLte = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_NAME_NOT = "name_not";
  private JsonNullable<String> nameNot = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_NAME_NOT_CONTAINS = "name_not_contains";
  private JsonNullable<String> nameNotContains = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_NAME_NOT_ENDS_WITH = "name_not_ends_with";
  private JsonNullable<String> nameNotEndsWith = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_NAME_NOT_IN = "name_not_in";
  private JsonNullable<List<String>> nameNotIn = JsonNullable.<List<String>>undefined();

  public static final String JSON_PROPERTY_NAME_NOT_STARTS_WITH = "name_not_starts_with";
  private JsonNullable<String> nameNotStartsWith = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_NAME_STARTS_WITH = "name_starts_with";
  private JsonNullable<String> nameStartsWith = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_N_O_T = "NOT";
  private JsonNullable<List<ElfStoragePolicyWhereInput>> NOT = JsonNullable.<List<ElfStoragePolicyWhereInput>>undefined();

  public static final String JSON_PROPERTY_O_R = "OR";
  private JsonNullable<List<ElfStoragePolicyWhereInput>> OR = JsonNullable.<List<ElfStoragePolicyWhereInput>>undefined();

  public static final String JSON_PROPERTY_REPLICA_NUM = "replica_num";
  private JsonNullable<Double> replicaNum = JsonNullable.<Double>undefined();

  public static final String JSON_PROPERTY_REPLICA_NUM_GT = "replica_num_gt";
  private JsonNullable<Double> replicaNumGt = JsonNullable.<Double>undefined();

  public static final String JSON_PROPERTY_REPLICA_NUM_GTE = "replica_num_gte";
  private JsonNullable<Double> replicaNumGte = JsonNullable.<Double>undefined();

  public static final String JSON_PROPERTY_REPLICA_NUM_IN = "replica_num_in";
  private JsonNullable<List<Double>> replicaNumIn = JsonNullable.<List<Double>>undefined();

  public static final String JSON_PROPERTY_REPLICA_NUM_LT = "replica_num_lt";
  private JsonNullable<Double> replicaNumLt = JsonNullable.<Double>undefined();

  public static final String JSON_PROPERTY_REPLICA_NUM_LTE = "replica_num_lte";
  private JsonNullable<Double> replicaNumLte = JsonNullable.<Double>undefined();

  public static final String JSON_PROPERTY_REPLICA_NUM_NOT = "replica_num_not";
  private JsonNullable<Double> replicaNumNot = JsonNullable.<Double>undefined();

  public static final String JSON_PROPERTY_REPLICA_NUM_NOT_IN = "replica_num_not_in";
  private JsonNullable<List<Double>> replicaNumNotIn = JsonNullable.<List<Double>>undefined();

  public static final String JSON_PROPERTY_STRIPE_NUM = "stripe_num";
  private JsonNullable<Double> stripeNum = JsonNullable.<Double>undefined();

  public static final String JSON_PROPERTY_STRIPE_NUM_GT = "stripe_num_gt";
  private JsonNullable<Double> stripeNumGt = JsonNullable.<Double>undefined();

  public static final String JSON_PROPERTY_STRIPE_NUM_GTE = "stripe_num_gte";
  private JsonNullable<Double> stripeNumGte = JsonNullable.<Double>undefined();

  public static final String JSON_PROPERTY_STRIPE_NUM_IN = "stripe_num_in";
  private JsonNullable<List<Double>> stripeNumIn = JsonNullable.<List<Double>>undefined();

  public static final String JSON_PROPERTY_STRIPE_NUM_LT = "stripe_num_lt";
  private JsonNullable<Double> stripeNumLt = JsonNullable.<Double>undefined();

  public static final String JSON_PROPERTY_STRIPE_NUM_LTE = "stripe_num_lte";
  private JsonNullable<Double> stripeNumLte = JsonNullable.<Double>undefined();

  public static final String JSON_PROPERTY_STRIPE_NUM_NOT = "stripe_num_not";
  private JsonNullable<Double> stripeNumNot = JsonNullable.<Double>undefined();

  public static final String JSON_PROPERTY_STRIPE_NUM_NOT_IN = "stripe_num_not_in";
  private JsonNullable<List<Double>> stripeNumNotIn = JsonNullable.<List<Double>>undefined();

  public static final String JSON_PROPERTY_STRIPE_SIZE = "stripe_size";
  private JsonNullable<Double> stripeSize = JsonNullable.<Double>undefined();

  public static final String JSON_PROPERTY_STRIPE_SIZE_GT = "stripe_size_gt";
  private JsonNullable<Double> stripeSizeGt = JsonNullable.<Double>undefined();

  public static final String JSON_PROPERTY_STRIPE_SIZE_GTE = "stripe_size_gte";
  private JsonNullable<Double> stripeSizeGte = JsonNullable.<Double>undefined();

  public static final String JSON_PROPERTY_STRIPE_SIZE_IN = "stripe_size_in";
  private JsonNullable<List<Double>> stripeSizeIn = JsonNullable.<List<Double>>undefined();

  public static final String JSON_PROPERTY_STRIPE_SIZE_LT = "stripe_size_lt";
  private JsonNullable<Double> stripeSizeLt = JsonNullable.<Double>undefined();

  public static final String JSON_PROPERTY_STRIPE_SIZE_LTE = "stripe_size_lte";
  private JsonNullable<Double> stripeSizeLte = JsonNullable.<Double>undefined();

  public static final String JSON_PROPERTY_STRIPE_SIZE_NOT = "stripe_size_not";
  private JsonNullable<Double> stripeSizeNot = JsonNullable.<Double>undefined();

  public static final String JSON_PROPERTY_STRIPE_SIZE_NOT_IN = "stripe_size_not_in";
  private JsonNullable<List<Double>> stripeSizeNotIn = JsonNullable.<List<Double>>undefined();

  public static final String JSON_PROPERTY_THIN_PROVISION = "thin_provision";
  private JsonNullable<Boolean> thinProvision = JsonNullable.<Boolean>undefined();

  public static final String JSON_PROPERTY_THIN_PROVISION_NOT = "thin_provision_not";
  private JsonNullable<Boolean> thinProvisionNot = JsonNullable.<Boolean>undefined();


  public ElfStoragePolicyWhereInput AND(List<ElfStoragePolicyWhereInput> AND) {
    this.AND = JsonNullable.<List<ElfStoragePolicyWhereInput>>of(AND);
    return this;
  }

  public ElfStoragePolicyWhereInput addANDItem(ElfStoragePolicyWhereInput ANDItem) {
    if (this.AND == null || !this.AND.isPresent()) {
      this.AND = JsonNullable.<List<ElfStoragePolicyWhereInput>>of(new ArrayList<>());
    }
    try {
      this.AND.get().add(ANDItem);
    } catch (java.util.NoSuchElementException e) {
      // this can never happen, as we make sure above that the value is present
    }
    return this;
  }

   /**
   * Get AND
   * @return AND
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public List<ElfStoragePolicyWhereInput> getAND() {
        return AND.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_A_N_D)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<List<ElfStoragePolicyWhereInput>> getAND_JsonNullable() {
    return AND;
  }
  
  @JsonProperty(JSON_PROPERTY_A_N_D)
  public void setAND_JsonNullable(JsonNullable<List<ElfStoragePolicyWhereInput>> AND) {
    this.AND = AND;
  }

  public void setAND(List<ElfStoragePolicyWhereInput> AND) {
    this.AND = JsonNullable.<List<ElfStoragePolicyWhereInput>>of(AND);
  }


  public ElfStoragePolicyWhereInput cluster(ClusterWhereInput cluster) {
    this.cluster = JsonNullable.<ClusterWhereInput>of(cluster);
    return this;
  }

   /**
   * Get cluster
   * @return cluster
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public ClusterWhereInput getCluster() {
        return cluster.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_CLUSTER)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<ClusterWhereInput> getCluster_JsonNullable() {
    return cluster;
  }
  
  @JsonProperty(JSON_PROPERTY_CLUSTER)
  public void setCluster_JsonNullable(JsonNullable<ClusterWhereInput> cluster) {
    this.cluster = cluster;
  }

  public void setCluster(ClusterWhereInput cluster) {
    this.cluster = JsonNullable.<ClusterWhereInput>of(cluster);
  }


  public ElfStoragePolicyWhereInput description(String description) {
    this.description = JsonNullable.<String>of(description);
    return this;
  }

   /**
   * Get description
   * @return description
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getDescription() {
        return description.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_DESCRIPTION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getDescription_JsonNullable() {
    return description;
  }
  
  @JsonProperty(JSON_PROPERTY_DESCRIPTION)
  public void setDescription_JsonNullable(JsonNullable<String> description) {
    this.description = description;
  }

  public void setDescription(String description) {
    this.description = JsonNullable.<String>of(description);
  }


  public ElfStoragePolicyWhereInput descriptionContains(String descriptionContains) {
    this.descriptionContains = JsonNullable.<String>of(descriptionContains);
    return this;
  }

   /**
   * Get descriptionContains
   * @return descriptionContains
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getDescriptionContains() {
        return descriptionContains.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_DESCRIPTION_CONTAINS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getDescriptionContains_JsonNullable() {
    return descriptionContains;
  }
  
  @JsonProperty(JSON_PROPERTY_DESCRIPTION_CONTAINS)
  public void setDescriptionContains_JsonNullable(JsonNullable<String> descriptionContains) {
    this.descriptionContains = descriptionContains;
  }

  public void setDescriptionContains(String descriptionContains) {
    this.descriptionContains = JsonNullable.<String>of(descriptionContains);
  }


  public ElfStoragePolicyWhereInput descriptionEndsWith(String descriptionEndsWith) {
    this.descriptionEndsWith = JsonNullable.<String>of(descriptionEndsWith);
    return this;
  }

   /**
   * Get descriptionEndsWith
   * @return descriptionEndsWith
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getDescriptionEndsWith() {
        return descriptionEndsWith.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_DESCRIPTION_ENDS_WITH)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getDescriptionEndsWith_JsonNullable() {
    return descriptionEndsWith;
  }
  
  @JsonProperty(JSON_PROPERTY_DESCRIPTION_ENDS_WITH)
  public void setDescriptionEndsWith_JsonNullable(JsonNullable<String> descriptionEndsWith) {
    this.descriptionEndsWith = descriptionEndsWith;
  }

  public void setDescriptionEndsWith(String descriptionEndsWith) {
    this.descriptionEndsWith = JsonNullable.<String>of(descriptionEndsWith);
  }


  public ElfStoragePolicyWhereInput descriptionGt(String descriptionGt) {
    this.descriptionGt = JsonNullable.<String>of(descriptionGt);
    return this;
  }

   /**
   * Get descriptionGt
   * @return descriptionGt
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getDescriptionGt() {
        return descriptionGt.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_DESCRIPTION_GT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getDescriptionGt_JsonNullable() {
    return descriptionGt;
  }
  
  @JsonProperty(JSON_PROPERTY_DESCRIPTION_GT)
  public void setDescriptionGt_JsonNullable(JsonNullable<String> descriptionGt) {
    this.descriptionGt = descriptionGt;
  }

  public void setDescriptionGt(String descriptionGt) {
    this.descriptionGt = JsonNullable.<String>of(descriptionGt);
  }


  public ElfStoragePolicyWhereInput descriptionGte(String descriptionGte) {
    this.descriptionGte = JsonNullable.<String>of(descriptionGte);
    return this;
  }

   /**
   * Get descriptionGte
   * @return descriptionGte
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getDescriptionGte() {
        return descriptionGte.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_DESCRIPTION_GTE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getDescriptionGte_JsonNullable() {
    return descriptionGte;
  }
  
  @JsonProperty(JSON_PROPERTY_DESCRIPTION_GTE)
  public void setDescriptionGte_JsonNullable(JsonNullable<String> descriptionGte) {
    this.descriptionGte = descriptionGte;
  }

  public void setDescriptionGte(String descriptionGte) {
    this.descriptionGte = JsonNullable.<String>of(descriptionGte);
  }


  public ElfStoragePolicyWhereInput descriptionIn(List<String> descriptionIn) {
    this.descriptionIn = JsonNullable.<List<String>>of(descriptionIn);
    return this;
  }

  public ElfStoragePolicyWhereInput addDescriptionInItem(String descriptionInItem) {
    if (this.descriptionIn == null || !this.descriptionIn.isPresent()) {
      this.descriptionIn = JsonNullable.<List<String>>of(new ArrayList<>());
    }
    try {
      this.descriptionIn.get().add(descriptionInItem);
    } catch (java.util.NoSuchElementException e) {
      // this can never happen, as we make sure above that the value is present
    }
    return this;
  }

   /**
   * Get descriptionIn
   * @return descriptionIn
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public List<String> getDescriptionIn() {
        return descriptionIn.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_DESCRIPTION_IN)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<List<String>> getDescriptionIn_JsonNullable() {
    return descriptionIn;
  }
  
  @JsonProperty(JSON_PROPERTY_DESCRIPTION_IN)
  public void setDescriptionIn_JsonNullable(JsonNullable<List<String>> descriptionIn) {
    this.descriptionIn = descriptionIn;
  }

  public void setDescriptionIn(List<String> descriptionIn) {
    this.descriptionIn = JsonNullable.<List<String>>of(descriptionIn);
  }


  public ElfStoragePolicyWhereInput descriptionLt(String descriptionLt) {
    this.descriptionLt = JsonNullable.<String>of(descriptionLt);
    return this;
  }

   /**
   * Get descriptionLt
   * @return descriptionLt
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getDescriptionLt() {
        return descriptionLt.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_DESCRIPTION_LT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getDescriptionLt_JsonNullable() {
    return descriptionLt;
  }
  
  @JsonProperty(JSON_PROPERTY_DESCRIPTION_LT)
  public void setDescriptionLt_JsonNullable(JsonNullable<String> descriptionLt) {
    this.descriptionLt = descriptionLt;
  }

  public void setDescriptionLt(String descriptionLt) {
    this.descriptionLt = JsonNullable.<String>of(descriptionLt);
  }


  public ElfStoragePolicyWhereInput descriptionLte(String descriptionLte) {
    this.descriptionLte = JsonNullable.<String>of(descriptionLte);
    return this;
  }

   /**
   * Get descriptionLte
   * @return descriptionLte
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getDescriptionLte() {
        return descriptionLte.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_DESCRIPTION_LTE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getDescriptionLte_JsonNullable() {
    return descriptionLte;
  }
  
  @JsonProperty(JSON_PROPERTY_DESCRIPTION_LTE)
  public void setDescriptionLte_JsonNullable(JsonNullable<String> descriptionLte) {
    this.descriptionLte = descriptionLte;
  }

  public void setDescriptionLte(String descriptionLte) {
    this.descriptionLte = JsonNullable.<String>of(descriptionLte);
  }


  public ElfStoragePolicyWhereInput descriptionNot(String descriptionNot) {
    this.descriptionNot = JsonNullable.<String>of(descriptionNot);
    return this;
  }

   /**
   * Get descriptionNot
   * @return descriptionNot
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getDescriptionNot() {
        return descriptionNot.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_DESCRIPTION_NOT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getDescriptionNot_JsonNullable() {
    return descriptionNot;
  }
  
  @JsonProperty(JSON_PROPERTY_DESCRIPTION_NOT)
  public void setDescriptionNot_JsonNullable(JsonNullable<String> descriptionNot) {
    this.descriptionNot = descriptionNot;
  }

  public void setDescriptionNot(String descriptionNot) {
    this.descriptionNot = JsonNullable.<String>of(descriptionNot);
  }


  public ElfStoragePolicyWhereInput descriptionNotContains(String descriptionNotContains) {
    this.descriptionNotContains = JsonNullable.<String>of(descriptionNotContains);
    return this;
  }

   /**
   * Get descriptionNotContains
   * @return descriptionNotContains
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getDescriptionNotContains() {
        return descriptionNotContains.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_DESCRIPTION_NOT_CONTAINS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getDescriptionNotContains_JsonNullable() {
    return descriptionNotContains;
  }
  
  @JsonProperty(JSON_PROPERTY_DESCRIPTION_NOT_CONTAINS)
  public void setDescriptionNotContains_JsonNullable(JsonNullable<String> descriptionNotContains) {
    this.descriptionNotContains = descriptionNotContains;
  }

  public void setDescriptionNotContains(String descriptionNotContains) {
    this.descriptionNotContains = JsonNullable.<String>of(descriptionNotContains);
  }


  public ElfStoragePolicyWhereInput descriptionNotEndsWith(String descriptionNotEndsWith) {
    this.descriptionNotEndsWith = JsonNullable.<String>of(descriptionNotEndsWith);
    return this;
  }

   /**
   * Get descriptionNotEndsWith
   * @return descriptionNotEndsWith
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getDescriptionNotEndsWith() {
        return descriptionNotEndsWith.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_DESCRIPTION_NOT_ENDS_WITH)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getDescriptionNotEndsWith_JsonNullable() {
    return descriptionNotEndsWith;
  }
  
  @JsonProperty(JSON_PROPERTY_DESCRIPTION_NOT_ENDS_WITH)
  public void setDescriptionNotEndsWith_JsonNullable(JsonNullable<String> descriptionNotEndsWith) {
    this.descriptionNotEndsWith = descriptionNotEndsWith;
  }

  public void setDescriptionNotEndsWith(String descriptionNotEndsWith) {
    this.descriptionNotEndsWith = JsonNullable.<String>of(descriptionNotEndsWith);
  }


  public ElfStoragePolicyWhereInput descriptionNotIn(List<String> descriptionNotIn) {
    this.descriptionNotIn = JsonNullable.<List<String>>of(descriptionNotIn);
    return this;
  }

  public ElfStoragePolicyWhereInput addDescriptionNotInItem(String descriptionNotInItem) {
    if (this.descriptionNotIn == null || !this.descriptionNotIn.isPresent()) {
      this.descriptionNotIn = JsonNullable.<List<String>>of(new ArrayList<>());
    }
    try {
      this.descriptionNotIn.get().add(descriptionNotInItem);
    } catch (java.util.NoSuchElementException e) {
      // this can never happen, as we make sure above that the value is present
    }
    return this;
  }

   /**
   * Get descriptionNotIn
   * @return descriptionNotIn
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public List<String> getDescriptionNotIn() {
        return descriptionNotIn.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_DESCRIPTION_NOT_IN)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<List<String>> getDescriptionNotIn_JsonNullable() {
    return descriptionNotIn;
  }
  
  @JsonProperty(JSON_PROPERTY_DESCRIPTION_NOT_IN)
  public void setDescriptionNotIn_JsonNullable(JsonNullable<List<String>> descriptionNotIn) {
    this.descriptionNotIn = descriptionNotIn;
  }

  public void setDescriptionNotIn(List<String> descriptionNotIn) {
    this.descriptionNotIn = JsonNullable.<List<String>>of(descriptionNotIn);
  }


  public ElfStoragePolicyWhereInput descriptionNotStartsWith(String descriptionNotStartsWith) {
    this.descriptionNotStartsWith = JsonNullable.<String>of(descriptionNotStartsWith);
    return this;
  }

   /**
   * Get descriptionNotStartsWith
   * @return descriptionNotStartsWith
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getDescriptionNotStartsWith() {
        return descriptionNotStartsWith.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_DESCRIPTION_NOT_STARTS_WITH)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getDescriptionNotStartsWith_JsonNullable() {
    return descriptionNotStartsWith;
  }
  
  @JsonProperty(JSON_PROPERTY_DESCRIPTION_NOT_STARTS_WITH)
  public void setDescriptionNotStartsWith_JsonNullable(JsonNullable<String> descriptionNotStartsWith) {
    this.descriptionNotStartsWith = descriptionNotStartsWith;
  }

  public void setDescriptionNotStartsWith(String descriptionNotStartsWith) {
    this.descriptionNotStartsWith = JsonNullable.<String>of(descriptionNotStartsWith);
  }


  public ElfStoragePolicyWhereInput descriptionStartsWith(String descriptionStartsWith) {
    this.descriptionStartsWith = JsonNullable.<String>of(descriptionStartsWith);
    return this;
  }

   /**
   * Get descriptionStartsWith
   * @return descriptionStartsWith
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getDescriptionStartsWith() {
        return descriptionStartsWith.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_DESCRIPTION_STARTS_WITH)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getDescriptionStartsWith_JsonNullable() {
    return descriptionStartsWith;
  }
  
  @JsonProperty(JSON_PROPERTY_DESCRIPTION_STARTS_WITH)
  public void setDescriptionStartsWith_JsonNullable(JsonNullable<String> descriptionStartsWith) {
    this.descriptionStartsWith = descriptionStartsWith;
  }

  public void setDescriptionStartsWith(String descriptionStartsWith) {
    this.descriptionStartsWith = JsonNullable.<String>of(descriptionStartsWith);
  }


  public ElfStoragePolicyWhereInput entityAsyncStatus(EntityAsyncStatus entityAsyncStatus) {
    this.entityAsyncStatus = JsonNullable.<EntityAsyncStatus>of(entityAsyncStatus);
    return this;
  }

   /**
   * Get entityAsyncStatus
   * @return entityAsyncStatus
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public EntityAsyncStatus getEntityAsyncStatus() {
        return entityAsyncStatus.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_ENTITY_ASYNC_STATUS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<EntityAsyncStatus> getEntityAsyncStatus_JsonNullable() {
    return entityAsyncStatus;
  }
  
  @JsonProperty(JSON_PROPERTY_ENTITY_ASYNC_STATUS)
  public void setEntityAsyncStatus_JsonNullable(JsonNullable<EntityAsyncStatus> entityAsyncStatus) {
    this.entityAsyncStatus = entityAsyncStatus;
  }

  public void setEntityAsyncStatus(EntityAsyncStatus entityAsyncStatus) {
    this.entityAsyncStatus = JsonNullable.<EntityAsyncStatus>of(entityAsyncStatus);
  }


  public ElfStoragePolicyWhereInput entityAsyncStatusIn(List<EntityAsyncStatus> entityAsyncStatusIn) {
    this.entityAsyncStatusIn = JsonNullable.<List<EntityAsyncStatus>>of(entityAsyncStatusIn);
    return this;
  }

  public ElfStoragePolicyWhereInput addEntityAsyncStatusInItem(EntityAsyncStatus entityAsyncStatusInItem) {
    if (this.entityAsyncStatusIn == null || !this.entityAsyncStatusIn.isPresent()) {
      this.entityAsyncStatusIn = JsonNullable.<List<EntityAsyncStatus>>of(new ArrayList<>());
    }
    try {
      this.entityAsyncStatusIn.get().add(entityAsyncStatusInItem);
    } catch (java.util.NoSuchElementException e) {
      // this can never happen, as we make sure above that the value is present
    }
    return this;
  }

   /**
   * Get entityAsyncStatusIn
   * @return entityAsyncStatusIn
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public List<EntityAsyncStatus> getEntityAsyncStatusIn() {
        return entityAsyncStatusIn.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_ENTITY_ASYNC_STATUS_IN)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<List<EntityAsyncStatus>> getEntityAsyncStatusIn_JsonNullable() {
    return entityAsyncStatusIn;
  }
  
  @JsonProperty(JSON_PROPERTY_ENTITY_ASYNC_STATUS_IN)
  public void setEntityAsyncStatusIn_JsonNullable(JsonNullable<List<EntityAsyncStatus>> entityAsyncStatusIn) {
    this.entityAsyncStatusIn = entityAsyncStatusIn;
  }

  public void setEntityAsyncStatusIn(List<EntityAsyncStatus> entityAsyncStatusIn) {
    this.entityAsyncStatusIn = JsonNullable.<List<EntityAsyncStatus>>of(entityAsyncStatusIn);
  }


  public ElfStoragePolicyWhereInput entityAsyncStatusNot(EntityAsyncStatus entityAsyncStatusNot) {
    this.entityAsyncStatusNot = JsonNullable.<EntityAsyncStatus>of(entityAsyncStatusNot);
    return this;
  }

   /**
   * Get entityAsyncStatusNot
   * @return entityAsyncStatusNot
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public EntityAsyncStatus getEntityAsyncStatusNot() {
        return entityAsyncStatusNot.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_ENTITY_ASYNC_STATUS_NOT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<EntityAsyncStatus> getEntityAsyncStatusNot_JsonNullable() {
    return entityAsyncStatusNot;
  }
  
  @JsonProperty(JSON_PROPERTY_ENTITY_ASYNC_STATUS_NOT)
  public void setEntityAsyncStatusNot_JsonNullable(JsonNullable<EntityAsyncStatus> entityAsyncStatusNot) {
    this.entityAsyncStatusNot = entityAsyncStatusNot;
  }

  public void setEntityAsyncStatusNot(EntityAsyncStatus entityAsyncStatusNot) {
    this.entityAsyncStatusNot = JsonNullable.<EntityAsyncStatus>of(entityAsyncStatusNot);
  }


  public ElfStoragePolicyWhereInput entityAsyncStatusNotIn(List<EntityAsyncStatus> entityAsyncStatusNotIn) {
    this.entityAsyncStatusNotIn = JsonNullable.<List<EntityAsyncStatus>>of(entityAsyncStatusNotIn);
    return this;
  }

  public ElfStoragePolicyWhereInput addEntityAsyncStatusNotInItem(EntityAsyncStatus entityAsyncStatusNotInItem) {
    if (this.entityAsyncStatusNotIn == null || !this.entityAsyncStatusNotIn.isPresent()) {
      this.entityAsyncStatusNotIn = JsonNullable.<List<EntityAsyncStatus>>of(new ArrayList<>());
    }
    try {
      this.entityAsyncStatusNotIn.get().add(entityAsyncStatusNotInItem);
    } catch (java.util.NoSuchElementException e) {
      // this can never happen, as we make sure above that the value is present
    }
    return this;
  }

   /**
   * Get entityAsyncStatusNotIn
   * @return entityAsyncStatusNotIn
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public List<EntityAsyncStatus> getEntityAsyncStatusNotIn() {
        return entityAsyncStatusNotIn.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_ENTITY_ASYNC_STATUS_NOT_IN)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<List<EntityAsyncStatus>> getEntityAsyncStatusNotIn_JsonNullable() {
    return entityAsyncStatusNotIn;
  }
  
  @JsonProperty(JSON_PROPERTY_ENTITY_ASYNC_STATUS_NOT_IN)
  public void setEntityAsyncStatusNotIn_JsonNullable(JsonNullable<List<EntityAsyncStatus>> entityAsyncStatusNotIn) {
    this.entityAsyncStatusNotIn = entityAsyncStatusNotIn;
  }

  public void setEntityAsyncStatusNotIn(List<EntityAsyncStatus> entityAsyncStatusNotIn) {
    this.entityAsyncStatusNotIn = JsonNullable.<List<EntityAsyncStatus>>of(entityAsyncStatusNotIn);
  }


  public ElfStoragePolicyWhereInput id(String id) {
    this.id = JsonNullable.<String>of(id);
    return this;
  }

   /**
   * Get id
   * @return id
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getId() {
        return id.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getId_JsonNullable() {
    return id;
  }
  
  @JsonProperty(JSON_PROPERTY_ID)
  public void setId_JsonNullable(JsonNullable<String> id) {
    this.id = id;
  }

  public void setId(String id) {
    this.id = JsonNullable.<String>of(id);
  }


  public ElfStoragePolicyWhereInput idContains(String idContains) {
    this.idContains = JsonNullable.<String>of(idContains);
    return this;
  }

   /**
   * Get idContains
   * @return idContains
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getIdContains() {
        return idContains.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_ID_CONTAINS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getIdContains_JsonNullable() {
    return idContains;
  }
  
  @JsonProperty(JSON_PROPERTY_ID_CONTAINS)
  public void setIdContains_JsonNullable(JsonNullable<String> idContains) {
    this.idContains = idContains;
  }

  public void setIdContains(String idContains) {
    this.idContains = JsonNullable.<String>of(idContains);
  }


  public ElfStoragePolicyWhereInput idEndsWith(String idEndsWith) {
    this.idEndsWith = JsonNullable.<String>of(idEndsWith);
    return this;
  }

   /**
   * Get idEndsWith
   * @return idEndsWith
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getIdEndsWith() {
        return idEndsWith.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_ID_ENDS_WITH)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getIdEndsWith_JsonNullable() {
    return idEndsWith;
  }
  
  @JsonProperty(JSON_PROPERTY_ID_ENDS_WITH)
  public void setIdEndsWith_JsonNullable(JsonNullable<String> idEndsWith) {
    this.idEndsWith = idEndsWith;
  }

  public void setIdEndsWith(String idEndsWith) {
    this.idEndsWith = JsonNullable.<String>of(idEndsWith);
  }


  public ElfStoragePolicyWhereInput idGt(String idGt) {
    this.idGt = JsonNullable.<String>of(idGt);
    return this;
  }

   /**
   * Get idGt
   * @return idGt
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getIdGt() {
        return idGt.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_ID_GT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getIdGt_JsonNullable() {
    return idGt;
  }
  
  @JsonProperty(JSON_PROPERTY_ID_GT)
  public void setIdGt_JsonNullable(JsonNullable<String> idGt) {
    this.idGt = idGt;
  }

  public void setIdGt(String idGt) {
    this.idGt = JsonNullable.<String>of(idGt);
  }


  public ElfStoragePolicyWhereInput idGte(String idGte) {
    this.idGte = JsonNullable.<String>of(idGte);
    return this;
  }

   /**
   * Get idGte
   * @return idGte
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getIdGte() {
        return idGte.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_ID_GTE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getIdGte_JsonNullable() {
    return idGte;
  }
  
  @JsonProperty(JSON_PROPERTY_ID_GTE)
  public void setIdGte_JsonNullable(JsonNullable<String> idGte) {
    this.idGte = idGte;
  }

  public void setIdGte(String idGte) {
    this.idGte = JsonNullable.<String>of(idGte);
  }


  public ElfStoragePolicyWhereInput idIn(List<String> idIn) {
    this.idIn = JsonNullable.<List<String>>of(idIn);
    return this;
  }

  public ElfStoragePolicyWhereInput addIdInItem(String idInItem) {
    if (this.idIn == null || !this.idIn.isPresent()) {
      this.idIn = JsonNullable.<List<String>>of(new ArrayList<>());
    }
    try {
      this.idIn.get().add(idInItem);
    } catch (java.util.NoSuchElementException e) {
      // this can never happen, as we make sure above that the value is present
    }
    return this;
  }

   /**
   * Get idIn
   * @return idIn
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public List<String> getIdIn() {
        return idIn.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_ID_IN)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<List<String>> getIdIn_JsonNullable() {
    return idIn;
  }
  
  @JsonProperty(JSON_PROPERTY_ID_IN)
  public void setIdIn_JsonNullable(JsonNullable<List<String>> idIn) {
    this.idIn = idIn;
  }

  public void setIdIn(List<String> idIn) {
    this.idIn = JsonNullable.<List<String>>of(idIn);
  }


  public ElfStoragePolicyWhereInput idLt(String idLt) {
    this.idLt = JsonNullable.<String>of(idLt);
    return this;
  }

   /**
   * Get idLt
   * @return idLt
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getIdLt() {
        return idLt.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_ID_LT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getIdLt_JsonNullable() {
    return idLt;
  }
  
  @JsonProperty(JSON_PROPERTY_ID_LT)
  public void setIdLt_JsonNullable(JsonNullable<String> idLt) {
    this.idLt = idLt;
  }

  public void setIdLt(String idLt) {
    this.idLt = JsonNullable.<String>of(idLt);
  }


  public ElfStoragePolicyWhereInput idLte(String idLte) {
    this.idLte = JsonNullable.<String>of(idLte);
    return this;
  }

   /**
   * Get idLte
   * @return idLte
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getIdLte() {
        return idLte.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_ID_LTE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getIdLte_JsonNullable() {
    return idLte;
  }
  
  @JsonProperty(JSON_PROPERTY_ID_LTE)
  public void setIdLte_JsonNullable(JsonNullable<String> idLte) {
    this.idLte = idLte;
  }

  public void setIdLte(String idLte) {
    this.idLte = JsonNullable.<String>of(idLte);
  }


  public ElfStoragePolicyWhereInput idNot(String idNot) {
    this.idNot = JsonNullable.<String>of(idNot);
    return this;
  }

   /**
   * Get idNot
   * @return idNot
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getIdNot() {
        return idNot.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_ID_NOT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getIdNot_JsonNullable() {
    return idNot;
  }
  
  @JsonProperty(JSON_PROPERTY_ID_NOT)
  public void setIdNot_JsonNullable(JsonNullable<String> idNot) {
    this.idNot = idNot;
  }

  public void setIdNot(String idNot) {
    this.idNot = JsonNullable.<String>of(idNot);
  }


  public ElfStoragePolicyWhereInput idNotContains(String idNotContains) {
    this.idNotContains = JsonNullable.<String>of(idNotContains);
    return this;
  }

   /**
   * Get idNotContains
   * @return idNotContains
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getIdNotContains() {
        return idNotContains.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_ID_NOT_CONTAINS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getIdNotContains_JsonNullable() {
    return idNotContains;
  }
  
  @JsonProperty(JSON_PROPERTY_ID_NOT_CONTAINS)
  public void setIdNotContains_JsonNullable(JsonNullable<String> idNotContains) {
    this.idNotContains = idNotContains;
  }

  public void setIdNotContains(String idNotContains) {
    this.idNotContains = JsonNullable.<String>of(idNotContains);
  }


  public ElfStoragePolicyWhereInput idNotEndsWith(String idNotEndsWith) {
    this.idNotEndsWith = JsonNullable.<String>of(idNotEndsWith);
    return this;
  }

   /**
   * Get idNotEndsWith
   * @return idNotEndsWith
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getIdNotEndsWith() {
        return idNotEndsWith.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_ID_NOT_ENDS_WITH)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getIdNotEndsWith_JsonNullable() {
    return idNotEndsWith;
  }
  
  @JsonProperty(JSON_PROPERTY_ID_NOT_ENDS_WITH)
  public void setIdNotEndsWith_JsonNullable(JsonNullable<String> idNotEndsWith) {
    this.idNotEndsWith = idNotEndsWith;
  }

  public void setIdNotEndsWith(String idNotEndsWith) {
    this.idNotEndsWith = JsonNullable.<String>of(idNotEndsWith);
  }


  public ElfStoragePolicyWhereInput idNotIn(List<String> idNotIn) {
    this.idNotIn = JsonNullable.<List<String>>of(idNotIn);
    return this;
  }

  public ElfStoragePolicyWhereInput addIdNotInItem(String idNotInItem) {
    if (this.idNotIn == null || !this.idNotIn.isPresent()) {
      this.idNotIn = JsonNullable.<List<String>>of(new ArrayList<>());
    }
    try {
      this.idNotIn.get().add(idNotInItem);
    } catch (java.util.NoSuchElementException e) {
      // this can never happen, as we make sure above that the value is present
    }
    return this;
  }

   /**
   * Get idNotIn
   * @return idNotIn
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public List<String> getIdNotIn() {
        return idNotIn.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_ID_NOT_IN)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<List<String>> getIdNotIn_JsonNullable() {
    return idNotIn;
  }
  
  @JsonProperty(JSON_PROPERTY_ID_NOT_IN)
  public void setIdNotIn_JsonNullable(JsonNullable<List<String>> idNotIn) {
    this.idNotIn = idNotIn;
  }

  public void setIdNotIn(List<String> idNotIn) {
    this.idNotIn = JsonNullable.<List<String>>of(idNotIn);
  }


  public ElfStoragePolicyWhereInput idNotStartsWith(String idNotStartsWith) {
    this.idNotStartsWith = JsonNullable.<String>of(idNotStartsWith);
    return this;
  }

   /**
   * Get idNotStartsWith
   * @return idNotStartsWith
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getIdNotStartsWith() {
        return idNotStartsWith.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_ID_NOT_STARTS_WITH)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getIdNotStartsWith_JsonNullable() {
    return idNotStartsWith;
  }
  
  @JsonProperty(JSON_PROPERTY_ID_NOT_STARTS_WITH)
  public void setIdNotStartsWith_JsonNullable(JsonNullable<String> idNotStartsWith) {
    this.idNotStartsWith = idNotStartsWith;
  }

  public void setIdNotStartsWith(String idNotStartsWith) {
    this.idNotStartsWith = JsonNullable.<String>of(idNotStartsWith);
  }


  public ElfStoragePolicyWhereInput idStartsWith(String idStartsWith) {
    this.idStartsWith = JsonNullable.<String>of(idStartsWith);
    return this;
  }

   /**
   * Get idStartsWith
   * @return idStartsWith
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getIdStartsWith() {
        return idStartsWith.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_ID_STARTS_WITH)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getIdStartsWith_JsonNullable() {
    return idStartsWith;
  }
  
  @JsonProperty(JSON_PROPERTY_ID_STARTS_WITH)
  public void setIdStartsWith_JsonNullable(JsonNullable<String> idStartsWith) {
    this.idStartsWith = idStartsWith;
  }

  public void setIdStartsWith(String idStartsWith) {
    this.idStartsWith = JsonNullable.<String>of(idStartsWith);
  }


  public ElfStoragePolicyWhereInput localId(String localId) {
    this.localId = JsonNullable.<String>of(localId);
    return this;
  }

   /**
   * Get localId
   * @return localId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getLocalId() {
        return localId.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_LOCAL_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getLocalId_JsonNullable() {
    return localId;
  }
  
  @JsonProperty(JSON_PROPERTY_LOCAL_ID)
  public void setLocalId_JsonNullable(JsonNullable<String> localId) {
    this.localId = localId;
  }

  public void setLocalId(String localId) {
    this.localId = JsonNullable.<String>of(localId);
  }


  public ElfStoragePolicyWhereInput localIdContains(String localIdContains) {
    this.localIdContains = JsonNullable.<String>of(localIdContains);
    return this;
  }

   /**
   * Get localIdContains
   * @return localIdContains
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getLocalIdContains() {
        return localIdContains.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_LOCAL_ID_CONTAINS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getLocalIdContains_JsonNullable() {
    return localIdContains;
  }
  
  @JsonProperty(JSON_PROPERTY_LOCAL_ID_CONTAINS)
  public void setLocalIdContains_JsonNullable(JsonNullable<String> localIdContains) {
    this.localIdContains = localIdContains;
  }

  public void setLocalIdContains(String localIdContains) {
    this.localIdContains = JsonNullable.<String>of(localIdContains);
  }


  public ElfStoragePolicyWhereInput localIdEndsWith(String localIdEndsWith) {
    this.localIdEndsWith = JsonNullable.<String>of(localIdEndsWith);
    return this;
  }

   /**
   * Get localIdEndsWith
   * @return localIdEndsWith
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getLocalIdEndsWith() {
        return localIdEndsWith.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_LOCAL_ID_ENDS_WITH)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getLocalIdEndsWith_JsonNullable() {
    return localIdEndsWith;
  }
  
  @JsonProperty(JSON_PROPERTY_LOCAL_ID_ENDS_WITH)
  public void setLocalIdEndsWith_JsonNullable(JsonNullable<String> localIdEndsWith) {
    this.localIdEndsWith = localIdEndsWith;
  }

  public void setLocalIdEndsWith(String localIdEndsWith) {
    this.localIdEndsWith = JsonNullable.<String>of(localIdEndsWith);
  }


  public ElfStoragePolicyWhereInput localIdGt(String localIdGt) {
    this.localIdGt = JsonNullable.<String>of(localIdGt);
    return this;
  }

   /**
   * Get localIdGt
   * @return localIdGt
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getLocalIdGt() {
        return localIdGt.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_LOCAL_ID_GT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getLocalIdGt_JsonNullable() {
    return localIdGt;
  }
  
  @JsonProperty(JSON_PROPERTY_LOCAL_ID_GT)
  public void setLocalIdGt_JsonNullable(JsonNullable<String> localIdGt) {
    this.localIdGt = localIdGt;
  }

  public void setLocalIdGt(String localIdGt) {
    this.localIdGt = JsonNullable.<String>of(localIdGt);
  }


  public ElfStoragePolicyWhereInput localIdGte(String localIdGte) {
    this.localIdGte = JsonNullable.<String>of(localIdGte);
    return this;
  }

   /**
   * Get localIdGte
   * @return localIdGte
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getLocalIdGte() {
        return localIdGte.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_LOCAL_ID_GTE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getLocalIdGte_JsonNullable() {
    return localIdGte;
  }
  
  @JsonProperty(JSON_PROPERTY_LOCAL_ID_GTE)
  public void setLocalIdGte_JsonNullable(JsonNullable<String> localIdGte) {
    this.localIdGte = localIdGte;
  }

  public void setLocalIdGte(String localIdGte) {
    this.localIdGte = JsonNullable.<String>of(localIdGte);
  }


  public ElfStoragePolicyWhereInput localIdIn(List<String> localIdIn) {
    this.localIdIn = JsonNullable.<List<String>>of(localIdIn);
    return this;
  }

  public ElfStoragePolicyWhereInput addLocalIdInItem(String localIdInItem) {
    if (this.localIdIn == null || !this.localIdIn.isPresent()) {
      this.localIdIn = JsonNullable.<List<String>>of(new ArrayList<>());
    }
    try {
      this.localIdIn.get().add(localIdInItem);
    } catch (java.util.NoSuchElementException e) {
      // this can never happen, as we make sure above that the value is present
    }
    return this;
  }

   /**
   * Get localIdIn
   * @return localIdIn
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public List<String> getLocalIdIn() {
        return localIdIn.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_LOCAL_ID_IN)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<List<String>> getLocalIdIn_JsonNullable() {
    return localIdIn;
  }
  
  @JsonProperty(JSON_PROPERTY_LOCAL_ID_IN)
  public void setLocalIdIn_JsonNullable(JsonNullable<List<String>> localIdIn) {
    this.localIdIn = localIdIn;
  }

  public void setLocalIdIn(List<String> localIdIn) {
    this.localIdIn = JsonNullable.<List<String>>of(localIdIn);
  }


  public ElfStoragePolicyWhereInput localIdLt(String localIdLt) {
    this.localIdLt = JsonNullable.<String>of(localIdLt);
    return this;
  }

   /**
   * Get localIdLt
   * @return localIdLt
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getLocalIdLt() {
        return localIdLt.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_LOCAL_ID_LT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getLocalIdLt_JsonNullable() {
    return localIdLt;
  }
  
  @JsonProperty(JSON_PROPERTY_LOCAL_ID_LT)
  public void setLocalIdLt_JsonNullable(JsonNullable<String> localIdLt) {
    this.localIdLt = localIdLt;
  }

  public void setLocalIdLt(String localIdLt) {
    this.localIdLt = JsonNullable.<String>of(localIdLt);
  }


  public ElfStoragePolicyWhereInput localIdLte(String localIdLte) {
    this.localIdLte = JsonNullable.<String>of(localIdLte);
    return this;
  }

   /**
   * Get localIdLte
   * @return localIdLte
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getLocalIdLte() {
        return localIdLte.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_LOCAL_ID_LTE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getLocalIdLte_JsonNullable() {
    return localIdLte;
  }
  
  @JsonProperty(JSON_PROPERTY_LOCAL_ID_LTE)
  public void setLocalIdLte_JsonNullable(JsonNullable<String> localIdLte) {
    this.localIdLte = localIdLte;
  }

  public void setLocalIdLte(String localIdLte) {
    this.localIdLte = JsonNullable.<String>of(localIdLte);
  }


  public ElfStoragePolicyWhereInput localIdNot(String localIdNot) {
    this.localIdNot = JsonNullable.<String>of(localIdNot);
    return this;
  }

   /**
   * Get localIdNot
   * @return localIdNot
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getLocalIdNot() {
        return localIdNot.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_LOCAL_ID_NOT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getLocalIdNot_JsonNullable() {
    return localIdNot;
  }
  
  @JsonProperty(JSON_PROPERTY_LOCAL_ID_NOT)
  public void setLocalIdNot_JsonNullable(JsonNullable<String> localIdNot) {
    this.localIdNot = localIdNot;
  }

  public void setLocalIdNot(String localIdNot) {
    this.localIdNot = JsonNullable.<String>of(localIdNot);
  }


  public ElfStoragePolicyWhereInput localIdNotContains(String localIdNotContains) {
    this.localIdNotContains = JsonNullable.<String>of(localIdNotContains);
    return this;
  }

   /**
   * Get localIdNotContains
   * @return localIdNotContains
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getLocalIdNotContains() {
        return localIdNotContains.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_LOCAL_ID_NOT_CONTAINS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getLocalIdNotContains_JsonNullable() {
    return localIdNotContains;
  }
  
  @JsonProperty(JSON_PROPERTY_LOCAL_ID_NOT_CONTAINS)
  public void setLocalIdNotContains_JsonNullable(JsonNullable<String> localIdNotContains) {
    this.localIdNotContains = localIdNotContains;
  }

  public void setLocalIdNotContains(String localIdNotContains) {
    this.localIdNotContains = JsonNullable.<String>of(localIdNotContains);
  }


  public ElfStoragePolicyWhereInput localIdNotEndsWith(String localIdNotEndsWith) {
    this.localIdNotEndsWith = JsonNullable.<String>of(localIdNotEndsWith);
    return this;
  }

   /**
   * Get localIdNotEndsWith
   * @return localIdNotEndsWith
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getLocalIdNotEndsWith() {
        return localIdNotEndsWith.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_LOCAL_ID_NOT_ENDS_WITH)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getLocalIdNotEndsWith_JsonNullable() {
    return localIdNotEndsWith;
  }
  
  @JsonProperty(JSON_PROPERTY_LOCAL_ID_NOT_ENDS_WITH)
  public void setLocalIdNotEndsWith_JsonNullable(JsonNullable<String> localIdNotEndsWith) {
    this.localIdNotEndsWith = localIdNotEndsWith;
  }

  public void setLocalIdNotEndsWith(String localIdNotEndsWith) {
    this.localIdNotEndsWith = JsonNullable.<String>of(localIdNotEndsWith);
  }


  public ElfStoragePolicyWhereInput localIdNotIn(List<String> localIdNotIn) {
    this.localIdNotIn = JsonNullable.<List<String>>of(localIdNotIn);
    return this;
  }

  public ElfStoragePolicyWhereInput addLocalIdNotInItem(String localIdNotInItem) {
    if (this.localIdNotIn == null || !this.localIdNotIn.isPresent()) {
      this.localIdNotIn = JsonNullable.<List<String>>of(new ArrayList<>());
    }
    try {
      this.localIdNotIn.get().add(localIdNotInItem);
    } catch (java.util.NoSuchElementException e) {
      // this can never happen, as we make sure above that the value is present
    }
    return this;
  }

   /**
   * Get localIdNotIn
   * @return localIdNotIn
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public List<String> getLocalIdNotIn() {
        return localIdNotIn.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_LOCAL_ID_NOT_IN)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<List<String>> getLocalIdNotIn_JsonNullable() {
    return localIdNotIn;
  }
  
  @JsonProperty(JSON_PROPERTY_LOCAL_ID_NOT_IN)
  public void setLocalIdNotIn_JsonNullable(JsonNullable<List<String>> localIdNotIn) {
    this.localIdNotIn = localIdNotIn;
  }

  public void setLocalIdNotIn(List<String> localIdNotIn) {
    this.localIdNotIn = JsonNullable.<List<String>>of(localIdNotIn);
  }


  public ElfStoragePolicyWhereInput localIdNotStartsWith(String localIdNotStartsWith) {
    this.localIdNotStartsWith = JsonNullable.<String>of(localIdNotStartsWith);
    return this;
  }

   /**
   * Get localIdNotStartsWith
   * @return localIdNotStartsWith
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getLocalIdNotStartsWith() {
        return localIdNotStartsWith.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_LOCAL_ID_NOT_STARTS_WITH)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getLocalIdNotStartsWith_JsonNullable() {
    return localIdNotStartsWith;
  }
  
  @JsonProperty(JSON_PROPERTY_LOCAL_ID_NOT_STARTS_WITH)
  public void setLocalIdNotStartsWith_JsonNullable(JsonNullable<String> localIdNotStartsWith) {
    this.localIdNotStartsWith = localIdNotStartsWith;
  }

  public void setLocalIdNotStartsWith(String localIdNotStartsWith) {
    this.localIdNotStartsWith = JsonNullable.<String>of(localIdNotStartsWith);
  }


  public ElfStoragePolicyWhereInput localIdStartsWith(String localIdStartsWith) {
    this.localIdStartsWith = JsonNullable.<String>of(localIdStartsWith);
    return this;
  }

   /**
   * Get localIdStartsWith
   * @return localIdStartsWith
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getLocalIdStartsWith() {
        return localIdStartsWith.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_LOCAL_ID_STARTS_WITH)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getLocalIdStartsWith_JsonNullable() {
    return localIdStartsWith;
  }
  
  @JsonProperty(JSON_PROPERTY_LOCAL_ID_STARTS_WITH)
  public void setLocalIdStartsWith_JsonNullable(JsonNullable<String> localIdStartsWith) {
    this.localIdStartsWith = localIdStartsWith;
  }

  public void setLocalIdStartsWith(String localIdStartsWith) {
    this.localIdStartsWith = JsonNullable.<String>of(localIdStartsWith);
  }


  public ElfStoragePolicyWhereInput name(String name) {
    this.name = JsonNullable.<String>of(name);
    return this;
  }

   /**
   * Get name
   * @return name
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getName() {
        return name.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getName_JsonNullable() {
    return name;
  }
  
  @JsonProperty(JSON_PROPERTY_NAME)
  public void setName_JsonNullable(JsonNullable<String> name) {
    this.name = name;
  }

  public void setName(String name) {
    this.name = JsonNullable.<String>of(name);
  }


  public ElfStoragePolicyWhereInput nameContains(String nameContains) {
    this.nameContains = JsonNullable.<String>of(nameContains);
    return this;
  }

   /**
   * Get nameContains
   * @return nameContains
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getNameContains() {
        return nameContains.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_NAME_CONTAINS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getNameContains_JsonNullable() {
    return nameContains;
  }
  
  @JsonProperty(JSON_PROPERTY_NAME_CONTAINS)
  public void setNameContains_JsonNullable(JsonNullable<String> nameContains) {
    this.nameContains = nameContains;
  }

  public void setNameContains(String nameContains) {
    this.nameContains = JsonNullable.<String>of(nameContains);
  }


  public ElfStoragePolicyWhereInput nameEndsWith(String nameEndsWith) {
    this.nameEndsWith = JsonNullable.<String>of(nameEndsWith);
    return this;
  }

   /**
   * Get nameEndsWith
   * @return nameEndsWith
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getNameEndsWith() {
        return nameEndsWith.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_NAME_ENDS_WITH)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getNameEndsWith_JsonNullable() {
    return nameEndsWith;
  }
  
  @JsonProperty(JSON_PROPERTY_NAME_ENDS_WITH)
  public void setNameEndsWith_JsonNullable(JsonNullable<String> nameEndsWith) {
    this.nameEndsWith = nameEndsWith;
  }

  public void setNameEndsWith(String nameEndsWith) {
    this.nameEndsWith = JsonNullable.<String>of(nameEndsWith);
  }


  public ElfStoragePolicyWhereInput nameGt(String nameGt) {
    this.nameGt = JsonNullable.<String>of(nameGt);
    return this;
  }

   /**
   * Get nameGt
   * @return nameGt
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getNameGt() {
        return nameGt.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_NAME_GT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getNameGt_JsonNullable() {
    return nameGt;
  }
  
  @JsonProperty(JSON_PROPERTY_NAME_GT)
  public void setNameGt_JsonNullable(JsonNullable<String> nameGt) {
    this.nameGt = nameGt;
  }

  public void setNameGt(String nameGt) {
    this.nameGt = JsonNullable.<String>of(nameGt);
  }


  public ElfStoragePolicyWhereInput nameGte(String nameGte) {
    this.nameGte = JsonNullable.<String>of(nameGte);
    return this;
  }

   /**
   * Get nameGte
   * @return nameGte
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getNameGte() {
        return nameGte.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_NAME_GTE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getNameGte_JsonNullable() {
    return nameGte;
  }
  
  @JsonProperty(JSON_PROPERTY_NAME_GTE)
  public void setNameGte_JsonNullable(JsonNullable<String> nameGte) {
    this.nameGte = nameGte;
  }

  public void setNameGte(String nameGte) {
    this.nameGte = JsonNullable.<String>of(nameGte);
  }


  public ElfStoragePolicyWhereInput nameIn(List<String> nameIn) {
    this.nameIn = JsonNullable.<List<String>>of(nameIn);
    return this;
  }

  public ElfStoragePolicyWhereInput addNameInItem(String nameInItem) {
    if (this.nameIn == null || !this.nameIn.isPresent()) {
      this.nameIn = JsonNullable.<List<String>>of(new ArrayList<>());
    }
    try {
      this.nameIn.get().add(nameInItem);
    } catch (java.util.NoSuchElementException e) {
      // this can never happen, as we make sure above that the value is present
    }
    return this;
  }

   /**
   * Get nameIn
   * @return nameIn
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public List<String> getNameIn() {
        return nameIn.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_NAME_IN)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<List<String>> getNameIn_JsonNullable() {
    return nameIn;
  }
  
  @JsonProperty(JSON_PROPERTY_NAME_IN)
  public void setNameIn_JsonNullable(JsonNullable<List<String>> nameIn) {
    this.nameIn = nameIn;
  }

  public void setNameIn(List<String> nameIn) {
    this.nameIn = JsonNullable.<List<String>>of(nameIn);
  }


  public ElfStoragePolicyWhereInput nameLt(String nameLt) {
    this.nameLt = JsonNullable.<String>of(nameLt);
    return this;
  }

   /**
   * Get nameLt
   * @return nameLt
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getNameLt() {
        return nameLt.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_NAME_LT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getNameLt_JsonNullable() {
    return nameLt;
  }
  
  @JsonProperty(JSON_PROPERTY_NAME_LT)
  public void setNameLt_JsonNullable(JsonNullable<String> nameLt) {
    this.nameLt = nameLt;
  }

  public void setNameLt(String nameLt) {
    this.nameLt = JsonNullable.<String>of(nameLt);
  }


  public ElfStoragePolicyWhereInput nameLte(String nameLte) {
    this.nameLte = JsonNullable.<String>of(nameLte);
    return this;
  }

   /**
   * Get nameLte
   * @return nameLte
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getNameLte() {
        return nameLte.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_NAME_LTE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getNameLte_JsonNullable() {
    return nameLte;
  }
  
  @JsonProperty(JSON_PROPERTY_NAME_LTE)
  public void setNameLte_JsonNullable(JsonNullable<String> nameLte) {
    this.nameLte = nameLte;
  }

  public void setNameLte(String nameLte) {
    this.nameLte = JsonNullable.<String>of(nameLte);
  }


  public ElfStoragePolicyWhereInput nameNot(String nameNot) {
    this.nameNot = JsonNullable.<String>of(nameNot);
    return this;
  }

   /**
   * Get nameNot
   * @return nameNot
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getNameNot() {
        return nameNot.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_NAME_NOT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getNameNot_JsonNullable() {
    return nameNot;
  }
  
  @JsonProperty(JSON_PROPERTY_NAME_NOT)
  public void setNameNot_JsonNullable(JsonNullable<String> nameNot) {
    this.nameNot = nameNot;
  }

  public void setNameNot(String nameNot) {
    this.nameNot = JsonNullable.<String>of(nameNot);
  }


  public ElfStoragePolicyWhereInput nameNotContains(String nameNotContains) {
    this.nameNotContains = JsonNullable.<String>of(nameNotContains);
    return this;
  }

   /**
   * Get nameNotContains
   * @return nameNotContains
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getNameNotContains() {
        return nameNotContains.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_NAME_NOT_CONTAINS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getNameNotContains_JsonNullable() {
    return nameNotContains;
  }
  
  @JsonProperty(JSON_PROPERTY_NAME_NOT_CONTAINS)
  public void setNameNotContains_JsonNullable(JsonNullable<String> nameNotContains) {
    this.nameNotContains = nameNotContains;
  }

  public void setNameNotContains(String nameNotContains) {
    this.nameNotContains = JsonNullable.<String>of(nameNotContains);
  }


  public ElfStoragePolicyWhereInput nameNotEndsWith(String nameNotEndsWith) {
    this.nameNotEndsWith = JsonNullable.<String>of(nameNotEndsWith);
    return this;
  }

   /**
   * Get nameNotEndsWith
   * @return nameNotEndsWith
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getNameNotEndsWith() {
        return nameNotEndsWith.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_NAME_NOT_ENDS_WITH)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getNameNotEndsWith_JsonNullable() {
    return nameNotEndsWith;
  }
  
  @JsonProperty(JSON_PROPERTY_NAME_NOT_ENDS_WITH)
  public void setNameNotEndsWith_JsonNullable(JsonNullable<String> nameNotEndsWith) {
    this.nameNotEndsWith = nameNotEndsWith;
  }

  public void setNameNotEndsWith(String nameNotEndsWith) {
    this.nameNotEndsWith = JsonNullable.<String>of(nameNotEndsWith);
  }


  public ElfStoragePolicyWhereInput nameNotIn(List<String> nameNotIn) {
    this.nameNotIn = JsonNullable.<List<String>>of(nameNotIn);
    return this;
  }

  public ElfStoragePolicyWhereInput addNameNotInItem(String nameNotInItem) {
    if (this.nameNotIn == null || !this.nameNotIn.isPresent()) {
      this.nameNotIn = JsonNullable.<List<String>>of(new ArrayList<>());
    }
    try {
      this.nameNotIn.get().add(nameNotInItem);
    } catch (java.util.NoSuchElementException e) {
      // this can never happen, as we make sure above that the value is present
    }
    return this;
  }

   /**
   * Get nameNotIn
   * @return nameNotIn
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public List<String> getNameNotIn() {
        return nameNotIn.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_NAME_NOT_IN)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<List<String>> getNameNotIn_JsonNullable() {
    return nameNotIn;
  }
  
  @JsonProperty(JSON_PROPERTY_NAME_NOT_IN)
  public void setNameNotIn_JsonNullable(JsonNullable<List<String>> nameNotIn) {
    this.nameNotIn = nameNotIn;
  }

  public void setNameNotIn(List<String> nameNotIn) {
    this.nameNotIn = JsonNullable.<List<String>>of(nameNotIn);
  }


  public ElfStoragePolicyWhereInput nameNotStartsWith(String nameNotStartsWith) {
    this.nameNotStartsWith = JsonNullable.<String>of(nameNotStartsWith);
    return this;
  }

   /**
   * Get nameNotStartsWith
   * @return nameNotStartsWith
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getNameNotStartsWith() {
        return nameNotStartsWith.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_NAME_NOT_STARTS_WITH)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getNameNotStartsWith_JsonNullable() {
    return nameNotStartsWith;
  }
  
  @JsonProperty(JSON_PROPERTY_NAME_NOT_STARTS_WITH)
  public void setNameNotStartsWith_JsonNullable(JsonNullable<String> nameNotStartsWith) {
    this.nameNotStartsWith = nameNotStartsWith;
  }

  public void setNameNotStartsWith(String nameNotStartsWith) {
    this.nameNotStartsWith = JsonNullable.<String>of(nameNotStartsWith);
  }


  public ElfStoragePolicyWhereInput nameStartsWith(String nameStartsWith) {
    this.nameStartsWith = JsonNullable.<String>of(nameStartsWith);
    return this;
  }

   /**
   * Get nameStartsWith
   * @return nameStartsWith
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getNameStartsWith() {
        return nameStartsWith.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_NAME_STARTS_WITH)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getNameStartsWith_JsonNullable() {
    return nameStartsWith;
  }
  
  @JsonProperty(JSON_PROPERTY_NAME_STARTS_WITH)
  public void setNameStartsWith_JsonNullable(JsonNullable<String> nameStartsWith) {
    this.nameStartsWith = nameStartsWith;
  }

  public void setNameStartsWith(String nameStartsWith) {
    this.nameStartsWith = JsonNullable.<String>of(nameStartsWith);
  }


  public ElfStoragePolicyWhereInput NOT(List<ElfStoragePolicyWhereInput> NOT) {
    this.NOT = JsonNullable.<List<ElfStoragePolicyWhereInput>>of(NOT);
    return this;
  }

  public ElfStoragePolicyWhereInput addNOTItem(ElfStoragePolicyWhereInput NOTItem) {
    if (this.NOT == null || !this.NOT.isPresent()) {
      this.NOT = JsonNullable.<List<ElfStoragePolicyWhereInput>>of(new ArrayList<>());
    }
    try {
      this.NOT.get().add(NOTItem);
    } catch (java.util.NoSuchElementException e) {
      // this can never happen, as we make sure above that the value is present
    }
    return this;
  }

   /**
   * Get NOT
   * @return NOT
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public List<ElfStoragePolicyWhereInput> getNOT() {
        return NOT.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_N_O_T)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<List<ElfStoragePolicyWhereInput>> getNOT_JsonNullable() {
    return NOT;
  }
  
  @JsonProperty(JSON_PROPERTY_N_O_T)
  public void setNOT_JsonNullable(JsonNullable<List<ElfStoragePolicyWhereInput>> NOT) {
    this.NOT = NOT;
  }

  public void setNOT(List<ElfStoragePolicyWhereInput> NOT) {
    this.NOT = JsonNullable.<List<ElfStoragePolicyWhereInput>>of(NOT);
  }


  public ElfStoragePolicyWhereInput OR(List<ElfStoragePolicyWhereInput> OR) {
    this.OR = JsonNullable.<List<ElfStoragePolicyWhereInput>>of(OR);
    return this;
  }

  public ElfStoragePolicyWhereInput addORItem(ElfStoragePolicyWhereInput ORItem) {
    if (this.OR == null || !this.OR.isPresent()) {
      this.OR = JsonNullable.<List<ElfStoragePolicyWhereInput>>of(new ArrayList<>());
    }
    try {
      this.OR.get().add(ORItem);
    } catch (java.util.NoSuchElementException e) {
      // this can never happen, as we make sure above that the value is present
    }
    return this;
  }

   /**
   * Get OR
   * @return OR
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public List<ElfStoragePolicyWhereInput> getOR() {
        return OR.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_O_R)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<List<ElfStoragePolicyWhereInput>> getOR_JsonNullable() {
    return OR;
  }
  
  @JsonProperty(JSON_PROPERTY_O_R)
  public void setOR_JsonNullable(JsonNullable<List<ElfStoragePolicyWhereInput>> OR) {
    this.OR = OR;
  }

  public void setOR(List<ElfStoragePolicyWhereInput> OR) {
    this.OR = JsonNullable.<List<ElfStoragePolicyWhereInput>>of(OR);
  }


  public ElfStoragePolicyWhereInput replicaNum(Double replicaNum) {
    this.replicaNum = JsonNullable.<Double>of(replicaNum);
    return this;
  }

   /**
   * Get replicaNum
   * @return replicaNum
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public Double getReplicaNum() {
        return replicaNum.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_REPLICA_NUM)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<Double> getReplicaNum_JsonNullable() {
    return replicaNum;
  }
  
  @JsonProperty(JSON_PROPERTY_REPLICA_NUM)
  public void setReplicaNum_JsonNullable(JsonNullable<Double> replicaNum) {
    this.replicaNum = replicaNum;
  }

  public void setReplicaNum(Double replicaNum) {
    this.replicaNum = JsonNullable.<Double>of(replicaNum);
  }


  public ElfStoragePolicyWhereInput replicaNumGt(Double replicaNumGt) {
    this.replicaNumGt = JsonNullable.<Double>of(replicaNumGt);
    return this;
  }

   /**
   * Get replicaNumGt
   * @return replicaNumGt
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public Double getReplicaNumGt() {
        return replicaNumGt.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_REPLICA_NUM_GT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<Double> getReplicaNumGt_JsonNullable() {
    return replicaNumGt;
  }
  
  @JsonProperty(JSON_PROPERTY_REPLICA_NUM_GT)
  public void setReplicaNumGt_JsonNullable(JsonNullable<Double> replicaNumGt) {
    this.replicaNumGt = replicaNumGt;
  }

  public void setReplicaNumGt(Double replicaNumGt) {
    this.replicaNumGt = JsonNullable.<Double>of(replicaNumGt);
  }


  public ElfStoragePolicyWhereInput replicaNumGte(Double replicaNumGte) {
    this.replicaNumGte = JsonNullable.<Double>of(replicaNumGte);
    return this;
  }

   /**
   * Get replicaNumGte
   * @return replicaNumGte
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public Double getReplicaNumGte() {
        return replicaNumGte.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_REPLICA_NUM_GTE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<Double> getReplicaNumGte_JsonNullable() {
    return replicaNumGte;
  }
  
  @JsonProperty(JSON_PROPERTY_REPLICA_NUM_GTE)
  public void setReplicaNumGte_JsonNullable(JsonNullable<Double> replicaNumGte) {
    this.replicaNumGte = replicaNumGte;
  }

  public void setReplicaNumGte(Double replicaNumGte) {
    this.replicaNumGte = JsonNullable.<Double>of(replicaNumGte);
  }


  public ElfStoragePolicyWhereInput replicaNumIn(List<Double> replicaNumIn) {
    this.replicaNumIn = JsonNullable.<List<Double>>of(replicaNumIn);
    return this;
  }

  public ElfStoragePolicyWhereInput addReplicaNumInItem(Double replicaNumInItem) {
    if (this.replicaNumIn == null || !this.replicaNumIn.isPresent()) {
      this.replicaNumIn = JsonNullable.<List<Double>>of(new ArrayList<>());
    }
    try {
      this.replicaNumIn.get().add(replicaNumInItem);
    } catch (java.util.NoSuchElementException e) {
      // this can never happen, as we make sure above that the value is present
    }
    return this;
  }

   /**
   * Get replicaNumIn
   * @return replicaNumIn
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public List<Double> getReplicaNumIn() {
        return replicaNumIn.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_REPLICA_NUM_IN)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<List<Double>> getReplicaNumIn_JsonNullable() {
    return replicaNumIn;
  }
  
  @JsonProperty(JSON_PROPERTY_REPLICA_NUM_IN)
  public void setReplicaNumIn_JsonNullable(JsonNullable<List<Double>> replicaNumIn) {
    this.replicaNumIn = replicaNumIn;
  }

  public void setReplicaNumIn(List<Double> replicaNumIn) {
    this.replicaNumIn = JsonNullable.<List<Double>>of(replicaNumIn);
  }


  public ElfStoragePolicyWhereInput replicaNumLt(Double replicaNumLt) {
    this.replicaNumLt = JsonNullable.<Double>of(replicaNumLt);
    return this;
  }

   /**
   * Get replicaNumLt
   * @return replicaNumLt
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public Double getReplicaNumLt() {
        return replicaNumLt.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_REPLICA_NUM_LT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<Double> getReplicaNumLt_JsonNullable() {
    return replicaNumLt;
  }
  
  @JsonProperty(JSON_PROPERTY_REPLICA_NUM_LT)
  public void setReplicaNumLt_JsonNullable(JsonNullable<Double> replicaNumLt) {
    this.replicaNumLt = replicaNumLt;
  }

  public void setReplicaNumLt(Double replicaNumLt) {
    this.replicaNumLt = JsonNullable.<Double>of(replicaNumLt);
  }


  public ElfStoragePolicyWhereInput replicaNumLte(Double replicaNumLte) {
    this.replicaNumLte = JsonNullable.<Double>of(replicaNumLte);
    return this;
  }

   /**
   * Get replicaNumLte
   * @return replicaNumLte
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public Double getReplicaNumLte() {
        return replicaNumLte.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_REPLICA_NUM_LTE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<Double> getReplicaNumLte_JsonNullable() {
    return replicaNumLte;
  }
  
  @JsonProperty(JSON_PROPERTY_REPLICA_NUM_LTE)
  public void setReplicaNumLte_JsonNullable(JsonNullable<Double> replicaNumLte) {
    this.replicaNumLte = replicaNumLte;
  }

  public void setReplicaNumLte(Double replicaNumLte) {
    this.replicaNumLte = JsonNullable.<Double>of(replicaNumLte);
  }


  public ElfStoragePolicyWhereInput replicaNumNot(Double replicaNumNot) {
    this.replicaNumNot = JsonNullable.<Double>of(replicaNumNot);
    return this;
  }

   /**
   * Get replicaNumNot
   * @return replicaNumNot
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public Double getReplicaNumNot() {
        return replicaNumNot.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_REPLICA_NUM_NOT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<Double> getReplicaNumNot_JsonNullable() {
    return replicaNumNot;
  }
  
  @JsonProperty(JSON_PROPERTY_REPLICA_NUM_NOT)
  public void setReplicaNumNot_JsonNullable(JsonNullable<Double> replicaNumNot) {
    this.replicaNumNot = replicaNumNot;
  }

  public void setReplicaNumNot(Double replicaNumNot) {
    this.replicaNumNot = JsonNullable.<Double>of(replicaNumNot);
  }


  public ElfStoragePolicyWhereInput replicaNumNotIn(List<Double> replicaNumNotIn) {
    this.replicaNumNotIn = JsonNullable.<List<Double>>of(replicaNumNotIn);
    return this;
  }

  public ElfStoragePolicyWhereInput addReplicaNumNotInItem(Double replicaNumNotInItem) {
    if (this.replicaNumNotIn == null || !this.replicaNumNotIn.isPresent()) {
      this.replicaNumNotIn = JsonNullable.<List<Double>>of(new ArrayList<>());
    }
    try {
      this.replicaNumNotIn.get().add(replicaNumNotInItem);
    } catch (java.util.NoSuchElementException e) {
      // this can never happen, as we make sure above that the value is present
    }
    return this;
  }

   /**
   * Get replicaNumNotIn
   * @return replicaNumNotIn
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public List<Double> getReplicaNumNotIn() {
        return replicaNumNotIn.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_REPLICA_NUM_NOT_IN)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<List<Double>> getReplicaNumNotIn_JsonNullable() {
    return replicaNumNotIn;
  }
  
  @JsonProperty(JSON_PROPERTY_REPLICA_NUM_NOT_IN)
  public void setReplicaNumNotIn_JsonNullable(JsonNullable<List<Double>> replicaNumNotIn) {
    this.replicaNumNotIn = replicaNumNotIn;
  }

  public void setReplicaNumNotIn(List<Double> replicaNumNotIn) {
    this.replicaNumNotIn = JsonNullable.<List<Double>>of(replicaNumNotIn);
  }


  public ElfStoragePolicyWhereInput stripeNum(Double stripeNum) {
    this.stripeNum = JsonNullable.<Double>of(stripeNum);
    return this;
  }

   /**
   * Get stripeNum
   * @return stripeNum
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public Double getStripeNum() {
        return stripeNum.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_STRIPE_NUM)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<Double> getStripeNum_JsonNullable() {
    return stripeNum;
  }
  
  @JsonProperty(JSON_PROPERTY_STRIPE_NUM)
  public void setStripeNum_JsonNullable(JsonNullable<Double> stripeNum) {
    this.stripeNum = stripeNum;
  }

  public void setStripeNum(Double stripeNum) {
    this.stripeNum = JsonNullable.<Double>of(stripeNum);
  }


  public ElfStoragePolicyWhereInput stripeNumGt(Double stripeNumGt) {
    this.stripeNumGt = JsonNullable.<Double>of(stripeNumGt);
    return this;
  }

   /**
   * Get stripeNumGt
   * @return stripeNumGt
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public Double getStripeNumGt() {
        return stripeNumGt.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_STRIPE_NUM_GT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<Double> getStripeNumGt_JsonNullable() {
    return stripeNumGt;
  }
  
  @JsonProperty(JSON_PROPERTY_STRIPE_NUM_GT)
  public void setStripeNumGt_JsonNullable(JsonNullable<Double> stripeNumGt) {
    this.stripeNumGt = stripeNumGt;
  }

  public void setStripeNumGt(Double stripeNumGt) {
    this.stripeNumGt = JsonNullable.<Double>of(stripeNumGt);
  }


  public ElfStoragePolicyWhereInput stripeNumGte(Double stripeNumGte) {
    this.stripeNumGte = JsonNullable.<Double>of(stripeNumGte);
    return this;
  }

   /**
   * Get stripeNumGte
   * @return stripeNumGte
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public Double getStripeNumGte() {
        return stripeNumGte.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_STRIPE_NUM_GTE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<Double> getStripeNumGte_JsonNullable() {
    return stripeNumGte;
  }
  
  @JsonProperty(JSON_PROPERTY_STRIPE_NUM_GTE)
  public void setStripeNumGte_JsonNullable(JsonNullable<Double> stripeNumGte) {
    this.stripeNumGte = stripeNumGte;
  }

  public void setStripeNumGte(Double stripeNumGte) {
    this.stripeNumGte = JsonNullable.<Double>of(stripeNumGte);
  }


  public ElfStoragePolicyWhereInput stripeNumIn(List<Double> stripeNumIn) {
    this.stripeNumIn = JsonNullable.<List<Double>>of(stripeNumIn);
    return this;
  }

  public ElfStoragePolicyWhereInput addStripeNumInItem(Double stripeNumInItem) {
    if (this.stripeNumIn == null || !this.stripeNumIn.isPresent()) {
      this.stripeNumIn = JsonNullable.<List<Double>>of(new ArrayList<>());
    }
    try {
      this.stripeNumIn.get().add(stripeNumInItem);
    } catch (java.util.NoSuchElementException e) {
      // this can never happen, as we make sure above that the value is present
    }
    return this;
  }

   /**
   * Get stripeNumIn
   * @return stripeNumIn
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public List<Double> getStripeNumIn() {
        return stripeNumIn.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_STRIPE_NUM_IN)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<List<Double>> getStripeNumIn_JsonNullable() {
    return stripeNumIn;
  }
  
  @JsonProperty(JSON_PROPERTY_STRIPE_NUM_IN)
  public void setStripeNumIn_JsonNullable(JsonNullable<List<Double>> stripeNumIn) {
    this.stripeNumIn = stripeNumIn;
  }

  public void setStripeNumIn(List<Double> stripeNumIn) {
    this.stripeNumIn = JsonNullable.<List<Double>>of(stripeNumIn);
  }


  public ElfStoragePolicyWhereInput stripeNumLt(Double stripeNumLt) {
    this.stripeNumLt = JsonNullable.<Double>of(stripeNumLt);
    return this;
  }

   /**
   * Get stripeNumLt
   * @return stripeNumLt
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public Double getStripeNumLt() {
        return stripeNumLt.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_STRIPE_NUM_LT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<Double> getStripeNumLt_JsonNullable() {
    return stripeNumLt;
  }
  
  @JsonProperty(JSON_PROPERTY_STRIPE_NUM_LT)
  public void setStripeNumLt_JsonNullable(JsonNullable<Double> stripeNumLt) {
    this.stripeNumLt = stripeNumLt;
  }

  public void setStripeNumLt(Double stripeNumLt) {
    this.stripeNumLt = JsonNullable.<Double>of(stripeNumLt);
  }


  public ElfStoragePolicyWhereInput stripeNumLte(Double stripeNumLte) {
    this.stripeNumLte = JsonNullable.<Double>of(stripeNumLte);
    return this;
  }

   /**
   * Get stripeNumLte
   * @return stripeNumLte
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public Double getStripeNumLte() {
        return stripeNumLte.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_STRIPE_NUM_LTE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<Double> getStripeNumLte_JsonNullable() {
    return stripeNumLte;
  }
  
  @JsonProperty(JSON_PROPERTY_STRIPE_NUM_LTE)
  public void setStripeNumLte_JsonNullable(JsonNullable<Double> stripeNumLte) {
    this.stripeNumLte = stripeNumLte;
  }

  public void setStripeNumLte(Double stripeNumLte) {
    this.stripeNumLte = JsonNullable.<Double>of(stripeNumLte);
  }


  public ElfStoragePolicyWhereInput stripeNumNot(Double stripeNumNot) {
    this.stripeNumNot = JsonNullable.<Double>of(stripeNumNot);
    return this;
  }

   /**
   * Get stripeNumNot
   * @return stripeNumNot
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public Double getStripeNumNot() {
        return stripeNumNot.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_STRIPE_NUM_NOT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<Double> getStripeNumNot_JsonNullable() {
    return stripeNumNot;
  }
  
  @JsonProperty(JSON_PROPERTY_STRIPE_NUM_NOT)
  public void setStripeNumNot_JsonNullable(JsonNullable<Double> stripeNumNot) {
    this.stripeNumNot = stripeNumNot;
  }

  public void setStripeNumNot(Double stripeNumNot) {
    this.stripeNumNot = JsonNullable.<Double>of(stripeNumNot);
  }


  public ElfStoragePolicyWhereInput stripeNumNotIn(List<Double> stripeNumNotIn) {
    this.stripeNumNotIn = JsonNullable.<List<Double>>of(stripeNumNotIn);
    return this;
  }

  public ElfStoragePolicyWhereInput addStripeNumNotInItem(Double stripeNumNotInItem) {
    if (this.stripeNumNotIn == null || !this.stripeNumNotIn.isPresent()) {
      this.stripeNumNotIn = JsonNullable.<List<Double>>of(new ArrayList<>());
    }
    try {
      this.stripeNumNotIn.get().add(stripeNumNotInItem);
    } catch (java.util.NoSuchElementException e) {
      // this can never happen, as we make sure above that the value is present
    }
    return this;
  }

   /**
   * Get stripeNumNotIn
   * @return stripeNumNotIn
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public List<Double> getStripeNumNotIn() {
        return stripeNumNotIn.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_STRIPE_NUM_NOT_IN)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<List<Double>> getStripeNumNotIn_JsonNullable() {
    return stripeNumNotIn;
  }
  
  @JsonProperty(JSON_PROPERTY_STRIPE_NUM_NOT_IN)
  public void setStripeNumNotIn_JsonNullable(JsonNullable<List<Double>> stripeNumNotIn) {
    this.stripeNumNotIn = stripeNumNotIn;
  }

  public void setStripeNumNotIn(List<Double> stripeNumNotIn) {
    this.stripeNumNotIn = JsonNullable.<List<Double>>of(stripeNumNotIn);
  }


  public ElfStoragePolicyWhereInput stripeSize(Double stripeSize) {
    this.stripeSize = JsonNullable.<Double>of(stripeSize);
    return this;
  }

   /**
   * Get stripeSize
   * @return stripeSize
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public Double getStripeSize() {
        return stripeSize.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_STRIPE_SIZE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<Double> getStripeSize_JsonNullable() {
    return stripeSize;
  }
  
  @JsonProperty(JSON_PROPERTY_STRIPE_SIZE)
  public void setStripeSize_JsonNullable(JsonNullable<Double> stripeSize) {
    this.stripeSize = stripeSize;
  }

  public void setStripeSize(Double stripeSize) {
    this.stripeSize = JsonNullable.<Double>of(stripeSize);
  }


  public ElfStoragePolicyWhereInput stripeSizeGt(Double stripeSizeGt) {
    this.stripeSizeGt = JsonNullable.<Double>of(stripeSizeGt);
    return this;
  }

   /**
   * Get stripeSizeGt
   * @return stripeSizeGt
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public Double getStripeSizeGt() {
        return stripeSizeGt.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_STRIPE_SIZE_GT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<Double> getStripeSizeGt_JsonNullable() {
    return stripeSizeGt;
  }
  
  @JsonProperty(JSON_PROPERTY_STRIPE_SIZE_GT)
  public void setStripeSizeGt_JsonNullable(JsonNullable<Double> stripeSizeGt) {
    this.stripeSizeGt = stripeSizeGt;
  }

  public void setStripeSizeGt(Double stripeSizeGt) {
    this.stripeSizeGt = JsonNullable.<Double>of(stripeSizeGt);
  }


  public ElfStoragePolicyWhereInput stripeSizeGte(Double stripeSizeGte) {
    this.stripeSizeGte = JsonNullable.<Double>of(stripeSizeGte);
    return this;
  }

   /**
   * Get stripeSizeGte
   * @return stripeSizeGte
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public Double getStripeSizeGte() {
        return stripeSizeGte.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_STRIPE_SIZE_GTE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<Double> getStripeSizeGte_JsonNullable() {
    return stripeSizeGte;
  }
  
  @JsonProperty(JSON_PROPERTY_STRIPE_SIZE_GTE)
  public void setStripeSizeGte_JsonNullable(JsonNullable<Double> stripeSizeGte) {
    this.stripeSizeGte = stripeSizeGte;
  }

  public void setStripeSizeGte(Double stripeSizeGte) {
    this.stripeSizeGte = JsonNullable.<Double>of(stripeSizeGte);
  }


  public ElfStoragePolicyWhereInput stripeSizeIn(List<Double> stripeSizeIn) {
    this.stripeSizeIn = JsonNullable.<List<Double>>of(stripeSizeIn);
    return this;
  }

  public ElfStoragePolicyWhereInput addStripeSizeInItem(Double stripeSizeInItem) {
    if (this.stripeSizeIn == null || !this.stripeSizeIn.isPresent()) {
      this.stripeSizeIn = JsonNullable.<List<Double>>of(new ArrayList<>());
    }
    try {
      this.stripeSizeIn.get().add(stripeSizeInItem);
    } catch (java.util.NoSuchElementException e) {
      // this can never happen, as we make sure above that the value is present
    }
    return this;
  }

   /**
   * Get stripeSizeIn
   * @return stripeSizeIn
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public List<Double> getStripeSizeIn() {
        return stripeSizeIn.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_STRIPE_SIZE_IN)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<List<Double>> getStripeSizeIn_JsonNullable() {
    return stripeSizeIn;
  }
  
  @JsonProperty(JSON_PROPERTY_STRIPE_SIZE_IN)
  public void setStripeSizeIn_JsonNullable(JsonNullable<List<Double>> stripeSizeIn) {
    this.stripeSizeIn = stripeSizeIn;
  }

  public void setStripeSizeIn(List<Double> stripeSizeIn) {
    this.stripeSizeIn = JsonNullable.<List<Double>>of(stripeSizeIn);
  }


  public ElfStoragePolicyWhereInput stripeSizeLt(Double stripeSizeLt) {
    this.stripeSizeLt = JsonNullable.<Double>of(stripeSizeLt);
    return this;
  }

   /**
   * Get stripeSizeLt
   * @return stripeSizeLt
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public Double getStripeSizeLt() {
        return stripeSizeLt.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_STRIPE_SIZE_LT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<Double> getStripeSizeLt_JsonNullable() {
    return stripeSizeLt;
  }
  
  @JsonProperty(JSON_PROPERTY_STRIPE_SIZE_LT)
  public void setStripeSizeLt_JsonNullable(JsonNullable<Double> stripeSizeLt) {
    this.stripeSizeLt = stripeSizeLt;
  }

  public void setStripeSizeLt(Double stripeSizeLt) {
    this.stripeSizeLt = JsonNullable.<Double>of(stripeSizeLt);
  }


  public ElfStoragePolicyWhereInput stripeSizeLte(Double stripeSizeLte) {
    this.stripeSizeLte = JsonNullable.<Double>of(stripeSizeLte);
    return this;
  }

   /**
   * Get stripeSizeLte
   * @return stripeSizeLte
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public Double getStripeSizeLte() {
        return stripeSizeLte.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_STRIPE_SIZE_LTE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<Double> getStripeSizeLte_JsonNullable() {
    return stripeSizeLte;
  }
  
  @JsonProperty(JSON_PROPERTY_STRIPE_SIZE_LTE)
  public void setStripeSizeLte_JsonNullable(JsonNullable<Double> stripeSizeLte) {
    this.stripeSizeLte = stripeSizeLte;
  }

  public void setStripeSizeLte(Double stripeSizeLte) {
    this.stripeSizeLte = JsonNullable.<Double>of(stripeSizeLte);
  }


  public ElfStoragePolicyWhereInput stripeSizeNot(Double stripeSizeNot) {
    this.stripeSizeNot = JsonNullable.<Double>of(stripeSizeNot);
    return this;
  }

   /**
   * Get stripeSizeNot
   * @return stripeSizeNot
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public Double getStripeSizeNot() {
        return stripeSizeNot.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_STRIPE_SIZE_NOT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<Double> getStripeSizeNot_JsonNullable() {
    return stripeSizeNot;
  }
  
  @JsonProperty(JSON_PROPERTY_STRIPE_SIZE_NOT)
  public void setStripeSizeNot_JsonNullable(JsonNullable<Double> stripeSizeNot) {
    this.stripeSizeNot = stripeSizeNot;
  }

  public void setStripeSizeNot(Double stripeSizeNot) {
    this.stripeSizeNot = JsonNullable.<Double>of(stripeSizeNot);
  }


  public ElfStoragePolicyWhereInput stripeSizeNotIn(List<Double> stripeSizeNotIn) {
    this.stripeSizeNotIn = JsonNullable.<List<Double>>of(stripeSizeNotIn);
    return this;
  }

  public ElfStoragePolicyWhereInput addStripeSizeNotInItem(Double stripeSizeNotInItem) {
    if (this.stripeSizeNotIn == null || !this.stripeSizeNotIn.isPresent()) {
      this.stripeSizeNotIn = JsonNullable.<List<Double>>of(new ArrayList<>());
    }
    try {
      this.stripeSizeNotIn.get().add(stripeSizeNotInItem);
    } catch (java.util.NoSuchElementException e) {
      // this can never happen, as we make sure above that the value is present
    }
    return this;
  }

   /**
   * Get stripeSizeNotIn
   * @return stripeSizeNotIn
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public List<Double> getStripeSizeNotIn() {
        return stripeSizeNotIn.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_STRIPE_SIZE_NOT_IN)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<List<Double>> getStripeSizeNotIn_JsonNullable() {
    return stripeSizeNotIn;
  }
  
  @JsonProperty(JSON_PROPERTY_STRIPE_SIZE_NOT_IN)
  public void setStripeSizeNotIn_JsonNullable(JsonNullable<List<Double>> stripeSizeNotIn) {
    this.stripeSizeNotIn = stripeSizeNotIn;
  }

  public void setStripeSizeNotIn(List<Double> stripeSizeNotIn) {
    this.stripeSizeNotIn = JsonNullable.<List<Double>>of(stripeSizeNotIn);
  }


  public ElfStoragePolicyWhereInput thinProvision(Boolean thinProvision) {
    this.thinProvision = JsonNullable.<Boolean>of(thinProvision);
    return this;
  }

   /**
   * Get thinProvision
   * @return thinProvision
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public Boolean getThinProvision() {
        return thinProvision.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_THIN_PROVISION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<Boolean> getThinProvision_JsonNullable() {
    return thinProvision;
  }
  
  @JsonProperty(JSON_PROPERTY_THIN_PROVISION)
  public void setThinProvision_JsonNullable(JsonNullable<Boolean> thinProvision) {
    this.thinProvision = thinProvision;
  }

  public void setThinProvision(Boolean thinProvision) {
    this.thinProvision = JsonNullable.<Boolean>of(thinProvision);
  }


  public ElfStoragePolicyWhereInput thinProvisionNot(Boolean thinProvisionNot) {
    this.thinProvisionNot = JsonNullable.<Boolean>of(thinProvisionNot);
    return this;
  }

   /**
   * Get thinProvisionNot
   * @return thinProvisionNot
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public Boolean getThinProvisionNot() {
        return thinProvisionNot.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_THIN_PROVISION_NOT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<Boolean> getThinProvisionNot_JsonNullable() {
    return thinProvisionNot;
  }
  
  @JsonProperty(JSON_PROPERTY_THIN_PROVISION_NOT)
  public void setThinProvisionNot_JsonNullable(JsonNullable<Boolean> thinProvisionNot) {
    this.thinProvisionNot = thinProvisionNot;
  }

  public void setThinProvisionNot(Boolean thinProvisionNot) {
    this.thinProvisionNot = JsonNullable.<Boolean>of(thinProvisionNot);
  }


  /**
   * Return true if this ElfStoragePolicyWhereInput object is equal to o.
   */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ElfStoragePolicyWhereInput elfStoragePolicyWhereInput = (ElfStoragePolicyWhereInput) o;
    return equalsNullable(this.AND, elfStoragePolicyWhereInput.AND) &&
        equalsNullable(this.cluster, elfStoragePolicyWhereInput.cluster) &&
        equalsNullable(this.description, elfStoragePolicyWhereInput.description) &&
        equalsNullable(this.descriptionContains, elfStoragePolicyWhereInput.descriptionContains) &&
        equalsNullable(this.descriptionEndsWith, elfStoragePolicyWhereInput.descriptionEndsWith) &&
        equalsNullable(this.descriptionGt, elfStoragePolicyWhereInput.descriptionGt) &&
        equalsNullable(this.descriptionGte, elfStoragePolicyWhereInput.descriptionGte) &&
        equalsNullable(this.descriptionIn, elfStoragePolicyWhereInput.descriptionIn) &&
        equalsNullable(this.descriptionLt, elfStoragePolicyWhereInput.descriptionLt) &&
        equalsNullable(this.descriptionLte, elfStoragePolicyWhereInput.descriptionLte) &&
        equalsNullable(this.descriptionNot, elfStoragePolicyWhereInput.descriptionNot) &&
        equalsNullable(this.descriptionNotContains, elfStoragePolicyWhereInput.descriptionNotContains) &&
        equalsNullable(this.descriptionNotEndsWith, elfStoragePolicyWhereInput.descriptionNotEndsWith) &&
        equalsNullable(this.descriptionNotIn, elfStoragePolicyWhereInput.descriptionNotIn) &&
        equalsNullable(this.descriptionNotStartsWith, elfStoragePolicyWhereInput.descriptionNotStartsWith) &&
        equalsNullable(this.descriptionStartsWith, elfStoragePolicyWhereInput.descriptionStartsWith) &&
        equalsNullable(this.entityAsyncStatus, elfStoragePolicyWhereInput.entityAsyncStatus) &&
        equalsNullable(this.entityAsyncStatusIn, elfStoragePolicyWhereInput.entityAsyncStatusIn) &&
        equalsNullable(this.entityAsyncStatusNot, elfStoragePolicyWhereInput.entityAsyncStatusNot) &&
        equalsNullable(this.entityAsyncStatusNotIn, elfStoragePolicyWhereInput.entityAsyncStatusNotIn) &&
        equalsNullable(this.id, elfStoragePolicyWhereInput.id) &&
        equalsNullable(this.idContains, elfStoragePolicyWhereInput.idContains) &&
        equalsNullable(this.idEndsWith, elfStoragePolicyWhereInput.idEndsWith) &&
        equalsNullable(this.idGt, elfStoragePolicyWhereInput.idGt) &&
        equalsNullable(this.idGte, elfStoragePolicyWhereInput.idGte) &&
        equalsNullable(this.idIn, elfStoragePolicyWhereInput.idIn) &&
        equalsNullable(this.idLt, elfStoragePolicyWhereInput.idLt) &&
        equalsNullable(this.idLte, elfStoragePolicyWhereInput.idLte) &&
        equalsNullable(this.idNot, elfStoragePolicyWhereInput.idNot) &&
        equalsNullable(this.idNotContains, elfStoragePolicyWhereInput.idNotContains) &&
        equalsNullable(this.idNotEndsWith, elfStoragePolicyWhereInput.idNotEndsWith) &&
        equalsNullable(this.idNotIn, elfStoragePolicyWhereInput.idNotIn) &&
        equalsNullable(this.idNotStartsWith, elfStoragePolicyWhereInput.idNotStartsWith) &&
        equalsNullable(this.idStartsWith, elfStoragePolicyWhereInput.idStartsWith) &&
        equalsNullable(this.localId, elfStoragePolicyWhereInput.localId) &&
        equalsNullable(this.localIdContains, elfStoragePolicyWhereInput.localIdContains) &&
        equalsNullable(this.localIdEndsWith, elfStoragePolicyWhereInput.localIdEndsWith) &&
        equalsNullable(this.localIdGt, elfStoragePolicyWhereInput.localIdGt) &&
        equalsNullable(this.localIdGte, elfStoragePolicyWhereInput.localIdGte) &&
        equalsNullable(this.localIdIn, elfStoragePolicyWhereInput.localIdIn) &&
        equalsNullable(this.localIdLt, elfStoragePolicyWhereInput.localIdLt) &&
        equalsNullable(this.localIdLte, elfStoragePolicyWhereInput.localIdLte) &&
        equalsNullable(this.localIdNot, elfStoragePolicyWhereInput.localIdNot) &&
        equalsNullable(this.localIdNotContains, elfStoragePolicyWhereInput.localIdNotContains) &&
        equalsNullable(this.localIdNotEndsWith, elfStoragePolicyWhereInput.localIdNotEndsWith) &&
        equalsNullable(this.localIdNotIn, elfStoragePolicyWhereInput.localIdNotIn) &&
        equalsNullable(this.localIdNotStartsWith, elfStoragePolicyWhereInput.localIdNotStartsWith) &&
        equalsNullable(this.localIdStartsWith, elfStoragePolicyWhereInput.localIdStartsWith) &&
        equalsNullable(this.name, elfStoragePolicyWhereInput.name) &&
        equalsNullable(this.nameContains, elfStoragePolicyWhereInput.nameContains) &&
        equalsNullable(this.nameEndsWith, elfStoragePolicyWhereInput.nameEndsWith) &&
        equalsNullable(this.nameGt, elfStoragePolicyWhereInput.nameGt) &&
        equalsNullable(this.nameGte, elfStoragePolicyWhereInput.nameGte) &&
        equalsNullable(this.nameIn, elfStoragePolicyWhereInput.nameIn) &&
        equalsNullable(this.nameLt, elfStoragePolicyWhereInput.nameLt) &&
        equalsNullable(this.nameLte, elfStoragePolicyWhereInput.nameLte) &&
        equalsNullable(this.nameNot, elfStoragePolicyWhereInput.nameNot) &&
        equalsNullable(this.nameNotContains, elfStoragePolicyWhereInput.nameNotContains) &&
        equalsNullable(this.nameNotEndsWith, elfStoragePolicyWhereInput.nameNotEndsWith) &&
        equalsNullable(this.nameNotIn, elfStoragePolicyWhereInput.nameNotIn) &&
        equalsNullable(this.nameNotStartsWith, elfStoragePolicyWhereInput.nameNotStartsWith) &&
        equalsNullable(this.nameStartsWith, elfStoragePolicyWhereInput.nameStartsWith) &&
        equalsNullable(this.NOT, elfStoragePolicyWhereInput.NOT) &&
        equalsNullable(this.OR, elfStoragePolicyWhereInput.OR) &&
        equalsNullable(this.replicaNum, elfStoragePolicyWhereInput.replicaNum) &&
        equalsNullable(this.replicaNumGt, elfStoragePolicyWhereInput.replicaNumGt) &&
        equalsNullable(this.replicaNumGte, elfStoragePolicyWhereInput.replicaNumGte) &&
        equalsNullable(this.replicaNumIn, elfStoragePolicyWhereInput.replicaNumIn) &&
        equalsNullable(this.replicaNumLt, elfStoragePolicyWhereInput.replicaNumLt) &&
        equalsNullable(this.replicaNumLte, elfStoragePolicyWhereInput.replicaNumLte) &&
        equalsNullable(this.replicaNumNot, elfStoragePolicyWhereInput.replicaNumNot) &&
        equalsNullable(this.replicaNumNotIn, elfStoragePolicyWhereInput.replicaNumNotIn) &&
        equalsNullable(this.stripeNum, elfStoragePolicyWhereInput.stripeNum) &&
        equalsNullable(this.stripeNumGt, elfStoragePolicyWhereInput.stripeNumGt) &&
        equalsNullable(this.stripeNumGte, elfStoragePolicyWhereInput.stripeNumGte) &&
        equalsNullable(this.stripeNumIn, elfStoragePolicyWhereInput.stripeNumIn) &&
        equalsNullable(this.stripeNumLt, elfStoragePolicyWhereInput.stripeNumLt) &&
        equalsNullable(this.stripeNumLte, elfStoragePolicyWhereInput.stripeNumLte) &&
        equalsNullable(this.stripeNumNot, elfStoragePolicyWhereInput.stripeNumNot) &&
        equalsNullable(this.stripeNumNotIn, elfStoragePolicyWhereInput.stripeNumNotIn) &&
        equalsNullable(this.stripeSize, elfStoragePolicyWhereInput.stripeSize) &&
        equalsNullable(this.stripeSizeGt, elfStoragePolicyWhereInput.stripeSizeGt) &&
        equalsNullable(this.stripeSizeGte, elfStoragePolicyWhereInput.stripeSizeGte) &&
        equalsNullable(this.stripeSizeIn, elfStoragePolicyWhereInput.stripeSizeIn) &&
        equalsNullable(this.stripeSizeLt, elfStoragePolicyWhereInput.stripeSizeLt) &&
        equalsNullable(this.stripeSizeLte, elfStoragePolicyWhereInput.stripeSizeLte) &&
        equalsNullable(this.stripeSizeNot, elfStoragePolicyWhereInput.stripeSizeNot) &&
        equalsNullable(this.stripeSizeNotIn, elfStoragePolicyWhereInput.stripeSizeNotIn) &&
        equalsNullable(this.thinProvision, elfStoragePolicyWhereInput.thinProvision) &&
        equalsNullable(this.thinProvisionNot, elfStoragePolicyWhereInput.thinProvisionNot);
  }

  private static <T> boolean equalsNullable(JsonNullable<T> a, JsonNullable<T> b) {
    return a == b || (a != null && b != null && a.isPresent() && b.isPresent() && Objects.deepEquals(a.get(), b.get()));
  }

  @Override
  public int hashCode() {
    return Objects.hash(hashCodeNullable(AND), hashCodeNullable(cluster), hashCodeNullable(description), hashCodeNullable(descriptionContains), hashCodeNullable(descriptionEndsWith), hashCodeNullable(descriptionGt), hashCodeNullable(descriptionGte), hashCodeNullable(descriptionIn), hashCodeNullable(descriptionLt), hashCodeNullable(descriptionLte), hashCodeNullable(descriptionNot), hashCodeNullable(descriptionNotContains), hashCodeNullable(descriptionNotEndsWith), hashCodeNullable(descriptionNotIn), hashCodeNullable(descriptionNotStartsWith), hashCodeNullable(descriptionStartsWith), hashCodeNullable(entityAsyncStatus), hashCodeNullable(entityAsyncStatusIn), hashCodeNullable(entityAsyncStatusNot), hashCodeNullable(entityAsyncStatusNotIn), hashCodeNullable(id), hashCodeNullable(idContains), hashCodeNullable(idEndsWith), hashCodeNullable(idGt), hashCodeNullable(idGte), hashCodeNullable(idIn), hashCodeNullable(idLt), hashCodeNullable(idLte), hashCodeNullable(idNot), hashCodeNullable(idNotContains), hashCodeNullable(idNotEndsWith), hashCodeNullable(idNotIn), hashCodeNullable(idNotStartsWith), hashCodeNullable(idStartsWith), hashCodeNullable(localId), hashCodeNullable(localIdContains), hashCodeNullable(localIdEndsWith), hashCodeNullable(localIdGt), hashCodeNullable(localIdGte), hashCodeNullable(localIdIn), hashCodeNullable(localIdLt), hashCodeNullable(localIdLte), hashCodeNullable(localIdNot), hashCodeNullable(localIdNotContains), hashCodeNullable(localIdNotEndsWith), hashCodeNullable(localIdNotIn), hashCodeNullable(localIdNotStartsWith), hashCodeNullable(localIdStartsWith), hashCodeNullable(name), hashCodeNullable(nameContains), hashCodeNullable(nameEndsWith), hashCodeNullable(nameGt), hashCodeNullable(nameGte), hashCodeNullable(nameIn), hashCodeNullable(nameLt), hashCodeNullable(nameLte), hashCodeNullable(nameNot), hashCodeNullable(nameNotContains), hashCodeNullable(nameNotEndsWith), hashCodeNullable(nameNotIn), hashCodeNullable(nameNotStartsWith), hashCodeNullable(nameStartsWith), hashCodeNullable(NOT), hashCodeNullable(OR), hashCodeNullable(replicaNum), hashCodeNullable(replicaNumGt), hashCodeNullable(replicaNumGte), hashCodeNullable(replicaNumIn), hashCodeNullable(replicaNumLt), hashCodeNullable(replicaNumLte), hashCodeNullable(replicaNumNot), hashCodeNullable(replicaNumNotIn), hashCodeNullable(stripeNum), hashCodeNullable(stripeNumGt), hashCodeNullable(stripeNumGte), hashCodeNullable(stripeNumIn), hashCodeNullable(stripeNumLt), hashCodeNullable(stripeNumLte), hashCodeNullable(stripeNumNot), hashCodeNullable(stripeNumNotIn), hashCodeNullable(stripeSize), hashCodeNullable(stripeSizeGt), hashCodeNullable(stripeSizeGte), hashCodeNullable(stripeSizeIn), hashCodeNullable(stripeSizeLt), hashCodeNullable(stripeSizeLte), hashCodeNullable(stripeSizeNot), hashCodeNullable(stripeSizeNotIn), hashCodeNullable(thinProvision), hashCodeNullable(thinProvisionNot));
  }

  private static <T> int hashCodeNullable(JsonNullable<T> a) {
    if (a == null) {
      return 1;
    }
    return a.isPresent() ? Arrays.deepHashCode(new Object[]{a.get()}) : 31;
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ElfStoragePolicyWhereInput {\n");
    sb.append("    AND: ").append(toIndentedString(AND)).append("\n");
    sb.append("    cluster: ").append(toIndentedString(cluster)).append("\n");
    sb.append("    description: ").append(toIndentedString(description)).append("\n");
    sb.append("    descriptionContains: ").append(toIndentedString(descriptionContains)).append("\n");
    sb.append("    descriptionEndsWith: ").append(toIndentedString(descriptionEndsWith)).append("\n");
    sb.append("    descriptionGt: ").append(toIndentedString(descriptionGt)).append("\n");
    sb.append("    descriptionGte: ").append(toIndentedString(descriptionGte)).append("\n");
    sb.append("    descriptionIn: ").append(toIndentedString(descriptionIn)).append("\n");
    sb.append("    descriptionLt: ").append(toIndentedString(descriptionLt)).append("\n");
    sb.append("    descriptionLte: ").append(toIndentedString(descriptionLte)).append("\n");
    sb.append("    descriptionNot: ").append(toIndentedString(descriptionNot)).append("\n");
    sb.append("    descriptionNotContains: ").append(toIndentedString(descriptionNotContains)).append("\n");
    sb.append("    descriptionNotEndsWith: ").append(toIndentedString(descriptionNotEndsWith)).append("\n");
    sb.append("    descriptionNotIn: ").append(toIndentedString(descriptionNotIn)).append("\n");
    sb.append("    descriptionNotStartsWith: ").append(toIndentedString(descriptionNotStartsWith)).append("\n");
    sb.append("    descriptionStartsWith: ").append(toIndentedString(descriptionStartsWith)).append("\n");
    sb.append("    entityAsyncStatus: ").append(toIndentedString(entityAsyncStatus)).append("\n");
    sb.append("    entityAsyncStatusIn: ").append(toIndentedString(entityAsyncStatusIn)).append("\n");
    sb.append("    entityAsyncStatusNot: ").append(toIndentedString(entityAsyncStatusNot)).append("\n");
    sb.append("    entityAsyncStatusNotIn: ").append(toIndentedString(entityAsyncStatusNotIn)).append("\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    idContains: ").append(toIndentedString(idContains)).append("\n");
    sb.append("    idEndsWith: ").append(toIndentedString(idEndsWith)).append("\n");
    sb.append("    idGt: ").append(toIndentedString(idGt)).append("\n");
    sb.append("    idGte: ").append(toIndentedString(idGte)).append("\n");
    sb.append("    idIn: ").append(toIndentedString(idIn)).append("\n");
    sb.append("    idLt: ").append(toIndentedString(idLt)).append("\n");
    sb.append("    idLte: ").append(toIndentedString(idLte)).append("\n");
    sb.append("    idNot: ").append(toIndentedString(idNot)).append("\n");
    sb.append("    idNotContains: ").append(toIndentedString(idNotContains)).append("\n");
    sb.append("    idNotEndsWith: ").append(toIndentedString(idNotEndsWith)).append("\n");
    sb.append("    idNotIn: ").append(toIndentedString(idNotIn)).append("\n");
    sb.append("    idNotStartsWith: ").append(toIndentedString(idNotStartsWith)).append("\n");
    sb.append("    idStartsWith: ").append(toIndentedString(idStartsWith)).append("\n");
    sb.append("    localId: ").append(toIndentedString(localId)).append("\n");
    sb.append("    localIdContains: ").append(toIndentedString(localIdContains)).append("\n");
    sb.append("    localIdEndsWith: ").append(toIndentedString(localIdEndsWith)).append("\n");
    sb.append("    localIdGt: ").append(toIndentedString(localIdGt)).append("\n");
    sb.append("    localIdGte: ").append(toIndentedString(localIdGte)).append("\n");
    sb.append("    localIdIn: ").append(toIndentedString(localIdIn)).append("\n");
    sb.append("    localIdLt: ").append(toIndentedString(localIdLt)).append("\n");
    sb.append("    localIdLte: ").append(toIndentedString(localIdLte)).append("\n");
    sb.append("    localIdNot: ").append(toIndentedString(localIdNot)).append("\n");
    sb.append("    localIdNotContains: ").append(toIndentedString(localIdNotContains)).append("\n");
    sb.append("    localIdNotEndsWith: ").append(toIndentedString(localIdNotEndsWith)).append("\n");
    sb.append("    localIdNotIn: ").append(toIndentedString(localIdNotIn)).append("\n");
    sb.append("    localIdNotStartsWith: ").append(toIndentedString(localIdNotStartsWith)).append("\n");
    sb.append("    localIdStartsWith: ").append(toIndentedString(localIdStartsWith)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    nameContains: ").append(toIndentedString(nameContains)).append("\n");
    sb.append("    nameEndsWith: ").append(toIndentedString(nameEndsWith)).append("\n");
    sb.append("    nameGt: ").append(toIndentedString(nameGt)).append("\n");
    sb.append("    nameGte: ").append(toIndentedString(nameGte)).append("\n");
    sb.append("    nameIn: ").append(toIndentedString(nameIn)).append("\n");
    sb.append("    nameLt: ").append(toIndentedString(nameLt)).append("\n");
    sb.append("    nameLte: ").append(toIndentedString(nameLte)).append("\n");
    sb.append("    nameNot: ").append(toIndentedString(nameNot)).append("\n");
    sb.append("    nameNotContains: ").append(toIndentedString(nameNotContains)).append("\n");
    sb.append("    nameNotEndsWith: ").append(toIndentedString(nameNotEndsWith)).append("\n");
    sb.append("    nameNotIn: ").append(toIndentedString(nameNotIn)).append("\n");
    sb.append("    nameNotStartsWith: ").append(toIndentedString(nameNotStartsWith)).append("\n");
    sb.append("    nameStartsWith: ").append(toIndentedString(nameStartsWith)).append("\n");
    sb.append("    NOT: ").append(toIndentedString(NOT)).append("\n");
    sb.append("    OR: ").append(toIndentedString(OR)).append("\n");
    sb.append("    replicaNum: ").append(toIndentedString(replicaNum)).append("\n");
    sb.append("    replicaNumGt: ").append(toIndentedString(replicaNumGt)).append("\n");
    sb.append("    replicaNumGte: ").append(toIndentedString(replicaNumGte)).append("\n");
    sb.append("    replicaNumIn: ").append(toIndentedString(replicaNumIn)).append("\n");
    sb.append("    replicaNumLt: ").append(toIndentedString(replicaNumLt)).append("\n");
    sb.append("    replicaNumLte: ").append(toIndentedString(replicaNumLte)).append("\n");
    sb.append("    replicaNumNot: ").append(toIndentedString(replicaNumNot)).append("\n");
    sb.append("    replicaNumNotIn: ").append(toIndentedString(replicaNumNotIn)).append("\n");
    sb.append("    stripeNum: ").append(toIndentedString(stripeNum)).append("\n");
    sb.append("    stripeNumGt: ").append(toIndentedString(stripeNumGt)).append("\n");
    sb.append("    stripeNumGte: ").append(toIndentedString(stripeNumGte)).append("\n");
    sb.append("    stripeNumIn: ").append(toIndentedString(stripeNumIn)).append("\n");
    sb.append("    stripeNumLt: ").append(toIndentedString(stripeNumLt)).append("\n");
    sb.append("    stripeNumLte: ").append(toIndentedString(stripeNumLte)).append("\n");
    sb.append("    stripeNumNot: ").append(toIndentedString(stripeNumNot)).append("\n");
    sb.append("    stripeNumNotIn: ").append(toIndentedString(stripeNumNotIn)).append("\n");
    sb.append("    stripeSize: ").append(toIndentedString(stripeSize)).append("\n");
    sb.append("    stripeSizeGt: ").append(toIndentedString(stripeSizeGt)).append("\n");
    sb.append("    stripeSizeGte: ").append(toIndentedString(stripeSizeGte)).append("\n");
    sb.append("    stripeSizeIn: ").append(toIndentedString(stripeSizeIn)).append("\n");
    sb.append("    stripeSizeLt: ").append(toIndentedString(stripeSizeLt)).append("\n");
    sb.append("    stripeSizeLte: ").append(toIndentedString(stripeSizeLte)).append("\n");
    sb.append("    stripeSizeNot: ").append(toIndentedString(stripeSizeNot)).append("\n");
    sb.append("    stripeSizeNotIn: ").append(toIndentedString(stripeSizeNotIn)).append("\n");
    sb.append("    thinProvision: ").append(toIndentedString(thinProvision)).append("\n");
    sb.append("    thinProvisionNot: ").append(toIndentedString(thinProvisionNot)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

