/*
 * Tower SDK API
 * cloudtower operation API and SDK
 *
 * The version of the OpenAPI document: 1.7.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.smartx.tower.model;

import java.util.Objects;
import java.util.Arrays;
import java.util.Map;
import java.util.HashMap;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import com.smartx.tower.model.DiskFunction;
import com.smartx.tower.model.DiskHealthStatus;
import com.smartx.tower.model.DiskType;
import com.smartx.tower.model.DiskUsage;
import com.smartx.tower.model.DiskUsageStatus;
import com.smartx.tower.model.EntityAsyncStatus;
import com.smartx.tower.model.HostWhereInput;
import com.smartx.tower.model.LabelWhereInput;
import com.smartx.tower.model.PmemDimmWhereInput;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.util.ArrayList;
import java.util.List;
import org.openapitools.jackson.nullable.JsonNullable;
import com.fasterxml.jackson.annotation.JsonIgnore;
import org.openapitools.jackson.nullable.JsonNullable;
import java.util.NoSuchElementException;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;


/**
 * DiskWhereInput
 */
@JsonPropertyOrder({
  DiskWhereInput.JSON_PROPERTY_A_N_D,
  DiskWhereInput.JSON_PROPERTY_ENTITY_ASYNC_STATUS,
  DiskWhereInput.JSON_PROPERTY_ENTITY_ASYNC_STATUS_IN,
  DiskWhereInput.JSON_PROPERTY_ENTITY_ASYNC_STATUS_NOT,
  DiskWhereInput.JSON_PROPERTY_ENTITY_ASYNC_STATUS_NOT_IN,
  DiskWhereInput.JSON_PROPERTY_FIRMWARE,
  DiskWhereInput.JSON_PROPERTY_FIRMWARE_CONTAINS,
  DiskWhereInput.JSON_PROPERTY_FIRMWARE_ENDS_WITH,
  DiskWhereInput.JSON_PROPERTY_FIRMWARE_GT,
  DiskWhereInput.JSON_PROPERTY_FIRMWARE_GTE,
  DiskWhereInput.JSON_PROPERTY_FIRMWARE_IN,
  DiskWhereInput.JSON_PROPERTY_FIRMWARE_LT,
  DiskWhereInput.JSON_PROPERTY_FIRMWARE_LTE,
  DiskWhereInput.JSON_PROPERTY_FIRMWARE_NOT,
  DiskWhereInput.JSON_PROPERTY_FIRMWARE_NOT_CONTAINS,
  DiskWhereInput.JSON_PROPERTY_FIRMWARE_NOT_ENDS_WITH,
  DiskWhereInput.JSON_PROPERTY_FIRMWARE_NOT_IN,
  DiskWhereInput.JSON_PROPERTY_FIRMWARE_NOT_STARTS_WITH,
  DiskWhereInput.JSON_PROPERTY_FIRMWARE_STARTS_WITH,
  DiskWhereInput.JSON_PROPERTY_FUNCTION,
  DiskWhereInput.JSON_PROPERTY_FUNCTION_IN,
  DiskWhereInput.JSON_PROPERTY_FUNCTION_NOT,
  DiskWhereInput.JSON_PROPERTY_FUNCTION_NOT_IN,
  DiskWhereInput.JSON_PROPERTY_HEALTH_STATUS,
  DiskWhereInput.JSON_PROPERTY_HEALTH_STATUS_IN,
  DiskWhereInput.JSON_PROPERTY_HEALTH_STATUS_NOT,
  DiskWhereInput.JSON_PROPERTY_HEALTH_STATUS_NOT_IN,
  DiskWhereInput.JSON_PROPERTY_HEALTHY,
  DiskWhereInput.JSON_PROPERTY_HEALTHY_NOT,
  DiskWhereInput.JSON_PROPERTY_HOST,
  DiskWhereInput.JSON_PROPERTY_ID,
  DiskWhereInput.JSON_PROPERTY_ID_CONTAINS,
  DiskWhereInput.JSON_PROPERTY_ID_ENDS_WITH,
  DiskWhereInput.JSON_PROPERTY_ID_GT,
  DiskWhereInput.JSON_PROPERTY_ID_GTE,
  DiskWhereInput.JSON_PROPERTY_ID_IN,
  DiskWhereInput.JSON_PROPERTY_ID_LT,
  DiskWhereInput.JSON_PROPERTY_ID_LTE,
  DiskWhereInput.JSON_PROPERTY_ID_NOT,
  DiskWhereInput.JSON_PROPERTY_ID_NOT_CONTAINS,
  DiskWhereInput.JSON_PROPERTY_ID_NOT_ENDS_WITH,
  DiskWhereInput.JSON_PROPERTY_ID_NOT_IN,
  DiskWhereInput.JSON_PROPERTY_ID_NOT_STARTS_WITH,
  DiskWhereInput.JSON_PROPERTY_ID_STARTS_WITH,
  DiskWhereInput.JSON_PROPERTY_LABELS_EVERY,
  DiskWhereInput.JSON_PROPERTY_LABELS_NONE,
  DiskWhereInput.JSON_PROPERTY_LABELS_SOME,
  DiskWhereInput.JSON_PROPERTY_LOCAL_ID,
  DiskWhereInput.JSON_PROPERTY_LOCAL_ID_CONTAINS,
  DiskWhereInput.JSON_PROPERTY_LOCAL_ID_ENDS_WITH,
  DiskWhereInput.JSON_PROPERTY_LOCAL_ID_GT,
  DiskWhereInput.JSON_PROPERTY_LOCAL_ID_GTE,
  DiskWhereInput.JSON_PROPERTY_LOCAL_ID_IN,
  DiskWhereInput.JSON_PROPERTY_LOCAL_ID_LT,
  DiskWhereInput.JSON_PROPERTY_LOCAL_ID_LTE,
  DiskWhereInput.JSON_PROPERTY_LOCAL_ID_NOT,
  DiskWhereInput.JSON_PROPERTY_LOCAL_ID_NOT_CONTAINS,
  DiskWhereInput.JSON_PROPERTY_LOCAL_ID_NOT_ENDS_WITH,
  DiskWhereInput.JSON_PROPERTY_LOCAL_ID_NOT_IN,
  DiskWhereInput.JSON_PROPERTY_LOCAL_ID_NOT_STARTS_WITH,
  DiskWhereInput.JSON_PROPERTY_LOCAL_ID_STARTS_WITH,
  DiskWhereInput.JSON_PROPERTY_MODEL,
  DiskWhereInput.JSON_PROPERTY_MODEL_CONTAINS,
  DiskWhereInput.JSON_PROPERTY_MODEL_ENDS_WITH,
  DiskWhereInput.JSON_PROPERTY_MODEL_GT,
  DiskWhereInput.JSON_PROPERTY_MODEL_GTE,
  DiskWhereInput.JSON_PROPERTY_MODEL_IN,
  DiskWhereInput.JSON_PROPERTY_MODEL_LT,
  DiskWhereInput.JSON_PROPERTY_MODEL_LTE,
  DiskWhereInput.JSON_PROPERTY_MODEL_NOT,
  DiskWhereInput.JSON_PROPERTY_MODEL_NOT_CONTAINS,
  DiskWhereInput.JSON_PROPERTY_MODEL_NOT_ENDS_WITH,
  DiskWhereInput.JSON_PROPERTY_MODEL_NOT_IN,
  DiskWhereInput.JSON_PROPERTY_MODEL_NOT_STARTS_WITH,
  DiskWhereInput.JSON_PROPERTY_MODEL_STARTS_WITH,
  DiskWhereInput.JSON_PROPERTY_MOUNTED,
  DiskWhereInput.JSON_PROPERTY_MOUNTED_NOT,
  DiskWhereInput.JSON_PROPERTY_NAME,
  DiskWhereInput.JSON_PROPERTY_NAME_CONTAINS,
  DiskWhereInput.JSON_PROPERTY_NAME_ENDS_WITH,
  DiskWhereInput.JSON_PROPERTY_NAME_GT,
  DiskWhereInput.JSON_PROPERTY_NAME_GTE,
  DiskWhereInput.JSON_PROPERTY_NAME_IN,
  DiskWhereInput.JSON_PROPERTY_NAME_LT,
  DiskWhereInput.JSON_PROPERTY_NAME_LTE,
  DiskWhereInput.JSON_PROPERTY_NAME_NOT,
  DiskWhereInput.JSON_PROPERTY_NAME_NOT_CONTAINS,
  DiskWhereInput.JSON_PROPERTY_NAME_NOT_ENDS_WITH,
  DiskWhereInput.JSON_PROPERTY_NAME_NOT_IN,
  DiskWhereInput.JSON_PROPERTY_NAME_NOT_STARTS_WITH,
  DiskWhereInput.JSON_PROPERTY_NAME_STARTS_WITH,
  DiskWhereInput.JSON_PROPERTY_N_O_T,
  DiskWhereInput.JSON_PROPERTY_NUMA_NODE,
  DiskWhereInput.JSON_PROPERTY_NUMA_NODE_GT,
  DiskWhereInput.JSON_PROPERTY_NUMA_NODE_GTE,
  DiskWhereInput.JSON_PROPERTY_NUMA_NODE_IN,
  DiskWhereInput.JSON_PROPERTY_NUMA_NODE_LT,
  DiskWhereInput.JSON_PROPERTY_NUMA_NODE_LTE,
  DiskWhereInput.JSON_PROPERTY_NUMA_NODE_NOT,
  DiskWhereInput.JSON_PROPERTY_NUMA_NODE_NOT_IN,
  DiskWhereInput.JSON_PROPERTY_OFFLINE,
  DiskWhereInput.JSON_PROPERTY_OFFLINE_NOT,
  DiskWhereInput.JSON_PROPERTY_O_R,
  DiskWhereInput.JSON_PROPERTY_PATH,
  DiskWhereInput.JSON_PROPERTY_PATH_CONTAINS,
  DiskWhereInput.JSON_PROPERTY_PATH_ENDS_WITH,
  DiskWhereInput.JSON_PROPERTY_PATH_GT,
  DiskWhereInput.JSON_PROPERTY_PATH_GTE,
  DiskWhereInput.JSON_PROPERTY_PATH_IN,
  DiskWhereInput.JSON_PROPERTY_PATH_LT,
  DiskWhereInput.JSON_PROPERTY_PATH_LTE,
  DiskWhereInput.JSON_PROPERTY_PATH_NOT,
  DiskWhereInput.JSON_PROPERTY_PATH_NOT_CONTAINS,
  DiskWhereInput.JSON_PROPERTY_PATH_NOT_ENDS_WITH,
  DiskWhereInput.JSON_PROPERTY_PATH_NOT_IN,
  DiskWhereInput.JSON_PROPERTY_PATH_NOT_STARTS_WITH,
  DiskWhereInput.JSON_PROPERTY_PATH_STARTS_WITH,
  DiskWhereInput.JSON_PROPERTY_PERSISTENT_MEMORY_TYPE,
  DiskWhereInput.JSON_PROPERTY_PERSISTENT_MEMORY_TYPE_CONTAINS,
  DiskWhereInput.JSON_PROPERTY_PERSISTENT_MEMORY_TYPE_ENDS_WITH,
  DiskWhereInput.JSON_PROPERTY_PERSISTENT_MEMORY_TYPE_GT,
  DiskWhereInput.JSON_PROPERTY_PERSISTENT_MEMORY_TYPE_GTE,
  DiskWhereInput.JSON_PROPERTY_PERSISTENT_MEMORY_TYPE_IN,
  DiskWhereInput.JSON_PROPERTY_PERSISTENT_MEMORY_TYPE_LT,
  DiskWhereInput.JSON_PROPERTY_PERSISTENT_MEMORY_TYPE_LTE,
  DiskWhereInput.JSON_PROPERTY_PERSISTENT_MEMORY_TYPE_NOT,
  DiskWhereInput.JSON_PROPERTY_PERSISTENT_MEMORY_TYPE_NOT_CONTAINS,
  DiskWhereInput.JSON_PROPERTY_PERSISTENT_MEMORY_TYPE_NOT_ENDS_WITH,
  DiskWhereInput.JSON_PROPERTY_PERSISTENT_MEMORY_TYPE_NOT_IN,
  DiskWhereInput.JSON_PROPERTY_PERSISTENT_MEMORY_TYPE_NOT_STARTS_WITH,
  DiskWhereInput.JSON_PROPERTY_PERSISTENT_MEMORY_TYPE_STARTS_WITH,
  DiskWhereInput.JSON_PROPERTY_PHYSICAL_SLOT_ON_BRICK,
  DiskWhereInput.JSON_PROPERTY_PHYSICAL_SLOT_ON_BRICK_GT,
  DiskWhereInput.JSON_PROPERTY_PHYSICAL_SLOT_ON_BRICK_GTE,
  DiskWhereInput.JSON_PROPERTY_PHYSICAL_SLOT_ON_BRICK_IN,
  DiskWhereInput.JSON_PROPERTY_PHYSICAL_SLOT_ON_BRICK_LT,
  DiskWhereInput.JSON_PROPERTY_PHYSICAL_SLOT_ON_BRICK_LTE,
  DiskWhereInput.JSON_PROPERTY_PHYSICAL_SLOT_ON_BRICK_NOT,
  DiskWhereInput.JSON_PROPERTY_PHYSICAL_SLOT_ON_BRICK_NOT_IN,
  DiskWhereInput.JSON_PROPERTY_PMEM_DIMMS_EVERY,
  DiskWhereInput.JSON_PROPERTY_PMEM_DIMMS_NONE,
  DiskWhereInput.JSON_PROPERTY_PMEM_DIMMS_SOME,
  DiskWhereInput.JSON_PROPERTY_RECOMMENDED_USAGE,
  DiskWhereInput.JSON_PROPERTY_RECOMMENDED_USAGE_IN,
  DiskWhereInput.JSON_PROPERTY_RECOMMENDED_USAGE_NOT,
  DiskWhereInput.JSON_PROPERTY_RECOMMENDED_USAGE_NOT_IN,
  DiskWhereInput.JSON_PROPERTY_REMAINING_LIFE_PERCENT,
  DiskWhereInput.JSON_PROPERTY_REMAINING_LIFE_PERCENT_GT,
  DiskWhereInput.JSON_PROPERTY_REMAINING_LIFE_PERCENT_GTE,
  DiskWhereInput.JSON_PROPERTY_REMAINING_LIFE_PERCENT_IN,
  DiskWhereInput.JSON_PROPERTY_REMAINING_LIFE_PERCENT_LT,
  DiskWhereInput.JSON_PROPERTY_REMAINING_LIFE_PERCENT_LTE,
  DiskWhereInput.JSON_PROPERTY_REMAINING_LIFE_PERCENT_NOT,
  DiskWhereInput.JSON_PROPERTY_REMAINING_LIFE_PERCENT_NOT_IN,
  DiskWhereInput.JSON_PROPERTY_SERIAL,
  DiskWhereInput.JSON_PROPERTY_SERIAL_CONTAINS,
  DiskWhereInput.JSON_PROPERTY_SERIAL_ENDS_WITH,
  DiskWhereInput.JSON_PROPERTY_SERIAL_GT,
  DiskWhereInput.JSON_PROPERTY_SERIAL_GTE,
  DiskWhereInput.JSON_PROPERTY_SERIAL_IN,
  DiskWhereInput.JSON_PROPERTY_SERIAL_LT,
  DiskWhereInput.JSON_PROPERTY_SERIAL_LTE,
  DiskWhereInput.JSON_PROPERTY_SERIAL_NOT,
  DiskWhereInput.JSON_PROPERTY_SERIAL_NOT_CONTAINS,
  DiskWhereInput.JSON_PROPERTY_SERIAL_NOT_ENDS_WITH,
  DiskWhereInput.JSON_PROPERTY_SERIAL_NOT_IN,
  DiskWhereInput.JSON_PROPERTY_SERIAL_NOT_STARTS_WITH,
  DiskWhereInput.JSON_PROPERTY_SERIAL_STARTS_WITH,
  DiskWhereInput.JSON_PROPERTY_SIZE,
  DiskWhereInput.JSON_PROPERTY_SIZE_GT,
  DiskWhereInput.JSON_PROPERTY_SIZE_GTE,
  DiskWhereInput.JSON_PROPERTY_SIZE_IN,
  DiskWhereInput.JSON_PROPERTY_SIZE_LT,
  DiskWhereInput.JSON_PROPERTY_SIZE_LTE,
  DiskWhereInput.JSON_PROPERTY_SIZE_NOT,
  DiskWhereInput.JSON_PROPERTY_SIZE_NOT_IN,
  DiskWhereInput.JSON_PROPERTY_TYPE,
  DiskWhereInput.JSON_PROPERTY_TYPE_IN,
  DiskWhereInput.JSON_PROPERTY_TYPE_NOT,
  DiskWhereInput.JSON_PROPERTY_TYPE_NOT_IN,
  DiskWhereInput.JSON_PROPERTY_USAGE,
  DiskWhereInput.JSON_PROPERTY_USAGE_IN,
  DiskWhereInput.JSON_PROPERTY_USAGE_NOT,
  DiskWhereInput.JSON_PROPERTY_USAGE_NOT_IN,
  DiskWhereInput.JSON_PROPERTY_USAGE_STATUS,
  DiskWhereInput.JSON_PROPERTY_USAGE_STATUS_IN,
  DiskWhereInput.JSON_PROPERTY_USAGE_STATUS_NOT,
  DiskWhereInput.JSON_PROPERTY_USAGE_STATUS_NOT_IN
})
@javax.annotation.processing.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2021-10-27T15:59:14.939791800+08:00[Asia/Shanghai]")
public class DiskWhereInput {
  public static final String JSON_PROPERTY_A_N_D = "AND";
  private JsonNullable<List<DiskWhereInput>> AND = JsonNullable.<List<DiskWhereInput>>undefined();

  public static final String JSON_PROPERTY_ENTITY_ASYNC_STATUS = "entityAsyncStatus";
  private JsonNullable<EntityAsyncStatus> entityAsyncStatus = JsonNullable.<EntityAsyncStatus>undefined();

  public static final String JSON_PROPERTY_ENTITY_ASYNC_STATUS_IN = "entityAsyncStatus_in";
  private JsonNullable<List<EntityAsyncStatus>> entityAsyncStatusIn = JsonNullable.<List<EntityAsyncStatus>>undefined();

  public static final String JSON_PROPERTY_ENTITY_ASYNC_STATUS_NOT = "entityAsyncStatus_not";
  private JsonNullable<EntityAsyncStatus> entityAsyncStatusNot = JsonNullable.<EntityAsyncStatus>undefined();

  public static final String JSON_PROPERTY_ENTITY_ASYNC_STATUS_NOT_IN = "entityAsyncStatus_not_in";
  private JsonNullable<List<EntityAsyncStatus>> entityAsyncStatusNotIn = JsonNullable.<List<EntityAsyncStatus>>undefined();

  public static final String JSON_PROPERTY_FIRMWARE = "firmware";
  private JsonNullable<String> firmware = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_FIRMWARE_CONTAINS = "firmware_contains";
  private JsonNullable<String> firmwareContains = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_FIRMWARE_ENDS_WITH = "firmware_ends_with";
  private JsonNullable<String> firmwareEndsWith = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_FIRMWARE_GT = "firmware_gt";
  private JsonNullable<String> firmwareGt = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_FIRMWARE_GTE = "firmware_gte";
  private JsonNullable<String> firmwareGte = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_FIRMWARE_IN = "firmware_in";
  private JsonNullable<List<String>> firmwareIn = JsonNullable.<List<String>>undefined();

  public static final String JSON_PROPERTY_FIRMWARE_LT = "firmware_lt";
  private JsonNullable<String> firmwareLt = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_FIRMWARE_LTE = "firmware_lte";
  private JsonNullable<String> firmwareLte = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_FIRMWARE_NOT = "firmware_not";
  private JsonNullable<String> firmwareNot = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_FIRMWARE_NOT_CONTAINS = "firmware_not_contains";
  private JsonNullable<String> firmwareNotContains = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_FIRMWARE_NOT_ENDS_WITH = "firmware_not_ends_with";
  private JsonNullable<String> firmwareNotEndsWith = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_FIRMWARE_NOT_IN = "firmware_not_in";
  private JsonNullable<List<String>> firmwareNotIn = JsonNullable.<List<String>>undefined();

  public static final String JSON_PROPERTY_FIRMWARE_NOT_STARTS_WITH = "firmware_not_starts_with";
  private JsonNullable<String> firmwareNotStartsWith = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_FIRMWARE_STARTS_WITH = "firmware_starts_with";
  private JsonNullable<String> firmwareStartsWith = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_FUNCTION = "function";
  private JsonNullable<DiskFunction> function = JsonNullable.<DiskFunction>undefined();

  public static final String JSON_PROPERTY_FUNCTION_IN = "function_in";
  private JsonNullable<List<DiskFunction>> functionIn = JsonNullable.<List<DiskFunction>>undefined();

  public static final String JSON_PROPERTY_FUNCTION_NOT = "function_not";
  private JsonNullable<DiskFunction> functionNot = JsonNullable.<DiskFunction>undefined();

  public static final String JSON_PROPERTY_FUNCTION_NOT_IN = "function_not_in";
  private JsonNullable<List<DiskFunction>> functionNotIn = JsonNullable.<List<DiskFunction>>undefined();

  public static final String JSON_PROPERTY_HEALTH_STATUS = "health_status";
  private JsonNullable<DiskHealthStatus> healthStatus = JsonNullable.<DiskHealthStatus>undefined();

  public static final String JSON_PROPERTY_HEALTH_STATUS_IN = "health_status_in";
  private JsonNullable<List<DiskHealthStatus>> healthStatusIn = JsonNullable.<List<DiskHealthStatus>>undefined();

  public static final String JSON_PROPERTY_HEALTH_STATUS_NOT = "health_status_not";
  private JsonNullable<DiskHealthStatus> healthStatusNot = JsonNullable.<DiskHealthStatus>undefined();

  public static final String JSON_PROPERTY_HEALTH_STATUS_NOT_IN = "health_status_not_in";
  private JsonNullable<List<DiskHealthStatus>> healthStatusNotIn = JsonNullable.<List<DiskHealthStatus>>undefined();

  public static final String JSON_PROPERTY_HEALTHY = "healthy";
  private JsonNullable<Boolean> healthy = JsonNullable.<Boolean>undefined();

  public static final String JSON_PROPERTY_HEALTHY_NOT = "healthy_not";
  private JsonNullable<Boolean> healthyNot = JsonNullable.<Boolean>undefined();

  public static final String JSON_PROPERTY_HOST = "host";
  private JsonNullable<HostWhereInput> host = JsonNullable.<HostWhereInput>undefined();

  public static final String JSON_PROPERTY_ID = "id";
  private JsonNullable<String> id = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_ID_CONTAINS = "id_contains";
  private JsonNullable<String> idContains = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_ID_ENDS_WITH = "id_ends_with";
  private JsonNullable<String> idEndsWith = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_ID_GT = "id_gt";
  private JsonNullable<String> idGt = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_ID_GTE = "id_gte";
  private JsonNullable<String> idGte = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_ID_IN = "id_in";
  private JsonNullable<List<String>> idIn = JsonNullable.<List<String>>undefined();

  public static final String JSON_PROPERTY_ID_LT = "id_lt";
  private JsonNullable<String> idLt = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_ID_LTE = "id_lte";
  private JsonNullable<String> idLte = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_ID_NOT = "id_not";
  private JsonNullable<String> idNot = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_ID_NOT_CONTAINS = "id_not_contains";
  private JsonNullable<String> idNotContains = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_ID_NOT_ENDS_WITH = "id_not_ends_with";
  private JsonNullable<String> idNotEndsWith = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_ID_NOT_IN = "id_not_in";
  private JsonNullable<List<String>> idNotIn = JsonNullable.<List<String>>undefined();

  public static final String JSON_PROPERTY_ID_NOT_STARTS_WITH = "id_not_starts_with";
  private JsonNullable<String> idNotStartsWith = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_ID_STARTS_WITH = "id_starts_with";
  private JsonNullable<String> idStartsWith = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_LABELS_EVERY = "labels_every";
  private JsonNullable<LabelWhereInput> labelsEvery = JsonNullable.<LabelWhereInput>undefined();

  public static final String JSON_PROPERTY_LABELS_NONE = "labels_none";
  private JsonNullable<LabelWhereInput> labelsNone = JsonNullable.<LabelWhereInput>undefined();

  public static final String JSON_PROPERTY_LABELS_SOME = "labels_some";
  private JsonNullable<LabelWhereInput> labelsSome = JsonNullable.<LabelWhereInput>undefined();

  public static final String JSON_PROPERTY_LOCAL_ID = "local_id";
  private JsonNullable<String> localId = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_LOCAL_ID_CONTAINS = "local_id_contains";
  private JsonNullable<String> localIdContains = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_LOCAL_ID_ENDS_WITH = "local_id_ends_with";
  private JsonNullable<String> localIdEndsWith = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_LOCAL_ID_GT = "local_id_gt";
  private JsonNullable<String> localIdGt = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_LOCAL_ID_GTE = "local_id_gte";
  private JsonNullable<String> localIdGte = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_LOCAL_ID_IN = "local_id_in";
  private JsonNullable<List<String>> localIdIn = JsonNullable.<List<String>>undefined();

  public static final String JSON_PROPERTY_LOCAL_ID_LT = "local_id_lt";
  private JsonNullable<String> localIdLt = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_LOCAL_ID_LTE = "local_id_lte";
  private JsonNullable<String> localIdLte = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_LOCAL_ID_NOT = "local_id_not";
  private JsonNullable<String> localIdNot = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_LOCAL_ID_NOT_CONTAINS = "local_id_not_contains";
  private JsonNullable<String> localIdNotContains = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_LOCAL_ID_NOT_ENDS_WITH = "local_id_not_ends_with";
  private JsonNullable<String> localIdNotEndsWith = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_LOCAL_ID_NOT_IN = "local_id_not_in";
  private JsonNullable<List<String>> localIdNotIn = JsonNullable.<List<String>>undefined();

  public static final String JSON_PROPERTY_LOCAL_ID_NOT_STARTS_WITH = "local_id_not_starts_with";
  private JsonNullable<String> localIdNotStartsWith = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_LOCAL_ID_STARTS_WITH = "local_id_starts_with";
  private JsonNullable<String> localIdStartsWith = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_MODEL = "model";
  private JsonNullable<String> model = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_MODEL_CONTAINS = "model_contains";
  private JsonNullable<String> modelContains = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_MODEL_ENDS_WITH = "model_ends_with";
  private JsonNullable<String> modelEndsWith = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_MODEL_GT = "model_gt";
  private JsonNullable<String> modelGt = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_MODEL_GTE = "model_gte";
  private JsonNullable<String> modelGte = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_MODEL_IN = "model_in";
  private JsonNullable<List<String>> modelIn = JsonNullable.<List<String>>undefined();

  public static final String JSON_PROPERTY_MODEL_LT = "model_lt";
  private JsonNullable<String> modelLt = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_MODEL_LTE = "model_lte";
  private JsonNullable<String> modelLte = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_MODEL_NOT = "model_not";
  private JsonNullable<String> modelNot = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_MODEL_NOT_CONTAINS = "model_not_contains";
  private JsonNullable<String> modelNotContains = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_MODEL_NOT_ENDS_WITH = "model_not_ends_with";
  private JsonNullable<String> modelNotEndsWith = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_MODEL_NOT_IN = "model_not_in";
  private JsonNullable<List<String>> modelNotIn = JsonNullable.<List<String>>undefined();

  public static final String JSON_PROPERTY_MODEL_NOT_STARTS_WITH = "model_not_starts_with";
  private JsonNullable<String> modelNotStartsWith = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_MODEL_STARTS_WITH = "model_starts_with";
  private JsonNullable<String> modelStartsWith = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_MOUNTED = "mounted";
  private JsonNullable<Boolean> mounted = JsonNullable.<Boolean>undefined();

  public static final String JSON_PROPERTY_MOUNTED_NOT = "mounted_not";
  private JsonNullable<Boolean> mountedNot = JsonNullable.<Boolean>undefined();

  public static final String JSON_PROPERTY_NAME = "name";
  private JsonNullable<String> name = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_NAME_CONTAINS = "name_contains";
  private JsonNullable<String> nameContains = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_NAME_ENDS_WITH = "name_ends_with";
  private JsonNullable<String> nameEndsWith = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_NAME_GT = "name_gt";
  private JsonNullable<String> nameGt = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_NAME_GTE = "name_gte";
  private JsonNullable<String> nameGte = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_NAME_IN = "name_in";
  private JsonNullable<List<String>> nameIn = JsonNullable.<List<String>>undefined();

  public static final String JSON_PROPERTY_NAME_LT = "name_lt";
  private JsonNullable<String> nameLt = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_NAME_LTE = "name_lte";
  private JsonNullable<String> nameLte = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_NAME_NOT = "name_not";
  private JsonNullable<String> nameNot = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_NAME_NOT_CONTAINS = "name_not_contains";
  private JsonNullable<String> nameNotContains = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_NAME_NOT_ENDS_WITH = "name_not_ends_with";
  private JsonNullable<String> nameNotEndsWith = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_NAME_NOT_IN = "name_not_in";
  private JsonNullable<List<String>> nameNotIn = JsonNullable.<List<String>>undefined();

  public static final String JSON_PROPERTY_NAME_NOT_STARTS_WITH = "name_not_starts_with";
  private JsonNullable<String> nameNotStartsWith = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_NAME_STARTS_WITH = "name_starts_with";
  private JsonNullable<String> nameStartsWith = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_N_O_T = "NOT";
  private JsonNullable<List<DiskWhereInput>> NOT = JsonNullable.<List<DiskWhereInput>>undefined();

  public static final String JSON_PROPERTY_NUMA_NODE = "numa_node";
  private JsonNullable<Double> numaNode = JsonNullable.<Double>undefined();

  public static final String JSON_PROPERTY_NUMA_NODE_GT = "numa_node_gt";
  private JsonNullable<Double> numaNodeGt = JsonNullable.<Double>undefined();

  public static final String JSON_PROPERTY_NUMA_NODE_GTE = "numa_node_gte";
  private JsonNullable<Double> numaNodeGte = JsonNullable.<Double>undefined();

  public static final String JSON_PROPERTY_NUMA_NODE_IN = "numa_node_in";
  private JsonNullable<List<Double>> numaNodeIn = JsonNullable.<List<Double>>undefined();

  public static final String JSON_PROPERTY_NUMA_NODE_LT = "numa_node_lt";
  private JsonNullable<Double> numaNodeLt = JsonNullable.<Double>undefined();

  public static final String JSON_PROPERTY_NUMA_NODE_LTE = "numa_node_lte";
  private JsonNullable<Double> numaNodeLte = JsonNullable.<Double>undefined();

  public static final String JSON_PROPERTY_NUMA_NODE_NOT = "numa_node_not";
  private JsonNullable<Double> numaNodeNot = JsonNullable.<Double>undefined();

  public static final String JSON_PROPERTY_NUMA_NODE_NOT_IN = "numa_node_not_in";
  private JsonNullable<List<Double>> numaNodeNotIn = JsonNullable.<List<Double>>undefined();

  public static final String JSON_PROPERTY_OFFLINE = "offline";
  private JsonNullable<Boolean> offline = JsonNullable.<Boolean>undefined();

  public static final String JSON_PROPERTY_OFFLINE_NOT = "offline_not";
  private JsonNullable<Boolean> offlineNot = JsonNullable.<Boolean>undefined();

  public static final String JSON_PROPERTY_O_R = "OR";
  private JsonNullable<List<DiskWhereInput>> OR = JsonNullable.<List<DiskWhereInput>>undefined();

  public static final String JSON_PROPERTY_PATH = "path";
  private JsonNullable<String> path = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_PATH_CONTAINS = "path_contains";
  private JsonNullable<String> pathContains = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_PATH_ENDS_WITH = "path_ends_with";
  private JsonNullable<String> pathEndsWith = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_PATH_GT = "path_gt";
  private JsonNullable<String> pathGt = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_PATH_GTE = "path_gte";
  private JsonNullable<String> pathGte = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_PATH_IN = "path_in";
  private JsonNullable<List<String>> pathIn = JsonNullable.<List<String>>undefined();

  public static final String JSON_PROPERTY_PATH_LT = "path_lt";
  private JsonNullable<String> pathLt = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_PATH_LTE = "path_lte";
  private JsonNullable<String> pathLte = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_PATH_NOT = "path_not";
  private JsonNullable<String> pathNot = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_PATH_NOT_CONTAINS = "path_not_contains";
  private JsonNullable<String> pathNotContains = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_PATH_NOT_ENDS_WITH = "path_not_ends_with";
  private JsonNullable<String> pathNotEndsWith = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_PATH_NOT_IN = "path_not_in";
  private JsonNullable<List<String>> pathNotIn = JsonNullable.<List<String>>undefined();

  public static final String JSON_PROPERTY_PATH_NOT_STARTS_WITH = "path_not_starts_with";
  private JsonNullable<String> pathNotStartsWith = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_PATH_STARTS_WITH = "path_starts_with";
  private JsonNullable<String> pathStartsWith = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_PERSISTENT_MEMORY_TYPE = "persistent_memory_type";
  private JsonNullable<String> persistentMemoryType = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_PERSISTENT_MEMORY_TYPE_CONTAINS = "persistent_memory_type_contains";
  private JsonNullable<String> persistentMemoryTypeContains = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_PERSISTENT_MEMORY_TYPE_ENDS_WITH = "persistent_memory_type_ends_with";
  private JsonNullable<String> persistentMemoryTypeEndsWith = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_PERSISTENT_MEMORY_TYPE_GT = "persistent_memory_type_gt";
  private JsonNullable<String> persistentMemoryTypeGt = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_PERSISTENT_MEMORY_TYPE_GTE = "persistent_memory_type_gte";
  private JsonNullable<String> persistentMemoryTypeGte = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_PERSISTENT_MEMORY_TYPE_IN = "persistent_memory_type_in";
  private JsonNullable<List<String>> persistentMemoryTypeIn = JsonNullable.<List<String>>undefined();

  public static final String JSON_PROPERTY_PERSISTENT_MEMORY_TYPE_LT = "persistent_memory_type_lt";
  private JsonNullable<String> persistentMemoryTypeLt = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_PERSISTENT_MEMORY_TYPE_LTE = "persistent_memory_type_lte";
  private JsonNullable<String> persistentMemoryTypeLte = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_PERSISTENT_MEMORY_TYPE_NOT = "persistent_memory_type_not";
  private JsonNullable<String> persistentMemoryTypeNot = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_PERSISTENT_MEMORY_TYPE_NOT_CONTAINS = "persistent_memory_type_not_contains";
  private JsonNullable<String> persistentMemoryTypeNotContains = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_PERSISTENT_MEMORY_TYPE_NOT_ENDS_WITH = "persistent_memory_type_not_ends_with";
  private JsonNullable<String> persistentMemoryTypeNotEndsWith = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_PERSISTENT_MEMORY_TYPE_NOT_IN = "persistent_memory_type_not_in";
  private JsonNullable<List<String>> persistentMemoryTypeNotIn = JsonNullable.<List<String>>undefined();

  public static final String JSON_PROPERTY_PERSISTENT_MEMORY_TYPE_NOT_STARTS_WITH = "persistent_memory_type_not_starts_with";
  private JsonNullable<String> persistentMemoryTypeNotStartsWith = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_PERSISTENT_MEMORY_TYPE_STARTS_WITH = "persistent_memory_type_starts_with";
  private JsonNullable<String> persistentMemoryTypeStartsWith = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_PHYSICAL_SLOT_ON_BRICK = "physical_slot_on_brick";
  private JsonNullable<Double> physicalSlotOnBrick = JsonNullable.<Double>undefined();

  public static final String JSON_PROPERTY_PHYSICAL_SLOT_ON_BRICK_GT = "physical_slot_on_brick_gt";
  private JsonNullable<Double> physicalSlotOnBrickGt = JsonNullable.<Double>undefined();

  public static final String JSON_PROPERTY_PHYSICAL_SLOT_ON_BRICK_GTE = "physical_slot_on_brick_gte";
  private JsonNullable<Double> physicalSlotOnBrickGte = JsonNullable.<Double>undefined();

  public static final String JSON_PROPERTY_PHYSICAL_SLOT_ON_BRICK_IN = "physical_slot_on_brick_in";
  private JsonNullable<List<Double>> physicalSlotOnBrickIn = JsonNullable.<List<Double>>undefined();

  public static final String JSON_PROPERTY_PHYSICAL_SLOT_ON_BRICK_LT = "physical_slot_on_brick_lt";
  private JsonNullable<Double> physicalSlotOnBrickLt = JsonNullable.<Double>undefined();

  public static final String JSON_PROPERTY_PHYSICAL_SLOT_ON_BRICK_LTE = "physical_slot_on_brick_lte";
  private JsonNullable<Double> physicalSlotOnBrickLte = JsonNullable.<Double>undefined();

  public static final String JSON_PROPERTY_PHYSICAL_SLOT_ON_BRICK_NOT = "physical_slot_on_brick_not";
  private JsonNullable<Double> physicalSlotOnBrickNot = JsonNullable.<Double>undefined();

  public static final String JSON_PROPERTY_PHYSICAL_SLOT_ON_BRICK_NOT_IN = "physical_slot_on_brick_not_in";
  private JsonNullable<List<Double>> physicalSlotOnBrickNotIn = JsonNullable.<List<Double>>undefined();

  public static final String JSON_PROPERTY_PMEM_DIMMS_EVERY = "pmem_dimms_every";
  private JsonNullable<PmemDimmWhereInput> pmemDimmsEvery = JsonNullable.<PmemDimmWhereInput>undefined();

  public static final String JSON_PROPERTY_PMEM_DIMMS_NONE = "pmem_dimms_none";
  private JsonNullable<PmemDimmWhereInput> pmemDimmsNone = JsonNullable.<PmemDimmWhereInput>undefined();

  public static final String JSON_PROPERTY_PMEM_DIMMS_SOME = "pmem_dimms_some";
  private JsonNullable<PmemDimmWhereInput> pmemDimmsSome = JsonNullable.<PmemDimmWhereInput>undefined();

  public static final String JSON_PROPERTY_RECOMMENDED_USAGE = "recommended_usage";
  private JsonNullable<DiskUsage> recommendedUsage = JsonNullable.<DiskUsage>undefined();

  public static final String JSON_PROPERTY_RECOMMENDED_USAGE_IN = "recommended_usage_in";
  private JsonNullable<List<DiskUsage>> recommendedUsageIn = JsonNullable.<List<DiskUsage>>undefined();

  public static final String JSON_PROPERTY_RECOMMENDED_USAGE_NOT = "recommended_usage_not";
  private JsonNullable<DiskUsage> recommendedUsageNot = JsonNullable.<DiskUsage>undefined();

  public static final String JSON_PROPERTY_RECOMMENDED_USAGE_NOT_IN = "recommended_usage_not_in";
  private JsonNullable<List<DiskUsage>> recommendedUsageNotIn = JsonNullable.<List<DiskUsage>>undefined();

  public static final String JSON_PROPERTY_REMAINING_LIFE_PERCENT = "remaining_life_percent";
  private JsonNullable<Double> remainingLifePercent = JsonNullable.<Double>undefined();

  public static final String JSON_PROPERTY_REMAINING_LIFE_PERCENT_GT = "remaining_life_percent_gt";
  private JsonNullable<Double> remainingLifePercentGt = JsonNullable.<Double>undefined();

  public static final String JSON_PROPERTY_REMAINING_LIFE_PERCENT_GTE = "remaining_life_percent_gte";
  private JsonNullable<Double> remainingLifePercentGte = JsonNullable.<Double>undefined();

  public static final String JSON_PROPERTY_REMAINING_LIFE_PERCENT_IN = "remaining_life_percent_in";
  private JsonNullable<List<Double>> remainingLifePercentIn = JsonNullable.<List<Double>>undefined();

  public static final String JSON_PROPERTY_REMAINING_LIFE_PERCENT_LT = "remaining_life_percent_lt";
  private JsonNullable<Double> remainingLifePercentLt = JsonNullable.<Double>undefined();

  public static final String JSON_PROPERTY_REMAINING_LIFE_PERCENT_LTE = "remaining_life_percent_lte";
  private JsonNullable<Double> remainingLifePercentLte = JsonNullable.<Double>undefined();

  public static final String JSON_PROPERTY_REMAINING_LIFE_PERCENT_NOT = "remaining_life_percent_not";
  private JsonNullable<Double> remainingLifePercentNot = JsonNullable.<Double>undefined();

  public static final String JSON_PROPERTY_REMAINING_LIFE_PERCENT_NOT_IN = "remaining_life_percent_not_in";
  private JsonNullable<List<Double>> remainingLifePercentNotIn = JsonNullable.<List<Double>>undefined();

  public static final String JSON_PROPERTY_SERIAL = "serial";
  private JsonNullable<String> serial = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_SERIAL_CONTAINS = "serial_contains";
  private JsonNullable<String> serialContains = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_SERIAL_ENDS_WITH = "serial_ends_with";
  private JsonNullable<String> serialEndsWith = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_SERIAL_GT = "serial_gt";
  private JsonNullable<String> serialGt = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_SERIAL_GTE = "serial_gte";
  private JsonNullable<String> serialGte = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_SERIAL_IN = "serial_in";
  private JsonNullable<List<String>> serialIn = JsonNullable.<List<String>>undefined();

  public static final String JSON_PROPERTY_SERIAL_LT = "serial_lt";
  private JsonNullable<String> serialLt = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_SERIAL_LTE = "serial_lte";
  private JsonNullable<String> serialLte = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_SERIAL_NOT = "serial_not";
  private JsonNullable<String> serialNot = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_SERIAL_NOT_CONTAINS = "serial_not_contains";
  private JsonNullable<String> serialNotContains = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_SERIAL_NOT_ENDS_WITH = "serial_not_ends_with";
  private JsonNullable<String> serialNotEndsWith = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_SERIAL_NOT_IN = "serial_not_in";
  private JsonNullable<List<String>> serialNotIn = JsonNullable.<List<String>>undefined();

  public static final String JSON_PROPERTY_SERIAL_NOT_STARTS_WITH = "serial_not_starts_with";
  private JsonNullable<String> serialNotStartsWith = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_SERIAL_STARTS_WITH = "serial_starts_with";
  private JsonNullable<String> serialStartsWith = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_SIZE = "size";
  private JsonNullable<Double> size = JsonNullable.<Double>undefined();

  public static final String JSON_PROPERTY_SIZE_GT = "size_gt";
  private JsonNullable<Double> sizeGt = JsonNullable.<Double>undefined();

  public static final String JSON_PROPERTY_SIZE_GTE = "size_gte";
  private JsonNullable<Double> sizeGte = JsonNullable.<Double>undefined();

  public static final String JSON_PROPERTY_SIZE_IN = "size_in";
  private JsonNullable<List<Double>> sizeIn = JsonNullable.<List<Double>>undefined();

  public static final String JSON_PROPERTY_SIZE_LT = "size_lt";
  private JsonNullable<Double> sizeLt = JsonNullable.<Double>undefined();

  public static final String JSON_PROPERTY_SIZE_LTE = "size_lte";
  private JsonNullable<Double> sizeLte = JsonNullable.<Double>undefined();

  public static final String JSON_PROPERTY_SIZE_NOT = "size_not";
  private JsonNullable<Double> sizeNot = JsonNullable.<Double>undefined();

  public static final String JSON_PROPERTY_SIZE_NOT_IN = "size_not_in";
  private JsonNullable<List<Double>> sizeNotIn = JsonNullable.<List<Double>>undefined();

  public static final String JSON_PROPERTY_TYPE = "type";
  private JsonNullable<DiskType> type = JsonNullable.<DiskType>undefined();

  public static final String JSON_PROPERTY_TYPE_IN = "type_in";
  private JsonNullable<List<DiskType>> typeIn = JsonNullable.<List<DiskType>>undefined();

  public static final String JSON_PROPERTY_TYPE_NOT = "type_not";
  private JsonNullable<DiskType> typeNot = JsonNullable.<DiskType>undefined();

  public static final String JSON_PROPERTY_TYPE_NOT_IN = "type_not_in";
  private JsonNullable<List<DiskType>> typeNotIn = JsonNullable.<List<DiskType>>undefined();

  public static final String JSON_PROPERTY_USAGE = "usage";
  private JsonNullable<DiskUsage> usage = JsonNullable.<DiskUsage>undefined();

  public static final String JSON_PROPERTY_USAGE_IN = "usage_in";
  private JsonNullable<List<DiskUsage>> usageIn = JsonNullable.<List<DiskUsage>>undefined();

  public static final String JSON_PROPERTY_USAGE_NOT = "usage_not";
  private JsonNullable<DiskUsage> usageNot = JsonNullable.<DiskUsage>undefined();

  public static final String JSON_PROPERTY_USAGE_NOT_IN = "usage_not_in";
  private JsonNullable<List<DiskUsage>> usageNotIn = JsonNullable.<List<DiskUsage>>undefined();

  public static final String JSON_PROPERTY_USAGE_STATUS = "usage_status";
  private JsonNullable<DiskUsageStatus> usageStatus = JsonNullable.<DiskUsageStatus>undefined();

  public static final String JSON_PROPERTY_USAGE_STATUS_IN = "usage_status_in";
  private JsonNullable<List<DiskUsageStatus>> usageStatusIn = JsonNullable.<List<DiskUsageStatus>>undefined();

  public static final String JSON_PROPERTY_USAGE_STATUS_NOT = "usage_status_not";
  private JsonNullable<DiskUsageStatus> usageStatusNot = JsonNullable.<DiskUsageStatus>undefined();

  public static final String JSON_PROPERTY_USAGE_STATUS_NOT_IN = "usage_status_not_in";
  private JsonNullable<List<DiskUsageStatus>> usageStatusNotIn = JsonNullable.<List<DiskUsageStatus>>undefined();


  public DiskWhereInput AND(List<DiskWhereInput> AND) {
    this.AND = JsonNullable.<List<DiskWhereInput>>of(AND);
    return this;
  }

  public DiskWhereInput addANDItem(DiskWhereInput ANDItem) {
    if (this.AND == null || !this.AND.isPresent()) {
      this.AND = JsonNullable.<List<DiskWhereInput>>of(new ArrayList<>());
    }
    try {
      this.AND.get().add(ANDItem);
    } catch (java.util.NoSuchElementException e) {
      // this can never happen, as we make sure above that the value is present
    }
    return this;
  }

   /**
   * Get AND
   * @return AND
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public List<DiskWhereInput> getAND() {
        return AND.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_A_N_D)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<List<DiskWhereInput>> getAND_JsonNullable() {
    return AND;
  }
  
  @JsonProperty(JSON_PROPERTY_A_N_D)
  public void setAND_JsonNullable(JsonNullable<List<DiskWhereInput>> AND) {
    this.AND = AND;
  }

  public void setAND(List<DiskWhereInput> AND) {
    this.AND = JsonNullable.<List<DiskWhereInput>>of(AND);
  }


  public DiskWhereInput entityAsyncStatus(EntityAsyncStatus entityAsyncStatus) {
    this.entityAsyncStatus = JsonNullable.<EntityAsyncStatus>of(entityAsyncStatus);
    return this;
  }

   /**
   * Get entityAsyncStatus
   * @return entityAsyncStatus
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public EntityAsyncStatus getEntityAsyncStatus() {
        return entityAsyncStatus.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_ENTITY_ASYNC_STATUS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<EntityAsyncStatus> getEntityAsyncStatus_JsonNullable() {
    return entityAsyncStatus;
  }
  
  @JsonProperty(JSON_PROPERTY_ENTITY_ASYNC_STATUS)
  public void setEntityAsyncStatus_JsonNullable(JsonNullable<EntityAsyncStatus> entityAsyncStatus) {
    this.entityAsyncStatus = entityAsyncStatus;
  }

  public void setEntityAsyncStatus(EntityAsyncStatus entityAsyncStatus) {
    this.entityAsyncStatus = JsonNullable.<EntityAsyncStatus>of(entityAsyncStatus);
  }


  public DiskWhereInput entityAsyncStatusIn(List<EntityAsyncStatus> entityAsyncStatusIn) {
    this.entityAsyncStatusIn = JsonNullable.<List<EntityAsyncStatus>>of(entityAsyncStatusIn);
    return this;
  }

  public DiskWhereInput addEntityAsyncStatusInItem(EntityAsyncStatus entityAsyncStatusInItem) {
    if (this.entityAsyncStatusIn == null || !this.entityAsyncStatusIn.isPresent()) {
      this.entityAsyncStatusIn = JsonNullable.<List<EntityAsyncStatus>>of(new ArrayList<>());
    }
    try {
      this.entityAsyncStatusIn.get().add(entityAsyncStatusInItem);
    } catch (java.util.NoSuchElementException e) {
      // this can never happen, as we make sure above that the value is present
    }
    return this;
  }

   /**
   * Get entityAsyncStatusIn
   * @return entityAsyncStatusIn
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public List<EntityAsyncStatus> getEntityAsyncStatusIn() {
        return entityAsyncStatusIn.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_ENTITY_ASYNC_STATUS_IN)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<List<EntityAsyncStatus>> getEntityAsyncStatusIn_JsonNullable() {
    return entityAsyncStatusIn;
  }
  
  @JsonProperty(JSON_PROPERTY_ENTITY_ASYNC_STATUS_IN)
  public void setEntityAsyncStatusIn_JsonNullable(JsonNullable<List<EntityAsyncStatus>> entityAsyncStatusIn) {
    this.entityAsyncStatusIn = entityAsyncStatusIn;
  }

  public void setEntityAsyncStatusIn(List<EntityAsyncStatus> entityAsyncStatusIn) {
    this.entityAsyncStatusIn = JsonNullable.<List<EntityAsyncStatus>>of(entityAsyncStatusIn);
  }


  public DiskWhereInput entityAsyncStatusNot(EntityAsyncStatus entityAsyncStatusNot) {
    this.entityAsyncStatusNot = JsonNullable.<EntityAsyncStatus>of(entityAsyncStatusNot);
    return this;
  }

   /**
   * Get entityAsyncStatusNot
   * @return entityAsyncStatusNot
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public EntityAsyncStatus getEntityAsyncStatusNot() {
        return entityAsyncStatusNot.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_ENTITY_ASYNC_STATUS_NOT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<EntityAsyncStatus> getEntityAsyncStatusNot_JsonNullable() {
    return entityAsyncStatusNot;
  }
  
  @JsonProperty(JSON_PROPERTY_ENTITY_ASYNC_STATUS_NOT)
  public void setEntityAsyncStatusNot_JsonNullable(JsonNullable<EntityAsyncStatus> entityAsyncStatusNot) {
    this.entityAsyncStatusNot = entityAsyncStatusNot;
  }

  public void setEntityAsyncStatusNot(EntityAsyncStatus entityAsyncStatusNot) {
    this.entityAsyncStatusNot = JsonNullable.<EntityAsyncStatus>of(entityAsyncStatusNot);
  }


  public DiskWhereInput entityAsyncStatusNotIn(List<EntityAsyncStatus> entityAsyncStatusNotIn) {
    this.entityAsyncStatusNotIn = JsonNullable.<List<EntityAsyncStatus>>of(entityAsyncStatusNotIn);
    return this;
  }

  public DiskWhereInput addEntityAsyncStatusNotInItem(EntityAsyncStatus entityAsyncStatusNotInItem) {
    if (this.entityAsyncStatusNotIn == null || !this.entityAsyncStatusNotIn.isPresent()) {
      this.entityAsyncStatusNotIn = JsonNullable.<List<EntityAsyncStatus>>of(new ArrayList<>());
    }
    try {
      this.entityAsyncStatusNotIn.get().add(entityAsyncStatusNotInItem);
    } catch (java.util.NoSuchElementException e) {
      // this can never happen, as we make sure above that the value is present
    }
    return this;
  }

   /**
   * Get entityAsyncStatusNotIn
   * @return entityAsyncStatusNotIn
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public List<EntityAsyncStatus> getEntityAsyncStatusNotIn() {
        return entityAsyncStatusNotIn.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_ENTITY_ASYNC_STATUS_NOT_IN)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<List<EntityAsyncStatus>> getEntityAsyncStatusNotIn_JsonNullable() {
    return entityAsyncStatusNotIn;
  }
  
  @JsonProperty(JSON_PROPERTY_ENTITY_ASYNC_STATUS_NOT_IN)
  public void setEntityAsyncStatusNotIn_JsonNullable(JsonNullable<List<EntityAsyncStatus>> entityAsyncStatusNotIn) {
    this.entityAsyncStatusNotIn = entityAsyncStatusNotIn;
  }

  public void setEntityAsyncStatusNotIn(List<EntityAsyncStatus> entityAsyncStatusNotIn) {
    this.entityAsyncStatusNotIn = JsonNullable.<List<EntityAsyncStatus>>of(entityAsyncStatusNotIn);
  }


  public DiskWhereInput firmware(String firmware) {
    this.firmware = JsonNullable.<String>of(firmware);
    return this;
  }

   /**
   * Get firmware
   * @return firmware
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getFirmware() {
        return firmware.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_FIRMWARE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getFirmware_JsonNullable() {
    return firmware;
  }
  
  @JsonProperty(JSON_PROPERTY_FIRMWARE)
  public void setFirmware_JsonNullable(JsonNullable<String> firmware) {
    this.firmware = firmware;
  }

  public void setFirmware(String firmware) {
    this.firmware = JsonNullable.<String>of(firmware);
  }


  public DiskWhereInput firmwareContains(String firmwareContains) {
    this.firmwareContains = JsonNullable.<String>of(firmwareContains);
    return this;
  }

   /**
   * Get firmwareContains
   * @return firmwareContains
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getFirmwareContains() {
        return firmwareContains.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_FIRMWARE_CONTAINS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getFirmwareContains_JsonNullable() {
    return firmwareContains;
  }
  
  @JsonProperty(JSON_PROPERTY_FIRMWARE_CONTAINS)
  public void setFirmwareContains_JsonNullable(JsonNullable<String> firmwareContains) {
    this.firmwareContains = firmwareContains;
  }

  public void setFirmwareContains(String firmwareContains) {
    this.firmwareContains = JsonNullable.<String>of(firmwareContains);
  }


  public DiskWhereInput firmwareEndsWith(String firmwareEndsWith) {
    this.firmwareEndsWith = JsonNullable.<String>of(firmwareEndsWith);
    return this;
  }

   /**
   * Get firmwareEndsWith
   * @return firmwareEndsWith
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getFirmwareEndsWith() {
        return firmwareEndsWith.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_FIRMWARE_ENDS_WITH)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getFirmwareEndsWith_JsonNullable() {
    return firmwareEndsWith;
  }
  
  @JsonProperty(JSON_PROPERTY_FIRMWARE_ENDS_WITH)
  public void setFirmwareEndsWith_JsonNullable(JsonNullable<String> firmwareEndsWith) {
    this.firmwareEndsWith = firmwareEndsWith;
  }

  public void setFirmwareEndsWith(String firmwareEndsWith) {
    this.firmwareEndsWith = JsonNullable.<String>of(firmwareEndsWith);
  }


  public DiskWhereInput firmwareGt(String firmwareGt) {
    this.firmwareGt = JsonNullable.<String>of(firmwareGt);
    return this;
  }

   /**
   * Get firmwareGt
   * @return firmwareGt
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getFirmwareGt() {
        return firmwareGt.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_FIRMWARE_GT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getFirmwareGt_JsonNullable() {
    return firmwareGt;
  }
  
  @JsonProperty(JSON_PROPERTY_FIRMWARE_GT)
  public void setFirmwareGt_JsonNullable(JsonNullable<String> firmwareGt) {
    this.firmwareGt = firmwareGt;
  }

  public void setFirmwareGt(String firmwareGt) {
    this.firmwareGt = JsonNullable.<String>of(firmwareGt);
  }


  public DiskWhereInput firmwareGte(String firmwareGte) {
    this.firmwareGte = JsonNullable.<String>of(firmwareGte);
    return this;
  }

   /**
   * Get firmwareGte
   * @return firmwareGte
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getFirmwareGte() {
        return firmwareGte.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_FIRMWARE_GTE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getFirmwareGte_JsonNullable() {
    return firmwareGte;
  }
  
  @JsonProperty(JSON_PROPERTY_FIRMWARE_GTE)
  public void setFirmwareGte_JsonNullable(JsonNullable<String> firmwareGte) {
    this.firmwareGte = firmwareGte;
  }

  public void setFirmwareGte(String firmwareGte) {
    this.firmwareGte = JsonNullable.<String>of(firmwareGte);
  }


  public DiskWhereInput firmwareIn(List<String> firmwareIn) {
    this.firmwareIn = JsonNullable.<List<String>>of(firmwareIn);
    return this;
  }

  public DiskWhereInput addFirmwareInItem(String firmwareInItem) {
    if (this.firmwareIn == null || !this.firmwareIn.isPresent()) {
      this.firmwareIn = JsonNullable.<List<String>>of(new ArrayList<>());
    }
    try {
      this.firmwareIn.get().add(firmwareInItem);
    } catch (java.util.NoSuchElementException e) {
      // this can never happen, as we make sure above that the value is present
    }
    return this;
  }

   /**
   * Get firmwareIn
   * @return firmwareIn
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public List<String> getFirmwareIn() {
        return firmwareIn.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_FIRMWARE_IN)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<List<String>> getFirmwareIn_JsonNullable() {
    return firmwareIn;
  }
  
  @JsonProperty(JSON_PROPERTY_FIRMWARE_IN)
  public void setFirmwareIn_JsonNullable(JsonNullable<List<String>> firmwareIn) {
    this.firmwareIn = firmwareIn;
  }

  public void setFirmwareIn(List<String> firmwareIn) {
    this.firmwareIn = JsonNullable.<List<String>>of(firmwareIn);
  }


  public DiskWhereInput firmwareLt(String firmwareLt) {
    this.firmwareLt = JsonNullable.<String>of(firmwareLt);
    return this;
  }

   /**
   * Get firmwareLt
   * @return firmwareLt
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getFirmwareLt() {
        return firmwareLt.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_FIRMWARE_LT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getFirmwareLt_JsonNullable() {
    return firmwareLt;
  }
  
  @JsonProperty(JSON_PROPERTY_FIRMWARE_LT)
  public void setFirmwareLt_JsonNullable(JsonNullable<String> firmwareLt) {
    this.firmwareLt = firmwareLt;
  }

  public void setFirmwareLt(String firmwareLt) {
    this.firmwareLt = JsonNullable.<String>of(firmwareLt);
  }


  public DiskWhereInput firmwareLte(String firmwareLte) {
    this.firmwareLte = JsonNullable.<String>of(firmwareLte);
    return this;
  }

   /**
   * Get firmwareLte
   * @return firmwareLte
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getFirmwareLte() {
        return firmwareLte.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_FIRMWARE_LTE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getFirmwareLte_JsonNullable() {
    return firmwareLte;
  }
  
  @JsonProperty(JSON_PROPERTY_FIRMWARE_LTE)
  public void setFirmwareLte_JsonNullable(JsonNullable<String> firmwareLte) {
    this.firmwareLte = firmwareLte;
  }

  public void setFirmwareLte(String firmwareLte) {
    this.firmwareLte = JsonNullable.<String>of(firmwareLte);
  }


  public DiskWhereInput firmwareNot(String firmwareNot) {
    this.firmwareNot = JsonNullable.<String>of(firmwareNot);
    return this;
  }

   /**
   * Get firmwareNot
   * @return firmwareNot
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getFirmwareNot() {
        return firmwareNot.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_FIRMWARE_NOT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getFirmwareNot_JsonNullable() {
    return firmwareNot;
  }
  
  @JsonProperty(JSON_PROPERTY_FIRMWARE_NOT)
  public void setFirmwareNot_JsonNullable(JsonNullable<String> firmwareNot) {
    this.firmwareNot = firmwareNot;
  }

  public void setFirmwareNot(String firmwareNot) {
    this.firmwareNot = JsonNullable.<String>of(firmwareNot);
  }


  public DiskWhereInput firmwareNotContains(String firmwareNotContains) {
    this.firmwareNotContains = JsonNullable.<String>of(firmwareNotContains);
    return this;
  }

   /**
   * Get firmwareNotContains
   * @return firmwareNotContains
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getFirmwareNotContains() {
        return firmwareNotContains.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_FIRMWARE_NOT_CONTAINS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getFirmwareNotContains_JsonNullable() {
    return firmwareNotContains;
  }
  
  @JsonProperty(JSON_PROPERTY_FIRMWARE_NOT_CONTAINS)
  public void setFirmwareNotContains_JsonNullable(JsonNullable<String> firmwareNotContains) {
    this.firmwareNotContains = firmwareNotContains;
  }

  public void setFirmwareNotContains(String firmwareNotContains) {
    this.firmwareNotContains = JsonNullable.<String>of(firmwareNotContains);
  }


  public DiskWhereInput firmwareNotEndsWith(String firmwareNotEndsWith) {
    this.firmwareNotEndsWith = JsonNullable.<String>of(firmwareNotEndsWith);
    return this;
  }

   /**
   * Get firmwareNotEndsWith
   * @return firmwareNotEndsWith
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getFirmwareNotEndsWith() {
        return firmwareNotEndsWith.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_FIRMWARE_NOT_ENDS_WITH)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getFirmwareNotEndsWith_JsonNullable() {
    return firmwareNotEndsWith;
  }
  
  @JsonProperty(JSON_PROPERTY_FIRMWARE_NOT_ENDS_WITH)
  public void setFirmwareNotEndsWith_JsonNullable(JsonNullable<String> firmwareNotEndsWith) {
    this.firmwareNotEndsWith = firmwareNotEndsWith;
  }

  public void setFirmwareNotEndsWith(String firmwareNotEndsWith) {
    this.firmwareNotEndsWith = JsonNullable.<String>of(firmwareNotEndsWith);
  }


  public DiskWhereInput firmwareNotIn(List<String> firmwareNotIn) {
    this.firmwareNotIn = JsonNullable.<List<String>>of(firmwareNotIn);
    return this;
  }

  public DiskWhereInput addFirmwareNotInItem(String firmwareNotInItem) {
    if (this.firmwareNotIn == null || !this.firmwareNotIn.isPresent()) {
      this.firmwareNotIn = JsonNullable.<List<String>>of(new ArrayList<>());
    }
    try {
      this.firmwareNotIn.get().add(firmwareNotInItem);
    } catch (java.util.NoSuchElementException e) {
      // this can never happen, as we make sure above that the value is present
    }
    return this;
  }

   /**
   * Get firmwareNotIn
   * @return firmwareNotIn
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public List<String> getFirmwareNotIn() {
        return firmwareNotIn.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_FIRMWARE_NOT_IN)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<List<String>> getFirmwareNotIn_JsonNullable() {
    return firmwareNotIn;
  }
  
  @JsonProperty(JSON_PROPERTY_FIRMWARE_NOT_IN)
  public void setFirmwareNotIn_JsonNullable(JsonNullable<List<String>> firmwareNotIn) {
    this.firmwareNotIn = firmwareNotIn;
  }

  public void setFirmwareNotIn(List<String> firmwareNotIn) {
    this.firmwareNotIn = JsonNullable.<List<String>>of(firmwareNotIn);
  }


  public DiskWhereInput firmwareNotStartsWith(String firmwareNotStartsWith) {
    this.firmwareNotStartsWith = JsonNullable.<String>of(firmwareNotStartsWith);
    return this;
  }

   /**
   * Get firmwareNotStartsWith
   * @return firmwareNotStartsWith
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getFirmwareNotStartsWith() {
        return firmwareNotStartsWith.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_FIRMWARE_NOT_STARTS_WITH)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getFirmwareNotStartsWith_JsonNullable() {
    return firmwareNotStartsWith;
  }
  
  @JsonProperty(JSON_PROPERTY_FIRMWARE_NOT_STARTS_WITH)
  public void setFirmwareNotStartsWith_JsonNullable(JsonNullable<String> firmwareNotStartsWith) {
    this.firmwareNotStartsWith = firmwareNotStartsWith;
  }

  public void setFirmwareNotStartsWith(String firmwareNotStartsWith) {
    this.firmwareNotStartsWith = JsonNullable.<String>of(firmwareNotStartsWith);
  }


  public DiskWhereInput firmwareStartsWith(String firmwareStartsWith) {
    this.firmwareStartsWith = JsonNullable.<String>of(firmwareStartsWith);
    return this;
  }

   /**
   * Get firmwareStartsWith
   * @return firmwareStartsWith
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getFirmwareStartsWith() {
        return firmwareStartsWith.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_FIRMWARE_STARTS_WITH)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getFirmwareStartsWith_JsonNullable() {
    return firmwareStartsWith;
  }
  
  @JsonProperty(JSON_PROPERTY_FIRMWARE_STARTS_WITH)
  public void setFirmwareStartsWith_JsonNullable(JsonNullable<String> firmwareStartsWith) {
    this.firmwareStartsWith = firmwareStartsWith;
  }

  public void setFirmwareStartsWith(String firmwareStartsWith) {
    this.firmwareStartsWith = JsonNullable.<String>of(firmwareStartsWith);
  }


  public DiskWhereInput function(DiskFunction function) {
    this.function = JsonNullable.<DiskFunction>of(function);
    return this;
  }

   /**
   * Get function
   * @return function
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public DiskFunction getFunction() {
        return function.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_FUNCTION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<DiskFunction> getFunction_JsonNullable() {
    return function;
  }
  
  @JsonProperty(JSON_PROPERTY_FUNCTION)
  public void setFunction_JsonNullable(JsonNullable<DiskFunction> function) {
    this.function = function;
  }

  public void setFunction(DiskFunction function) {
    this.function = JsonNullable.<DiskFunction>of(function);
  }


  public DiskWhereInput functionIn(List<DiskFunction> functionIn) {
    this.functionIn = JsonNullable.<List<DiskFunction>>of(functionIn);
    return this;
  }

  public DiskWhereInput addFunctionInItem(DiskFunction functionInItem) {
    if (this.functionIn == null || !this.functionIn.isPresent()) {
      this.functionIn = JsonNullable.<List<DiskFunction>>of(new ArrayList<>());
    }
    try {
      this.functionIn.get().add(functionInItem);
    } catch (java.util.NoSuchElementException e) {
      // this can never happen, as we make sure above that the value is present
    }
    return this;
  }

   /**
   * Get functionIn
   * @return functionIn
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public List<DiskFunction> getFunctionIn() {
        return functionIn.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_FUNCTION_IN)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<List<DiskFunction>> getFunctionIn_JsonNullable() {
    return functionIn;
  }
  
  @JsonProperty(JSON_PROPERTY_FUNCTION_IN)
  public void setFunctionIn_JsonNullable(JsonNullable<List<DiskFunction>> functionIn) {
    this.functionIn = functionIn;
  }

  public void setFunctionIn(List<DiskFunction> functionIn) {
    this.functionIn = JsonNullable.<List<DiskFunction>>of(functionIn);
  }


  public DiskWhereInput functionNot(DiskFunction functionNot) {
    this.functionNot = JsonNullable.<DiskFunction>of(functionNot);
    return this;
  }

   /**
   * Get functionNot
   * @return functionNot
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public DiskFunction getFunctionNot() {
        return functionNot.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_FUNCTION_NOT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<DiskFunction> getFunctionNot_JsonNullable() {
    return functionNot;
  }
  
  @JsonProperty(JSON_PROPERTY_FUNCTION_NOT)
  public void setFunctionNot_JsonNullable(JsonNullable<DiskFunction> functionNot) {
    this.functionNot = functionNot;
  }

  public void setFunctionNot(DiskFunction functionNot) {
    this.functionNot = JsonNullable.<DiskFunction>of(functionNot);
  }


  public DiskWhereInput functionNotIn(List<DiskFunction> functionNotIn) {
    this.functionNotIn = JsonNullable.<List<DiskFunction>>of(functionNotIn);
    return this;
  }

  public DiskWhereInput addFunctionNotInItem(DiskFunction functionNotInItem) {
    if (this.functionNotIn == null || !this.functionNotIn.isPresent()) {
      this.functionNotIn = JsonNullable.<List<DiskFunction>>of(new ArrayList<>());
    }
    try {
      this.functionNotIn.get().add(functionNotInItem);
    } catch (java.util.NoSuchElementException e) {
      // this can never happen, as we make sure above that the value is present
    }
    return this;
  }

   /**
   * Get functionNotIn
   * @return functionNotIn
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public List<DiskFunction> getFunctionNotIn() {
        return functionNotIn.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_FUNCTION_NOT_IN)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<List<DiskFunction>> getFunctionNotIn_JsonNullable() {
    return functionNotIn;
  }
  
  @JsonProperty(JSON_PROPERTY_FUNCTION_NOT_IN)
  public void setFunctionNotIn_JsonNullable(JsonNullable<List<DiskFunction>> functionNotIn) {
    this.functionNotIn = functionNotIn;
  }

  public void setFunctionNotIn(List<DiskFunction> functionNotIn) {
    this.functionNotIn = JsonNullable.<List<DiskFunction>>of(functionNotIn);
  }


  public DiskWhereInput healthStatus(DiskHealthStatus healthStatus) {
    this.healthStatus = JsonNullable.<DiskHealthStatus>of(healthStatus);
    return this;
  }

   /**
   * Get healthStatus
   * @return healthStatus
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public DiskHealthStatus getHealthStatus() {
        return healthStatus.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_HEALTH_STATUS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<DiskHealthStatus> getHealthStatus_JsonNullable() {
    return healthStatus;
  }
  
  @JsonProperty(JSON_PROPERTY_HEALTH_STATUS)
  public void setHealthStatus_JsonNullable(JsonNullable<DiskHealthStatus> healthStatus) {
    this.healthStatus = healthStatus;
  }

  public void setHealthStatus(DiskHealthStatus healthStatus) {
    this.healthStatus = JsonNullable.<DiskHealthStatus>of(healthStatus);
  }


  public DiskWhereInput healthStatusIn(List<DiskHealthStatus> healthStatusIn) {
    this.healthStatusIn = JsonNullable.<List<DiskHealthStatus>>of(healthStatusIn);
    return this;
  }

  public DiskWhereInput addHealthStatusInItem(DiskHealthStatus healthStatusInItem) {
    if (this.healthStatusIn == null || !this.healthStatusIn.isPresent()) {
      this.healthStatusIn = JsonNullable.<List<DiskHealthStatus>>of(new ArrayList<>());
    }
    try {
      this.healthStatusIn.get().add(healthStatusInItem);
    } catch (java.util.NoSuchElementException e) {
      // this can never happen, as we make sure above that the value is present
    }
    return this;
  }

   /**
   * Get healthStatusIn
   * @return healthStatusIn
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public List<DiskHealthStatus> getHealthStatusIn() {
        return healthStatusIn.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_HEALTH_STATUS_IN)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<List<DiskHealthStatus>> getHealthStatusIn_JsonNullable() {
    return healthStatusIn;
  }
  
  @JsonProperty(JSON_PROPERTY_HEALTH_STATUS_IN)
  public void setHealthStatusIn_JsonNullable(JsonNullable<List<DiskHealthStatus>> healthStatusIn) {
    this.healthStatusIn = healthStatusIn;
  }

  public void setHealthStatusIn(List<DiskHealthStatus> healthStatusIn) {
    this.healthStatusIn = JsonNullable.<List<DiskHealthStatus>>of(healthStatusIn);
  }


  public DiskWhereInput healthStatusNot(DiskHealthStatus healthStatusNot) {
    this.healthStatusNot = JsonNullable.<DiskHealthStatus>of(healthStatusNot);
    return this;
  }

   /**
   * Get healthStatusNot
   * @return healthStatusNot
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public DiskHealthStatus getHealthStatusNot() {
        return healthStatusNot.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_HEALTH_STATUS_NOT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<DiskHealthStatus> getHealthStatusNot_JsonNullable() {
    return healthStatusNot;
  }
  
  @JsonProperty(JSON_PROPERTY_HEALTH_STATUS_NOT)
  public void setHealthStatusNot_JsonNullable(JsonNullable<DiskHealthStatus> healthStatusNot) {
    this.healthStatusNot = healthStatusNot;
  }

  public void setHealthStatusNot(DiskHealthStatus healthStatusNot) {
    this.healthStatusNot = JsonNullable.<DiskHealthStatus>of(healthStatusNot);
  }


  public DiskWhereInput healthStatusNotIn(List<DiskHealthStatus> healthStatusNotIn) {
    this.healthStatusNotIn = JsonNullable.<List<DiskHealthStatus>>of(healthStatusNotIn);
    return this;
  }

  public DiskWhereInput addHealthStatusNotInItem(DiskHealthStatus healthStatusNotInItem) {
    if (this.healthStatusNotIn == null || !this.healthStatusNotIn.isPresent()) {
      this.healthStatusNotIn = JsonNullable.<List<DiskHealthStatus>>of(new ArrayList<>());
    }
    try {
      this.healthStatusNotIn.get().add(healthStatusNotInItem);
    } catch (java.util.NoSuchElementException e) {
      // this can never happen, as we make sure above that the value is present
    }
    return this;
  }

   /**
   * Get healthStatusNotIn
   * @return healthStatusNotIn
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public List<DiskHealthStatus> getHealthStatusNotIn() {
        return healthStatusNotIn.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_HEALTH_STATUS_NOT_IN)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<List<DiskHealthStatus>> getHealthStatusNotIn_JsonNullable() {
    return healthStatusNotIn;
  }
  
  @JsonProperty(JSON_PROPERTY_HEALTH_STATUS_NOT_IN)
  public void setHealthStatusNotIn_JsonNullable(JsonNullable<List<DiskHealthStatus>> healthStatusNotIn) {
    this.healthStatusNotIn = healthStatusNotIn;
  }

  public void setHealthStatusNotIn(List<DiskHealthStatus> healthStatusNotIn) {
    this.healthStatusNotIn = JsonNullable.<List<DiskHealthStatus>>of(healthStatusNotIn);
  }


  public DiskWhereInput healthy(Boolean healthy) {
    this.healthy = JsonNullable.<Boolean>of(healthy);
    return this;
  }

   /**
   * Get healthy
   * @return healthy
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public Boolean getHealthy() {
        return healthy.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_HEALTHY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<Boolean> getHealthy_JsonNullable() {
    return healthy;
  }
  
  @JsonProperty(JSON_PROPERTY_HEALTHY)
  public void setHealthy_JsonNullable(JsonNullable<Boolean> healthy) {
    this.healthy = healthy;
  }

  public void setHealthy(Boolean healthy) {
    this.healthy = JsonNullable.<Boolean>of(healthy);
  }


  public DiskWhereInput healthyNot(Boolean healthyNot) {
    this.healthyNot = JsonNullable.<Boolean>of(healthyNot);
    return this;
  }

   /**
   * Get healthyNot
   * @return healthyNot
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public Boolean getHealthyNot() {
        return healthyNot.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_HEALTHY_NOT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<Boolean> getHealthyNot_JsonNullable() {
    return healthyNot;
  }
  
  @JsonProperty(JSON_PROPERTY_HEALTHY_NOT)
  public void setHealthyNot_JsonNullable(JsonNullable<Boolean> healthyNot) {
    this.healthyNot = healthyNot;
  }

  public void setHealthyNot(Boolean healthyNot) {
    this.healthyNot = JsonNullable.<Boolean>of(healthyNot);
  }


  public DiskWhereInput host(HostWhereInput host) {
    this.host = JsonNullable.<HostWhereInput>of(host);
    return this;
  }

   /**
   * Get host
   * @return host
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public HostWhereInput getHost() {
        return host.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_HOST)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<HostWhereInput> getHost_JsonNullable() {
    return host;
  }
  
  @JsonProperty(JSON_PROPERTY_HOST)
  public void setHost_JsonNullable(JsonNullable<HostWhereInput> host) {
    this.host = host;
  }

  public void setHost(HostWhereInput host) {
    this.host = JsonNullable.<HostWhereInput>of(host);
  }


  public DiskWhereInput id(String id) {
    this.id = JsonNullable.<String>of(id);
    return this;
  }

   /**
   * Get id
   * @return id
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getId() {
        return id.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getId_JsonNullable() {
    return id;
  }
  
  @JsonProperty(JSON_PROPERTY_ID)
  public void setId_JsonNullable(JsonNullable<String> id) {
    this.id = id;
  }

  public void setId(String id) {
    this.id = JsonNullable.<String>of(id);
  }


  public DiskWhereInput idContains(String idContains) {
    this.idContains = JsonNullable.<String>of(idContains);
    return this;
  }

   /**
   * Get idContains
   * @return idContains
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getIdContains() {
        return idContains.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_ID_CONTAINS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getIdContains_JsonNullable() {
    return idContains;
  }
  
  @JsonProperty(JSON_PROPERTY_ID_CONTAINS)
  public void setIdContains_JsonNullable(JsonNullable<String> idContains) {
    this.idContains = idContains;
  }

  public void setIdContains(String idContains) {
    this.idContains = JsonNullable.<String>of(idContains);
  }


  public DiskWhereInput idEndsWith(String idEndsWith) {
    this.idEndsWith = JsonNullable.<String>of(idEndsWith);
    return this;
  }

   /**
   * Get idEndsWith
   * @return idEndsWith
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getIdEndsWith() {
        return idEndsWith.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_ID_ENDS_WITH)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getIdEndsWith_JsonNullable() {
    return idEndsWith;
  }
  
  @JsonProperty(JSON_PROPERTY_ID_ENDS_WITH)
  public void setIdEndsWith_JsonNullable(JsonNullable<String> idEndsWith) {
    this.idEndsWith = idEndsWith;
  }

  public void setIdEndsWith(String idEndsWith) {
    this.idEndsWith = JsonNullable.<String>of(idEndsWith);
  }


  public DiskWhereInput idGt(String idGt) {
    this.idGt = JsonNullable.<String>of(idGt);
    return this;
  }

   /**
   * Get idGt
   * @return idGt
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getIdGt() {
        return idGt.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_ID_GT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getIdGt_JsonNullable() {
    return idGt;
  }
  
  @JsonProperty(JSON_PROPERTY_ID_GT)
  public void setIdGt_JsonNullable(JsonNullable<String> idGt) {
    this.idGt = idGt;
  }

  public void setIdGt(String idGt) {
    this.idGt = JsonNullable.<String>of(idGt);
  }


  public DiskWhereInput idGte(String idGte) {
    this.idGte = JsonNullable.<String>of(idGte);
    return this;
  }

   /**
   * Get idGte
   * @return idGte
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getIdGte() {
        return idGte.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_ID_GTE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getIdGte_JsonNullable() {
    return idGte;
  }
  
  @JsonProperty(JSON_PROPERTY_ID_GTE)
  public void setIdGte_JsonNullable(JsonNullable<String> idGte) {
    this.idGte = idGte;
  }

  public void setIdGte(String idGte) {
    this.idGte = JsonNullable.<String>of(idGte);
  }


  public DiskWhereInput idIn(List<String> idIn) {
    this.idIn = JsonNullable.<List<String>>of(idIn);
    return this;
  }

  public DiskWhereInput addIdInItem(String idInItem) {
    if (this.idIn == null || !this.idIn.isPresent()) {
      this.idIn = JsonNullable.<List<String>>of(new ArrayList<>());
    }
    try {
      this.idIn.get().add(idInItem);
    } catch (java.util.NoSuchElementException e) {
      // this can never happen, as we make sure above that the value is present
    }
    return this;
  }

   /**
   * Get idIn
   * @return idIn
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public List<String> getIdIn() {
        return idIn.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_ID_IN)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<List<String>> getIdIn_JsonNullable() {
    return idIn;
  }
  
  @JsonProperty(JSON_PROPERTY_ID_IN)
  public void setIdIn_JsonNullable(JsonNullable<List<String>> idIn) {
    this.idIn = idIn;
  }

  public void setIdIn(List<String> idIn) {
    this.idIn = JsonNullable.<List<String>>of(idIn);
  }


  public DiskWhereInput idLt(String idLt) {
    this.idLt = JsonNullable.<String>of(idLt);
    return this;
  }

   /**
   * Get idLt
   * @return idLt
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getIdLt() {
        return idLt.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_ID_LT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getIdLt_JsonNullable() {
    return idLt;
  }
  
  @JsonProperty(JSON_PROPERTY_ID_LT)
  public void setIdLt_JsonNullable(JsonNullable<String> idLt) {
    this.idLt = idLt;
  }

  public void setIdLt(String idLt) {
    this.idLt = JsonNullable.<String>of(idLt);
  }


  public DiskWhereInput idLte(String idLte) {
    this.idLte = JsonNullable.<String>of(idLte);
    return this;
  }

   /**
   * Get idLte
   * @return idLte
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getIdLte() {
        return idLte.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_ID_LTE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getIdLte_JsonNullable() {
    return idLte;
  }
  
  @JsonProperty(JSON_PROPERTY_ID_LTE)
  public void setIdLte_JsonNullable(JsonNullable<String> idLte) {
    this.idLte = idLte;
  }

  public void setIdLte(String idLte) {
    this.idLte = JsonNullable.<String>of(idLte);
  }


  public DiskWhereInput idNot(String idNot) {
    this.idNot = JsonNullable.<String>of(idNot);
    return this;
  }

   /**
   * Get idNot
   * @return idNot
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getIdNot() {
        return idNot.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_ID_NOT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getIdNot_JsonNullable() {
    return idNot;
  }
  
  @JsonProperty(JSON_PROPERTY_ID_NOT)
  public void setIdNot_JsonNullable(JsonNullable<String> idNot) {
    this.idNot = idNot;
  }

  public void setIdNot(String idNot) {
    this.idNot = JsonNullable.<String>of(idNot);
  }


  public DiskWhereInput idNotContains(String idNotContains) {
    this.idNotContains = JsonNullable.<String>of(idNotContains);
    return this;
  }

   /**
   * Get idNotContains
   * @return idNotContains
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getIdNotContains() {
        return idNotContains.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_ID_NOT_CONTAINS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getIdNotContains_JsonNullable() {
    return idNotContains;
  }
  
  @JsonProperty(JSON_PROPERTY_ID_NOT_CONTAINS)
  public void setIdNotContains_JsonNullable(JsonNullable<String> idNotContains) {
    this.idNotContains = idNotContains;
  }

  public void setIdNotContains(String idNotContains) {
    this.idNotContains = JsonNullable.<String>of(idNotContains);
  }


  public DiskWhereInput idNotEndsWith(String idNotEndsWith) {
    this.idNotEndsWith = JsonNullable.<String>of(idNotEndsWith);
    return this;
  }

   /**
   * Get idNotEndsWith
   * @return idNotEndsWith
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getIdNotEndsWith() {
        return idNotEndsWith.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_ID_NOT_ENDS_WITH)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getIdNotEndsWith_JsonNullable() {
    return idNotEndsWith;
  }
  
  @JsonProperty(JSON_PROPERTY_ID_NOT_ENDS_WITH)
  public void setIdNotEndsWith_JsonNullable(JsonNullable<String> idNotEndsWith) {
    this.idNotEndsWith = idNotEndsWith;
  }

  public void setIdNotEndsWith(String idNotEndsWith) {
    this.idNotEndsWith = JsonNullable.<String>of(idNotEndsWith);
  }


  public DiskWhereInput idNotIn(List<String> idNotIn) {
    this.idNotIn = JsonNullable.<List<String>>of(idNotIn);
    return this;
  }

  public DiskWhereInput addIdNotInItem(String idNotInItem) {
    if (this.idNotIn == null || !this.idNotIn.isPresent()) {
      this.idNotIn = JsonNullable.<List<String>>of(new ArrayList<>());
    }
    try {
      this.idNotIn.get().add(idNotInItem);
    } catch (java.util.NoSuchElementException e) {
      // this can never happen, as we make sure above that the value is present
    }
    return this;
  }

   /**
   * Get idNotIn
   * @return idNotIn
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public List<String> getIdNotIn() {
        return idNotIn.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_ID_NOT_IN)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<List<String>> getIdNotIn_JsonNullable() {
    return idNotIn;
  }
  
  @JsonProperty(JSON_PROPERTY_ID_NOT_IN)
  public void setIdNotIn_JsonNullable(JsonNullable<List<String>> idNotIn) {
    this.idNotIn = idNotIn;
  }

  public void setIdNotIn(List<String> idNotIn) {
    this.idNotIn = JsonNullable.<List<String>>of(idNotIn);
  }


  public DiskWhereInput idNotStartsWith(String idNotStartsWith) {
    this.idNotStartsWith = JsonNullable.<String>of(idNotStartsWith);
    return this;
  }

   /**
   * Get idNotStartsWith
   * @return idNotStartsWith
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getIdNotStartsWith() {
        return idNotStartsWith.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_ID_NOT_STARTS_WITH)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getIdNotStartsWith_JsonNullable() {
    return idNotStartsWith;
  }
  
  @JsonProperty(JSON_PROPERTY_ID_NOT_STARTS_WITH)
  public void setIdNotStartsWith_JsonNullable(JsonNullable<String> idNotStartsWith) {
    this.idNotStartsWith = idNotStartsWith;
  }

  public void setIdNotStartsWith(String idNotStartsWith) {
    this.idNotStartsWith = JsonNullable.<String>of(idNotStartsWith);
  }


  public DiskWhereInput idStartsWith(String idStartsWith) {
    this.idStartsWith = JsonNullable.<String>of(idStartsWith);
    return this;
  }

   /**
   * Get idStartsWith
   * @return idStartsWith
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getIdStartsWith() {
        return idStartsWith.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_ID_STARTS_WITH)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getIdStartsWith_JsonNullable() {
    return idStartsWith;
  }
  
  @JsonProperty(JSON_PROPERTY_ID_STARTS_WITH)
  public void setIdStartsWith_JsonNullable(JsonNullable<String> idStartsWith) {
    this.idStartsWith = idStartsWith;
  }

  public void setIdStartsWith(String idStartsWith) {
    this.idStartsWith = JsonNullable.<String>of(idStartsWith);
  }


  public DiskWhereInput labelsEvery(LabelWhereInput labelsEvery) {
    this.labelsEvery = JsonNullable.<LabelWhereInput>of(labelsEvery);
    return this;
  }

   /**
   * Get labelsEvery
   * @return labelsEvery
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public LabelWhereInput getLabelsEvery() {
        return labelsEvery.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_LABELS_EVERY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<LabelWhereInput> getLabelsEvery_JsonNullable() {
    return labelsEvery;
  }
  
  @JsonProperty(JSON_PROPERTY_LABELS_EVERY)
  public void setLabelsEvery_JsonNullable(JsonNullable<LabelWhereInput> labelsEvery) {
    this.labelsEvery = labelsEvery;
  }

  public void setLabelsEvery(LabelWhereInput labelsEvery) {
    this.labelsEvery = JsonNullable.<LabelWhereInput>of(labelsEvery);
  }


  public DiskWhereInput labelsNone(LabelWhereInput labelsNone) {
    this.labelsNone = JsonNullable.<LabelWhereInput>of(labelsNone);
    return this;
  }

   /**
   * Get labelsNone
   * @return labelsNone
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public LabelWhereInput getLabelsNone() {
        return labelsNone.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_LABELS_NONE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<LabelWhereInput> getLabelsNone_JsonNullable() {
    return labelsNone;
  }
  
  @JsonProperty(JSON_PROPERTY_LABELS_NONE)
  public void setLabelsNone_JsonNullable(JsonNullable<LabelWhereInput> labelsNone) {
    this.labelsNone = labelsNone;
  }

  public void setLabelsNone(LabelWhereInput labelsNone) {
    this.labelsNone = JsonNullable.<LabelWhereInput>of(labelsNone);
  }


  public DiskWhereInput labelsSome(LabelWhereInput labelsSome) {
    this.labelsSome = JsonNullable.<LabelWhereInput>of(labelsSome);
    return this;
  }

   /**
   * Get labelsSome
   * @return labelsSome
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public LabelWhereInput getLabelsSome() {
        return labelsSome.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_LABELS_SOME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<LabelWhereInput> getLabelsSome_JsonNullable() {
    return labelsSome;
  }
  
  @JsonProperty(JSON_PROPERTY_LABELS_SOME)
  public void setLabelsSome_JsonNullable(JsonNullable<LabelWhereInput> labelsSome) {
    this.labelsSome = labelsSome;
  }

  public void setLabelsSome(LabelWhereInput labelsSome) {
    this.labelsSome = JsonNullable.<LabelWhereInput>of(labelsSome);
  }


  public DiskWhereInput localId(String localId) {
    this.localId = JsonNullable.<String>of(localId);
    return this;
  }

   /**
   * Get localId
   * @return localId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getLocalId() {
        return localId.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_LOCAL_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getLocalId_JsonNullable() {
    return localId;
  }
  
  @JsonProperty(JSON_PROPERTY_LOCAL_ID)
  public void setLocalId_JsonNullable(JsonNullable<String> localId) {
    this.localId = localId;
  }

  public void setLocalId(String localId) {
    this.localId = JsonNullable.<String>of(localId);
  }


  public DiskWhereInput localIdContains(String localIdContains) {
    this.localIdContains = JsonNullable.<String>of(localIdContains);
    return this;
  }

   /**
   * Get localIdContains
   * @return localIdContains
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getLocalIdContains() {
        return localIdContains.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_LOCAL_ID_CONTAINS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getLocalIdContains_JsonNullable() {
    return localIdContains;
  }
  
  @JsonProperty(JSON_PROPERTY_LOCAL_ID_CONTAINS)
  public void setLocalIdContains_JsonNullable(JsonNullable<String> localIdContains) {
    this.localIdContains = localIdContains;
  }

  public void setLocalIdContains(String localIdContains) {
    this.localIdContains = JsonNullable.<String>of(localIdContains);
  }


  public DiskWhereInput localIdEndsWith(String localIdEndsWith) {
    this.localIdEndsWith = JsonNullable.<String>of(localIdEndsWith);
    return this;
  }

   /**
   * Get localIdEndsWith
   * @return localIdEndsWith
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getLocalIdEndsWith() {
        return localIdEndsWith.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_LOCAL_ID_ENDS_WITH)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getLocalIdEndsWith_JsonNullable() {
    return localIdEndsWith;
  }
  
  @JsonProperty(JSON_PROPERTY_LOCAL_ID_ENDS_WITH)
  public void setLocalIdEndsWith_JsonNullable(JsonNullable<String> localIdEndsWith) {
    this.localIdEndsWith = localIdEndsWith;
  }

  public void setLocalIdEndsWith(String localIdEndsWith) {
    this.localIdEndsWith = JsonNullable.<String>of(localIdEndsWith);
  }


  public DiskWhereInput localIdGt(String localIdGt) {
    this.localIdGt = JsonNullable.<String>of(localIdGt);
    return this;
  }

   /**
   * Get localIdGt
   * @return localIdGt
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getLocalIdGt() {
        return localIdGt.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_LOCAL_ID_GT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getLocalIdGt_JsonNullable() {
    return localIdGt;
  }
  
  @JsonProperty(JSON_PROPERTY_LOCAL_ID_GT)
  public void setLocalIdGt_JsonNullable(JsonNullable<String> localIdGt) {
    this.localIdGt = localIdGt;
  }

  public void setLocalIdGt(String localIdGt) {
    this.localIdGt = JsonNullable.<String>of(localIdGt);
  }


  public DiskWhereInput localIdGte(String localIdGte) {
    this.localIdGte = JsonNullable.<String>of(localIdGte);
    return this;
  }

   /**
   * Get localIdGte
   * @return localIdGte
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getLocalIdGte() {
        return localIdGte.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_LOCAL_ID_GTE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getLocalIdGte_JsonNullable() {
    return localIdGte;
  }
  
  @JsonProperty(JSON_PROPERTY_LOCAL_ID_GTE)
  public void setLocalIdGte_JsonNullable(JsonNullable<String> localIdGte) {
    this.localIdGte = localIdGte;
  }

  public void setLocalIdGte(String localIdGte) {
    this.localIdGte = JsonNullable.<String>of(localIdGte);
  }


  public DiskWhereInput localIdIn(List<String> localIdIn) {
    this.localIdIn = JsonNullable.<List<String>>of(localIdIn);
    return this;
  }

  public DiskWhereInput addLocalIdInItem(String localIdInItem) {
    if (this.localIdIn == null || !this.localIdIn.isPresent()) {
      this.localIdIn = JsonNullable.<List<String>>of(new ArrayList<>());
    }
    try {
      this.localIdIn.get().add(localIdInItem);
    } catch (java.util.NoSuchElementException e) {
      // this can never happen, as we make sure above that the value is present
    }
    return this;
  }

   /**
   * Get localIdIn
   * @return localIdIn
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public List<String> getLocalIdIn() {
        return localIdIn.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_LOCAL_ID_IN)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<List<String>> getLocalIdIn_JsonNullable() {
    return localIdIn;
  }
  
  @JsonProperty(JSON_PROPERTY_LOCAL_ID_IN)
  public void setLocalIdIn_JsonNullable(JsonNullable<List<String>> localIdIn) {
    this.localIdIn = localIdIn;
  }

  public void setLocalIdIn(List<String> localIdIn) {
    this.localIdIn = JsonNullable.<List<String>>of(localIdIn);
  }


  public DiskWhereInput localIdLt(String localIdLt) {
    this.localIdLt = JsonNullable.<String>of(localIdLt);
    return this;
  }

   /**
   * Get localIdLt
   * @return localIdLt
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getLocalIdLt() {
        return localIdLt.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_LOCAL_ID_LT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getLocalIdLt_JsonNullable() {
    return localIdLt;
  }
  
  @JsonProperty(JSON_PROPERTY_LOCAL_ID_LT)
  public void setLocalIdLt_JsonNullable(JsonNullable<String> localIdLt) {
    this.localIdLt = localIdLt;
  }

  public void setLocalIdLt(String localIdLt) {
    this.localIdLt = JsonNullable.<String>of(localIdLt);
  }


  public DiskWhereInput localIdLte(String localIdLte) {
    this.localIdLte = JsonNullable.<String>of(localIdLte);
    return this;
  }

   /**
   * Get localIdLte
   * @return localIdLte
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getLocalIdLte() {
        return localIdLte.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_LOCAL_ID_LTE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getLocalIdLte_JsonNullable() {
    return localIdLte;
  }
  
  @JsonProperty(JSON_PROPERTY_LOCAL_ID_LTE)
  public void setLocalIdLte_JsonNullable(JsonNullable<String> localIdLte) {
    this.localIdLte = localIdLte;
  }

  public void setLocalIdLte(String localIdLte) {
    this.localIdLte = JsonNullable.<String>of(localIdLte);
  }


  public DiskWhereInput localIdNot(String localIdNot) {
    this.localIdNot = JsonNullable.<String>of(localIdNot);
    return this;
  }

   /**
   * Get localIdNot
   * @return localIdNot
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getLocalIdNot() {
        return localIdNot.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_LOCAL_ID_NOT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getLocalIdNot_JsonNullable() {
    return localIdNot;
  }
  
  @JsonProperty(JSON_PROPERTY_LOCAL_ID_NOT)
  public void setLocalIdNot_JsonNullable(JsonNullable<String> localIdNot) {
    this.localIdNot = localIdNot;
  }

  public void setLocalIdNot(String localIdNot) {
    this.localIdNot = JsonNullable.<String>of(localIdNot);
  }


  public DiskWhereInput localIdNotContains(String localIdNotContains) {
    this.localIdNotContains = JsonNullable.<String>of(localIdNotContains);
    return this;
  }

   /**
   * Get localIdNotContains
   * @return localIdNotContains
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getLocalIdNotContains() {
        return localIdNotContains.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_LOCAL_ID_NOT_CONTAINS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getLocalIdNotContains_JsonNullable() {
    return localIdNotContains;
  }
  
  @JsonProperty(JSON_PROPERTY_LOCAL_ID_NOT_CONTAINS)
  public void setLocalIdNotContains_JsonNullable(JsonNullable<String> localIdNotContains) {
    this.localIdNotContains = localIdNotContains;
  }

  public void setLocalIdNotContains(String localIdNotContains) {
    this.localIdNotContains = JsonNullable.<String>of(localIdNotContains);
  }


  public DiskWhereInput localIdNotEndsWith(String localIdNotEndsWith) {
    this.localIdNotEndsWith = JsonNullable.<String>of(localIdNotEndsWith);
    return this;
  }

   /**
   * Get localIdNotEndsWith
   * @return localIdNotEndsWith
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getLocalIdNotEndsWith() {
        return localIdNotEndsWith.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_LOCAL_ID_NOT_ENDS_WITH)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getLocalIdNotEndsWith_JsonNullable() {
    return localIdNotEndsWith;
  }
  
  @JsonProperty(JSON_PROPERTY_LOCAL_ID_NOT_ENDS_WITH)
  public void setLocalIdNotEndsWith_JsonNullable(JsonNullable<String> localIdNotEndsWith) {
    this.localIdNotEndsWith = localIdNotEndsWith;
  }

  public void setLocalIdNotEndsWith(String localIdNotEndsWith) {
    this.localIdNotEndsWith = JsonNullable.<String>of(localIdNotEndsWith);
  }


  public DiskWhereInput localIdNotIn(List<String> localIdNotIn) {
    this.localIdNotIn = JsonNullable.<List<String>>of(localIdNotIn);
    return this;
  }

  public DiskWhereInput addLocalIdNotInItem(String localIdNotInItem) {
    if (this.localIdNotIn == null || !this.localIdNotIn.isPresent()) {
      this.localIdNotIn = JsonNullable.<List<String>>of(new ArrayList<>());
    }
    try {
      this.localIdNotIn.get().add(localIdNotInItem);
    } catch (java.util.NoSuchElementException e) {
      // this can never happen, as we make sure above that the value is present
    }
    return this;
  }

   /**
   * Get localIdNotIn
   * @return localIdNotIn
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public List<String> getLocalIdNotIn() {
        return localIdNotIn.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_LOCAL_ID_NOT_IN)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<List<String>> getLocalIdNotIn_JsonNullable() {
    return localIdNotIn;
  }
  
  @JsonProperty(JSON_PROPERTY_LOCAL_ID_NOT_IN)
  public void setLocalIdNotIn_JsonNullable(JsonNullable<List<String>> localIdNotIn) {
    this.localIdNotIn = localIdNotIn;
  }

  public void setLocalIdNotIn(List<String> localIdNotIn) {
    this.localIdNotIn = JsonNullable.<List<String>>of(localIdNotIn);
  }


  public DiskWhereInput localIdNotStartsWith(String localIdNotStartsWith) {
    this.localIdNotStartsWith = JsonNullable.<String>of(localIdNotStartsWith);
    return this;
  }

   /**
   * Get localIdNotStartsWith
   * @return localIdNotStartsWith
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getLocalIdNotStartsWith() {
        return localIdNotStartsWith.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_LOCAL_ID_NOT_STARTS_WITH)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getLocalIdNotStartsWith_JsonNullable() {
    return localIdNotStartsWith;
  }
  
  @JsonProperty(JSON_PROPERTY_LOCAL_ID_NOT_STARTS_WITH)
  public void setLocalIdNotStartsWith_JsonNullable(JsonNullable<String> localIdNotStartsWith) {
    this.localIdNotStartsWith = localIdNotStartsWith;
  }

  public void setLocalIdNotStartsWith(String localIdNotStartsWith) {
    this.localIdNotStartsWith = JsonNullable.<String>of(localIdNotStartsWith);
  }


  public DiskWhereInput localIdStartsWith(String localIdStartsWith) {
    this.localIdStartsWith = JsonNullable.<String>of(localIdStartsWith);
    return this;
  }

   /**
   * Get localIdStartsWith
   * @return localIdStartsWith
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getLocalIdStartsWith() {
        return localIdStartsWith.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_LOCAL_ID_STARTS_WITH)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getLocalIdStartsWith_JsonNullable() {
    return localIdStartsWith;
  }
  
  @JsonProperty(JSON_PROPERTY_LOCAL_ID_STARTS_WITH)
  public void setLocalIdStartsWith_JsonNullable(JsonNullable<String> localIdStartsWith) {
    this.localIdStartsWith = localIdStartsWith;
  }

  public void setLocalIdStartsWith(String localIdStartsWith) {
    this.localIdStartsWith = JsonNullable.<String>of(localIdStartsWith);
  }


  public DiskWhereInput model(String model) {
    this.model = JsonNullable.<String>of(model);
    return this;
  }

   /**
   * Get model
   * @return model
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getModel() {
        return model.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_MODEL)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getModel_JsonNullable() {
    return model;
  }
  
  @JsonProperty(JSON_PROPERTY_MODEL)
  public void setModel_JsonNullable(JsonNullable<String> model) {
    this.model = model;
  }

  public void setModel(String model) {
    this.model = JsonNullable.<String>of(model);
  }


  public DiskWhereInput modelContains(String modelContains) {
    this.modelContains = JsonNullable.<String>of(modelContains);
    return this;
  }

   /**
   * Get modelContains
   * @return modelContains
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getModelContains() {
        return modelContains.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_MODEL_CONTAINS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getModelContains_JsonNullable() {
    return modelContains;
  }
  
  @JsonProperty(JSON_PROPERTY_MODEL_CONTAINS)
  public void setModelContains_JsonNullable(JsonNullable<String> modelContains) {
    this.modelContains = modelContains;
  }

  public void setModelContains(String modelContains) {
    this.modelContains = JsonNullable.<String>of(modelContains);
  }


  public DiskWhereInput modelEndsWith(String modelEndsWith) {
    this.modelEndsWith = JsonNullable.<String>of(modelEndsWith);
    return this;
  }

   /**
   * Get modelEndsWith
   * @return modelEndsWith
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getModelEndsWith() {
        return modelEndsWith.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_MODEL_ENDS_WITH)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getModelEndsWith_JsonNullable() {
    return modelEndsWith;
  }
  
  @JsonProperty(JSON_PROPERTY_MODEL_ENDS_WITH)
  public void setModelEndsWith_JsonNullable(JsonNullable<String> modelEndsWith) {
    this.modelEndsWith = modelEndsWith;
  }

  public void setModelEndsWith(String modelEndsWith) {
    this.modelEndsWith = JsonNullable.<String>of(modelEndsWith);
  }


  public DiskWhereInput modelGt(String modelGt) {
    this.modelGt = JsonNullable.<String>of(modelGt);
    return this;
  }

   /**
   * Get modelGt
   * @return modelGt
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getModelGt() {
        return modelGt.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_MODEL_GT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getModelGt_JsonNullable() {
    return modelGt;
  }
  
  @JsonProperty(JSON_PROPERTY_MODEL_GT)
  public void setModelGt_JsonNullable(JsonNullable<String> modelGt) {
    this.modelGt = modelGt;
  }

  public void setModelGt(String modelGt) {
    this.modelGt = JsonNullable.<String>of(modelGt);
  }


  public DiskWhereInput modelGte(String modelGte) {
    this.modelGte = JsonNullable.<String>of(modelGte);
    return this;
  }

   /**
   * Get modelGte
   * @return modelGte
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getModelGte() {
        return modelGte.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_MODEL_GTE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getModelGte_JsonNullable() {
    return modelGte;
  }
  
  @JsonProperty(JSON_PROPERTY_MODEL_GTE)
  public void setModelGte_JsonNullable(JsonNullable<String> modelGte) {
    this.modelGte = modelGte;
  }

  public void setModelGte(String modelGte) {
    this.modelGte = JsonNullable.<String>of(modelGte);
  }


  public DiskWhereInput modelIn(List<String> modelIn) {
    this.modelIn = JsonNullable.<List<String>>of(modelIn);
    return this;
  }

  public DiskWhereInput addModelInItem(String modelInItem) {
    if (this.modelIn == null || !this.modelIn.isPresent()) {
      this.modelIn = JsonNullable.<List<String>>of(new ArrayList<>());
    }
    try {
      this.modelIn.get().add(modelInItem);
    } catch (java.util.NoSuchElementException e) {
      // this can never happen, as we make sure above that the value is present
    }
    return this;
  }

   /**
   * Get modelIn
   * @return modelIn
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public List<String> getModelIn() {
        return modelIn.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_MODEL_IN)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<List<String>> getModelIn_JsonNullable() {
    return modelIn;
  }
  
  @JsonProperty(JSON_PROPERTY_MODEL_IN)
  public void setModelIn_JsonNullable(JsonNullable<List<String>> modelIn) {
    this.modelIn = modelIn;
  }

  public void setModelIn(List<String> modelIn) {
    this.modelIn = JsonNullable.<List<String>>of(modelIn);
  }


  public DiskWhereInput modelLt(String modelLt) {
    this.modelLt = JsonNullable.<String>of(modelLt);
    return this;
  }

   /**
   * Get modelLt
   * @return modelLt
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getModelLt() {
        return modelLt.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_MODEL_LT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getModelLt_JsonNullable() {
    return modelLt;
  }
  
  @JsonProperty(JSON_PROPERTY_MODEL_LT)
  public void setModelLt_JsonNullable(JsonNullable<String> modelLt) {
    this.modelLt = modelLt;
  }

  public void setModelLt(String modelLt) {
    this.modelLt = JsonNullable.<String>of(modelLt);
  }


  public DiskWhereInput modelLte(String modelLte) {
    this.modelLte = JsonNullable.<String>of(modelLte);
    return this;
  }

   /**
   * Get modelLte
   * @return modelLte
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getModelLte() {
        return modelLte.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_MODEL_LTE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getModelLte_JsonNullable() {
    return modelLte;
  }
  
  @JsonProperty(JSON_PROPERTY_MODEL_LTE)
  public void setModelLte_JsonNullable(JsonNullable<String> modelLte) {
    this.modelLte = modelLte;
  }

  public void setModelLte(String modelLte) {
    this.modelLte = JsonNullable.<String>of(modelLte);
  }


  public DiskWhereInput modelNot(String modelNot) {
    this.modelNot = JsonNullable.<String>of(modelNot);
    return this;
  }

   /**
   * Get modelNot
   * @return modelNot
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getModelNot() {
        return modelNot.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_MODEL_NOT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getModelNot_JsonNullable() {
    return modelNot;
  }
  
  @JsonProperty(JSON_PROPERTY_MODEL_NOT)
  public void setModelNot_JsonNullable(JsonNullable<String> modelNot) {
    this.modelNot = modelNot;
  }

  public void setModelNot(String modelNot) {
    this.modelNot = JsonNullable.<String>of(modelNot);
  }


  public DiskWhereInput modelNotContains(String modelNotContains) {
    this.modelNotContains = JsonNullable.<String>of(modelNotContains);
    return this;
  }

   /**
   * Get modelNotContains
   * @return modelNotContains
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getModelNotContains() {
        return modelNotContains.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_MODEL_NOT_CONTAINS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getModelNotContains_JsonNullable() {
    return modelNotContains;
  }
  
  @JsonProperty(JSON_PROPERTY_MODEL_NOT_CONTAINS)
  public void setModelNotContains_JsonNullable(JsonNullable<String> modelNotContains) {
    this.modelNotContains = modelNotContains;
  }

  public void setModelNotContains(String modelNotContains) {
    this.modelNotContains = JsonNullable.<String>of(modelNotContains);
  }


  public DiskWhereInput modelNotEndsWith(String modelNotEndsWith) {
    this.modelNotEndsWith = JsonNullable.<String>of(modelNotEndsWith);
    return this;
  }

   /**
   * Get modelNotEndsWith
   * @return modelNotEndsWith
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getModelNotEndsWith() {
        return modelNotEndsWith.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_MODEL_NOT_ENDS_WITH)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getModelNotEndsWith_JsonNullable() {
    return modelNotEndsWith;
  }
  
  @JsonProperty(JSON_PROPERTY_MODEL_NOT_ENDS_WITH)
  public void setModelNotEndsWith_JsonNullable(JsonNullable<String> modelNotEndsWith) {
    this.modelNotEndsWith = modelNotEndsWith;
  }

  public void setModelNotEndsWith(String modelNotEndsWith) {
    this.modelNotEndsWith = JsonNullable.<String>of(modelNotEndsWith);
  }


  public DiskWhereInput modelNotIn(List<String> modelNotIn) {
    this.modelNotIn = JsonNullable.<List<String>>of(modelNotIn);
    return this;
  }

  public DiskWhereInput addModelNotInItem(String modelNotInItem) {
    if (this.modelNotIn == null || !this.modelNotIn.isPresent()) {
      this.modelNotIn = JsonNullable.<List<String>>of(new ArrayList<>());
    }
    try {
      this.modelNotIn.get().add(modelNotInItem);
    } catch (java.util.NoSuchElementException e) {
      // this can never happen, as we make sure above that the value is present
    }
    return this;
  }

   /**
   * Get modelNotIn
   * @return modelNotIn
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public List<String> getModelNotIn() {
        return modelNotIn.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_MODEL_NOT_IN)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<List<String>> getModelNotIn_JsonNullable() {
    return modelNotIn;
  }
  
  @JsonProperty(JSON_PROPERTY_MODEL_NOT_IN)
  public void setModelNotIn_JsonNullable(JsonNullable<List<String>> modelNotIn) {
    this.modelNotIn = modelNotIn;
  }

  public void setModelNotIn(List<String> modelNotIn) {
    this.modelNotIn = JsonNullable.<List<String>>of(modelNotIn);
  }


  public DiskWhereInput modelNotStartsWith(String modelNotStartsWith) {
    this.modelNotStartsWith = JsonNullable.<String>of(modelNotStartsWith);
    return this;
  }

   /**
   * Get modelNotStartsWith
   * @return modelNotStartsWith
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getModelNotStartsWith() {
        return modelNotStartsWith.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_MODEL_NOT_STARTS_WITH)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getModelNotStartsWith_JsonNullable() {
    return modelNotStartsWith;
  }
  
  @JsonProperty(JSON_PROPERTY_MODEL_NOT_STARTS_WITH)
  public void setModelNotStartsWith_JsonNullable(JsonNullable<String> modelNotStartsWith) {
    this.modelNotStartsWith = modelNotStartsWith;
  }

  public void setModelNotStartsWith(String modelNotStartsWith) {
    this.modelNotStartsWith = JsonNullable.<String>of(modelNotStartsWith);
  }


  public DiskWhereInput modelStartsWith(String modelStartsWith) {
    this.modelStartsWith = JsonNullable.<String>of(modelStartsWith);
    return this;
  }

   /**
   * Get modelStartsWith
   * @return modelStartsWith
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getModelStartsWith() {
        return modelStartsWith.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_MODEL_STARTS_WITH)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getModelStartsWith_JsonNullable() {
    return modelStartsWith;
  }
  
  @JsonProperty(JSON_PROPERTY_MODEL_STARTS_WITH)
  public void setModelStartsWith_JsonNullable(JsonNullable<String> modelStartsWith) {
    this.modelStartsWith = modelStartsWith;
  }

  public void setModelStartsWith(String modelStartsWith) {
    this.modelStartsWith = JsonNullable.<String>of(modelStartsWith);
  }


  public DiskWhereInput mounted(Boolean mounted) {
    this.mounted = JsonNullable.<Boolean>of(mounted);
    return this;
  }

   /**
   * Get mounted
   * @return mounted
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public Boolean getMounted() {
        return mounted.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_MOUNTED)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<Boolean> getMounted_JsonNullable() {
    return mounted;
  }
  
  @JsonProperty(JSON_PROPERTY_MOUNTED)
  public void setMounted_JsonNullable(JsonNullable<Boolean> mounted) {
    this.mounted = mounted;
  }

  public void setMounted(Boolean mounted) {
    this.mounted = JsonNullable.<Boolean>of(mounted);
  }


  public DiskWhereInput mountedNot(Boolean mountedNot) {
    this.mountedNot = JsonNullable.<Boolean>of(mountedNot);
    return this;
  }

   /**
   * Get mountedNot
   * @return mountedNot
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public Boolean getMountedNot() {
        return mountedNot.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_MOUNTED_NOT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<Boolean> getMountedNot_JsonNullable() {
    return mountedNot;
  }
  
  @JsonProperty(JSON_PROPERTY_MOUNTED_NOT)
  public void setMountedNot_JsonNullable(JsonNullable<Boolean> mountedNot) {
    this.mountedNot = mountedNot;
  }

  public void setMountedNot(Boolean mountedNot) {
    this.mountedNot = JsonNullable.<Boolean>of(mountedNot);
  }


  public DiskWhereInput name(String name) {
    this.name = JsonNullable.<String>of(name);
    return this;
  }

   /**
   * Get name
   * @return name
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getName() {
        return name.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getName_JsonNullable() {
    return name;
  }
  
  @JsonProperty(JSON_PROPERTY_NAME)
  public void setName_JsonNullable(JsonNullable<String> name) {
    this.name = name;
  }

  public void setName(String name) {
    this.name = JsonNullable.<String>of(name);
  }


  public DiskWhereInput nameContains(String nameContains) {
    this.nameContains = JsonNullable.<String>of(nameContains);
    return this;
  }

   /**
   * Get nameContains
   * @return nameContains
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getNameContains() {
        return nameContains.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_NAME_CONTAINS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getNameContains_JsonNullable() {
    return nameContains;
  }
  
  @JsonProperty(JSON_PROPERTY_NAME_CONTAINS)
  public void setNameContains_JsonNullable(JsonNullable<String> nameContains) {
    this.nameContains = nameContains;
  }

  public void setNameContains(String nameContains) {
    this.nameContains = JsonNullable.<String>of(nameContains);
  }


  public DiskWhereInput nameEndsWith(String nameEndsWith) {
    this.nameEndsWith = JsonNullable.<String>of(nameEndsWith);
    return this;
  }

   /**
   * Get nameEndsWith
   * @return nameEndsWith
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getNameEndsWith() {
        return nameEndsWith.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_NAME_ENDS_WITH)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getNameEndsWith_JsonNullable() {
    return nameEndsWith;
  }
  
  @JsonProperty(JSON_PROPERTY_NAME_ENDS_WITH)
  public void setNameEndsWith_JsonNullable(JsonNullable<String> nameEndsWith) {
    this.nameEndsWith = nameEndsWith;
  }

  public void setNameEndsWith(String nameEndsWith) {
    this.nameEndsWith = JsonNullable.<String>of(nameEndsWith);
  }


  public DiskWhereInput nameGt(String nameGt) {
    this.nameGt = JsonNullable.<String>of(nameGt);
    return this;
  }

   /**
   * Get nameGt
   * @return nameGt
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getNameGt() {
        return nameGt.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_NAME_GT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getNameGt_JsonNullable() {
    return nameGt;
  }
  
  @JsonProperty(JSON_PROPERTY_NAME_GT)
  public void setNameGt_JsonNullable(JsonNullable<String> nameGt) {
    this.nameGt = nameGt;
  }

  public void setNameGt(String nameGt) {
    this.nameGt = JsonNullable.<String>of(nameGt);
  }


  public DiskWhereInput nameGte(String nameGte) {
    this.nameGte = JsonNullable.<String>of(nameGte);
    return this;
  }

   /**
   * Get nameGte
   * @return nameGte
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getNameGte() {
        return nameGte.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_NAME_GTE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getNameGte_JsonNullable() {
    return nameGte;
  }
  
  @JsonProperty(JSON_PROPERTY_NAME_GTE)
  public void setNameGte_JsonNullable(JsonNullable<String> nameGte) {
    this.nameGte = nameGte;
  }

  public void setNameGte(String nameGte) {
    this.nameGte = JsonNullable.<String>of(nameGte);
  }


  public DiskWhereInput nameIn(List<String> nameIn) {
    this.nameIn = JsonNullable.<List<String>>of(nameIn);
    return this;
  }

  public DiskWhereInput addNameInItem(String nameInItem) {
    if (this.nameIn == null || !this.nameIn.isPresent()) {
      this.nameIn = JsonNullable.<List<String>>of(new ArrayList<>());
    }
    try {
      this.nameIn.get().add(nameInItem);
    } catch (java.util.NoSuchElementException e) {
      // this can never happen, as we make sure above that the value is present
    }
    return this;
  }

   /**
   * Get nameIn
   * @return nameIn
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public List<String> getNameIn() {
        return nameIn.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_NAME_IN)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<List<String>> getNameIn_JsonNullable() {
    return nameIn;
  }
  
  @JsonProperty(JSON_PROPERTY_NAME_IN)
  public void setNameIn_JsonNullable(JsonNullable<List<String>> nameIn) {
    this.nameIn = nameIn;
  }

  public void setNameIn(List<String> nameIn) {
    this.nameIn = JsonNullable.<List<String>>of(nameIn);
  }


  public DiskWhereInput nameLt(String nameLt) {
    this.nameLt = JsonNullable.<String>of(nameLt);
    return this;
  }

   /**
   * Get nameLt
   * @return nameLt
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getNameLt() {
        return nameLt.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_NAME_LT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getNameLt_JsonNullable() {
    return nameLt;
  }
  
  @JsonProperty(JSON_PROPERTY_NAME_LT)
  public void setNameLt_JsonNullable(JsonNullable<String> nameLt) {
    this.nameLt = nameLt;
  }

  public void setNameLt(String nameLt) {
    this.nameLt = JsonNullable.<String>of(nameLt);
  }


  public DiskWhereInput nameLte(String nameLte) {
    this.nameLte = JsonNullable.<String>of(nameLte);
    return this;
  }

   /**
   * Get nameLte
   * @return nameLte
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getNameLte() {
        return nameLte.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_NAME_LTE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getNameLte_JsonNullable() {
    return nameLte;
  }
  
  @JsonProperty(JSON_PROPERTY_NAME_LTE)
  public void setNameLte_JsonNullable(JsonNullable<String> nameLte) {
    this.nameLte = nameLte;
  }

  public void setNameLte(String nameLte) {
    this.nameLte = JsonNullable.<String>of(nameLte);
  }


  public DiskWhereInput nameNot(String nameNot) {
    this.nameNot = JsonNullable.<String>of(nameNot);
    return this;
  }

   /**
   * Get nameNot
   * @return nameNot
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getNameNot() {
        return nameNot.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_NAME_NOT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getNameNot_JsonNullable() {
    return nameNot;
  }
  
  @JsonProperty(JSON_PROPERTY_NAME_NOT)
  public void setNameNot_JsonNullable(JsonNullable<String> nameNot) {
    this.nameNot = nameNot;
  }

  public void setNameNot(String nameNot) {
    this.nameNot = JsonNullable.<String>of(nameNot);
  }


  public DiskWhereInput nameNotContains(String nameNotContains) {
    this.nameNotContains = JsonNullable.<String>of(nameNotContains);
    return this;
  }

   /**
   * Get nameNotContains
   * @return nameNotContains
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getNameNotContains() {
        return nameNotContains.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_NAME_NOT_CONTAINS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getNameNotContains_JsonNullable() {
    return nameNotContains;
  }
  
  @JsonProperty(JSON_PROPERTY_NAME_NOT_CONTAINS)
  public void setNameNotContains_JsonNullable(JsonNullable<String> nameNotContains) {
    this.nameNotContains = nameNotContains;
  }

  public void setNameNotContains(String nameNotContains) {
    this.nameNotContains = JsonNullable.<String>of(nameNotContains);
  }


  public DiskWhereInput nameNotEndsWith(String nameNotEndsWith) {
    this.nameNotEndsWith = JsonNullable.<String>of(nameNotEndsWith);
    return this;
  }

   /**
   * Get nameNotEndsWith
   * @return nameNotEndsWith
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getNameNotEndsWith() {
        return nameNotEndsWith.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_NAME_NOT_ENDS_WITH)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getNameNotEndsWith_JsonNullable() {
    return nameNotEndsWith;
  }
  
  @JsonProperty(JSON_PROPERTY_NAME_NOT_ENDS_WITH)
  public void setNameNotEndsWith_JsonNullable(JsonNullable<String> nameNotEndsWith) {
    this.nameNotEndsWith = nameNotEndsWith;
  }

  public void setNameNotEndsWith(String nameNotEndsWith) {
    this.nameNotEndsWith = JsonNullable.<String>of(nameNotEndsWith);
  }


  public DiskWhereInput nameNotIn(List<String> nameNotIn) {
    this.nameNotIn = JsonNullable.<List<String>>of(nameNotIn);
    return this;
  }

  public DiskWhereInput addNameNotInItem(String nameNotInItem) {
    if (this.nameNotIn == null || !this.nameNotIn.isPresent()) {
      this.nameNotIn = JsonNullable.<List<String>>of(new ArrayList<>());
    }
    try {
      this.nameNotIn.get().add(nameNotInItem);
    } catch (java.util.NoSuchElementException e) {
      // this can never happen, as we make sure above that the value is present
    }
    return this;
  }

   /**
   * Get nameNotIn
   * @return nameNotIn
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public List<String> getNameNotIn() {
        return nameNotIn.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_NAME_NOT_IN)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<List<String>> getNameNotIn_JsonNullable() {
    return nameNotIn;
  }
  
  @JsonProperty(JSON_PROPERTY_NAME_NOT_IN)
  public void setNameNotIn_JsonNullable(JsonNullable<List<String>> nameNotIn) {
    this.nameNotIn = nameNotIn;
  }

  public void setNameNotIn(List<String> nameNotIn) {
    this.nameNotIn = JsonNullable.<List<String>>of(nameNotIn);
  }


  public DiskWhereInput nameNotStartsWith(String nameNotStartsWith) {
    this.nameNotStartsWith = JsonNullable.<String>of(nameNotStartsWith);
    return this;
  }

   /**
   * Get nameNotStartsWith
   * @return nameNotStartsWith
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getNameNotStartsWith() {
        return nameNotStartsWith.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_NAME_NOT_STARTS_WITH)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getNameNotStartsWith_JsonNullable() {
    return nameNotStartsWith;
  }
  
  @JsonProperty(JSON_PROPERTY_NAME_NOT_STARTS_WITH)
  public void setNameNotStartsWith_JsonNullable(JsonNullable<String> nameNotStartsWith) {
    this.nameNotStartsWith = nameNotStartsWith;
  }

  public void setNameNotStartsWith(String nameNotStartsWith) {
    this.nameNotStartsWith = JsonNullable.<String>of(nameNotStartsWith);
  }


  public DiskWhereInput nameStartsWith(String nameStartsWith) {
    this.nameStartsWith = JsonNullable.<String>of(nameStartsWith);
    return this;
  }

   /**
   * Get nameStartsWith
   * @return nameStartsWith
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getNameStartsWith() {
        return nameStartsWith.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_NAME_STARTS_WITH)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getNameStartsWith_JsonNullable() {
    return nameStartsWith;
  }
  
  @JsonProperty(JSON_PROPERTY_NAME_STARTS_WITH)
  public void setNameStartsWith_JsonNullable(JsonNullable<String> nameStartsWith) {
    this.nameStartsWith = nameStartsWith;
  }

  public void setNameStartsWith(String nameStartsWith) {
    this.nameStartsWith = JsonNullable.<String>of(nameStartsWith);
  }


  public DiskWhereInput NOT(List<DiskWhereInput> NOT) {
    this.NOT = JsonNullable.<List<DiskWhereInput>>of(NOT);
    return this;
  }

  public DiskWhereInput addNOTItem(DiskWhereInput NOTItem) {
    if (this.NOT == null || !this.NOT.isPresent()) {
      this.NOT = JsonNullable.<List<DiskWhereInput>>of(new ArrayList<>());
    }
    try {
      this.NOT.get().add(NOTItem);
    } catch (java.util.NoSuchElementException e) {
      // this can never happen, as we make sure above that the value is present
    }
    return this;
  }

   /**
   * Get NOT
   * @return NOT
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public List<DiskWhereInput> getNOT() {
        return NOT.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_N_O_T)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<List<DiskWhereInput>> getNOT_JsonNullable() {
    return NOT;
  }
  
  @JsonProperty(JSON_PROPERTY_N_O_T)
  public void setNOT_JsonNullable(JsonNullable<List<DiskWhereInput>> NOT) {
    this.NOT = NOT;
  }

  public void setNOT(List<DiskWhereInput> NOT) {
    this.NOT = JsonNullable.<List<DiskWhereInput>>of(NOT);
  }


  public DiskWhereInput numaNode(Double numaNode) {
    this.numaNode = JsonNullable.<Double>of(numaNode);
    return this;
  }

   /**
   * Get numaNode
   * @return numaNode
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public Double getNumaNode() {
        return numaNode.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_NUMA_NODE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<Double> getNumaNode_JsonNullable() {
    return numaNode;
  }
  
  @JsonProperty(JSON_PROPERTY_NUMA_NODE)
  public void setNumaNode_JsonNullable(JsonNullable<Double> numaNode) {
    this.numaNode = numaNode;
  }

  public void setNumaNode(Double numaNode) {
    this.numaNode = JsonNullable.<Double>of(numaNode);
  }


  public DiskWhereInput numaNodeGt(Double numaNodeGt) {
    this.numaNodeGt = JsonNullable.<Double>of(numaNodeGt);
    return this;
  }

   /**
   * Get numaNodeGt
   * @return numaNodeGt
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public Double getNumaNodeGt() {
        return numaNodeGt.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_NUMA_NODE_GT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<Double> getNumaNodeGt_JsonNullable() {
    return numaNodeGt;
  }
  
  @JsonProperty(JSON_PROPERTY_NUMA_NODE_GT)
  public void setNumaNodeGt_JsonNullable(JsonNullable<Double> numaNodeGt) {
    this.numaNodeGt = numaNodeGt;
  }

  public void setNumaNodeGt(Double numaNodeGt) {
    this.numaNodeGt = JsonNullable.<Double>of(numaNodeGt);
  }


  public DiskWhereInput numaNodeGte(Double numaNodeGte) {
    this.numaNodeGte = JsonNullable.<Double>of(numaNodeGte);
    return this;
  }

   /**
   * Get numaNodeGte
   * @return numaNodeGte
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public Double getNumaNodeGte() {
        return numaNodeGte.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_NUMA_NODE_GTE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<Double> getNumaNodeGte_JsonNullable() {
    return numaNodeGte;
  }
  
  @JsonProperty(JSON_PROPERTY_NUMA_NODE_GTE)
  public void setNumaNodeGte_JsonNullable(JsonNullable<Double> numaNodeGte) {
    this.numaNodeGte = numaNodeGte;
  }

  public void setNumaNodeGte(Double numaNodeGte) {
    this.numaNodeGte = JsonNullable.<Double>of(numaNodeGte);
  }


  public DiskWhereInput numaNodeIn(List<Double> numaNodeIn) {
    this.numaNodeIn = JsonNullable.<List<Double>>of(numaNodeIn);
    return this;
  }

  public DiskWhereInput addNumaNodeInItem(Double numaNodeInItem) {
    if (this.numaNodeIn == null || !this.numaNodeIn.isPresent()) {
      this.numaNodeIn = JsonNullable.<List<Double>>of(new ArrayList<>());
    }
    try {
      this.numaNodeIn.get().add(numaNodeInItem);
    } catch (java.util.NoSuchElementException e) {
      // this can never happen, as we make sure above that the value is present
    }
    return this;
  }

   /**
   * Get numaNodeIn
   * @return numaNodeIn
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public List<Double> getNumaNodeIn() {
        return numaNodeIn.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_NUMA_NODE_IN)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<List<Double>> getNumaNodeIn_JsonNullable() {
    return numaNodeIn;
  }
  
  @JsonProperty(JSON_PROPERTY_NUMA_NODE_IN)
  public void setNumaNodeIn_JsonNullable(JsonNullable<List<Double>> numaNodeIn) {
    this.numaNodeIn = numaNodeIn;
  }

  public void setNumaNodeIn(List<Double> numaNodeIn) {
    this.numaNodeIn = JsonNullable.<List<Double>>of(numaNodeIn);
  }


  public DiskWhereInput numaNodeLt(Double numaNodeLt) {
    this.numaNodeLt = JsonNullable.<Double>of(numaNodeLt);
    return this;
  }

   /**
   * Get numaNodeLt
   * @return numaNodeLt
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public Double getNumaNodeLt() {
        return numaNodeLt.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_NUMA_NODE_LT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<Double> getNumaNodeLt_JsonNullable() {
    return numaNodeLt;
  }
  
  @JsonProperty(JSON_PROPERTY_NUMA_NODE_LT)
  public void setNumaNodeLt_JsonNullable(JsonNullable<Double> numaNodeLt) {
    this.numaNodeLt = numaNodeLt;
  }

  public void setNumaNodeLt(Double numaNodeLt) {
    this.numaNodeLt = JsonNullable.<Double>of(numaNodeLt);
  }


  public DiskWhereInput numaNodeLte(Double numaNodeLte) {
    this.numaNodeLte = JsonNullable.<Double>of(numaNodeLte);
    return this;
  }

   /**
   * Get numaNodeLte
   * @return numaNodeLte
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public Double getNumaNodeLte() {
        return numaNodeLte.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_NUMA_NODE_LTE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<Double> getNumaNodeLte_JsonNullable() {
    return numaNodeLte;
  }
  
  @JsonProperty(JSON_PROPERTY_NUMA_NODE_LTE)
  public void setNumaNodeLte_JsonNullable(JsonNullable<Double> numaNodeLte) {
    this.numaNodeLte = numaNodeLte;
  }

  public void setNumaNodeLte(Double numaNodeLte) {
    this.numaNodeLte = JsonNullable.<Double>of(numaNodeLte);
  }


  public DiskWhereInput numaNodeNot(Double numaNodeNot) {
    this.numaNodeNot = JsonNullable.<Double>of(numaNodeNot);
    return this;
  }

   /**
   * Get numaNodeNot
   * @return numaNodeNot
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public Double getNumaNodeNot() {
        return numaNodeNot.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_NUMA_NODE_NOT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<Double> getNumaNodeNot_JsonNullable() {
    return numaNodeNot;
  }
  
  @JsonProperty(JSON_PROPERTY_NUMA_NODE_NOT)
  public void setNumaNodeNot_JsonNullable(JsonNullable<Double> numaNodeNot) {
    this.numaNodeNot = numaNodeNot;
  }

  public void setNumaNodeNot(Double numaNodeNot) {
    this.numaNodeNot = JsonNullable.<Double>of(numaNodeNot);
  }


  public DiskWhereInput numaNodeNotIn(List<Double> numaNodeNotIn) {
    this.numaNodeNotIn = JsonNullable.<List<Double>>of(numaNodeNotIn);
    return this;
  }

  public DiskWhereInput addNumaNodeNotInItem(Double numaNodeNotInItem) {
    if (this.numaNodeNotIn == null || !this.numaNodeNotIn.isPresent()) {
      this.numaNodeNotIn = JsonNullable.<List<Double>>of(new ArrayList<>());
    }
    try {
      this.numaNodeNotIn.get().add(numaNodeNotInItem);
    } catch (java.util.NoSuchElementException e) {
      // this can never happen, as we make sure above that the value is present
    }
    return this;
  }

   /**
   * Get numaNodeNotIn
   * @return numaNodeNotIn
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public List<Double> getNumaNodeNotIn() {
        return numaNodeNotIn.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_NUMA_NODE_NOT_IN)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<List<Double>> getNumaNodeNotIn_JsonNullable() {
    return numaNodeNotIn;
  }
  
  @JsonProperty(JSON_PROPERTY_NUMA_NODE_NOT_IN)
  public void setNumaNodeNotIn_JsonNullable(JsonNullable<List<Double>> numaNodeNotIn) {
    this.numaNodeNotIn = numaNodeNotIn;
  }

  public void setNumaNodeNotIn(List<Double> numaNodeNotIn) {
    this.numaNodeNotIn = JsonNullable.<List<Double>>of(numaNodeNotIn);
  }


  public DiskWhereInput offline(Boolean offline) {
    this.offline = JsonNullable.<Boolean>of(offline);
    return this;
  }

   /**
   * Get offline
   * @return offline
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public Boolean getOffline() {
        return offline.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_OFFLINE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<Boolean> getOffline_JsonNullable() {
    return offline;
  }
  
  @JsonProperty(JSON_PROPERTY_OFFLINE)
  public void setOffline_JsonNullable(JsonNullable<Boolean> offline) {
    this.offline = offline;
  }

  public void setOffline(Boolean offline) {
    this.offline = JsonNullable.<Boolean>of(offline);
  }


  public DiskWhereInput offlineNot(Boolean offlineNot) {
    this.offlineNot = JsonNullable.<Boolean>of(offlineNot);
    return this;
  }

   /**
   * Get offlineNot
   * @return offlineNot
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public Boolean getOfflineNot() {
        return offlineNot.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_OFFLINE_NOT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<Boolean> getOfflineNot_JsonNullable() {
    return offlineNot;
  }
  
  @JsonProperty(JSON_PROPERTY_OFFLINE_NOT)
  public void setOfflineNot_JsonNullable(JsonNullable<Boolean> offlineNot) {
    this.offlineNot = offlineNot;
  }

  public void setOfflineNot(Boolean offlineNot) {
    this.offlineNot = JsonNullable.<Boolean>of(offlineNot);
  }


  public DiskWhereInput OR(List<DiskWhereInput> OR) {
    this.OR = JsonNullable.<List<DiskWhereInput>>of(OR);
    return this;
  }

  public DiskWhereInput addORItem(DiskWhereInput ORItem) {
    if (this.OR == null || !this.OR.isPresent()) {
      this.OR = JsonNullable.<List<DiskWhereInput>>of(new ArrayList<>());
    }
    try {
      this.OR.get().add(ORItem);
    } catch (java.util.NoSuchElementException e) {
      // this can never happen, as we make sure above that the value is present
    }
    return this;
  }

   /**
   * Get OR
   * @return OR
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public List<DiskWhereInput> getOR() {
        return OR.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_O_R)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<List<DiskWhereInput>> getOR_JsonNullable() {
    return OR;
  }
  
  @JsonProperty(JSON_PROPERTY_O_R)
  public void setOR_JsonNullable(JsonNullable<List<DiskWhereInput>> OR) {
    this.OR = OR;
  }

  public void setOR(List<DiskWhereInput> OR) {
    this.OR = JsonNullable.<List<DiskWhereInput>>of(OR);
  }


  public DiskWhereInput path(String path) {
    this.path = JsonNullable.<String>of(path);
    return this;
  }

   /**
   * Get path
   * @return path
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getPath() {
        return path.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_PATH)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getPath_JsonNullable() {
    return path;
  }
  
  @JsonProperty(JSON_PROPERTY_PATH)
  public void setPath_JsonNullable(JsonNullable<String> path) {
    this.path = path;
  }

  public void setPath(String path) {
    this.path = JsonNullable.<String>of(path);
  }


  public DiskWhereInput pathContains(String pathContains) {
    this.pathContains = JsonNullable.<String>of(pathContains);
    return this;
  }

   /**
   * Get pathContains
   * @return pathContains
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getPathContains() {
        return pathContains.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_PATH_CONTAINS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getPathContains_JsonNullable() {
    return pathContains;
  }
  
  @JsonProperty(JSON_PROPERTY_PATH_CONTAINS)
  public void setPathContains_JsonNullable(JsonNullable<String> pathContains) {
    this.pathContains = pathContains;
  }

  public void setPathContains(String pathContains) {
    this.pathContains = JsonNullable.<String>of(pathContains);
  }


  public DiskWhereInput pathEndsWith(String pathEndsWith) {
    this.pathEndsWith = JsonNullable.<String>of(pathEndsWith);
    return this;
  }

   /**
   * Get pathEndsWith
   * @return pathEndsWith
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getPathEndsWith() {
        return pathEndsWith.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_PATH_ENDS_WITH)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getPathEndsWith_JsonNullable() {
    return pathEndsWith;
  }
  
  @JsonProperty(JSON_PROPERTY_PATH_ENDS_WITH)
  public void setPathEndsWith_JsonNullable(JsonNullable<String> pathEndsWith) {
    this.pathEndsWith = pathEndsWith;
  }

  public void setPathEndsWith(String pathEndsWith) {
    this.pathEndsWith = JsonNullable.<String>of(pathEndsWith);
  }


  public DiskWhereInput pathGt(String pathGt) {
    this.pathGt = JsonNullable.<String>of(pathGt);
    return this;
  }

   /**
   * Get pathGt
   * @return pathGt
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getPathGt() {
        return pathGt.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_PATH_GT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getPathGt_JsonNullable() {
    return pathGt;
  }
  
  @JsonProperty(JSON_PROPERTY_PATH_GT)
  public void setPathGt_JsonNullable(JsonNullable<String> pathGt) {
    this.pathGt = pathGt;
  }

  public void setPathGt(String pathGt) {
    this.pathGt = JsonNullable.<String>of(pathGt);
  }


  public DiskWhereInput pathGte(String pathGte) {
    this.pathGte = JsonNullable.<String>of(pathGte);
    return this;
  }

   /**
   * Get pathGte
   * @return pathGte
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getPathGte() {
        return pathGte.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_PATH_GTE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getPathGte_JsonNullable() {
    return pathGte;
  }
  
  @JsonProperty(JSON_PROPERTY_PATH_GTE)
  public void setPathGte_JsonNullable(JsonNullable<String> pathGte) {
    this.pathGte = pathGte;
  }

  public void setPathGte(String pathGte) {
    this.pathGte = JsonNullable.<String>of(pathGte);
  }


  public DiskWhereInput pathIn(List<String> pathIn) {
    this.pathIn = JsonNullable.<List<String>>of(pathIn);
    return this;
  }

  public DiskWhereInput addPathInItem(String pathInItem) {
    if (this.pathIn == null || !this.pathIn.isPresent()) {
      this.pathIn = JsonNullable.<List<String>>of(new ArrayList<>());
    }
    try {
      this.pathIn.get().add(pathInItem);
    } catch (java.util.NoSuchElementException e) {
      // this can never happen, as we make sure above that the value is present
    }
    return this;
  }

   /**
   * Get pathIn
   * @return pathIn
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public List<String> getPathIn() {
        return pathIn.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_PATH_IN)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<List<String>> getPathIn_JsonNullable() {
    return pathIn;
  }
  
  @JsonProperty(JSON_PROPERTY_PATH_IN)
  public void setPathIn_JsonNullable(JsonNullable<List<String>> pathIn) {
    this.pathIn = pathIn;
  }

  public void setPathIn(List<String> pathIn) {
    this.pathIn = JsonNullable.<List<String>>of(pathIn);
  }


  public DiskWhereInput pathLt(String pathLt) {
    this.pathLt = JsonNullable.<String>of(pathLt);
    return this;
  }

   /**
   * Get pathLt
   * @return pathLt
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getPathLt() {
        return pathLt.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_PATH_LT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getPathLt_JsonNullable() {
    return pathLt;
  }
  
  @JsonProperty(JSON_PROPERTY_PATH_LT)
  public void setPathLt_JsonNullable(JsonNullable<String> pathLt) {
    this.pathLt = pathLt;
  }

  public void setPathLt(String pathLt) {
    this.pathLt = JsonNullable.<String>of(pathLt);
  }


  public DiskWhereInput pathLte(String pathLte) {
    this.pathLte = JsonNullable.<String>of(pathLte);
    return this;
  }

   /**
   * Get pathLte
   * @return pathLte
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getPathLte() {
        return pathLte.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_PATH_LTE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getPathLte_JsonNullable() {
    return pathLte;
  }
  
  @JsonProperty(JSON_PROPERTY_PATH_LTE)
  public void setPathLte_JsonNullable(JsonNullable<String> pathLte) {
    this.pathLte = pathLte;
  }

  public void setPathLte(String pathLte) {
    this.pathLte = JsonNullable.<String>of(pathLte);
  }


  public DiskWhereInput pathNot(String pathNot) {
    this.pathNot = JsonNullable.<String>of(pathNot);
    return this;
  }

   /**
   * Get pathNot
   * @return pathNot
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getPathNot() {
        return pathNot.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_PATH_NOT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getPathNot_JsonNullable() {
    return pathNot;
  }
  
  @JsonProperty(JSON_PROPERTY_PATH_NOT)
  public void setPathNot_JsonNullable(JsonNullable<String> pathNot) {
    this.pathNot = pathNot;
  }

  public void setPathNot(String pathNot) {
    this.pathNot = JsonNullable.<String>of(pathNot);
  }


  public DiskWhereInput pathNotContains(String pathNotContains) {
    this.pathNotContains = JsonNullable.<String>of(pathNotContains);
    return this;
  }

   /**
   * Get pathNotContains
   * @return pathNotContains
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getPathNotContains() {
        return pathNotContains.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_PATH_NOT_CONTAINS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getPathNotContains_JsonNullable() {
    return pathNotContains;
  }
  
  @JsonProperty(JSON_PROPERTY_PATH_NOT_CONTAINS)
  public void setPathNotContains_JsonNullable(JsonNullable<String> pathNotContains) {
    this.pathNotContains = pathNotContains;
  }

  public void setPathNotContains(String pathNotContains) {
    this.pathNotContains = JsonNullable.<String>of(pathNotContains);
  }


  public DiskWhereInput pathNotEndsWith(String pathNotEndsWith) {
    this.pathNotEndsWith = JsonNullable.<String>of(pathNotEndsWith);
    return this;
  }

   /**
   * Get pathNotEndsWith
   * @return pathNotEndsWith
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getPathNotEndsWith() {
        return pathNotEndsWith.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_PATH_NOT_ENDS_WITH)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getPathNotEndsWith_JsonNullable() {
    return pathNotEndsWith;
  }
  
  @JsonProperty(JSON_PROPERTY_PATH_NOT_ENDS_WITH)
  public void setPathNotEndsWith_JsonNullable(JsonNullable<String> pathNotEndsWith) {
    this.pathNotEndsWith = pathNotEndsWith;
  }

  public void setPathNotEndsWith(String pathNotEndsWith) {
    this.pathNotEndsWith = JsonNullable.<String>of(pathNotEndsWith);
  }


  public DiskWhereInput pathNotIn(List<String> pathNotIn) {
    this.pathNotIn = JsonNullable.<List<String>>of(pathNotIn);
    return this;
  }

  public DiskWhereInput addPathNotInItem(String pathNotInItem) {
    if (this.pathNotIn == null || !this.pathNotIn.isPresent()) {
      this.pathNotIn = JsonNullable.<List<String>>of(new ArrayList<>());
    }
    try {
      this.pathNotIn.get().add(pathNotInItem);
    } catch (java.util.NoSuchElementException e) {
      // this can never happen, as we make sure above that the value is present
    }
    return this;
  }

   /**
   * Get pathNotIn
   * @return pathNotIn
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public List<String> getPathNotIn() {
        return pathNotIn.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_PATH_NOT_IN)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<List<String>> getPathNotIn_JsonNullable() {
    return pathNotIn;
  }
  
  @JsonProperty(JSON_PROPERTY_PATH_NOT_IN)
  public void setPathNotIn_JsonNullable(JsonNullable<List<String>> pathNotIn) {
    this.pathNotIn = pathNotIn;
  }

  public void setPathNotIn(List<String> pathNotIn) {
    this.pathNotIn = JsonNullable.<List<String>>of(pathNotIn);
  }


  public DiskWhereInput pathNotStartsWith(String pathNotStartsWith) {
    this.pathNotStartsWith = JsonNullable.<String>of(pathNotStartsWith);
    return this;
  }

   /**
   * Get pathNotStartsWith
   * @return pathNotStartsWith
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getPathNotStartsWith() {
        return pathNotStartsWith.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_PATH_NOT_STARTS_WITH)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getPathNotStartsWith_JsonNullable() {
    return pathNotStartsWith;
  }
  
  @JsonProperty(JSON_PROPERTY_PATH_NOT_STARTS_WITH)
  public void setPathNotStartsWith_JsonNullable(JsonNullable<String> pathNotStartsWith) {
    this.pathNotStartsWith = pathNotStartsWith;
  }

  public void setPathNotStartsWith(String pathNotStartsWith) {
    this.pathNotStartsWith = JsonNullable.<String>of(pathNotStartsWith);
  }


  public DiskWhereInput pathStartsWith(String pathStartsWith) {
    this.pathStartsWith = JsonNullable.<String>of(pathStartsWith);
    return this;
  }

   /**
   * Get pathStartsWith
   * @return pathStartsWith
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getPathStartsWith() {
        return pathStartsWith.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_PATH_STARTS_WITH)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getPathStartsWith_JsonNullable() {
    return pathStartsWith;
  }
  
  @JsonProperty(JSON_PROPERTY_PATH_STARTS_WITH)
  public void setPathStartsWith_JsonNullable(JsonNullable<String> pathStartsWith) {
    this.pathStartsWith = pathStartsWith;
  }

  public void setPathStartsWith(String pathStartsWith) {
    this.pathStartsWith = JsonNullable.<String>of(pathStartsWith);
  }


  public DiskWhereInput persistentMemoryType(String persistentMemoryType) {
    this.persistentMemoryType = JsonNullable.<String>of(persistentMemoryType);
    return this;
  }

   /**
   * Get persistentMemoryType
   * @return persistentMemoryType
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getPersistentMemoryType() {
        return persistentMemoryType.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_PERSISTENT_MEMORY_TYPE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getPersistentMemoryType_JsonNullable() {
    return persistentMemoryType;
  }
  
  @JsonProperty(JSON_PROPERTY_PERSISTENT_MEMORY_TYPE)
  public void setPersistentMemoryType_JsonNullable(JsonNullable<String> persistentMemoryType) {
    this.persistentMemoryType = persistentMemoryType;
  }

  public void setPersistentMemoryType(String persistentMemoryType) {
    this.persistentMemoryType = JsonNullable.<String>of(persistentMemoryType);
  }


  public DiskWhereInput persistentMemoryTypeContains(String persistentMemoryTypeContains) {
    this.persistentMemoryTypeContains = JsonNullable.<String>of(persistentMemoryTypeContains);
    return this;
  }

   /**
   * Get persistentMemoryTypeContains
   * @return persistentMemoryTypeContains
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getPersistentMemoryTypeContains() {
        return persistentMemoryTypeContains.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_PERSISTENT_MEMORY_TYPE_CONTAINS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getPersistentMemoryTypeContains_JsonNullable() {
    return persistentMemoryTypeContains;
  }
  
  @JsonProperty(JSON_PROPERTY_PERSISTENT_MEMORY_TYPE_CONTAINS)
  public void setPersistentMemoryTypeContains_JsonNullable(JsonNullable<String> persistentMemoryTypeContains) {
    this.persistentMemoryTypeContains = persistentMemoryTypeContains;
  }

  public void setPersistentMemoryTypeContains(String persistentMemoryTypeContains) {
    this.persistentMemoryTypeContains = JsonNullable.<String>of(persistentMemoryTypeContains);
  }


  public DiskWhereInput persistentMemoryTypeEndsWith(String persistentMemoryTypeEndsWith) {
    this.persistentMemoryTypeEndsWith = JsonNullable.<String>of(persistentMemoryTypeEndsWith);
    return this;
  }

   /**
   * Get persistentMemoryTypeEndsWith
   * @return persistentMemoryTypeEndsWith
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getPersistentMemoryTypeEndsWith() {
        return persistentMemoryTypeEndsWith.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_PERSISTENT_MEMORY_TYPE_ENDS_WITH)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getPersistentMemoryTypeEndsWith_JsonNullable() {
    return persistentMemoryTypeEndsWith;
  }
  
  @JsonProperty(JSON_PROPERTY_PERSISTENT_MEMORY_TYPE_ENDS_WITH)
  public void setPersistentMemoryTypeEndsWith_JsonNullable(JsonNullable<String> persistentMemoryTypeEndsWith) {
    this.persistentMemoryTypeEndsWith = persistentMemoryTypeEndsWith;
  }

  public void setPersistentMemoryTypeEndsWith(String persistentMemoryTypeEndsWith) {
    this.persistentMemoryTypeEndsWith = JsonNullable.<String>of(persistentMemoryTypeEndsWith);
  }


  public DiskWhereInput persistentMemoryTypeGt(String persistentMemoryTypeGt) {
    this.persistentMemoryTypeGt = JsonNullable.<String>of(persistentMemoryTypeGt);
    return this;
  }

   /**
   * Get persistentMemoryTypeGt
   * @return persistentMemoryTypeGt
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getPersistentMemoryTypeGt() {
        return persistentMemoryTypeGt.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_PERSISTENT_MEMORY_TYPE_GT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getPersistentMemoryTypeGt_JsonNullable() {
    return persistentMemoryTypeGt;
  }
  
  @JsonProperty(JSON_PROPERTY_PERSISTENT_MEMORY_TYPE_GT)
  public void setPersistentMemoryTypeGt_JsonNullable(JsonNullable<String> persistentMemoryTypeGt) {
    this.persistentMemoryTypeGt = persistentMemoryTypeGt;
  }

  public void setPersistentMemoryTypeGt(String persistentMemoryTypeGt) {
    this.persistentMemoryTypeGt = JsonNullable.<String>of(persistentMemoryTypeGt);
  }


  public DiskWhereInput persistentMemoryTypeGte(String persistentMemoryTypeGte) {
    this.persistentMemoryTypeGte = JsonNullable.<String>of(persistentMemoryTypeGte);
    return this;
  }

   /**
   * Get persistentMemoryTypeGte
   * @return persistentMemoryTypeGte
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getPersistentMemoryTypeGte() {
        return persistentMemoryTypeGte.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_PERSISTENT_MEMORY_TYPE_GTE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getPersistentMemoryTypeGte_JsonNullable() {
    return persistentMemoryTypeGte;
  }
  
  @JsonProperty(JSON_PROPERTY_PERSISTENT_MEMORY_TYPE_GTE)
  public void setPersistentMemoryTypeGte_JsonNullable(JsonNullable<String> persistentMemoryTypeGte) {
    this.persistentMemoryTypeGte = persistentMemoryTypeGte;
  }

  public void setPersistentMemoryTypeGte(String persistentMemoryTypeGte) {
    this.persistentMemoryTypeGte = JsonNullable.<String>of(persistentMemoryTypeGte);
  }


  public DiskWhereInput persistentMemoryTypeIn(List<String> persistentMemoryTypeIn) {
    this.persistentMemoryTypeIn = JsonNullable.<List<String>>of(persistentMemoryTypeIn);
    return this;
  }

  public DiskWhereInput addPersistentMemoryTypeInItem(String persistentMemoryTypeInItem) {
    if (this.persistentMemoryTypeIn == null || !this.persistentMemoryTypeIn.isPresent()) {
      this.persistentMemoryTypeIn = JsonNullable.<List<String>>of(new ArrayList<>());
    }
    try {
      this.persistentMemoryTypeIn.get().add(persistentMemoryTypeInItem);
    } catch (java.util.NoSuchElementException e) {
      // this can never happen, as we make sure above that the value is present
    }
    return this;
  }

   /**
   * Get persistentMemoryTypeIn
   * @return persistentMemoryTypeIn
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public List<String> getPersistentMemoryTypeIn() {
        return persistentMemoryTypeIn.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_PERSISTENT_MEMORY_TYPE_IN)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<List<String>> getPersistentMemoryTypeIn_JsonNullable() {
    return persistentMemoryTypeIn;
  }
  
  @JsonProperty(JSON_PROPERTY_PERSISTENT_MEMORY_TYPE_IN)
  public void setPersistentMemoryTypeIn_JsonNullable(JsonNullable<List<String>> persistentMemoryTypeIn) {
    this.persistentMemoryTypeIn = persistentMemoryTypeIn;
  }

  public void setPersistentMemoryTypeIn(List<String> persistentMemoryTypeIn) {
    this.persistentMemoryTypeIn = JsonNullable.<List<String>>of(persistentMemoryTypeIn);
  }


  public DiskWhereInput persistentMemoryTypeLt(String persistentMemoryTypeLt) {
    this.persistentMemoryTypeLt = JsonNullable.<String>of(persistentMemoryTypeLt);
    return this;
  }

   /**
   * Get persistentMemoryTypeLt
   * @return persistentMemoryTypeLt
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getPersistentMemoryTypeLt() {
        return persistentMemoryTypeLt.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_PERSISTENT_MEMORY_TYPE_LT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getPersistentMemoryTypeLt_JsonNullable() {
    return persistentMemoryTypeLt;
  }
  
  @JsonProperty(JSON_PROPERTY_PERSISTENT_MEMORY_TYPE_LT)
  public void setPersistentMemoryTypeLt_JsonNullable(JsonNullable<String> persistentMemoryTypeLt) {
    this.persistentMemoryTypeLt = persistentMemoryTypeLt;
  }

  public void setPersistentMemoryTypeLt(String persistentMemoryTypeLt) {
    this.persistentMemoryTypeLt = JsonNullable.<String>of(persistentMemoryTypeLt);
  }


  public DiskWhereInput persistentMemoryTypeLte(String persistentMemoryTypeLte) {
    this.persistentMemoryTypeLte = JsonNullable.<String>of(persistentMemoryTypeLte);
    return this;
  }

   /**
   * Get persistentMemoryTypeLte
   * @return persistentMemoryTypeLte
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getPersistentMemoryTypeLte() {
        return persistentMemoryTypeLte.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_PERSISTENT_MEMORY_TYPE_LTE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getPersistentMemoryTypeLte_JsonNullable() {
    return persistentMemoryTypeLte;
  }
  
  @JsonProperty(JSON_PROPERTY_PERSISTENT_MEMORY_TYPE_LTE)
  public void setPersistentMemoryTypeLte_JsonNullable(JsonNullable<String> persistentMemoryTypeLte) {
    this.persistentMemoryTypeLte = persistentMemoryTypeLte;
  }

  public void setPersistentMemoryTypeLte(String persistentMemoryTypeLte) {
    this.persistentMemoryTypeLte = JsonNullable.<String>of(persistentMemoryTypeLte);
  }


  public DiskWhereInput persistentMemoryTypeNot(String persistentMemoryTypeNot) {
    this.persistentMemoryTypeNot = JsonNullable.<String>of(persistentMemoryTypeNot);
    return this;
  }

   /**
   * Get persistentMemoryTypeNot
   * @return persistentMemoryTypeNot
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getPersistentMemoryTypeNot() {
        return persistentMemoryTypeNot.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_PERSISTENT_MEMORY_TYPE_NOT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getPersistentMemoryTypeNot_JsonNullable() {
    return persistentMemoryTypeNot;
  }
  
  @JsonProperty(JSON_PROPERTY_PERSISTENT_MEMORY_TYPE_NOT)
  public void setPersistentMemoryTypeNot_JsonNullable(JsonNullable<String> persistentMemoryTypeNot) {
    this.persistentMemoryTypeNot = persistentMemoryTypeNot;
  }

  public void setPersistentMemoryTypeNot(String persistentMemoryTypeNot) {
    this.persistentMemoryTypeNot = JsonNullable.<String>of(persistentMemoryTypeNot);
  }


  public DiskWhereInput persistentMemoryTypeNotContains(String persistentMemoryTypeNotContains) {
    this.persistentMemoryTypeNotContains = JsonNullable.<String>of(persistentMemoryTypeNotContains);
    return this;
  }

   /**
   * Get persistentMemoryTypeNotContains
   * @return persistentMemoryTypeNotContains
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getPersistentMemoryTypeNotContains() {
        return persistentMemoryTypeNotContains.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_PERSISTENT_MEMORY_TYPE_NOT_CONTAINS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getPersistentMemoryTypeNotContains_JsonNullable() {
    return persistentMemoryTypeNotContains;
  }
  
  @JsonProperty(JSON_PROPERTY_PERSISTENT_MEMORY_TYPE_NOT_CONTAINS)
  public void setPersistentMemoryTypeNotContains_JsonNullable(JsonNullable<String> persistentMemoryTypeNotContains) {
    this.persistentMemoryTypeNotContains = persistentMemoryTypeNotContains;
  }

  public void setPersistentMemoryTypeNotContains(String persistentMemoryTypeNotContains) {
    this.persistentMemoryTypeNotContains = JsonNullable.<String>of(persistentMemoryTypeNotContains);
  }


  public DiskWhereInput persistentMemoryTypeNotEndsWith(String persistentMemoryTypeNotEndsWith) {
    this.persistentMemoryTypeNotEndsWith = JsonNullable.<String>of(persistentMemoryTypeNotEndsWith);
    return this;
  }

   /**
   * Get persistentMemoryTypeNotEndsWith
   * @return persistentMemoryTypeNotEndsWith
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getPersistentMemoryTypeNotEndsWith() {
        return persistentMemoryTypeNotEndsWith.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_PERSISTENT_MEMORY_TYPE_NOT_ENDS_WITH)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getPersistentMemoryTypeNotEndsWith_JsonNullable() {
    return persistentMemoryTypeNotEndsWith;
  }
  
  @JsonProperty(JSON_PROPERTY_PERSISTENT_MEMORY_TYPE_NOT_ENDS_WITH)
  public void setPersistentMemoryTypeNotEndsWith_JsonNullable(JsonNullable<String> persistentMemoryTypeNotEndsWith) {
    this.persistentMemoryTypeNotEndsWith = persistentMemoryTypeNotEndsWith;
  }

  public void setPersistentMemoryTypeNotEndsWith(String persistentMemoryTypeNotEndsWith) {
    this.persistentMemoryTypeNotEndsWith = JsonNullable.<String>of(persistentMemoryTypeNotEndsWith);
  }


  public DiskWhereInput persistentMemoryTypeNotIn(List<String> persistentMemoryTypeNotIn) {
    this.persistentMemoryTypeNotIn = JsonNullable.<List<String>>of(persistentMemoryTypeNotIn);
    return this;
  }

  public DiskWhereInput addPersistentMemoryTypeNotInItem(String persistentMemoryTypeNotInItem) {
    if (this.persistentMemoryTypeNotIn == null || !this.persistentMemoryTypeNotIn.isPresent()) {
      this.persistentMemoryTypeNotIn = JsonNullable.<List<String>>of(new ArrayList<>());
    }
    try {
      this.persistentMemoryTypeNotIn.get().add(persistentMemoryTypeNotInItem);
    } catch (java.util.NoSuchElementException e) {
      // this can never happen, as we make sure above that the value is present
    }
    return this;
  }

   /**
   * Get persistentMemoryTypeNotIn
   * @return persistentMemoryTypeNotIn
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public List<String> getPersistentMemoryTypeNotIn() {
        return persistentMemoryTypeNotIn.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_PERSISTENT_MEMORY_TYPE_NOT_IN)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<List<String>> getPersistentMemoryTypeNotIn_JsonNullable() {
    return persistentMemoryTypeNotIn;
  }
  
  @JsonProperty(JSON_PROPERTY_PERSISTENT_MEMORY_TYPE_NOT_IN)
  public void setPersistentMemoryTypeNotIn_JsonNullable(JsonNullable<List<String>> persistentMemoryTypeNotIn) {
    this.persistentMemoryTypeNotIn = persistentMemoryTypeNotIn;
  }

  public void setPersistentMemoryTypeNotIn(List<String> persistentMemoryTypeNotIn) {
    this.persistentMemoryTypeNotIn = JsonNullable.<List<String>>of(persistentMemoryTypeNotIn);
  }


  public DiskWhereInput persistentMemoryTypeNotStartsWith(String persistentMemoryTypeNotStartsWith) {
    this.persistentMemoryTypeNotStartsWith = JsonNullable.<String>of(persistentMemoryTypeNotStartsWith);
    return this;
  }

   /**
   * Get persistentMemoryTypeNotStartsWith
   * @return persistentMemoryTypeNotStartsWith
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getPersistentMemoryTypeNotStartsWith() {
        return persistentMemoryTypeNotStartsWith.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_PERSISTENT_MEMORY_TYPE_NOT_STARTS_WITH)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getPersistentMemoryTypeNotStartsWith_JsonNullable() {
    return persistentMemoryTypeNotStartsWith;
  }
  
  @JsonProperty(JSON_PROPERTY_PERSISTENT_MEMORY_TYPE_NOT_STARTS_WITH)
  public void setPersistentMemoryTypeNotStartsWith_JsonNullable(JsonNullable<String> persistentMemoryTypeNotStartsWith) {
    this.persistentMemoryTypeNotStartsWith = persistentMemoryTypeNotStartsWith;
  }

  public void setPersistentMemoryTypeNotStartsWith(String persistentMemoryTypeNotStartsWith) {
    this.persistentMemoryTypeNotStartsWith = JsonNullable.<String>of(persistentMemoryTypeNotStartsWith);
  }


  public DiskWhereInput persistentMemoryTypeStartsWith(String persistentMemoryTypeStartsWith) {
    this.persistentMemoryTypeStartsWith = JsonNullable.<String>of(persistentMemoryTypeStartsWith);
    return this;
  }

   /**
   * Get persistentMemoryTypeStartsWith
   * @return persistentMemoryTypeStartsWith
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getPersistentMemoryTypeStartsWith() {
        return persistentMemoryTypeStartsWith.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_PERSISTENT_MEMORY_TYPE_STARTS_WITH)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getPersistentMemoryTypeStartsWith_JsonNullable() {
    return persistentMemoryTypeStartsWith;
  }
  
  @JsonProperty(JSON_PROPERTY_PERSISTENT_MEMORY_TYPE_STARTS_WITH)
  public void setPersistentMemoryTypeStartsWith_JsonNullable(JsonNullable<String> persistentMemoryTypeStartsWith) {
    this.persistentMemoryTypeStartsWith = persistentMemoryTypeStartsWith;
  }

  public void setPersistentMemoryTypeStartsWith(String persistentMemoryTypeStartsWith) {
    this.persistentMemoryTypeStartsWith = JsonNullable.<String>of(persistentMemoryTypeStartsWith);
  }


  public DiskWhereInput physicalSlotOnBrick(Double physicalSlotOnBrick) {
    this.physicalSlotOnBrick = JsonNullable.<Double>of(physicalSlotOnBrick);
    return this;
  }

   /**
   * Get physicalSlotOnBrick
   * @return physicalSlotOnBrick
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public Double getPhysicalSlotOnBrick() {
        return physicalSlotOnBrick.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_PHYSICAL_SLOT_ON_BRICK)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<Double> getPhysicalSlotOnBrick_JsonNullable() {
    return physicalSlotOnBrick;
  }
  
  @JsonProperty(JSON_PROPERTY_PHYSICAL_SLOT_ON_BRICK)
  public void setPhysicalSlotOnBrick_JsonNullable(JsonNullable<Double> physicalSlotOnBrick) {
    this.physicalSlotOnBrick = physicalSlotOnBrick;
  }

  public void setPhysicalSlotOnBrick(Double physicalSlotOnBrick) {
    this.physicalSlotOnBrick = JsonNullable.<Double>of(physicalSlotOnBrick);
  }


  public DiskWhereInput physicalSlotOnBrickGt(Double physicalSlotOnBrickGt) {
    this.physicalSlotOnBrickGt = JsonNullable.<Double>of(physicalSlotOnBrickGt);
    return this;
  }

   /**
   * Get physicalSlotOnBrickGt
   * @return physicalSlotOnBrickGt
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public Double getPhysicalSlotOnBrickGt() {
        return physicalSlotOnBrickGt.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_PHYSICAL_SLOT_ON_BRICK_GT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<Double> getPhysicalSlotOnBrickGt_JsonNullable() {
    return physicalSlotOnBrickGt;
  }
  
  @JsonProperty(JSON_PROPERTY_PHYSICAL_SLOT_ON_BRICK_GT)
  public void setPhysicalSlotOnBrickGt_JsonNullable(JsonNullable<Double> physicalSlotOnBrickGt) {
    this.physicalSlotOnBrickGt = physicalSlotOnBrickGt;
  }

  public void setPhysicalSlotOnBrickGt(Double physicalSlotOnBrickGt) {
    this.physicalSlotOnBrickGt = JsonNullable.<Double>of(physicalSlotOnBrickGt);
  }


  public DiskWhereInput physicalSlotOnBrickGte(Double physicalSlotOnBrickGte) {
    this.physicalSlotOnBrickGte = JsonNullable.<Double>of(physicalSlotOnBrickGte);
    return this;
  }

   /**
   * Get physicalSlotOnBrickGte
   * @return physicalSlotOnBrickGte
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public Double getPhysicalSlotOnBrickGte() {
        return physicalSlotOnBrickGte.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_PHYSICAL_SLOT_ON_BRICK_GTE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<Double> getPhysicalSlotOnBrickGte_JsonNullable() {
    return physicalSlotOnBrickGte;
  }
  
  @JsonProperty(JSON_PROPERTY_PHYSICAL_SLOT_ON_BRICK_GTE)
  public void setPhysicalSlotOnBrickGte_JsonNullable(JsonNullable<Double> physicalSlotOnBrickGte) {
    this.physicalSlotOnBrickGte = physicalSlotOnBrickGte;
  }

  public void setPhysicalSlotOnBrickGte(Double physicalSlotOnBrickGte) {
    this.physicalSlotOnBrickGte = JsonNullable.<Double>of(physicalSlotOnBrickGte);
  }


  public DiskWhereInput physicalSlotOnBrickIn(List<Double> physicalSlotOnBrickIn) {
    this.physicalSlotOnBrickIn = JsonNullable.<List<Double>>of(physicalSlotOnBrickIn);
    return this;
  }

  public DiskWhereInput addPhysicalSlotOnBrickInItem(Double physicalSlotOnBrickInItem) {
    if (this.physicalSlotOnBrickIn == null || !this.physicalSlotOnBrickIn.isPresent()) {
      this.physicalSlotOnBrickIn = JsonNullable.<List<Double>>of(new ArrayList<>());
    }
    try {
      this.physicalSlotOnBrickIn.get().add(physicalSlotOnBrickInItem);
    } catch (java.util.NoSuchElementException e) {
      // this can never happen, as we make sure above that the value is present
    }
    return this;
  }

   /**
   * Get physicalSlotOnBrickIn
   * @return physicalSlotOnBrickIn
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public List<Double> getPhysicalSlotOnBrickIn() {
        return physicalSlotOnBrickIn.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_PHYSICAL_SLOT_ON_BRICK_IN)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<List<Double>> getPhysicalSlotOnBrickIn_JsonNullable() {
    return physicalSlotOnBrickIn;
  }
  
  @JsonProperty(JSON_PROPERTY_PHYSICAL_SLOT_ON_BRICK_IN)
  public void setPhysicalSlotOnBrickIn_JsonNullable(JsonNullable<List<Double>> physicalSlotOnBrickIn) {
    this.physicalSlotOnBrickIn = physicalSlotOnBrickIn;
  }

  public void setPhysicalSlotOnBrickIn(List<Double> physicalSlotOnBrickIn) {
    this.physicalSlotOnBrickIn = JsonNullable.<List<Double>>of(physicalSlotOnBrickIn);
  }


  public DiskWhereInput physicalSlotOnBrickLt(Double physicalSlotOnBrickLt) {
    this.physicalSlotOnBrickLt = JsonNullable.<Double>of(physicalSlotOnBrickLt);
    return this;
  }

   /**
   * Get physicalSlotOnBrickLt
   * @return physicalSlotOnBrickLt
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public Double getPhysicalSlotOnBrickLt() {
        return physicalSlotOnBrickLt.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_PHYSICAL_SLOT_ON_BRICK_LT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<Double> getPhysicalSlotOnBrickLt_JsonNullable() {
    return physicalSlotOnBrickLt;
  }
  
  @JsonProperty(JSON_PROPERTY_PHYSICAL_SLOT_ON_BRICK_LT)
  public void setPhysicalSlotOnBrickLt_JsonNullable(JsonNullable<Double> physicalSlotOnBrickLt) {
    this.physicalSlotOnBrickLt = physicalSlotOnBrickLt;
  }

  public void setPhysicalSlotOnBrickLt(Double physicalSlotOnBrickLt) {
    this.physicalSlotOnBrickLt = JsonNullable.<Double>of(physicalSlotOnBrickLt);
  }


  public DiskWhereInput physicalSlotOnBrickLte(Double physicalSlotOnBrickLte) {
    this.physicalSlotOnBrickLte = JsonNullable.<Double>of(physicalSlotOnBrickLte);
    return this;
  }

   /**
   * Get physicalSlotOnBrickLte
   * @return physicalSlotOnBrickLte
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public Double getPhysicalSlotOnBrickLte() {
        return physicalSlotOnBrickLte.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_PHYSICAL_SLOT_ON_BRICK_LTE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<Double> getPhysicalSlotOnBrickLte_JsonNullable() {
    return physicalSlotOnBrickLte;
  }
  
  @JsonProperty(JSON_PROPERTY_PHYSICAL_SLOT_ON_BRICK_LTE)
  public void setPhysicalSlotOnBrickLte_JsonNullable(JsonNullable<Double> physicalSlotOnBrickLte) {
    this.physicalSlotOnBrickLte = physicalSlotOnBrickLte;
  }

  public void setPhysicalSlotOnBrickLte(Double physicalSlotOnBrickLte) {
    this.physicalSlotOnBrickLte = JsonNullable.<Double>of(physicalSlotOnBrickLte);
  }


  public DiskWhereInput physicalSlotOnBrickNot(Double physicalSlotOnBrickNot) {
    this.physicalSlotOnBrickNot = JsonNullable.<Double>of(physicalSlotOnBrickNot);
    return this;
  }

   /**
   * Get physicalSlotOnBrickNot
   * @return physicalSlotOnBrickNot
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public Double getPhysicalSlotOnBrickNot() {
        return physicalSlotOnBrickNot.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_PHYSICAL_SLOT_ON_BRICK_NOT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<Double> getPhysicalSlotOnBrickNot_JsonNullable() {
    return physicalSlotOnBrickNot;
  }
  
  @JsonProperty(JSON_PROPERTY_PHYSICAL_SLOT_ON_BRICK_NOT)
  public void setPhysicalSlotOnBrickNot_JsonNullable(JsonNullable<Double> physicalSlotOnBrickNot) {
    this.physicalSlotOnBrickNot = physicalSlotOnBrickNot;
  }

  public void setPhysicalSlotOnBrickNot(Double physicalSlotOnBrickNot) {
    this.physicalSlotOnBrickNot = JsonNullable.<Double>of(physicalSlotOnBrickNot);
  }


  public DiskWhereInput physicalSlotOnBrickNotIn(List<Double> physicalSlotOnBrickNotIn) {
    this.physicalSlotOnBrickNotIn = JsonNullable.<List<Double>>of(physicalSlotOnBrickNotIn);
    return this;
  }

  public DiskWhereInput addPhysicalSlotOnBrickNotInItem(Double physicalSlotOnBrickNotInItem) {
    if (this.physicalSlotOnBrickNotIn == null || !this.physicalSlotOnBrickNotIn.isPresent()) {
      this.physicalSlotOnBrickNotIn = JsonNullable.<List<Double>>of(new ArrayList<>());
    }
    try {
      this.physicalSlotOnBrickNotIn.get().add(physicalSlotOnBrickNotInItem);
    } catch (java.util.NoSuchElementException e) {
      // this can never happen, as we make sure above that the value is present
    }
    return this;
  }

   /**
   * Get physicalSlotOnBrickNotIn
   * @return physicalSlotOnBrickNotIn
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public List<Double> getPhysicalSlotOnBrickNotIn() {
        return physicalSlotOnBrickNotIn.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_PHYSICAL_SLOT_ON_BRICK_NOT_IN)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<List<Double>> getPhysicalSlotOnBrickNotIn_JsonNullable() {
    return physicalSlotOnBrickNotIn;
  }
  
  @JsonProperty(JSON_PROPERTY_PHYSICAL_SLOT_ON_BRICK_NOT_IN)
  public void setPhysicalSlotOnBrickNotIn_JsonNullable(JsonNullable<List<Double>> physicalSlotOnBrickNotIn) {
    this.physicalSlotOnBrickNotIn = physicalSlotOnBrickNotIn;
  }

  public void setPhysicalSlotOnBrickNotIn(List<Double> physicalSlotOnBrickNotIn) {
    this.physicalSlotOnBrickNotIn = JsonNullable.<List<Double>>of(physicalSlotOnBrickNotIn);
  }


  public DiskWhereInput pmemDimmsEvery(PmemDimmWhereInput pmemDimmsEvery) {
    this.pmemDimmsEvery = JsonNullable.<PmemDimmWhereInput>of(pmemDimmsEvery);
    return this;
  }

   /**
   * Get pmemDimmsEvery
   * @return pmemDimmsEvery
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public PmemDimmWhereInput getPmemDimmsEvery() {
        return pmemDimmsEvery.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_PMEM_DIMMS_EVERY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<PmemDimmWhereInput> getPmemDimmsEvery_JsonNullable() {
    return pmemDimmsEvery;
  }
  
  @JsonProperty(JSON_PROPERTY_PMEM_DIMMS_EVERY)
  public void setPmemDimmsEvery_JsonNullable(JsonNullable<PmemDimmWhereInput> pmemDimmsEvery) {
    this.pmemDimmsEvery = pmemDimmsEvery;
  }

  public void setPmemDimmsEvery(PmemDimmWhereInput pmemDimmsEvery) {
    this.pmemDimmsEvery = JsonNullable.<PmemDimmWhereInput>of(pmemDimmsEvery);
  }


  public DiskWhereInput pmemDimmsNone(PmemDimmWhereInput pmemDimmsNone) {
    this.pmemDimmsNone = JsonNullable.<PmemDimmWhereInput>of(pmemDimmsNone);
    return this;
  }

   /**
   * Get pmemDimmsNone
   * @return pmemDimmsNone
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public PmemDimmWhereInput getPmemDimmsNone() {
        return pmemDimmsNone.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_PMEM_DIMMS_NONE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<PmemDimmWhereInput> getPmemDimmsNone_JsonNullable() {
    return pmemDimmsNone;
  }
  
  @JsonProperty(JSON_PROPERTY_PMEM_DIMMS_NONE)
  public void setPmemDimmsNone_JsonNullable(JsonNullable<PmemDimmWhereInput> pmemDimmsNone) {
    this.pmemDimmsNone = pmemDimmsNone;
  }

  public void setPmemDimmsNone(PmemDimmWhereInput pmemDimmsNone) {
    this.pmemDimmsNone = JsonNullable.<PmemDimmWhereInput>of(pmemDimmsNone);
  }


  public DiskWhereInput pmemDimmsSome(PmemDimmWhereInput pmemDimmsSome) {
    this.pmemDimmsSome = JsonNullable.<PmemDimmWhereInput>of(pmemDimmsSome);
    return this;
  }

   /**
   * Get pmemDimmsSome
   * @return pmemDimmsSome
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public PmemDimmWhereInput getPmemDimmsSome() {
        return pmemDimmsSome.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_PMEM_DIMMS_SOME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<PmemDimmWhereInput> getPmemDimmsSome_JsonNullable() {
    return pmemDimmsSome;
  }
  
  @JsonProperty(JSON_PROPERTY_PMEM_DIMMS_SOME)
  public void setPmemDimmsSome_JsonNullable(JsonNullable<PmemDimmWhereInput> pmemDimmsSome) {
    this.pmemDimmsSome = pmemDimmsSome;
  }

  public void setPmemDimmsSome(PmemDimmWhereInput pmemDimmsSome) {
    this.pmemDimmsSome = JsonNullable.<PmemDimmWhereInput>of(pmemDimmsSome);
  }


  public DiskWhereInput recommendedUsage(DiskUsage recommendedUsage) {
    this.recommendedUsage = JsonNullable.<DiskUsage>of(recommendedUsage);
    return this;
  }

   /**
   * Get recommendedUsage
   * @return recommendedUsage
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public DiskUsage getRecommendedUsage() {
        return recommendedUsage.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_RECOMMENDED_USAGE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<DiskUsage> getRecommendedUsage_JsonNullable() {
    return recommendedUsage;
  }
  
  @JsonProperty(JSON_PROPERTY_RECOMMENDED_USAGE)
  public void setRecommendedUsage_JsonNullable(JsonNullable<DiskUsage> recommendedUsage) {
    this.recommendedUsage = recommendedUsage;
  }

  public void setRecommendedUsage(DiskUsage recommendedUsage) {
    this.recommendedUsage = JsonNullable.<DiskUsage>of(recommendedUsage);
  }


  public DiskWhereInput recommendedUsageIn(List<DiskUsage> recommendedUsageIn) {
    this.recommendedUsageIn = JsonNullable.<List<DiskUsage>>of(recommendedUsageIn);
    return this;
  }

  public DiskWhereInput addRecommendedUsageInItem(DiskUsage recommendedUsageInItem) {
    if (this.recommendedUsageIn == null || !this.recommendedUsageIn.isPresent()) {
      this.recommendedUsageIn = JsonNullable.<List<DiskUsage>>of(new ArrayList<>());
    }
    try {
      this.recommendedUsageIn.get().add(recommendedUsageInItem);
    } catch (java.util.NoSuchElementException e) {
      // this can never happen, as we make sure above that the value is present
    }
    return this;
  }

   /**
   * Get recommendedUsageIn
   * @return recommendedUsageIn
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public List<DiskUsage> getRecommendedUsageIn() {
        return recommendedUsageIn.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_RECOMMENDED_USAGE_IN)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<List<DiskUsage>> getRecommendedUsageIn_JsonNullable() {
    return recommendedUsageIn;
  }
  
  @JsonProperty(JSON_PROPERTY_RECOMMENDED_USAGE_IN)
  public void setRecommendedUsageIn_JsonNullable(JsonNullable<List<DiskUsage>> recommendedUsageIn) {
    this.recommendedUsageIn = recommendedUsageIn;
  }

  public void setRecommendedUsageIn(List<DiskUsage> recommendedUsageIn) {
    this.recommendedUsageIn = JsonNullable.<List<DiskUsage>>of(recommendedUsageIn);
  }


  public DiskWhereInput recommendedUsageNot(DiskUsage recommendedUsageNot) {
    this.recommendedUsageNot = JsonNullable.<DiskUsage>of(recommendedUsageNot);
    return this;
  }

   /**
   * Get recommendedUsageNot
   * @return recommendedUsageNot
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public DiskUsage getRecommendedUsageNot() {
        return recommendedUsageNot.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_RECOMMENDED_USAGE_NOT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<DiskUsage> getRecommendedUsageNot_JsonNullable() {
    return recommendedUsageNot;
  }
  
  @JsonProperty(JSON_PROPERTY_RECOMMENDED_USAGE_NOT)
  public void setRecommendedUsageNot_JsonNullable(JsonNullable<DiskUsage> recommendedUsageNot) {
    this.recommendedUsageNot = recommendedUsageNot;
  }

  public void setRecommendedUsageNot(DiskUsage recommendedUsageNot) {
    this.recommendedUsageNot = JsonNullable.<DiskUsage>of(recommendedUsageNot);
  }


  public DiskWhereInput recommendedUsageNotIn(List<DiskUsage> recommendedUsageNotIn) {
    this.recommendedUsageNotIn = JsonNullable.<List<DiskUsage>>of(recommendedUsageNotIn);
    return this;
  }

  public DiskWhereInput addRecommendedUsageNotInItem(DiskUsage recommendedUsageNotInItem) {
    if (this.recommendedUsageNotIn == null || !this.recommendedUsageNotIn.isPresent()) {
      this.recommendedUsageNotIn = JsonNullable.<List<DiskUsage>>of(new ArrayList<>());
    }
    try {
      this.recommendedUsageNotIn.get().add(recommendedUsageNotInItem);
    } catch (java.util.NoSuchElementException e) {
      // this can never happen, as we make sure above that the value is present
    }
    return this;
  }

   /**
   * Get recommendedUsageNotIn
   * @return recommendedUsageNotIn
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public List<DiskUsage> getRecommendedUsageNotIn() {
        return recommendedUsageNotIn.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_RECOMMENDED_USAGE_NOT_IN)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<List<DiskUsage>> getRecommendedUsageNotIn_JsonNullable() {
    return recommendedUsageNotIn;
  }
  
  @JsonProperty(JSON_PROPERTY_RECOMMENDED_USAGE_NOT_IN)
  public void setRecommendedUsageNotIn_JsonNullable(JsonNullable<List<DiskUsage>> recommendedUsageNotIn) {
    this.recommendedUsageNotIn = recommendedUsageNotIn;
  }

  public void setRecommendedUsageNotIn(List<DiskUsage> recommendedUsageNotIn) {
    this.recommendedUsageNotIn = JsonNullable.<List<DiskUsage>>of(recommendedUsageNotIn);
  }


  public DiskWhereInput remainingLifePercent(Double remainingLifePercent) {
    this.remainingLifePercent = JsonNullable.<Double>of(remainingLifePercent);
    return this;
  }

   /**
   * Get remainingLifePercent
   * @return remainingLifePercent
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public Double getRemainingLifePercent() {
        return remainingLifePercent.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_REMAINING_LIFE_PERCENT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<Double> getRemainingLifePercent_JsonNullable() {
    return remainingLifePercent;
  }
  
  @JsonProperty(JSON_PROPERTY_REMAINING_LIFE_PERCENT)
  public void setRemainingLifePercent_JsonNullable(JsonNullable<Double> remainingLifePercent) {
    this.remainingLifePercent = remainingLifePercent;
  }

  public void setRemainingLifePercent(Double remainingLifePercent) {
    this.remainingLifePercent = JsonNullable.<Double>of(remainingLifePercent);
  }


  public DiskWhereInput remainingLifePercentGt(Double remainingLifePercentGt) {
    this.remainingLifePercentGt = JsonNullable.<Double>of(remainingLifePercentGt);
    return this;
  }

   /**
   * Get remainingLifePercentGt
   * @return remainingLifePercentGt
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public Double getRemainingLifePercentGt() {
        return remainingLifePercentGt.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_REMAINING_LIFE_PERCENT_GT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<Double> getRemainingLifePercentGt_JsonNullable() {
    return remainingLifePercentGt;
  }
  
  @JsonProperty(JSON_PROPERTY_REMAINING_LIFE_PERCENT_GT)
  public void setRemainingLifePercentGt_JsonNullable(JsonNullable<Double> remainingLifePercentGt) {
    this.remainingLifePercentGt = remainingLifePercentGt;
  }

  public void setRemainingLifePercentGt(Double remainingLifePercentGt) {
    this.remainingLifePercentGt = JsonNullable.<Double>of(remainingLifePercentGt);
  }


  public DiskWhereInput remainingLifePercentGte(Double remainingLifePercentGte) {
    this.remainingLifePercentGte = JsonNullable.<Double>of(remainingLifePercentGte);
    return this;
  }

   /**
   * Get remainingLifePercentGte
   * @return remainingLifePercentGte
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public Double getRemainingLifePercentGte() {
        return remainingLifePercentGte.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_REMAINING_LIFE_PERCENT_GTE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<Double> getRemainingLifePercentGte_JsonNullable() {
    return remainingLifePercentGte;
  }
  
  @JsonProperty(JSON_PROPERTY_REMAINING_LIFE_PERCENT_GTE)
  public void setRemainingLifePercentGte_JsonNullable(JsonNullable<Double> remainingLifePercentGte) {
    this.remainingLifePercentGte = remainingLifePercentGte;
  }

  public void setRemainingLifePercentGte(Double remainingLifePercentGte) {
    this.remainingLifePercentGte = JsonNullable.<Double>of(remainingLifePercentGte);
  }


  public DiskWhereInput remainingLifePercentIn(List<Double> remainingLifePercentIn) {
    this.remainingLifePercentIn = JsonNullable.<List<Double>>of(remainingLifePercentIn);
    return this;
  }

  public DiskWhereInput addRemainingLifePercentInItem(Double remainingLifePercentInItem) {
    if (this.remainingLifePercentIn == null || !this.remainingLifePercentIn.isPresent()) {
      this.remainingLifePercentIn = JsonNullable.<List<Double>>of(new ArrayList<>());
    }
    try {
      this.remainingLifePercentIn.get().add(remainingLifePercentInItem);
    } catch (java.util.NoSuchElementException e) {
      // this can never happen, as we make sure above that the value is present
    }
    return this;
  }

   /**
   * Get remainingLifePercentIn
   * @return remainingLifePercentIn
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public List<Double> getRemainingLifePercentIn() {
        return remainingLifePercentIn.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_REMAINING_LIFE_PERCENT_IN)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<List<Double>> getRemainingLifePercentIn_JsonNullable() {
    return remainingLifePercentIn;
  }
  
  @JsonProperty(JSON_PROPERTY_REMAINING_LIFE_PERCENT_IN)
  public void setRemainingLifePercentIn_JsonNullable(JsonNullable<List<Double>> remainingLifePercentIn) {
    this.remainingLifePercentIn = remainingLifePercentIn;
  }

  public void setRemainingLifePercentIn(List<Double> remainingLifePercentIn) {
    this.remainingLifePercentIn = JsonNullable.<List<Double>>of(remainingLifePercentIn);
  }


  public DiskWhereInput remainingLifePercentLt(Double remainingLifePercentLt) {
    this.remainingLifePercentLt = JsonNullable.<Double>of(remainingLifePercentLt);
    return this;
  }

   /**
   * Get remainingLifePercentLt
   * @return remainingLifePercentLt
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public Double getRemainingLifePercentLt() {
        return remainingLifePercentLt.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_REMAINING_LIFE_PERCENT_LT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<Double> getRemainingLifePercentLt_JsonNullable() {
    return remainingLifePercentLt;
  }
  
  @JsonProperty(JSON_PROPERTY_REMAINING_LIFE_PERCENT_LT)
  public void setRemainingLifePercentLt_JsonNullable(JsonNullable<Double> remainingLifePercentLt) {
    this.remainingLifePercentLt = remainingLifePercentLt;
  }

  public void setRemainingLifePercentLt(Double remainingLifePercentLt) {
    this.remainingLifePercentLt = JsonNullable.<Double>of(remainingLifePercentLt);
  }


  public DiskWhereInput remainingLifePercentLte(Double remainingLifePercentLte) {
    this.remainingLifePercentLte = JsonNullable.<Double>of(remainingLifePercentLte);
    return this;
  }

   /**
   * Get remainingLifePercentLte
   * @return remainingLifePercentLte
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public Double getRemainingLifePercentLte() {
        return remainingLifePercentLte.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_REMAINING_LIFE_PERCENT_LTE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<Double> getRemainingLifePercentLte_JsonNullable() {
    return remainingLifePercentLte;
  }
  
  @JsonProperty(JSON_PROPERTY_REMAINING_LIFE_PERCENT_LTE)
  public void setRemainingLifePercentLte_JsonNullable(JsonNullable<Double> remainingLifePercentLte) {
    this.remainingLifePercentLte = remainingLifePercentLte;
  }

  public void setRemainingLifePercentLte(Double remainingLifePercentLte) {
    this.remainingLifePercentLte = JsonNullable.<Double>of(remainingLifePercentLte);
  }


  public DiskWhereInput remainingLifePercentNot(Double remainingLifePercentNot) {
    this.remainingLifePercentNot = JsonNullable.<Double>of(remainingLifePercentNot);
    return this;
  }

   /**
   * Get remainingLifePercentNot
   * @return remainingLifePercentNot
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public Double getRemainingLifePercentNot() {
        return remainingLifePercentNot.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_REMAINING_LIFE_PERCENT_NOT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<Double> getRemainingLifePercentNot_JsonNullable() {
    return remainingLifePercentNot;
  }
  
  @JsonProperty(JSON_PROPERTY_REMAINING_LIFE_PERCENT_NOT)
  public void setRemainingLifePercentNot_JsonNullable(JsonNullable<Double> remainingLifePercentNot) {
    this.remainingLifePercentNot = remainingLifePercentNot;
  }

  public void setRemainingLifePercentNot(Double remainingLifePercentNot) {
    this.remainingLifePercentNot = JsonNullable.<Double>of(remainingLifePercentNot);
  }


  public DiskWhereInput remainingLifePercentNotIn(List<Double> remainingLifePercentNotIn) {
    this.remainingLifePercentNotIn = JsonNullable.<List<Double>>of(remainingLifePercentNotIn);
    return this;
  }

  public DiskWhereInput addRemainingLifePercentNotInItem(Double remainingLifePercentNotInItem) {
    if (this.remainingLifePercentNotIn == null || !this.remainingLifePercentNotIn.isPresent()) {
      this.remainingLifePercentNotIn = JsonNullable.<List<Double>>of(new ArrayList<>());
    }
    try {
      this.remainingLifePercentNotIn.get().add(remainingLifePercentNotInItem);
    } catch (java.util.NoSuchElementException e) {
      // this can never happen, as we make sure above that the value is present
    }
    return this;
  }

   /**
   * Get remainingLifePercentNotIn
   * @return remainingLifePercentNotIn
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public List<Double> getRemainingLifePercentNotIn() {
        return remainingLifePercentNotIn.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_REMAINING_LIFE_PERCENT_NOT_IN)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<List<Double>> getRemainingLifePercentNotIn_JsonNullable() {
    return remainingLifePercentNotIn;
  }
  
  @JsonProperty(JSON_PROPERTY_REMAINING_LIFE_PERCENT_NOT_IN)
  public void setRemainingLifePercentNotIn_JsonNullable(JsonNullable<List<Double>> remainingLifePercentNotIn) {
    this.remainingLifePercentNotIn = remainingLifePercentNotIn;
  }

  public void setRemainingLifePercentNotIn(List<Double> remainingLifePercentNotIn) {
    this.remainingLifePercentNotIn = JsonNullable.<List<Double>>of(remainingLifePercentNotIn);
  }


  public DiskWhereInput serial(String serial) {
    this.serial = JsonNullable.<String>of(serial);
    return this;
  }

   /**
   * Get serial
   * @return serial
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getSerial() {
        return serial.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_SERIAL)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getSerial_JsonNullable() {
    return serial;
  }
  
  @JsonProperty(JSON_PROPERTY_SERIAL)
  public void setSerial_JsonNullable(JsonNullable<String> serial) {
    this.serial = serial;
  }

  public void setSerial(String serial) {
    this.serial = JsonNullable.<String>of(serial);
  }


  public DiskWhereInput serialContains(String serialContains) {
    this.serialContains = JsonNullable.<String>of(serialContains);
    return this;
  }

   /**
   * Get serialContains
   * @return serialContains
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getSerialContains() {
        return serialContains.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_SERIAL_CONTAINS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getSerialContains_JsonNullable() {
    return serialContains;
  }
  
  @JsonProperty(JSON_PROPERTY_SERIAL_CONTAINS)
  public void setSerialContains_JsonNullable(JsonNullable<String> serialContains) {
    this.serialContains = serialContains;
  }

  public void setSerialContains(String serialContains) {
    this.serialContains = JsonNullable.<String>of(serialContains);
  }


  public DiskWhereInput serialEndsWith(String serialEndsWith) {
    this.serialEndsWith = JsonNullable.<String>of(serialEndsWith);
    return this;
  }

   /**
   * Get serialEndsWith
   * @return serialEndsWith
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getSerialEndsWith() {
        return serialEndsWith.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_SERIAL_ENDS_WITH)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getSerialEndsWith_JsonNullable() {
    return serialEndsWith;
  }
  
  @JsonProperty(JSON_PROPERTY_SERIAL_ENDS_WITH)
  public void setSerialEndsWith_JsonNullable(JsonNullable<String> serialEndsWith) {
    this.serialEndsWith = serialEndsWith;
  }

  public void setSerialEndsWith(String serialEndsWith) {
    this.serialEndsWith = JsonNullable.<String>of(serialEndsWith);
  }


  public DiskWhereInput serialGt(String serialGt) {
    this.serialGt = JsonNullable.<String>of(serialGt);
    return this;
  }

   /**
   * Get serialGt
   * @return serialGt
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getSerialGt() {
        return serialGt.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_SERIAL_GT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getSerialGt_JsonNullable() {
    return serialGt;
  }
  
  @JsonProperty(JSON_PROPERTY_SERIAL_GT)
  public void setSerialGt_JsonNullable(JsonNullable<String> serialGt) {
    this.serialGt = serialGt;
  }

  public void setSerialGt(String serialGt) {
    this.serialGt = JsonNullable.<String>of(serialGt);
  }


  public DiskWhereInput serialGte(String serialGte) {
    this.serialGte = JsonNullable.<String>of(serialGte);
    return this;
  }

   /**
   * Get serialGte
   * @return serialGte
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getSerialGte() {
        return serialGte.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_SERIAL_GTE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getSerialGte_JsonNullable() {
    return serialGte;
  }
  
  @JsonProperty(JSON_PROPERTY_SERIAL_GTE)
  public void setSerialGte_JsonNullable(JsonNullable<String> serialGte) {
    this.serialGte = serialGte;
  }

  public void setSerialGte(String serialGte) {
    this.serialGte = JsonNullable.<String>of(serialGte);
  }


  public DiskWhereInput serialIn(List<String> serialIn) {
    this.serialIn = JsonNullable.<List<String>>of(serialIn);
    return this;
  }

  public DiskWhereInput addSerialInItem(String serialInItem) {
    if (this.serialIn == null || !this.serialIn.isPresent()) {
      this.serialIn = JsonNullable.<List<String>>of(new ArrayList<>());
    }
    try {
      this.serialIn.get().add(serialInItem);
    } catch (java.util.NoSuchElementException e) {
      // this can never happen, as we make sure above that the value is present
    }
    return this;
  }

   /**
   * Get serialIn
   * @return serialIn
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public List<String> getSerialIn() {
        return serialIn.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_SERIAL_IN)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<List<String>> getSerialIn_JsonNullable() {
    return serialIn;
  }
  
  @JsonProperty(JSON_PROPERTY_SERIAL_IN)
  public void setSerialIn_JsonNullable(JsonNullable<List<String>> serialIn) {
    this.serialIn = serialIn;
  }

  public void setSerialIn(List<String> serialIn) {
    this.serialIn = JsonNullable.<List<String>>of(serialIn);
  }


  public DiskWhereInput serialLt(String serialLt) {
    this.serialLt = JsonNullable.<String>of(serialLt);
    return this;
  }

   /**
   * Get serialLt
   * @return serialLt
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getSerialLt() {
        return serialLt.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_SERIAL_LT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getSerialLt_JsonNullable() {
    return serialLt;
  }
  
  @JsonProperty(JSON_PROPERTY_SERIAL_LT)
  public void setSerialLt_JsonNullable(JsonNullable<String> serialLt) {
    this.serialLt = serialLt;
  }

  public void setSerialLt(String serialLt) {
    this.serialLt = JsonNullable.<String>of(serialLt);
  }


  public DiskWhereInput serialLte(String serialLte) {
    this.serialLte = JsonNullable.<String>of(serialLte);
    return this;
  }

   /**
   * Get serialLte
   * @return serialLte
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getSerialLte() {
        return serialLte.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_SERIAL_LTE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getSerialLte_JsonNullable() {
    return serialLte;
  }
  
  @JsonProperty(JSON_PROPERTY_SERIAL_LTE)
  public void setSerialLte_JsonNullable(JsonNullable<String> serialLte) {
    this.serialLte = serialLte;
  }

  public void setSerialLte(String serialLte) {
    this.serialLte = JsonNullable.<String>of(serialLte);
  }


  public DiskWhereInput serialNot(String serialNot) {
    this.serialNot = JsonNullable.<String>of(serialNot);
    return this;
  }

   /**
   * Get serialNot
   * @return serialNot
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getSerialNot() {
        return serialNot.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_SERIAL_NOT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getSerialNot_JsonNullable() {
    return serialNot;
  }
  
  @JsonProperty(JSON_PROPERTY_SERIAL_NOT)
  public void setSerialNot_JsonNullable(JsonNullable<String> serialNot) {
    this.serialNot = serialNot;
  }

  public void setSerialNot(String serialNot) {
    this.serialNot = JsonNullable.<String>of(serialNot);
  }


  public DiskWhereInput serialNotContains(String serialNotContains) {
    this.serialNotContains = JsonNullable.<String>of(serialNotContains);
    return this;
  }

   /**
   * Get serialNotContains
   * @return serialNotContains
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getSerialNotContains() {
        return serialNotContains.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_SERIAL_NOT_CONTAINS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getSerialNotContains_JsonNullable() {
    return serialNotContains;
  }
  
  @JsonProperty(JSON_PROPERTY_SERIAL_NOT_CONTAINS)
  public void setSerialNotContains_JsonNullable(JsonNullable<String> serialNotContains) {
    this.serialNotContains = serialNotContains;
  }

  public void setSerialNotContains(String serialNotContains) {
    this.serialNotContains = JsonNullable.<String>of(serialNotContains);
  }


  public DiskWhereInput serialNotEndsWith(String serialNotEndsWith) {
    this.serialNotEndsWith = JsonNullable.<String>of(serialNotEndsWith);
    return this;
  }

   /**
   * Get serialNotEndsWith
   * @return serialNotEndsWith
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getSerialNotEndsWith() {
        return serialNotEndsWith.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_SERIAL_NOT_ENDS_WITH)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getSerialNotEndsWith_JsonNullable() {
    return serialNotEndsWith;
  }
  
  @JsonProperty(JSON_PROPERTY_SERIAL_NOT_ENDS_WITH)
  public void setSerialNotEndsWith_JsonNullable(JsonNullable<String> serialNotEndsWith) {
    this.serialNotEndsWith = serialNotEndsWith;
  }

  public void setSerialNotEndsWith(String serialNotEndsWith) {
    this.serialNotEndsWith = JsonNullable.<String>of(serialNotEndsWith);
  }


  public DiskWhereInput serialNotIn(List<String> serialNotIn) {
    this.serialNotIn = JsonNullable.<List<String>>of(serialNotIn);
    return this;
  }

  public DiskWhereInput addSerialNotInItem(String serialNotInItem) {
    if (this.serialNotIn == null || !this.serialNotIn.isPresent()) {
      this.serialNotIn = JsonNullable.<List<String>>of(new ArrayList<>());
    }
    try {
      this.serialNotIn.get().add(serialNotInItem);
    } catch (java.util.NoSuchElementException e) {
      // this can never happen, as we make sure above that the value is present
    }
    return this;
  }

   /**
   * Get serialNotIn
   * @return serialNotIn
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public List<String> getSerialNotIn() {
        return serialNotIn.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_SERIAL_NOT_IN)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<List<String>> getSerialNotIn_JsonNullable() {
    return serialNotIn;
  }
  
  @JsonProperty(JSON_PROPERTY_SERIAL_NOT_IN)
  public void setSerialNotIn_JsonNullable(JsonNullable<List<String>> serialNotIn) {
    this.serialNotIn = serialNotIn;
  }

  public void setSerialNotIn(List<String> serialNotIn) {
    this.serialNotIn = JsonNullable.<List<String>>of(serialNotIn);
  }


  public DiskWhereInput serialNotStartsWith(String serialNotStartsWith) {
    this.serialNotStartsWith = JsonNullable.<String>of(serialNotStartsWith);
    return this;
  }

   /**
   * Get serialNotStartsWith
   * @return serialNotStartsWith
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getSerialNotStartsWith() {
        return serialNotStartsWith.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_SERIAL_NOT_STARTS_WITH)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getSerialNotStartsWith_JsonNullable() {
    return serialNotStartsWith;
  }
  
  @JsonProperty(JSON_PROPERTY_SERIAL_NOT_STARTS_WITH)
  public void setSerialNotStartsWith_JsonNullable(JsonNullable<String> serialNotStartsWith) {
    this.serialNotStartsWith = serialNotStartsWith;
  }

  public void setSerialNotStartsWith(String serialNotStartsWith) {
    this.serialNotStartsWith = JsonNullable.<String>of(serialNotStartsWith);
  }


  public DiskWhereInput serialStartsWith(String serialStartsWith) {
    this.serialStartsWith = JsonNullable.<String>of(serialStartsWith);
    return this;
  }

   /**
   * Get serialStartsWith
   * @return serialStartsWith
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getSerialStartsWith() {
        return serialStartsWith.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_SERIAL_STARTS_WITH)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getSerialStartsWith_JsonNullable() {
    return serialStartsWith;
  }
  
  @JsonProperty(JSON_PROPERTY_SERIAL_STARTS_WITH)
  public void setSerialStartsWith_JsonNullable(JsonNullable<String> serialStartsWith) {
    this.serialStartsWith = serialStartsWith;
  }

  public void setSerialStartsWith(String serialStartsWith) {
    this.serialStartsWith = JsonNullable.<String>of(serialStartsWith);
  }


  public DiskWhereInput size(Double size) {
    this.size = JsonNullable.<Double>of(size);
    return this;
  }

   /**
   * Get size
   * @return size
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public Double getSize() {
        return size.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_SIZE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<Double> getSize_JsonNullable() {
    return size;
  }
  
  @JsonProperty(JSON_PROPERTY_SIZE)
  public void setSize_JsonNullable(JsonNullable<Double> size) {
    this.size = size;
  }

  public void setSize(Double size) {
    this.size = JsonNullable.<Double>of(size);
  }


  public DiskWhereInput sizeGt(Double sizeGt) {
    this.sizeGt = JsonNullable.<Double>of(sizeGt);
    return this;
  }

   /**
   * Get sizeGt
   * @return sizeGt
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public Double getSizeGt() {
        return sizeGt.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_SIZE_GT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<Double> getSizeGt_JsonNullable() {
    return sizeGt;
  }
  
  @JsonProperty(JSON_PROPERTY_SIZE_GT)
  public void setSizeGt_JsonNullable(JsonNullable<Double> sizeGt) {
    this.sizeGt = sizeGt;
  }

  public void setSizeGt(Double sizeGt) {
    this.sizeGt = JsonNullable.<Double>of(sizeGt);
  }


  public DiskWhereInput sizeGte(Double sizeGte) {
    this.sizeGte = JsonNullable.<Double>of(sizeGte);
    return this;
  }

   /**
   * Get sizeGte
   * @return sizeGte
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public Double getSizeGte() {
        return sizeGte.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_SIZE_GTE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<Double> getSizeGte_JsonNullable() {
    return sizeGte;
  }
  
  @JsonProperty(JSON_PROPERTY_SIZE_GTE)
  public void setSizeGte_JsonNullable(JsonNullable<Double> sizeGte) {
    this.sizeGte = sizeGte;
  }

  public void setSizeGte(Double sizeGte) {
    this.sizeGte = JsonNullable.<Double>of(sizeGte);
  }


  public DiskWhereInput sizeIn(List<Double> sizeIn) {
    this.sizeIn = JsonNullable.<List<Double>>of(sizeIn);
    return this;
  }

  public DiskWhereInput addSizeInItem(Double sizeInItem) {
    if (this.sizeIn == null || !this.sizeIn.isPresent()) {
      this.sizeIn = JsonNullable.<List<Double>>of(new ArrayList<>());
    }
    try {
      this.sizeIn.get().add(sizeInItem);
    } catch (java.util.NoSuchElementException e) {
      // this can never happen, as we make sure above that the value is present
    }
    return this;
  }

   /**
   * Get sizeIn
   * @return sizeIn
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public List<Double> getSizeIn() {
        return sizeIn.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_SIZE_IN)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<List<Double>> getSizeIn_JsonNullable() {
    return sizeIn;
  }
  
  @JsonProperty(JSON_PROPERTY_SIZE_IN)
  public void setSizeIn_JsonNullable(JsonNullable<List<Double>> sizeIn) {
    this.sizeIn = sizeIn;
  }

  public void setSizeIn(List<Double> sizeIn) {
    this.sizeIn = JsonNullable.<List<Double>>of(sizeIn);
  }


  public DiskWhereInput sizeLt(Double sizeLt) {
    this.sizeLt = JsonNullable.<Double>of(sizeLt);
    return this;
  }

   /**
   * Get sizeLt
   * @return sizeLt
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public Double getSizeLt() {
        return sizeLt.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_SIZE_LT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<Double> getSizeLt_JsonNullable() {
    return sizeLt;
  }
  
  @JsonProperty(JSON_PROPERTY_SIZE_LT)
  public void setSizeLt_JsonNullable(JsonNullable<Double> sizeLt) {
    this.sizeLt = sizeLt;
  }

  public void setSizeLt(Double sizeLt) {
    this.sizeLt = JsonNullable.<Double>of(sizeLt);
  }


  public DiskWhereInput sizeLte(Double sizeLte) {
    this.sizeLte = JsonNullable.<Double>of(sizeLte);
    return this;
  }

   /**
   * Get sizeLte
   * @return sizeLte
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public Double getSizeLte() {
        return sizeLte.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_SIZE_LTE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<Double> getSizeLte_JsonNullable() {
    return sizeLte;
  }
  
  @JsonProperty(JSON_PROPERTY_SIZE_LTE)
  public void setSizeLte_JsonNullable(JsonNullable<Double> sizeLte) {
    this.sizeLte = sizeLte;
  }

  public void setSizeLte(Double sizeLte) {
    this.sizeLte = JsonNullable.<Double>of(sizeLte);
  }


  public DiskWhereInput sizeNot(Double sizeNot) {
    this.sizeNot = JsonNullable.<Double>of(sizeNot);
    return this;
  }

   /**
   * Get sizeNot
   * @return sizeNot
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public Double getSizeNot() {
        return sizeNot.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_SIZE_NOT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<Double> getSizeNot_JsonNullable() {
    return sizeNot;
  }
  
  @JsonProperty(JSON_PROPERTY_SIZE_NOT)
  public void setSizeNot_JsonNullable(JsonNullable<Double> sizeNot) {
    this.sizeNot = sizeNot;
  }

  public void setSizeNot(Double sizeNot) {
    this.sizeNot = JsonNullable.<Double>of(sizeNot);
  }


  public DiskWhereInput sizeNotIn(List<Double> sizeNotIn) {
    this.sizeNotIn = JsonNullable.<List<Double>>of(sizeNotIn);
    return this;
  }

  public DiskWhereInput addSizeNotInItem(Double sizeNotInItem) {
    if (this.sizeNotIn == null || !this.sizeNotIn.isPresent()) {
      this.sizeNotIn = JsonNullable.<List<Double>>of(new ArrayList<>());
    }
    try {
      this.sizeNotIn.get().add(sizeNotInItem);
    } catch (java.util.NoSuchElementException e) {
      // this can never happen, as we make sure above that the value is present
    }
    return this;
  }

   /**
   * Get sizeNotIn
   * @return sizeNotIn
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public List<Double> getSizeNotIn() {
        return sizeNotIn.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_SIZE_NOT_IN)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<List<Double>> getSizeNotIn_JsonNullable() {
    return sizeNotIn;
  }
  
  @JsonProperty(JSON_PROPERTY_SIZE_NOT_IN)
  public void setSizeNotIn_JsonNullable(JsonNullable<List<Double>> sizeNotIn) {
    this.sizeNotIn = sizeNotIn;
  }

  public void setSizeNotIn(List<Double> sizeNotIn) {
    this.sizeNotIn = JsonNullable.<List<Double>>of(sizeNotIn);
  }


  public DiskWhereInput type(DiskType type) {
    this.type = JsonNullable.<DiskType>of(type);
    return this;
  }

   /**
   * Get type
   * @return type
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public DiskType getType() {
        return type.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_TYPE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<DiskType> getType_JsonNullable() {
    return type;
  }
  
  @JsonProperty(JSON_PROPERTY_TYPE)
  public void setType_JsonNullable(JsonNullable<DiskType> type) {
    this.type = type;
  }

  public void setType(DiskType type) {
    this.type = JsonNullable.<DiskType>of(type);
  }


  public DiskWhereInput typeIn(List<DiskType> typeIn) {
    this.typeIn = JsonNullable.<List<DiskType>>of(typeIn);
    return this;
  }

  public DiskWhereInput addTypeInItem(DiskType typeInItem) {
    if (this.typeIn == null || !this.typeIn.isPresent()) {
      this.typeIn = JsonNullable.<List<DiskType>>of(new ArrayList<>());
    }
    try {
      this.typeIn.get().add(typeInItem);
    } catch (java.util.NoSuchElementException e) {
      // this can never happen, as we make sure above that the value is present
    }
    return this;
  }

   /**
   * Get typeIn
   * @return typeIn
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public List<DiskType> getTypeIn() {
        return typeIn.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_TYPE_IN)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<List<DiskType>> getTypeIn_JsonNullable() {
    return typeIn;
  }
  
  @JsonProperty(JSON_PROPERTY_TYPE_IN)
  public void setTypeIn_JsonNullable(JsonNullable<List<DiskType>> typeIn) {
    this.typeIn = typeIn;
  }

  public void setTypeIn(List<DiskType> typeIn) {
    this.typeIn = JsonNullable.<List<DiskType>>of(typeIn);
  }


  public DiskWhereInput typeNot(DiskType typeNot) {
    this.typeNot = JsonNullable.<DiskType>of(typeNot);
    return this;
  }

   /**
   * Get typeNot
   * @return typeNot
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public DiskType getTypeNot() {
        return typeNot.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_TYPE_NOT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<DiskType> getTypeNot_JsonNullable() {
    return typeNot;
  }
  
  @JsonProperty(JSON_PROPERTY_TYPE_NOT)
  public void setTypeNot_JsonNullable(JsonNullable<DiskType> typeNot) {
    this.typeNot = typeNot;
  }

  public void setTypeNot(DiskType typeNot) {
    this.typeNot = JsonNullable.<DiskType>of(typeNot);
  }


  public DiskWhereInput typeNotIn(List<DiskType> typeNotIn) {
    this.typeNotIn = JsonNullable.<List<DiskType>>of(typeNotIn);
    return this;
  }

  public DiskWhereInput addTypeNotInItem(DiskType typeNotInItem) {
    if (this.typeNotIn == null || !this.typeNotIn.isPresent()) {
      this.typeNotIn = JsonNullable.<List<DiskType>>of(new ArrayList<>());
    }
    try {
      this.typeNotIn.get().add(typeNotInItem);
    } catch (java.util.NoSuchElementException e) {
      // this can never happen, as we make sure above that the value is present
    }
    return this;
  }

   /**
   * Get typeNotIn
   * @return typeNotIn
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public List<DiskType> getTypeNotIn() {
        return typeNotIn.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_TYPE_NOT_IN)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<List<DiskType>> getTypeNotIn_JsonNullable() {
    return typeNotIn;
  }
  
  @JsonProperty(JSON_PROPERTY_TYPE_NOT_IN)
  public void setTypeNotIn_JsonNullable(JsonNullable<List<DiskType>> typeNotIn) {
    this.typeNotIn = typeNotIn;
  }

  public void setTypeNotIn(List<DiskType> typeNotIn) {
    this.typeNotIn = JsonNullable.<List<DiskType>>of(typeNotIn);
  }


  public DiskWhereInput usage(DiskUsage usage) {
    this.usage = JsonNullable.<DiskUsage>of(usage);
    return this;
  }

   /**
   * Get usage
   * @return usage
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public DiskUsage getUsage() {
        return usage.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_USAGE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<DiskUsage> getUsage_JsonNullable() {
    return usage;
  }
  
  @JsonProperty(JSON_PROPERTY_USAGE)
  public void setUsage_JsonNullable(JsonNullable<DiskUsage> usage) {
    this.usage = usage;
  }

  public void setUsage(DiskUsage usage) {
    this.usage = JsonNullable.<DiskUsage>of(usage);
  }


  public DiskWhereInput usageIn(List<DiskUsage> usageIn) {
    this.usageIn = JsonNullable.<List<DiskUsage>>of(usageIn);
    return this;
  }

  public DiskWhereInput addUsageInItem(DiskUsage usageInItem) {
    if (this.usageIn == null || !this.usageIn.isPresent()) {
      this.usageIn = JsonNullable.<List<DiskUsage>>of(new ArrayList<>());
    }
    try {
      this.usageIn.get().add(usageInItem);
    } catch (java.util.NoSuchElementException e) {
      // this can never happen, as we make sure above that the value is present
    }
    return this;
  }

   /**
   * Get usageIn
   * @return usageIn
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public List<DiskUsage> getUsageIn() {
        return usageIn.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_USAGE_IN)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<List<DiskUsage>> getUsageIn_JsonNullable() {
    return usageIn;
  }
  
  @JsonProperty(JSON_PROPERTY_USAGE_IN)
  public void setUsageIn_JsonNullable(JsonNullable<List<DiskUsage>> usageIn) {
    this.usageIn = usageIn;
  }

  public void setUsageIn(List<DiskUsage> usageIn) {
    this.usageIn = JsonNullable.<List<DiskUsage>>of(usageIn);
  }


  public DiskWhereInput usageNot(DiskUsage usageNot) {
    this.usageNot = JsonNullable.<DiskUsage>of(usageNot);
    return this;
  }

   /**
   * Get usageNot
   * @return usageNot
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public DiskUsage getUsageNot() {
        return usageNot.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_USAGE_NOT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<DiskUsage> getUsageNot_JsonNullable() {
    return usageNot;
  }
  
  @JsonProperty(JSON_PROPERTY_USAGE_NOT)
  public void setUsageNot_JsonNullable(JsonNullable<DiskUsage> usageNot) {
    this.usageNot = usageNot;
  }

  public void setUsageNot(DiskUsage usageNot) {
    this.usageNot = JsonNullable.<DiskUsage>of(usageNot);
  }


  public DiskWhereInput usageNotIn(List<DiskUsage> usageNotIn) {
    this.usageNotIn = JsonNullable.<List<DiskUsage>>of(usageNotIn);
    return this;
  }

  public DiskWhereInput addUsageNotInItem(DiskUsage usageNotInItem) {
    if (this.usageNotIn == null || !this.usageNotIn.isPresent()) {
      this.usageNotIn = JsonNullable.<List<DiskUsage>>of(new ArrayList<>());
    }
    try {
      this.usageNotIn.get().add(usageNotInItem);
    } catch (java.util.NoSuchElementException e) {
      // this can never happen, as we make sure above that the value is present
    }
    return this;
  }

   /**
   * Get usageNotIn
   * @return usageNotIn
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public List<DiskUsage> getUsageNotIn() {
        return usageNotIn.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_USAGE_NOT_IN)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<List<DiskUsage>> getUsageNotIn_JsonNullable() {
    return usageNotIn;
  }
  
  @JsonProperty(JSON_PROPERTY_USAGE_NOT_IN)
  public void setUsageNotIn_JsonNullable(JsonNullable<List<DiskUsage>> usageNotIn) {
    this.usageNotIn = usageNotIn;
  }

  public void setUsageNotIn(List<DiskUsage> usageNotIn) {
    this.usageNotIn = JsonNullable.<List<DiskUsage>>of(usageNotIn);
  }


  public DiskWhereInput usageStatus(DiskUsageStatus usageStatus) {
    this.usageStatus = JsonNullable.<DiskUsageStatus>of(usageStatus);
    return this;
  }

   /**
   * Get usageStatus
   * @return usageStatus
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public DiskUsageStatus getUsageStatus() {
        return usageStatus.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_USAGE_STATUS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<DiskUsageStatus> getUsageStatus_JsonNullable() {
    return usageStatus;
  }
  
  @JsonProperty(JSON_PROPERTY_USAGE_STATUS)
  public void setUsageStatus_JsonNullable(JsonNullable<DiskUsageStatus> usageStatus) {
    this.usageStatus = usageStatus;
  }

  public void setUsageStatus(DiskUsageStatus usageStatus) {
    this.usageStatus = JsonNullable.<DiskUsageStatus>of(usageStatus);
  }


  public DiskWhereInput usageStatusIn(List<DiskUsageStatus> usageStatusIn) {
    this.usageStatusIn = JsonNullable.<List<DiskUsageStatus>>of(usageStatusIn);
    return this;
  }

  public DiskWhereInput addUsageStatusInItem(DiskUsageStatus usageStatusInItem) {
    if (this.usageStatusIn == null || !this.usageStatusIn.isPresent()) {
      this.usageStatusIn = JsonNullable.<List<DiskUsageStatus>>of(new ArrayList<>());
    }
    try {
      this.usageStatusIn.get().add(usageStatusInItem);
    } catch (java.util.NoSuchElementException e) {
      // this can never happen, as we make sure above that the value is present
    }
    return this;
  }

   /**
   * Get usageStatusIn
   * @return usageStatusIn
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public List<DiskUsageStatus> getUsageStatusIn() {
        return usageStatusIn.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_USAGE_STATUS_IN)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<List<DiskUsageStatus>> getUsageStatusIn_JsonNullable() {
    return usageStatusIn;
  }
  
  @JsonProperty(JSON_PROPERTY_USAGE_STATUS_IN)
  public void setUsageStatusIn_JsonNullable(JsonNullable<List<DiskUsageStatus>> usageStatusIn) {
    this.usageStatusIn = usageStatusIn;
  }

  public void setUsageStatusIn(List<DiskUsageStatus> usageStatusIn) {
    this.usageStatusIn = JsonNullable.<List<DiskUsageStatus>>of(usageStatusIn);
  }


  public DiskWhereInput usageStatusNot(DiskUsageStatus usageStatusNot) {
    this.usageStatusNot = JsonNullable.<DiskUsageStatus>of(usageStatusNot);
    return this;
  }

   /**
   * Get usageStatusNot
   * @return usageStatusNot
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public DiskUsageStatus getUsageStatusNot() {
        return usageStatusNot.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_USAGE_STATUS_NOT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<DiskUsageStatus> getUsageStatusNot_JsonNullable() {
    return usageStatusNot;
  }
  
  @JsonProperty(JSON_PROPERTY_USAGE_STATUS_NOT)
  public void setUsageStatusNot_JsonNullable(JsonNullable<DiskUsageStatus> usageStatusNot) {
    this.usageStatusNot = usageStatusNot;
  }

  public void setUsageStatusNot(DiskUsageStatus usageStatusNot) {
    this.usageStatusNot = JsonNullable.<DiskUsageStatus>of(usageStatusNot);
  }


  public DiskWhereInput usageStatusNotIn(List<DiskUsageStatus> usageStatusNotIn) {
    this.usageStatusNotIn = JsonNullable.<List<DiskUsageStatus>>of(usageStatusNotIn);
    return this;
  }

  public DiskWhereInput addUsageStatusNotInItem(DiskUsageStatus usageStatusNotInItem) {
    if (this.usageStatusNotIn == null || !this.usageStatusNotIn.isPresent()) {
      this.usageStatusNotIn = JsonNullable.<List<DiskUsageStatus>>of(new ArrayList<>());
    }
    try {
      this.usageStatusNotIn.get().add(usageStatusNotInItem);
    } catch (java.util.NoSuchElementException e) {
      // this can never happen, as we make sure above that the value is present
    }
    return this;
  }

   /**
   * Get usageStatusNotIn
   * @return usageStatusNotIn
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public List<DiskUsageStatus> getUsageStatusNotIn() {
        return usageStatusNotIn.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_USAGE_STATUS_NOT_IN)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<List<DiskUsageStatus>> getUsageStatusNotIn_JsonNullable() {
    return usageStatusNotIn;
  }
  
  @JsonProperty(JSON_PROPERTY_USAGE_STATUS_NOT_IN)
  public void setUsageStatusNotIn_JsonNullable(JsonNullable<List<DiskUsageStatus>> usageStatusNotIn) {
    this.usageStatusNotIn = usageStatusNotIn;
  }

  public void setUsageStatusNotIn(List<DiskUsageStatus> usageStatusNotIn) {
    this.usageStatusNotIn = JsonNullable.<List<DiskUsageStatus>>of(usageStatusNotIn);
  }


  /**
   * Return true if this DiskWhereInput object is equal to o.
   */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    DiskWhereInput diskWhereInput = (DiskWhereInput) o;
    return equalsNullable(this.AND, diskWhereInput.AND) &&
        equalsNullable(this.entityAsyncStatus, diskWhereInput.entityAsyncStatus) &&
        equalsNullable(this.entityAsyncStatusIn, diskWhereInput.entityAsyncStatusIn) &&
        equalsNullable(this.entityAsyncStatusNot, diskWhereInput.entityAsyncStatusNot) &&
        equalsNullable(this.entityAsyncStatusNotIn, diskWhereInput.entityAsyncStatusNotIn) &&
        equalsNullable(this.firmware, diskWhereInput.firmware) &&
        equalsNullable(this.firmwareContains, diskWhereInput.firmwareContains) &&
        equalsNullable(this.firmwareEndsWith, diskWhereInput.firmwareEndsWith) &&
        equalsNullable(this.firmwareGt, diskWhereInput.firmwareGt) &&
        equalsNullable(this.firmwareGte, diskWhereInput.firmwareGte) &&
        equalsNullable(this.firmwareIn, diskWhereInput.firmwareIn) &&
        equalsNullable(this.firmwareLt, diskWhereInput.firmwareLt) &&
        equalsNullable(this.firmwareLte, diskWhereInput.firmwareLte) &&
        equalsNullable(this.firmwareNot, diskWhereInput.firmwareNot) &&
        equalsNullable(this.firmwareNotContains, diskWhereInput.firmwareNotContains) &&
        equalsNullable(this.firmwareNotEndsWith, diskWhereInput.firmwareNotEndsWith) &&
        equalsNullable(this.firmwareNotIn, diskWhereInput.firmwareNotIn) &&
        equalsNullable(this.firmwareNotStartsWith, diskWhereInput.firmwareNotStartsWith) &&
        equalsNullable(this.firmwareStartsWith, diskWhereInput.firmwareStartsWith) &&
        equalsNullable(this.function, diskWhereInput.function) &&
        equalsNullable(this.functionIn, diskWhereInput.functionIn) &&
        equalsNullable(this.functionNot, diskWhereInput.functionNot) &&
        equalsNullable(this.functionNotIn, diskWhereInput.functionNotIn) &&
        equalsNullable(this.healthStatus, diskWhereInput.healthStatus) &&
        equalsNullable(this.healthStatusIn, diskWhereInput.healthStatusIn) &&
        equalsNullable(this.healthStatusNot, diskWhereInput.healthStatusNot) &&
        equalsNullable(this.healthStatusNotIn, diskWhereInput.healthStatusNotIn) &&
        equalsNullable(this.healthy, diskWhereInput.healthy) &&
        equalsNullable(this.healthyNot, diskWhereInput.healthyNot) &&
        equalsNullable(this.host, diskWhereInput.host) &&
        equalsNullable(this.id, diskWhereInput.id) &&
        equalsNullable(this.idContains, diskWhereInput.idContains) &&
        equalsNullable(this.idEndsWith, diskWhereInput.idEndsWith) &&
        equalsNullable(this.idGt, diskWhereInput.idGt) &&
        equalsNullable(this.idGte, diskWhereInput.idGte) &&
        equalsNullable(this.idIn, diskWhereInput.idIn) &&
        equalsNullable(this.idLt, diskWhereInput.idLt) &&
        equalsNullable(this.idLte, diskWhereInput.idLte) &&
        equalsNullable(this.idNot, diskWhereInput.idNot) &&
        equalsNullable(this.idNotContains, diskWhereInput.idNotContains) &&
        equalsNullable(this.idNotEndsWith, diskWhereInput.idNotEndsWith) &&
        equalsNullable(this.idNotIn, diskWhereInput.idNotIn) &&
        equalsNullable(this.idNotStartsWith, diskWhereInput.idNotStartsWith) &&
        equalsNullable(this.idStartsWith, diskWhereInput.idStartsWith) &&
        equalsNullable(this.labelsEvery, diskWhereInput.labelsEvery) &&
        equalsNullable(this.labelsNone, diskWhereInput.labelsNone) &&
        equalsNullable(this.labelsSome, diskWhereInput.labelsSome) &&
        equalsNullable(this.localId, diskWhereInput.localId) &&
        equalsNullable(this.localIdContains, diskWhereInput.localIdContains) &&
        equalsNullable(this.localIdEndsWith, diskWhereInput.localIdEndsWith) &&
        equalsNullable(this.localIdGt, diskWhereInput.localIdGt) &&
        equalsNullable(this.localIdGte, diskWhereInput.localIdGte) &&
        equalsNullable(this.localIdIn, diskWhereInput.localIdIn) &&
        equalsNullable(this.localIdLt, diskWhereInput.localIdLt) &&
        equalsNullable(this.localIdLte, diskWhereInput.localIdLte) &&
        equalsNullable(this.localIdNot, diskWhereInput.localIdNot) &&
        equalsNullable(this.localIdNotContains, diskWhereInput.localIdNotContains) &&
        equalsNullable(this.localIdNotEndsWith, diskWhereInput.localIdNotEndsWith) &&
        equalsNullable(this.localIdNotIn, diskWhereInput.localIdNotIn) &&
        equalsNullable(this.localIdNotStartsWith, diskWhereInput.localIdNotStartsWith) &&
        equalsNullable(this.localIdStartsWith, diskWhereInput.localIdStartsWith) &&
        equalsNullable(this.model, diskWhereInput.model) &&
        equalsNullable(this.modelContains, diskWhereInput.modelContains) &&
        equalsNullable(this.modelEndsWith, diskWhereInput.modelEndsWith) &&
        equalsNullable(this.modelGt, diskWhereInput.modelGt) &&
        equalsNullable(this.modelGte, diskWhereInput.modelGte) &&
        equalsNullable(this.modelIn, diskWhereInput.modelIn) &&
        equalsNullable(this.modelLt, diskWhereInput.modelLt) &&
        equalsNullable(this.modelLte, diskWhereInput.modelLte) &&
        equalsNullable(this.modelNot, diskWhereInput.modelNot) &&
        equalsNullable(this.modelNotContains, diskWhereInput.modelNotContains) &&
        equalsNullable(this.modelNotEndsWith, diskWhereInput.modelNotEndsWith) &&
        equalsNullable(this.modelNotIn, diskWhereInput.modelNotIn) &&
        equalsNullable(this.modelNotStartsWith, diskWhereInput.modelNotStartsWith) &&
        equalsNullable(this.modelStartsWith, diskWhereInput.modelStartsWith) &&
        equalsNullable(this.mounted, diskWhereInput.mounted) &&
        equalsNullable(this.mountedNot, diskWhereInput.mountedNot) &&
        equalsNullable(this.name, diskWhereInput.name) &&
        equalsNullable(this.nameContains, diskWhereInput.nameContains) &&
        equalsNullable(this.nameEndsWith, diskWhereInput.nameEndsWith) &&
        equalsNullable(this.nameGt, diskWhereInput.nameGt) &&
        equalsNullable(this.nameGte, diskWhereInput.nameGte) &&
        equalsNullable(this.nameIn, diskWhereInput.nameIn) &&
        equalsNullable(this.nameLt, diskWhereInput.nameLt) &&
        equalsNullable(this.nameLte, diskWhereInput.nameLte) &&
        equalsNullable(this.nameNot, diskWhereInput.nameNot) &&
        equalsNullable(this.nameNotContains, diskWhereInput.nameNotContains) &&
        equalsNullable(this.nameNotEndsWith, diskWhereInput.nameNotEndsWith) &&
        equalsNullable(this.nameNotIn, diskWhereInput.nameNotIn) &&
        equalsNullable(this.nameNotStartsWith, diskWhereInput.nameNotStartsWith) &&
        equalsNullable(this.nameStartsWith, diskWhereInput.nameStartsWith) &&
        equalsNullable(this.NOT, diskWhereInput.NOT) &&
        equalsNullable(this.numaNode, diskWhereInput.numaNode) &&
        equalsNullable(this.numaNodeGt, diskWhereInput.numaNodeGt) &&
        equalsNullable(this.numaNodeGte, diskWhereInput.numaNodeGte) &&
        equalsNullable(this.numaNodeIn, diskWhereInput.numaNodeIn) &&
        equalsNullable(this.numaNodeLt, diskWhereInput.numaNodeLt) &&
        equalsNullable(this.numaNodeLte, diskWhereInput.numaNodeLte) &&
        equalsNullable(this.numaNodeNot, diskWhereInput.numaNodeNot) &&
        equalsNullable(this.numaNodeNotIn, diskWhereInput.numaNodeNotIn) &&
        equalsNullable(this.offline, diskWhereInput.offline) &&
        equalsNullable(this.offlineNot, diskWhereInput.offlineNot) &&
        equalsNullable(this.OR, diskWhereInput.OR) &&
        equalsNullable(this.path, diskWhereInput.path) &&
        equalsNullable(this.pathContains, diskWhereInput.pathContains) &&
        equalsNullable(this.pathEndsWith, diskWhereInput.pathEndsWith) &&
        equalsNullable(this.pathGt, diskWhereInput.pathGt) &&
        equalsNullable(this.pathGte, diskWhereInput.pathGte) &&
        equalsNullable(this.pathIn, diskWhereInput.pathIn) &&
        equalsNullable(this.pathLt, diskWhereInput.pathLt) &&
        equalsNullable(this.pathLte, diskWhereInput.pathLte) &&
        equalsNullable(this.pathNot, diskWhereInput.pathNot) &&
        equalsNullable(this.pathNotContains, diskWhereInput.pathNotContains) &&
        equalsNullable(this.pathNotEndsWith, diskWhereInput.pathNotEndsWith) &&
        equalsNullable(this.pathNotIn, diskWhereInput.pathNotIn) &&
        equalsNullable(this.pathNotStartsWith, diskWhereInput.pathNotStartsWith) &&
        equalsNullable(this.pathStartsWith, diskWhereInput.pathStartsWith) &&
        equalsNullable(this.persistentMemoryType, diskWhereInput.persistentMemoryType) &&
        equalsNullable(this.persistentMemoryTypeContains, diskWhereInput.persistentMemoryTypeContains) &&
        equalsNullable(this.persistentMemoryTypeEndsWith, diskWhereInput.persistentMemoryTypeEndsWith) &&
        equalsNullable(this.persistentMemoryTypeGt, diskWhereInput.persistentMemoryTypeGt) &&
        equalsNullable(this.persistentMemoryTypeGte, diskWhereInput.persistentMemoryTypeGte) &&
        equalsNullable(this.persistentMemoryTypeIn, diskWhereInput.persistentMemoryTypeIn) &&
        equalsNullable(this.persistentMemoryTypeLt, diskWhereInput.persistentMemoryTypeLt) &&
        equalsNullable(this.persistentMemoryTypeLte, diskWhereInput.persistentMemoryTypeLte) &&
        equalsNullable(this.persistentMemoryTypeNot, diskWhereInput.persistentMemoryTypeNot) &&
        equalsNullable(this.persistentMemoryTypeNotContains, diskWhereInput.persistentMemoryTypeNotContains) &&
        equalsNullable(this.persistentMemoryTypeNotEndsWith, diskWhereInput.persistentMemoryTypeNotEndsWith) &&
        equalsNullable(this.persistentMemoryTypeNotIn, diskWhereInput.persistentMemoryTypeNotIn) &&
        equalsNullable(this.persistentMemoryTypeNotStartsWith, diskWhereInput.persistentMemoryTypeNotStartsWith) &&
        equalsNullable(this.persistentMemoryTypeStartsWith, diskWhereInput.persistentMemoryTypeStartsWith) &&
        equalsNullable(this.physicalSlotOnBrick, diskWhereInput.physicalSlotOnBrick) &&
        equalsNullable(this.physicalSlotOnBrickGt, diskWhereInput.physicalSlotOnBrickGt) &&
        equalsNullable(this.physicalSlotOnBrickGte, diskWhereInput.physicalSlotOnBrickGte) &&
        equalsNullable(this.physicalSlotOnBrickIn, diskWhereInput.physicalSlotOnBrickIn) &&
        equalsNullable(this.physicalSlotOnBrickLt, diskWhereInput.physicalSlotOnBrickLt) &&
        equalsNullable(this.physicalSlotOnBrickLte, diskWhereInput.physicalSlotOnBrickLte) &&
        equalsNullable(this.physicalSlotOnBrickNot, diskWhereInput.physicalSlotOnBrickNot) &&
        equalsNullable(this.physicalSlotOnBrickNotIn, diskWhereInput.physicalSlotOnBrickNotIn) &&
        equalsNullable(this.pmemDimmsEvery, diskWhereInput.pmemDimmsEvery) &&
        equalsNullable(this.pmemDimmsNone, diskWhereInput.pmemDimmsNone) &&
        equalsNullable(this.pmemDimmsSome, diskWhereInput.pmemDimmsSome) &&
        equalsNullable(this.recommendedUsage, diskWhereInput.recommendedUsage) &&
        equalsNullable(this.recommendedUsageIn, diskWhereInput.recommendedUsageIn) &&
        equalsNullable(this.recommendedUsageNot, diskWhereInput.recommendedUsageNot) &&
        equalsNullable(this.recommendedUsageNotIn, diskWhereInput.recommendedUsageNotIn) &&
        equalsNullable(this.remainingLifePercent, diskWhereInput.remainingLifePercent) &&
        equalsNullable(this.remainingLifePercentGt, diskWhereInput.remainingLifePercentGt) &&
        equalsNullable(this.remainingLifePercentGte, diskWhereInput.remainingLifePercentGte) &&
        equalsNullable(this.remainingLifePercentIn, diskWhereInput.remainingLifePercentIn) &&
        equalsNullable(this.remainingLifePercentLt, diskWhereInput.remainingLifePercentLt) &&
        equalsNullable(this.remainingLifePercentLte, diskWhereInput.remainingLifePercentLte) &&
        equalsNullable(this.remainingLifePercentNot, diskWhereInput.remainingLifePercentNot) &&
        equalsNullable(this.remainingLifePercentNotIn, diskWhereInput.remainingLifePercentNotIn) &&
        equalsNullable(this.serial, diskWhereInput.serial) &&
        equalsNullable(this.serialContains, diskWhereInput.serialContains) &&
        equalsNullable(this.serialEndsWith, diskWhereInput.serialEndsWith) &&
        equalsNullable(this.serialGt, diskWhereInput.serialGt) &&
        equalsNullable(this.serialGte, diskWhereInput.serialGte) &&
        equalsNullable(this.serialIn, diskWhereInput.serialIn) &&
        equalsNullable(this.serialLt, diskWhereInput.serialLt) &&
        equalsNullable(this.serialLte, diskWhereInput.serialLte) &&
        equalsNullable(this.serialNot, diskWhereInput.serialNot) &&
        equalsNullable(this.serialNotContains, diskWhereInput.serialNotContains) &&
        equalsNullable(this.serialNotEndsWith, diskWhereInput.serialNotEndsWith) &&
        equalsNullable(this.serialNotIn, diskWhereInput.serialNotIn) &&
        equalsNullable(this.serialNotStartsWith, diskWhereInput.serialNotStartsWith) &&
        equalsNullable(this.serialStartsWith, diskWhereInput.serialStartsWith) &&
        equalsNullable(this.size, diskWhereInput.size) &&
        equalsNullable(this.sizeGt, diskWhereInput.sizeGt) &&
        equalsNullable(this.sizeGte, diskWhereInput.sizeGte) &&
        equalsNullable(this.sizeIn, diskWhereInput.sizeIn) &&
        equalsNullable(this.sizeLt, diskWhereInput.sizeLt) &&
        equalsNullable(this.sizeLte, diskWhereInput.sizeLte) &&
        equalsNullable(this.sizeNot, diskWhereInput.sizeNot) &&
        equalsNullable(this.sizeNotIn, diskWhereInput.sizeNotIn) &&
        equalsNullable(this.type, diskWhereInput.type) &&
        equalsNullable(this.typeIn, diskWhereInput.typeIn) &&
        equalsNullable(this.typeNot, diskWhereInput.typeNot) &&
        equalsNullable(this.typeNotIn, diskWhereInput.typeNotIn) &&
        equalsNullable(this.usage, diskWhereInput.usage) &&
        equalsNullable(this.usageIn, diskWhereInput.usageIn) &&
        equalsNullable(this.usageNot, diskWhereInput.usageNot) &&
        equalsNullable(this.usageNotIn, diskWhereInput.usageNotIn) &&
        equalsNullable(this.usageStatus, diskWhereInput.usageStatus) &&
        equalsNullable(this.usageStatusIn, diskWhereInput.usageStatusIn) &&
        equalsNullable(this.usageStatusNot, diskWhereInput.usageStatusNot) &&
        equalsNullable(this.usageStatusNotIn, diskWhereInput.usageStatusNotIn);
  }

  private static <T> boolean equalsNullable(JsonNullable<T> a, JsonNullable<T> b) {
    return a == b || (a != null && b != null && a.isPresent() && b.isPresent() && Objects.deepEquals(a.get(), b.get()));
  }

  @Override
  public int hashCode() {
    return Objects.hash(hashCodeNullable(AND), hashCodeNullable(entityAsyncStatus), hashCodeNullable(entityAsyncStatusIn), hashCodeNullable(entityAsyncStatusNot), hashCodeNullable(entityAsyncStatusNotIn), hashCodeNullable(firmware), hashCodeNullable(firmwareContains), hashCodeNullable(firmwareEndsWith), hashCodeNullable(firmwareGt), hashCodeNullable(firmwareGte), hashCodeNullable(firmwareIn), hashCodeNullable(firmwareLt), hashCodeNullable(firmwareLte), hashCodeNullable(firmwareNot), hashCodeNullable(firmwareNotContains), hashCodeNullable(firmwareNotEndsWith), hashCodeNullable(firmwareNotIn), hashCodeNullable(firmwareNotStartsWith), hashCodeNullable(firmwareStartsWith), hashCodeNullable(function), hashCodeNullable(functionIn), hashCodeNullable(functionNot), hashCodeNullable(functionNotIn), hashCodeNullable(healthStatus), hashCodeNullable(healthStatusIn), hashCodeNullable(healthStatusNot), hashCodeNullable(healthStatusNotIn), hashCodeNullable(healthy), hashCodeNullable(healthyNot), hashCodeNullable(host), hashCodeNullable(id), hashCodeNullable(idContains), hashCodeNullable(idEndsWith), hashCodeNullable(idGt), hashCodeNullable(idGte), hashCodeNullable(idIn), hashCodeNullable(idLt), hashCodeNullable(idLte), hashCodeNullable(idNot), hashCodeNullable(idNotContains), hashCodeNullable(idNotEndsWith), hashCodeNullable(idNotIn), hashCodeNullable(idNotStartsWith), hashCodeNullable(idStartsWith), hashCodeNullable(labelsEvery), hashCodeNullable(labelsNone), hashCodeNullable(labelsSome), hashCodeNullable(localId), hashCodeNullable(localIdContains), hashCodeNullable(localIdEndsWith), hashCodeNullable(localIdGt), hashCodeNullable(localIdGte), hashCodeNullable(localIdIn), hashCodeNullable(localIdLt), hashCodeNullable(localIdLte), hashCodeNullable(localIdNot), hashCodeNullable(localIdNotContains), hashCodeNullable(localIdNotEndsWith), hashCodeNullable(localIdNotIn), hashCodeNullable(localIdNotStartsWith), hashCodeNullable(localIdStartsWith), hashCodeNullable(model), hashCodeNullable(modelContains), hashCodeNullable(modelEndsWith), hashCodeNullable(modelGt), hashCodeNullable(modelGte), hashCodeNullable(modelIn), hashCodeNullable(modelLt), hashCodeNullable(modelLte), hashCodeNullable(modelNot), hashCodeNullable(modelNotContains), hashCodeNullable(modelNotEndsWith), hashCodeNullable(modelNotIn), hashCodeNullable(modelNotStartsWith), hashCodeNullable(modelStartsWith), hashCodeNullable(mounted), hashCodeNullable(mountedNot), hashCodeNullable(name), hashCodeNullable(nameContains), hashCodeNullable(nameEndsWith), hashCodeNullable(nameGt), hashCodeNullable(nameGte), hashCodeNullable(nameIn), hashCodeNullable(nameLt), hashCodeNullable(nameLte), hashCodeNullable(nameNot), hashCodeNullable(nameNotContains), hashCodeNullable(nameNotEndsWith), hashCodeNullable(nameNotIn), hashCodeNullable(nameNotStartsWith), hashCodeNullable(nameStartsWith), hashCodeNullable(NOT), hashCodeNullable(numaNode), hashCodeNullable(numaNodeGt), hashCodeNullable(numaNodeGte), hashCodeNullable(numaNodeIn), hashCodeNullable(numaNodeLt), hashCodeNullable(numaNodeLte), hashCodeNullable(numaNodeNot), hashCodeNullable(numaNodeNotIn), hashCodeNullable(offline), hashCodeNullable(offlineNot), hashCodeNullable(OR), hashCodeNullable(path), hashCodeNullable(pathContains), hashCodeNullable(pathEndsWith), hashCodeNullable(pathGt), hashCodeNullable(pathGte), hashCodeNullable(pathIn), hashCodeNullable(pathLt), hashCodeNullable(pathLte), hashCodeNullable(pathNot), hashCodeNullable(pathNotContains), hashCodeNullable(pathNotEndsWith), hashCodeNullable(pathNotIn), hashCodeNullable(pathNotStartsWith), hashCodeNullable(pathStartsWith), hashCodeNullable(persistentMemoryType), hashCodeNullable(persistentMemoryTypeContains), hashCodeNullable(persistentMemoryTypeEndsWith), hashCodeNullable(persistentMemoryTypeGt), hashCodeNullable(persistentMemoryTypeGte), hashCodeNullable(persistentMemoryTypeIn), hashCodeNullable(persistentMemoryTypeLt), hashCodeNullable(persistentMemoryTypeLte), hashCodeNullable(persistentMemoryTypeNot), hashCodeNullable(persistentMemoryTypeNotContains), hashCodeNullable(persistentMemoryTypeNotEndsWith), hashCodeNullable(persistentMemoryTypeNotIn), hashCodeNullable(persistentMemoryTypeNotStartsWith), hashCodeNullable(persistentMemoryTypeStartsWith), hashCodeNullable(physicalSlotOnBrick), hashCodeNullable(physicalSlotOnBrickGt), hashCodeNullable(physicalSlotOnBrickGte), hashCodeNullable(physicalSlotOnBrickIn), hashCodeNullable(physicalSlotOnBrickLt), hashCodeNullable(physicalSlotOnBrickLte), hashCodeNullable(physicalSlotOnBrickNot), hashCodeNullable(physicalSlotOnBrickNotIn), hashCodeNullable(pmemDimmsEvery), hashCodeNullable(pmemDimmsNone), hashCodeNullable(pmemDimmsSome), hashCodeNullable(recommendedUsage), hashCodeNullable(recommendedUsageIn), hashCodeNullable(recommendedUsageNot), hashCodeNullable(recommendedUsageNotIn), hashCodeNullable(remainingLifePercent), hashCodeNullable(remainingLifePercentGt), hashCodeNullable(remainingLifePercentGte), hashCodeNullable(remainingLifePercentIn), hashCodeNullable(remainingLifePercentLt), hashCodeNullable(remainingLifePercentLte), hashCodeNullable(remainingLifePercentNot), hashCodeNullable(remainingLifePercentNotIn), hashCodeNullable(serial), hashCodeNullable(serialContains), hashCodeNullable(serialEndsWith), hashCodeNullable(serialGt), hashCodeNullable(serialGte), hashCodeNullable(serialIn), hashCodeNullable(serialLt), hashCodeNullable(serialLte), hashCodeNullable(serialNot), hashCodeNullable(serialNotContains), hashCodeNullable(serialNotEndsWith), hashCodeNullable(serialNotIn), hashCodeNullable(serialNotStartsWith), hashCodeNullable(serialStartsWith), hashCodeNullable(size), hashCodeNullable(sizeGt), hashCodeNullable(sizeGte), hashCodeNullable(sizeIn), hashCodeNullable(sizeLt), hashCodeNullable(sizeLte), hashCodeNullable(sizeNot), hashCodeNullable(sizeNotIn), hashCodeNullable(type), hashCodeNullable(typeIn), hashCodeNullable(typeNot), hashCodeNullable(typeNotIn), hashCodeNullable(usage), hashCodeNullable(usageIn), hashCodeNullable(usageNot), hashCodeNullable(usageNotIn), hashCodeNullable(usageStatus), hashCodeNullable(usageStatusIn), hashCodeNullable(usageStatusNot), hashCodeNullable(usageStatusNotIn));
  }

  private static <T> int hashCodeNullable(JsonNullable<T> a) {
    if (a == null) {
      return 1;
    }
    return a.isPresent() ? Arrays.deepHashCode(new Object[]{a.get()}) : 31;
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class DiskWhereInput {\n");
    sb.append("    AND: ").append(toIndentedString(AND)).append("\n");
    sb.append("    entityAsyncStatus: ").append(toIndentedString(entityAsyncStatus)).append("\n");
    sb.append("    entityAsyncStatusIn: ").append(toIndentedString(entityAsyncStatusIn)).append("\n");
    sb.append("    entityAsyncStatusNot: ").append(toIndentedString(entityAsyncStatusNot)).append("\n");
    sb.append("    entityAsyncStatusNotIn: ").append(toIndentedString(entityAsyncStatusNotIn)).append("\n");
    sb.append("    firmware: ").append(toIndentedString(firmware)).append("\n");
    sb.append("    firmwareContains: ").append(toIndentedString(firmwareContains)).append("\n");
    sb.append("    firmwareEndsWith: ").append(toIndentedString(firmwareEndsWith)).append("\n");
    sb.append("    firmwareGt: ").append(toIndentedString(firmwareGt)).append("\n");
    sb.append("    firmwareGte: ").append(toIndentedString(firmwareGte)).append("\n");
    sb.append("    firmwareIn: ").append(toIndentedString(firmwareIn)).append("\n");
    sb.append("    firmwareLt: ").append(toIndentedString(firmwareLt)).append("\n");
    sb.append("    firmwareLte: ").append(toIndentedString(firmwareLte)).append("\n");
    sb.append("    firmwareNot: ").append(toIndentedString(firmwareNot)).append("\n");
    sb.append("    firmwareNotContains: ").append(toIndentedString(firmwareNotContains)).append("\n");
    sb.append("    firmwareNotEndsWith: ").append(toIndentedString(firmwareNotEndsWith)).append("\n");
    sb.append("    firmwareNotIn: ").append(toIndentedString(firmwareNotIn)).append("\n");
    sb.append("    firmwareNotStartsWith: ").append(toIndentedString(firmwareNotStartsWith)).append("\n");
    sb.append("    firmwareStartsWith: ").append(toIndentedString(firmwareStartsWith)).append("\n");
    sb.append("    function: ").append(toIndentedString(function)).append("\n");
    sb.append("    functionIn: ").append(toIndentedString(functionIn)).append("\n");
    sb.append("    functionNot: ").append(toIndentedString(functionNot)).append("\n");
    sb.append("    functionNotIn: ").append(toIndentedString(functionNotIn)).append("\n");
    sb.append("    healthStatus: ").append(toIndentedString(healthStatus)).append("\n");
    sb.append("    healthStatusIn: ").append(toIndentedString(healthStatusIn)).append("\n");
    sb.append("    healthStatusNot: ").append(toIndentedString(healthStatusNot)).append("\n");
    sb.append("    healthStatusNotIn: ").append(toIndentedString(healthStatusNotIn)).append("\n");
    sb.append("    healthy: ").append(toIndentedString(healthy)).append("\n");
    sb.append("    healthyNot: ").append(toIndentedString(healthyNot)).append("\n");
    sb.append("    host: ").append(toIndentedString(host)).append("\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    idContains: ").append(toIndentedString(idContains)).append("\n");
    sb.append("    idEndsWith: ").append(toIndentedString(idEndsWith)).append("\n");
    sb.append("    idGt: ").append(toIndentedString(idGt)).append("\n");
    sb.append("    idGte: ").append(toIndentedString(idGte)).append("\n");
    sb.append("    idIn: ").append(toIndentedString(idIn)).append("\n");
    sb.append("    idLt: ").append(toIndentedString(idLt)).append("\n");
    sb.append("    idLte: ").append(toIndentedString(idLte)).append("\n");
    sb.append("    idNot: ").append(toIndentedString(idNot)).append("\n");
    sb.append("    idNotContains: ").append(toIndentedString(idNotContains)).append("\n");
    sb.append("    idNotEndsWith: ").append(toIndentedString(idNotEndsWith)).append("\n");
    sb.append("    idNotIn: ").append(toIndentedString(idNotIn)).append("\n");
    sb.append("    idNotStartsWith: ").append(toIndentedString(idNotStartsWith)).append("\n");
    sb.append("    idStartsWith: ").append(toIndentedString(idStartsWith)).append("\n");
    sb.append("    labelsEvery: ").append(toIndentedString(labelsEvery)).append("\n");
    sb.append("    labelsNone: ").append(toIndentedString(labelsNone)).append("\n");
    sb.append("    labelsSome: ").append(toIndentedString(labelsSome)).append("\n");
    sb.append("    localId: ").append(toIndentedString(localId)).append("\n");
    sb.append("    localIdContains: ").append(toIndentedString(localIdContains)).append("\n");
    sb.append("    localIdEndsWith: ").append(toIndentedString(localIdEndsWith)).append("\n");
    sb.append("    localIdGt: ").append(toIndentedString(localIdGt)).append("\n");
    sb.append("    localIdGte: ").append(toIndentedString(localIdGte)).append("\n");
    sb.append("    localIdIn: ").append(toIndentedString(localIdIn)).append("\n");
    sb.append("    localIdLt: ").append(toIndentedString(localIdLt)).append("\n");
    sb.append("    localIdLte: ").append(toIndentedString(localIdLte)).append("\n");
    sb.append("    localIdNot: ").append(toIndentedString(localIdNot)).append("\n");
    sb.append("    localIdNotContains: ").append(toIndentedString(localIdNotContains)).append("\n");
    sb.append("    localIdNotEndsWith: ").append(toIndentedString(localIdNotEndsWith)).append("\n");
    sb.append("    localIdNotIn: ").append(toIndentedString(localIdNotIn)).append("\n");
    sb.append("    localIdNotStartsWith: ").append(toIndentedString(localIdNotStartsWith)).append("\n");
    sb.append("    localIdStartsWith: ").append(toIndentedString(localIdStartsWith)).append("\n");
    sb.append("    model: ").append(toIndentedString(model)).append("\n");
    sb.append("    modelContains: ").append(toIndentedString(modelContains)).append("\n");
    sb.append("    modelEndsWith: ").append(toIndentedString(modelEndsWith)).append("\n");
    sb.append("    modelGt: ").append(toIndentedString(modelGt)).append("\n");
    sb.append("    modelGte: ").append(toIndentedString(modelGte)).append("\n");
    sb.append("    modelIn: ").append(toIndentedString(modelIn)).append("\n");
    sb.append("    modelLt: ").append(toIndentedString(modelLt)).append("\n");
    sb.append("    modelLte: ").append(toIndentedString(modelLte)).append("\n");
    sb.append("    modelNot: ").append(toIndentedString(modelNot)).append("\n");
    sb.append("    modelNotContains: ").append(toIndentedString(modelNotContains)).append("\n");
    sb.append("    modelNotEndsWith: ").append(toIndentedString(modelNotEndsWith)).append("\n");
    sb.append("    modelNotIn: ").append(toIndentedString(modelNotIn)).append("\n");
    sb.append("    modelNotStartsWith: ").append(toIndentedString(modelNotStartsWith)).append("\n");
    sb.append("    modelStartsWith: ").append(toIndentedString(modelStartsWith)).append("\n");
    sb.append("    mounted: ").append(toIndentedString(mounted)).append("\n");
    sb.append("    mountedNot: ").append(toIndentedString(mountedNot)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    nameContains: ").append(toIndentedString(nameContains)).append("\n");
    sb.append("    nameEndsWith: ").append(toIndentedString(nameEndsWith)).append("\n");
    sb.append("    nameGt: ").append(toIndentedString(nameGt)).append("\n");
    sb.append("    nameGte: ").append(toIndentedString(nameGte)).append("\n");
    sb.append("    nameIn: ").append(toIndentedString(nameIn)).append("\n");
    sb.append("    nameLt: ").append(toIndentedString(nameLt)).append("\n");
    sb.append("    nameLte: ").append(toIndentedString(nameLte)).append("\n");
    sb.append("    nameNot: ").append(toIndentedString(nameNot)).append("\n");
    sb.append("    nameNotContains: ").append(toIndentedString(nameNotContains)).append("\n");
    sb.append("    nameNotEndsWith: ").append(toIndentedString(nameNotEndsWith)).append("\n");
    sb.append("    nameNotIn: ").append(toIndentedString(nameNotIn)).append("\n");
    sb.append("    nameNotStartsWith: ").append(toIndentedString(nameNotStartsWith)).append("\n");
    sb.append("    nameStartsWith: ").append(toIndentedString(nameStartsWith)).append("\n");
    sb.append("    NOT: ").append(toIndentedString(NOT)).append("\n");
    sb.append("    numaNode: ").append(toIndentedString(numaNode)).append("\n");
    sb.append("    numaNodeGt: ").append(toIndentedString(numaNodeGt)).append("\n");
    sb.append("    numaNodeGte: ").append(toIndentedString(numaNodeGte)).append("\n");
    sb.append("    numaNodeIn: ").append(toIndentedString(numaNodeIn)).append("\n");
    sb.append("    numaNodeLt: ").append(toIndentedString(numaNodeLt)).append("\n");
    sb.append("    numaNodeLte: ").append(toIndentedString(numaNodeLte)).append("\n");
    sb.append("    numaNodeNot: ").append(toIndentedString(numaNodeNot)).append("\n");
    sb.append("    numaNodeNotIn: ").append(toIndentedString(numaNodeNotIn)).append("\n");
    sb.append("    offline: ").append(toIndentedString(offline)).append("\n");
    sb.append("    offlineNot: ").append(toIndentedString(offlineNot)).append("\n");
    sb.append("    OR: ").append(toIndentedString(OR)).append("\n");
    sb.append("    path: ").append(toIndentedString(path)).append("\n");
    sb.append("    pathContains: ").append(toIndentedString(pathContains)).append("\n");
    sb.append("    pathEndsWith: ").append(toIndentedString(pathEndsWith)).append("\n");
    sb.append("    pathGt: ").append(toIndentedString(pathGt)).append("\n");
    sb.append("    pathGte: ").append(toIndentedString(pathGte)).append("\n");
    sb.append("    pathIn: ").append(toIndentedString(pathIn)).append("\n");
    sb.append("    pathLt: ").append(toIndentedString(pathLt)).append("\n");
    sb.append("    pathLte: ").append(toIndentedString(pathLte)).append("\n");
    sb.append("    pathNot: ").append(toIndentedString(pathNot)).append("\n");
    sb.append("    pathNotContains: ").append(toIndentedString(pathNotContains)).append("\n");
    sb.append("    pathNotEndsWith: ").append(toIndentedString(pathNotEndsWith)).append("\n");
    sb.append("    pathNotIn: ").append(toIndentedString(pathNotIn)).append("\n");
    sb.append("    pathNotStartsWith: ").append(toIndentedString(pathNotStartsWith)).append("\n");
    sb.append("    pathStartsWith: ").append(toIndentedString(pathStartsWith)).append("\n");
    sb.append("    persistentMemoryType: ").append(toIndentedString(persistentMemoryType)).append("\n");
    sb.append("    persistentMemoryTypeContains: ").append(toIndentedString(persistentMemoryTypeContains)).append("\n");
    sb.append("    persistentMemoryTypeEndsWith: ").append(toIndentedString(persistentMemoryTypeEndsWith)).append("\n");
    sb.append("    persistentMemoryTypeGt: ").append(toIndentedString(persistentMemoryTypeGt)).append("\n");
    sb.append("    persistentMemoryTypeGte: ").append(toIndentedString(persistentMemoryTypeGte)).append("\n");
    sb.append("    persistentMemoryTypeIn: ").append(toIndentedString(persistentMemoryTypeIn)).append("\n");
    sb.append("    persistentMemoryTypeLt: ").append(toIndentedString(persistentMemoryTypeLt)).append("\n");
    sb.append("    persistentMemoryTypeLte: ").append(toIndentedString(persistentMemoryTypeLte)).append("\n");
    sb.append("    persistentMemoryTypeNot: ").append(toIndentedString(persistentMemoryTypeNot)).append("\n");
    sb.append("    persistentMemoryTypeNotContains: ").append(toIndentedString(persistentMemoryTypeNotContains)).append("\n");
    sb.append("    persistentMemoryTypeNotEndsWith: ").append(toIndentedString(persistentMemoryTypeNotEndsWith)).append("\n");
    sb.append("    persistentMemoryTypeNotIn: ").append(toIndentedString(persistentMemoryTypeNotIn)).append("\n");
    sb.append("    persistentMemoryTypeNotStartsWith: ").append(toIndentedString(persistentMemoryTypeNotStartsWith)).append("\n");
    sb.append("    persistentMemoryTypeStartsWith: ").append(toIndentedString(persistentMemoryTypeStartsWith)).append("\n");
    sb.append("    physicalSlotOnBrick: ").append(toIndentedString(physicalSlotOnBrick)).append("\n");
    sb.append("    physicalSlotOnBrickGt: ").append(toIndentedString(physicalSlotOnBrickGt)).append("\n");
    sb.append("    physicalSlotOnBrickGte: ").append(toIndentedString(physicalSlotOnBrickGte)).append("\n");
    sb.append("    physicalSlotOnBrickIn: ").append(toIndentedString(physicalSlotOnBrickIn)).append("\n");
    sb.append("    physicalSlotOnBrickLt: ").append(toIndentedString(physicalSlotOnBrickLt)).append("\n");
    sb.append("    physicalSlotOnBrickLte: ").append(toIndentedString(physicalSlotOnBrickLte)).append("\n");
    sb.append("    physicalSlotOnBrickNot: ").append(toIndentedString(physicalSlotOnBrickNot)).append("\n");
    sb.append("    physicalSlotOnBrickNotIn: ").append(toIndentedString(physicalSlotOnBrickNotIn)).append("\n");
    sb.append("    pmemDimmsEvery: ").append(toIndentedString(pmemDimmsEvery)).append("\n");
    sb.append("    pmemDimmsNone: ").append(toIndentedString(pmemDimmsNone)).append("\n");
    sb.append("    pmemDimmsSome: ").append(toIndentedString(pmemDimmsSome)).append("\n");
    sb.append("    recommendedUsage: ").append(toIndentedString(recommendedUsage)).append("\n");
    sb.append("    recommendedUsageIn: ").append(toIndentedString(recommendedUsageIn)).append("\n");
    sb.append("    recommendedUsageNot: ").append(toIndentedString(recommendedUsageNot)).append("\n");
    sb.append("    recommendedUsageNotIn: ").append(toIndentedString(recommendedUsageNotIn)).append("\n");
    sb.append("    remainingLifePercent: ").append(toIndentedString(remainingLifePercent)).append("\n");
    sb.append("    remainingLifePercentGt: ").append(toIndentedString(remainingLifePercentGt)).append("\n");
    sb.append("    remainingLifePercentGte: ").append(toIndentedString(remainingLifePercentGte)).append("\n");
    sb.append("    remainingLifePercentIn: ").append(toIndentedString(remainingLifePercentIn)).append("\n");
    sb.append("    remainingLifePercentLt: ").append(toIndentedString(remainingLifePercentLt)).append("\n");
    sb.append("    remainingLifePercentLte: ").append(toIndentedString(remainingLifePercentLte)).append("\n");
    sb.append("    remainingLifePercentNot: ").append(toIndentedString(remainingLifePercentNot)).append("\n");
    sb.append("    remainingLifePercentNotIn: ").append(toIndentedString(remainingLifePercentNotIn)).append("\n");
    sb.append("    serial: ").append(toIndentedString(serial)).append("\n");
    sb.append("    serialContains: ").append(toIndentedString(serialContains)).append("\n");
    sb.append("    serialEndsWith: ").append(toIndentedString(serialEndsWith)).append("\n");
    sb.append("    serialGt: ").append(toIndentedString(serialGt)).append("\n");
    sb.append("    serialGte: ").append(toIndentedString(serialGte)).append("\n");
    sb.append("    serialIn: ").append(toIndentedString(serialIn)).append("\n");
    sb.append("    serialLt: ").append(toIndentedString(serialLt)).append("\n");
    sb.append("    serialLte: ").append(toIndentedString(serialLte)).append("\n");
    sb.append("    serialNot: ").append(toIndentedString(serialNot)).append("\n");
    sb.append("    serialNotContains: ").append(toIndentedString(serialNotContains)).append("\n");
    sb.append("    serialNotEndsWith: ").append(toIndentedString(serialNotEndsWith)).append("\n");
    sb.append("    serialNotIn: ").append(toIndentedString(serialNotIn)).append("\n");
    sb.append("    serialNotStartsWith: ").append(toIndentedString(serialNotStartsWith)).append("\n");
    sb.append("    serialStartsWith: ").append(toIndentedString(serialStartsWith)).append("\n");
    sb.append("    size: ").append(toIndentedString(size)).append("\n");
    sb.append("    sizeGt: ").append(toIndentedString(sizeGt)).append("\n");
    sb.append("    sizeGte: ").append(toIndentedString(sizeGte)).append("\n");
    sb.append("    sizeIn: ").append(toIndentedString(sizeIn)).append("\n");
    sb.append("    sizeLt: ").append(toIndentedString(sizeLt)).append("\n");
    sb.append("    sizeLte: ").append(toIndentedString(sizeLte)).append("\n");
    sb.append("    sizeNot: ").append(toIndentedString(sizeNot)).append("\n");
    sb.append("    sizeNotIn: ").append(toIndentedString(sizeNotIn)).append("\n");
    sb.append("    type: ").append(toIndentedString(type)).append("\n");
    sb.append("    typeIn: ").append(toIndentedString(typeIn)).append("\n");
    sb.append("    typeNot: ").append(toIndentedString(typeNot)).append("\n");
    sb.append("    typeNotIn: ").append(toIndentedString(typeNotIn)).append("\n");
    sb.append("    usage: ").append(toIndentedString(usage)).append("\n");
    sb.append("    usageIn: ").append(toIndentedString(usageIn)).append("\n");
    sb.append("    usageNot: ").append(toIndentedString(usageNot)).append("\n");
    sb.append("    usageNotIn: ").append(toIndentedString(usageNotIn)).append("\n");
    sb.append("    usageStatus: ").append(toIndentedString(usageStatus)).append("\n");
    sb.append("    usageStatusIn: ").append(toIndentedString(usageStatusIn)).append("\n");
    sb.append("    usageStatusNot: ").append(toIndentedString(usageStatusNot)).append("\n");
    sb.append("    usageStatusNotIn: ").append(toIndentedString(usageStatusNotIn)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

