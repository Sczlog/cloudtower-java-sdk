/*
 * Tower SDK API
 * cloudtower operation API and SDK
 *
 * The version of the OpenAPI document: 1.7.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.smartx.tower.model;

import java.util.Objects;
import java.util.Arrays;
import java.util.Map;
import java.util.HashMap;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import com.smartx.tower.model.ClusterWhereInput;
import com.smartx.tower.model.HostWhereInput;
import com.smartx.tower.model.IscsiTargetWhereInput;
import com.smartx.tower.model.NvmfSubsystemWhereInput;
import com.smartx.tower.model.StoreConnectionType;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.util.ArrayList;
import java.util.List;
import org.openapitools.jackson.nullable.JsonNullable;
import com.fasterxml.jackson.annotation.JsonIgnore;
import org.openapitools.jackson.nullable.JsonNullable;
import java.util.NoSuchElementException;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;


/**
 * IscsiConnectionWhereInput
 */
@JsonPropertyOrder({
  IscsiConnectionWhereInput.JSON_PROPERTY_A_N_D,
  IscsiConnectionWhereInput.JSON_PROPERTY_CLIENT_PORT,
  IscsiConnectionWhereInput.JSON_PROPERTY_CLIENT_PORT_GT,
  IscsiConnectionWhereInput.JSON_PROPERTY_CLIENT_PORT_GTE,
  IscsiConnectionWhereInput.JSON_PROPERTY_CLIENT_PORT_IN,
  IscsiConnectionWhereInput.JSON_PROPERTY_CLIENT_PORT_LT,
  IscsiConnectionWhereInput.JSON_PROPERTY_CLIENT_PORT_LTE,
  IscsiConnectionWhereInput.JSON_PROPERTY_CLIENT_PORT_NOT,
  IscsiConnectionWhereInput.JSON_PROPERTY_CLIENT_PORT_NOT_IN,
  IscsiConnectionWhereInput.JSON_PROPERTY_CLUSTER,
  IscsiConnectionWhereInput.JSON_PROPERTY_HOST,
  IscsiConnectionWhereInput.JSON_PROPERTY_ID,
  IscsiConnectionWhereInput.JSON_PROPERTY_ID_CONTAINS,
  IscsiConnectionWhereInput.JSON_PROPERTY_ID_ENDS_WITH,
  IscsiConnectionWhereInput.JSON_PROPERTY_ID_GT,
  IscsiConnectionWhereInput.JSON_PROPERTY_ID_GTE,
  IscsiConnectionWhereInput.JSON_PROPERTY_ID_IN,
  IscsiConnectionWhereInput.JSON_PROPERTY_ID_LT,
  IscsiConnectionWhereInput.JSON_PROPERTY_ID_LTE,
  IscsiConnectionWhereInput.JSON_PROPERTY_ID_NOT,
  IscsiConnectionWhereInput.JSON_PROPERTY_ID_NOT_CONTAINS,
  IscsiConnectionWhereInput.JSON_PROPERTY_ID_NOT_ENDS_WITH,
  IscsiConnectionWhereInput.JSON_PROPERTY_ID_NOT_IN,
  IscsiConnectionWhereInput.JSON_PROPERTY_ID_NOT_STARTS_WITH,
  IscsiConnectionWhereInput.JSON_PROPERTY_ID_STARTS_WITH,
  IscsiConnectionWhereInput.JSON_PROPERTY_INITIATOR_IP,
  IscsiConnectionWhereInput.JSON_PROPERTY_INITIATOR_IP_CONTAINS,
  IscsiConnectionWhereInput.JSON_PROPERTY_INITIATOR_IP_ENDS_WITH,
  IscsiConnectionWhereInput.JSON_PROPERTY_INITIATOR_IP_GT,
  IscsiConnectionWhereInput.JSON_PROPERTY_INITIATOR_IP_GTE,
  IscsiConnectionWhereInput.JSON_PROPERTY_INITIATOR_IP_IN,
  IscsiConnectionWhereInput.JSON_PROPERTY_INITIATOR_IP_LT,
  IscsiConnectionWhereInput.JSON_PROPERTY_INITIATOR_IP_LTE,
  IscsiConnectionWhereInput.JSON_PROPERTY_INITIATOR_IP_NOT,
  IscsiConnectionWhereInput.JSON_PROPERTY_INITIATOR_IP_NOT_CONTAINS,
  IscsiConnectionWhereInput.JSON_PROPERTY_INITIATOR_IP_NOT_ENDS_WITH,
  IscsiConnectionWhereInput.JSON_PROPERTY_INITIATOR_IP_NOT_IN,
  IscsiConnectionWhereInput.JSON_PROPERTY_INITIATOR_IP_NOT_STARTS_WITH,
  IscsiConnectionWhereInput.JSON_PROPERTY_INITIATOR_IP_STARTS_WITH,
  IscsiConnectionWhereInput.JSON_PROPERTY_ISCSI_TARGET,
  IscsiConnectionWhereInput.JSON_PROPERTY_N_O_T,
  IscsiConnectionWhereInput.JSON_PROPERTY_NVMF_SUBSYSTEM,
  IscsiConnectionWhereInput.JSON_PROPERTY_O_R,
  IscsiConnectionWhereInput.JSON_PROPERTY_TYPE,
  IscsiConnectionWhereInput.JSON_PROPERTY_TYPE_IN,
  IscsiConnectionWhereInput.JSON_PROPERTY_TYPE_NOT,
  IscsiConnectionWhereInput.JSON_PROPERTY_TYPE_NOT_IN
})
@javax.annotation.processing.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2021-10-27T15:59:14.939791800+08:00[Asia/Shanghai]")
public class IscsiConnectionWhereInput {
  public static final String JSON_PROPERTY_A_N_D = "AND";
  private JsonNullable<List<IscsiConnectionWhereInput>> AND = JsonNullable.<List<IscsiConnectionWhereInput>>undefined();

  public static final String JSON_PROPERTY_CLIENT_PORT = "client_port";
  private JsonNullable<Double> clientPort = JsonNullable.<Double>undefined();

  public static final String JSON_PROPERTY_CLIENT_PORT_GT = "client_port_gt";
  private JsonNullable<Double> clientPortGt = JsonNullable.<Double>undefined();

  public static final String JSON_PROPERTY_CLIENT_PORT_GTE = "client_port_gte";
  private JsonNullable<Double> clientPortGte = JsonNullable.<Double>undefined();

  public static final String JSON_PROPERTY_CLIENT_PORT_IN = "client_port_in";
  private JsonNullable<List<Double>> clientPortIn = JsonNullable.<List<Double>>undefined();

  public static final String JSON_PROPERTY_CLIENT_PORT_LT = "client_port_lt";
  private JsonNullable<Double> clientPortLt = JsonNullable.<Double>undefined();

  public static final String JSON_PROPERTY_CLIENT_PORT_LTE = "client_port_lte";
  private JsonNullable<Double> clientPortLte = JsonNullable.<Double>undefined();

  public static final String JSON_PROPERTY_CLIENT_PORT_NOT = "client_port_not";
  private JsonNullable<Double> clientPortNot = JsonNullable.<Double>undefined();

  public static final String JSON_PROPERTY_CLIENT_PORT_NOT_IN = "client_port_not_in";
  private JsonNullable<List<Double>> clientPortNotIn = JsonNullable.<List<Double>>undefined();

  public static final String JSON_PROPERTY_CLUSTER = "cluster";
  private JsonNullable<ClusterWhereInput> cluster = JsonNullable.<ClusterWhereInput>undefined();

  public static final String JSON_PROPERTY_HOST = "host";
  private JsonNullable<HostWhereInput> host = JsonNullable.<HostWhereInput>undefined();

  public static final String JSON_PROPERTY_ID = "id";
  private JsonNullable<String> id = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_ID_CONTAINS = "id_contains";
  private JsonNullable<String> idContains = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_ID_ENDS_WITH = "id_ends_with";
  private JsonNullable<String> idEndsWith = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_ID_GT = "id_gt";
  private JsonNullable<String> idGt = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_ID_GTE = "id_gte";
  private JsonNullable<String> idGte = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_ID_IN = "id_in";
  private JsonNullable<List<String>> idIn = JsonNullable.<List<String>>undefined();

  public static final String JSON_PROPERTY_ID_LT = "id_lt";
  private JsonNullable<String> idLt = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_ID_LTE = "id_lte";
  private JsonNullable<String> idLte = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_ID_NOT = "id_not";
  private JsonNullable<String> idNot = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_ID_NOT_CONTAINS = "id_not_contains";
  private JsonNullable<String> idNotContains = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_ID_NOT_ENDS_WITH = "id_not_ends_with";
  private JsonNullable<String> idNotEndsWith = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_ID_NOT_IN = "id_not_in";
  private JsonNullable<List<String>> idNotIn = JsonNullable.<List<String>>undefined();

  public static final String JSON_PROPERTY_ID_NOT_STARTS_WITH = "id_not_starts_with";
  private JsonNullable<String> idNotStartsWith = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_ID_STARTS_WITH = "id_starts_with";
  private JsonNullable<String> idStartsWith = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_INITIATOR_IP = "initiator_ip";
  private JsonNullable<String> initiatorIp = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_INITIATOR_IP_CONTAINS = "initiator_ip_contains";
  private JsonNullable<String> initiatorIpContains = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_INITIATOR_IP_ENDS_WITH = "initiator_ip_ends_with";
  private JsonNullable<String> initiatorIpEndsWith = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_INITIATOR_IP_GT = "initiator_ip_gt";
  private JsonNullable<String> initiatorIpGt = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_INITIATOR_IP_GTE = "initiator_ip_gte";
  private JsonNullable<String> initiatorIpGte = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_INITIATOR_IP_IN = "initiator_ip_in";
  private JsonNullable<List<String>> initiatorIpIn = JsonNullable.<List<String>>undefined();

  public static final String JSON_PROPERTY_INITIATOR_IP_LT = "initiator_ip_lt";
  private JsonNullable<String> initiatorIpLt = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_INITIATOR_IP_LTE = "initiator_ip_lte";
  private JsonNullable<String> initiatorIpLte = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_INITIATOR_IP_NOT = "initiator_ip_not";
  private JsonNullable<String> initiatorIpNot = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_INITIATOR_IP_NOT_CONTAINS = "initiator_ip_not_contains";
  private JsonNullable<String> initiatorIpNotContains = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_INITIATOR_IP_NOT_ENDS_WITH = "initiator_ip_not_ends_with";
  private JsonNullable<String> initiatorIpNotEndsWith = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_INITIATOR_IP_NOT_IN = "initiator_ip_not_in";
  private JsonNullable<List<String>> initiatorIpNotIn = JsonNullable.<List<String>>undefined();

  public static final String JSON_PROPERTY_INITIATOR_IP_NOT_STARTS_WITH = "initiator_ip_not_starts_with";
  private JsonNullable<String> initiatorIpNotStartsWith = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_INITIATOR_IP_STARTS_WITH = "initiator_ip_starts_with";
  private JsonNullable<String> initiatorIpStartsWith = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_ISCSI_TARGET = "iscsi_target";
  private JsonNullable<IscsiTargetWhereInput> iscsiTarget = JsonNullable.<IscsiTargetWhereInput>undefined();

  public static final String JSON_PROPERTY_N_O_T = "NOT";
  private JsonNullable<List<IscsiConnectionWhereInput>> NOT = JsonNullable.<List<IscsiConnectionWhereInput>>undefined();

  public static final String JSON_PROPERTY_NVMF_SUBSYSTEM = "nvmf_subsystem";
  private JsonNullable<NvmfSubsystemWhereInput> nvmfSubsystem = JsonNullable.<NvmfSubsystemWhereInput>undefined();

  public static final String JSON_PROPERTY_O_R = "OR";
  private JsonNullable<List<IscsiConnectionWhereInput>> OR = JsonNullable.<List<IscsiConnectionWhereInput>>undefined();

  public static final String JSON_PROPERTY_TYPE = "type";
  private JsonNullable<StoreConnectionType> type = JsonNullable.<StoreConnectionType>undefined();

  public static final String JSON_PROPERTY_TYPE_IN = "type_in";
  private JsonNullable<List<StoreConnectionType>> typeIn = JsonNullable.<List<StoreConnectionType>>undefined();

  public static final String JSON_PROPERTY_TYPE_NOT = "type_not";
  private JsonNullable<StoreConnectionType> typeNot = JsonNullable.<StoreConnectionType>undefined();

  public static final String JSON_PROPERTY_TYPE_NOT_IN = "type_not_in";
  private JsonNullable<List<StoreConnectionType>> typeNotIn = JsonNullable.<List<StoreConnectionType>>undefined();


  public IscsiConnectionWhereInput AND(List<IscsiConnectionWhereInput> AND) {
    this.AND = JsonNullable.<List<IscsiConnectionWhereInput>>of(AND);
    return this;
  }

  public IscsiConnectionWhereInput addANDItem(IscsiConnectionWhereInput ANDItem) {
    if (this.AND == null || !this.AND.isPresent()) {
      this.AND = JsonNullable.<List<IscsiConnectionWhereInput>>of(new ArrayList<>());
    }
    try {
      this.AND.get().add(ANDItem);
    } catch (java.util.NoSuchElementException e) {
      // this can never happen, as we make sure above that the value is present
    }
    return this;
  }

   /**
   * Get AND
   * @return AND
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public List<IscsiConnectionWhereInput> getAND() {
        return AND.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_A_N_D)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<List<IscsiConnectionWhereInput>> getAND_JsonNullable() {
    return AND;
  }
  
  @JsonProperty(JSON_PROPERTY_A_N_D)
  public void setAND_JsonNullable(JsonNullable<List<IscsiConnectionWhereInput>> AND) {
    this.AND = AND;
  }

  public void setAND(List<IscsiConnectionWhereInput> AND) {
    this.AND = JsonNullable.<List<IscsiConnectionWhereInput>>of(AND);
  }


  public IscsiConnectionWhereInput clientPort(Double clientPort) {
    this.clientPort = JsonNullable.<Double>of(clientPort);
    return this;
  }

   /**
   * Get clientPort
   * @return clientPort
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public Double getClientPort() {
        return clientPort.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_CLIENT_PORT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<Double> getClientPort_JsonNullable() {
    return clientPort;
  }
  
  @JsonProperty(JSON_PROPERTY_CLIENT_PORT)
  public void setClientPort_JsonNullable(JsonNullable<Double> clientPort) {
    this.clientPort = clientPort;
  }

  public void setClientPort(Double clientPort) {
    this.clientPort = JsonNullable.<Double>of(clientPort);
  }


  public IscsiConnectionWhereInput clientPortGt(Double clientPortGt) {
    this.clientPortGt = JsonNullable.<Double>of(clientPortGt);
    return this;
  }

   /**
   * Get clientPortGt
   * @return clientPortGt
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public Double getClientPortGt() {
        return clientPortGt.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_CLIENT_PORT_GT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<Double> getClientPortGt_JsonNullable() {
    return clientPortGt;
  }
  
  @JsonProperty(JSON_PROPERTY_CLIENT_PORT_GT)
  public void setClientPortGt_JsonNullable(JsonNullable<Double> clientPortGt) {
    this.clientPortGt = clientPortGt;
  }

  public void setClientPortGt(Double clientPortGt) {
    this.clientPortGt = JsonNullable.<Double>of(clientPortGt);
  }


  public IscsiConnectionWhereInput clientPortGte(Double clientPortGte) {
    this.clientPortGte = JsonNullable.<Double>of(clientPortGte);
    return this;
  }

   /**
   * Get clientPortGte
   * @return clientPortGte
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public Double getClientPortGte() {
        return clientPortGte.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_CLIENT_PORT_GTE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<Double> getClientPortGte_JsonNullable() {
    return clientPortGte;
  }
  
  @JsonProperty(JSON_PROPERTY_CLIENT_PORT_GTE)
  public void setClientPortGte_JsonNullable(JsonNullable<Double> clientPortGte) {
    this.clientPortGte = clientPortGte;
  }

  public void setClientPortGte(Double clientPortGte) {
    this.clientPortGte = JsonNullable.<Double>of(clientPortGte);
  }


  public IscsiConnectionWhereInput clientPortIn(List<Double> clientPortIn) {
    this.clientPortIn = JsonNullable.<List<Double>>of(clientPortIn);
    return this;
  }

  public IscsiConnectionWhereInput addClientPortInItem(Double clientPortInItem) {
    if (this.clientPortIn == null || !this.clientPortIn.isPresent()) {
      this.clientPortIn = JsonNullable.<List<Double>>of(new ArrayList<>());
    }
    try {
      this.clientPortIn.get().add(clientPortInItem);
    } catch (java.util.NoSuchElementException e) {
      // this can never happen, as we make sure above that the value is present
    }
    return this;
  }

   /**
   * Get clientPortIn
   * @return clientPortIn
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public List<Double> getClientPortIn() {
        return clientPortIn.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_CLIENT_PORT_IN)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<List<Double>> getClientPortIn_JsonNullable() {
    return clientPortIn;
  }
  
  @JsonProperty(JSON_PROPERTY_CLIENT_PORT_IN)
  public void setClientPortIn_JsonNullable(JsonNullable<List<Double>> clientPortIn) {
    this.clientPortIn = clientPortIn;
  }

  public void setClientPortIn(List<Double> clientPortIn) {
    this.clientPortIn = JsonNullable.<List<Double>>of(clientPortIn);
  }


  public IscsiConnectionWhereInput clientPortLt(Double clientPortLt) {
    this.clientPortLt = JsonNullable.<Double>of(clientPortLt);
    return this;
  }

   /**
   * Get clientPortLt
   * @return clientPortLt
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public Double getClientPortLt() {
        return clientPortLt.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_CLIENT_PORT_LT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<Double> getClientPortLt_JsonNullable() {
    return clientPortLt;
  }
  
  @JsonProperty(JSON_PROPERTY_CLIENT_PORT_LT)
  public void setClientPortLt_JsonNullable(JsonNullable<Double> clientPortLt) {
    this.clientPortLt = clientPortLt;
  }

  public void setClientPortLt(Double clientPortLt) {
    this.clientPortLt = JsonNullable.<Double>of(clientPortLt);
  }


  public IscsiConnectionWhereInput clientPortLte(Double clientPortLte) {
    this.clientPortLte = JsonNullable.<Double>of(clientPortLte);
    return this;
  }

   /**
   * Get clientPortLte
   * @return clientPortLte
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public Double getClientPortLte() {
        return clientPortLte.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_CLIENT_PORT_LTE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<Double> getClientPortLte_JsonNullable() {
    return clientPortLte;
  }
  
  @JsonProperty(JSON_PROPERTY_CLIENT_PORT_LTE)
  public void setClientPortLte_JsonNullable(JsonNullable<Double> clientPortLte) {
    this.clientPortLte = clientPortLte;
  }

  public void setClientPortLte(Double clientPortLte) {
    this.clientPortLte = JsonNullable.<Double>of(clientPortLte);
  }


  public IscsiConnectionWhereInput clientPortNot(Double clientPortNot) {
    this.clientPortNot = JsonNullable.<Double>of(clientPortNot);
    return this;
  }

   /**
   * Get clientPortNot
   * @return clientPortNot
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public Double getClientPortNot() {
        return clientPortNot.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_CLIENT_PORT_NOT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<Double> getClientPortNot_JsonNullable() {
    return clientPortNot;
  }
  
  @JsonProperty(JSON_PROPERTY_CLIENT_PORT_NOT)
  public void setClientPortNot_JsonNullable(JsonNullable<Double> clientPortNot) {
    this.clientPortNot = clientPortNot;
  }

  public void setClientPortNot(Double clientPortNot) {
    this.clientPortNot = JsonNullable.<Double>of(clientPortNot);
  }


  public IscsiConnectionWhereInput clientPortNotIn(List<Double> clientPortNotIn) {
    this.clientPortNotIn = JsonNullable.<List<Double>>of(clientPortNotIn);
    return this;
  }

  public IscsiConnectionWhereInput addClientPortNotInItem(Double clientPortNotInItem) {
    if (this.clientPortNotIn == null || !this.clientPortNotIn.isPresent()) {
      this.clientPortNotIn = JsonNullable.<List<Double>>of(new ArrayList<>());
    }
    try {
      this.clientPortNotIn.get().add(clientPortNotInItem);
    } catch (java.util.NoSuchElementException e) {
      // this can never happen, as we make sure above that the value is present
    }
    return this;
  }

   /**
   * Get clientPortNotIn
   * @return clientPortNotIn
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public List<Double> getClientPortNotIn() {
        return clientPortNotIn.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_CLIENT_PORT_NOT_IN)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<List<Double>> getClientPortNotIn_JsonNullable() {
    return clientPortNotIn;
  }
  
  @JsonProperty(JSON_PROPERTY_CLIENT_PORT_NOT_IN)
  public void setClientPortNotIn_JsonNullable(JsonNullable<List<Double>> clientPortNotIn) {
    this.clientPortNotIn = clientPortNotIn;
  }

  public void setClientPortNotIn(List<Double> clientPortNotIn) {
    this.clientPortNotIn = JsonNullable.<List<Double>>of(clientPortNotIn);
  }


  public IscsiConnectionWhereInput cluster(ClusterWhereInput cluster) {
    this.cluster = JsonNullable.<ClusterWhereInput>of(cluster);
    return this;
  }

   /**
   * Get cluster
   * @return cluster
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public ClusterWhereInput getCluster() {
        return cluster.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_CLUSTER)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<ClusterWhereInput> getCluster_JsonNullable() {
    return cluster;
  }
  
  @JsonProperty(JSON_PROPERTY_CLUSTER)
  public void setCluster_JsonNullable(JsonNullable<ClusterWhereInput> cluster) {
    this.cluster = cluster;
  }

  public void setCluster(ClusterWhereInput cluster) {
    this.cluster = JsonNullable.<ClusterWhereInput>of(cluster);
  }


  public IscsiConnectionWhereInput host(HostWhereInput host) {
    this.host = JsonNullable.<HostWhereInput>of(host);
    return this;
  }

   /**
   * Get host
   * @return host
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public HostWhereInput getHost() {
        return host.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_HOST)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<HostWhereInput> getHost_JsonNullable() {
    return host;
  }
  
  @JsonProperty(JSON_PROPERTY_HOST)
  public void setHost_JsonNullable(JsonNullable<HostWhereInput> host) {
    this.host = host;
  }

  public void setHost(HostWhereInput host) {
    this.host = JsonNullable.<HostWhereInput>of(host);
  }


  public IscsiConnectionWhereInput id(String id) {
    this.id = JsonNullable.<String>of(id);
    return this;
  }

   /**
   * Get id
   * @return id
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getId() {
        return id.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getId_JsonNullable() {
    return id;
  }
  
  @JsonProperty(JSON_PROPERTY_ID)
  public void setId_JsonNullable(JsonNullable<String> id) {
    this.id = id;
  }

  public void setId(String id) {
    this.id = JsonNullable.<String>of(id);
  }


  public IscsiConnectionWhereInput idContains(String idContains) {
    this.idContains = JsonNullable.<String>of(idContains);
    return this;
  }

   /**
   * Get idContains
   * @return idContains
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getIdContains() {
        return idContains.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_ID_CONTAINS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getIdContains_JsonNullable() {
    return idContains;
  }
  
  @JsonProperty(JSON_PROPERTY_ID_CONTAINS)
  public void setIdContains_JsonNullable(JsonNullable<String> idContains) {
    this.idContains = idContains;
  }

  public void setIdContains(String idContains) {
    this.idContains = JsonNullable.<String>of(idContains);
  }


  public IscsiConnectionWhereInput idEndsWith(String idEndsWith) {
    this.idEndsWith = JsonNullable.<String>of(idEndsWith);
    return this;
  }

   /**
   * Get idEndsWith
   * @return idEndsWith
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getIdEndsWith() {
        return idEndsWith.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_ID_ENDS_WITH)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getIdEndsWith_JsonNullable() {
    return idEndsWith;
  }
  
  @JsonProperty(JSON_PROPERTY_ID_ENDS_WITH)
  public void setIdEndsWith_JsonNullable(JsonNullable<String> idEndsWith) {
    this.idEndsWith = idEndsWith;
  }

  public void setIdEndsWith(String idEndsWith) {
    this.idEndsWith = JsonNullable.<String>of(idEndsWith);
  }


  public IscsiConnectionWhereInput idGt(String idGt) {
    this.idGt = JsonNullable.<String>of(idGt);
    return this;
  }

   /**
   * Get idGt
   * @return idGt
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getIdGt() {
        return idGt.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_ID_GT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getIdGt_JsonNullable() {
    return idGt;
  }
  
  @JsonProperty(JSON_PROPERTY_ID_GT)
  public void setIdGt_JsonNullable(JsonNullable<String> idGt) {
    this.idGt = idGt;
  }

  public void setIdGt(String idGt) {
    this.idGt = JsonNullable.<String>of(idGt);
  }


  public IscsiConnectionWhereInput idGte(String idGte) {
    this.idGte = JsonNullable.<String>of(idGte);
    return this;
  }

   /**
   * Get idGte
   * @return idGte
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getIdGte() {
        return idGte.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_ID_GTE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getIdGte_JsonNullable() {
    return idGte;
  }
  
  @JsonProperty(JSON_PROPERTY_ID_GTE)
  public void setIdGte_JsonNullable(JsonNullable<String> idGte) {
    this.idGte = idGte;
  }

  public void setIdGte(String idGte) {
    this.idGte = JsonNullable.<String>of(idGte);
  }


  public IscsiConnectionWhereInput idIn(List<String> idIn) {
    this.idIn = JsonNullable.<List<String>>of(idIn);
    return this;
  }

  public IscsiConnectionWhereInput addIdInItem(String idInItem) {
    if (this.idIn == null || !this.idIn.isPresent()) {
      this.idIn = JsonNullable.<List<String>>of(new ArrayList<>());
    }
    try {
      this.idIn.get().add(idInItem);
    } catch (java.util.NoSuchElementException e) {
      // this can never happen, as we make sure above that the value is present
    }
    return this;
  }

   /**
   * Get idIn
   * @return idIn
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public List<String> getIdIn() {
        return idIn.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_ID_IN)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<List<String>> getIdIn_JsonNullable() {
    return idIn;
  }
  
  @JsonProperty(JSON_PROPERTY_ID_IN)
  public void setIdIn_JsonNullable(JsonNullable<List<String>> idIn) {
    this.idIn = idIn;
  }

  public void setIdIn(List<String> idIn) {
    this.idIn = JsonNullable.<List<String>>of(idIn);
  }


  public IscsiConnectionWhereInput idLt(String idLt) {
    this.idLt = JsonNullable.<String>of(idLt);
    return this;
  }

   /**
   * Get idLt
   * @return idLt
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getIdLt() {
        return idLt.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_ID_LT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getIdLt_JsonNullable() {
    return idLt;
  }
  
  @JsonProperty(JSON_PROPERTY_ID_LT)
  public void setIdLt_JsonNullable(JsonNullable<String> idLt) {
    this.idLt = idLt;
  }

  public void setIdLt(String idLt) {
    this.idLt = JsonNullable.<String>of(idLt);
  }


  public IscsiConnectionWhereInput idLte(String idLte) {
    this.idLte = JsonNullable.<String>of(idLte);
    return this;
  }

   /**
   * Get idLte
   * @return idLte
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getIdLte() {
        return idLte.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_ID_LTE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getIdLte_JsonNullable() {
    return idLte;
  }
  
  @JsonProperty(JSON_PROPERTY_ID_LTE)
  public void setIdLte_JsonNullable(JsonNullable<String> idLte) {
    this.idLte = idLte;
  }

  public void setIdLte(String idLte) {
    this.idLte = JsonNullable.<String>of(idLte);
  }


  public IscsiConnectionWhereInput idNot(String idNot) {
    this.idNot = JsonNullable.<String>of(idNot);
    return this;
  }

   /**
   * Get idNot
   * @return idNot
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getIdNot() {
        return idNot.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_ID_NOT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getIdNot_JsonNullable() {
    return idNot;
  }
  
  @JsonProperty(JSON_PROPERTY_ID_NOT)
  public void setIdNot_JsonNullable(JsonNullable<String> idNot) {
    this.idNot = idNot;
  }

  public void setIdNot(String idNot) {
    this.idNot = JsonNullable.<String>of(idNot);
  }


  public IscsiConnectionWhereInput idNotContains(String idNotContains) {
    this.idNotContains = JsonNullable.<String>of(idNotContains);
    return this;
  }

   /**
   * Get idNotContains
   * @return idNotContains
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getIdNotContains() {
        return idNotContains.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_ID_NOT_CONTAINS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getIdNotContains_JsonNullable() {
    return idNotContains;
  }
  
  @JsonProperty(JSON_PROPERTY_ID_NOT_CONTAINS)
  public void setIdNotContains_JsonNullable(JsonNullable<String> idNotContains) {
    this.idNotContains = idNotContains;
  }

  public void setIdNotContains(String idNotContains) {
    this.idNotContains = JsonNullable.<String>of(idNotContains);
  }


  public IscsiConnectionWhereInput idNotEndsWith(String idNotEndsWith) {
    this.idNotEndsWith = JsonNullable.<String>of(idNotEndsWith);
    return this;
  }

   /**
   * Get idNotEndsWith
   * @return idNotEndsWith
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getIdNotEndsWith() {
        return idNotEndsWith.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_ID_NOT_ENDS_WITH)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getIdNotEndsWith_JsonNullable() {
    return idNotEndsWith;
  }
  
  @JsonProperty(JSON_PROPERTY_ID_NOT_ENDS_WITH)
  public void setIdNotEndsWith_JsonNullable(JsonNullable<String> idNotEndsWith) {
    this.idNotEndsWith = idNotEndsWith;
  }

  public void setIdNotEndsWith(String idNotEndsWith) {
    this.idNotEndsWith = JsonNullable.<String>of(idNotEndsWith);
  }


  public IscsiConnectionWhereInput idNotIn(List<String> idNotIn) {
    this.idNotIn = JsonNullable.<List<String>>of(idNotIn);
    return this;
  }

  public IscsiConnectionWhereInput addIdNotInItem(String idNotInItem) {
    if (this.idNotIn == null || !this.idNotIn.isPresent()) {
      this.idNotIn = JsonNullable.<List<String>>of(new ArrayList<>());
    }
    try {
      this.idNotIn.get().add(idNotInItem);
    } catch (java.util.NoSuchElementException e) {
      // this can never happen, as we make sure above that the value is present
    }
    return this;
  }

   /**
   * Get idNotIn
   * @return idNotIn
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public List<String> getIdNotIn() {
        return idNotIn.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_ID_NOT_IN)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<List<String>> getIdNotIn_JsonNullable() {
    return idNotIn;
  }
  
  @JsonProperty(JSON_PROPERTY_ID_NOT_IN)
  public void setIdNotIn_JsonNullable(JsonNullable<List<String>> idNotIn) {
    this.idNotIn = idNotIn;
  }

  public void setIdNotIn(List<String> idNotIn) {
    this.idNotIn = JsonNullable.<List<String>>of(idNotIn);
  }


  public IscsiConnectionWhereInput idNotStartsWith(String idNotStartsWith) {
    this.idNotStartsWith = JsonNullable.<String>of(idNotStartsWith);
    return this;
  }

   /**
   * Get idNotStartsWith
   * @return idNotStartsWith
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getIdNotStartsWith() {
        return idNotStartsWith.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_ID_NOT_STARTS_WITH)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getIdNotStartsWith_JsonNullable() {
    return idNotStartsWith;
  }
  
  @JsonProperty(JSON_PROPERTY_ID_NOT_STARTS_WITH)
  public void setIdNotStartsWith_JsonNullable(JsonNullable<String> idNotStartsWith) {
    this.idNotStartsWith = idNotStartsWith;
  }

  public void setIdNotStartsWith(String idNotStartsWith) {
    this.idNotStartsWith = JsonNullable.<String>of(idNotStartsWith);
  }


  public IscsiConnectionWhereInput idStartsWith(String idStartsWith) {
    this.idStartsWith = JsonNullable.<String>of(idStartsWith);
    return this;
  }

   /**
   * Get idStartsWith
   * @return idStartsWith
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getIdStartsWith() {
        return idStartsWith.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_ID_STARTS_WITH)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getIdStartsWith_JsonNullable() {
    return idStartsWith;
  }
  
  @JsonProperty(JSON_PROPERTY_ID_STARTS_WITH)
  public void setIdStartsWith_JsonNullable(JsonNullable<String> idStartsWith) {
    this.idStartsWith = idStartsWith;
  }

  public void setIdStartsWith(String idStartsWith) {
    this.idStartsWith = JsonNullable.<String>of(idStartsWith);
  }


  public IscsiConnectionWhereInput initiatorIp(String initiatorIp) {
    this.initiatorIp = JsonNullable.<String>of(initiatorIp);
    return this;
  }

   /**
   * Get initiatorIp
   * @return initiatorIp
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getInitiatorIp() {
        return initiatorIp.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_INITIATOR_IP)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getInitiatorIp_JsonNullable() {
    return initiatorIp;
  }
  
  @JsonProperty(JSON_PROPERTY_INITIATOR_IP)
  public void setInitiatorIp_JsonNullable(JsonNullable<String> initiatorIp) {
    this.initiatorIp = initiatorIp;
  }

  public void setInitiatorIp(String initiatorIp) {
    this.initiatorIp = JsonNullable.<String>of(initiatorIp);
  }


  public IscsiConnectionWhereInput initiatorIpContains(String initiatorIpContains) {
    this.initiatorIpContains = JsonNullable.<String>of(initiatorIpContains);
    return this;
  }

   /**
   * Get initiatorIpContains
   * @return initiatorIpContains
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getInitiatorIpContains() {
        return initiatorIpContains.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_INITIATOR_IP_CONTAINS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getInitiatorIpContains_JsonNullable() {
    return initiatorIpContains;
  }
  
  @JsonProperty(JSON_PROPERTY_INITIATOR_IP_CONTAINS)
  public void setInitiatorIpContains_JsonNullable(JsonNullable<String> initiatorIpContains) {
    this.initiatorIpContains = initiatorIpContains;
  }

  public void setInitiatorIpContains(String initiatorIpContains) {
    this.initiatorIpContains = JsonNullable.<String>of(initiatorIpContains);
  }


  public IscsiConnectionWhereInput initiatorIpEndsWith(String initiatorIpEndsWith) {
    this.initiatorIpEndsWith = JsonNullable.<String>of(initiatorIpEndsWith);
    return this;
  }

   /**
   * Get initiatorIpEndsWith
   * @return initiatorIpEndsWith
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getInitiatorIpEndsWith() {
        return initiatorIpEndsWith.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_INITIATOR_IP_ENDS_WITH)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getInitiatorIpEndsWith_JsonNullable() {
    return initiatorIpEndsWith;
  }
  
  @JsonProperty(JSON_PROPERTY_INITIATOR_IP_ENDS_WITH)
  public void setInitiatorIpEndsWith_JsonNullable(JsonNullable<String> initiatorIpEndsWith) {
    this.initiatorIpEndsWith = initiatorIpEndsWith;
  }

  public void setInitiatorIpEndsWith(String initiatorIpEndsWith) {
    this.initiatorIpEndsWith = JsonNullable.<String>of(initiatorIpEndsWith);
  }


  public IscsiConnectionWhereInput initiatorIpGt(String initiatorIpGt) {
    this.initiatorIpGt = JsonNullable.<String>of(initiatorIpGt);
    return this;
  }

   /**
   * Get initiatorIpGt
   * @return initiatorIpGt
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getInitiatorIpGt() {
        return initiatorIpGt.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_INITIATOR_IP_GT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getInitiatorIpGt_JsonNullable() {
    return initiatorIpGt;
  }
  
  @JsonProperty(JSON_PROPERTY_INITIATOR_IP_GT)
  public void setInitiatorIpGt_JsonNullable(JsonNullable<String> initiatorIpGt) {
    this.initiatorIpGt = initiatorIpGt;
  }

  public void setInitiatorIpGt(String initiatorIpGt) {
    this.initiatorIpGt = JsonNullable.<String>of(initiatorIpGt);
  }


  public IscsiConnectionWhereInput initiatorIpGte(String initiatorIpGte) {
    this.initiatorIpGte = JsonNullable.<String>of(initiatorIpGte);
    return this;
  }

   /**
   * Get initiatorIpGte
   * @return initiatorIpGte
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getInitiatorIpGte() {
        return initiatorIpGte.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_INITIATOR_IP_GTE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getInitiatorIpGte_JsonNullable() {
    return initiatorIpGte;
  }
  
  @JsonProperty(JSON_PROPERTY_INITIATOR_IP_GTE)
  public void setInitiatorIpGte_JsonNullable(JsonNullable<String> initiatorIpGte) {
    this.initiatorIpGte = initiatorIpGte;
  }

  public void setInitiatorIpGte(String initiatorIpGte) {
    this.initiatorIpGte = JsonNullable.<String>of(initiatorIpGte);
  }


  public IscsiConnectionWhereInput initiatorIpIn(List<String> initiatorIpIn) {
    this.initiatorIpIn = JsonNullable.<List<String>>of(initiatorIpIn);
    return this;
  }

  public IscsiConnectionWhereInput addInitiatorIpInItem(String initiatorIpInItem) {
    if (this.initiatorIpIn == null || !this.initiatorIpIn.isPresent()) {
      this.initiatorIpIn = JsonNullable.<List<String>>of(new ArrayList<>());
    }
    try {
      this.initiatorIpIn.get().add(initiatorIpInItem);
    } catch (java.util.NoSuchElementException e) {
      // this can never happen, as we make sure above that the value is present
    }
    return this;
  }

   /**
   * Get initiatorIpIn
   * @return initiatorIpIn
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public List<String> getInitiatorIpIn() {
        return initiatorIpIn.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_INITIATOR_IP_IN)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<List<String>> getInitiatorIpIn_JsonNullable() {
    return initiatorIpIn;
  }
  
  @JsonProperty(JSON_PROPERTY_INITIATOR_IP_IN)
  public void setInitiatorIpIn_JsonNullable(JsonNullable<List<String>> initiatorIpIn) {
    this.initiatorIpIn = initiatorIpIn;
  }

  public void setInitiatorIpIn(List<String> initiatorIpIn) {
    this.initiatorIpIn = JsonNullable.<List<String>>of(initiatorIpIn);
  }


  public IscsiConnectionWhereInput initiatorIpLt(String initiatorIpLt) {
    this.initiatorIpLt = JsonNullable.<String>of(initiatorIpLt);
    return this;
  }

   /**
   * Get initiatorIpLt
   * @return initiatorIpLt
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getInitiatorIpLt() {
        return initiatorIpLt.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_INITIATOR_IP_LT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getInitiatorIpLt_JsonNullable() {
    return initiatorIpLt;
  }
  
  @JsonProperty(JSON_PROPERTY_INITIATOR_IP_LT)
  public void setInitiatorIpLt_JsonNullable(JsonNullable<String> initiatorIpLt) {
    this.initiatorIpLt = initiatorIpLt;
  }

  public void setInitiatorIpLt(String initiatorIpLt) {
    this.initiatorIpLt = JsonNullable.<String>of(initiatorIpLt);
  }


  public IscsiConnectionWhereInput initiatorIpLte(String initiatorIpLte) {
    this.initiatorIpLte = JsonNullable.<String>of(initiatorIpLte);
    return this;
  }

   /**
   * Get initiatorIpLte
   * @return initiatorIpLte
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getInitiatorIpLte() {
        return initiatorIpLte.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_INITIATOR_IP_LTE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getInitiatorIpLte_JsonNullable() {
    return initiatorIpLte;
  }
  
  @JsonProperty(JSON_PROPERTY_INITIATOR_IP_LTE)
  public void setInitiatorIpLte_JsonNullable(JsonNullable<String> initiatorIpLte) {
    this.initiatorIpLte = initiatorIpLte;
  }

  public void setInitiatorIpLte(String initiatorIpLte) {
    this.initiatorIpLte = JsonNullable.<String>of(initiatorIpLte);
  }


  public IscsiConnectionWhereInput initiatorIpNot(String initiatorIpNot) {
    this.initiatorIpNot = JsonNullable.<String>of(initiatorIpNot);
    return this;
  }

   /**
   * Get initiatorIpNot
   * @return initiatorIpNot
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getInitiatorIpNot() {
        return initiatorIpNot.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_INITIATOR_IP_NOT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getInitiatorIpNot_JsonNullable() {
    return initiatorIpNot;
  }
  
  @JsonProperty(JSON_PROPERTY_INITIATOR_IP_NOT)
  public void setInitiatorIpNot_JsonNullable(JsonNullable<String> initiatorIpNot) {
    this.initiatorIpNot = initiatorIpNot;
  }

  public void setInitiatorIpNot(String initiatorIpNot) {
    this.initiatorIpNot = JsonNullable.<String>of(initiatorIpNot);
  }


  public IscsiConnectionWhereInput initiatorIpNotContains(String initiatorIpNotContains) {
    this.initiatorIpNotContains = JsonNullable.<String>of(initiatorIpNotContains);
    return this;
  }

   /**
   * Get initiatorIpNotContains
   * @return initiatorIpNotContains
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getInitiatorIpNotContains() {
        return initiatorIpNotContains.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_INITIATOR_IP_NOT_CONTAINS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getInitiatorIpNotContains_JsonNullable() {
    return initiatorIpNotContains;
  }
  
  @JsonProperty(JSON_PROPERTY_INITIATOR_IP_NOT_CONTAINS)
  public void setInitiatorIpNotContains_JsonNullable(JsonNullable<String> initiatorIpNotContains) {
    this.initiatorIpNotContains = initiatorIpNotContains;
  }

  public void setInitiatorIpNotContains(String initiatorIpNotContains) {
    this.initiatorIpNotContains = JsonNullable.<String>of(initiatorIpNotContains);
  }


  public IscsiConnectionWhereInput initiatorIpNotEndsWith(String initiatorIpNotEndsWith) {
    this.initiatorIpNotEndsWith = JsonNullable.<String>of(initiatorIpNotEndsWith);
    return this;
  }

   /**
   * Get initiatorIpNotEndsWith
   * @return initiatorIpNotEndsWith
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getInitiatorIpNotEndsWith() {
        return initiatorIpNotEndsWith.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_INITIATOR_IP_NOT_ENDS_WITH)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getInitiatorIpNotEndsWith_JsonNullable() {
    return initiatorIpNotEndsWith;
  }
  
  @JsonProperty(JSON_PROPERTY_INITIATOR_IP_NOT_ENDS_WITH)
  public void setInitiatorIpNotEndsWith_JsonNullable(JsonNullable<String> initiatorIpNotEndsWith) {
    this.initiatorIpNotEndsWith = initiatorIpNotEndsWith;
  }

  public void setInitiatorIpNotEndsWith(String initiatorIpNotEndsWith) {
    this.initiatorIpNotEndsWith = JsonNullable.<String>of(initiatorIpNotEndsWith);
  }


  public IscsiConnectionWhereInput initiatorIpNotIn(List<String> initiatorIpNotIn) {
    this.initiatorIpNotIn = JsonNullable.<List<String>>of(initiatorIpNotIn);
    return this;
  }

  public IscsiConnectionWhereInput addInitiatorIpNotInItem(String initiatorIpNotInItem) {
    if (this.initiatorIpNotIn == null || !this.initiatorIpNotIn.isPresent()) {
      this.initiatorIpNotIn = JsonNullable.<List<String>>of(new ArrayList<>());
    }
    try {
      this.initiatorIpNotIn.get().add(initiatorIpNotInItem);
    } catch (java.util.NoSuchElementException e) {
      // this can never happen, as we make sure above that the value is present
    }
    return this;
  }

   /**
   * Get initiatorIpNotIn
   * @return initiatorIpNotIn
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public List<String> getInitiatorIpNotIn() {
        return initiatorIpNotIn.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_INITIATOR_IP_NOT_IN)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<List<String>> getInitiatorIpNotIn_JsonNullable() {
    return initiatorIpNotIn;
  }
  
  @JsonProperty(JSON_PROPERTY_INITIATOR_IP_NOT_IN)
  public void setInitiatorIpNotIn_JsonNullable(JsonNullable<List<String>> initiatorIpNotIn) {
    this.initiatorIpNotIn = initiatorIpNotIn;
  }

  public void setInitiatorIpNotIn(List<String> initiatorIpNotIn) {
    this.initiatorIpNotIn = JsonNullable.<List<String>>of(initiatorIpNotIn);
  }


  public IscsiConnectionWhereInput initiatorIpNotStartsWith(String initiatorIpNotStartsWith) {
    this.initiatorIpNotStartsWith = JsonNullable.<String>of(initiatorIpNotStartsWith);
    return this;
  }

   /**
   * Get initiatorIpNotStartsWith
   * @return initiatorIpNotStartsWith
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getInitiatorIpNotStartsWith() {
        return initiatorIpNotStartsWith.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_INITIATOR_IP_NOT_STARTS_WITH)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getInitiatorIpNotStartsWith_JsonNullable() {
    return initiatorIpNotStartsWith;
  }
  
  @JsonProperty(JSON_PROPERTY_INITIATOR_IP_NOT_STARTS_WITH)
  public void setInitiatorIpNotStartsWith_JsonNullable(JsonNullable<String> initiatorIpNotStartsWith) {
    this.initiatorIpNotStartsWith = initiatorIpNotStartsWith;
  }

  public void setInitiatorIpNotStartsWith(String initiatorIpNotStartsWith) {
    this.initiatorIpNotStartsWith = JsonNullable.<String>of(initiatorIpNotStartsWith);
  }


  public IscsiConnectionWhereInput initiatorIpStartsWith(String initiatorIpStartsWith) {
    this.initiatorIpStartsWith = JsonNullable.<String>of(initiatorIpStartsWith);
    return this;
  }

   /**
   * Get initiatorIpStartsWith
   * @return initiatorIpStartsWith
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getInitiatorIpStartsWith() {
        return initiatorIpStartsWith.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_INITIATOR_IP_STARTS_WITH)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getInitiatorIpStartsWith_JsonNullable() {
    return initiatorIpStartsWith;
  }
  
  @JsonProperty(JSON_PROPERTY_INITIATOR_IP_STARTS_WITH)
  public void setInitiatorIpStartsWith_JsonNullable(JsonNullable<String> initiatorIpStartsWith) {
    this.initiatorIpStartsWith = initiatorIpStartsWith;
  }

  public void setInitiatorIpStartsWith(String initiatorIpStartsWith) {
    this.initiatorIpStartsWith = JsonNullable.<String>of(initiatorIpStartsWith);
  }


  public IscsiConnectionWhereInput iscsiTarget(IscsiTargetWhereInput iscsiTarget) {
    this.iscsiTarget = JsonNullable.<IscsiTargetWhereInput>of(iscsiTarget);
    return this;
  }

   /**
   * Get iscsiTarget
   * @return iscsiTarget
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public IscsiTargetWhereInput getIscsiTarget() {
        return iscsiTarget.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_ISCSI_TARGET)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<IscsiTargetWhereInput> getIscsiTarget_JsonNullable() {
    return iscsiTarget;
  }
  
  @JsonProperty(JSON_PROPERTY_ISCSI_TARGET)
  public void setIscsiTarget_JsonNullable(JsonNullable<IscsiTargetWhereInput> iscsiTarget) {
    this.iscsiTarget = iscsiTarget;
  }

  public void setIscsiTarget(IscsiTargetWhereInput iscsiTarget) {
    this.iscsiTarget = JsonNullable.<IscsiTargetWhereInput>of(iscsiTarget);
  }


  public IscsiConnectionWhereInput NOT(List<IscsiConnectionWhereInput> NOT) {
    this.NOT = JsonNullable.<List<IscsiConnectionWhereInput>>of(NOT);
    return this;
  }

  public IscsiConnectionWhereInput addNOTItem(IscsiConnectionWhereInput NOTItem) {
    if (this.NOT == null || !this.NOT.isPresent()) {
      this.NOT = JsonNullable.<List<IscsiConnectionWhereInput>>of(new ArrayList<>());
    }
    try {
      this.NOT.get().add(NOTItem);
    } catch (java.util.NoSuchElementException e) {
      // this can never happen, as we make sure above that the value is present
    }
    return this;
  }

   /**
   * Get NOT
   * @return NOT
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public List<IscsiConnectionWhereInput> getNOT() {
        return NOT.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_N_O_T)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<List<IscsiConnectionWhereInput>> getNOT_JsonNullable() {
    return NOT;
  }
  
  @JsonProperty(JSON_PROPERTY_N_O_T)
  public void setNOT_JsonNullable(JsonNullable<List<IscsiConnectionWhereInput>> NOT) {
    this.NOT = NOT;
  }

  public void setNOT(List<IscsiConnectionWhereInput> NOT) {
    this.NOT = JsonNullable.<List<IscsiConnectionWhereInput>>of(NOT);
  }


  public IscsiConnectionWhereInput nvmfSubsystem(NvmfSubsystemWhereInput nvmfSubsystem) {
    this.nvmfSubsystem = JsonNullable.<NvmfSubsystemWhereInput>of(nvmfSubsystem);
    return this;
  }

   /**
   * Get nvmfSubsystem
   * @return nvmfSubsystem
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public NvmfSubsystemWhereInput getNvmfSubsystem() {
        return nvmfSubsystem.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_NVMF_SUBSYSTEM)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<NvmfSubsystemWhereInput> getNvmfSubsystem_JsonNullable() {
    return nvmfSubsystem;
  }
  
  @JsonProperty(JSON_PROPERTY_NVMF_SUBSYSTEM)
  public void setNvmfSubsystem_JsonNullable(JsonNullable<NvmfSubsystemWhereInput> nvmfSubsystem) {
    this.nvmfSubsystem = nvmfSubsystem;
  }

  public void setNvmfSubsystem(NvmfSubsystemWhereInput nvmfSubsystem) {
    this.nvmfSubsystem = JsonNullable.<NvmfSubsystemWhereInput>of(nvmfSubsystem);
  }


  public IscsiConnectionWhereInput OR(List<IscsiConnectionWhereInput> OR) {
    this.OR = JsonNullable.<List<IscsiConnectionWhereInput>>of(OR);
    return this;
  }

  public IscsiConnectionWhereInput addORItem(IscsiConnectionWhereInput ORItem) {
    if (this.OR == null || !this.OR.isPresent()) {
      this.OR = JsonNullable.<List<IscsiConnectionWhereInput>>of(new ArrayList<>());
    }
    try {
      this.OR.get().add(ORItem);
    } catch (java.util.NoSuchElementException e) {
      // this can never happen, as we make sure above that the value is present
    }
    return this;
  }

   /**
   * Get OR
   * @return OR
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public List<IscsiConnectionWhereInput> getOR() {
        return OR.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_O_R)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<List<IscsiConnectionWhereInput>> getOR_JsonNullable() {
    return OR;
  }
  
  @JsonProperty(JSON_PROPERTY_O_R)
  public void setOR_JsonNullable(JsonNullable<List<IscsiConnectionWhereInput>> OR) {
    this.OR = OR;
  }

  public void setOR(List<IscsiConnectionWhereInput> OR) {
    this.OR = JsonNullable.<List<IscsiConnectionWhereInput>>of(OR);
  }


  public IscsiConnectionWhereInput type(StoreConnectionType type) {
    this.type = JsonNullable.<StoreConnectionType>of(type);
    return this;
  }

   /**
   * Get type
   * @return type
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public StoreConnectionType getType() {
        return type.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_TYPE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<StoreConnectionType> getType_JsonNullable() {
    return type;
  }
  
  @JsonProperty(JSON_PROPERTY_TYPE)
  public void setType_JsonNullable(JsonNullable<StoreConnectionType> type) {
    this.type = type;
  }

  public void setType(StoreConnectionType type) {
    this.type = JsonNullable.<StoreConnectionType>of(type);
  }


  public IscsiConnectionWhereInput typeIn(List<StoreConnectionType> typeIn) {
    this.typeIn = JsonNullable.<List<StoreConnectionType>>of(typeIn);
    return this;
  }

  public IscsiConnectionWhereInput addTypeInItem(StoreConnectionType typeInItem) {
    if (this.typeIn == null || !this.typeIn.isPresent()) {
      this.typeIn = JsonNullable.<List<StoreConnectionType>>of(new ArrayList<>());
    }
    try {
      this.typeIn.get().add(typeInItem);
    } catch (java.util.NoSuchElementException e) {
      // this can never happen, as we make sure above that the value is present
    }
    return this;
  }

   /**
   * Get typeIn
   * @return typeIn
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public List<StoreConnectionType> getTypeIn() {
        return typeIn.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_TYPE_IN)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<List<StoreConnectionType>> getTypeIn_JsonNullable() {
    return typeIn;
  }
  
  @JsonProperty(JSON_PROPERTY_TYPE_IN)
  public void setTypeIn_JsonNullable(JsonNullable<List<StoreConnectionType>> typeIn) {
    this.typeIn = typeIn;
  }

  public void setTypeIn(List<StoreConnectionType> typeIn) {
    this.typeIn = JsonNullable.<List<StoreConnectionType>>of(typeIn);
  }


  public IscsiConnectionWhereInput typeNot(StoreConnectionType typeNot) {
    this.typeNot = JsonNullable.<StoreConnectionType>of(typeNot);
    return this;
  }

   /**
   * Get typeNot
   * @return typeNot
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public StoreConnectionType getTypeNot() {
        return typeNot.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_TYPE_NOT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<StoreConnectionType> getTypeNot_JsonNullable() {
    return typeNot;
  }
  
  @JsonProperty(JSON_PROPERTY_TYPE_NOT)
  public void setTypeNot_JsonNullable(JsonNullable<StoreConnectionType> typeNot) {
    this.typeNot = typeNot;
  }

  public void setTypeNot(StoreConnectionType typeNot) {
    this.typeNot = JsonNullable.<StoreConnectionType>of(typeNot);
  }


  public IscsiConnectionWhereInput typeNotIn(List<StoreConnectionType> typeNotIn) {
    this.typeNotIn = JsonNullable.<List<StoreConnectionType>>of(typeNotIn);
    return this;
  }

  public IscsiConnectionWhereInput addTypeNotInItem(StoreConnectionType typeNotInItem) {
    if (this.typeNotIn == null || !this.typeNotIn.isPresent()) {
      this.typeNotIn = JsonNullable.<List<StoreConnectionType>>of(new ArrayList<>());
    }
    try {
      this.typeNotIn.get().add(typeNotInItem);
    } catch (java.util.NoSuchElementException e) {
      // this can never happen, as we make sure above that the value is present
    }
    return this;
  }

   /**
   * Get typeNotIn
   * @return typeNotIn
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public List<StoreConnectionType> getTypeNotIn() {
        return typeNotIn.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_TYPE_NOT_IN)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<List<StoreConnectionType>> getTypeNotIn_JsonNullable() {
    return typeNotIn;
  }
  
  @JsonProperty(JSON_PROPERTY_TYPE_NOT_IN)
  public void setTypeNotIn_JsonNullable(JsonNullable<List<StoreConnectionType>> typeNotIn) {
    this.typeNotIn = typeNotIn;
  }

  public void setTypeNotIn(List<StoreConnectionType> typeNotIn) {
    this.typeNotIn = JsonNullable.<List<StoreConnectionType>>of(typeNotIn);
  }


  /**
   * Return true if this IscsiConnectionWhereInput object is equal to o.
   */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    IscsiConnectionWhereInput iscsiConnectionWhereInput = (IscsiConnectionWhereInput) o;
    return equalsNullable(this.AND, iscsiConnectionWhereInput.AND) &&
        equalsNullable(this.clientPort, iscsiConnectionWhereInput.clientPort) &&
        equalsNullable(this.clientPortGt, iscsiConnectionWhereInput.clientPortGt) &&
        equalsNullable(this.clientPortGte, iscsiConnectionWhereInput.clientPortGte) &&
        equalsNullable(this.clientPortIn, iscsiConnectionWhereInput.clientPortIn) &&
        equalsNullable(this.clientPortLt, iscsiConnectionWhereInput.clientPortLt) &&
        equalsNullable(this.clientPortLte, iscsiConnectionWhereInput.clientPortLte) &&
        equalsNullable(this.clientPortNot, iscsiConnectionWhereInput.clientPortNot) &&
        equalsNullable(this.clientPortNotIn, iscsiConnectionWhereInput.clientPortNotIn) &&
        equalsNullable(this.cluster, iscsiConnectionWhereInput.cluster) &&
        equalsNullable(this.host, iscsiConnectionWhereInput.host) &&
        equalsNullable(this.id, iscsiConnectionWhereInput.id) &&
        equalsNullable(this.idContains, iscsiConnectionWhereInput.idContains) &&
        equalsNullable(this.idEndsWith, iscsiConnectionWhereInput.idEndsWith) &&
        equalsNullable(this.idGt, iscsiConnectionWhereInput.idGt) &&
        equalsNullable(this.idGte, iscsiConnectionWhereInput.idGte) &&
        equalsNullable(this.idIn, iscsiConnectionWhereInput.idIn) &&
        equalsNullable(this.idLt, iscsiConnectionWhereInput.idLt) &&
        equalsNullable(this.idLte, iscsiConnectionWhereInput.idLte) &&
        equalsNullable(this.idNot, iscsiConnectionWhereInput.idNot) &&
        equalsNullable(this.idNotContains, iscsiConnectionWhereInput.idNotContains) &&
        equalsNullable(this.idNotEndsWith, iscsiConnectionWhereInput.idNotEndsWith) &&
        equalsNullable(this.idNotIn, iscsiConnectionWhereInput.idNotIn) &&
        equalsNullable(this.idNotStartsWith, iscsiConnectionWhereInput.idNotStartsWith) &&
        equalsNullable(this.idStartsWith, iscsiConnectionWhereInput.idStartsWith) &&
        equalsNullable(this.initiatorIp, iscsiConnectionWhereInput.initiatorIp) &&
        equalsNullable(this.initiatorIpContains, iscsiConnectionWhereInput.initiatorIpContains) &&
        equalsNullable(this.initiatorIpEndsWith, iscsiConnectionWhereInput.initiatorIpEndsWith) &&
        equalsNullable(this.initiatorIpGt, iscsiConnectionWhereInput.initiatorIpGt) &&
        equalsNullable(this.initiatorIpGte, iscsiConnectionWhereInput.initiatorIpGte) &&
        equalsNullable(this.initiatorIpIn, iscsiConnectionWhereInput.initiatorIpIn) &&
        equalsNullable(this.initiatorIpLt, iscsiConnectionWhereInput.initiatorIpLt) &&
        equalsNullable(this.initiatorIpLte, iscsiConnectionWhereInput.initiatorIpLte) &&
        equalsNullable(this.initiatorIpNot, iscsiConnectionWhereInput.initiatorIpNot) &&
        equalsNullable(this.initiatorIpNotContains, iscsiConnectionWhereInput.initiatorIpNotContains) &&
        equalsNullable(this.initiatorIpNotEndsWith, iscsiConnectionWhereInput.initiatorIpNotEndsWith) &&
        equalsNullable(this.initiatorIpNotIn, iscsiConnectionWhereInput.initiatorIpNotIn) &&
        equalsNullable(this.initiatorIpNotStartsWith, iscsiConnectionWhereInput.initiatorIpNotStartsWith) &&
        equalsNullable(this.initiatorIpStartsWith, iscsiConnectionWhereInput.initiatorIpStartsWith) &&
        equalsNullable(this.iscsiTarget, iscsiConnectionWhereInput.iscsiTarget) &&
        equalsNullable(this.NOT, iscsiConnectionWhereInput.NOT) &&
        equalsNullable(this.nvmfSubsystem, iscsiConnectionWhereInput.nvmfSubsystem) &&
        equalsNullable(this.OR, iscsiConnectionWhereInput.OR) &&
        equalsNullable(this.type, iscsiConnectionWhereInput.type) &&
        equalsNullable(this.typeIn, iscsiConnectionWhereInput.typeIn) &&
        equalsNullable(this.typeNot, iscsiConnectionWhereInput.typeNot) &&
        equalsNullable(this.typeNotIn, iscsiConnectionWhereInput.typeNotIn);
  }

  private static <T> boolean equalsNullable(JsonNullable<T> a, JsonNullable<T> b) {
    return a == b || (a != null && b != null && a.isPresent() && b.isPresent() && Objects.deepEquals(a.get(), b.get()));
  }

  @Override
  public int hashCode() {
    return Objects.hash(hashCodeNullable(AND), hashCodeNullable(clientPort), hashCodeNullable(clientPortGt), hashCodeNullable(clientPortGte), hashCodeNullable(clientPortIn), hashCodeNullable(clientPortLt), hashCodeNullable(clientPortLte), hashCodeNullable(clientPortNot), hashCodeNullable(clientPortNotIn), hashCodeNullable(cluster), hashCodeNullable(host), hashCodeNullable(id), hashCodeNullable(idContains), hashCodeNullable(idEndsWith), hashCodeNullable(idGt), hashCodeNullable(idGte), hashCodeNullable(idIn), hashCodeNullable(idLt), hashCodeNullable(idLte), hashCodeNullable(idNot), hashCodeNullable(idNotContains), hashCodeNullable(idNotEndsWith), hashCodeNullable(idNotIn), hashCodeNullable(idNotStartsWith), hashCodeNullable(idStartsWith), hashCodeNullable(initiatorIp), hashCodeNullable(initiatorIpContains), hashCodeNullable(initiatorIpEndsWith), hashCodeNullable(initiatorIpGt), hashCodeNullable(initiatorIpGte), hashCodeNullable(initiatorIpIn), hashCodeNullable(initiatorIpLt), hashCodeNullable(initiatorIpLte), hashCodeNullable(initiatorIpNot), hashCodeNullable(initiatorIpNotContains), hashCodeNullable(initiatorIpNotEndsWith), hashCodeNullable(initiatorIpNotIn), hashCodeNullable(initiatorIpNotStartsWith), hashCodeNullable(initiatorIpStartsWith), hashCodeNullable(iscsiTarget), hashCodeNullable(NOT), hashCodeNullable(nvmfSubsystem), hashCodeNullable(OR), hashCodeNullable(type), hashCodeNullable(typeIn), hashCodeNullable(typeNot), hashCodeNullable(typeNotIn));
  }

  private static <T> int hashCodeNullable(JsonNullable<T> a) {
    if (a == null) {
      return 1;
    }
    return a.isPresent() ? Arrays.deepHashCode(new Object[]{a.get()}) : 31;
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class IscsiConnectionWhereInput {\n");
    sb.append("    AND: ").append(toIndentedString(AND)).append("\n");
    sb.append("    clientPort: ").append(toIndentedString(clientPort)).append("\n");
    sb.append("    clientPortGt: ").append(toIndentedString(clientPortGt)).append("\n");
    sb.append("    clientPortGte: ").append(toIndentedString(clientPortGte)).append("\n");
    sb.append("    clientPortIn: ").append(toIndentedString(clientPortIn)).append("\n");
    sb.append("    clientPortLt: ").append(toIndentedString(clientPortLt)).append("\n");
    sb.append("    clientPortLte: ").append(toIndentedString(clientPortLte)).append("\n");
    sb.append("    clientPortNot: ").append(toIndentedString(clientPortNot)).append("\n");
    sb.append("    clientPortNotIn: ").append(toIndentedString(clientPortNotIn)).append("\n");
    sb.append("    cluster: ").append(toIndentedString(cluster)).append("\n");
    sb.append("    host: ").append(toIndentedString(host)).append("\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    idContains: ").append(toIndentedString(idContains)).append("\n");
    sb.append("    idEndsWith: ").append(toIndentedString(idEndsWith)).append("\n");
    sb.append("    idGt: ").append(toIndentedString(idGt)).append("\n");
    sb.append("    idGte: ").append(toIndentedString(idGte)).append("\n");
    sb.append("    idIn: ").append(toIndentedString(idIn)).append("\n");
    sb.append("    idLt: ").append(toIndentedString(idLt)).append("\n");
    sb.append("    idLte: ").append(toIndentedString(idLte)).append("\n");
    sb.append("    idNot: ").append(toIndentedString(idNot)).append("\n");
    sb.append("    idNotContains: ").append(toIndentedString(idNotContains)).append("\n");
    sb.append("    idNotEndsWith: ").append(toIndentedString(idNotEndsWith)).append("\n");
    sb.append("    idNotIn: ").append(toIndentedString(idNotIn)).append("\n");
    sb.append("    idNotStartsWith: ").append(toIndentedString(idNotStartsWith)).append("\n");
    sb.append("    idStartsWith: ").append(toIndentedString(idStartsWith)).append("\n");
    sb.append("    initiatorIp: ").append(toIndentedString(initiatorIp)).append("\n");
    sb.append("    initiatorIpContains: ").append(toIndentedString(initiatorIpContains)).append("\n");
    sb.append("    initiatorIpEndsWith: ").append(toIndentedString(initiatorIpEndsWith)).append("\n");
    sb.append("    initiatorIpGt: ").append(toIndentedString(initiatorIpGt)).append("\n");
    sb.append("    initiatorIpGte: ").append(toIndentedString(initiatorIpGte)).append("\n");
    sb.append("    initiatorIpIn: ").append(toIndentedString(initiatorIpIn)).append("\n");
    sb.append("    initiatorIpLt: ").append(toIndentedString(initiatorIpLt)).append("\n");
    sb.append("    initiatorIpLte: ").append(toIndentedString(initiatorIpLte)).append("\n");
    sb.append("    initiatorIpNot: ").append(toIndentedString(initiatorIpNot)).append("\n");
    sb.append("    initiatorIpNotContains: ").append(toIndentedString(initiatorIpNotContains)).append("\n");
    sb.append("    initiatorIpNotEndsWith: ").append(toIndentedString(initiatorIpNotEndsWith)).append("\n");
    sb.append("    initiatorIpNotIn: ").append(toIndentedString(initiatorIpNotIn)).append("\n");
    sb.append("    initiatorIpNotStartsWith: ").append(toIndentedString(initiatorIpNotStartsWith)).append("\n");
    sb.append("    initiatorIpStartsWith: ").append(toIndentedString(initiatorIpStartsWith)).append("\n");
    sb.append("    iscsiTarget: ").append(toIndentedString(iscsiTarget)).append("\n");
    sb.append("    NOT: ").append(toIndentedString(NOT)).append("\n");
    sb.append("    nvmfSubsystem: ").append(toIndentedString(nvmfSubsystem)).append("\n");
    sb.append("    OR: ").append(toIndentedString(OR)).append("\n");
    sb.append("    type: ").append(toIndentedString(type)).append("\n");
    sb.append("    typeIn: ").append(toIndentedString(typeIn)).append("\n");
    sb.append("    typeNot: ").append(toIndentedString(typeNot)).append("\n");
    sb.append("    typeNotIn: ").append(toIndentedString(typeNotIn)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

