/*
 * Tower SDK API
 * cloudtower operation API and SDK
 *
 * The version of the OpenAPI document: 1.7.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.smartx.tower.model;

import java.util.Objects;
import java.util.Arrays;
import java.util.Map;
import java.util.HashMap;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import com.smartx.tower.model.LicenseType;
import com.smartx.tower.model.SoftwareEdition;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.util.ArrayList;
import java.util.List;
import org.openapitools.jackson.nullable.JsonNullable;
import com.fasterxml.jackson.annotation.JsonIgnore;
import org.openapitools.jackson.nullable.JsonNullable;
import java.util.NoSuchElementException;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;


/**
 * LicenseWhereInput
 */
@JsonPropertyOrder({
  LicenseWhereInput.JSON_PROPERTY_A_N_D,
  LicenseWhereInput.JSON_PROPERTY_EXPIRE_DATE,
  LicenseWhereInput.JSON_PROPERTY_EXPIRE_DATE_GT,
  LicenseWhereInput.JSON_PROPERTY_EXPIRE_DATE_GTE,
  LicenseWhereInput.JSON_PROPERTY_EXPIRE_DATE_IN,
  LicenseWhereInput.JSON_PROPERTY_EXPIRE_DATE_LT,
  LicenseWhereInput.JSON_PROPERTY_EXPIRE_DATE_LTE,
  LicenseWhereInput.JSON_PROPERTY_EXPIRE_DATE_NOT,
  LicenseWhereInput.JSON_PROPERTY_EXPIRE_DATE_NOT_IN,
  LicenseWhereInput.JSON_PROPERTY_ID,
  LicenseWhereInput.JSON_PROPERTY_ID_CONTAINS,
  LicenseWhereInput.JSON_PROPERTY_ID_ENDS_WITH,
  LicenseWhereInput.JSON_PROPERTY_ID_GT,
  LicenseWhereInput.JSON_PROPERTY_ID_GTE,
  LicenseWhereInput.JSON_PROPERTY_ID_IN,
  LicenseWhereInput.JSON_PROPERTY_ID_LT,
  LicenseWhereInput.JSON_PROPERTY_ID_LTE,
  LicenseWhereInput.JSON_PROPERTY_ID_NOT,
  LicenseWhereInput.JSON_PROPERTY_ID_NOT_CONTAINS,
  LicenseWhereInput.JSON_PROPERTY_ID_NOT_ENDS_WITH,
  LicenseWhereInput.JSON_PROPERTY_ID_NOT_IN,
  LicenseWhereInput.JSON_PROPERTY_ID_NOT_STARTS_WITH,
  LicenseWhereInput.JSON_PROPERTY_ID_STARTS_WITH,
  LicenseWhereInput.JSON_PROPERTY_LICENSE_SERIAL,
  LicenseWhereInput.JSON_PROPERTY_LICENSE_SERIAL_CONTAINS,
  LicenseWhereInput.JSON_PROPERTY_LICENSE_SERIAL_ENDS_WITH,
  LicenseWhereInput.JSON_PROPERTY_LICENSE_SERIAL_GT,
  LicenseWhereInput.JSON_PROPERTY_LICENSE_SERIAL_GTE,
  LicenseWhereInput.JSON_PROPERTY_LICENSE_SERIAL_IN,
  LicenseWhereInput.JSON_PROPERTY_LICENSE_SERIAL_LT,
  LicenseWhereInput.JSON_PROPERTY_LICENSE_SERIAL_LTE,
  LicenseWhereInput.JSON_PROPERTY_LICENSE_SERIAL_NOT,
  LicenseWhereInput.JSON_PROPERTY_LICENSE_SERIAL_NOT_CONTAINS,
  LicenseWhereInput.JSON_PROPERTY_LICENSE_SERIAL_NOT_ENDS_WITH,
  LicenseWhereInput.JSON_PROPERTY_LICENSE_SERIAL_NOT_IN,
  LicenseWhereInput.JSON_PROPERTY_LICENSE_SERIAL_NOT_STARTS_WITH,
  LicenseWhereInput.JSON_PROPERTY_LICENSE_SERIAL_STARTS_WITH,
  LicenseWhereInput.JSON_PROPERTY_MAINTENANCE_END_DATE,
  LicenseWhereInput.JSON_PROPERTY_MAINTENANCE_END_DATE_GT,
  LicenseWhereInput.JSON_PROPERTY_MAINTENANCE_END_DATE_GTE,
  LicenseWhereInput.JSON_PROPERTY_MAINTENANCE_END_DATE_IN,
  LicenseWhereInput.JSON_PROPERTY_MAINTENANCE_END_DATE_LT,
  LicenseWhereInput.JSON_PROPERTY_MAINTENANCE_END_DATE_LTE,
  LicenseWhereInput.JSON_PROPERTY_MAINTENANCE_END_DATE_NOT,
  LicenseWhereInput.JSON_PROPERTY_MAINTENANCE_END_DATE_NOT_IN,
  LicenseWhereInput.JSON_PROPERTY_MAINTENANCE_START_DATE,
  LicenseWhereInput.JSON_PROPERTY_MAINTENANCE_START_DATE_GT,
  LicenseWhereInput.JSON_PROPERTY_MAINTENANCE_START_DATE_GTE,
  LicenseWhereInput.JSON_PROPERTY_MAINTENANCE_START_DATE_IN,
  LicenseWhereInput.JSON_PROPERTY_MAINTENANCE_START_DATE_LT,
  LicenseWhereInput.JSON_PROPERTY_MAINTENANCE_START_DATE_LTE,
  LicenseWhereInput.JSON_PROPERTY_MAINTENANCE_START_DATE_NOT,
  LicenseWhereInput.JSON_PROPERTY_MAINTENANCE_START_DATE_NOT_IN,
  LicenseWhereInput.JSON_PROPERTY_MAX_CHUNK_NUM,
  LicenseWhereInput.JSON_PROPERTY_MAX_CHUNK_NUM_GT,
  LicenseWhereInput.JSON_PROPERTY_MAX_CHUNK_NUM_GTE,
  LicenseWhereInput.JSON_PROPERTY_MAX_CHUNK_NUM_IN,
  LicenseWhereInput.JSON_PROPERTY_MAX_CHUNK_NUM_LT,
  LicenseWhereInput.JSON_PROPERTY_MAX_CHUNK_NUM_LTE,
  LicenseWhereInput.JSON_PROPERTY_MAX_CHUNK_NUM_NOT,
  LicenseWhereInput.JSON_PROPERTY_MAX_CHUNK_NUM_NOT_IN,
  LicenseWhereInput.JSON_PROPERTY_MAX_CLUSTER_NUM,
  LicenseWhereInput.JSON_PROPERTY_MAX_CLUSTER_NUM_GT,
  LicenseWhereInput.JSON_PROPERTY_MAX_CLUSTER_NUM_GTE,
  LicenseWhereInput.JSON_PROPERTY_MAX_CLUSTER_NUM_IN,
  LicenseWhereInput.JSON_PROPERTY_MAX_CLUSTER_NUM_LT,
  LicenseWhereInput.JSON_PROPERTY_MAX_CLUSTER_NUM_LTE,
  LicenseWhereInput.JSON_PROPERTY_MAX_CLUSTER_NUM_NOT,
  LicenseWhereInput.JSON_PROPERTY_MAX_CLUSTER_NUM_NOT_IN,
  LicenseWhereInput.JSON_PROPERTY_N_O_T,
  LicenseWhereInput.JSON_PROPERTY_O_R,
  LicenseWhereInput.JSON_PROPERTY_SIGN_DATE,
  LicenseWhereInput.JSON_PROPERTY_SIGN_DATE_GT,
  LicenseWhereInput.JSON_PROPERTY_SIGN_DATE_GTE,
  LicenseWhereInput.JSON_PROPERTY_SIGN_DATE_IN,
  LicenseWhereInput.JSON_PROPERTY_SIGN_DATE_LT,
  LicenseWhereInput.JSON_PROPERTY_SIGN_DATE_LTE,
  LicenseWhereInput.JSON_PROPERTY_SIGN_DATE_NOT,
  LicenseWhereInput.JSON_PROPERTY_SIGN_DATE_NOT_IN,
  LicenseWhereInput.JSON_PROPERTY_SOFTWARE_EDITION,
  LicenseWhereInput.JSON_PROPERTY_SOFTWARE_EDITION_IN,
  LicenseWhereInput.JSON_PROPERTY_SOFTWARE_EDITION_NOT,
  LicenseWhereInput.JSON_PROPERTY_SOFTWARE_EDITION_NOT_IN,
  LicenseWhereInput.JSON_PROPERTY_TYPE,
  LicenseWhereInput.JSON_PROPERTY_TYPE_IN,
  LicenseWhereInput.JSON_PROPERTY_TYPE_NOT,
  LicenseWhereInput.JSON_PROPERTY_TYPE_NOT_IN
})
@javax.annotation.processing.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2021-10-27T15:59:14.939791800+08:00[Asia/Shanghai]")
public class LicenseWhereInput {
  public static final String JSON_PROPERTY_A_N_D = "AND";
  private JsonNullable<List<LicenseWhereInput>> AND = JsonNullable.<List<LicenseWhereInput>>undefined();

  public static final String JSON_PROPERTY_EXPIRE_DATE = "expire_date";
  private JsonNullable<String> expireDate = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_EXPIRE_DATE_GT = "expire_date_gt";
  private JsonNullable<String> expireDateGt = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_EXPIRE_DATE_GTE = "expire_date_gte";
  private JsonNullable<String> expireDateGte = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_EXPIRE_DATE_IN = "expire_date_in";
  private JsonNullable<List<String>> expireDateIn = JsonNullable.<List<String>>undefined();

  public static final String JSON_PROPERTY_EXPIRE_DATE_LT = "expire_date_lt";
  private JsonNullable<String> expireDateLt = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_EXPIRE_DATE_LTE = "expire_date_lte";
  private JsonNullable<String> expireDateLte = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_EXPIRE_DATE_NOT = "expire_date_not";
  private JsonNullable<String> expireDateNot = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_EXPIRE_DATE_NOT_IN = "expire_date_not_in";
  private JsonNullable<List<String>> expireDateNotIn = JsonNullable.<List<String>>undefined();

  public static final String JSON_PROPERTY_ID = "id";
  private JsonNullable<String> id = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_ID_CONTAINS = "id_contains";
  private JsonNullable<String> idContains = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_ID_ENDS_WITH = "id_ends_with";
  private JsonNullable<String> idEndsWith = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_ID_GT = "id_gt";
  private JsonNullable<String> idGt = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_ID_GTE = "id_gte";
  private JsonNullable<String> idGte = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_ID_IN = "id_in";
  private JsonNullable<List<String>> idIn = JsonNullable.<List<String>>undefined();

  public static final String JSON_PROPERTY_ID_LT = "id_lt";
  private JsonNullable<String> idLt = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_ID_LTE = "id_lte";
  private JsonNullable<String> idLte = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_ID_NOT = "id_not";
  private JsonNullable<String> idNot = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_ID_NOT_CONTAINS = "id_not_contains";
  private JsonNullable<String> idNotContains = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_ID_NOT_ENDS_WITH = "id_not_ends_with";
  private JsonNullable<String> idNotEndsWith = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_ID_NOT_IN = "id_not_in";
  private JsonNullable<List<String>> idNotIn = JsonNullable.<List<String>>undefined();

  public static final String JSON_PROPERTY_ID_NOT_STARTS_WITH = "id_not_starts_with";
  private JsonNullable<String> idNotStartsWith = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_ID_STARTS_WITH = "id_starts_with";
  private JsonNullable<String> idStartsWith = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_LICENSE_SERIAL = "license_serial";
  private JsonNullable<String> licenseSerial = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_LICENSE_SERIAL_CONTAINS = "license_serial_contains";
  private JsonNullable<String> licenseSerialContains = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_LICENSE_SERIAL_ENDS_WITH = "license_serial_ends_with";
  private JsonNullable<String> licenseSerialEndsWith = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_LICENSE_SERIAL_GT = "license_serial_gt";
  private JsonNullable<String> licenseSerialGt = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_LICENSE_SERIAL_GTE = "license_serial_gte";
  private JsonNullable<String> licenseSerialGte = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_LICENSE_SERIAL_IN = "license_serial_in";
  private JsonNullable<List<String>> licenseSerialIn = JsonNullable.<List<String>>undefined();

  public static final String JSON_PROPERTY_LICENSE_SERIAL_LT = "license_serial_lt";
  private JsonNullable<String> licenseSerialLt = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_LICENSE_SERIAL_LTE = "license_serial_lte";
  private JsonNullable<String> licenseSerialLte = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_LICENSE_SERIAL_NOT = "license_serial_not";
  private JsonNullable<String> licenseSerialNot = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_LICENSE_SERIAL_NOT_CONTAINS = "license_serial_not_contains";
  private JsonNullable<String> licenseSerialNotContains = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_LICENSE_SERIAL_NOT_ENDS_WITH = "license_serial_not_ends_with";
  private JsonNullable<String> licenseSerialNotEndsWith = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_LICENSE_SERIAL_NOT_IN = "license_serial_not_in";
  private JsonNullable<List<String>> licenseSerialNotIn = JsonNullable.<List<String>>undefined();

  public static final String JSON_PROPERTY_LICENSE_SERIAL_NOT_STARTS_WITH = "license_serial_not_starts_with";
  private JsonNullable<String> licenseSerialNotStartsWith = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_LICENSE_SERIAL_STARTS_WITH = "license_serial_starts_with";
  private JsonNullable<String> licenseSerialStartsWith = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_MAINTENANCE_END_DATE = "maintenance_end_date";
  private JsonNullable<String> maintenanceEndDate = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_MAINTENANCE_END_DATE_GT = "maintenance_end_date_gt";
  private JsonNullable<String> maintenanceEndDateGt = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_MAINTENANCE_END_DATE_GTE = "maintenance_end_date_gte";
  private JsonNullable<String> maintenanceEndDateGte = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_MAINTENANCE_END_DATE_IN = "maintenance_end_date_in";
  private JsonNullable<List<String>> maintenanceEndDateIn = JsonNullable.<List<String>>undefined();

  public static final String JSON_PROPERTY_MAINTENANCE_END_DATE_LT = "maintenance_end_date_lt";
  private JsonNullable<String> maintenanceEndDateLt = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_MAINTENANCE_END_DATE_LTE = "maintenance_end_date_lte";
  private JsonNullable<String> maintenanceEndDateLte = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_MAINTENANCE_END_DATE_NOT = "maintenance_end_date_not";
  private JsonNullable<String> maintenanceEndDateNot = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_MAINTENANCE_END_DATE_NOT_IN = "maintenance_end_date_not_in";
  private JsonNullable<List<String>> maintenanceEndDateNotIn = JsonNullable.<List<String>>undefined();

  public static final String JSON_PROPERTY_MAINTENANCE_START_DATE = "maintenance_start_date";
  private JsonNullable<String> maintenanceStartDate = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_MAINTENANCE_START_DATE_GT = "maintenance_start_date_gt";
  private JsonNullable<String> maintenanceStartDateGt = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_MAINTENANCE_START_DATE_GTE = "maintenance_start_date_gte";
  private JsonNullable<String> maintenanceStartDateGte = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_MAINTENANCE_START_DATE_IN = "maintenance_start_date_in";
  private JsonNullable<List<String>> maintenanceStartDateIn = JsonNullable.<List<String>>undefined();

  public static final String JSON_PROPERTY_MAINTENANCE_START_DATE_LT = "maintenance_start_date_lt";
  private JsonNullable<String> maintenanceStartDateLt = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_MAINTENANCE_START_DATE_LTE = "maintenance_start_date_lte";
  private JsonNullable<String> maintenanceStartDateLte = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_MAINTENANCE_START_DATE_NOT = "maintenance_start_date_not";
  private JsonNullable<String> maintenanceStartDateNot = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_MAINTENANCE_START_DATE_NOT_IN = "maintenance_start_date_not_in";
  private JsonNullable<List<String>> maintenanceStartDateNotIn = JsonNullable.<List<String>>undefined();

  public static final String JSON_PROPERTY_MAX_CHUNK_NUM = "max_chunk_num";
  private JsonNullable<Double> maxChunkNum = JsonNullable.<Double>undefined();

  public static final String JSON_PROPERTY_MAX_CHUNK_NUM_GT = "max_chunk_num_gt";
  private JsonNullable<Double> maxChunkNumGt = JsonNullable.<Double>undefined();

  public static final String JSON_PROPERTY_MAX_CHUNK_NUM_GTE = "max_chunk_num_gte";
  private JsonNullable<Double> maxChunkNumGte = JsonNullable.<Double>undefined();

  public static final String JSON_PROPERTY_MAX_CHUNK_NUM_IN = "max_chunk_num_in";
  private JsonNullable<List<Double>> maxChunkNumIn = JsonNullable.<List<Double>>undefined();

  public static final String JSON_PROPERTY_MAX_CHUNK_NUM_LT = "max_chunk_num_lt";
  private JsonNullable<Double> maxChunkNumLt = JsonNullable.<Double>undefined();

  public static final String JSON_PROPERTY_MAX_CHUNK_NUM_LTE = "max_chunk_num_lte";
  private JsonNullable<Double> maxChunkNumLte = JsonNullable.<Double>undefined();

  public static final String JSON_PROPERTY_MAX_CHUNK_NUM_NOT = "max_chunk_num_not";
  private JsonNullable<Double> maxChunkNumNot = JsonNullable.<Double>undefined();

  public static final String JSON_PROPERTY_MAX_CHUNK_NUM_NOT_IN = "max_chunk_num_not_in";
  private JsonNullable<List<Double>> maxChunkNumNotIn = JsonNullable.<List<Double>>undefined();

  public static final String JSON_PROPERTY_MAX_CLUSTER_NUM = "max_cluster_num";
  private JsonNullable<Double> maxClusterNum = JsonNullable.<Double>undefined();

  public static final String JSON_PROPERTY_MAX_CLUSTER_NUM_GT = "max_cluster_num_gt";
  private JsonNullable<Double> maxClusterNumGt = JsonNullable.<Double>undefined();

  public static final String JSON_PROPERTY_MAX_CLUSTER_NUM_GTE = "max_cluster_num_gte";
  private JsonNullable<Double> maxClusterNumGte = JsonNullable.<Double>undefined();

  public static final String JSON_PROPERTY_MAX_CLUSTER_NUM_IN = "max_cluster_num_in";
  private JsonNullable<List<Double>> maxClusterNumIn = JsonNullable.<List<Double>>undefined();

  public static final String JSON_PROPERTY_MAX_CLUSTER_NUM_LT = "max_cluster_num_lt";
  private JsonNullable<Double> maxClusterNumLt = JsonNullable.<Double>undefined();

  public static final String JSON_PROPERTY_MAX_CLUSTER_NUM_LTE = "max_cluster_num_lte";
  private JsonNullable<Double> maxClusterNumLte = JsonNullable.<Double>undefined();

  public static final String JSON_PROPERTY_MAX_CLUSTER_NUM_NOT = "max_cluster_num_not";
  private JsonNullable<Double> maxClusterNumNot = JsonNullable.<Double>undefined();

  public static final String JSON_PROPERTY_MAX_CLUSTER_NUM_NOT_IN = "max_cluster_num_not_in";
  private JsonNullable<List<Double>> maxClusterNumNotIn = JsonNullable.<List<Double>>undefined();

  public static final String JSON_PROPERTY_N_O_T = "NOT";
  private JsonNullable<List<LicenseWhereInput>> NOT = JsonNullable.<List<LicenseWhereInput>>undefined();

  public static final String JSON_PROPERTY_O_R = "OR";
  private JsonNullable<List<LicenseWhereInput>> OR = JsonNullable.<List<LicenseWhereInput>>undefined();

  public static final String JSON_PROPERTY_SIGN_DATE = "sign_date";
  private JsonNullable<String> signDate = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_SIGN_DATE_GT = "sign_date_gt";
  private JsonNullable<String> signDateGt = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_SIGN_DATE_GTE = "sign_date_gte";
  private JsonNullable<String> signDateGte = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_SIGN_DATE_IN = "sign_date_in";
  private JsonNullable<List<String>> signDateIn = JsonNullable.<List<String>>undefined();

  public static final String JSON_PROPERTY_SIGN_DATE_LT = "sign_date_lt";
  private JsonNullable<String> signDateLt = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_SIGN_DATE_LTE = "sign_date_lte";
  private JsonNullable<String> signDateLte = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_SIGN_DATE_NOT = "sign_date_not";
  private JsonNullable<String> signDateNot = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_SIGN_DATE_NOT_IN = "sign_date_not_in";
  private JsonNullable<List<String>> signDateNotIn = JsonNullable.<List<String>>undefined();

  public static final String JSON_PROPERTY_SOFTWARE_EDITION = "software_edition";
  private JsonNullable<SoftwareEdition> softwareEdition = JsonNullable.<SoftwareEdition>undefined();

  public static final String JSON_PROPERTY_SOFTWARE_EDITION_IN = "software_edition_in";
  private JsonNullable<List<SoftwareEdition>> softwareEditionIn = JsonNullable.<List<SoftwareEdition>>undefined();

  public static final String JSON_PROPERTY_SOFTWARE_EDITION_NOT = "software_edition_not";
  private JsonNullable<SoftwareEdition> softwareEditionNot = JsonNullable.<SoftwareEdition>undefined();

  public static final String JSON_PROPERTY_SOFTWARE_EDITION_NOT_IN = "software_edition_not_in";
  private JsonNullable<List<SoftwareEdition>> softwareEditionNotIn = JsonNullable.<List<SoftwareEdition>>undefined();

  public static final String JSON_PROPERTY_TYPE = "type";
  private JsonNullable<LicenseType> type = JsonNullable.<LicenseType>undefined();

  public static final String JSON_PROPERTY_TYPE_IN = "type_in";
  private JsonNullable<List<LicenseType>> typeIn = JsonNullable.<List<LicenseType>>undefined();

  public static final String JSON_PROPERTY_TYPE_NOT = "type_not";
  private JsonNullable<LicenseType> typeNot = JsonNullable.<LicenseType>undefined();

  public static final String JSON_PROPERTY_TYPE_NOT_IN = "type_not_in";
  private JsonNullable<List<LicenseType>> typeNotIn = JsonNullable.<List<LicenseType>>undefined();


  public LicenseWhereInput AND(List<LicenseWhereInput> AND) {
    this.AND = JsonNullable.<List<LicenseWhereInput>>of(AND);
    return this;
  }

  public LicenseWhereInput addANDItem(LicenseWhereInput ANDItem) {
    if (this.AND == null || !this.AND.isPresent()) {
      this.AND = JsonNullable.<List<LicenseWhereInput>>of(new ArrayList<>());
    }
    try {
      this.AND.get().add(ANDItem);
    } catch (java.util.NoSuchElementException e) {
      // this can never happen, as we make sure above that the value is present
    }
    return this;
  }

   /**
   * Get AND
   * @return AND
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public List<LicenseWhereInput> getAND() {
        return AND.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_A_N_D)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<List<LicenseWhereInput>> getAND_JsonNullable() {
    return AND;
  }
  
  @JsonProperty(JSON_PROPERTY_A_N_D)
  public void setAND_JsonNullable(JsonNullable<List<LicenseWhereInput>> AND) {
    this.AND = AND;
  }

  public void setAND(List<LicenseWhereInput> AND) {
    this.AND = JsonNullable.<List<LicenseWhereInput>>of(AND);
  }


  public LicenseWhereInput expireDate(String expireDate) {
    this.expireDate = JsonNullable.<String>of(expireDate);
    return this;
  }

   /**
   * Get expireDate
   * @return expireDate
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getExpireDate() {
        return expireDate.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_EXPIRE_DATE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getExpireDate_JsonNullable() {
    return expireDate;
  }
  
  @JsonProperty(JSON_PROPERTY_EXPIRE_DATE)
  public void setExpireDate_JsonNullable(JsonNullable<String> expireDate) {
    this.expireDate = expireDate;
  }

  public void setExpireDate(String expireDate) {
    this.expireDate = JsonNullable.<String>of(expireDate);
  }


  public LicenseWhereInput expireDateGt(String expireDateGt) {
    this.expireDateGt = JsonNullable.<String>of(expireDateGt);
    return this;
  }

   /**
   * Get expireDateGt
   * @return expireDateGt
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getExpireDateGt() {
        return expireDateGt.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_EXPIRE_DATE_GT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getExpireDateGt_JsonNullable() {
    return expireDateGt;
  }
  
  @JsonProperty(JSON_PROPERTY_EXPIRE_DATE_GT)
  public void setExpireDateGt_JsonNullable(JsonNullable<String> expireDateGt) {
    this.expireDateGt = expireDateGt;
  }

  public void setExpireDateGt(String expireDateGt) {
    this.expireDateGt = JsonNullable.<String>of(expireDateGt);
  }


  public LicenseWhereInput expireDateGte(String expireDateGte) {
    this.expireDateGte = JsonNullable.<String>of(expireDateGte);
    return this;
  }

   /**
   * Get expireDateGte
   * @return expireDateGte
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getExpireDateGte() {
        return expireDateGte.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_EXPIRE_DATE_GTE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getExpireDateGte_JsonNullable() {
    return expireDateGte;
  }
  
  @JsonProperty(JSON_PROPERTY_EXPIRE_DATE_GTE)
  public void setExpireDateGte_JsonNullable(JsonNullable<String> expireDateGte) {
    this.expireDateGte = expireDateGte;
  }

  public void setExpireDateGte(String expireDateGte) {
    this.expireDateGte = JsonNullable.<String>of(expireDateGte);
  }


  public LicenseWhereInput expireDateIn(List<String> expireDateIn) {
    this.expireDateIn = JsonNullable.<List<String>>of(expireDateIn);
    return this;
  }

  public LicenseWhereInput addExpireDateInItem(String expireDateInItem) {
    if (this.expireDateIn == null || !this.expireDateIn.isPresent()) {
      this.expireDateIn = JsonNullable.<List<String>>of(new ArrayList<>());
    }
    try {
      this.expireDateIn.get().add(expireDateInItem);
    } catch (java.util.NoSuchElementException e) {
      // this can never happen, as we make sure above that the value is present
    }
    return this;
  }

   /**
   * Get expireDateIn
   * @return expireDateIn
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public List<String> getExpireDateIn() {
        return expireDateIn.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_EXPIRE_DATE_IN)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<List<String>> getExpireDateIn_JsonNullable() {
    return expireDateIn;
  }
  
  @JsonProperty(JSON_PROPERTY_EXPIRE_DATE_IN)
  public void setExpireDateIn_JsonNullable(JsonNullable<List<String>> expireDateIn) {
    this.expireDateIn = expireDateIn;
  }

  public void setExpireDateIn(List<String> expireDateIn) {
    this.expireDateIn = JsonNullable.<List<String>>of(expireDateIn);
  }


  public LicenseWhereInput expireDateLt(String expireDateLt) {
    this.expireDateLt = JsonNullable.<String>of(expireDateLt);
    return this;
  }

   /**
   * Get expireDateLt
   * @return expireDateLt
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getExpireDateLt() {
        return expireDateLt.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_EXPIRE_DATE_LT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getExpireDateLt_JsonNullable() {
    return expireDateLt;
  }
  
  @JsonProperty(JSON_PROPERTY_EXPIRE_DATE_LT)
  public void setExpireDateLt_JsonNullable(JsonNullable<String> expireDateLt) {
    this.expireDateLt = expireDateLt;
  }

  public void setExpireDateLt(String expireDateLt) {
    this.expireDateLt = JsonNullable.<String>of(expireDateLt);
  }


  public LicenseWhereInput expireDateLte(String expireDateLte) {
    this.expireDateLte = JsonNullable.<String>of(expireDateLte);
    return this;
  }

   /**
   * Get expireDateLte
   * @return expireDateLte
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getExpireDateLte() {
        return expireDateLte.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_EXPIRE_DATE_LTE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getExpireDateLte_JsonNullable() {
    return expireDateLte;
  }
  
  @JsonProperty(JSON_PROPERTY_EXPIRE_DATE_LTE)
  public void setExpireDateLte_JsonNullable(JsonNullable<String> expireDateLte) {
    this.expireDateLte = expireDateLte;
  }

  public void setExpireDateLte(String expireDateLte) {
    this.expireDateLte = JsonNullable.<String>of(expireDateLte);
  }


  public LicenseWhereInput expireDateNot(String expireDateNot) {
    this.expireDateNot = JsonNullable.<String>of(expireDateNot);
    return this;
  }

   /**
   * Get expireDateNot
   * @return expireDateNot
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getExpireDateNot() {
        return expireDateNot.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_EXPIRE_DATE_NOT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getExpireDateNot_JsonNullable() {
    return expireDateNot;
  }
  
  @JsonProperty(JSON_PROPERTY_EXPIRE_DATE_NOT)
  public void setExpireDateNot_JsonNullable(JsonNullable<String> expireDateNot) {
    this.expireDateNot = expireDateNot;
  }

  public void setExpireDateNot(String expireDateNot) {
    this.expireDateNot = JsonNullable.<String>of(expireDateNot);
  }


  public LicenseWhereInput expireDateNotIn(List<String> expireDateNotIn) {
    this.expireDateNotIn = JsonNullable.<List<String>>of(expireDateNotIn);
    return this;
  }

  public LicenseWhereInput addExpireDateNotInItem(String expireDateNotInItem) {
    if (this.expireDateNotIn == null || !this.expireDateNotIn.isPresent()) {
      this.expireDateNotIn = JsonNullable.<List<String>>of(new ArrayList<>());
    }
    try {
      this.expireDateNotIn.get().add(expireDateNotInItem);
    } catch (java.util.NoSuchElementException e) {
      // this can never happen, as we make sure above that the value is present
    }
    return this;
  }

   /**
   * Get expireDateNotIn
   * @return expireDateNotIn
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public List<String> getExpireDateNotIn() {
        return expireDateNotIn.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_EXPIRE_DATE_NOT_IN)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<List<String>> getExpireDateNotIn_JsonNullable() {
    return expireDateNotIn;
  }
  
  @JsonProperty(JSON_PROPERTY_EXPIRE_DATE_NOT_IN)
  public void setExpireDateNotIn_JsonNullable(JsonNullable<List<String>> expireDateNotIn) {
    this.expireDateNotIn = expireDateNotIn;
  }

  public void setExpireDateNotIn(List<String> expireDateNotIn) {
    this.expireDateNotIn = JsonNullable.<List<String>>of(expireDateNotIn);
  }


  public LicenseWhereInput id(String id) {
    this.id = JsonNullable.<String>of(id);
    return this;
  }

   /**
   * Get id
   * @return id
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getId() {
        return id.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getId_JsonNullable() {
    return id;
  }
  
  @JsonProperty(JSON_PROPERTY_ID)
  public void setId_JsonNullable(JsonNullable<String> id) {
    this.id = id;
  }

  public void setId(String id) {
    this.id = JsonNullable.<String>of(id);
  }


  public LicenseWhereInput idContains(String idContains) {
    this.idContains = JsonNullable.<String>of(idContains);
    return this;
  }

   /**
   * Get idContains
   * @return idContains
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getIdContains() {
        return idContains.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_ID_CONTAINS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getIdContains_JsonNullable() {
    return idContains;
  }
  
  @JsonProperty(JSON_PROPERTY_ID_CONTAINS)
  public void setIdContains_JsonNullable(JsonNullable<String> idContains) {
    this.idContains = idContains;
  }

  public void setIdContains(String idContains) {
    this.idContains = JsonNullable.<String>of(idContains);
  }


  public LicenseWhereInput idEndsWith(String idEndsWith) {
    this.idEndsWith = JsonNullable.<String>of(idEndsWith);
    return this;
  }

   /**
   * Get idEndsWith
   * @return idEndsWith
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getIdEndsWith() {
        return idEndsWith.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_ID_ENDS_WITH)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getIdEndsWith_JsonNullable() {
    return idEndsWith;
  }
  
  @JsonProperty(JSON_PROPERTY_ID_ENDS_WITH)
  public void setIdEndsWith_JsonNullable(JsonNullable<String> idEndsWith) {
    this.idEndsWith = idEndsWith;
  }

  public void setIdEndsWith(String idEndsWith) {
    this.idEndsWith = JsonNullable.<String>of(idEndsWith);
  }


  public LicenseWhereInput idGt(String idGt) {
    this.idGt = JsonNullable.<String>of(idGt);
    return this;
  }

   /**
   * Get idGt
   * @return idGt
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getIdGt() {
        return idGt.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_ID_GT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getIdGt_JsonNullable() {
    return idGt;
  }
  
  @JsonProperty(JSON_PROPERTY_ID_GT)
  public void setIdGt_JsonNullable(JsonNullable<String> idGt) {
    this.idGt = idGt;
  }

  public void setIdGt(String idGt) {
    this.idGt = JsonNullable.<String>of(idGt);
  }


  public LicenseWhereInput idGte(String idGte) {
    this.idGte = JsonNullable.<String>of(idGte);
    return this;
  }

   /**
   * Get idGte
   * @return idGte
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getIdGte() {
        return idGte.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_ID_GTE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getIdGte_JsonNullable() {
    return idGte;
  }
  
  @JsonProperty(JSON_PROPERTY_ID_GTE)
  public void setIdGte_JsonNullable(JsonNullable<String> idGte) {
    this.idGte = idGte;
  }

  public void setIdGte(String idGte) {
    this.idGte = JsonNullable.<String>of(idGte);
  }


  public LicenseWhereInput idIn(List<String> idIn) {
    this.idIn = JsonNullable.<List<String>>of(idIn);
    return this;
  }

  public LicenseWhereInput addIdInItem(String idInItem) {
    if (this.idIn == null || !this.idIn.isPresent()) {
      this.idIn = JsonNullable.<List<String>>of(new ArrayList<>());
    }
    try {
      this.idIn.get().add(idInItem);
    } catch (java.util.NoSuchElementException e) {
      // this can never happen, as we make sure above that the value is present
    }
    return this;
  }

   /**
   * Get idIn
   * @return idIn
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public List<String> getIdIn() {
        return idIn.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_ID_IN)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<List<String>> getIdIn_JsonNullable() {
    return idIn;
  }
  
  @JsonProperty(JSON_PROPERTY_ID_IN)
  public void setIdIn_JsonNullable(JsonNullable<List<String>> idIn) {
    this.idIn = idIn;
  }

  public void setIdIn(List<String> idIn) {
    this.idIn = JsonNullable.<List<String>>of(idIn);
  }


  public LicenseWhereInput idLt(String idLt) {
    this.idLt = JsonNullable.<String>of(idLt);
    return this;
  }

   /**
   * Get idLt
   * @return idLt
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getIdLt() {
        return idLt.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_ID_LT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getIdLt_JsonNullable() {
    return idLt;
  }
  
  @JsonProperty(JSON_PROPERTY_ID_LT)
  public void setIdLt_JsonNullable(JsonNullable<String> idLt) {
    this.idLt = idLt;
  }

  public void setIdLt(String idLt) {
    this.idLt = JsonNullable.<String>of(idLt);
  }


  public LicenseWhereInput idLte(String idLte) {
    this.idLte = JsonNullable.<String>of(idLte);
    return this;
  }

   /**
   * Get idLte
   * @return idLte
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getIdLte() {
        return idLte.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_ID_LTE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getIdLte_JsonNullable() {
    return idLte;
  }
  
  @JsonProperty(JSON_PROPERTY_ID_LTE)
  public void setIdLte_JsonNullable(JsonNullable<String> idLte) {
    this.idLte = idLte;
  }

  public void setIdLte(String idLte) {
    this.idLte = JsonNullable.<String>of(idLte);
  }


  public LicenseWhereInput idNot(String idNot) {
    this.idNot = JsonNullable.<String>of(idNot);
    return this;
  }

   /**
   * Get idNot
   * @return idNot
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getIdNot() {
        return idNot.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_ID_NOT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getIdNot_JsonNullable() {
    return idNot;
  }
  
  @JsonProperty(JSON_PROPERTY_ID_NOT)
  public void setIdNot_JsonNullable(JsonNullable<String> idNot) {
    this.idNot = idNot;
  }

  public void setIdNot(String idNot) {
    this.idNot = JsonNullable.<String>of(idNot);
  }


  public LicenseWhereInput idNotContains(String idNotContains) {
    this.idNotContains = JsonNullable.<String>of(idNotContains);
    return this;
  }

   /**
   * Get idNotContains
   * @return idNotContains
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getIdNotContains() {
        return idNotContains.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_ID_NOT_CONTAINS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getIdNotContains_JsonNullable() {
    return idNotContains;
  }
  
  @JsonProperty(JSON_PROPERTY_ID_NOT_CONTAINS)
  public void setIdNotContains_JsonNullable(JsonNullable<String> idNotContains) {
    this.idNotContains = idNotContains;
  }

  public void setIdNotContains(String idNotContains) {
    this.idNotContains = JsonNullable.<String>of(idNotContains);
  }


  public LicenseWhereInput idNotEndsWith(String idNotEndsWith) {
    this.idNotEndsWith = JsonNullable.<String>of(idNotEndsWith);
    return this;
  }

   /**
   * Get idNotEndsWith
   * @return idNotEndsWith
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getIdNotEndsWith() {
        return idNotEndsWith.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_ID_NOT_ENDS_WITH)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getIdNotEndsWith_JsonNullable() {
    return idNotEndsWith;
  }
  
  @JsonProperty(JSON_PROPERTY_ID_NOT_ENDS_WITH)
  public void setIdNotEndsWith_JsonNullable(JsonNullable<String> idNotEndsWith) {
    this.idNotEndsWith = idNotEndsWith;
  }

  public void setIdNotEndsWith(String idNotEndsWith) {
    this.idNotEndsWith = JsonNullable.<String>of(idNotEndsWith);
  }


  public LicenseWhereInput idNotIn(List<String> idNotIn) {
    this.idNotIn = JsonNullable.<List<String>>of(idNotIn);
    return this;
  }

  public LicenseWhereInput addIdNotInItem(String idNotInItem) {
    if (this.idNotIn == null || !this.idNotIn.isPresent()) {
      this.idNotIn = JsonNullable.<List<String>>of(new ArrayList<>());
    }
    try {
      this.idNotIn.get().add(idNotInItem);
    } catch (java.util.NoSuchElementException e) {
      // this can never happen, as we make sure above that the value is present
    }
    return this;
  }

   /**
   * Get idNotIn
   * @return idNotIn
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public List<String> getIdNotIn() {
        return idNotIn.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_ID_NOT_IN)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<List<String>> getIdNotIn_JsonNullable() {
    return idNotIn;
  }
  
  @JsonProperty(JSON_PROPERTY_ID_NOT_IN)
  public void setIdNotIn_JsonNullable(JsonNullable<List<String>> idNotIn) {
    this.idNotIn = idNotIn;
  }

  public void setIdNotIn(List<String> idNotIn) {
    this.idNotIn = JsonNullable.<List<String>>of(idNotIn);
  }


  public LicenseWhereInput idNotStartsWith(String idNotStartsWith) {
    this.idNotStartsWith = JsonNullable.<String>of(idNotStartsWith);
    return this;
  }

   /**
   * Get idNotStartsWith
   * @return idNotStartsWith
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getIdNotStartsWith() {
        return idNotStartsWith.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_ID_NOT_STARTS_WITH)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getIdNotStartsWith_JsonNullable() {
    return idNotStartsWith;
  }
  
  @JsonProperty(JSON_PROPERTY_ID_NOT_STARTS_WITH)
  public void setIdNotStartsWith_JsonNullable(JsonNullable<String> idNotStartsWith) {
    this.idNotStartsWith = idNotStartsWith;
  }

  public void setIdNotStartsWith(String idNotStartsWith) {
    this.idNotStartsWith = JsonNullable.<String>of(idNotStartsWith);
  }


  public LicenseWhereInput idStartsWith(String idStartsWith) {
    this.idStartsWith = JsonNullable.<String>of(idStartsWith);
    return this;
  }

   /**
   * Get idStartsWith
   * @return idStartsWith
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getIdStartsWith() {
        return idStartsWith.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_ID_STARTS_WITH)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getIdStartsWith_JsonNullable() {
    return idStartsWith;
  }
  
  @JsonProperty(JSON_PROPERTY_ID_STARTS_WITH)
  public void setIdStartsWith_JsonNullable(JsonNullable<String> idStartsWith) {
    this.idStartsWith = idStartsWith;
  }

  public void setIdStartsWith(String idStartsWith) {
    this.idStartsWith = JsonNullable.<String>of(idStartsWith);
  }


  public LicenseWhereInput licenseSerial(String licenseSerial) {
    this.licenseSerial = JsonNullable.<String>of(licenseSerial);
    return this;
  }

   /**
   * Get licenseSerial
   * @return licenseSerial
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getLicenseSerial() {
        return licenseSerial.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_LICENSE_SERIAL)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getLicenseSerial_JsonNullable() {
    return licenseSerial;
  }
  
  @JsonProperty(JSON_PROPERTY_LICENSE_SERIAL)
  public void setLicenseSerial_JsonNullable(JsonNullable<String> licenseSerial) {
    this.licenseSerial = licenseSerial;
  }

  public void setLicenseSerial(String licenseSerial) {
    this.licenseSerial = JsonNullable.<String>of(licenseSerial);
  }


  public LicenseWhereInput licenseSerialContains(String licenseSerialContains) {
    this.licenseSerialContains = JsonNullable.<String>of(licenseSerialContains);
    return this;
  }

   /**
   * Get licenseSerialContains
   * @return licenseSerialContains
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getLicenseSerialContains() {
        return licenseSerialContains.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_LICENSE_SERIAL_CONTAINS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getLicenseSerialContains_JsonNullable() {
    return licenseSerialContains;
  }
  
  @JsonProperty(JSON_PROPERTY_LICENSE_SERIAL_CONTAINS)
  public void setLicenseSerialContains_JsonNullable(JsonNullable<String> licenseSerialContains) {
    this.licenseSerialContains = licenseSerialContains;
  }

  public void setLicenseSerialContains(String licenseSerialContains) {
    this.licenseSerialContains = JsonNullable.<String>of(licenseSerialContains);
  }


  public LicenseWhereInput licenseSerialEndsWith(String licenseSerialEndsWith) {
    this.licenseSerialEndsWith = JsonNullable.<String>of(licenseSerialEndsWith);
    return this;
  }

   /**
   * Get licenseSerialEndsWith
   * @return licenseSerialEndsWith
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getLicenseSerialEndsWith() {
        return licenseSerialEndsWith.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_LICENSE_SERIAL_ENDS_WITH)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getLicenseSerialEndsWith_JsonNullable() {
    return licenseSerialEndsWith;
  }
  
  @JsonProperty(JSON_PROPERTY_LICENSE_SERIAL_ENDS_WITH)
  public void setLicenseSerialEndsWith_JsonNullable(JsonNullable<String> licenseSerialEndsWith) {
    this.licenseSerialEndsWith = licenseSerialEndsWith;
  }

  public void setLicenseSerialEndsWith(String licenseSerialEndsWith) {
    this.licenseSerialEndsWith = JsonNullable.<String>of(licenseSerialEndsWith);
  }


  public LicenseWhereInput licenseSerialGt(String licenseSerialGt) {
    this.licenseSerialGt = JsonNullable.<String>of(licenseSerialGt);
    return this;
  }

   /**
   * Get licenseSerialGt
   * @return licenseSerialGt
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getLicenseSerialGt() {
        return licenseSerialGt.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_LICENSE_SERIAL_GT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getLicenseSerialGt_JsonNullable() {
    return licenseSerialGt;
  }
  
  @JsonProperty(JSON_PROPERTY_LICENSE_SERIAL_GT)
  public void setLicenseSerialGt_JsonNullable(JsonNullable<String> licenseSerialGt) {
    this.licenseSerialGt = licenseSerialGt;
  }

  public void setLicenseSerialGt(String licenseSerialGt) {
    this.licenseSerialGt = JsonNullable.<String>of(licenseSerialGt);
  }


  public LicenseWhereInput licenseSerialGte(String licenseSerialGte) {
    this.licenseSerialGte = JsonNullable.<String>of(licenseSerialGte);
    return this;
  }

   /**
   * Get licenseSerialGte
   * @return licenseSerialGte
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getLicenseSerialGte() {
        return licenseSerialGte.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_LICENSE_SERIAL_GTE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getLicenseSerialGte_JsonNullable() {
    return licenseSerialGte;
  }
  
  @JsonProperty(JSON_PROPERTY_LICENSE_SERIAL_GTE)
  public void setLicenseSerialGte_JsonNullable(JsonNullable<String> licenseSerialGte) {
    this.licenseSerialGte = licenseSerialGte;
  }

  public void setLicenseSerialGte(String licenseSerialGte) {
    this.licenseSerialGte = JsonNullable.<String>of(licenseSerialGte);
  }


  public LicenseWhereInput licenseSerialIn(List<String> licenseSerialIn) {
    this.licenseSerialIn = JsonNullable.<List<String>>of(licenseSerialIn);
    return this;
  }

  public LicenseWhereInput addLicenseSerialInItem(String licenseSerialInItem) {
    if (this.licenseSerialIn == null || !this.licenseSerialIn.isPresent()) {
      this.licenseSerialIn = JsonNullable.<List<String>>of(new ArrayList<>());
    }
    try {
      this.licenseSerialIn.get().add(licenseSerialInItem);
    } catch (java.util.NoSuchElementException e) {
      // this can never happen, as we make sure above that the value is present
    }
    return this;
  }

   /**
   * Get licenseSerialIn
   * @return licenseSerialIn
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public List<String> getLicenseSerialIn() {
        return licenseSerialIn.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_LICENSE_SERIAL_IN)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<List<String>> getLicenseSerialIn_JsonNullable() {
    return licenseSerialIn;
  }
  
  @JsonProperty(JSON_PROPERTY_LICENSE_SERIAL_IN)
  public void setLicenseSerialIn_JsonNullable(JsonNullable<List<String>> licenseSerialIn) {
    this.licenseSerialIn = licenseSerialIn;
  }

  public void setLicenseSerialIn(List<String> licenseSerialIn) {
    this.licenseSerialIn = JsonNullable.<List<String>>of(licenseSerialIn);
  }


  public LicenseWhereInput licenseSerialLt(String licenseSerialLt) {
    this.licenseSerialLt = JsonNullable.<String>of(licenseSerialLt);
    return this;
  }

   /**
   * Get licenseSerialLt
   * @return licenseSerialLt
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getLicenseSerialLt() {
        return licenseSerialLt.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_LICENSE_SERIAL_LT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getLicenseSerialLt_JsonNullable() {
    return licenseSerialLt;
  }
  
  @JsonProperty(JSON_PROPERTY_LICENSE_SERIAL_LT)
  public void setLicenseSerialLt_JsonNullable(JsonNullable<String> licenseSerialLt) {
    this.licenseSerialLt = licenseSerialLt;
  }

  public void setLicenseSerialLt(String licenseSerialLt) {
    this.licenseSerialLt = JsonNullable.<String>of(licenseSerialLt);
  }


  public LicenseWhereInput licenseSerialLte(String licenseSerialLte) {
    this.licenseSerialLte = JsonNullable.<String>of(licenseSerialLte);
    return this;
  }

   /**
   * Get licenseSerialLte
   * @return licenseSerialLte
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getLicenseSerialLte() {
        return licenseSerialLte.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_LICENSE_SERIAL_LTE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getLicenseSerialLte_JsonNullable() {
    return licenseSerialLte;
  }
  
  @JsonProperty(JSON_PROPERTY_LICENSE_SERIAL_LTE)
  public void setLicenseSerialLte_JsonNullable(JsonNullable<String> licenseSerialLte) {
    this.licenseSerialLte = licenseSerialLte;
  }

  public void setLicenseSerialLte(String licenseSerialLte) {
    this.licenseSerialLte = JsonNullable.<String>of(licenseSerialLte);
  }


  public LicenseWhereInput licenseSerialNot(String licenseSerialNot) {
    this.licenseSerialNot = JsonNullable.<String>of(licenseSerialNot);
    return this;
  }

   /**
   * Get licenseSerialNot
   * @return licenseSerialNot
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getLicenseSerialNot() {
        return licenseSerialNot.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_LICENSE_SERIAL_NOT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getLicenseSerialNot_JsonNullable() {
    return licenseSerialNot;
  }
  
  @JsonProperty(JSON_PROPERTY_LICENSE_SERIAL_NOT)
  public void setLicenseSerialNot_JsonNullable(JsonNullable<String> licenseSerialNot) {
    this.licenseSerialNot = licenseSerialNot;
  }

  public void setLicenseSerialNot(String licenseSerialNot) {
    this.licenseSerialNot = JsonNullable.<String>of(licenseSerialNot);
  }


  public LicenseWhereInput licenseSerialNotContains(String licenseSerialNotContains) {
    this.licenseSerialNotContains = JsonNullable.<String>of(licenseSerialNotContains);
    return this;
  }

   /**
   * Get licenseSerialNotContains
   * @return licenseSerialNotContains
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getLicenseSerialNotContains() {
        return licenseSerialNotContains.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_LICENSE_SERIAL_NOT_CONTAINS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getLicenseSerialNotContains_JsonNullable() {
    return licenseSerialNotContains;
  }
  
  @JsonProperty(JSON_PROPERTY_LICENSE_SERIAL_NOT_CONTAINS)
  public void setLicenseSerialNotContains_JsonNullable(JsonNullable<String> licenseSerialNotContains) {
    this.licenseSerialNotContains = licenseSerialNotContains;
  }

  public void setLicenseSerialNotContains(String licenseSerialNotContains) {
    this.licenseSerialNotContains = JsonNullable.<String>of(licenseSerialNotContains);
  }


  public LicenseWhereInput licenseSerialNotEndsWith(String licenseSerialNotEndsWith) {
    this.licenseSerialNotEndsWith = JsonNullable.<String>of(licenseSerialNotEndsWith);
    return this;
  }

   /**
   * Get licenseSerialNotEndsWith
   * @return licenseSerialNotEndsWith
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getLicenseSerialNotEndsWith() {
        return licenseSerialNotEndsWith.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_LICENSE_SERIAL_NOT_ENDS_WITH)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getLicenseSerialNotEndsWith_JsonNullable() {
    return licenseSerialNotEndsWith;
  }
  
  @JsonProperty(JSON_PROPERTY_LICENSE_SERIAL_NOT_ENDS_WITH)
  public void setLicenseSerialNotEndsWith_JsonNullable(JsonNullable<String> licenseSerialNotEndsWith) {
    this.licenseSerialNotEndsWith = licenseSerialNotEndsWith;
  }

  public void setLicenseSerialNotEndsWith(String licenseSerialNotEndsWith) {
    this.licenseSerialNotEndsWith = JsonNullable.<String>of(licenseSerialNotEndsWith);
  }


  public LicenseWhereInput licenseSerialNotIn(List<String> licenseSerialNotIn) {
    this.licenseSerialNotIn = JsonNullable.<List<String>>of(licenseSerialNotIn);
    return this;
  }

  public LicenseWhereInput addLicenseSerialNotInItem(String licenseSerialNotInItem) {
    if (this.licenseSerialNotIn == null || !this.licenseSerialNotIn.isPresent()) {
      this.licenseSerialNotIn = JsonNullable.<List<String>>of(new ArrayList<>());
    }
    try {
      this.licenseSerialNotIn.get().add(licenseSerialNotInItem);
    } catch (java.util.NoSuchElementException e) {
      // this can never happen, as we make sure above that the value is present
    }
    return this;
  }

   /**
   * Get licenseSerialNotIn
   * @return licenseSerialNotIn
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public List<String> getLicenseSerialNotIn() {
        return licenseSerialNotIn.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_LICENSE_SERIAL_NOT_IN)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<List<String>> getLicenseSerialNotIn_JsonNullable() {
    return licenseSerialNotIn;
  }
  
  @JsonProperty(JSON_PROPERTY_LICENSE_SERIAL_NOT_IN)
  public void setLicenseSerialNotIn_JsonNullable(JsonNullable<List<String>> licenseSerialNotIn) {
    this.licenseSerialNotIn = licenseSerialNotIn;
  }

  public void setLicenseSerialNotIn(List<String> licenseSerialNotIn) {
    this.licenseSerialNotIn = JsonNullable.<List<String>>of(licenseSerialNotIn);
  }


  public LicenseWhereInput licenseSerialNotStartsWith(String licenseSerialNotStartsWith) {
    this.licenseSerialNotStartsWith = JsonNullable.<String>of(licenseSerialNotStartsWith);
    return this;
  }

   /**
   * Get licenseSerialNotStartsWith
   * @return licenseSerialNotStartsWith
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getLicenseSerialNotStartsWith() {
        return licenseSerialNotStartsWith.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_LICENSE_SERIAL_NOT_STARTS_WITH)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getLicenseSerialNotStartsWith_JsonNullable() {
    return licenseSerialNotStartsWith;
  }
  
  @JsonProperty(JSON_PROPERTY_LICENSE_SERIAL_NOT_STARTS_WITH)
  public void setLicenseSerialNotStartsWith_JsonNullable(JsonNullable<String> licenseSerialNotStartsWith) {
    this.licenseSerialNotStartsWith = licenseSerialNotStartsWith;
  }

  public void setLicenseSerialNotStartsWith(String licenseSerialNotStartsWith) {
    this.licenseSerialNotStartsWith = JsonNullable.<String>of(licenseSerialNotStartsWith);
  }


  public LicenseWhereInput licenseSerialStartsWith(String licenseSerialStartsWith) {
    this.licenseSerialStartsWith = JsonNullable.<String>of(licenseSerialStartsWith);
    return this;
  }

   /**
   * Get licenseSerialStartsWith
   * @return licenseSerialStartsWith
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getLicenseSerialStartsWith() {
        return licenseSerialStartsWith.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_LICENSE_SERIAL_STARTS_WITH)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getLicenseSerialStartsWith_JsonNullable() {
    return licenseSerialStartsWith;
  }
  
  @JsonProperty(JSON_PROPERTY_LICENSE_SERIAL_STARTS_WITH)
  public void setLicenseSerialStartsWith_JsonNullable(JsonNullable<String> licenseSerialStartsWith) {
    this.licenseSerialStartsWith = licenseSerialStartsWith;
  }

  public void setLicenseSerialStartsWith(String licenseSerialStartsWith) {
    this.licenseSerialStartsWith = JsonNullable.<String>of(licenseSerialStartsWith);
  }


  public LicenseWhereInput maintenanceEndDate(String maintenanceEndDate) {
    this.maintenanceEndDate = JsonNullable.<String>of(maintenanceEndDate);
    return this;
  }

   /**
   * Get maintenanceEndDate
   * @return maintenanceEndDate
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getMaintenanceEndDate() {
        return maintenanceEndDate.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_MAINTENANCE_END_DATE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getMaintenanceEndDate_JsonNullable() {
    return maintenanceEndDate;
  }
  
  @JsonProperty(JSON_PROPERTY_MAINTENANCE_END_DATE)
  public void setMaintenanceEndDate_JsonNullable(JsonNullable<String> maintenanceEndDate) {
    this.maintenanceEndDate = maintenanceEndDate;
  }

  public void setMaintenanceEndDate(String maintenanceEndDate) {
    this.maintenanceEndDate = JsonNullable.<String>of(maintenanceEndDate);
  }


  public LicenseWhereInput maintenanceEndDateGt(String maintenanceEndDateGt) {
    this.maintenanceEndDateGt = JsonNullable.<String>of(maintenanceEndDateGt);
    return this;
  }

   /**
   * Get maintenanceEndDateGt
   * @return maintenanceEndDateGt
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getMaintenanceEndDateGt() {
        return maintenanceEndDateGt.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_MAINTENANCE_END_DATE_GT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getMaintenanceEndDateGt_JsonNullable() {
    return maintenanceEndDateGt;
  }
  
  @JsonProperty(JSON_PROPERTY_MAINTENANCE_END_DATE_GT)
  public void setMaintenanceEndDateGt_JsonNullable(JsonNullable<String> maintenanceEndDateGt) {
    this.maintenanceEndDateGt = maintenanceEndDateGt;
  }

  public void setMaintenanceEndDateGt(String maintenanceEndDateGt) {
    this.maintenanceEndDateGt = JsonNullable.<String>of(maintenanceEndDateGt);
  }


  public LicenseWhereInput maintenanceEndDateGte(String maintenanceEndDateGte) {
    this.maintenanceEndDateGte = JsonNullable.<String>of(maintenanceEndDateGte);
    return this;
  }

   /**
   * Get maintenanceEndDateGte
   * @return maintenanceEndDateGte
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getMaintenanceEndDateGte() {
        return maintenanceEndDateGte.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_MAINTENANCE_END_DATE_GTE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getMaintenanceEndDateGte_JsonNullable() {
    return maintenanceEndDateGte;
  }
  
  @JsonProperty(JSON_PROPERTY_MAINTENANCE_END_DATE_GTE)
  public void setMaintenanceEndDateGte_JsonNullable(JsonNullable<String> maintenanceEndDateGte) {
    this.maintenanceEndDateGte = maintenanceEndDateGte;
  }

  public void setMaintenanceEndDateGte(String maintenanceEndDateGte) {
    this.maintenanceEndDateGte = JsonNullable.<String>of(maintenanceEndDateGte);
  }


  public LicenseWhereInput maintenanceEndDateIn(List<String> maintenanceEndDateIn) {
    this.maintenanceEndDateIn = JsonNullable.<List<String>>of(maintenanceEndDateIn);
    return this;
  }

  public LicenseWhereInput addMaintenanceEndDateInItem(String maintenanceEndDateInItem) {
    if (this.maintenanceEndDateIn == null || !this.maintenanceEndDateIn.isPresent()) {
      this.maintenanceEndDateIn = JsonNullable.<List<String>>of(new ArrayList<>());
    }
    try {
      this.maintenanceEndDateIn.get().add(maintenanceEndDateInItem);
    } catch (java.util.NoSuchElementException e) {
      // this can never happen, as we make sure above that the value is present
    }
    return this;
  }

   /**
   * Get maintenanceEndDateIn
   * @return maintenanceEndDateIn
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public List<String> getMaintenanceEndDateIn() {
        return maintenanceEndDateIn.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_MAINTENANCE_END_DATE_IN)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<List<String>> getMaintenanceEndDateIn_JsonNullable() {
    return maintenanceEndDateIn;
  }
  
  @JsonProperty(JSON_PROPERTY_MAINTENANCE_END_DATE_IN)
  public void setMaintenanceEndDateIn_JsonNullable(JsonNullable<List<String>> maintenanceEndDateIn) {
    this.maintenanceEndDateIn = maintenanceEndDateIn;
  }

  public void setMaintenanceEndDateIn(List<String> maintenanceEndDateIn) {
    this.maintenanceEndDateIn = JsonNullable.<List<String>>of(maintenanceEndDateIn);
  }


  public LicenseWhereInput maintenanceEndDateLt(String maintenanceEndDateLt) {
    this.maintenanceEndDateLt = JsonNullable.<String>of(maintenanceEndDateLt);
    return this;
  }

   /**
   * Get maintenanceEndDateLt
   * @return maintenanceEndDateLt
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getMaintenanceEndDateLt() {
        return maintenanceEndDateLt.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_MAINTENANCE_END_DATE_LT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getMaintenanceEndDateLt_JsonNullable() {
    return maintenanceEndDateLt;
  }
  
  @JsonProperty(JSON_PROPERTY_MAINTENANCE_END_DATE_LT)
  public void setMaintenanceEndDateLt_JsonNullable(JsonNullable<String> maintenanceEndDateLt) {
    this.maintenanceEndDateLt = maintenanceEndDateLt;
  }

  public void setMaintenanceEndDateLt(String maintenanceEndDateLt) {
    this.maintenanceEndDateLt = JsonNullable.<String>of(maintenanceEndDateLt);
  }


  public LicenseWhereInput maintenanceEndDateLte(String maintenanceEndDateLte) {
    this.maintenanceEndDateLte = JsonNullable.<String>of(maintenanceEndDateLte);
    return this;
  }

   /**
   * Get maintenanceEndDateLte
   * @return maintenanceEndDateLte
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getMaintenanceEndDateLte() {
        return maintenanceEndDateLte.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_MAINTENANCE_END_DATE_LTE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getMaintenanceEndDateLte_JsonNullable() {
    return maintenanceEndDateLte;
  }
  
  @JsonProperty(JSON_PROPERTY_MAINTENANCE_END_DATE_LTE)
  public void setMaintenanceEndDateLte_JsonNullable(JsonNullable<String> maintenanceEndDateLte) {
    this.maintenanceEndDateLte = maintenanceEndDateLte;
  }

  public void setMaintenanceEndDateLte(String maintenanceEndDateLte) {
    this.maintenanceEndDateLte = JsonNullable.<String>of(maintenanceEndDateLte);
  }


  public LicenseWhereInput maintenanceEndDateNot(String maintenanceEndDateNot) {
    this.maintenanceEndDateNot = JsonNullable.<String>of(maintenanceEndDateNot);
    return this;
  }

   /**
   * Get maintenanceEndDateNot
   * @return maintenanceEndDateNot
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getMaintenanceEndDateNot() {
        return maintenanceEndDateNot.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_MAINTENANCE_END_DATE_NOT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getMaintenanceEndDateNot_JsonNullable() {
    return maintenanceEndDateNot;
  }
  
  @JsonProperty(JSON_PROPERTY_MAINTENANCE_END_DATE_NOT)
  public void setMaintenanceEndDateNot_JsonNullable(JsonNullable<String> maintenanceEndDateNot) {
    this.maintenanceEndDateNot = maintenanceEndDateNot;
  }

  public void setMaintenanceEndDateNot(String maintenanceEndDateNot) {
    this.maintenanceEndDateNot = JsonNullable.<String>of(maintenanceEndDateNot);
  }


  public LicenseWhereInput maintenanceEndDateNotIn(List<String> maintenanceEndDateNotIn) {
    this.maintenanceEndDateNotIn = JsonNullable.<List<String>>of(maintenanceEndDateNotIn);
    return this;
  }

  public LicenseWhereInput addMaintenanceEndDateNotInItem(String maintenanceEndDateNotInItem) {
    if (this.maintenanceEndDateNotIn == null || !this.maintenanceEndDateNotIn.isPresent()) {
      this.maintenanceEndDateNotIn = JsonNullable.<List<String>>of(new ArrayList<>());
    }
    try {
      this.maintenanceEndDateNotIn.get().add(maintenanceEndDateNotInItem);
    } catch (java.util.NoSuchElementException e) {
      // this can never happen, as we make sure above that the value is present
    }
    return this;
  }

   /**
   * Get maintenanceEndDateNotIn
   * @return maintenanceEndDateNotIn
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public List<String> getMaintenanceEndDateNotIn() {
        return maintenanceEndDateNotIn.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_MAINTENANCE_END_DATE_NOT_IN)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<List<String>> getMaintenanceEndDateNotIn_JsonNullable() {
    return maintenanceEndDateNotIn;
  }
  
  @JsonProperty(JSON_PROPERTY_MAINTENANCE_END_DATE_NOT_IN)
  public void setMaintenanceEndDateNotIn_JsonNullable(JsonNullable<List<String>> maintenanceEndDateNotIn) {
    this.maintenanceEndDateNotIn = maintenanceEndDateNotIn;
  }

  public void setMaintenanceEndDateNotIn(List<String> maintenanceEndDateNotIn) {
    this.maintenanceEndDateNotIn = JsonNullable.<List<String>>of(maintenanceEndDateNotIn);
  }


  public LicenseWhereInput maintenanceStartDate(String maintenanceStartDate) {
    this.maintenanceStartDate = JsonNullable.<String>of(maintenanceStartDate);
    return this;
  }

   /**
   * Get maintenanceStartDate
   * @return maintenanceStartDate
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getMaintenanceStartDate() {
        return maintenanceStartDate.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_MAINTENANCE_START_DATE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getMaintenanceStartDate_JsonNullable() {
    return maintenanceStartDate;
  }
  
  @JsonProperty(JSON_PROPERTY_MAINTENANCE_START_DATE)
  public void setMaintenanceStartDate_JsonNullable(JsonNullable<String> maintenanceStartDate) {
    this.maintenanceStartDate = maintenanceStartDate;
  }

  public void setMaintenanceStartDate(String maintenanceStartDate) {
    this.maintenanceStartDate = JsonNullable.<String>of(maintenanceStartDate);
  }


  public LicenseWhereInput maintenanceStartDateGt(String maintenanceStartDateGt) {
    this.maintenanceStartDateGt = JsonNullable.<String>of(maintenanceStartDateGt);
    return this;
  }

   /**
   * Get maintenanceStartDateGt
   * @return maintenanceStartDateGt
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getMaintenanceStartDateGt() {
        return maintenanceStartDateGt.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_MAINTENANCE_START_DATE_GT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getMaintenanceStartDateGt_JsonNullable() {
    return maintenanceStartDateGt;
  }
  
  @JsonProperty(JSON_PROPERTY_MAINTENANCE_START_DATE_GT)
  public void setMaintenanceStartDateGt_JsonNullable(JsonNullable<String> maintenanceStartDateGt) {
    this.maintenanceStartDateGt = maintenanceStartDateGt;
  }

  public void setMaintenanceStartDateGt(String maintenanceStartDateGt) {
    this.maintenanceStartDateGt = JsonNullable.<String>of(maintenanceStartDateGt);
  }


  public LicenseWhereInput maintenanceStartDateGte(String maintenanceStartDateGte) {
    this.maintenanceStartDateGte = JsonNullable.<String>of(maintenanceStartDateGte);
    return this;
  }

   /**
   * Get maintenanceStartDateGte
   * @return maintenanceStartDateGte
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getMaintenanceStartDateGte() {
        return maintenanceStartDateGte.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_MAINTENANCE_START_DATE_GTE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getMaintenanceStartDateGte_JsonNullable() {
    return maintenanceStartDateGte;
  }
  
  @JsonProperty(JSON_PROPERTY_MAINTENANCE_START_DATE_GTE)
  public void setMaintenanceStartDateGte_JsonNullable(JsonNullable<String> maintenanceStartDateGte) {
    this.maintenanceStartDateGte = maintenanceStartDateGte;
  }

  public void setMaintenanceStartDateGte(String maintenanceStartDateGte) {
    this.maintenanceStartDateGte = JsonNullable.<String>of(maintenanceStartDateGte);
  }


  public LicenseWhereInput maintenanceStartDateIn(List<String> maintenanceStartDateIn) {
    this.maintenanceStartDateIn = JsonNullable.<List<String>>of(maintenanceStartDateIn);
    return this;
  }

  public LicenseWhereInput addMaintenanceStartDateInItem(String maintenanceStartDateInItem) {
    if (this.maintenanceStartDateIn == null || !this.maintenanceStartDateIn.isPresent()) {
      this.maintenanceStartDateIn = JsonNullable.<List<String>>of(new ArrayList<>());
    }
    try {
      this.maintenanceStartDateIn.get().add(maintenanceStartDateInItem);
    } catch (java.util.NoSuchElementException e) {
      // this can never happen, as we make sure above that the value is present
    }
    return this;
  }

   /**
   * Get maintenanceStartDateIn
   * @return maintenanceStartDateIn
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public List<String> getMaintenanceStartDateIn() {
        return maintenanceStartDateIn.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_MAINTENANCE_START_DATE_IN)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<List<String>> getMaintenanceStartDateIn_JsonNullable() {
    return maintenanceStartDateIn;
  }
  
  @JsonProperty(JSON_PROPERTY_MAINTENANCE_START_DATE_IN)
  public void setMaintenanceStartDateIn_JsonNullable(JsonNullable<List<String>> maintenanceStartDateIn) {
    this.maintenanceStartDateIn = maintenanceStartDateIn;
  }

  public void setMaintenanceStartDateIn(List<String> maintenanceStartDateIn) {
    this.maintenanceStartDateIn = JsonNullable.<List<String>>of(maintenanceStartDateIn);
  }


  public LicenseWhereInput maintenanceStartDateLt(String maintenanceStartDateLt) {
    this.maintenanceStartDateLt = JsonNullable.<String>of(maintenanceStartDateLt);
    return this;
  }

   /**
   * Get maintenanceStartDateLt
   * @return maintenanceStartDateLt
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getMaintenanceStartDateLt() {
        return maintenanceStartDateLt.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_MAINTENANCE_START_DATE_LT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getMaintenanceStartDateLt_JsonNullable() {
    return maintenanceStartDateLt;
  }
  
  @JsonProperty(JSON_PROPERTY_MAINTENANCE_START_DATE_LT)
  public void setMaintenanceStartDateLt_JsonNullable(JsonNullable<String> maintenanceStartDateLt) {
    this.maintenanceStartDateLt = maintenanceStartDateLt;
  }

  public void setMaintenanceStartDateLt(String maintenanceStartDateLt) {
    this.maintenanceStartDateLt = JsonNullable.<String>of(maintenanceStartDateLt);
  }


  public LicenseWhereInput maintenanceStartDateLte(String maintenanceStartDateLte) {
    this.maintenanceStartDateLte = JsonNullable.<String>of(maintenanceStartDateLte);
    return this;
  }

   /**
   * Get maintenanceStartDateLte
   * @return maintenanceStartDateLte
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getMaintenanceStartDateLte() {
        return maintenanceStartDateLte.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_MAINTENANCE_START_DATE_LTE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getMaintenanceStartDateLte_JsonNullable() {
    return maintenanceStartDateLte;
  }
  
  @JsonProperty(JSON_PROPERTY_MAINTENANCE_START_DATE_LTE)
  public void setMaintenanceStartDateLte_JsonNullable(JsonNullable<String> maintenanceStartDateLte) {
    this.maintenanceStartDateLte = maintenanceStartDateLte;
  }

  public void setMaintenanceStartDateLte(String maintenanceStartDateLte) {
    this.maintenanceStartDateLte = JsonNullable.<String>of(maintenanceStartDateLte);
  }


  public LicenseWhereInput maintenanceStartDateNot(String maintenanceStartDateNot) {
    this.maintenanceStartDateNot = JsonNullable.<String>of(maintenanceStartDateNot);
    return this;
  }

   /**
   * Get maintenanceStartDateNot
   * @return maintenanceStartDateNot
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getMaintenanceStartDateNot() {
        return maintenanceStartDateNot.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_MAINTENANCE_START_DATE_NOT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getMaintenanceStartDateNot_JsonNullable() {
    return maintenanceStartDateNot;
  }
  
  @JsonProperty(JSON_PROPERTY_MAINTENANCE_START_DATE_NOT)
  public void setMaintenanceStartDateNot_JsonNullable(JsonNullable<String> maintenanceStartDateNot) {
    this.maintenanceStartDateNot = maintenanceStartDateNot;
  }

  public void setMaintenanceStartDateNot(String maintenanceStartDateNot) {
    this.maintenanceStartDateNot = JsonNullable.<String>of(maintenanceStartDateNot);
  }


  public LicenseWhereInput maintenanceStartDateNotIn(List<String> maintenanceStartDateNotIn) {
    this.maintenanceStartDateNotIn = JsonNullable.<List<String>>of(maintenanceStartDateNotIn);
    return this;
  }

  public LicenseWhereInput addMaintenanceStartDateNotInItem(String maintenanceStartDateNotInItem) {
    if (this.maintenanceStartDateNotIn == null || !this.maintenanceStartDateNotIn.isPresent()) {
      this.maintenanceStartDateNotIn = JsonNullable.<List<String>>of(new ArrayList<>());
    }
    try {
      this.maintenanceStartDateNotIn.get().add(maintenanceStartDateNotInItem);
    } catch (java.util.NoSuchElementException e) {
      // this can never happen, as we make sure above that the value is present
    }
    return this;
  }

   /**
   * Get maintenanceStartDateNotIn
   * @return maintenanceStartDateNotIn
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public List<String> getMaintenanceStartDateNotIn() {
        return maintenanceStartDateNotIn.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_MAINTENANCE_START_DATE_NOT_IN)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<List<String>> getMaintenanceStartDateNotIn_JsonNullable() {
    return maintenanceStartDateNotIn;
  }
  
  @JsonProperty(JSON_PROPERTY_MAINTENANCE_START_DATE_NOT_IN)
  public void setMaintenanceStartDateNotIn_JsonNullable(JsonNullable<List<String>> maintenanceStartDateNotIn) {
    this.maintenanceStartDateNotIn = maintenanceStartDateNotIn;
  }

  public void setMaintenanceStartDateNotIn(List<String> maintenanceStartDateNotIn) {
    this.maintenanceStartDateNotIn = JsonNullable.<List<String>>of(maintenanceStartDateNotIn);
  }


  public LicenseWhereInput maxChunkNum(Double maxChunkNum) {
    this.maxChunkNum = JsonNullable.<Double>of(maxChunkNum);
    return this;
  }

   /**
   * Get maxChunkNum
   * @return maxChunkNum
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public Double getMaxChunkNum() {
        return maxChunkNum.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_MAX_CHUNK_NUM)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<Double> getMaxChunkNum_JsonNullable() {
    return maxChunkNum;
  }
  
  @JsonProperty(JSON_PROPERTY_MAX_CHUNK_NUM)
  public void setMaxChunkNum_JsonNullable(JsonNullable<Double> maxChunkNum) {
    this.maxChunkNum = maxChunkNum;
  }

  public void setMaxChunkNum(Double maxChunkNum) {
    this.maxChunkNum = JsonNullable.<Double>of(maxChunkNum);
  }


  public LicenseWhereInput maxChunkNumGt(Double maxChunkNumGt) {
    this.maxChunkNumGt = JsonNullable.<Double>of(maxChunkNumGt);
    return this;
  }

   /**
   * Get maxChunkNumGt
   * @return maxChunkNumGt
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public Double getMaxChunkNumGt() {
        return maxChunkNumGt.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_MAX_CHUNK_NUM_GT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<Double> getMaxChunkNumGt_JsonNullable() {
    return maxChunkNumGt;
  }
  
  @JsonProperty(JSON_PROPERTY_MAX_CHUNK_NUM_GT)
  public void setMaxChunkNumGt_JsonNullable(JsonNullable<Double> maxChunkNumGt) {
    this.maxChunkNumGt = maxChunkNumGt;
  }

  public void setMaxChunkNumGt(Double maxChunkNumGt) {
    this.maxChunkNumGt = JsonNullable.<Double>of(maxChunkNumGt);
  }


  public LicenseWhereInput maxChunkNumGte(Double maxChunkNumGte) {
    this.maxChunkNumGte = JsonNullable.<Double>of(maxChunkNumGte);
    return this;
  }

   /**
   * Get maxChunkNumGte
   * @return maxChunkNumGte
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public Double getMaxChunkNumGte() {
        return maxChunkNumGte.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_MAX_CHUNK_NUM_GTE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<Double> getMaxChunkNumGte_JsonNullable() {
    return maxChunkNumGte;
  }
  
  @JsonProperty(JSON_PROPERTY_MAX_CHUNK_NUM_GTE)
  public void setMaxChunkNumGte_JsonNullable(JsonNullable<Double> maxChunkNumGte) {
    this.maxChunkNumGte = maxChunkNumGte;
  }

  public void setMaxChunkNumGte(Double maxChunkNumGte) {
    this.maxChunkNumGte = JsonNullable.<Double>of(maxChunkNumGte);
  }


  public LicenseWhereInput maxChunkNumIn(List<Double> maxChunkNumIn) {
    this.maxChunkNumIn = JsonNullable.<List<Double>>of(maxChunkNumIn);
    return this;
  }

  public LicenseWhereInput addMaxChunkNumInItem(Double maxChunkNumInItem) {
    if (this.maxChunkNumIn == null || !this.maxChunkNumIn.isPresent()) {
      this.maxChunkNumIn = JsonNullable.<List<Double>>of(new ArrayList<>());
    }
    try {
      this.maxChunkNumIn.get().add(maxChunkNumInItem);
    } catch (java.util.NoSuchElementException e) {
      // this can never happen, as we make sure above that the value is present
    }
    return this;
  }

   /**
   * Get maxChunkNumIn
   * @return maxChunkNumIn
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public List<Double> getMaxChunkNumIn() {
        return maxChunkNumIn.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_MAX_CHUNK_NUM_IN)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<List<Double>> getMaxChunkNumIn_JsonNullable() {
    return maxChunkNumIn;
  }
  
  @JsonProperty(JSON_PROPERTY_MAX_CHUNK_NUM_IN)
  public void setMaxChunkNumIn_JsonNullable(JsonNullable<List<Double>> maxChunkNumIn) {
    this.maxChunkNumIn = maxChunkNumIn;
  }

  public void setMaxChunkNumIn(List<Double> maxChunkNumIn) {
    this.maxChunkNumIn = JsonNullable.<List<Double>>of(maxChunkNumIn);
  }


  public LicenseWhereInput maxChunkNumLt(Double maxChunkNumLt) {
    this.maxChunkNumLt = JsonNullable.<Double>of(maxChunkNumLt);
    return this;
  }

   /**
   * Get maxChunkNumLt
   * @return maxChunkNumLt
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public Double getMaxChunkNumLt() {
        return maxChunkNumLt.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_MAX_CHUNK_NUM_LT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<Double> getMaxChunkNumLt_JsonNullable() {
    return maxChunkNumLt;
  }
  
  @JsonProperty(JSON_PROPERTY_MAX_CHUNK_NUM_LT)
  public void setMaxChunkNumLt_JsonNullable(JsonNullable<Double> maxChunkNumLt) {
    this.maxChunkNumLt = maxChunkNumLt;
  }

  public void setMaxChunkNumLt(Double maxChunkNumLt) {
    this.maxChunkNumLt = JsonNullable.<Double>of(maxChunkNumLt);
  }


  public LicenseWhereInput maxChunkNumLte(Double maxChunkNumLte) {
    this.maxChunkNumLte = JsonNullable.<Double>of(maxChunkNumLte);
    return this;
  }

   /**
   * Get maxChunkNumLte
   * @return maxChunkNumLte
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public Double getMaxChunkNumLte() {
        return maxChunkNumLte.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_MAX_CHUNK_NUM_LTE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<Double> getMaxChunkNumLte_JsonNullable() {
    return maxChunkNumLte;
  }
  
  @JsonProperty(JSON_PROPERTY_MAX_CHUNK_NUM_LTE)
  public void setMaxChunkNumLte_JsonNullable(JsonNullable<Double> maxChunkNumLte) {
    this.maxChunkNumLte = maxChunkNumLte;
  }

  public void setMaxChunkNumLte(Double maxChunkNumLte) {
    this.maxChunkNumLte = JsonNullable.<Double>of(maxChunkNumLte);
  }


  public LicenseWhereInput maxChunkNumNot(Double maxChunkNumNot) {
    this.maxChunkNumNot = JsonNullable.<Double>of(maxChunkNumNot);
    return this;
  }

   /**
   * Get maxChunkNumNot
   * @return maxChunkNumNot
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public Double getMaxChunkNumNot() {
        return maxChunkNumNot.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_MAX_CHUNK_NUM_NOT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<Double> getMaxChunkNumNot_JsonNullable() {
    return maxChunkNumNot;
  }
  
  @JsonProperty(JSON_PROPERTY_MAX_CHUNK_NUM_NOT)
  public void setMaxChunkNumNot_JsonNullable(JsonNullable<Double> maxChunkNumNot) {
    this.maxChunkNumNot = maxChunkNumNot;
  }

  public void setMaxChunkNumNot(Double maxChunkNumNot) {
    this.maxChunkNumNot = JsonNullable.<Double>of(maxChunkNumNot);
  }


  public LicenseWhereInput maxChunkNumNotIn(List<Double> maxChunkNumNotIn) {
    this.maxChunkNumNotIn = JsonNullable.<List<Double>>of(maxChunkNumNotIn);
    return this;
  }

  public LicenseWhereInput addMaxChunkNumNotInItem(Double maxChunkNumNotInItem) {
    if (this.maxChunkNumNotIn == null || !this.maxChunkNumNotIn.isPresent()) {
      this.maxChunkNumNotIn = JsonNullable.<List<Double>>of(new ArrayList<>());
    }
    try {
      this.maxChunkNumNotIn.get().add(maxChunkNumNotInItem);
    } catch (java.util.NoSuchElementException e) {
      // this can never happen, as we make sure above that the value is present
    }
    return this;
  }

   /**
   * Get maxChunkNumNotIn
   * @return maxChunkNumNotIn
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public List<Double> getMaxChunkNumNotIn() {
        return maxChunkNumNotIn.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_MAX_CHUNK_NUM_NOT_IN)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<List<Double>> getMaxChunkNumNotIn_JsonNullable() {
    return maxChunkNumNotIn;
  }
  
  @JsonProperty(JSON_PROPERTY_MAX_CHUNK_NUM_NOT_IN)
  public void setMaxChunkNumNotIn_JsonNullable(JsonNullable<List<Double>> maxChunkNumNotIn) {
    this.maxChunkNumNotIn = maxChunkNumNotIn;
  }

  public void setMaxChunkNumNotIn(List<Double> maxChunkNumNotIn) {
    this.maxChunkNumNotIn = JsonNullable.<List<Double>>of(maxChunkNumNotIn);
  }


  public LicenseWhereInput maxClusterNum(Double maxClusterNum) {
    this.maxClusterNum = JsonNullable.<Double>of(maxClusterNum);
    return this;
  }

   /**
   * Get maxClusterNum
   * @return maxClusterNum
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public Double getMaxClusterNum() {
        return maxClusterNum.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_MAX_CLUSTER_NUM)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<Double> getMaxClusterNum_JsonNullable() {
    return maxClusterNum;
  }
  
  @JsonProperty(JSON_PROPERTY_MAX_CLUSTER_NUM)
  public void setMaxClusterNum_JsonNullable(JsonNullable<Double> maxClusterNum) {
    this.maxClusterNum = maxClusterNum;
  }

  public void setMaxClusterNum(Double maxClusterNum) {
    this.maxClusterNum = JsonNullable.<Double>of(maxClusterNum);
  }


  public LicenseWhereInput maxClusterNumGt(Double maxClusterNumGt) {
    this.maxClusterNumGt = JsonNullable.<Double>of(maxClusterNumGt);
    return this;
  }

   /**
   * Get maxClusterNumGt
   * @return maxClusterNumGt
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public Double getMaxClusterNumGt() {
        return maxClusterNumGt.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_MAX_CLUSTER_NUM_GT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<Double> getMaxClusterNumGt_JsonNullable() {
    return maxClusterNumGt;
  }
  
  @JsonProperty(JSON_PROPERTY_MAX_CLUSTER_NUM_GT)
  public void setMaxClusterNumGt_JsonNullable(JsonNullable<Double> maxClusterNumGt) {
    this.maxClusterNumGt = maxClusterNumGt;
  }

  public void setMaxClusterNumGt(Double maxClusterNumGt) {
    this.maxClusterNumGt = JsonNullable.<Double>of(maxClusterNumGt);
  }


  public LicenseWhereInput maxClusterNumGte(Double maxClusterNumGte) {
    this.maxClusterNumGte = JsonNullable.<Double>of(maxClusterNumGte);
    return this;
  }

   /**
   * Get maxClusterNumGte
   * @return maxClusterNumGte
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public Double getMaxClusterNumGte() {
        return maxClusterNumGte.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_MAX_CLUSTER_NUM_GTE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<Double> getMaxClusterNumGte_JsonNullable() {
    return maxClusterNumGte;
  }
  
  @JsonProperty(JSON_PROPERTY_MAX_CLUSTER_NUM_GTE)
  public void setMaxClusterNumGte_JsonNullable(JsonNullable<Double> maxClusterNumGte) {
    this.maxClusterNumGte = maxClusterNumGte;
  }

  public void setMaxClusterNumGte(Double maxClusterNumGte) {
    this.maxClusterNumGte = JsonNullable.<Double>of(maxClusterNumGte);
  }


  public LicenseWhereInput maxClusterNumIn(List<Double> maxClusterNumIn) {
    this.maxClusterNumIn = JsonNullable.<List<Double>>of(maxClusterNumIn);
    return this;
  }

  public LicenseWhereInput addMaxClusterNumInItem(Double maxClusterNumInItem) {
    if (this.maxClusterNumIn == null || !this.maxClusterNumIn.isPresent()) {
      this.maxClusterNumIn = JsonNullable.<List<Double>>of(new ArrayList<>());
    }
    try {
      this.maxClusterNumIn.get().add(maxClusterNumInItem);
    } catch (java.util.NoSuchElementException e) {
      // this can never happen, as we make sure above that the value is present
    }
    return this;
  }

   /**
   * Get maxClusterNumIn
   * @return maxClusterNumIn
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public List<Double> getMaxClusterNumIn() {
        return maxClusterNumIn.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_MAX_CLUSTER_NUM_IN)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<List<Double>> getMaxClusterNumIn_JsonNullable() {
    return maxClusterNumIn;
  }
  
  @JsonProperty(JSON_PROPERTY_MAX_CLUSTER_NUM_IN)
  public void setMaxClusterNumIn_JsonNullable(JsonNullable<List<Double>> maxClusterNumIn) {
    this.maxClusterNumIn = maxClusterNumIn;
  }

  public void setMaxClusterNumIn(List<Double> maxClusterNumIn) {
    this.maxClusterNumIn = JsonNullable.<List<Double>>of(maxClusterNumIn);
  }


  public LicenseWhereInput maxClusterNumLt(Double maxClusterNumLt) {
    this.maxClusterNumLt = JsonNullable.<Double>of(maxClusterNumLt);
    return this;
  }

   /**
   * Get maxClusterNumLt
   * @return maxClusterNumLt
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public Double getMaxClusterNumLt() {
        return maxClusterNumLt.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_MAX_CLUSTER_NUM_LT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<Double> getMaxClusterNumLt_JsonNullable() {
    return maxClusterNumLt;
  }
  
  @JsonProperty(JSON_PROPERTY_MAX_CLUSTER_NUM_LT)
  public void setMaxClusterNumLt_JsonNullable(JsonNullable<Double> maxClusterNumLt) {
    this.maxClusterNumLt = maxClusterNumLt;
  }

  public void setMaxClusterNumLt(Double maxClusterNumLt) {
    this.maxClusterNumLt = JsonNullable.<Double>of(maxClusterNumLt);
  }


  public LicenseWhereInput maxClusterNumLte(Double maxClusterNumLte) {
    this.maxClusterNumLte = JsonNullable.<Double>of(maxClusterNumLte);
    return this;
  }

   /**
   * Get maxClusterNumLte
   * @return maxClusterNumLte
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public Double getMaxClusterNumLte() {
        return maxClusterNumLte.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_MAX_CLUSTER_NUM_LTE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<Double> getMaxClusterNumLte_JsonNullable() {
    return maxClusterNumLte;
  }
  
  @JsonProperty(JSON_PROPERTY_MAX_CLUSTER_NUM_LTE)
  public void setMaxClusterNumLte_JsonNullable(JsonNullable<Double> maxClusterNumLte) {
    this.maxClusterNumLte = maxClusterNumLte;
  }

  public void setMaxClusterNumLte(Double maxClusterNumLte) {
    this.maxClusterNumLte = JsonNullable.<Double>of(maxClusterNumLte);
  }


  public LicenseWhereInput maxClusterNumNot(Double maxClusterNumNot) {
    this.maxClusterNumNot = JsonNullable.<Double>of(maxClusterNumNot);
    return this;
  }

   /**
   * Get maxClusterNumNot
   * @return maxClusterNumNot
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public Double getMaxClusterNumNot() {
        return maxClusterNumNot.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_MAX_CLUSTER_NUM_NOT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<Double> getMaxClusterNumNot_JsonNullable() {
    return maxClusterNumNot;
  }
  
  @JsonProperty(JSON_PROPERTY_MAX_CLUSTER_NUM_NOT)
  public void setMaxClusterNumNot_JsonNullable(JsonNullable<Double> maxClusterNumNot) {
    this.maxClusterNumNot = maxClusterNumNot;
  }

  public void setMaxClusterNumNot(Double maxClusterNumNot) {
    this.maxClusterNumNot = JsonNullable.<Double>of(maxClusterNumNot);
  }


  public LicenseWhereInput maxClusterNumNotIn(List<Double> maxClusterNumNotIn) {
    this.maxClusterNumNotIn = JsonNullable.<List<Double>>of(maxClusterNumNotIn);
    return this;
  }

  public LicenseWhereInput addMaxClusterNumNotInItem(Double maxClusterNumNotInItem) {
    if (this.maxClusterNumNotIn == null || !this.maxClusterNumNotIn.isPresent()) {
      this.maxClusterNumNotIn = JsonNullable.<List<Double>>of(new ArrayList<>());
    }
    try {
      this.maxClusterNumNotIn.get().add(maxClusterNumNotInItem);
    } catch (java.util.NoSuchElementException e) {
      // this can never happen, as we make sure above that the value is present
    }
    return this;
  }

   /**
   * Get maxClusterNumNotIn
   * @return maxClusterNumNotIn
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public List<Double> getMaxClusterNumNotIn() {
        return maxClusterNumNotIn.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_MAX_CLUSTER_NUM_NOT_IN)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<List<Double>> getMaxClusterNumNotIn_JsonNullable() {
    return maxClusterNumNotIn;
  }
  
  @JsonProperty(JSON_PROPERTY_MAX_CLUSTER_NUM_NOT_IN)
  public void setMaxClusterNumNotIn_JsonNullable(JsonNullable<List<Double>> maxClusterNumNotIn) {
    this.maxClusterNumNotIn = maxClusterNumNotIn;
  }

  public void setMaxClusterNumNotIn(List<Double> maxClusterNumNotIn) {
    this.maxClusterNumNotIn = JsonNullable.<List<Double>>of(maxClusterNumNotIn);
  }


  public LicenseWhereInput NOT(List<LicenseWhereInput> NOT) {
    this.NOT = JsonNullable.<List<LicenseWhereInput>>of(NOT);
    return this;
  }

  public LicenseWhereInput addNOTItem(LicenseWhereInput NOTItem) {
    if (this.NOT == null || !this.NOT.isPresent()) {
      this.NOT = JsonNullable.<List<LicenseWhereInput>>of(new ArrayList<>());
    }
    try {
      this.NOT.get().add(NOTItem);
    } catch (java.util.NoSuchElementException e) {
      // this can never happen, as we make sure above that the value is present
    }
    return this;
  }

   /**
   * Get NOT
   * @return NOT
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public List<LicenseWhereInput> getNOT() {
        return NOT.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_N_O_T)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<List<LicenseWhereInput>> getNOT_JsonNullable() {
    return NOT;
  }
  
  @JsonProperty(JSON_PROPERTY_N_O_T)
  public void setNOT_JsonNullable(JsonNullable<List<LicenseWhereInput>> NOT) {
    this.NOT = NOT;
  }

  public void setNOT(List<LicenseWhereInput> NOT) {
    this.NOT = JsonNullable.<List<LicenseWhereInput>>of(NOT);
  }


  public LicenseWhereInput OR(List<LicenseWhereInput> OR) {
    this.OR = JsonNullable.<List<LicenseWhereInput>>of(OR);
    return this;
  }

  public LicenseWhereInput addORItem(LicenseWhereInput ORItem) {
    if (this.OR == null || !this.OR.isPresent()) {
      this.OR = JsonNullable.<List<LicenseWhereInput>>of(new ArrayList<>());
    }
    try {
      this.OR.get().add(ORItem);
    } catch (java.util.NoSuchElementException e) {
      // this can never happen, as we make sure above that the value is present
    }
    return this;
  }

   /**
   * Get OR
   * @return OR
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public List<LicenseWhereInput> getOR() {
        return OR.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_O_R)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<List<LicenseWhereInput>> getOR_JsonNullable() {
    return OR;
  }
  
  @JsonProperty(JSON_PROPERTY_O_R)
  public void setOR_JsonNullable(JsonNullable<List<LicenseWhereInput>> OR) {
    this.OR = OR;
  }

  public void setOR(List<LicenseWhereInput> OR) {
    this.OR = JsonNullable.<List<LicenseWhereInput>>of(OR);
  }


  public LicenseWhereInput signDate(String signDate) {
    this.signDate = JsonNullable.<String>of(signDate);
    return this;
  }

   /**
   * Get signDate
   * @return signDate
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getSignDate() {
        return signDate.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_SIGN_DATE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getSignDate_JsonNullable() {
    return signDate;
  }
  
  @JsonProperty(JSON_PROPERTY_SIGN_DATE)
  public void setSignDate_JsonNullable(JsonNullable<String> signDate) {
    this.signDate = signDate;
  }

  public void setSignDate(String signDate) {
    this.signDate = JsonNullable.<String>of(signDate);
  }


  public LicenseWhereInput signDateGt(String signDateGt) {
    this.signDateGt = JsonNullable.<String>of(signDateGt);
    return this;
  }

   /**
   * Get signDateGt
   * @return signDateGt
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getSignDateGt() {
        return signDateGt.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_SIGN_DATE_GT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getSignDateGt_JsonNullable() {
    return signDateGt;
  }
  
  @JsonProperty(JSON_PROPERTY_SIGN_DATE_GT)
  public void setSignDateGt_JsonNullable(JsonNullable<String> signDateGt) {
    this.signDateGt = signDateGt;
  }

  public void setSignDateGt(String signDateGt) {
    this.signDateGt = JsonNullable.<String>of(signDateGt);
  }


  public LicenseWhereInput signDateGte(String signDateGte) {
    this.signDateGte = JsonNullable.<String>of(signDateGte);
    return this;
  }

   /**
   * Get signDateGte
   * @return signDateGte
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getSignDateGte() {
        return signDateGte.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_SIGN_DATE_GTE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getSignDateGte_JsonNullable() {
    return signDateGte;
  }
  
  @JsonProperty(JSON_PROPERTY_SIGN_DATE_GTE)
  public void setSignDateGte_JsonNullable(JsonNullable<String> signDateGte) {
    this.signDateGte = signDateGte;
  }

  public void setSignDateGte(String signDateGte) {
    this.signDateGte = JsonNullable.<String>of(signDateGte);
  }


  public LicenseWhereInput signDateIn(List<String> signDateIn) {
    this.signDateIn = JsonNullable.<List<String>>of(signDateIn);
    return this;
  }

  public LicenseWhereInput addSignDateInItem(String signDateInItem) {
    if (this.signDateIn == null || !this.signDateIn.isPresent()) {
      this.signDateIn = JsonNullable.<List<String>>of(new ArrayList<>());
    }
    try {
      this.signDateIn.get().add(signDateInItem);
    } catch (java.util.NoSuchElementException e) {
      // this can never happen, as we make sure above that the value is present
    }
    return this;
  }

   /**
   * Get signDateIn
   * @return signDateIn
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public List<String> getSignDateIn() {
        return signDateIn.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_SIGN_DATE_IN)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<List<String>> getSignDateIn_JsonNullable() {
    return signDateIn;
  }
  
  @JsonProperty(JSON_PROPERTY_SIGN_DATE_IN)
  public void setSignDateIn_JsonNullable(JsonNullable<List<String>> signDateIn) {
    this.signDateIn = signDateIn;
  }

  public void setSignDateIn(List<String> signDateIn) {
    this.signDateIn = JsonNullable.<List<String>>of(signDateIn);
  }


  public LicenseWhereInput signDateLt(String signDateLt) {
    this.signDateLt = JsonNullable.<String>of(signDateLt);
    return this;
  }

   /**
   * Get signDateLt
   * @return signDateLt
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getSignDateLt() {
        return signDateLt.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_SIGN_DATE_LT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getSignDateLt_JsonNullable() {
    return signDateLt;
  }
  
  @JsonProperty(JSON_PROPERTY_SIGN_DATE_LT)
  public void setSignDateLt_JsonNullable(JsonNullable<String> signDateLt) {
    this.signDateLt = signDateLt;
  }

  public void setSignDateLt(String signDateLt) {
    this.signDateLt = JsonNullable.<String>of(signDateLt);
  }


  public LicenseWhereInput signDateLte(String signDateLte) {
    this.signDateLte = JsonNullable.<String>of(signDateLte);
    return this;
  }

   /**
   * Get signDateLte
   * @return signDateLte
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getSignDateLte() {
        return signDateLte.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_SIGN_DATE_LTE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getSignDateLte_JsonNullable() {
    return signDateLte;
  }
  
  @JsonProperty(JSON_PROPERTY_SIGN_DATE_LTE)
  public void setSignDateLte_JsonNullable(JsonNullable<String> signDateLte) {
    this.signDateLte = signDateLte;
  }

  public void setSignDateLte(String signDateLte) {
    this.signDateLte = JsonNullable.<String>of(signDateLte);
  }


  public LicenseWhereInput signDateNot(String signDateNot) {
    this.signDateNot = JsonNullable.<String>of(signDateNot);
    return this;
  }

   /**
   * Get signDateNot
   * @return signDateNot
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getSignDateNot() {
        return signDateNot.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_SIGN_DATE_NOT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getSignDateNot_JsonNullable() {
    return signDateNot;
  }
  
  @JsonProperty(JSON_PROPERTY_SIGN_DATE_NOT)
  public void setSignDateNot_JsonNullable(JsonNullable<String> signDateNot) {
    this.signDateNot = signDateNot;
  }

  public void setSignDateNot(String signDateNot) {
    this.signDateNot = JsonNullable.<String>of(signDateNot);
  }


  public LicenseWhereInput signDateNotIn(List<String> signDateNotIn) {
    this.signDateNotIn = JsonNullable.<List<String>>of(signDateNotIn);
    return this;
  }

  public LicenseWhereInput addSignDateNotInItem(String signDateNotInItem) {
    if (this.signDateNotIn == null || !this.signDateNotIn.isPresent()) {
      this.signDateNotIn = JsonNullable.<List<String>>of(new ArrayList<>());
    }
    try {
      this.signDateNotIn.get().add(signDateNotInItem);
    } catch (java.util.NoSuchElementException e) {
      // this can never happen, as we make sure above that the value is present
    }
    return this;
  }

   /**
   * Get signDateNotIn
   * @return signDateNotIn
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public List<String> getSignDateNotIn() {
        return signDateNotIn.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_SIGN_DATE_NOT_IN)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<List<String>> getSignDateNotIn_JsonNullable() {
    return signDateNotIn;
  }
  
  @JsonProperty(JSON_PROPERTY_SIGN_DATE_NOT_IN)
  public void setSignDateNotIn_JsonNullable(JsonNullable<List<String>> signDateNotIn) {
    this.signDateNotIn = signDateNotIn;
  }

  public void setSignDateNotIn(List<String> signDateNotIn) {
    this.signDateNotIn = JsonNullable.<List<String>>of(signDateNotIn);
  }


  public LicenseWhereInput softwareEdition(SoftwareEdition softwareEdition) {
    this.softwareEdition = JsonNullable.<SoftwareEdition>of(softwareEdition);
    return this;
  }

   /**
   * Get softwareEdition
   * @return softwareEdition
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public SoftwareEdition getSoftwareEdition() {
        return softwareEdition.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_SOFTWARE_EDITION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<SoftwareEdition> getSoftwareEdition_JsonNullable() {
    return softwareEdition;
  }
  
  @JsonProperty(JSON_PROPERTY_SOFTWARE_EDITION)
  public void setSoftwareEdition_JsonNullable(JsonNullable<SoftwareEdition> softwareEdition) {
    this.softwareEdition = softwareEdition;
  }

  public void setSoftwareEdition(SoftwareEdition softwareEdition) {
    this.softwareEdition = JsonNullable.<SoftwareEdition>of(softwareEdition);
  }


  public LicenseWhereInput softwareEditionIn(List<SoftwareEdition> softwareEditionIn) {
    this.softwareEditionIn = JsonNullable.<List<SoftwareEdition>>of(softwareEditionIn);
    return this;
  }

  public LicenseWhereInput addSoftwareEditionInItem(SoftwareEdition softwareEditionInItem) {
    if (this.softwareEditionIn == null || !this.softwareEditionIn.isPresent()) {
      this.softwareEditionIn = JsonNullable.<List<SoftwareEdition>>of(new ArrayList<>());
    }
    try {
      this.softwareEditionIn.get().add(softwareEditionInItem);
    } catch (java.util.NoSuchElementException e) {
      // this can never happen, as we make sure above that the value is present
    }
    return this;
  }

   /**
   * Get softwareEditionIn
   * @return softwareEditionIn
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public List<SoftwareEdition> getSoftwareEditionIn() {
        return softwareEditionIn.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_SOFTWARE_EDITION_IN)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<List<SoftwareEdition>> getSoftwareEditionIn_JsonNullable() {
    return softwareEditionIn;
  }
  
  @JsonProperty(JSON_PROPERTY_SOFTWARE_EDITION_IN)
  public void setSoftwareEditionIn_JsonNullable(JsonNullable<List<SoftwareEdition>> softwareEditionIn) {
    this.softwareEditionIn = softwareEditionIn;
  }

  public void setSoftwareEditionIn(List<SoftwareEdition> softwareEditionIn) {
    this.softwareEditionIn = JsonNullable.<List<SoftwareEdition>>of(softwareEditionIn);
  }


  public LicenseWhereInput softwareEditionNot(SoftwareEdition softwareEditionNot) {
    this.softwareEditionNot = JsonNullable.<SoftwareEdition>of(softwareEditionNot);
    return this;
  }

   /**
   * Get softwareEditionNot
   * @return softwareEditionNot
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public SoftwareEdition getSoftwareEditionNot() {
        return softwareEditionNot.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_SOFTWARE_EDITION_NOT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<SoftwareEdition> getSoftwareEditionNot_JsonNullable() {
    return softwareEditionNot;
  }
  
  @JsonProperty(JSON_PROPERTY_SOFTWARE_EDITION_NOT)
  public void setSoftwareEditionNot_JsonNullable(JsonNullable<SoftwareEdition> softwareEditionNot) {
    this.softwareEditionNot = softwareEditionNot;
  }

  public void setSoftwareEditionNot(SoftwareEdition softwareEditionNot) {
    this.softwareEditionNot = JsonNullable.<SoftwareEdition>of(softwareEditionNot);
  }


  public LicenseWhereInput softwareEditionNotIn(List<SoftwareEdition> softwareEditionNotIn) {
    this.softwareEditionNotIn = JsonNullable.<List<SoftwareEdition>>of(softwareEditionNotIn);
    return this;
  }

  public LicenseWhereInput addSoftwareEditionNotInItem(SoftwareEdition softwareEditionNotInItem) {
    if (this.softwareEditionNotIn == null || !this.softwareEditionNotIn.isPresent()) {
      this.softwareEditionNotIn = JsonNullable.<List<SoftwareEdition>>of(new ArrayList<>());
    }
    try {
      this.softwareEditionNotIn.get().add(softwareEditionNotInItem);
    } catch (java.util.NoSuchElementException e) {
      // this can never happen, as we make sure above that the value is present
    }
    return this;
  }

   /**
   * Get softwareEditionNotIn
   * @return softwareEditionNotIn
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public List<SoftwareEdition> getSoftwareEditionNotIn() {
        return softwareEditionNotIn.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_SOFTWARE_EDITION_NOT_IN)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<List<SoftwareEdition>> getSoftwareEditionNotIn_JsonNullable() {
    return softwareEditionNotIn;
  }
  
  @JsonProperty(JSON_PROPERTY_SOFTWARE_EDITION_NOT_IN)
  public void setSoftwareEditionNotIn_JsonNullable(JsonNullable<List<SoftwareEdition>> softwareEditionNotIn) {
    this.softwareEditionNotIn = softwareEditionNotIn;
  }

  public void setSoftwareEditionNotIn(List<SoftwareEdition> softwareEditionNotIn) {
    this.softwareEditionNotIn = JsonNullable.<List<SoftwareEdition>>of(softwareEditionNotIn);
  }


  public LicenseWhereInput type(LicenseType type) {
    this.type = JsonNullable.<LicenseType>of(type);
    return this;
  }

   /**
   * Get type
   * @return type
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public LicenseType getType() {
        return type.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_TYPE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<LicenseType> getType_JsonNullable() {
    return type;
  }
  
  @JsonProperty(JSON_PROPERTY_TYPE)
  public void setType_JsonNullable(JsonNullable<LicenseType> type) {
    this.type = type;
  }

  public void setType(LicenseType type) {
    this.type = JsonNullable.<LicenseType>of(type);
  }


  public LicenseWhereInput typeIn(List<LicenseType> typeIn) {
    this.typeIn = JsonNullable.<List<LicenseType>>of(typeIn);
    return this;
  }

  public LicenseWhereInput addTypeInItem(LicenseType typeInItem) {
    if (this.typeIn == null || !this.typeIn.isPresent()) {
      this.typeIn = JsonNullable.<List<LicenseType>>of(new ArrayList<>());
    }
    try {
      this.typeIn.get().add(typeInItem);
    } catch (java.util.NoSuchElementException e) {
      // this can never happen, as we make sure above that the value is present
    }
    return this;
  }

   /**
   * Get typeIn
   * @return typeIn
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public List<LicenseType> getTypeIn() {
        return typeIn.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_TYPE_IN)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<List<LicenseType>> getTypeIn_JsonNullable() {
    return typeIn;
  }
  
  @JsonProperty(JSON_PROPERTY_TYPE_IN)
  public void setTypeIn_JsonNullable(JsonNullable<List<LicenseType>> typeIn) {
    this.typeIn = typeIn;
  }

  public void setTypeIn(List<LicenseType> typeIn) {
    this.typeIn = JsonNullable.<List<LicenseType>>of(typeIn);
  }


  public LicenseWhereInput typeNot(LicenseType typeNot) {
    this.typeNot = JsonNullable.<LicenseType>of(typeNot);
    return this;
  }

   /**
   * Get typeNot
   * @return typeNot
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public LicenseType getTypeNot() {
        return typeNot.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_TYPE_NOT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<LicenseType> getTypeNot_JsonNullable() {
    return typeNot;
  }
  
  @JsonProperty(JSON_PROPERTY_TYPE_NOT)
  public void setTypeNot_JsonNullable(JsonNullable<LicenseType> typeNot) {
    this.typeNot = typeNot;
  }

  public void setTypeNot(LicenseType typeNot) {
    this.typeNot = JsonNullable.<LicenseType>of(typeNot);
  }


  public LicenseWhereInput typeNotIn(List<LicenseType> typeNotIn) {
    this.typeNotIn = JsonNullable.<List<LicenseType>>of(typeNotIn);
    return this;
  }

  public LicenseWhereInput addTypeNotInItem(LicenseType typeNotInItem) {
    if (this.typeNotIn == null || !this.typeNotIn.isPresent()) {
      this.typeNotIn = JsonNullable.<List<LicenseType>>of(new ArrayList<>());
    }
    try {
      this.typeNotIn.get().add(typeNotInItem);
    } catch (java.util.NoSuchElementException e) {
      // this can never happen, as we make sure above that the value is present
    }
    return this;
  }

   /**
   * Get typeNotIn
   * @return typeNotIn
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public List<LicenseType> getTypeNotIn() {
        return typeNotIn.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_TYPE_NOT_IN)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<List<LicenseType>> getTypeNotIn_JsonNullable() {
    return typeNotIn;
  }
  
  @JsonProperty(JSON_PROPERTY_TYPE_NOT_IN)
  public void setTypeNotIn_JsonNullable(JsonNullable<List<LicenseType>> typeNotIn) {
    this.typeNotIn = typeNotIn;
  }

  public void setTypeNotIn(List<LicenseType> typeNotIn) {
    this.typeNotIn = JsonNullable.<List<LicenseType>>of(typeNotIn);
  }


  /**
   * Return true if this LicenseWhereInput object is equal to o.
   */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    LicenseWhereInput licenseWhereInput = (LicenseWhereInput) o;
    return equalsNullable(this.AND, licenseWhereInput.AND) &&
        equalsNullable(this.expireDate, licenseWhereInput.expireDate) &&
        equalsNullable(this.expireDateGt, licenseWhereInput.expireDateGt) &&
        equalsNullable(this.expireDateGte, licenseWhereInput.expireDateGte) &&
        equalsNullable(this.expireDateIn, licenseWhereInput.expireDateIn) &&
        equalsNullable(this.expireDateLt, licenseWhereInput.expireDateLt) &&
        equalsNullable(this.expireDateLte, licenseWhereInput.expireDateLte) &&
        equalsNullable(this.expireDateNot, licenseWhereInput.expireDateNot) &&
        equalsNullable(this.expireDateNotIn, licenseWhereInput.expireDateNotIn) &&
        equalsNullable(this.id, licenseWhereInput.id) &&
        equalsNullable(this.idContains, licenseWhereInput.idContains) &&
        equalsNullable(this.idEndsWith, licenseWhereInput.idEndsWith) &&
        equalsNullable(this.idGt, licenseWhereInput.idGt) &&
        equalsNullable(this.idGte, licenseWhereInput.idGte) &&
        equalsNullable(this.idIn, licenseWhereInput.idIn) &&
        equalsNullable(this.idLt, licenseWhereInput.idLt) &&
        equalsNullable(this.idLte, licenseWhereInput.idLte) &&
        equalsNullable(this.idNot, licenseWhereInput.idNot) &&
        equalsNullable(this.idNotContains, licenseWhereInput.idNotContains) &&
        equalsNullable(this.idNotEndsWith, licenseWhereInput.idNotEndsWith) &&
        equalsNullable(this.idNotIn, licenseWhereInput.idNotIn) &&
        equalsNullable(this.idNotStartsWith, licenseWhereInput.idNotStartsWith) &&
        equalsNullable(this.idStartsWith, licenseWhereInput.idStartsWith) &&
        equalsNullable(this.licenseSerial, licenseWhereInput.licenseSerial) &&
        equalsNullable(this.licenseSerialContains, licenseWhereInput.licenseSerialContains) &&
        equalsNullable(this.licenseSerialEndsWith, licenseWhereInput.licenseSerialEndsWith) &&
        equalsNullable(this.licenseSerialGt, licenseWhereInput.licenseSerialGt) &&
        equalsNullable(this.licenseSerialGte, licenseWhereInput.licenseSerialGte) &&
        equalsNullable(this.licenseSerialIn, licenseWhereInput.licenseSerialIn) &&
        equalsNullable(this.licenseSerialLt, licenseWhereInput.licenseSerialLt) &&
        equalsNullable(this.licenseSerialLte, licenseWhereInput.licenseSerialLte) &&
        equalsNullable(this.licenseSerialNot, licenseWhereInput.licenseSerialNot) &&
        equalsNullable(this.licenseSerialNotContains, licenseWhereInput.licenseSerialNotContains) &&
        equalsNullable(this.licenseSerialNotEndsWith, licenseWhereInput.licenseSerialNotEndsWith) &&
        equalsNullable(this.licenseSerialNotIn, licenseWhereInput.licenseSerialNotIn) &&
        equalsNullable(this.licenseSerialNotStartsWith, licenseWhereInput.licenseSerialNotStartsWith) &&
        equalsNullable(this.licenseSerialStartsWith, licenseWhereInput.licenseSerialStartsWith) &&
        equalsNullable(this.maintenanceEndDate, licenseWhereInput.maintenanceEndDate) &&
        equalsNullable(this.maintenanceEndDateGt, licenseWhereInput.maintenanceEndDateGt) &&
        equalsNullable(this.maintenanceEndDateGte, licenseWhereInput.maintenanceEndDateGte) &&
        equalsNullable(this.maintenanceEndDateIn, licenseWhereInput.maintenanceEndDateIn) &&
        equalsNullable(this.maintenanceEndDateLt, licenseWhereInput.maintenanceEndDateLt) &&
        equalsNullable(this.maintenanceEndDateLte, licenseWhereInput.maintenanceEndDateLte) &&
        equalsNullable(this.maintenanceEndDateNot, licenseWhereInput.maintenanceEndDateNot) &&
        equalsNullable(this.maintenanceEndDateNotIn, licenseWhereInput.maintenanceEndDateNotIn) &&
        equalsNullable(this.maintenanceStartDate, licenseWhereInput.maintenanceStartDate) &&
        equalsNullable(this.maintenanceStartDateGt, licenseWhereInput.maintenanceStartDateGt) &&
        equalsNullable(this.maintenanceStartDateGte, licenseWhereInput.maintenanceStartDateGte) &&
        equalsNullable(this.maintenanceStartDateIn, licenseWhereInput.maintenanceStartDateIn) &&
        equalsNullable(this.maintenanceStartDateLt, licenseWhereInput.maintenanceStartDateLt) &&
        equalsNullable(this.maintenanceStartDateLte, licenseWhereInput.maintenanceStartDateLte) &&
        equalsNullable(this.maintenanceStartDateNot, licenseWhereInput.maintenanceStartDateNot) &&
        equalsNullable(this.maintenanceStartDateNotIn, licenseWhereInput.maintenanceStartDateNotIn) &&
        equalsNullable(this.maxChunkNum, licenseWhereInput.maxChunkNum) &&
        equalsNullable(this.maxChunkNumGt, licenseWhereInput.maxChunkNumGt) &&
        equalsNullable(this.maxChunkNumGte, licenseWhereInput.maxChunkNumGte) &&
        equalsNullable(this.maxChunkNumIn, licenseWhereInput.maxChunkNumIn) &&
        equalsNullable(this.maxChunkNumLt, licenseWhereInput.maxChunkNumLt) &&
        equalsNullable(this.maxChunkNumLte, licenseWhereInput.maxChunkNumLte) &&
        equalsNullable(this.maxChunkNumNot, licenseWhereInput.maxChunkNumNot) &&
        equalsNullable(this.maxChunkNumNotIn, licenseWhereInput.maxChunkNumNotIn) &&
        equalsNullable(this.maxClusterNum, licenseWhereInput.maxClusterNum) &&
        equalsNullable(this.maxClusterNumGt, licenseWhereInput.maxClusterNumGt) &&
        equalsNullable(this.maxClusterNumGte, licenseWhereInput.maxClusterNumGte) &&
        equalsNullable(this.maxClusterNumIn, licenseWhereInput.maxClusterNumIn) &&
        equalsNullable(this.maxClusterNumLt, licenseWhereInput.maxClusterNumLt) &&
        equalsNullable(this.maxClusterNumLte, licenseWhereInput.maxClusterNumLte) &&
        equalsNullable(this.maxClusterNumNot, licenseWhereInput.maxClusterNumNot) &&
        equalsNullable(this.maxClusterNumNotIn, licenseWhereInput.maxClusterNumNotIn) &&
        equalsNullable(this.NOT, licenseWhereInput.NOT) &&
        equalsNullable(this.OR, licenseWhereInput.OR) &&
        equalsNullable(this.signDate, licenseWhereInput.signDate) &&
        equalsNullable(this.signDateGt, licenseWhereInput.signDateGt) &&
        equalsNullable(this.signDateGte, licenseWhereInput.signDateGte) &&
        equalsNullable(this.signDateIn, licenseWhereInput.signDateIn) &&
        equalsNullable(this.signDateLt, licenseWhereInput.signDateLt) &&
        equalsNullable(this.signDateLte, licenseWhereInput.signDateLte) &&
        equalsNullable(this.signDateNot, licenseWhereInput.signDateNot) &&
        equalsNullable(this.signDateNotIn, licenseWhereInput.signDateNotIn) &&
        equalsNullable(this.softwareEdition, licenseWhereInput.softwareEdition) &&
        equalsNullable(this.softwareEditionIn, licenseWhereInput.softwareEditionIn) &&
        equalsNullable(this.softwareEditionNot, licenseWhereInput.softwareEditionNot) &&
        equalsNullable(this.softwareEditionNotIn, licenseWhereInput.softwareEditionNotIn) &&
        equalsNullable(this.type, licenseWhereInput.type) &&
        equalsNullable(this.typeIn, licenseWhereInput.typeIn) &&
        equalsNullable(this.typeNot, licenseWhereInput.typeNot) &&
        equalsNullable(this.typeNotIn, licenseWhereInput.typeNotIn);
  }

  private static <T> boolean equalsNullable(JsonNullable<T> a, JsonNullable<T> b) {
    return a == b || (a != null && b != null && a.isPresent() && b.isPresent() && Objects.deepEquals(a.get(), b.get()));
  }

  @Override
  public int hashCode() {
    return Objects.hash(hashCodeNullable(AND), hashCodeNullable(expireDate), hashCodeNullable(expireDateGt), hashCodeNullable(expireDateGte), hashCodeNullable(expireDateIn), hashCodeNullable(expireDateLt), hashCodeNullable(expireDateLte), hashCodeNullable(expireDateNot), hashCodeNullable(expireDateNotIn), hashCodeNullable(id), hashCodeNullable(idContains), hashCodeNullable(idEndsWith), hashCodeNullable(idGt), hashCodeNullable(idGte), hashCodeNullable(idIn), hashCodeNullable(idLt), hashCodeNullable(idLte), hashCodeNullable(idNot), hashCodeNullable(idNotContains), hashCodeNullable(idNotEndsWith), hashCodeNullable(idNotIn), hashCodeNullable(idNotStartsWith), hashCodeNullable(idStartsWith), hashCodeNullable(licenseSerial), hashCodeNullable(licenseSerialContains), hashCodeNullable(licenseSerialEndsWith), hashCodeNullable(licenseSerialGt), hashCodeNullable(licenseSerialGte), hashCodeNullable(licenseSerialIn), hashCodeNullable(licenseSerialLt), hashCodeNullable(licenseSerialLte), hashCodeNullable(licenseSerialNot), hashCodeNullable(licenseSerialNotContains), hashCodeNullable(licenseSerialNotEndsWith), hashCodeNullable(licenseSerialNotIn), hashCodeNullable(licenseSerialNotStartsWith), hashCodeNullable(licenseSerialStartsWith), hashCodeNullable(maintenanceEndDate), hashCodeNullable(maintenanceEndDateGt), hashCodeNullable(maintenanceEndDateGte), hashCodeNullable(maintenanceEndDateIn), hashCodeNullable(maintenanceEndDateLt), hashCodeNullable(maintenanceEndDateLte), hashCodeNullable(maintenanceEndDateNot), hashCodeNullable(maintenanceEndDateNotIn), hashCodeNullable(maintenanceStartDate), hashCodeNullable(maintenanceStartDateGt), hashCodeNullable(maintenanceStartDateGte), hashCodeNullable(maintenanceStartDateIn), hashCodeNullable(maintenanceStartDateLt), hashCodeNullable(maintenanceStartDateLte), hashCodeNullable(maintenanceStartDateNot), hashCodeNullable(maintenanceStartDateNotIn), hashCodeNullable(maxChunkNum), hashCodeNullable(maxChunkNumGt), hashCodeNullable(maxChunkNumGte), hashCodeNullable(maxChunkNumIn), hashCodeNullable(maxChunkNumLt), hashCodeNullable(maxChunkNumLte), hashCodeNullable(maxChunkNumNot), hashCodeNullable(maxChunkNumNotIn), hashCodeNullable(maxClusterNum), hashCodeNullable(maxClusterNumGt), hashCodeNullable(maxClusterNumGte), hashCodeNullable(maxClusterNumIn), hashCodeNullable(maxClusterNumLt), hashCodeNullable(maxClusterNumLte), hashCodeNullable(maxClusterNumNot), hashCodeNullable(maxClusterNumNotIn), hashCodeNullable(NOT), hashCodeNullable(OR), hashCodeNullable(signDate), hashCodeNullable(signDateGt), hashCodeNullable(signDateGte), hashCodeNullable(signDateIn), hashCodeNullable(signDateLt), hashCodeNullable(signDateLte), hashCodeNullable(signDateNot), hashCodeNullable(signDateNotIn), hashCodeNullable(softwareEdition), hashCodeNullable(softwareEditionIn), hashCodeNullable(softwareEditionNot), hashCodeNullable(softwareEditionNotIn), hashCodeNullable(type), hashCodeNullable(typeIn), hashCodeNullable(typeNot), hashCodeNullable(typeNotIn));
  }

  private static <T> int hashCodeNullable(JsonNullable<T> a) {
    if (a == null) {
      return 1;
    }
    return a.isPresent() ? Arrays.deepHashCode(new Object[]{a.get()}) : 31;
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class LicenseWhereInput {\n");
    sb.append("    AND: ").append(toIndentedString(AND)).append("\n");
    sb.append("    expireDate: ").append(toIndentedString(expireDate)).append("\n");
    sb.append("    expireDateGt: ").append(toIndentedString(expireDateGt)).append("\n");
    sb.append("    expireDateGte: ").append(toIndentedString(expireDateGte)).append("\n");
    sb.append("    expireDateIn: ").append(toIndentedString(expireDateIn)).append("\n");
    sb.append("    expireDateLt: ").append(toIndentedString(expireDateLt)).append("\n");
    sb.append("    expireDateLte: ").append(toIndentedString(expireDateLte)).append("\n");
    sb.append("    expireDateNot: ").append(toIndentedString(expireDateNot)).append("\n");
    sb.append("    expireDateNotIn: ").append(toIndentedString(expireDateNotIn)).append("\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    idContains: ").append(toIndentedString(idContains)).append("\n");
    sb.append("    idEndsWith: ").append(toIndentedString(idEndsWith)).append("\n");
    sb.append("    idGt: ").append(toIndentedString(idGt)).append("\n");
    sb.append("    idGte: ").append(toIndentedString(idGte)).append("\n");
    sb.append("    idIn: ").append(toIndentedString(idIn)).append("\n");
    sb.append("    idLt: ").append(toIndentedString(idLt)).append("\n");
    sb.append("    idLte: ").append(toIndentedString(idLte)).append("\n");
    sb.append("    idNot: ").append(toIndentedString(idNot)).append("\n");
    sb.append("    idNotContains: ").append(toIndentedString(idNotContains)).append("\n");
    sb.append("    idNotEndsWith: ").append(toIndentedString(idNotEndsWith)).append("\n");
    sb.append("    idNotIn: ").append(toIndentedString(idNotIn)).append("\n");
    sb.append("    idNotStartsWith: ").append(toIndentedString(idNotStartsWith)).append("\n");
    sb.append("    idStartsWith: ").append(toIndentedString(idStartsWith)).append("\n");
    sb.append("    licenseSerial: ").append(toIndentedString(licenseSerial)).append("\n");
    sb.append("    licenseSerialContains: ").append(toIndentedString(licenseSerialContains)).append("\n");
    sb.append("    licenseSerialEndsWith: ").append(toIndentedString(licenseSerialEndsWith)).append("\n");
    sb.append("    licenseSerialGt: ").append(toIndentedString(licenseSerialGt)).append("\n");
    sb.append("    licenseSerialGte: ").append(toIndentedString(licenseSerialGte)).append("\n");
    sb.append("    licenseSerialIn: ").append(toIndentedString(licenseSerialIn)).append("\n");
    sb.append("    licenseSerialLt: ").append(toIndentedString(licenseSerialLt)).append("\n");
    sb.append("    licenseSerialLte: ").append(toIndentedString(licenseSerialLte)).append("\n");
    sb.append("    licenseSerialNot: ").append(toIndentedString(licenseSerialNot)).append("\n");
    sb.append("    licenseSerialNotContains: ").append(toIndentedString(licenseSerialNotContains)).append("\n");
    sb.append("    licenseSerialNotEndsWith: ").append(toIndentedString(licenseSerialNotEndsWith)).append("\n");
    sb.append("    licenseSerialNotIn: ").append(toIndentedString(licenseSerialNotIn)).append("\n");
    sb.append("    licenseSerialNotStartsWith: ").append(toIndentedString(licenseSerialNotStartsWith)).append("\n");
    sb.append("    licenseSerialStartsWith: ").append(toIndentedString(licenseSerialStartsWith)).append("\n");
    sb.append("    maintenanceEndDate: ").append(toIndentedString(maintenanceEndDate)).append("\n");
    sb.append("    maintenanceEndDateGt: ").append(toIndentedString(maintenanceEndDateGt)).append("\n");
    sb.append("    maintenanceEndDateGte: ").append(toIndentedString(maintenanceEndDateGte)).append("\n");
    sb.append("    maintenanceEndDateIn: ").append(toIndentedString(maintenanceEndDateIn)).append("\n");
    sb.append("    maintenanceEndDateLt: ").append(toIndentedString(maintenanceEndDateLt)).append("\n");
    sb.append("    maintenanceEndDateLte: ").append(toIndentedString(maintenanceEndDateLte)).append("\n");
    sb.append("    maintenanceEndDateNot: ").append(toIndentedString(maintenanceEndDateNot)).append("\n");
    sb.append("    maintenanceEndDateNotIn: ").append(toIndentedString(maintenanceEndDateNotIn)).append("\n");
    sb.append("    maintenanceStartDate: ").append(toIndentedString(maintenanceStartDate)).append("\n");
    sb.append("    maintenanceStartDateGt: ").append(toIndentedString(maintenanceStartDateGt)).append("\n");
    sb.append("    maintenanceStartDateGte: ").append(toIndentedString(maintenanceStartDateGte)).append("\n");
    sb.append("    maintenanceStartDateIn: ").append(toIndentedString(maintenanceStartDateIn)).append("\n");
    sb.append("    maintenanceStartDateLt: ").append(toIndentedString(maintenanceStartDateLt)).append("\n");
    sb.append("    maintenanceStartDateLte: ").append(toIndentedString(maintenanceStartDateLte)).append("\n");
    sb.append("    maintenanceStartDateNot: ").append(toIndentedString(maintenanceStartDateNot)).append("\n");
    sb.append("    maintenanceStartDateNotIn: ").append(toIndentedString(maintenanceStartDateNotIn)).append("\n");
    sb.append("    maxChunkNum: ").append(toIndentedString(maxChunkNum)).append("\n");
    sb.append("    maxChunkNumGt: ").append(toIndentedString(maxChunkNumGt)).append("\n");
    sb.append("    maxChunkNumGte: ").append(toIndentedString(maxChunkNumGte)).append("\n");
    sb.append("    maxChunkNumIn: ").append(toIndentedString(maxChunkNumIn)).append("\n");
    sb.append("    maxChunkNumLt: ").append(toIndentedString(maxChunkNumLt)).append("\n");
    sb.append("    maxChunkNumLte: ").append(toIndentedString(maxChunkNumLte)).append("\n");
    sb.append("    maxChunkNumNot: ").append(toIndentedString(maxChunkNumNot)).append("\n");
    sb.append("    maxChunkNumNotIn: ").append(toIndentedString(maxChunkNumNotIn)).append("\n");
    sb.append("    maxClusterNum: ").append(toIndentedString(maxClusterNum)).append("\n");
    sb.append("    maxClusterNumGt: ").append(toIndentedString(maxClusterNumGt)).append("\n");
    sb.append("    maxClusterNumGte: ").append(toIndentedString(maxClusterNumGte)).append("\n");
    sb.append("    maxClusterNumIn: ").append(toIndentedString(maxClusterNumIn)).append("\n");
    sb.append("    maxClusterNumLt: ").append(toIndentedString(maxClusterNumLt)).append("\n");
    sb.append("    maxClusterNumLte: ").append(toIndentedString(maxClusterNumLte)).append("\n");
    sb.append("    maxClusterNumNot: ").append(toIndentedString(maxClusterNumNot)).append("\n");
    sb.append("    maxClusterNumNotIn: ").append(toIndentedString(maxClusterNumNotIn)).append("\n");
    sb.append("    NOT: ").append(toIndentedString(NOT)).append("\n");
    sb.append("    OR: ").append(toIndentedString(OR)).append("\n");
    sb.append("    signDate: ").append(toIndentedString(signDate)).append("\n");
    sb.append("    signDateGt: ").append(toIndentedString(signDateGt)).append("\n");
    sb.append("    signDateGte: ").append(toIndentedString(signDateGte)).append("\n");
    sb.append("    signDateIn: ").append(toIndentedString(signDateIn)).append("\n");
    sb.append("    signDateLt: ").append(toIndentedString(signDateLt)).append("\n");
    sb.append("    signDateLte: ").append(toIndentedString(signDateLte)).append("\n");
    sb.append("    signDateNot: ").append(toIndentedString(signDateNot)).append("\n");
    sb.append("    signDateNotIn: ").append(toIndentedString(signDateNotIn)).append("\n");
    sb.append("    softwareEdition: ").append(toIndentedString(softwareEdition)).append("\n");
    sb.append("    softwareEditionIn: ").append(toIndentedString(softwareEditionIn)).append("\n");
    sb.append("    softwareEditionNot: ").append(toIndentedString(softwareEditionNot)).append("\n");
    sb.append("    softwareEditionNotIn: ").append(toIndentedString(softwareEditionNotIn)).append("\n");
    sb.append("    type: ").append(toIndentedString(type)).append("\n");
    sb.append("    typeIn: ").append(toIndentedString(typeIn)).append("\n");
    sb.append("    typeNot: ").append(toIndentedString(typeNot)).append("\n");
    sb.append("    typeNotIn: ").append(toIndentedString(typeNotIn)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

