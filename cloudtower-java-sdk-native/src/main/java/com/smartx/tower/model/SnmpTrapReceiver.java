/*
 * Tower SDK API
 * cloudtower operation API and SDK
 *
 * The version of the OpenAPI document: 1.7.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.smartx.tower.model;

import java.util.Objects;
import java.util.Arrays;
import java.util.Map;
import java.util.HashMap;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import com.smartx.tower.model.AlertRuleCluster;
import com.smartx.tower.model.EntityAsyncStatus;
import com.smartx.tower.model.SnmpAuthProtocol;
import com.smartx.tower.model.SnmpLanguageCode;
import com.smartx.tower.model.SnmpPrivacyProtocol;
import com.smartx.tower.model.SnmpProtocol;
import com.smartx.tower.model.SnmpVersion;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import org.openapitools.jackson.nullable.JsonNullable;
import com.fasterxml.jackson.annotation.JsonIgnore;
import org.openapitools.jackson.nullable.JsonNullable;
import java.util.NoSuchElementException;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;


/**
 * SnmpTrapReceiver
 */
@JsonPropertyOrder({
  SnmpTrapReceiver.JSON_PROPERTY_AUTH_PASS_PHRASE,
  SnmpTrapReceiver.JSON_PROPERTY_AUTH_PROTOCOL,
  SnmpTrapReceiver.JSON_PROPERTY_CLUSTER,
  SnmpTrapReceiver.JSON_PROPERTY_COMMUNITY,
  SnmpTrapReceiver.JSON_PROPERTY_DISABLED,
  SnmpTrapReceiver.JSON_PROPERTY_ENGINE_ID,
  SnmpTrapReceiver.JSON_PROPERTY_ENTITY_ASYNC_STATUS,
  SnmpTrapReceiver.JSON_PROPERTY_HOST,
  SnmpTrapReceiver.JSON_PROPERTY_ID,
  SnmpTrapReceiver.JSON_PROPERTY_INFORM,
  SnmpTrapReceiver.JSON_PROPERTY_LANGUAGE_CODE,
  SnmpTrapReceiver.JSON_PROPERTY_LOCAL_ID,
  SnmpTrapReceiver.JSON_PROPERTY_NAME,
  SnmpTrapReceiver.JSON_PROPERTY_PORT,
  SnmpTrapReceiver.JSON_PROPERTY_PRIVACY_PASS_PHRASE,
  SnmpTrapReceiver.JSON_PROPERTY_PRIVACY_PROTOCOL,
  SnmpTrapReceiver.JSON_PROPERTY_PROTOCOL,
  SnmpTrapReceiver.JSON_PROPERTY_USERNAME,
  SnmpTrapReceiver.JSON_PROPERTY_VERSION
})
@javax.annotation.processing.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2021-10-27T15:59:14.939791800+08:00[Asia/Shanghai]")
public class SnmpTrapReceiver {
  public static final String JSON_PROPERTY_AUTH_PASS_PHRASE = "auth_pass_phrase";
  private JsonNullable<String> authPassPhrase = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_AUTH_PROTOCOL = "auth_protocol";
  private JsonNullable<SnmpAuthProtocol> authProtocol = JsonNullable.<SnmpAuthProtocol>undefined();

  public static final String JSON_PROPERTY_CLUSTER = "cluster";
  private AlertRuleCluster cluster;

  public static final String JSON_PROPERTY_COMMUNITY = "community";
  private JsonNullable<String> community = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_DISABLED = "disabled";
  private Boolean disabled;

  public static final String JSON_PROPERTY_ENGINE_ID = "engine_id";
  private JsonNullable<String> engineId = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_ENTITY_ASYNC_STATUS = "entityAsyncStatus";
  private JsonNullable<EntityAsyncStatus> entityAsyncStatus = JsonNullable.<EntityAsyncStatus>undefined();

  public static final String JSON_PROPERTY_HOST = "host";
  private String host;

  public static final String JSON_PROPERTY_ID = "id";
  private String id;

  public static final String JSON_PROPERTY_INFORM = "inform";
  private Boolean inform;

  public static final String JSON_PROPERTY_LANGUAGE_CODE = "language_code";
  private SnmpLanguageCode languageCode;

  public static final String JSON_PROPERTY_LOCAL_ID = "local_id";
  private String localId;

  public static final String JSON_PROPERTY_NAME = "name";
  private String name;

  public static final String JSON_PROPERTY_PORT = "port";
  private Double port;

  public static final String JSON_PROPERTY_PRIVACY_PASS_PHRASE = "privacy_pass_phrase";
  private JsonNullable<String> privacyPassPhrase = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_PRIVACY_PROTOCOL = "privacy_protocol";
  private JsonNullable<SnmpPrivacyProtocol> privacyProtocol = JsonNullable.<SnmpPrivacyProtocol>undefined();

  public static final String JSON_PROPERTY_PROTOCOL = "protocol";
  private SnmpProtocol protocol;

  public static final String JSON_PROPERTY_USERNAME = "username";
  private JsonNullable<String> username = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_VERSION = "version";
  private SnmpVersion version;


  public SnmpTrapReceiver authPassPhrase(String authPassPhrase) {
    this.authPassPhrase = JsonNullable.<String>of(authPassPhrase);
    return this;
  }

   /**
   * Get authPassPhrase
   * @return authPassPhrase
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getAuthPassPhrase() {
        return authPassPhrase.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_AUTH_PASS_PHRASE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getAuthPassPhrase_JsonNullable() {
    return authPassPhrase;
  }
  
  @JsonProperty(JSON_PROPERTY_AUTH_PASS_PHRASE)
  public void setAuthPassPhrase_JsonNullable(JsonNullable<String> authPassPhrase) {
    this.authPassPhrase = authPassPhrase;
  }

  public void setAuthPassPhrase(String authPassPhrase) {
    this.authPassPhrase = JsonNullable.<String>of(authPassPhrase);
  }


  public SnmpTrapReceiver authProtocol(SnmpAuthProtocol authProtocol) {
    this.authProtocol = JsonNullable.<SnmpAuthProtocol>of(authProtocol);
    return this;
  }

   /**
   * Get authProtocol
   * @return authProtocol
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public SnmpAuthProtocol getAuthProtocol() {
        return authProtocol.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_AUTH_PROTOCOL)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<SnmpAuthProtocol> getAuthProtocol_JsonNullable() {
    return authProtocol;
  }
  
  @JsonProperty(JSON_PROPERTY_AUTH_PROTOCOL)
  public void setAuthProtocol_JsonNullable(JsonNullable<SnmpAuthProtocol> authProtocol) {
    this.authProtocol = authProtocol;
  }

  public void setAuthProtocol(SnmpAuthProtocol authProtocol) {
    this.authProtocol = JsonNullable.<SnmpAuthProtocol>of(authProtocol);
  }


  public SnmpTrapReceiver cluster(AlertRuleCluster cluster) {
    this.cluster = cluster;
    return this;
  }

   /**
   * Get cluster
   * @return cluster
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")
  @JsonProperty(JSON_PROPERTY_CLUSTER)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public AlertRuleCluster getCluster() {
    return cluster;
  }


  @JsonProperty(JSON_PROPERTY_CLUSTER)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setCluster(AlertRuleCluster cluster) {
    this.cluster = cluster;
  }


  public SnmpTrapReceiver community(String community) {
    this.community = JsonNullable.<String>of(community);
    return this;
  }

   /**
   * Get community
   * @return community
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getCommunity() {
        return community.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_COMMUNITY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getCommunity_JsonNullable() {
    return community;
  }
  
  @JsonProperty(JSON_PROPERTY_COMMUNITY)
  public void setCommunity_JsonNullable(JsonNullable<String> community) {
    this.community = community;
  }

  public void setCommunity(String community) {
    this.community = JsonNullable.<String>of(community);
  }


  public SnmpTrapReceiver disabled(Boolean disabled) {
    this.disabled = disabled;
    return this;
  }

   /**
   * Get disabled
   * @return disabled
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")
  @JsonProperty(JSON_PROPERTY_DISABLED)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public Boolean getDisabled() {
    return disabled;
  }


  @JsonProperty(JSON_PROPERTY_DISABLED)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setDisabled(Boolean disabled) {
    this.disabled = disabled;
  }


  public SnmpTrapReceiver engineId(String engineId) {
    this.engineId = JsonNullable.<String>of(engineId);
    return this;
  }

   /**
   * Get engineId
   * @return engineId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getEngineId() {
        return engineId.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_ENGINE_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getEngineId_JsonNullable() {
    return engineId;
  }
  
  @JsonProperty(JSON_PROPERTY_ENGINE_ID)
  public void setEngineId_JsonNullable(JsonNullable<String> engineId) {
    this.engineId = engineId;
  }

  public void setEngineId(String engineId) {
    this.engineId = JsonNullable.<String>of(engineId);
  }


  public SnmpTrapReceiver entityAsyncStatus(EntityAsyncStatus entityAsyncStatus) {
    this.entityAsyncStatus = JsonNullable.<EntityAsyncStatus>of(entityAsyncStatus);
    return this;
  }

   /**
   * Get entityAsyncStatus
   * @return entityAsyncStatus
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public EntityAsyncStatus getEntityAsyncStatus() {
        return entityAsyncStatus.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_ENTITY_ASYNC_STATUS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<EntityAsyncStatus> getEntityAsyncStatus_JsonNullable() {
    return entityAsyncStatus;
  }
  
  @JsonProperty(JSON_PROPERTY_ENTITY_ASYNC_STATUS)
  public void setEntityAsyncStatus_JsonNullable(JsonNullable<EntityAsyncStatus> entityAsyncStatus) {
    this.entityAsyncStatus = entityAsyncStatus;
  }

  public void setEntityAsyncStatus(EntityAsyncStatus entityAsyncStatus) {
    this.entityAsyncStatus = JsonNullable.<EntityAsyncStatus>of(entityAsyncStatus);
  }


  public SnmpTrapReceiver host(String host) {
    this.host = host;
    return this;
  }

   /**
   * Get host
   * @return host
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")
  @JsonProperty(JSON_PROPERTY_HOST)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getHost() {
    return host;
  }


  @JsonProperty(JSON_PROPERTY_HOST)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setHost(String host) {
    this.host = host;
  }


  public SnmpTrapReceiver id(String id) {
    this.id = id;
    return this;
  }

   /**
   * Get id
   * @return id
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")
  @JsonProperty(JSON_PROPERTY_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getId() {
    return id;
  }


  @JsonProperty(JSON_PROPERTY_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setId(String id) {
    this.id = id;
  }


  public SnmpTrapReceiver inform(Boolean inform) {
    this.inform = inform;
    return this;
  }

   /**
   * Get inform
   * @return inform
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")
  @JsonProperty(JSON_PROPERTY_INFORM)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public Boolean getInform() {
    return inform;
  }


  @JsonProperty(JSON_PROPERTY_INFORM)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setInform(Boolean inform) {
    this.inform = inform;
  }


  public SnmpTrapReceiver languageCode(SnmpLanguageCode languageCode) {
    this.languageCode = languageCode;
    return this;
  }

   /**
   * Get languageCode
   * @return languageCode
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")
  @JsonProperty(JSON_PROPERTY_LANGUAGE_CODE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public SnmpLanguageCode getLanguageCode() {
    return languageCode;
  }


  @JsonProperty(JSON_PROPERTY_LANGUAGE_CODE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setLanguageCode(SnmpLanguageCode languageCode) {
    this.languageCode = languageCode;
  }


  public SnmpTrapReceiver localId(String localId) {
    this.localId = localId;
    return this;
  }

   /**
   * Get localId
   * @return localId
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")
  @JsonProperty(JSON_PROPERTY_LOCAL_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getLocalId() {
    return localId;
  }


  @JsonProperty(JSON_PROPERTY_LOCAL_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setLocalId(String localId) {
    this.localId = localId;
  }


  public SnmpTrapReceiver name(String name) {
    this.name = name;
    return this;
  }

   /**
   * Get name
   * @return name
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")
  @JsonProperty(JSON_PROPERTY_NAME)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getName() {
    return name;
  }


  @JsonProperty(JSON_PROPERTY_NAME)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setName(String name) {
    this.name = name;
  }


  public SnmpTrapReceiver port(Double port) {
    this.port = port;
    return this;
  }

   /**
   * Get port
   * @return port
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")
  @JsonProperty(JSON_PROPERTY_PORT)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public Double getPort() {
    return port;
  }


  @JsonProperty(JSON_PROPERTY_PORT)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setPort(Double port) {
    this.port = port;
  }


  public SnmpTrapReceiver privacyPassPhrase(String privacyPassPhrase) {
    this.privacyPassPhrase = JsonNullable.<String>of(privacyPassPhrase);
    return this;
  }

   /**
   * Get privacyPassPhrase
   * @return privacyPassPhrase
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getPrivacyPassPhrase() {
        return privacyPassPhrase.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_PRIVACY_PASS_PHRASE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getPrivacyPassPhrase_JsonNullable() {
    return privacyPassPhrase;
  }
  
  @JsonProperty(JSON_PROPERTY_PRIVACY_PASS_PHRASE)
  public void setPrivacyPassPhrase_JsonNullable(JsonNullable<String> privacyPassPhrase) {
    this.privacyPassPhrase = privacyPassPhrase;
  }

  public void setPrivacyPassPhrase(String privacyPassPhrase) {
    this.privacyPassPhrase = JsonNullable.<String>of(privacyPassPhrase);
  }


  public SnmpTrapReceiver privacyProtocol(SnmpPrivacyProtocol privacyProtocol) {
    this.privacyProtocol = JsonNullable.<SnmpPrivacyProtocol>of(privacyProtocol);
    return this;
  }

   /**
   * Get privacyProtocol
   * @return privacyProtocol
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public SnmpPrivacyProtocol getPrivacyProtocol() {
        return privacyProtocol.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_PRIVACY_PROTOCOL)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<SnmpPrivacyProtocol> getPrivacyProtocol_JsonNullable() {
    return privacyProtocol;
  }
  
  @JsonProperty(JSON_PROPERTY_PRIVACY_PROTOCOL)
  public void setPrivacyProtocol_JsonNullable(JsonNullable<SnmpPrivacyProtocol> privacyProtocol) {
    this.privacyProtocol = privacyProtocol;
  }

  public void setPrivacyProtocol(SnmpPrivacyProtocol privacyProtocol) {
    this.privacyProtocol = JsonNullable.<SnmpPrivacyProtocol>of(privacyProtocol);
  }


  public SnmpTrapReceiver protocol(SnmpProtocol protocol) {
    this.protocol = protocol;
    return this;
  }

   /**
   * Get protocol
   * @return protocol
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")
  @JsonProperty(JSON_PROPERTY_PROTOCOL)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public SnmpProtocol getProtocol() {
    return protocol;
  }


  @JsonProperty(JSON_PROPERTY_PROTOCOL)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setProtocol(SnmpProtocol protocol) {
    this.protocol = protocol;
  }


  public SnmpTrapReceiver username(String username) {
    this.username = JsonNullable.<String>of(username);
    return this;
  }

   /**
   * Get username
   * @return username
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getUsername() {
        return username.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_USERNAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getUsername_JsonNullable() {
    return username;
  }
  
  @JsonProperty(JSON_PROPERTY_USERNAME)
  public void setUsername_JsonNullable(JsonNullable<String> username) {
    this.username = username;
  }

  public void setUsername(String username) {
    this.username = JsonNullable.<String>of(username);
  }


  public SnmpTrapReceiver version(SnmpVersion version) {
    this.version = version;
    return this;
  }

   /**
   * Get version
   * @return version
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")
  @JsonProperty(JSON_PROPERTY_VERSION)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public SnmpVersion getVersion() {
    return version;
  }


  @JsonProperty(JSON_PROPERTY_VERSION)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setVersion(SnmpVersion version) {
    this.version = version;
  }


  /**
   * Return true if this SnmpTrapReceiver object is equal to o.
   */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    SnmpTrapReceiver snmpTrapReceiver = (SnmpTrapReceiver) o;
    return equalsNullable(this.authPassPhrase, snmpTrapReceiver.authPassPhrase) &&
        equalsNullable(this.authProtocol, snmpTrapReceiver.authProtocol) &&
        Objects.equals(this.cluster, snmpTrapReceiver.cluster) &&
        equalsNullable(this.community, snmpTrapReceiver.community) &&
        Objects.equals(this.disabled, snmpTrapReceiver.disabled) &&
        equalsNullable(this.engineId, snmpTrapReceiver.engineId) &&
        equalsNullable(this.entityAsyncStatus, snmpTrapReceiver.entityAsyncStatus) &&
        Objects.equals(this.host, snmpTrapReceiver.host) &&
        Objects.equals(this.id, snmpTrapReceiver.id) &&
        Objects.equals(this.inform, snmpTrapReceiver.inform) &&
        Objects.equals(this.languageCode, snmpTrapReceiver.languageCode) &&
        Objects.equals(this.localId, snmpTrapReceiver.localId) &&
        Objects.equals(this.name, snmpTrapReceiver.name) &&
        Objects.equals(this.port, snmpTrapReceiver.port) &&
        equalsNullable(this.privacyPassPhrase, snmpTrapReceiver.privacyPassPhrase) &&
        equalsNullable(this.privacyProtocol, snmpTrapReceiver.privacyProtocol) &&
        Objects.equals(this.protocol, snmpTrapReceiver.protocol) &&
        equalsNullable(this.username, snmpTrapReceiver.username) &&
        Objects.equals(this.version, snmpTrapReceiver.version);
  }

  private static <T> boolean equalsNullable(JsonNullable<T> a, JsonNullable<T> b) {
    return a == b || (a != null && b != null && a.isPresent() && b.isPresent() && Objects.deepEquals(a.get(), b.get()));
  }

  @Override
  public int hashCode() {
    return Objects.hash(hashCodeNullable(authPassPhrase), hashCodeNullable(authProtocol), cluster, hashCodeNullable(community), disabled, hashCodeNullable(engineId), hashCodeNullable(entityAsyncStatus), host, id, inform, languageCode, localId, name, port, hashCodeNullable(privacyPassPhrase), hashCodeNullable(privacyProtocol), protocol, hashCodeNullable(username), version);
  }

  private static <T> int hashCodeNullable(JsonNullable<T> a) {
    if (a == null) {
      return 1;
    }
    return a.isPresent() ? Arrays.deepHashCode(new Object[]{a.get()}) : 31;
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class SnmpTrapReceiver {\n");
    sb.append("    authPassPhrase: ").append(toIndentedString(authPassPhrase)).append("\n");
    sb.append("    authProtocol: ").append(toIndentedString(authProtocol)).append("\n");
    sb.append("    cluster: ").append(toIndentedString(cluster)).append("\n");
    sb.append("    community: ").append(toIndentedString(community)).append("\n");
    sb.append("    disabled: ").append(toIndentedString(disabled)).append("\n");
    sb.append("    engineId: ").append(toIndentedString(engineId)).append("\n");
    sb.append("    entityAsyncStatus: ").append(toIndentedString(entityAsyncStatus)).append("\n");
    sb.append("    host: ").append(toIndentedString(host)).append("\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    inform: ").append(toIndentedString(inform)).append("\n");
    sb.append("    languageCode: ").append(toIndentedString(languageCode)).append("\n");
    sb.append("    localId: ").append(toIndentedString(localId)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    port: ").append(toIndentedString(port)).append("\n");
    sb.append("    privacyPassPhrase: ").append(toIndentedString(privacyPassPhrase)).append("\n");
    sb.append("    privacyProtocol: ").append(toIndentedString(privacyProtocol)).append("\n");
    sb.append("    protocol: ").append(toIndentedString(protocol)).append("\n");
    sb.append("    username: ").append(toIndentedString(username)).append("\n");
    sb.append("    version: ").append(toIndentedString(version)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

